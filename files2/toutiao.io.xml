<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>35eeb43d97dcf2fd762c43bf059b37f6</guid>
<title>亿级系统的 Redis 缓存如何设计？</title>
<link>https://toutiao.io/k/ep5e8sd</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;知识分享，以技会友。大家好，我是Tom哥。阅读本文大约需要 15 分钟。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;缓存设计可谓老生常谈了，早些时候都是采用&lt;/span&gt;&lt;code&gt;&lt;span&gt;memcache&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，现在大家更多倾向使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;redis&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，除了知晓常用的数据存储类型，结合业务场景有针对性选择，好像其他也没有什么大的难点。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;工程中引入&lt;/span&gt;&lt;code&gt;&lt;span&gt;Redis Client&lt;/span&gt;&lt;/code&gt;&lt;span&gt;二方包，初始化一个Bean实例&lt;/span&gt;&lt;code&gt;&lt;span&gt;RedisTemplate&lt;/span&gt;&lt;/code&gt;&lt;span&gt; ，一切搞定，so easy。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.9938080495356038&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPpQZpRaN9mzRiccFfFfMqv6WARDspS4nEleGQ11fUhrHalunFhbxsBuMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;323&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果是几十、几百并发的业务场景，&lt;/span&gt;&lt;code&gt;&lt;span&gt;缓存设计&lt;/span&gt;&lt;/code&gt;&lt;span&gt;可能并不需要考虑那么多，但如果是亿级的系统呢？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPpOjIk3a3RsCTHSGicpgzmI5FXOn4TxhPFEd2Ticjj4Bh9220SLAMHGAmQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;512&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;首先，先了解缓存知识图谱&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;早期的缓存用于加速CPU数据交换的RAM。随着互联网的快速发展，缓存的应用更加宽泛，用于数据高速交换的存储介质都称之为缓存。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;使用缓存时，我们要关注哪些指标？缓存有哪些应用模式？以及缓存设计时有哪些Tip技巧？一图胜千言，如下：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.0949640287769784&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPpNiaSn55nyK0NLBr7xpiatpbcoqnWjCU8t8icsnIm2ZVJPiab5xNB9VtXyA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;695&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;七大经典问题&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;缓存在使用过程不可避免会遇到一些问题，对于高频的问题我们大概归为了7类。具体内容下面我们一一道来&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1、缓存集中失效&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;当业务系统查询数据时，首先会查询缓存，如果缓存中数据不存在，然后查询DB再将数据预热到&lt;/span&gt;&lt;code&gt;&lt;span&gt;Cache&lt;/span&gt;&lt;/code&gt;&lt;span&gt;中，并返回。&lt;strong&gt;缓存的性能比 DB 高 50~100 倍以上。&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.0142857142857142&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPpIRaHsw0YP16TIteNDT02RSv5tyYwe45ict0aOtfn9kwkarJXYomHj2Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;350&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;很多业务场景，如：秒杀商品、微博热搜排行、或者一些活动数据，都是通过跑任务方式，将DB数据批量、集中预热到缓存中，缓存数据有着近乎相同的&lt;/span&gt;&lt;code&gt;&lt;span&gt;过期时间&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当过这批数据过期时，&lt;/span&gt;&lt;code&gt;&lt;span&gt;会一起过期&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，此时，对这批数据的所有请求，都会出现&lt;/span&gt;&lt;code&gt;&lt;span&gt;缓存失效&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，从而将压力转嫁到DB，DB的请求量激增，压力变大，响应开始变慢。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;那么有没有解呢？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当然有了。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我们可以从&lt;/span&gt;&lt;code&gt;&lt;span&gt;缓存的过期时间入口&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，将原来的固定过期时间，调整为&lt;/span&gt;&lt;code&gt;&lt;span&gt;过期时间=基础时间+随机时间&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，让缓存慢慢过期，避免瞬间全部过期，对DB产生过大压力。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2、缓存穿透&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;不是所有的请求都能查到数据，不论是从缓存中还是DB中。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;假如黑客攻击了一个论坛，用了一堆肉鸡访问一个不存的&lt;/span&gt;&lt;code&gt;&lt;span&gt;帖子id&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。按照常规思路，每次都会先查缓存，缓存中没有，接着又查DB，同样也没有，此时不会预热到Cache中，导致每次查询，都会&lt;/span&gt;&lt;code&gt;&lt;span&gt;cache miss&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;由于DB的吞吐性能较差，会严重影响系统的性能，甚至影响正常用户的访问。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;解决方案：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案一：查存DB 时，如果数据不存在，预热一个&lt;/span&gt;&lt;code&gt;&lt;span&gt;特殊空值&lt;/span&gt;&lt;/code&gt;&lt;span&gt;到缓存中。这样，后续查询都会命中缓存，但是要对特殊值，解析处理。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案二：构造一个&lt;/span&gt;&lt;code&gt;&lt;span&gt;BloomFilter&lt;/span&gt;&lt;/code&gt;&lt;span&gt;过滤器，初始化全量数据，当接到请求时，在&lt;/span&gt;&lt;code&gt;&lt;span&gt;BloomFilter&lt;/span&gt;&lt;/code&gt;&lt;span&gt;中判断这个key是否存在，如果不存在，直接返回即可，无需再查询&lt;/span&gt;&lt;code&gt;&lt;span&gt;缓存和DB&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3、缓存雪崩&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;缓存雪崩是指部分缓存节点不可用，进而导致整个缓存体系甚至服务系统不可用的情况。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;分布式缓存设计一般选择&lt;/span&gt;&lt;code&gt;&lt;span&gt;一致性Hash&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，当有部分节点异常时，采用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;rehash&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 策略，即把异常节点请求平均分散到其他缓存节点。但是，当较大的流量洪峰到来时，如果大流量 key 比较集中，正好在某 1～2 个缓存节点，很容易将这些缓存节点的内存、网卡过载，缓存节点异常 Crash，然后这些异常节点下线，这些大流量 key 请求又被 rehash 到其他缓存节点，进而导致其他缓存节点也被过载 Crash，缓存异常持续扩散，最终导致整个缓存体系异常，无法对外提供服务。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;解决方案：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案一：增加实时监控，及时预警。通过机器替换、各种故障自动转移策略，快速恢复缓存对外的服务能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案二：缓存增加多个副本，当缓存异常时，再读取其他缓存副本。为了保证副本的可用性，尽量将多个缓存副本部署在不同机架上，降低风险。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4、缓存热点&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对于突发事件，大量用户同时去访问热点信息，这个突发热点信息所在的缓存节点就很容易出现过载和卡顿现象，甚至 Crash，我们称之为缓存热点。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.9355432780847146&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPpEbmsEkJ0Jsma2JJ2WEnJJVjABvYmsOqBrEabGub2SO5aH6cTFgdzQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;543&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这个在新浪微博经常遇到，某大V明星出轨、结婚、离婚，瞬间引发数百千万的吃瓜群众围观，访问同一个key，流量集中打在一个缓存节点机器，很容易打爆网卡、带宽、CPU的上限，最终导致缓存不可用。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;解决方案：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;首先能先找到这个&lt;/span&gt;&lt;code&gt;&lt;span&gt;热key&lt;/span&gt;&lt;/code&gt;&lt;span&gt;来，比如通过&lt;/span&gt;&lt;code&gt;&lt;span&gt;Spark&lt;/span&gt;&lt;/code&gt;&lt;span&gt;实时流分析，及时发现新的热点key。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;将集中化流量打散，避免一个缓存节点过载。由于只有一个key，我们可以在key的后面拼上&lt;/span&gt;&lt;code&gt;&lt;span&gt;有序编号&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，比如&lt;/span&gt;&lt;code&gt;&lt;span&gt;key#01&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;key#02&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。。。&lt;/span&gt;&lt;code&gt;&lt;span&gt;key#10&lt;/span&gt;&lt;/code&gt;&lt;span&gt;多个副本，这些加工后的key位于多个缓存节点上。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;每次请求时，客户端随机访问一个即可&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;可以设计一个缓存服务治理管理后台，实时监控缓存的SLA，并打通分布式配置中心，对于一些&lt;code&gt;hot key&lt;/code&gt;可以快速、动态扩容。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5、缓存大Key&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当访问缓存时，如果key对应的value过大，读写、加载很容易超时，容易引发网络拥堵。另外缓存的字段较多时，每个字段的变更都会引发缓存数据的变更，频繁的读写，导致慢查询。如果大key过期被缓存淘汰失效，预热数据要花费较多的时间，也会导致慢查询。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;所以我们在设计缓存的时候，要注意&lt;/span&gt;&lt;code&gt;&lt;span&gt;缓存的粒度&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，既不能过大，如果过大很容易导致网络拥堵；也不能过小，如果太小，查询频率会很高，每次请求都要查询多次。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;解决方案：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案一：设置一个阈值，当value的长度超过阈值时，对内容启动压缩，降低kv的大小&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案二：评估&lt;/span&gt;&lt;code&gt;&lt;span&gt;大key&lt;/span&gt;&lt;/code&gt;&lt;span&gt;所占的比例，由于很多框架采用&lt;/span&gt;&lt;code&gt;&lt;span&gt;池化技术&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，如：Memcache，可以预先分配大对象空间。真正业务请求时，直接拿来即用。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案三：颗粒划分，将大key拆分为多个小key，独立维护，成本会降低不少&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案四：大key要设置合理的过期时间，尽量不淘汰那些大key&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;6、缓存数据一致性&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;缓存是用来加速的，一般不会持久化储存。所以，一份数据通常会存在&lt;/span&gt;&lt;code&gt;&lt;span&gt;DB&lt;/span&gt;&lt;/code&gt;&lt;span&gt;和&lt;/span&gt;&lt;code&gt;&lt;span&gt;缓存&lt;/span&gt;&lt;/code&gt;&lt;span&gt;中，由此会带来一个问题，如何保证这两者的数据一致性。另外，缓存热点问题会引入多个副本备份，也可能会发生不一致现象。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5249169435215947&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPp1KtrV6wKkUEZxHHicAfQWyXGY1MkNw1NuTiczeqWOEAaxk0f9L48dC4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1204&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;解决方案：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案一：当缓存更新失败后，进行重试，如果重试失败，将失败的key写入MQ消息队列，通过异步任务补偿缓存，保证数据的一致性。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案二：设置一个较短的过期时间，通过自修复的方式，在缓存过期后，缓存重新加载最新的数据&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;7、数据并发竞争预热&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;互联网系统典型的特点就是流量大，一旦缓存中的数据过期、或因某些原因被删除等，导致缓存中的数据为空，大量的并发线程请求（查询同一个key）就会一起并发查询&lt;/span&gt;&lt;code&gt;&lt;span&gt;数据库&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，数据库的压力陡然增加。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.763302752293578&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPpEkjLW0mTEN6cheaFOG4icgpjnvv9BDeJeQwJfpOZdIVyES3ler7FT6w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1090&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果请求量非常大，全部压在数据库，可能把数据库压垮，进而导致整个系统的服务不可用。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;解决方案：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案一：引入一把&lt;/span&gt;&lt;code&gt;&lt;span&gt;全局锁&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，当缓存未命中时，先尝试获取全局锁，如果拿到锁，才有资格去查询&lt;/span&gt;&lt;code&gt;&lt;span&gt;DB&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，并将数据预热到缓存中。虽然，client端发起的请求非常多，但是由于拿不到锁，只能处于等待状态，当缓存中的数据预热成功后，再从缓存中获取&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.73359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPpj5XWY0qwbBOL0tz3Q35T9vwZd6iaWwjgtAl60OZBrfWYZLEG8u3qsQA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;为了便于理解，简单画了个流程图。这里面特别注意一个点，由于有一个并发时间差，所以会有一个二次check缓存是否有值的校验，防止缓存预热重复覆盖。&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;方案二：缓存数据创建多个备份，当一个过期失效后，可以访问其他备份。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;写在最后&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;缓存设计时，有很多技巧，优化手段也是千变万化，但是我们要抓住核心要素。那就是，让访问尽量命中缓存，同时保持数据的一致性。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;关于我：前阿里架构师，出过专利，竞赛拿过奖，CSDN博客专家，负责过电商交易、社区、营销、金融等业务，多年团队管理经验，爱思考，喜欢结交朋友&lt;/span&gt;&lt;/section&gt;&lt;h1 accuse=&quot;qTitle&quot;&gt;&lt;span&gt;&lt;span&gt;「长按」↓↓&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;↓ 二维码，拉你进群，一线大厂技术交流&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.2021660649819494&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;554&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/3Ohm6WHibeXLL4AVYEUeBKzcTZJd7mrk9XicnYiccg6n8YjsA4ibpRk6hkog7Qqx6cJNIF1rhicl992vID1IFUKWYuw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484916&amp;amp;idx=1&amp;amp;sn=31478185f22b34be227c3ec4e87a3c91&amp;amp;chksm=ceb9f95ff9ce70495829b2697aadd087140e5befba369bbd4025837bccec37e2e15768913764&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;淘宝双11千亿交易额的系统架构演变&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;淘宝双11千亿交易额的系统架构演变&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484877&amp;amp;idx=1&amp;amp;sn=869759a47c79bac553cedd827541dede&amp;amp;chksm=ceb9f966f9ce7070d4dc7c214204cf7d8d427689a40eb50dacb056ca447f0fecd35755769b35&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;淘宝订单自动确认收货的N种实现，秒杀面试官&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;淘宝订单自动确认收货的N种实现，秒杀面试官&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484869&amp;amp;idx=1&amp;amp;sn=f57664eac0e9e6677d317b6bff959276&amp;amp;chksm=ceb9f96ef9ce7078ff6783500a28afad207d2be53f9d9e0d2e0e44f72145a7562517e3dba897&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;如何设计一个高性能的秒杀系统&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;如何设计一个高性能的秒杀系统&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2193a7caa7dee9aaff719f38782140ff</guid>
<title>Java 容器：基于源码分析 List 集合体系</title>
<link>https://toutiao.io/k/0xgnpbf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1&gt;&lt;span&gt;一、容器之List集合&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p&gt;List集合体系应该是日常开发中最常用的API，而且通常是作为面试压轴问题（JVM、集合、并发），集合这块代码的整体设计也是融合很多编程思想，对于程序员来说具有很高的参考和借鉴价值。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5248868778280543&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvAM617DnPUZzc5cNY1s2iaM5ianhKfn6xK9C0Vs0OhTUB9MMDdibAFeod2Xibp2IdfrQicwzHicNoiaVwicLA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;884&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;基本要点&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;基础：元素增查删、容器信息；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;进阶：存储结构、容量管理；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;API体系&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;ArrayList：维护数组实现，查询快；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Vector：维护数组实现，线程安全；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;LinkedList：维护链表实现，增删快；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;核心特性包括：初始化与加载，元素管理，自动扩容，数组和链表两种数据结构。Vector底层基于ArrayList实现的线程安全操作，而ArrayList与LinkedList属于非线程安全操作，自然效率相比Vector会高，这个是通过源码阅读可以发现的特点。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;二、ArrayList详解&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;1、数组特点&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;ArrayList就是集合体系中List接口的具体实现类，底层维护Object数组来进行装载和管理数据：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Object[] EMPTY_ELEMENTDATA = {};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;提到数组结构，潜意识的就是基于元素对应的索引查询，所以速度快，如果删除元素，可能会导致大量元素移动，所以相对于LinkedList效率较低。&lt;/p&gt;&lt;p&gt;数组存储的机制：&lt;/p&gt;&lt;p&gt;数组属于是紧凑连续型存储，通过下标索引可以随机访问并快速找到对应元素，因为有预先开辟内存空间的机制，所以相对节约存储空间，如果数组一旦需要扩容，则重新开辟一块更大的内存空间，再把数据全部复制过去，效率会非常的低下。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;2、构造方法&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;这里主要看两个构造方法：&lt;/p&gt;&lt;p&gt;无参构造器：初始化ArrayList，声明一个空数组。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;ArrayList&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;this&lt;/span&gt;.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有参构造器：传入容量参数大于0，则设置数组的长度。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;ArrayList&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; initialCapacity)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (initialCapacity &amp;gt; &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.elementData = &lt;span&gt;new&lt;/span&gt; Object[initialCapacity];&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (initialCapacity == &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.elementData = EMPTY_ELEMENTDATA;&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span&gt;&quot;Illegal Capacity: &quot;&lt;/span&gt;+initialCapacity);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果没通过构造方法指定数组长度，则采用默认数组长度，在添加元素的操作中会设置数组容量。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; DEFAULT_CAPACITY = &lt;span&gt;10&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;3、装载数据&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;通过上面的分析，可以知道数组是有容量限制的，但是ArrayList却可以一直装载元素，当然也是有边界值的，只是通常不会装载那么多元素：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;private static final int MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;超过这个限制会抛出内存溢出的错误。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;装载元素&lt;/strong&gt;：会判断容量是否足够；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;add&lt;/span&gt;&lt;span&gt;(E e)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    ensureCapacityInternal(size + &lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;    elementData[size++] = e;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当容量不够时，会进行&lt;strong&gt;扩容&lt;/strong&gt;操作，这里贴量化关键源码：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;grow&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; minCapacity)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; oldCapacity = elementData.length;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; newCapacity = oldCapacity + (oldCapacity &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;    elementData = Arrays.copyOf(elementData, newCapacity);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;机制：计算新容量(newCapacity=15)，拷贝一个新数组，设置容量为newCapacity。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;指定位置添加&lt;/strong&gt;：这个方法很少使用到，同样看两行关键代码；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;add&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; index, E element)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    ensureCapacityInternal(size + &lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;    System.arraycopy(elementData, index,elementData,index+&lt;span&gt;1&lt;/span&gt;,size-index);&lt;br/&gt;    elementData[index] = element;&lt;br/&gt;    size++;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;机制：判断数组容量，然后就是很直接的一个数组拷贝操作，简单来个图解：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5010224948875256&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvAM617DnPUZzc5cNY1s2iaM5s9icOQEbqy8waJNwxtFqgOY1K1tLd75trAG99jZGAUlcsDDDJ1XpyxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;978&quot;/&gt;&lt;/p&gt;&lt;p&gt;如上图，假设在index=1位置放入元素E，按照如下过程运行：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;获取数组index到结束位置的长度；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;拷贝到index+1的位置；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;原来index位置，放入element元素；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这个过程就好比排队，如果在首位插入一位，即后面的全部后退一位，效率自然低下，当然这里也并不是绝对的，如果移动的数组长度够小，或者一直在末尾添加，效率的影响自然就降低很多。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;4、移除数据&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;上面看的数据装载，那与之相反的逻辑再看一下，依旧看几行关键源码：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; E &lt;span&gt;remove&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; index)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    E oldValue = elementData(index);&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; numMoved = size - index - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (numMoved &amp;gt; &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;        System.arraycopy(elementData, index+&lt;span&gt;1&lt;/span&gt;, elementData, index, numMoved);&lt;br/&gt;    }&lt;br/&gt;    elementData[--size] = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; oldValue;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;机制：从逻辑上看，与添加元素的机制差不多，即把添加位置之后的元素拷贝到index开始的位置，这个逻辑在排队中好比前面离开一位，后面的队列整体都前进一位。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5589430894308943&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvAM617DnPUZzc5cNY1s2iaM5sS7DOSTdrOHlId4nOmPaNPjmOB98xVcGv9IL3wcnnm3ymvemicckymQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;984&quot;/&gt;&lt;/p&gt;&lt;p&gt;其效率问题也是一样，如果移除集合的首位元素，后面所有元素都要移动，移除元素的位置越靠后，效率影响就相对降低。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;5、容量与数量&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;在集合的源码中，有两个关键字段需要明确一下：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;capacity&lt;/strong&gt;：集合的容量，装载能力；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;size&lt;/strong&gt;：容器中装载元素的个数；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;通常容器大小获取的是size，即装载元素个数，不断装载元素触发扩容机制，capacity容量才会改变。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;三、LinkedList详解&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;1、链表结构特点&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;链表结构存储在物理单元上非连续、非顺序，节点元素间的逻辑顺序是通过链表中的指针链接次序实现的。链表由一系列节点组成，节点可以在运行时动态生成，节点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5268595041322314&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvAM617DnPUZzc5cNY1s2iaM5xicjY7SSEyLJPTLEZ8bCFYZvRKcojA8NCL8xBGrnurzAFxSmno8d0Qg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;968&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;特点描述&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;物理存储上是无序且不连续的；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;链表是由多个节点以链式结构组成；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;逻辑层面上看形成一个有序的链路结构；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;首节点没有指向上个节点的地址；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;尾节点没有指向下个节点的地址；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;链表结构解决数组存储需要预先知道元素个数的缺陷，可以充分利用内存空间，实现灵活的内存动态管理。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;2、LinkedList结构&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;LinkedList底层数据存储结构正是基于链表实现，首先看下节点的描述：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Node&lt;/span&gt;&amp;lt;&lt;span&gt;E&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;    E item;&lt;br/&gt;    Node&amp;lt;E&amp;gt; next;&lt;br/&gt;    Node&amp;lt;E&amp;gt; prev;&lt;br/&gt;    Node(Node&amp;lt;E&amp;gt; prev, E element, Node&amp;lt;E&amp;gt; next) {&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.item = element;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.next = next;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.prev = prev;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在LinkedList中定义静态类&lt;code&gt;Node&lt;/code&gt;描述节点的结构：元素、前后指针。在LinkedList类中定义三个核心变量：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;transient&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; size = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;transient&lt;/span&gt; Node&amp;lt;E&amp;gt; first;&lt;br/&gt;&lt;span&gt;transient&lt;/span&gt; Node&amp;lt;E&amp;gt; last;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即大小，首位节点，关于这个三个变量的描述在源码的注释上已经写的非常清楚了：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5872756933115824&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvAM617DnPUZzc5cNY1s2iaM5mtVC7RrgDYHgicq75tYaciaIrfX3zn0o36VTwf6VaAXZ5Cd1OibW277vg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1226&quot;/&gt;&lt;/p&gt;&lt;p&gt;首节点上个节点为null，尾节点下个节点为null，并且item不为null。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;3、元素管理&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;LinkedList一大特点即元素增加和删除的效率高，根据链表的结构特点来看源码。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;添加元素&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;通过源码可以看到，添加元素时实际调用的是该方法，把新添加的元素放在原链表最后一位：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;void&lt;/span&gt; &lt;span&gt;linkLast&lt;/span&gt;&lt;span&gt;(E e)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; Node&amp;lt;E&amp;gt; l = last;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; Node&amp;lt;E&amp;gt; newNode = &lt;span&gt;new&lt;/span&gt; Node&amp;lt;&amp;gt;(l, e, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;    last = newNode;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (l == &lt;span&gt;null&lt;/span&gt;)&lt;br/&gt;        first = newNode;&lt;br/&gt;    &lt;span&gt;else&lt;/span&gt;&lt;br/&gt;        l.next = newNode;&lt;br/&gt;    size++;&lt;br/&gt;    modCount++;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结合&lt;code&gt;Node&lt;/code&gt;类的构造方法，实际的操作如下图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5257731958762887&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCIW6O8d07VZo8JkPNsXdnQR4wugrOfcydcVU2S8CADjk1K68yMnrAibdXoqZH6X6kJekiaiaF7Vq0BQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;970&quot;/&gt;&lt;/p&gt;&lt;p&gt;核心的逻辑即：新的尾节点和旧的尾节点构建指针关系，并处理首位节点变量。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;删除元素&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;删除元素可以根据元素对象或者元素index删除，最后核心都是执行&lt;code&gt;unlink&lt;/code&gt;方法：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;E &lt;span&gt;unlink&lt;/span&gt;&lt;span&gt;(Node&amp;lt;E&amp;gt; x)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; E element = x.item;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; Node&amp;lt;E&amp;gt; next = x.next;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; Node&amp;lt;E&amp;gt; prev = x.prev;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (prev == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;        first = next;&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        prev.next = next;&lt;br/&gt;        x.prev = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (next == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;        last = prev;&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        next.prev = prev;&lt;br/&gt;        x.next = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;    x.item = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;    size--;&lt;br/&gt;    modCount++;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; element;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;与添加元素核心逻辑相似，也是一个重新构建节点指针的过程：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5670103092783505&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvAM617DnPUZzc5cNY1s2iaM5ezFFVHDVOZYHhgNKQ1sIqCQVJ2h1TOibIaX6wj0tB8eOTZazxOAe0wQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;970&quot;/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;两个if判断是否删除的是首位节点；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;删除节点的上个节点的next指向删除节点的next节点；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;删除节点的下个节点的prev指向删除节点的prev节点；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;通过增删方法的源码分析，可以看到LinkedList对元素的增删并不会涉及大规模的元素移动，影响的节点非常少，效率自然相对ArrayList高很多。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;4、查询方法&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;基于链表结构存储而非数组，对元素查询的效率会有很大影响，先看源码：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; E &lt;span&gt;get&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; index)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    checkElementIndex(index);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; node(index).item;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;Node&amp;lt;E&amp;gt; &lt;span&gt;node&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; index)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (index &amp;lt; (size &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;)) {&lt;br/&gt;        Node&amp;lt;E&amp;gt; x = first;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; index; i++)&lt;br/&gt;            x = x.next;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; x;&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        Node&amp;lt;E&amp;gt; x = last;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = size - &lt;span&gt;1&lt;/span&gt;; i &amp;gt; index; i--)&lt;br/&gt;            x = x.prev;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; x;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这段源码结合LinkedList结构看，真的是极具策略性：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;首先是对index的合法性校验；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;然后判断index在链表的上半段还是下半段；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果在链表上半段：从first节点顺序遍历；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果在链表下半段：从last节点倒序遍历；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;通过上面的源码可以看到，查询LinkedList中靠中间位置的元素，需要执行的遍历的次数越多，效率也就越低，所以LinkedList相对更适合查询首位元素。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;四、源代码地址&lt;/span&gt;&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;GitHub·地址&lt;br/&gt;https://github.com/cicadasmile/java-base-parent&lt;br/&gt;GitEE·地址&lt;br/&gt;https://gitee.com/cicadasmile/java-base-parent&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4Njg0MzYwNw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvBCuF3zfJnqPKpUia4wfn1FUtTHpxxkR5HvbicPgOjibPicX0goMOkny1NdkLAJvBaqrYh3UdwMjiaDQMA/0?wx_fmt=png&quot; data-nickname=&quot;知了一笑&quot; data-alias=&quot;cicada_smile&quot; data-signature=&quot;积累是一个孤独且枯燥的过程&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>40665343e9547e4bf4121df771fab30f</guid>
<title>App 安全合规</title>
<link>https://toutiao.io/k/8fcktmr</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;点击上方&lt;span data-mid=&quot;&quot;&gt;蓝字&lt;/span&gt;关注我们&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxODkyODE0Mg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7UTRRQFR4CwawI4l5emtHzyT9ib2NUPksicjXcnRdko2mbaFwDBKMPg3k5YNzvpxgbOlJT7oOdMxvg/0?wx_fmt=png&quot; data-nickname=&quot;小道安全&quot; data-alias=&quot;kdsafety&quot; data-signature=&quot;以安全开发、逆向破解、黑客技术、病毒技术、灰黑产攻防为基础，兼论程序研发相关的技术点滴分享。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;背景介绍&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;APP安全合规的监管机构：APP违法违规收集使用个人信息治理工作组(APP治理小组)、工业和信息化部信息通讯管理局(工信部)、国家移动互联网应用安全管理中心(病毒中心)、地方通信局、地方网安。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;具体执行APP合规检测和产出报告的是和网安合作的公安部三所下面的一个实验室，简称叫公计检，全称是：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;公安部计算机信息系统安全产品质量监督检验中心&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;对APP的安全合规检测主要还是通过采购第三方的APP漏洞扫描工具（目前第三方漏洞扫描产品有：爱加密、梆梆、网易、几维、360等）APP扫描，然后出详细报告，在通过扫描得出的报告进行做对应的应对方案。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;安卓安全合规的违规处理方式：通告---&amp;gt;罚款---&amp;gt;应用下架---&amp;gt;停业整顿。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;App安全合规目前主要采用的是通告手段，虽然不会造成经济损失，但是会给公司带来一定的经营风险。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;安卓合规为什么会比苹果更严峻？&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr4QVbnqVia4dWiaajVl8iaebHdm1CcGfnBibAibs2Zaqk91yb2l4QOcPMlt2An3YxD6CS6eia9zuYicAz61g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.4896907216494845&quot; data-w=&quot;970&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;安卓应用的安全合规面临主要问题？&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;（以下只是列出APP安全合规面临最突出的10个问题）&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr4QVbnqVia4dWiaajVl8iaebHdx32PPezaZ6YceVAduJLlziaap2RJJvn7YpAl9HRRtv3kzZuBAAuXqTQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.9866369710467706&quot; data-w=&quot;449&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;个人隐私安全合规&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;个人隐私合规主要细分为如下的六个大方向，这也是开发APP应用需要重点关注和处理好的个人隐私合规的问题。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr4QVbnqVia4dWiaajVl8iaebHd93RMmeb0OYTduWeBnKTb8x2OQia1b09icNiaKaUySx9sibbh7pWrEoeMxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.8427762039660056&quot; data-w=&quot;706&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;敏感权限合规&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;以下是在开发APP应用上会遇到的权限问题，那么对于这些敏感的权限，安全合规的做法就是通过采用&lt;/span&gt;&lt;strong&gt;&lt;span&gt;渐进授权方式&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;进行申请权限。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr4QVbnqVia4dWiaajVl8iaebHdAVItDib2YMvE0ibNXZrCOM5bhJiclYF5zCGnyJxcicnCia0zyXNra0NXzxg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6099893730074389&quot; data-w=&quot;941&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;加解密算法安全合规&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr4QVbnqVia4dWiaajVl8iaebHd7WKS8JibMqxqhOce9ibBBG7na5Q5MBk4baTTJS65WeiakZpJX6J5yXnyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6518771331058021&quot; data-w=&quot;879&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;数据存储安全合规&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr4QVbnqVia4dWiaajVl8iaebHd3tspM6PpMdkx06kh2mJfn8x5LU53kLJNjLdam6xN5ib513Nha5icHSJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.514456630109671&quot; data-w=&quot;1003&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;APP应用安全合规需要关注问题&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;在开发并上架APP项目时需要重点关注：程序自身保护安全、运行环境安全、身份认证安全、数据存储安全、内部组件安全、恶意攻击安全这六大问题。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr4QVbnqVia4dWiaajVl8iaebHdXTy29HhJKr1IVian6ewdU72BC6P0j9fAHGZGlMbu20XGFplicF30zPug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6390449438202247&quot; data-w=&quot;712&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;APP如何做好基础防护？&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;为了让我们开发的APP能过安全合规检测，我们需要重点关注如下五点，让我们的APP更加安全。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr4QVbnqVia4dWiaajVl8iaebHdiaIu6Tr6iam6iapC6ucSKY3sTqFC5hrsbugBQ9CO0hPTlk0h3ib7XFI9HA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.608604407135362&quot; data-w=&quot;953&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;APP安全合规建设的思考&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;安全开发人员&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：熟悉负责的产品功能、了解个人 信息采集、使用和展示定制个人隐私政策，并对组员以及APP开发团队&lt;strong&gt;进行安全合规的要求以及做法进行做宣传以及安全合规应用和监督把控&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;软件开发人员&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：熟悉了解APP应用客户端安全合规所涉及的技术信息，避免出现安全漏洞。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;QA&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：根据安全合规的标准进行做验证测试，严格把控APP安全质量，守好APP应用上架的最后一道防线。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.8115942028985508&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lnFIXIfFsT6oH2yzXuiby1ZZX9rtqKHpSwct1EwMpJ5P8tIJFWR2Lwg08BicSWoyJIdBibs23tSPAicLg0zt7hrkibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;138&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;End&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.028037383177570093&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_svg/XYrRG5UShDeGibNoQZgXicJOW4Ss1q8yN1xRqONKKlPnGh7dvAdcvuT8tYuGSeDJibicszI0CZPShu9UtRnEvA9shbglGps4fucP/640?wx_fmt=svg&quot; data-type=&quot;svg&quot; data-w=&quot;107&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.17647058823529413&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_svg/9UjCmequjUickLicqdUmtavXkUejKTHRF28k1CiayichS5TGzHLfAOF0UjWRmTaolibeFRpZQ5XOG0zEvfZZOGeJTVgRYZ3VvDDNZ/640?wx_fmt=svg&quot; data-type=&quot;svg&quot; data-w=&quot;17&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;点个&lt;span data-mid=&quot;&quot;&gt;赞 &lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span data-mid=&quot;&quot;&gt; 在看&lt;/span&gt;你最好看&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.0434782608695652&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_svg/ylRhrSjQb8jeDpnF88X2eeSg1lzyKxW6EO1zSCZC3wCLAdPNomrSgTBWpHcGxxGNQTXbTC82mySYiaKThz99VBqX7t3uSBcrU/640?wx_fmt=svg&quot; data-type=&quot;svg&quot; data-w=&quot;23&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ad9aad2a844bc301a62903af53f2c213</guid>
<title>这款远程桌面软件开源了</title>
<link>https://toutiao.io/k/osge9c2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;相信在七八年前，大部分读者都使用 QQ 远程控制电脑。&lt;span&gt;到后面，才接触到一些好用的远程控制产品，比如 Teamviewer、向日葵等。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;最近，自己装的远程控制产品试用期到了，便想到去 GitHub 找找有没有可以替代的开源项目，还真找到了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;今天推荐的是基于 Rust 编写的开源远程桌面客户端软件，刚刚开源没多久，近几天还在更新。这个开源远程工具开箱即用，无需进行额外的配置。是 TeamViewer 和向日葵的绝佳替代品。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这个开源产品支持 Windows 、Linux、MacOS 系统，界面简洁漂亮。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6505376344086021&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruwwekbg6iaG87QtoveRSwvRB4Z5XUVOlelLvp00XBusmvIia4qTB1K5lcm0Myy60DvBsByLUdWyzobQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;930&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6513409961685823&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruwwekbg6iaG87QtoveRSwvRBibr28LPCqUzk7VSO2iaRffqO8U6kibTNDQZDwhnmo1TfZ646jgMGo9lXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1305&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5422885572139303&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruwwekbg6iaG87QtoveRSwvRB9kudvoMDMIGBp7W5t73BU7CXBn3AFmyNnmqwQfs6fP6k3L9jNRgyow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1206&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6652719665271967&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruwwekbg6iaG87QtoveRSwvRBhPLguiaRMDKur2KTepYF3exv6NsiaDicZPSPKgPevGJNow4MmBUmbxBOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;956&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;如何下载？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1. 下载安装包：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;https://github.com/rustdesk/rustdesk/releases&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;或者 https://rustdesk.com/zh/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4063926940639269&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruwwekbg6iaG87QtoveRSwvRBzDLgRZgVOyib4TfSKZFicHBsPufbEwpJ1OSfJwic3gyVU5H74o3twHdzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2628&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2. 安装依赖：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;桌面版本使用到 sciter 依赖，请通过下方链接自行下载 sciter 动态库。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;p&gt;&lt;span&gt;Windows：http&lt;span&gt;s:&lt;/span&gt;//github.&lt;span&gt;com&lt;/span&gt;/&lt;span&gt;c&lt;/span&gt;-smile/sciter-sdk/blob/dc65744b66389cd5a0ff6bdb7c63a8b7b05a708b/bin.win/x64/sciter.dll&lt;br mpa-from-tpl=&quot;t&quot;/&gt;Linux：http&lt;span&gt;s:&lt;/span&gt;//github.&lt;span&gt;com&lt;/span&gt;/&lt;span&gt;c&lt;/span&gt;-smile/sciter-sdk/raw/dc65744b66389cd5a0ff6bdb7c63a8b7b05a708b/bin.lnx/x64/libsciter-gtk.&lt;span&gt;so&lt;/span&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;MacOS：http&lt;span&gt;s:&lt;/span&gt;//github.&lt;span&gt;com&lt;/span&gt;/&lt;span&gt;c&lt;/span&gt;-smile/sciter-sdk/raw/dc65744b66389cd5a0ff6bdb7c63a8b7b05a708b/bin.osx/sciter-osx-&lt;span&gt;64&lt;/span&gt;.dylib&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;3. 运行&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;运行前需要准备的 Rust 开发环境和 C ++ 构建环境，需要&lt;span&gt;安装&lt;span&gt;命令行包管理工具&lt;/span&gt; vcpkg，并正确设置 VCPKG_ROOT env 变量&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;安装 vcpkg：https://github.com/microsoft/vcpkg&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Windows: vcpkg install libvpx:x64-windows-static libyuv:x64-windows-static opus:x64-windows-static&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Linux/Osx: vcpkg install libvpx libyuv opus&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;然后，运行命令 &lt;span&gt;cargo run &lt;/span&gt;&lt;/span&gt;&lt;span&gt;就行了。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;最后，防止找不到本篇文章，可以收藏点赞，方便翻阅查找。&lt;/strong&gt;欢迎关注公众号 逛逛GitHub（ggGithub）。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;1. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498662&amp;amp;idx=1&amp;amp;sn=0087c4f3b79ba3420e917e9b42d45eda&amp;amp;chksm=f9a2286fced5a1794eb9a73d0be7c2e16eaceabf3a0420647c40cb4202bd116d9a15dd57c008&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498662&amp;amp;idx=1&amp;amp;sn=0087c4f3b79ba3420e917e9b42d45eda&amp;amp;chksm=f9a2286fced5a1794eb9a73d0be7c2e16eaceabf3a0420647c40cb4202bd116d9a15dd57c008&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;GitHub上有哪些好玩的开源项目？&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;2. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498623&amp;amp;idx=1&amp;amp;sn=db03b9dc47eeda28e8a5f41f223705c4&amp;amp;chksm=f9a228b6ced5a1a07a31ff40d67535f452ee8c609fcdbcea8eab3081fa9120c6238d30f28cfe&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498623&amp;amp;idx=1&amp;amp;sn=db03b9dc47eeda28e8a5f41f223705c4&amp;amp;chksm=f9a228b6ced5a1a07a31ff40d67535f452ee8c609fcdbcea8eab3081fa9120c6238d30f28cfe&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/em&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498623&amp;amp;idx=1&amp;amp;sn=db03b9dc47eeda28e8a5f41f223705c4&amp;amp;chksm=f9a228b6ced5a1a07a31ff40d67535f452ee8c609fcdbcea8eab3081fa9120c6238d30f28cfe&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;基于 Spring Boot 的停车场管理系统&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498204&amp;amp;idx=1&amp;amp;sn=fbcd9dcedc3ffd82169650f46a1dec53&amp;amp;chksm=f9a22a15ced5a30307dcfb4e606ff29eff91e274d3810d73c71409b1dc648c1824864c0f226e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;3. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498464&amp;amp;idx=1&amp;amp;sn=4f85123d6ca67578ca7bad8f7dc71453&amp;amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498464&amp;amp;idx=1&amp;amp;sn=4f85123d6ca67578ca7bad8f7dc71453&amp;amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498464&amp;amp;idx=1&amp;amp;sn=4f85123d6ca67578ca7bad8f7dc71453&amp;amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;盘点百度 4 个牛逼哄哄的开源项目&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;4. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498440&amp;amp;idx=1&amp;amp;sn=19b48002eeeed367f70270d7652f9203&amp;amp;chksm=f9a22901ced5a017e5e32bb51b8650dd7063416119552a676c34be4a94302073c196666b4097&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498440&amp;amp;idx=1&amp;amp;sn=19b48002eeeed367f70270d7652f9203&amp;amp;chksm=f9a22901ced5a017e5e32bb51b8650dd7063416119552a676c34be4a94302073c196666b4097&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498440&amp;amp;idx=1&amp;amp;sn=19b48002eeeed367f70270d7652f9203&amp;amp;chksm=f9a22901ced5a017e5e32bb51b8650dd7063416119552a676c34be4a94302073c196666b4097&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;这个 GitHub 项目能克隆你的声音&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;172&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;172&quot; data-ratio=&quot;1.005449591280654&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;734&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruxW7LMX2Iz5DfjRIbFTS7UROhxibBmicicT0HpjIh1yniaJJibSnLFuicMHRx5NEdiaOh2OOACfr6MvR38ibQ/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>472a725ed9a5a88585423b2c5acb83be</guid>
<title>图算法系列之深度优先搜索（二）</title>
<link>https://toutiao.io/k/5ode4ev</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;吐血整理程序员必读书单：https://github.com/silently9527/ProgrammerBooks&lt;/p&gt;&lt;p&gt;微信公众号：贝塔学Java&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在上篇中我们学习了深度优先搜索，知道了如何通过深度优先搜索在图中寻找路径；本篇我们继续一起来学习深度优先搜索算法的其他应用场景&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;连通分量&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从一幅图中找出所有的连通分量，这是也是深度优先搜索的一个应用场景。什么是连通分量？这个定义在之前的文章中已有提到《如何检测社交网络中两个人是否是朋友关系（union-find算法）》&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这篇采用的是union-find算法实现的连通性检查，本篇我们将采用深度优先搜索的方式来找出图中的所有连通分量&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;连通分量的API定义&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public class DepthFirstCC {&lt;br/&gt;    public DepthFirstCC(Graph graph); &lt;br/&gt;    &lt;br/&gt;    public boolean connected(int v, int w); //检查两个顶点是否连通&lt;br/&gt;&lt;br/&gt;    public int count(); //统计连通分量的总数&lt;br/&gt;&lt;br/&gt;    public int id(int v); //顶点v所在连通分量的标识&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;连通分量的API实现&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;与之前一样没扫描到一个顶点我们就需要标记这个顶点，所以依然需要定义一个marked[]数组&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了统计出图中总共有多少连通分量，所以需要定义一个变量count&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了判断两个顶点是否相连，我们需要把相连的顶点对应的标识值记录成相同值，当在调用connected方法的时候直接取出两个顶点的标识值比较，如果相同就是连通的，否则就是非连通；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个的标识值我们使用的是count的值，每个顶点都需要存一个标识值，所以还需要一个ids[]数组。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public class DepthFirstCC {&lt;br/&gt;    private boolean marked[];&lt;br/&gt;    private int count;&lt;br/&gt;    private int[] ids;&lt;br/&gt;&lt;br/&gt;    public DepthFirstCC(Graph graph) {&lt;br/&gt;        this.marked = new boolean[graph.V()];&lt;br/&gt;        this.ids = new int[graph.V()];&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (int v = 0; v &amp;lt; graph.V(); v++) {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (!this.marked[v]) {&lt;br/&gt;                dfs(graph, v);&lt;br/&gt;                count++;&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    private void dfs(Graph graph, int v) {&lt;br/&gt;        this.marked[v] = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;        this.ids[v] = count;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (int w : graph.adj(v)) {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (!this.marked[w]) {&lt;br/&gt;                dfs(graph, w);&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    public boolean connected(int v, int w) {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; id(v) == id(w);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    public int &lt;span&gt;&lt;span&gt;count&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; count;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    public int id(int v) {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; ids[v];&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;单元测试&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6698113207547169&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ggRgNal7zG9mnJia6x2CpwuL17XibKyz4rDE3KvwsQHf9qjA8xoH7IrUwLjLPPnZ4ricskwGXrcIhH7LibXJZgLkhw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;424&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;构造这样一个图，连通分量的总数应该是3&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@Test&lt;br/&gt;public void &lt;span&gt;&lt;span&gt;test&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    Graph graph = new Graph(10);&lt;br/&gt;    graph.addEdge(0, 1);&lt;br/&gt;    graph.addEdge(0, 2);&lt;br/&gt;    graph.addEdge(0, 5);&lt;br/&gt;    graph.addEdge(1, 3);&lt;br/&gt;    graph.addEdge(2, 4);&lt;br/&gt;    graph.addEdge(4, 3);&lt;br/&gt;    graph.addEdge(5, 3);&lt;br/&gt;&lt;br/&gt;    graph.addEdge(6, 7);&lt;br/&gt;&lt;br/&gt;    graph.addEdge(8, 9);&lt;br/&gt;&lt;br/&gt;    DepthFirstCC cc = new DepthFirstCC(graph);&lt;br/&gt;&lt;br/&gt;    System.out.println(cc.connected(0,5));&lt;br/&gt;    System.out.println(cc.connected(1,2));&lt;br/&gt;&lt;br/&gt;    System.out.println(cc.count());&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4086444007858546&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ggRgNal7zG9mnJia6x2CpwuL17XibKyz4rmpKA5OFElGp3foCianRksjBpmQe33Fp6vrIgEuNdBTLDfHL7hrCFibXg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;509&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于深度优先搜索实现的连通性检查理论上说要比以前实现的union-find算法更快，因为检查连通性深度优先搜索实现的版本能够保证在常量时间内完成，而union-find算法不行；&lt;/p&gt;&lt;p&gt;但是union-find也有自己的优势: 不需要把完整的构造并表示一张图，更重要的是union-find算法是动态的添加节点。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;检查无向图中是否有环&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了减小实现的复杂度，我们假设图中不存在自环和平行边；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如从顶点v出发存在环，表示从顶点v出发的连通分量中某个顶点的邻接顶点是v，那么在搜索的过程中必定会再次遇到顶点v&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现的思路：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;标记已经搜索过的每个顶点&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当遇到了一个已经被标记过的顶点，表示已经图中存在环；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;由于图是无向图，如果v-w相连，那么顶点v中的邻接表中有w，w邻接表中也会有v，但是他们没有构成环，所以需要排除掉该情况。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public class Cycle {&lt;br/&gt;    private boolean marked[];&lt;br/&gt;    private boolean hashCycle;&lt;br/&gt;&lt;br/&gt;    public Cycle(Graph graph) {&lt;br/&gt;        this.marked = new boolean[graph.V()];&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (int s = 0; s &amp;lt; graph.V(); s++) {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (!this.marked[s]) {&lt;br/&gt;                dfs(graph, s, s);&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    private void dfs(Graph graph, int v, int pV) {&lt;br/&gt;        this.marked[v] = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (int w : graph.adj(v)) {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (!this.marked[w]) {&lt;br/&gt;                this.dfs(graph, w, v);&lt;br/&gt;            } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (w != pV) {&lt;br/&gt;                this.hashCycle = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;                &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    public boolean &lt;span&gt;&lt;span&gt;hasCycle&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; hashCycle;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;方法dfs的参数v表示需要待搜索的顶点，pV表示的是到达v的顶点，所以如果v的邻接表中有个顶点已被标记过并且该顶点不等于到达v的顶点，那么表示图中有环&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;检查无向图是否是二分图&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;何为二分图? 图中每条边所连接的顶点都属于不同的部分；如下图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7044025157232704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ggRgNal7zG9mnJia6x2CpwuL17XibKyz4rvXg2YgRW09I7tfJrxKxncwXow3AjSGcgsT8PAv73Ny8m0hkWF3IpyA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;318&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中红色节点表示一个集合，白色节点是另一个集合，每条边连接的两个顶点属于不同的集合；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个实际的例子就很好理解，电影与演员的关系，电影作为一个顶点，演员作为一个顶点，电影与电影直接是不会有边，演员与演员直接也不会有边，这就是一张二分图。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public class TwoColorGraph {&lt;br/&gt;    private boolean twoColor = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    private boolean[] marked;&lt;br/&gt;    private boolean[] color;&lt;br/&gt;&lt;br/&gt;    public TwoColorGraph(Graph graph) {&lt;br/&gt;        this.marked = new boolean[graph.V()];&lt;br/&gt;        this.color = new boolean[graph.V()];&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (int v = 0; v &amp;lt; graph.V(); v++) {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (!this.marked[v]) {&lt;br/&gt;                dfs(graph, v);&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    private void dfs(Graph graph, int v) {&lt;br/&gt;        this.marked[v] = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (int w : graph.adj(v)) {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (!this.marked[w]) {&lt;br/&gt;                this.color[w] = !this.color[v];&lt;br/&gt;                dfs(graph, w);&lt;br/&gt;            } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (this.color[w] == this.color[v]) {&lt;br/&gt;                this.twoColor = &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;                &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    public boolean &lt;span&gt;&lt;span&gt;isTwoColor&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; twoColor;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文中所有源码已放入到了github仓库:https://github.com/silently9527/JavaCore&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后（点关注，不迷路）&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文中或许会存在或多或少的不足、错误之处，有建议或者意见也非常欢迎大家在评论交流。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，&lt;strong&gt;写作不易，请不要白嫖我哟&lt;/strong&gt;，希望朋友们可以&lt;strong&gt;点赞评论关注&lt;/strong&gt;三连，因为这些就是我分享的全部动力来源🙏&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>