<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>49943a078bc13107c85b711c2765d2a5</guid>
<title>你在教我做事啊？Mac 节约生命的使用方法</title>
<link>https://toutiao.io/k/ptpyv1n</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;342&quot; data-backw=&quot;546&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;342&quot; data-ratio=&quot;0.6255555555555555&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA39bgibemkDCH3qfU4QpgnACtHcKKeoAAeBGfqLlYuSE6as40I2Ygdezg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;span&gt;&lt;span&gt;1、阅读本文预计需要 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 分钟，并提供了资源下载。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;2、本文是&lt;strong&gt;「&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;电脑爱好者&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;」&lt;/strong&gt;专题&lt;/span&gt;&lt;span&gt;&lt;strong&gt;C10&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;篇&lt;span&gt;的&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;首次更新&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、第一时间获取更新，欢迎关注「&lt;/span&gt;&lt;span&gt;&lt;strong&gt;奔跑中的奶酪&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;」。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;导读&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;对于习惯 &lt;strong&gt;Windows&lt;/strong&gt; 然后换用 &lt;strong&gt;Mac&lt;/strong&gt; 的人来说，第一感觉就是操作费劲了，工作效率降低了。&lt;br/&gt;&lt;br/&gt;当到你跑去论坛交流时，总会有人跟你这样说：“&lt;strong&gt;你要用 Mac 的思维来使用 Mac&lt;/strong&gt;”。&lt;br/&gt;&lt;br/&gt;而你询问为什么，他们就会引用那句名言“&lt;strong&gt;用户并不知道自己需要什么&lt;/strong&gt;”来做开头。&lt;br/&gt;&lt;br/&gt;这种否定用户需求的迷幻操作，自然让人不爽，所以我综合了 Windows 和 Mac 的使用技巧，总结出了这篇《&lt;strong&gt;Mac 高效操作指南&lt;/strong&gt;》。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;不要让无谓的操作浪费了我们的生命。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;文件管理&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;首先是文件管理，这是高频且繁复的操作。&lt;br/&gt;&lt;br/&gt;除了思路上的改进（参考文章《&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwMjUyNzYxMw==&amp;amp;mid=2247485954&amp;amp;idx=1&amp;amp;sn=6dac65f4e1aa512c4cd1fcdf10f6b955&amp;amp;chksm=9ac85210adbfdb067f012732e3667ecb42684ae4a42475bf6b68e564da1569b3e90050603661&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;文件管理&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;文件管理&lt;/a&gt;》），技术层面的升级也很重要。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1、多标签浏览&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;如果你需要打开多个访达窗口时，&lt;strong&gt;TotalFinder&lt;/strong&gt; 是一款很好的浏览增强工具。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;它提供了&lt;strong&gt;多标签页浏览&lt;/strong&gt;功能，&lt;strong&gt;双击标签页&lt;/strong&gt;或者使用快捷键 &lt;strong&gt;Cmd+U&lt;/strong&gt;，还能进行&lt;strong&gt;对比浏览&lt;/strong&gt;，极大方便了文件管理。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5966850828729282&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3F4yWmqojIyWnQ2P2zIq2TMDVvvrHgqZ6JHDlX6Lxkyb85QbicRMaGUg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1810&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;如果你不习惯右键&lt;strong&gt;没新建文件、没剪切文件&lt;/strong&gt;的设定，使用工具「&lt;strong&gt;超级右键&lt;/strong&gt;」就解决这些问题。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;2、快速预览&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;QuickLook&lt;/strong&gt; 是 Mac 上的一大特色，任何文件只要选中按下&lt;span&gt;「&lt;/span&gt;&lt;strong&gt;空格键&lt;/strong&gt;&lt;span&gt;」&lt;/span&gt;就能进行快速预览。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但并不是所有文件都支持，比如常见的 &lt;strong&gt;Markdown&lt;/strong&gt; 文件格式就不支持，我们可以安装插件来增强文件预览功能。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如 &lt;strong&gt;qlmarkdown&lt;/strong&gt; 可以查看 Markdown，&lt;strong&gt;ePub-quicklook&lt;/strong&gt; 支持电子书全文搜索，&lt;strong&gt;qlimagesize&lt;/strong&gt; 支持查看图片的大小和尺寸等。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5882352941176471&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3AeCXBd5srpicK1k2WPP0RvgXdVLZIrJLibq9z1vUD2TTCiaNLxPXicCsyg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1836&quot;/&gt;&lt;/section&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;3、快速访问&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;对于经常要用的内容，比如应用程序。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;我的做法是将它们&lt;span&gt;都&lt;/span&gt;放在程序坞上，方便随时启用，右键点击图标还会显示&lt;strong&gt;最近打开过的文件&lt;/strong&gt;。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;至于经常要用的文件。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;除了把它们固定在访达左侧的“&lt;strong&gt;个人收藏&lt;/strong&gt;”里，特别高频使用的文件，还可以将它们固定在&lt;strong&gt;程序坞的右侧&lt;/strong&gt;。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如做为收件箱作用的&lt;span&gt;「&lt;/span&gt;&lt;strong&gt;下载&lt;/strong&gt;&lt;span&gt;」&lt;/span&gt;文件夹，做为工作台作用的&lt;span&gt;「&lt;/span&gt;&lt;strong&gt;桌面&lt;/strong&gt;&lt;span&gt;」&lt;/span&gt;文件夹，还有资源中心&lt;span&gt;「&lt;/span&gt;&lt;strong&gt;档案库&lt;/strong&gt;&lt;span&gt;」&lt;/span&gt;文件夹。&lt;br/&gt;&lt;br/&gt;“下载”和“桌面”文件夹的排列方式建议改成“&lt;strong&gt;按添加日期&lt;/strong&gt;”，这样只要有新增的文件，就会出现在弹窗的第一个位置，方便顺手取用。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5639686684073107&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3ib22ESYb818uSXMPEulVYo7FICxWkJ222LOJ08WB4OzFgIjQwjOVMPw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1915&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;这里有一个你可能不知道的技巧：&lt;br/&gt;&lt;br/&gt;当你把鼠标放在弹窗的某个文件上时（&lt;strong&gt;不要点击&lt;/strong&gt;），这时按下空格键就能快速预览。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;4、文件定位&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;还有一种情况，就是当我们&lt;strong&gt;打开或保存文件&lt;/strong&gt;时，&lt;span&gt;我们需要&lt;/span&gt;在弹出来的对话框里一层一层地去切换想要的文件，&lt;strong&gt;Default Folder X&lt;/strong&gt; 可以这一过程变得非常简单。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;它会在&lt;strong&gt;对话框的右边&lt;/strong&gt;侧新增一个工具栏，我主要看中了它的两个功能：&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一是记录&lt;strong&gt;最近打开过的文件和文件夹&lt;/strong&gt;，方便一键切换。&lt;br/&gt;&lt;br/&gt;二是按住 &lt;strong&gt;Cmd&lt;/strong&gt; 键时，对话框会定位到&lt;strong&gt;最后打开的文件夹&lt;/strong&gt;上，这个功能可以说相当的实用。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5627931214174049&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3a7hicYmqVdQMmVPz0jcHdHq6V63XgrEjjgPIL9zvVMWKrwlIxkKiccPg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1919&quot;/&gt;&lt;/section&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;窗口管理&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Mac 还有一个让人困惑的地方，就是点击“&lt;strong&gt;红绿灯&lt;/strong&gt;”的绿色按钮，&lt;span&gt;为什么&lt;/span&gt;出来的是全屏而不是最大化？&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因为 Mac 的界面分为“&lt;strong&gt;菜单栏+桌面+程序坞&lt;/strong&gt;”三部分，相较于 Windows 的“&lt;strong&gt;桌面+任务栏&lt;/strong&gt;”，可视内容范围更少，所以全屏模式的出现弥补了这个不足。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1、窗口全屏&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在开启全屏模式后，菜单栏和程序坞会被隐藏起来，没有了额外信息的干扰，我们就能&lt;strong&gt;更专注于当前的任务&lt;/strong&gt;。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;不用当心文件调用的问题，将鼠标移至屏幕下方，程序坞会重新显示，这时固定在&lt;strong&gt;程序坞右侧的文件夹&lt;/strong&gt;，就发挥调用文件的作用了。&lt;br/&gt;&lt;br/&gt;使用工具「&lt;strong&gt;MacOS 小助手&lt;/strong&gt;」还可以去掉动画延迟，不然看着缓慢的动画闹心。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5625806451612904&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3IAI6jQe8FasSkOFcnIztXdUadPibHUnSTSEZRcGwanB3m4mehxwXFug/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1550&quot;/&gt;&lt;/section&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2、窗口最大化&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;另一种模式是&lt;strong&gt;窗口最大化&lt;/strong&gt;，就是窗口上下紧贴菜单栏和程序坞，类似 Windows 的最大化。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;双击任意窗口&lt;strong&gt;顶部的空白处&lt;/strong&gt;，又或者按住 &lt;strong&gt;Option&lt;/strong&gt; 键点击绿色按钮，全屏操作的按钮就会变成窗口最大化。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3、窗口分屏&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;如果说全屏和最大化，是为了专心做一件事，那么&lt;strong&gt;分屏就是为了多任务工作&lt;/strong&gt;。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Mac 默认也有这个功能，把鼠标放在“&lt;strong&gt;红绿灯&lt;/strong&gt;”的绿色按钮上，等上一会就会显示分屏的选项，想要实现类似于 Windows 的分屏模式，则要按 &lt;strong&gt;Option&lt;/strong&gt; 键来切换。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5625730994152047&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3fQBL3OVcuzVzILvEOIxo9UPxsibUTrFRupaPKOWpCHte4dZZSmzicE1w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1710&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;当然，如果你觉得操作有点复杂，那么一款叫做 &lt;strong&gt;HyperDock&lt;/strong&gt; 的工具可以让事情变得简单。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;409&quot; data-backw=&quot;546&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;409&quot; data-ratio=&quot;0.7492581602373887&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3VHKcQwn4Ko7MhnBgRqpLQTv9Jr6tXuzXrO8hLKkdsQ09pajJnxmGbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1348&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;只需要拖动窗口到屏幕左侧，窗口就会自动吸附变成 &lt;strong&gt;1/2&lt;/strong&gt; 分屏，如果是左上角的话，就会变成 &lt;strong&gt;1/4&lt;/strong&gt; 分屏，非常符合直觉。&lt;br/&gt;&lt;br/&gt;使用快捷键“&lt;strong&gt;Cmd+Ctrl+方向键/数字键&lt;/strong&gt;”，也会有同样的效果。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;任务切换&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;切换任务也是常用操作，特别是你沉浸于工作时，肯定不希望因为切换的问题而打断了思路。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1、Cmd+Tab 切换&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;切换任务窗口，最常用的方法是使用 &lt;strong&gt;Cmd + Tab&lt;/strong&gt;，&lt;span&gt;使用快捷键 &lt;strong&gt;Cmd + ~&lt;/strong&gt;（Tab 上面那个键）还会在当前应用程序的不同窗口中切换。&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但这种切换方式有它的问题，比如默认会显示&lt;strong&gt;所有运行中的应用程序&lt;/strong&gt;，不管它有没有打开窗口，这无疑给切换选择增加了难度。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;HyperSwitch&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 正是这样一款让 &lt;strong&gt;Cmd + Tab&lt;/strong&gt; 切换更好用的工具。&lt;br/&gt;&lt;br/&gt;它可以隐藏没有窗口的应用，同时还能&lt;strong&gt;显示窗口的缩略图&lt;/strong&gt;，让任务切换变得更加直观。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5639686684073107&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3OU52rW9Im6lsR5xvvuz9eMBYiaS2XicacxSa3UQggxn6gMNCicqiaACILQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1915&quot;/&gt;&lt;/section&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2、程序坞切换&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;切换任务&lt;span&gt;窗口&lt;/span&gt;的第二种方法，是用鼠标在程序坞上点击切换&lt;strong&gt;，HyperDock&lt;/strong&gt; 同样提供了便利的切换方法。&lt;br/&gt;&lt;br/&gt;它可以让程序坞图标拥有类似 Windows 的&lt;strong&gt;窗口预览功能&lt;/strong&gt;，把鼠标停放在应用图标上就会显示，&lt;strong&gt;上下滑动鼠标滚轮&lt;/strong&gt;，还可以触发&lt;strong&gt;打开或隐藏&lt;/strong&gt;&lt;strong&gt;窗口&lt;/strong&gt;的操作。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.2336448598130841&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA39Yck9ZndsdQzAYBPDIVPjNhY66lZJ6tRSxmyBu0rrHrV2ccFGVPjTg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;3852&quot;/&gt;&lt;/section&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3、调度中心切换&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;还有一种方法是使用“&lt;strong&gt;调度中心&lt;/strong&gt;”来切换，但这并不是一个好的任务切换方案。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;即使你已经关闭“&lt;strong&gt;自动重新排列&lt;/strong&gt;”的功能，因为打开窗口的数量是不断变化的，所以每次打开“&lt;strong&gt;调度中心&lt;/strong&gt;”得到的排列结果都会不一样。&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;我们需要用肉眼去定位要找的窗口在那里，如果窗口很多时，你一定十分抓狂。&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.6058713304184884&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3a9diaqYZSlOFBFibhjOUossRHE8icaSAOuo5DiaVOafXJj9m2ySGYzev2A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1601&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;调度中心正确的使用方法，是它的“&lt;strong&gt;多桌面&lt;/strong&gt;”。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果不使用“&lt;strong&gt;多桌面&lt;/strong&gt;”，打开调度中心，情况可能是这样的。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3xee2cB5mzgo9ulR48NFpibl5WrUVHjdO6jvtlGGmeJ6QQ99ru8Y5yibQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1920&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;而使用多桌面，&lt;span&gt;&lt;span&gt;调度中心是这样的，顿时就清爽许多。&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3Onbhv7NeqdiaCcVicVxUcBZyk7oJia8ibpV1zF91D82mCo43qyAoQ55CnA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1920&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;span&gt;多桌面&lt;/span&gt;的运用，就像是从“&lt;strong&gt;长方形办公桌&lt;/strong&gt;”变成了“&lt;strong&gt;L形办公桌&lt;/strong&gt;”。&lt;br/&gt;&lt;br/&gt;我们可以一边放工作内容，一边放其他的内容，起到&lt;strong&gt;工作归工作，其他归其他&lt;/strong&gt;的效果。&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如在“&lt;strong&gt;桌面 1&lt;/strong&gt;”放置工作中才会用到的应用程序，例如访达、浏览器、PPT、Typora、PS 等，而在“&lt;strong&gt;桌面 2&lt;/strong&gt;”则放置工作以外的应用程序。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这样做还有一个好处，就是当你使用 &lt;strong&gt;Cmd + Tab&lt;/strong&gt; 切换任务时，任务切换列表会&lt;strong&gt;自动分为两组&lt;/strong&gt;。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;135&quot; data-ratio=&quot;0.295410827150316&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3uuO2Exic0rQW4LtO9tR7jACQUfUibYicrGCXcG8PFwCqWb1FpkfZjvsaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3639&quot; data-backw=&quot;546&quot; data-backh=&quot;161&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;切换的效率自然就更高了，&lt;/span&gt;而当你点击“&lt;strong&gt;桌面 2&lt;/strong&gt;”时，桌面会自动切换，相当于你在 &lt;strong&gt;L 形办公桌上转方向，切换了另一种工作状态&lt;/strong&gt;。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;4、程序之间切换&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;上面的 3 种方法，都需要有一个肉眼选择的过程，&lt;strong&gt;有没有直接切换的方法呢？&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如你在写文章，突然想&lt;span&gt;边写&lt;/span&gt;边听音乐，中途还可能要打开浏览器查询一些资料，最后还可能要在文章中插入图片素材，这时肯定少不了一顿操作。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但有了 &lt;strong&gt;SpaceLauncher&lt;/strong&gt; ，事情就变得简单了。&lt;br/&gt;&lt;br/&gt;它通过「&lt;strong&gt;空格+任意键&lt;/strong&gt;」的组合来执行命令，解决了上面的所有问题。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-backh=&quot;412&quot; data-backw=&quot;546&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;307&quot; data-ratio=&quot;0.7547846889952153&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3UwIr1V3cjPkd91GGvLvrXTgcQTDuzXGNMgbcibKjLDibn1Ibf4eM3YiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1672&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;软件主要有三个功能：&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;一是打开地址。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;可以用来打开应用程序、文件夹、网页地址等。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;二是模拟按键。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;它可以简化复杂的快捷键组合，比如自带的截图快捷键是「&lt;strong&gt;⌘+⇧+3&lt;/strong&gt;」，我们可以把它改成 「&lt;strong&gt;空格+3&lt;/strong&gt;」，操作立马就方便多了。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;三是嵌套文件夹。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;就是相当于一个文件夹，嵌套多个功能。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;有了这些功能，&lt;span&gt;我们就可以设置&lt;span&gt;一套合乎自己工作流程的快捷键&lt;/span&gt;，极大地提高了切换效率。&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如下面是我的快捷键方案：&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.40955631399317405&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3gkc5TErCSWVIDRqwm2JKL9ckWAz7E7ANVCNKVLl54xhAXW57puDpbQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2637&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;为了减少记忆负担，只设置自己&lt;strong&gt;最常用的那几个应用程序&lt;/strong&gt;就可以了，其次，快捷键最好使用与应用程序&lt;strong&gt;&lt;span&gt;相近的&lt;/span&gt;英文或者拼音&lt;/strong&gt;。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如浏览器Browser（&lt;strong&gt;B&lt;/strong&gt;）、Typroa（&lt;strong&gt;T&lt;/strong&gt;）、Excel（&lt;strong&gt;E&lt;/strong&gt;）、RSS（&lt;strong&gt;R&lt;/strong&gt;）、微信（&lt;strong&gt;V&lt;/strong&gt;）。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;又或者你自己觉得说得过去的排布逻辑就行，比如我的&lt;span&gt;设置思路是：&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第一行：&lt;strong&gt;工具&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第二行：&lt;strong&gt;应用程序&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第三行：&lt;strong&gt;文件夹&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第四行：&lt;strong&gt;应用程序&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;04&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;文件拖拽&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;文件拖拽同样&lt;span&gt;也&lt;/span&gt;是高频操作，为此还催生了类似 Yoink、Dropover 这类「&lt;strong&gt;中转站&lt;/strong&gt;」应用，其实原生功能就能胜了，只是需要一些小技巧。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;1&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;、一般拖拽&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;当应用程序排列一左一右，又或者一大一小时，很简单，直接拖拽就可以了。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2、Cmd+Tab 置入&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;也就是选中文件的同时，使用 &lt;strong&gt;Cmd + Tab&lt;/strong&gt; 切换任务窗口，然后释放将文件置入。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3、拖入程序坞图标&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;比如你想用 PS 编辑图片，想发送文件给好友，想在文章中插入图片，选中文件，将它拖入到程序坞上的图标就可以。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-backh=&quot;307&quot; data-backw=&quot;546&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;307&quot; data-ratio=&quot;0.5625579240037072&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3amesNIyEXcBF1OG1j0sYcLmoxuoptYDZhhEHq42P5KZhjVPkI7cpnA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1079&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;strong&gt;需要注意的是：&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;当你拖动文件到程序坞图标时，默认会有 &lt;strong&gt;2&lt;/strong&gt; 秒的等待时间，然后图标会闪烁一下进入确认，这个时候只要按下「&lt;strong&gt;空格键&lt;/strong&gt;」，就可以跳过等待，直接确认。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4、拖入调度中心&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;同样，选中文件，然后呼出“&lt;strong&gt;调度中心&lt;/strong&gt;”来置入其他应用程序也是一种方法。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;特别是如果你使用了“&lt;strong&gt;多桌面&lt;/strong&gt;”，那么调度中心的窗口选择就简单多了，按下「&lt;strong&gt;空格键&lt;/strong&gt;」同样可以跳过等待，直接确认。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这里还有一个小技巧：&lt;br/&gt;&lt;br/&gt;选中文件，然后快速地&lt;strong&gt;撞向屏幕上方&lt;/strong&gt;，然后就会切换到调度中心了，方便一键置入，非常的省事。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-backh=&quot;307&quot; data-backw=&quot;546&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;307&quot; data-ratio=&quot;0.5625579240037072&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA30RG0ic9c6BqPRzZdrpfemIqJSokUhCKzQ5QIGFNGnj3Nj1Dic0c1iaeUA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1079&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;还有一种情况，如果你有&lt;strong&gt;多桌面&lt;/strong&gt;，又或者某个应用该处于&lt;strong&gt;全屏状态&lt;/strong&gt;时。&lt;br/&gt;&lt;br/&gt;拖动文件至&lt;strong&gt;屏幕的左右边缘，&lt;/strong&gt;停留一段时间后，屏幕就会切换到该桌面或者全屏应用里，不过用到的情况可能不太多。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;05&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;鼠标和键盘&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;最后就是鼠标和键盘的问题了。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Mac 的触控板并没有达&lt;span&gt;到&lt;/span&gt;完全替代鼠标的程度，&lt;span&gt;特别是在使用外接显示器的时候，&lt;/span&gt;对于&lt;strong&gt;长距离操作和精准操作&lt;/strong&gt;，鼠标的作用无可替代。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1、鼠标手势&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;鼠标手势是一个好选择，它与触控板手势相近，&lt;span&gt;只需要在屏幕上划出轨迹就可以执行&lt;strong&gt;前进/后退、最大/最小化、关闭/新建&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;标签页&lt;/strong&gt;等操作。&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;软件 &lt;strong&gt;BetterAndBetter&lt;/strong&gt; 提供了这样的功能。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.6818181818181818&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3vEaFnuNVt4QibYn60c64PBIKBRwRKZwrJ2JYMCCwWFAC3LHwVaquHEw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1584&quot; data-backw=&quot;546&quot; data-backh=&quot;372&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;设置好后，所有的应用程序可以共用同一套手势，对于个别应用程序，比如浏览器的鼠标手势可以单独设置。&lt;span&gt;&lt;span&gt;&lt;span&gt;（回复关键字 &lt;strong&gt;C10&lt;/strong&gt; 获取奶酪配置）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;我的鼠标手势方案主要有三套，第一套是&lt;strong&gt;方向轨迹&lt;/strong&gt;。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3e2niaicBNI8iasicIfenoeiaM4wBaf5zZgnRwcy4ZG3LOEQDLSfMyKM4aSA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-backw=&quot;546&quot; data-backh=&quot;307&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;黑色字体为&lt;strong&gt;通用手势&lt;/strong&gt;，灰色字体为&lt;strong&gt;浏览器专用手势&lt;/strong&gt;，&lt;span&gt;浏览器包括 Chrome、Firefox、Edge，还有其他国产浏览器也同样适用。&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3iasggXAKUrl14YkqFxgo3P1rBE5x1qLW3WQq8UcKX9WXWCovAahmNJw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-backw=&quot;546&quot; data-backh=&quot;307&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;第二套是&lt;strong&gt;字母轨迹。&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA36qrvxovAmwaENVHEBkT4ROD55IxS4iaFjJwfEpibOnZzEqBhHq49licnw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-backw=&quot;546&quot; data-backh=&quot;307&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;第三套是使用&lt;strong&gt;鼠标中键&lt;/strong&gt;来划手势，可以专门用于窗口的操作。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTja3DiciafqJDBkrCiaWNfWseA3GibuNBNL3RNEadmkkG80nfGLpPrFibU9U9toSahKZG2qUIZBdmxLfnYA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-backw=&quot;546&quot; data-backh=&quot;307&quot;/&gt;&lt;/section&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2、其他功能的增加&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;BetterAndBetter&lt;/strong&gt; 还可以对触控板、边角触发、快捷键等功能进行增强。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这里最值得说道的&lt;strong&gt;快捷键&lt;/strong&gt;，如何从各式各样的快捷键（&lt;strong&gt;⌘、⌥、⌃、⇧&lt;/strong&gt;）找到一条清晰的使用逻辑，而不是靠死记硬背，值得我们单独拿一期出来好好讲一讲。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;结尾&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;做为 Windows 和 Mac 的双平台用户，Mac 上的一些优秀使用逻辑也可以借用到 Windows 上。&lt;br/&gt;&lt;br/&gt;下一期我们将迎来《&lt;strong&gt;Windows 高效操作&lt;/strong&gt;》2.0 版本。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;回复关键字&lt;br/&gt;&lt;span&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;查看本系列的所有文章，&lt;br/&gt;回复关键字&lt;br/&gt;&lt;span&gt;&lt;strong&gt; C10&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;获取本文提到的所有资源&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;相关文章：&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwMjUyNzYxMw==&amp;amp;mid=2247486901&amp;amp;idx=1&amp;amp;sn=682fb7266db0dd64d084445734500d19&amp;amp;chksm=9ac855a7adbfdcb1703632b7e0670e2aff4ed08a563435dd85613b825bd9b28904555118e699&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-backh=&quot;98&quot; data-backw=&quot;562&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;562&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;98&quot; data-ratio=&quot;0.175&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjY6IkoLq5YUVXOyVhXRJ2X06Mb0PDphpmoeE9UPJbzHlnlGaeLgbwCGNU0F0ssIr3niaeMpgOIWicRw/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwMjUyNzYxMw==&amp;amp;mid=2247486547&amp;amp;idx=1&amp;amp;sn=cf772c6d5c8db7bc43db4da2c46d6f34&amp;amp;chksm=9ac85441adbfdd575edf846c5f967b0d276f6ed0a7f6ea86df1751b57d8e90732165b8081dc2&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;96&quot; data-ratio=&quot;0.175&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-backw=&quot;549&quot; data-backh=&quot;96&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjYLKcalGxriaVyichoJ2WAG50GrUsgjVcicZwCiboUmCLoURL9GBhtEoMn3rzm9gjYicVOcia5QrqBHaOrw/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwMjUyNzYxMw==&amp;amp;mid=2247486333&amp;amp;idx=1&amp;amp;sn=93251e200cd88f4deae49b219098f26c&amp;amp;chksm=9ac8536fadbfda794f6adbf6ea6adc0e1d06dad2675939978e90087b57f6ce3ddc762df5d939&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;96&quot; data-ratio=&quot;0.175&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-backw=&quot;549&quot; data-backh=&quot;96&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjYLKcalGxriaVyichoJ2WAG50hicozHesDbdbibodaPUIfUh09eyD8CuibEibG1Jtv4xAX2ZJD3dMLmty1Q/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;看完文章：&lt;/strong&gt;&lt;strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;点在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，帮助更多的人看到这篇文章。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;2、&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;写留言&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，对文章进行评论，我会尽可能回复。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;3、&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;点关注&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，关注我并星标，第一时间获取更新。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.47&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjb9IjZa7tpqzzqKpIpXpS41526J4ZCxbmcyls9rrnbvAtDTaNZj8mibmYJ8vhchSed53h2BKN1OlKQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;900&quot;/&gt;&lt;br/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;&gt;打赏将放入奶酪植发基金&lt;/p&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>353a0bff935f20a2095c4d4d0df28d5d</guid>
<title>一切围绕信任：闲鱼无忧购的技术演进</title>
<link>https://toutiao.io/k/opd9d6w</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;h2&gt;&lt;strong&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;闲鱼无忧购是阿里巴巴集团旗下品牌，专注于为追求品质和性价比的人群提供品牌自营、品牌授权等优质商品 （包括但不限于官翻准新、滞销处理、退换货处理、展示品样等），并提供无忧售后服务的服务平台。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;闲鱼无忧购（此前在淘宝名为闲鱼优品）诞生于淘宝，依托于中台统一的商品发布、导购、交易产品能力，上线以来业务效果表现不错，不过仍存在以下困局；&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;但闲鱼的技术体系架构与淘宝有很大的不同，如何能快速让用户在闲鱼玩转闲鱼无忧购，并保障其优质的体验，成为迫在眉急要解决的难题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;整体架构&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img data-backh=&quot;203&quot; data-backw=&quot;315&quot; data-ratio=&quot;0.6448931116389549&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1EqBQfu5EQkLHb9yBMgxKD38XK8Nmr7kzibPg45zNZ3G4qIuyS3aahMO7TsfLmjS0PBIvB1vyviauibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;842&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;闲鱼无忧购仍复用中台的基础能力，包括商品/交易/支付/物流等；无忧购商家基本都是淘宝的B类卖家，对中台的整个卖家产品体系最熟悉，切换到闲鱼后卖家教育这块有很高的成本；另外中台具备非常强大且成熟的能力，如果在闲鱼端全部实现，工程量将非常巨大，也不现实；闲鱼无忧购在中台底层核心能力的基础上，进行了业务心智的上层产品定制，比如特殊的商家入驻流程、商品发布流程、闲鱼APP导购流量调控、闲鱼APP无忧购店铺页、闲鱼APP无忧购商品详情页，无忧购订单拆分，售后流程隔离等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;商家入驻&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img data-backh=&quot;256&quot; data-backw=&quot;315&quot; data-ratio=&quot;0.8132911392405063&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1EqBQfu5EQkLHb9yBMgxKD3QQupacHMbBV6YibSza13Yq0PEZ1M1FQc4NOFhpvcBYicPmye4AwB5Xzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;632&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;无忧购招商在营销中台行业招商系统的基础上，进行业务和技术定制；通过消息队列的方式，将商家入驻、卖家服务标①与交易成功后的佣金结算逻辑进行串联，实现无忧购特有的商家报名、交保、商品发布、抽佣等流程的招商闭环。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;商品发布&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;无忧购卖家为专业B类卖家，和闲鱼的C类卖家有较大不同；B类卖家能接受较复杂的发布操作流程和规则条件，其更关注商品的质量度和并发效率；而C类卖家更希望商品发布足够简单方便，随时随地；因此闲鱼App的商品发布和中台商品发布流程也存在天壤之别。&lt;br/&gt;中台商品发布直接使用的卖家中心(或者千牛)，底层是直接无缝对接中台商品中心；闲鱼C2C②商品发布在中台商品中心基础上，单独有一份业务商品数据存储作为扩展，用以支持各新兴业务商品的快速迭代；闲鱼App中商品发布操作非常简单，是非常薄的一层数据服务。&lt;br/&gt;无忧购商品和淘宝商品一样，会有非常多的结构化信息；另外卖家经常会有批量商品上传的需求，在闲鱼端单独支持无忧购商品发布成本较高，也不一定能给卖家带来太大的增量收益；基于此无忧购卖家商品发布仍直接使用中台商品发布流程。&lt;br/&gt;商家入驻成功后，系统会给卖家打上无忧购卖家服务标①；卖家可通过PC卖家中心或者千牛App进行商品发布；因业务域和运营目标的需要，已入驻状态的卖家只在闲鱼无忧购类目下进行商品发布，方便业务进行精准运营；&lt;br/&gt;卖家服务标会作用到卖家/商品/交易订单，串联到了整个业务流程，天然就能将无忧购与中台其他业务进行隔离。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;导购流程&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.4201117318435754&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1EqBQfu5EQkLHb9yBMgxKD31FFIXhI7JCLnu0eC5k5ia4JZsibeXcFibNvcKJib61LqLZZWZ9xef0AgkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;895&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;闲鱼APP所有导购流量入口，增加了无忧购商品的准入规则：卖家服务标+无忧购类目；闲鱼无忧购商品投放在闲鱼APP各核心导购页面进行技术链路打通，通过算法模型的调优，实时调控各导购入口的流量配比，流量效率最大化；由于闲鱼C2C商品与无忧购商品在底层存储上有部分不同，以及在类目体系上的区分会导致搜索相关性不够好，在打通闲鱼搜索投放链路上，通过闲鱼搜索引擎进行数据兼容，将中台中无忧购的商品数据单独接入到闲鱼搜索引擎，再由算法模型决策两类商品混排方式。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;详情&amp;amp;店铺&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6015625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1EqBQfu5EQkLHb9yBMgxKD3KQfYoNXWHS20h9Xt9PI9qHMSPYVkdTicnicwxDV47WAVaXeAT6YeUCLA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为方便卖家操作，以及无缝衔接淘宝的B类卖家；无忧购卖家店铺信息，仍然在中台卖家中心进行日常维护，而且卖家只需要维护一份数据，天然就能支持淘宝和闲鱼两端。在闲鱼APP端的店铺详情页，我们强调了闲鱼用户心智，将卖家宝贝直接通过不同商品分类Tab进行导航，各分类商品使用Feeds(信息流)的方式平铺，同时将卖家所有有价值的评价进行突出显示，让用户能更直接关注到当前店铺的健康度；更接近闲鱼用户的导购体验；&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img data-backh=&quot;211&quot; data-backw=&quot;335&quot; data-ratio=&quot;0.6312684365781711&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1EqBQfu5EQkLHb9yBMgxKD3uibRmGgQ8sjTqSZU9ZsjFVn2adz4bxjk9F1Nwyyar4UGwUJv4mJichBQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2034&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;通过闲鱼APP和淘宝APP无忧购商品投放能力，买家能进入到宝贝详情页面详细了解商品，下单购买；无忧购宝贝详情同样在闲鱼和淘宝双端都有相应的表达；在淘宝APP保持原有复用中台的能力不变，使用中台通用的宝贝详情风格，适应淘宝用户的使用习惯；在闲鱼APP无忧购宝贝详情页做了高度定制，在视觉体验上提升品质，让信息更加凝练集中，重点突出无忧购商品的服务保障，提高交易信任度。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;消息&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因历史技术选型不同，目前闲鱼的业务消息系统为纯自研，买卖双方基于特定商品进行会话；与中台使用的旺旺基于人与店的会话这一技术体系有很大区别；在闲鱼消息系统，我们兼容了纯淘宝商品的消息聊天，在闲鱼App支持无忧购商品的售前咨询和售后服务。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;交易&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;闲鱼APP无忧购商品交易流程直接使用中台通用的H5下单页面，最终订单会合并到手淘订单中；申请售后暂时也会流到中台的交易售后平台。后续我们将无忧购订单完整从淘宝订单中拆分出来，更好支撑业务和服务专属客服，优化交易流程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;总结&amp;amp;展望&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;无忧购除开在中台原有的产品链路外，目前已在闲鱼端基本实现完整的业务闭环，从导购、互动到交易、售前售后，买卖家在闲鱼已能体检到符合业务心智的完整产品流程(进一步的体验优化功能持续优化中)；整体链路凸显了无忧购业务优质的服务保障，对交易信任度提升巨大；同时整个流程更符合闲鱼用户的使用习惯。闲鱼也会在接下来对整个无忧购链路进一步优化，完善产品链路，包括但不限于消息聊天、交易体验、营销玩法、智能推荐等；持续提升用户体验，增加更多普惠大众用户的业务功能，将品质和信誉做得更完美。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;span&gt;注&lt;/span&gt;&lt;span&gt;解&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;① &lt;strong&gt;卖家服务标&lt;/strong&gt;：用来给卖家身份信息上增加的一种标签，无忧购中会串联到整个导购交易环节，用以做业务区分；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;② &lt;strong&gt;C2C&lt;/strong&gt;：Customer（Consumer） to Customer（Consumer）的简写，个人与个人之间的电子商务；本文中意指个人卖家与个人买家之间的交易业务；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.5171875&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1Eojqc694G4ReIf3N1VHTwLkBHVJESIFLiczQ4vDlNtfiaVYRMeOUwXUB9IaFricKteNTWg48zcxmpMA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>83f7d61b2dbb68647bee4ccf4222a3ef</guid>
<title>我的笔记系统</title>
<link>https://toutiao.io/k/dpkojyz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content&quot; itemprop=&quot;articleBody&quot;&gt;&amp;#13;
&lt;blockquote&gt;
&lt;p&gt;一个好的笔记系统，应该能把你所学习到的任何资料串联起来，形成一个知识系统，在你需要他们的时候，可以很容易找到，进而形成自己新的知识。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我在《&lt;a href=&quot;https://www.bmpi.dev/zh-cn/self/onenote-intro/&quot;&gt;用OneNote管理你的知识&lt;/a&gt;》这篇文章中介绍了如何用OneNote管理各种资料，虽然OneNote已经做的非常好了，依然存在以下问题无法达到我的要求:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;排版不支持语法高亮。作为一个经常写代码的人，这点不能忍。&lt;/li&gt;
&lt;li&gt;没有Tag系统。无法很灵活的给页面插入各种tag，导致资料无法有效互联，形成一个个知识孤岛，最终变成一个资料备份工具。&lt;/li&gt;
&lt;li&gt;数据格式专有。只能用OneNote才能打开笔记本，假如微软突然放弃了这个工具，那就很尴尬了。&lt;/li&gt;
&lt;li&gt;体积庞大。在使用了近5年之后，我的OneNote已经有几GB大小了，每次换电脑同步总是很慢，这可能和我的使用习惯有关系，遇到好的资料都是复制进去。&lt;/li&gt;
&lt;li&gt;扩展能力差。无法安装插件，也没有定制能力，更无法将你的笔记发布成网站，也很难与别人分享你的知识。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这些问题开始驱使我寻求新的解决方案，新方案应该满足以下需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有强大的抓取能力。OneNote的这点很不错，你可以通过OneNote的浏览器插件很容易将外部文章存至OneNote的分区中，也可以将微信公众号文章发送给OneNote公众号进行保存。&lt;/li&gt;
&lt;li&gt;有好的Tag系统。可以将分散的知识串联起来。虽然OneNote通过分页这种树形的方式组织相关的知识，但是资料一旦多了，分页真的很不方便，会让找资料变的很痛苦。&lt;/li&gt;
&lt;li&gt;能容易的更新tag/link/text。如果重命名相关的资料名或者Tag，应该很方便去自动重命名关联的链接。&lt;/li&gt;
&lt;li&gt;文件格式最好是纯文本的。如果不是纯文本，至少格式也不是专有的才好。&lt;/li&gt;
&lt;li&gt;有强大的扩展能力。能通过插件去扩展定制。&lt;/li&gt;
&lt;li&gt;开源。这点可以让我们放心的去使用，不太可能无人维护。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经过一番查找对比后，最终找到两个可以满足我需求的工具，Emacs orgmode和Tiddlywiki。虽然wiki工具非常多，比如Wikipedia使用的mediawiki之类，但这类系统过于庞大，要运行起来也很麻烦。&lt;/p&gt;
&lt;h3&gt;Emacs orgmode&lt;/h3&gt;
&lt;p&gt;提到笔记系统，Emacs的orgmode总是绕不过去，当你想要找一个个人笔记系统的时候，在网上很容易看到大家对orgmode的盛赞，甚至很多人花长时间学习Emacs也是为了用orgmode。&lt;/p&gt;
&lt;p&gt;orgmode神奇的魔力在这篇文章中体现的淋漓尽致：&lt;a href=&quot;http://doc.norang.ca/org-mode.html&quot;&gt;Org Mode - Organize Your Life In Plain Text!&lt;/a&gt;。简单来说，作者使用orgmode管理了他人生中的方方面面，比如写作系统、待办事项提醒、笔记系统等。得益于Emacs强大的定制开发能力，几乎你的一切需求都可以通过编写一些函数去扩展，这种扩展能力比VSCode/Vim/Sublime Text的插件系统等要强大的多。可以说，除了学习难度高，几乎没啥缺点了。它有以下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;17 years old。在时间的长河中，orgmode已经证明了自己。&lt;/li&gt;
&lt;li&gt;定制能力强大。通过elisp去开发，几乎无所不能。&lt;/li&gt;
&lt;li&gt;纯文本。可自动生成多种格式的文件，也很容易发布成网页。&lt;/li&gt;
&lt;li&gt;使用门槛很高。需要花费很多时间学习适应，这个“很多时间”可能比你想象的都要多一些。&lt;/li&gt;
&lt;li&gt;生态差。由于高门槛，所以用户就少一些，生态就差一些。当然你能力强，可以用它来实现各种功能，但是这样挺累的。&lt;/li&gt;
&lt;li&gt;技术迁移度差。elisp太古老了，emacs太独特了，这种上古技术，就像一把绝世好剑，注定能用好它的人会很少。这意味着你写出来的东西很多人都看不懂，当然也就无法进行技术交流互动了，自己造轮子造到心累。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Tiddlywiki&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.tiddlywiki.cn/&quot;&gt;Tiddlywiki&lt;/a&gt;是一款独特的非线性笔记本，用于捕获、组织和分享复杂信息。其设计思想是将信息通过一种名为Tiddler的单元分割，利用它们之间丰富的关系模型，从而最大化信息的可复用性。 然后，通过聚合和构思来把片段编排在一起，以呈现具有叙述性的故事。&lt;/p&gt;
&lt;p&gt;它具备以下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;15 years old。这个历史足够久了，时间验证了其稳定性和可持续性，而且是开源的。&lt;/li&gt;
&lt;li&gt;Tag系统强大。最让我印象深刻的就是它的Tag系统，很容易通过Tag将不同的信息组织到一起。&lt;/li&gt;
&lt;li&gt;单HTML文件架构。所有的信息都在一个Html中存放，你可以直接下载下来在浏览器中运行，非常的简单。默认的空的系统在最新的版本5中大约是2MB，一般存储几千个条目（Tiddler）大概能增长几MB，由于是单文件架构，为了不影响性能，应尽可能通过将图片外部引用来降低总体积。&lt;/li&gt;
&lt;li&gt;插件众多。很容易通过JavaScript给其扩展功能。&lt;/li&gt;
&lt;li&gt;无法多人协作。但可用作团队知识共享简单的wiki系统。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;orgmode VS Tiddlywiki&lt;/h3&gt;
&lt;p&gt;在这里可以看到一些人对这两个工具的对比评价。在花了几天时间学习了orgmode之后，我被它复杂强大的能力劝退了，所有选择了Tiddlywiki。&lt;/p&gt;
&lt;h3&gt;Tiddlywiki使用指南&lt;/h3&gt;
&lt;p&gt;Tiddlywiki的使用和运行是极其简单的，就这点秒杀了orgmode。在这篇&lt;a href=&quot;http://www.tiddlywiki.cn/#Learning&quot;&gt;Learning&lt;/a&gt;文章中，你可以花费十几分钟了解下它的基本知识。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/12/1-note-taking-system.png&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/12/1-note-taking-system-768x445.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在上图右侧点击+号新增一个条目后：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/12/2-note-taking-system.png&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/12/2-note-taking-system-768x254.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;右侧红色的保存按钮点击了后，你会发现直接下载了一个名为&lt;code&gt;tiddlywiki.html&lt;/code&gt;的文件，用浏览器打开后，会发现和你刚才在网上的tiddlywiki一摸一样。当你再对这个本地tiddlywiki进行一番操作保存后发现它又给你下载了一个&lt;code&gt;tiddlywiki.html&lt;/code&gt;，也就是说每当你保存的时候，都会通过下载副本的形式保存，因为它在浏览器中运行，不具备自己更新自己的能力，这种可以通过一个chrome的app来解决，下载&lt;a href=&quot;https://github.com/Arlen22/tiddly-chrome-app&quot;&gt;tiddly-chrome-app&lt;/a&gt;，然后用此chrome app加载&lt;code&gt;tiddlywiki.html&lt;/code&gt;即可自动更新了，当然也可以通过搭建Nodejs环境来实现自动保存，不过最简单的还是这种方式。&lt;/p&gt;
&lt;p&gt;需要注意的有以下几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;备份&lt;/strong&gt;。因为是单文件架构，所有的资料都在一个Html中存放，所以保护好这个文件至关重要，可以通过Git去备份。比如我的tiddlywiki就在GitHub中备份。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;性能&lt;/strong&gt;。图片、文件等资源最好通过存放第三方的云盘中，然后通过引用链接等方式引入。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Relink&lt;/strong&gt;。当你重新命名一个条目或者Tag的时候，可以通过安装这个&lt;a href=&quot;https://github.com/flibbles/tw5-relink&quot;&gt;tw5-relink&lt;/a&gt;插件解决。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Capture方案&lt;/h3&gt;
&lt;p&gt;Capture是一个笔记系统很重要的能力，这方面OneNote做的很好，但是tiddlywiki做的却不好，不过可以有一些方法来解决。让我们先来重新思考下一个笔记记录的过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;你看到一篇好文章，想要保存起来。这篇文章可能是一个网页，也可能是个邮件或者文件之类。&lt;/li&gt;
&lt;li&gt;你把这篇文章直接全部扔到笔记本中存起来，想象某天会用到它，或者你会将里面的某个章节，某个图片单独保存起来。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当我在用OneNote的时候，对于微信中的文章，我一般直接通过发送到公众号去保存，然后就忘了这个事情。而对于电脑端看到的一些资料，我会直接复制到OneNote中去。在某些时候我会整理一下这些资料，但是大多数它们就被遗忘了，甚至当我需要的时候，我都不记得之前保存过这些资料。&lt;/p&gt;
&lt;p&gt;在这个场景中，暴露了以下这几个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;资料没有被处理就直接被存储了。&lt;/li&gt;
&lt;li&gt;大多数资料都是全部被存放到OneNote中去。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因为tiddlywiki本质是个网页，无法像OneNote一样可以直接复制一篇文章到里面去，而且这种复制手法会导致你的笔记越来越大，找寻有效信息变得越来越难。所以这本质是个习惯问题，资料必须被二次处理后才能进入笔记系统中，否则这个存储毫无意义，只需要存放一个链接即可了。&lt;/p&gt;
&lt;p&gt;经过一些思考，我制定了自己资料长期归档的方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;引用文章可以保存到&lt;a href=&quot;https://web.archive.org/&quot;&gt;Wayback Machine&lt;/a&gt;中；&lt;/li&gt;
&lt;li&gt;文件可以保存到GitHub私有库和网盘中（包括s3等专业云存储，还有各大互联网公司的网盘）；&lt;/li&gt;
&lt;li&gt;通过第三方备份Capture资料，笔记中只存储链接。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在我的Capture方案，对于网上阅读的一些资料，考虑到互联网信息丢失的速度，大部分文章存活的寿命并不长，为了能长期保存，我会把这些网页使用Wayback Machine备份，这样再也不会丢失了，我只需要把它的链接存储起来即可，对于需要单独存储的资料可以存放到笔记系统中。对于需要存储的图片，我会存放到AWS S3中，然后引用其链接即可，当然这类云存储方案很多，你也可以选择国内七牛云（需要域名备案）等。&lt;/p&gt;
&lt;h4&gt;Wayback Machine&lt;/h4&gt;
&lt;p&gt;20多年的历史，互联网的记忆，数字图书馆，网站时光机。这是一个非商业的项目，创立目的就是给整个互联网的网站做不停的备份，目前已经有4500多亿的缓存页面了，在这个网站你可以看到很多网站的历史，像时光机一样穿梭在网站的不同历史版本中去。&lt;/p&gt;
&lt;p&gt;它具备以下能力：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可爬取网页HTML及其外部链接。&lt;/li&gt;
&lt;li&gt;可生成网页快照图片。&lt;/li&gt;
&lt;li&gt;可将网页存储至自己的Wayback Machine账户。&lt;/li&gt;
&lt;li&gt;可以使用API来请求网页缓存。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;VSCode插件一键存储图片至S3&lt;/h4&gt;
&lt;p&gt;在Markdown文档中当你想把网页的图片黏贴过去是件很麻烦的事情，首先你要把图片下载到本地（引用网页图片地址不太好，图片可能会神秘消失），然后在文档中使用相对路径引用这个图片，当图片很多的时候，这是个非常痛苦的过程。&lt;/p&gt;
&lt;p&gt;能不能做到复制网页图片后，在VSCode中黏贴后自动插入一个S3的链接到Markdown文档中去呢？我找到一款插件，可以做到一键上传七牛/GitHub/sm.ms等，但是它没有提供S3的支持，所以我fork后加了这个功能，如果你也需要这个功能的话，可以在这里下载安装: &lt;a href=&quot;https://github.com/bmpi-dev/vscode-extension-mardown-image-paste&quot;&gt;markdown image paste&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有了这个插件后，写wiki/md文件遇到图片复制后黏贴进去自动插入S3链接，这样图片永远存放到你的S3账号中去，还自带全球CDN加速。&lt;/p&gt;
&lt;h3&gt;Netlify发布网站&lt;/h3&gt;
&lt;p&gt;公共wiki是重新整理后的知识资料集合，其中非文本的资源如图片、PDF、Office格式文件、Keynote等存放至Amazon S3/Aliyun OSS等云服务，网页等内容的快照可使用Wayback Machine备份，然后将这些链接存放至wiki系统。&lt;/p&gt;
&lt;p&gt;wiki资料通过GitHub公共仓库托管，通过netlify生成静态网站。&lt;/p&gt;
&lt;p&gt;我的wiki网站就是通过netlify自动发布，每次更新wiki后，push到GitHub，netlify自动发布，这个过程只需要不到十几秒。&lt;/p&gt;
&lt;h3&gt;私有Note&lt;/h3&gt;
&lt;p&gt;私人备忘和工作涉及的私有非公开的资料集合，其中非文本的资源如图片、PDF、Office格式文件、Keynote等存放至Google Drive/Microsoft OneDrive。然后将这些链接存放至私有Markdown文件中，通过GitHub私有库托管。&lt;/p&gt;
&lt;h3&gt;重要资料&lt;/h3&gt;
&lt;p&gt;密钥等信息通过&lt;code&gt;1Password&lt;/code&gt;托管，重要的资料制作成md文件后通过Google Drive/Microsoft OneDrive等托管，经常需要的重要的资料可通过手机备忘录加密存放。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.&lt;a href=&quot;https://www.slant.co/versus/5116/8769/~tiddlywiki_vs_org-mode&quot;&gt;https://www.slant.co/versus/5116/8769/~tiddlywiki_vs_org-mode&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;2.&lt;a href=&quot;https://github.com/bmpi-dev/wiki.bmpi.dev&quot;&gt;https://github.com/bmpi-dev/wiki.bmpi.dev&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;3.&lt;a href=&quot;https://web.archive.org/web/20191230143823/https://gigaom.com/2012/09/19/the-disappearing-web-information-decay-is-eating-away-our-history/&quot;&gt;https://web.archive.org/web/20191230143823/https://gigaom.com/2012/09/19/the-disappearing-web-information-decay-is-eating-away-our-history/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;4.&lt;a href=&quot;https://aws.amazon.com/cn/s3/&quot;&gt;https://aws.amazon.com/cn/s3/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;5.&lt;a href=&quot;https://en.wikipedia.org/wiki/Wayback_Machine&quot;&gt;https://en.wikipedia.org/wiki/Wayback_Machine&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;6.&lt;a href=&quot;https://wiki.bmpi.dev/#wayback%20machine&quot;&gt;https://wiki.bmpi.dev/#wayback%20machine&lt;/a&gt; &lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;更多精彩洞见，请关注微信公众号：ThoughtWorks洞见&lt;/strong&gt;&lt;/p&gt;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>968960f934c8cef712917ed6d91fc4bb</guid>
<title>手把手教你看懂 Chrome 火焰图</title>
<link>https://toutiao.io/k/p2bovqq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.503006012024048&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicRfd0M1ljysaHQfa3dNbu4KzA21bdAFuKWuLPh87Cf30OyTA32LwuicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;998&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;性能优化的目的&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们每一次的UI的变化，都要经历以下步骤：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.10859375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cic9KMVqDDFVfXwqgryXsYLnzfBZzHqSnxicag5MMicLxBgeUiclMZBQD9zA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们都知道像素管道有五步，&lt;code&gt;JavaScript-&amp;gt;样式计算-&amp;gt;布局-&amp;gt;绘制-&amp;gt;合成&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;人的眼睛大约每秒可以看到 60 帧，那么就代表我们每 16.7ms 就要看到 1 帧，一帧就要经历上图的 5 步，说明我们的每一个任务（task） 不宜过长，这样就会导致用户对于界面感知的不友好性&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;fps 是指页面每秒帧数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;fps = 60 性能极佳&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;fps &amp;lt; 24 会让用户感觉到卡顿，因为人眼的识别主要是24帧&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据谷歌统计的数据，用户在不同时间段内接收到的反馈，可能直接影响到对于网站的用户留存，如下图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.503125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicJiaiaUf7Q2PSIUvSYESfrsCw0EW11mSvZD4CPjOhYt4QDibWv7ZRLwr3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这里我们不深入讲对于这方面的一些细节，这篇文章主要是给大家讲一下，如果做任务切片，如何优化界面的渲染速度和响应速度.&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;什么是chrome性能分析模板？&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;性能你都去哪儿了？俗话说知己知彼百战不殆，我们要了解性能是怎么分配的，才能做好性能优化塞，性能分析模板告诉你答案！&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.526984126984127&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicq21Q9c0lJkkMj5l5c6yb5PtFHabC1Lo1okzWpnwufJbVkr4S2z3FJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;315&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从加载，脚本，渲染，paint（绘制）其他，空闲，通过这种饼状图方式，我们对性能一目了然。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;为何要上手该面板？&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不用白不用。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;开始学习&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进入隐身模式 ctrl+shift+N&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;打开 performance 选项卡&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;点击图中的齿轮，为了模拟移动端，我们根据电脑性能选择相应的cpu节流。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.1286549707602339&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicxW3hJrSZU9mubByF2BGwKURQWvzAG9vp00SwvD9aicxMzoBMafKcUsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1197&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;打开截图功能&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3443163097199341&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicZDhywubWKBx4TkByTu8O5yu2x0JMEFFzQibC2bVy6GrpOx8CYSTauTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;607&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外如果还勾选了memory根据变化还可以看到大致的垃圾回收周期，以及有无明显的内存泄露。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;准备完毕，真刀真枪干。&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.128125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicDGs94mqz4OqYn4BVHgib8Gvyd4rdxTsC4JccOaTfApMav0vycUDuIZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们先获取优化前的各种数据分析:先点击左上角 record 圆点记录优化前版本的运行时性能,过一段时间之后点击停止。圆点旁边的刷新样的标志（大佬叫圆形箭头，hhh）是用于 loading 的性能分析的按钮。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;参观一下性能分析面板&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图片的右边标有:FPS;CPU;NET&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;(Analyze frames per second)帧率,FPS&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;红色横条表示帧率过低已经影响了用户体验，通常情况下&lt;strong&gt;绿条越高,帧率越高,体验越好.当帧率不影响使用的时候横条是不会出现的&lt;/strong&gt;。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.96579476861167&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicxMvrsOQOlFWy3WkDKicuibE9dZ0Womby0oTf8DtZ8xGaIviauPnbdYWibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;994&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;cpu对应下方summary的饼图，哪块大，哪块对应的cpu消耗也就越大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从本图中不难看出花在页面渲染的cpu消耗是最多的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在FPS,CPU,NET上 左右移动鼠标,就可以看到各个时间点的截图,这在分析动画执行的各个阶段,以及了loading的各个阶段的时候尤其有用.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图片左边的部分：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果记录期间包含网络请求那么在 frame 上面还有一栏 Network,会用不同的颜色表示请求不同的资源&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;frames区域，鼠标点上去会显示当前的帧率&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.67734375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicXc7VC7icBLYUBLEOItJJ7HA8viayLRjPFuBCrek0v0NPcYmK0eAk7A4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;在记录过程中按快捷键cmd + shift + p 然后输入 show rendering (打开实时查看帧率的面板),可以看到实时的帧率变化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;main 代表主线程, 一段横条代表执行一个事件(函数),长度越长,花费的时间越多; 竖向代表调用栈.如果在这些横条中右上角是红色的就表示在该段代码执行过程中可能存在性能问题.&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0260416666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicLTZyYWNcvn4fzruJ5Py80IRwRNXCy0tbWrAaVfLuPibZ7foOzjgGSjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;我们可以看到上图中很多黄色横条的右上角是红色的，点击展开 main中的 这一部分: 点击 animation frame fired 事件,可以在下面看到相关信息. 并且可以定位到 source 面板中的相关代码.根据定位到的代码段,阅读代码我们可以发现,问题是出在选中的蓝色背景的这句代码中&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6413570274636511&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicibJ079j47R717iaE5LbdOImcXRm3xDZ5vqtVEVaOwgmRWwaOX7Vjo1CQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1238&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体出了什么问题，不做讨论。[重绘与重排][Link 2]也可以看看谷歌官方文档&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;最后补充一下和summory tab同级的几个tab&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.1294021294021294&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cichS6B3sTNOicv8vJFibCIbnUG4ica6qGT3zFRejhoX0jib9nrzMalrgP7WQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1221&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Bottom-Up,展示浏览器执行的各个操作说占用的时间&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0989583333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicr4K2NmOT8j6qSpAmyzibyav1Yb5KroBibpUGXrr9FuBmia91FiaqfEdNNQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;在 Timeline 中选取一段时间,然后点击 Bottom-Up得到上图,图片中展示浏览器执行的各个操作说占用的时间&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Call Tree,表示浏览器的基本操作(事件执行,绘制...)所占用的时间&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.078125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicVpS8jEicIDjJu0TbETthA5l2atf6QT6aOQXEksabLBOyXvD6LXcN6zA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;同理点击Call Tree 得到上图: 表示浏览器的基本操作(事件执行,绘制...)所占用的时间&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Event Log,可以按照选中时间内事件发生的顺序来查看事件执行所占用的时间.&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0322916666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dm4opUyMicZcp7ibos3cd0hKias59hql2cicwTs9wDIkAVFEgW5TAdfhZa0mCufaNlT639X8x2QRMAezV6GdZxyR5A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同理点击 Event Log得到上图: 可以按照选中时间内事件发生的顺序来查看事件执行所占用的时间.&lt;/p&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;最后&lt;/span&gt;&lt;/h3&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;93802&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;93765&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-role=&quot;paragraph&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;89226&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果你觉得这篇内容对你挺有启发，我想邀请你帮我三个小忙：&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;90215&quot;&gt;&lt;section&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;点个「&lt;strong&gt;在看&lt;/strong&gt;」，让更多的人也能看到这篇内容（喜欢不点在看，都是耍流氓 -_-）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;欢迎加我微信「&lt;strong&gt;qianyu443033099&lt;/strong&gt;」拉你进技术群，长期交流学习...&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;关注公众号「&lt;strong&gt;前端下午茶&lt;/strong&gt;」，持续为你推送精选好文，也可以加我为好友，随时聊骚。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2873134328358209&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/XP4dRIhZqqX9lfzPJgCDkCDPbpxuEjSajtTicNb1Zd6PsTLu9EOplqyafiaibib0VX8oTyDzBMlxnJJ2BZ9AVic1tIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;536&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-role=&quot;outer&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-role=&quot;outer&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;94248&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.6222222222222222&quot; data-type=&quot;png&quot; data-w=&quot;45&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/2wV7LicL762ZUCR5WEela9H9fDfYic8BAp8ib4cmuicFgACoRwORYGwkBtgUVaILLOjXtlGBnicuM5246MgketktMCg/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-brushtype=&quot;text&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;点个在看支持我吧，转发就更好了&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>93744dd887cb29d285cf6632b86a3f1d</guid>
<title>领域驱动设计实践之路（四）：领域驱动在微服务设计中的应用</title>
<link>https://toutiao.io/k/ewxi73t</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;这是“领域驱动设计实践之路”系列的第四篇文章，从单体架构的弊端引入微服务，结合领域驱动的概念介绍了如何做微服务划分、设计领域模型并展示了整体的微服务化的系统架构设计。结合分层架构、六边形架构和整洁架构的思想，以实际使用场景为背景，展示了一个微服务的程序结构设计。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;一、单体架构的弊端&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.33116883116883117&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrvX3GNDRepMJAHFzY0F7Ntq8av0SymNqPhyALbo9BhMRC7xrBphaBZ1Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;462&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;单体结构示例(引用自互联网)&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;一般在业务发展的初期，整个应用涉及的功能需求较少，相对比较简单，单体架构的应用比较容易部署、测试，横向扩展也比较易实现。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;然而，随着需求的不断增加， 越来越多的人加入开发团队，代码库也在飞速地膨胀。慢慢地，单体应用变得越来越臃肿，可维护性、灵活性逐渐降低，维护成本越来越高。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;下面分析下单体架构应用存在的一些弊端：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1、复杂性高&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在项目初期应该有人可以做到对应用各个功能和实现了如指掌，随着业务需求的增多，各种业务流程错综复杂的揉在一起，整个系统变得庞大且复杂，以至于很少有开发者清楚每一个功能和业务流程细节。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这样会使得新业务的需求评估或者异常问题定位会占用较多的时间，同时也蕴含着未知风险。更糟糕的是，这种极度的复杂性会形成一种恶性循环，每一次更改都会使得系统变得更复杂，更难懂。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;2.技术债务多&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;随着时间推移、需求变更和人员更迭，会逐渐形成应用程序的技术债务，并且越积越多。比如，团队必须长期使用一套相同的技术栈，很难采用新的框架和编程语言。有时候想引入一些新的工具时，就会使得项目中需要同时维护多套技术框架，比如同时维护Hibernate和Mybatis，使得成本变高。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;3.错误难隔离&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;由于业务项目的所有功能模块都在一个应用上承担，包括核心和非核心模块，任何一个模块或者一个小细节的地方，因为设计不合理、代码质量差等原因，都有可能造成应用实例的崩溃，从而使得业务全面受到影响。其根本原因就是核心和非核心功能的代码都运行在同一个环境中。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;4. 项目团队间协同成本高，业务响应越来越慢&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;多个类似的业务项目之间势必会存在类似的功能模块，如果都采用单体模式，就会带来重复功能建设和维护。而且，有时候还需要互相产生交互，打通单体系统之间的交互集成和协作的成本也需要额外付出。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;再者，当项目大到一定程度，不同的模块可能是不同的团队来维护，迭代联调的冲突，代码合并分支的冲突都会影响整个开发进度，从而使得业务响应速度越来越慢。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;5.扩展成本高&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;随着业务的发展，系统在出现业务处理瓶颈的时候，往往是由于某一个或几个功能模块负载较高造成的，但因为所有功能都打包在一起，在出现此类问题时，只能通过增加应用实例的方式分担负载，没办法对单独的几个功能模块进行服务能力的扩展，从而带来资源额外配置的消耗，成本较高。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;针对以上痛点，近年来越来越多的互联网公司采用“微服务”架构构建自身的业务平台，而“微服务”也获得了越来越多技术人员的肯定。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;微服务其实是SOA的一种演变后的形态，与SOA的方法和原则没有本质区别。SOA理念的核心价值是，松耦合的服务带来业务的复用，按照业务而不是技术的维度，结合高内聚、低耦合的原则来划分微服务，这正好与领域驱动设计所倡导的理念相契合。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;二、微服务设计&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1. 微服务划分&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;从广义上讲，领域即是一个组织所做的事情以及其中包含的一切。每个组织都有它自己的业务范围和做事方式，这个业务范围以及在其中所进行的活动便是领域。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;DDD的子域和限界上下文的概念，可以很好地跟微服务架构中的服务进行匹配。而且，微服务架构中的自治化团队负责服务开发的概念，也与DDD中每个领域模型都由一个独立团队负责开发的概念吻合。DDD倡导按业务领域来划分系统，微服务架构更强调从业务维度去做分治来应对系统复杂度，跳过业务架构设计出来的架构关注点不在业务响应上，可能就是个大泥球，在面临需求迭代或响应市场变化时就很痛苦。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;DDD的核心诉求就是将业务架构映射到系统架构上，在响应业务变化调整业务架构时，也随之变化系统架构。而微服务追求业务层面的复用，设计出来的系统架构和业务一致；在技术架构上则系统模块之间充分解耦，可以自由地选择合适的技术架构，去中心化地治理技术和数据。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.9711538461538461&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrvFGFF4xEwPLKpAyyfDsmmV70LcT4tvKicxxxLdcylRdQ0LxiaZsPNgmRw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;624&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;以电商的资源订购系统为例，典型业务用例场景包括查看资源，购买资源，查询用户已购资源等。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;领域驱动为每一个子域定义单独的领域模型，子域是领域的一部分，从业务的角度分析我们需要覆盖的业务用例场景，以高内聚低耦合的思想，结合单一职责原则(SRP)和闭包原则(CCP)，从业务领域的角度，划分出用户管理子域，资源管理子域，订单子域和支付子域共四个子域。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;每个子域对应一个限界上下文。限界上下文是一种概念上的边界，领域模型便工作于其中，每个限界上下文都有自己的通用语言。限界上下文使得你在领域模型周围加上了一个显式的、清晰的边界。当然，限界上下文不仅仅包含领域模型。当使用微服务架构时，每个限界上下文对应一个微服务。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;2. &lt;/strong&gt;&lt;strong&gt;领域模型&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6539050535987749&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrve5zmzWL3fjLyYyZOcqHOKgxPEyVRicfTN4iaRQt3vmCzkh1SWibyxpPDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;653&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;聚合是一个边界内领域对象的集群，可以将其视为一个单元，它由根实体和可能的一个或多个其他实体和值对象组成。聚合将领域模型分解为&lt;strong&gt;块&lt;/strong&gt;，每个聚合都可以作为一个单元进行处理。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;聚合根是聚合中唯一可以由外部类引用的部分，客户端只能通过调用聚合根上的方法来更新聚合。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;聚合代表了一致的边界，对于一个设计良好的聚合来说，无论由于何种业务需求而发生改变，在单个事务中，聚合中的所有不变条件都是一致的。聚合的一个很重要的经验设计原则是，一个事务中只修改一个聚合实例。更新聚合时需要更新整个聚合而不是聚合中的一部分，否则容易产生一致性问题。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;比如A和B同时在网上购买东西，使用同一张订单，同时意识到自己购买的东西超过预算，此时A减少点心数量，B减少面包数量，两个消费者并发执行事务，那么订单总额可能会低于最低订单限额要求，但对于一个消费者来说是满足最低限额要求的。所以应该站在聚合根的角度执行更新操作，这会强制执行一致性业务规则。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;另外，我们不应该设计过大的聚合，处理大聚合构成的&quot;巨无霸&quot;对象时，容易出现不同用例同时需要修改其中的某个部分，因为聚合设计时考虑的一致性约束是对整个聚合产生作用的，所以对聚合的修改会造成对聚合整体的变更，如果采用乐观并发，这样就容易产生某些用例会被拒绝的场景，而且还会影响系统的性能和可伸缩性。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;使用大聚合时，往往为了完成一项基本操作，需要将成百上千个对象一同加载到内存中，造成资源的浪费。所以应尽量采用小聚合，一方面使用根实体来表示聚合，其中只包含最小数量的属性或值类型属性，这里的最小数量表示所需的最小属性集合，不多也不少。必须与其他属性保持一致的属性是所需的属性。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在聚合中，如果你认为有些被包含部分应该建模成一个实体，此时，思考下这个部分是否会随着时间而改变，或者该部分是否能被全部替换。如果可以全部替换，那么可以建模成值对象，而非实体。因为值对象本身是不可变的，只能进行全部替换，使用起来更安全，所以，一般情况下优先使用值对象。很多情况下，许多建模成实体的概念都可以重构成值对象。小聚合还有助于事务的成功执行，即它可以减少事务提交冲突，这样不仅可以提升系统的性能和可伸缩性，另外系统的可用性也得到了增强。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;另外聚合直接的引用通过唯一标识实现，而不是通过对象引用，这样不仅减少聚合的使用空间，更重要的是可以实现聚合直接的松耦合。如果聚合是另一个服务的一部分，则不会出现跨服务的对象引用问题，当然在聚合内部对象之间是可以相互引用的。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;上述关于聚合的主要使用原则总结起来可以归纳为以下几点：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;(1) 只引用聚合根。&lt;/p&gt;&lt;p&gt;(2) 通过唯一标识引用其他聚合。&lt;/p&gt;&lt;p&gt;(3) 一个事务中只能创建或修改一个聚合。&lt;/p&gt;&lt;p&gt;(4) 聚合边界之外使用最终一致性。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;当然在实际使用的过程中，比如某一个业务用例需要获取到聚合中的某个领域对象，但该领域对象的获取路径较繁琐，为了兼容该特殊场景，可以将聚合中的属性(实体或值对象)直接返回给应用层，使得应用层直接操作该领域对象。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们经常会遇到在一个聚合上执行命令方法时，还需要在其他聚合上执行额外的业务规则，尽量使用最终一致性，因为最终一致性可以按聚合维度分步骤处理各个环节，从而提升系统的吞吐量。对于一个业务用例，如果应该由执行该用例的用户来保证数据的一致性，那么可以考虑使用事务一致性，当然此时依然需要遵循其他聚合原则。如果需要其他用户或者系统来保证数据一致性，那么使用最终一致性。实际上，最终一致性可以支持绝大部分的业务场景。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;基于上面对电商的资源订购系统业务子域的划分，设计出资源聚合，订单聚合，支付聚合和用户聚合，资源聚合与订单聚合之间通过资源ID进行关联，订单聚合与支付聚合之间通过订单ID和用户ID进行关联，支付聚合和用户聚合之间通过用户ID进行关联。资源聚合根中包含多个资源包值对象，一个资源包值对象又包含多个预览图值对象。当然在实际开发的过程中，根据实际情况聚合根中也可以包含实体对象。每个聚合对应一个微服务，对于特别复杂的系统，一个子域可能包含多个聚合，也就包含多个微服务。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;3. &lt;/strong&gt;&lt;strong&gt;微服务系统架构设计&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7873754152823921&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrvUDibdoiaqRVsOrPYdqYbxiaKziadib9FXibaEV7HQXkxrmoY8G96icibZPcgaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;602&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;基于上面对电商的资源订购系统子域的分析，服务器后台使用用户服务，资源服务，订单服务和支付服务四个微服务实现。上图中的API Gateway也是一种服务，同时可以看成是DDD中的应用层，类似面向对象设计中的外观(Facade)模式。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;作为整个后端架构的统一门面，封装了应用程序内部架构，负责业务用例的任务协调，每个用例对应了一个服务方法，调用多个微服务并将聚合结果返回给客户端。它还可能有其他职责，比如身份验证，访问授权，缓存，速率限制等。以查询已购资源为例，API Gateway需要查询订单服务获取当前用户已购的资源ID列表，然后根据资源ID列表查询资源服务获取已购资源的详细信息，最终将聚合结果返回给客户端。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当然在实际应用的过程中，我们也可以根据API请求的复杂度，从业务角度，将API Gateway划分为多个不同的服务，防止又回归到API Gateway的单体瓶颈。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;另外，有时候从业务领域角度划分出来的某些子域比较小，从资源利用率的角度，单独放到一个微服务中有点单薄。这个时候我们可以打破一个限界上下文对应一个微服务的理念，将多个子域合并到同一个微服务中，由微服务自己的应用层实现多子域任务的协调。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;所以，在我们的系统架构中可能会出现微服务级别的小应用层和API Gateway级别的大应用层使用场景，理论固然是理论，还是需要结合实际情况灵活应用。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;三、领域驱动概念在单个微服务设计中的应用&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1. &lt;/strong&gt;&lt;strong&gt;架构选择分析&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5299647473560517&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrvDm5jUKwAD72M7ibjqd3Yoe1PrBK1YFG8AMlic51KrYZcW87GEBSQ1mVQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;851&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;分层架构图(引用自互联网)&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.8582230623818525&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrvZM8Kx2wyKA3iaDPTJDP02DxP1Pn7pq3MhGXl55DXPM5KkA4ejrz2qNg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;529&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;六边形架构图(引用自互联网)&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6984375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrvCEwa0lrtJQ9zTNZj1AxIF6rAlAIFAaeCoEbYytZ0ibw56b1YFcyywYA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;整洁架构图(引用自互联网&lt;/span&gt;)&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;上面整洁架构图中的同心圆分别代表了软件系统中的不同层次，通常越靠近中心，其所在的软件层次就越高。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;整洁架构的依赖关系规则告诉我们，源码中的依赖关系必须只指向同心圆的内层，即由低层机制指向高层策略。换句话说，任何属于内层圆中的代码都不应该牵涉外层圆中的代码，尤其是内层圆中的代码不应该引用外层圆中代码所声明的名字，包括函数、类、变量以及一切其他有命名的软件实体。同样，外层圆使用的数据格式也不应该被内层圆中的代码所使用，尤其是当数据格式由外层圆的框架所生成时。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;总之，不应该让外层圆中发生的任何变更影响到内层圆的代码。业务实体这一层封装的是整个业务领域中最通用、最高层的业务逻辑，它们应该属于系统中最不容易受外界影响而变动的部分，也就是说一般情况下我们的核心领域模型部分是比较稳定的，不应该因为外层的基础设施比如数据存储技术选型的变化，或者UI展示方式等的变化受影响，从而需要做相应的改动。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在以往的项目经验中，大多数同学习惯也比较熟悉分层架构，一般包括展示层、应用层，领域层和基础设施层。六边形架构的一个重要好处是它将业务逻辑与适配器中包含的表示层和数据访问层的逻辑分离开来，业务逻辑不依赖于表示层逻辑或数据访问层逻辑，由于这种分离，单独测试业务逻辑要容易得多。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;另一个好处是，可以通过多个适配器调用业务逻辑，每个适配器实现特定的API或用户界面。业务逻辑还可以调用多个适配器，每个适配器调用不同的外部系统。所以六边形架构是描述微服务架构中每个服务的架构的好方法。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;根据我们具体的实践经验，比如在我们平时的项目中最常见的就是MySQL和Redis存储，而且也很少改变为其他存储结构。这里将分层架构和六边形架构进行思想融合，目的是一方面希望我们的微服务设计结构更优美，另一方面希望在已有编程习惯的基础上，更容易接受新的整洁架构思想。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们项目中微服务的实现结合分层架构，六边形架构和整洁架构的思想，以实际使用场景为背景，采用的应用程序结构图如下。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.28984375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrvtDicURiakFwjzYYlw43rc0gIR0GwlbV33RHUelVQFRYHrPCTHaUkqMbQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;从上图可以看到，我们一个应用总共包含应用层application，领域层domain和基础设施层infrastructure。领域服务的facade接口需要暴露给其他三方系统，所以单独封装为一个模块。因为我们一般习惯于分层架构模式构建系统，所以按照分层架构给各层命名。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;站在六边形架构的角度，应用层application等同于入站适配器，基础设施层infrastructure等同于出站适配器，所以实际上应用层和基础设施层同属外层，可以认为在同一层。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;facade模块其实是从领域层domain剥离出来的，站在整洁架构的角度，领域层就是内核业务实体，这里封装的是整个业务领域中最通用、最高层的业务逻辑，一般情况下核心领域模型部分是比较稳定的，不受外界影响而变动。facade是微服务暴露给外界的领域服务能力，一般情况下接口的设定应符合当前领域服务的边界界定，所以facade模块属于内核领域层。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;facade接口的实现在应用层application的impl部分，符合整洁架构外层依赖内层的思想，对于impl输入端口和入站适配器，可以采用不同的协议和技术框架实现，比如dubbo或HSF等。下面对各个模块的构成进行逐一解释。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;2. 领域层Domain&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;工厂Factory&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;对象的创建本身是一个主要操作，但被创建的对象并不适合承担复杂的装配操作。将这些职责混在一起可能会产生难以理解的拙劣设计。让客户直接负责创建对象又会使客户的设计陷入混乱，并且破坏装配对象的封装，而且导致客户与被创建对象的实现之间产生过于紧密的耦合。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;复杂对象的创建是领域层的职责，但这项任务并不属于那些用于表示模型的对象。所以一般使用一个单独的工厂类或者在领域服务中提供一个构造领域对象的接口来负责领域对象的创建。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里，我们选择给领域服务增加一个领域对象创建接口来承担工厂的角色。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;php&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@date&lt;/span&gt; 2020/7/27&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ResourceServiceImpl&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ResourceService&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 创建资源聚合模型&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; resourceCreateCommand 创建资源命令&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; ResourceModel createResourceModel(ResourceCreateCommand resourceCreateCommand) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        ResourceModel resourceModel = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; ResourceModel();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Long resId = SequenceUtil.generateUuid();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        resourceModel.setResId(resId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        resourceModel.setName(resourceCreateCommand .getName());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        resourceModel.setAuthor(resourceCreateCommand .getAuthor());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;List&lt;/span&gt;&amp;lt;PackageItem&amp;gt; packageItemList = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        resourceModel.setPackageItemList(packageItemList);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; resourceModel;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;资源库Repository&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;通常将聚合实例存放在资源库中，之后再通过该资源库来获取相同的实例。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果修改了某个聚合，那么这种改变将被资源库持久化，如果从资源库中移除了某个实例，则将无法从资源库中重新获取该实例。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;资源库是针对聚合维度创建的，聚合类型与资源库存在一对一的关系。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;简单来说，资源库是对聚合的CRUD操作的封装。资源库内部采用哪种存储设施MySQL，MongoDB或者Redis等，对领域层来说其实是不感知的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4699570815450644&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrv7NUlaaSauyibSmt79UdJAE3fpTg6kP4iaK8VqLMdgAkffOM5BVAwK8fg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;466&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;资源repository构成图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在我们的项目中采用MySQL作为资源repository的持久化存储，上图中每个DO对应一个数据库表，当然你也可以采用其他存储结构或设计为其他表结构，具体的处理流程均由repository进行封装，对领域服务来说只感知Resource聚合维度的CRUD操作，示例代码如下。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * description: 资源仓储&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@author&lt;/span&gt; Gao Ju&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@date&lt;/span&gt; 2020/08/23&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Repository&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;resourceRepository&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ResourceRepositoryImpl&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ResourceRepository&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 资源Mapper&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Resource&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; ResourceMapper resourceMapper;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 资源包Mapper&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Resource&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; PackageMapper packageMapper;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 资源包预览图Mapper&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Resource&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; PackagePreviewMapper packagePreviewMapper;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 创建订单信息&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; resourceModel 资源聚合模型&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ResourceModel resourceModel)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        ResourceDO resourceDO = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; ResourceDO();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        resourceDO.setName(resourceModel.getName());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        resourceDO.setAuthor(resourceModel.getAuthor());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        List&amp;lt;PackageDO&amp;gt; packageDOList = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        List&amp;lt;PackagePreviewDO&amp;gt; packagePreviewDOList = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (PackageItem packageItem : resourceModel.getPackageItemList()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            PackageDO packageDO = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; PackageDO();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            packageDO.setResId(resourceModel.getResId());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            Long packageId = SequenceUtil.generateUuid();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            packageDO.setPackageId(packageId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (PreviewItem previewItem: packageItem.getPreviewItemList()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                PackagePreviewDO packagePreviewDO = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; PackagePreviewDO();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                packagePreviewDOList.add(packagePreviewDO);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            packageDOList.add(packageDO);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        resourceMapper.insert(resourceDO);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        packageMapper.insertBatch(packageDOList);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        packagePreviewMapper.insertBatch(packagePreviewDOList);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;你可能有疑问，按照整洁架构的思想，repository的接口定义在领域层，repository的实现应该定义在基础设施层，这样就符合外层依赖稳定度较高的内层了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;结合我们实际开发过程，一般存储结构选定或者表结构设定后，一般不太容易做很大的调整，所以就按照习惯的分层结构使用，领域层直接依赖基础设施层实现，降低编码时带来的额外习惯上的成本。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;领域服务Service&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;领域驱动强调我们应该创建充血领域模型，将数据和行为封装在一起，将领域模型与现实世界中的业务对象相映射。各类具备明确的职责划分，将领域逻辑分散到各个领域对象中。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;领域中的服务表示一个无状态的操作，它用于实现特定于某个领域的任务。当某个操作不适合放在领域对象上时，最好的方式是使用领域服务。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;简单总结领域服务本身所承载的职责，就是通过串联领域对象、资源库，生成并发布领域事件，执行事务控制等一系列领域内的对象的行为，为上层应用层提供交互的接口。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * description: 订单领域服务&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@author&lt;/span&gt; Gao Ju&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@date&lt;/span&gt; 2020/8/24&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;UserOrderServiceImpl&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;UserOrderService&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 订单仓储&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; OrderRepository orderRepository;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 消息发布器&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; MessagePublisher messagePublisher;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 订单逻辑处理&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; userOrder 用户订单&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;createOrder&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(UserOrder userOrder)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        orderRepository.add(userOrder);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        OrderCreatedEvent orderCreatedEvent = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; OrderCreatedEvent();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        orderCreatedEvent.setUserId(userOrder.getUserId());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        orderCreatedEvent.setOrderId(userOrder.getOrderId());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        orderCreatedEvent.setPayPrice(userOrder.getPayPrice());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        messagePublisher.send(orderCreatedEvent);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在实践的过程中，为了简单方便，我们仍然采用贫血领域模型，将领域对象自身行为和不属于领域对象的行为都放在领域服务中实现。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;大部分场景领域服务返回聚合根或者简单类型，某些特殊场景也可以将聚合根中包含的实体或值对象返回给调用方。领域服务也可以同时操作多个领域对象，多个聚合，将其转换为另外的输出。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;介于我们实际的使用场景，领域比较简单，领域服务只操作一个领域的对象，只操作一个聚合，由应用服务来协调多个领域对象。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;3. 领域事件DomainEvent&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在领域驱动设计的上下文中，聚合在被创建时，或发生其他重大更改时发布领域事件，领域事件是聚合状态更改时所触发的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;领域事件命名时，一般选择动词的过去分词，因为状态改变时就代表当前事件已经发生，领域事件的每个属性都是原始类型值或值对象，比如事件ID和创建时间等，事件ID也可以用来做幂等用。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;从概念上讲，领域事件由聚合负责发布，聚合知道其状态何时发生变化，从而知道要发布的事件。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;由于聚合不能使用依赖注入，需要通过方法参数的形式将消息发布器传递给聚合，但这将基础设施和业务逻辑交织在一起，有悖于我们解耦设计的原则。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;更好的方法是将事件发布放到领域服务中，因为服务可以使用依赖注入来获取对消息发布器的引用，从而轻松发布事件。只要状态发生变化，聚合就会生成事件，聚合方法的返回值中包括一个事件列表，并将它们返回给领域服务。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Saga是一种在微服务架构中维护数据一致性的机制，Sage由一连串的本地事务组成，每一个本地事务负责更新它所在服务的私有数据库，通过异步消息的方式来协调一系列本地事务，从而维护多个服务之间数据的最终一致性。Saga包括协同式和编排式，&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们采用协同式来实现分布式事务，发布的领域事件以命令式消息的方式发送给Saga参与方。如果领域事件是自我发布自我消费，不依赖消息中间件实现，则可以使用事件总线模式来进行管理。下面以购买资源的过程为例进行说明。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;购买资源的过程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;提交创建订单请求，OrderService创建一个处于PAYING状态的UserOrder，并发布OrderCreated事件。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;UserService消费OrderCreated事件，验证用户是否可以下单，并发布UserVerified事件。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;PaymentService消费UserVerified事件，进行实际的支付操作，并发布PaySuccess事件。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;OrderService接收PaySuccess事件，将UserOrder状态改为PAY_SUCCESS。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;补偿过程&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在Saga的概念中，&lt;/p&gt;&lt;p&gt;第1步叫可补偿性事务，因为后面的步骤可能会失败。&lt;/p&gt;&lt;p&gt;第3步叫关键性事务，因为它后面跟着不可能失败的步骤。第4步叫可重复性事务，因为其总是会成功。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;php&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * description: 领域事件基类&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@author&lt;/span&gt; Gao Ju&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@date&lt;/span&gt; 2020/7/27&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BaseEvent&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 消息唯一ID&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; String messageId;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 事件类型&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; Integer eventType;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 事件创建时间&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; Date createTime;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 事件修改时间&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; Date modifiedTime;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * description: 订单创建事件&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@author&lt;/span&gt; Gao Ju&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@date&lt;/span&gt; 2020/8/24&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;OrderCreatedEvent&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BaseEvent&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 用户ID&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; String userId;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 订单ID&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; String orderId;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 支付价格&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; Integer payPrice;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt;&lt;strong&gt;Facade模块&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;facade和domain属于同一层，某些提供给三方使用的类定义在facade，比如资源类型枚举CategoryEnum限制三方资源使用范围，然后domain依赖facade中enum定义。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;另外，根据迪米特法则和告诉而非询问原则，客户端应该尽量少地知道服务对象内部结构，通过调用服务对象的公共接口的方式来告诉服务对象所要执行的操作。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;所以，我们不应该把领域模型泄露到微服务之外，对外提供facade服务时，根据领域对象包装出一个数据传输对象DTO(Data Transfer Object)，来实现和外部三方系统的交互，比如上图中的ResourceDTO。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt;&lt;strong&gt;应用层Application&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;应用层是业务逻辑的入口，由入站适配器调用。facade的实现，定时任务的执行和消息监听处理器都属于入站适配器，所以他们都位于应用层。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;正常情况下一个微服务对应一个聚合，实践过程中，某些场景下一个微服务可以包含多个聚合，应用层负责用例流的任务协调。领域服务依赖注入应用层，通过领域服务执行领域业务规则，应用层还会处理授权认证，缓存，DTO与领域对象之间的防腐层转换等非领域操作。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * description: 订单facade&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@author&lt;/span&gt; Gao Ju&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@date&lt;/span&gt; 2020/8/24&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;UserOrderFacadeImpl&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;UserOrderFacade&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 订单服务&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Resource&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; UserOrderService userOrderService;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * 创建订单信息&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; orderPurchaseParam 订单交易参数&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     * &lt;span class=&quot;code-snippet__doctag&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; FacadeResponse&amp;lt;UserOrderPurchase&amp;gt; &lt;span class=&quot;code-snippet__title&quot;&gt;createOrder&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(OrderPurchaseParam orderPurchaseParam )&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        UserOrder userOrder = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; UserOrder();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        userOrder.setUserId(request.getUserId());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        userOrder.setResId(request.getResId());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        userOrder.setPayPrice(request.getPayAmount());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        userOrder.setOrderStatus(OrderStatusEnum.Create.getCode());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        userOrderService.handleOrder(userOrder);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        userOrderPurchase.setOrderId(userOrderDO.getId());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        userOrderPurchase.setCreateTime(&lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; Date());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; FacadeResponseFactory.getSuccessInstance(userOrderPurchase);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt;&lt;strong&gt;基础设施层 Infrastructure&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;基础设施的职责是为应用程序的其他部分提供技术支持。与数据库的交互dao模块，与Redis缓存，本地缓存交互的cache模块，与参数中心，三方rpc服务的交互，消息框架消息发布者都封装在基础设施层。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;另外，程序中用到的工具类util模块和异常类exception也统一封装在基础设施层。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;从分层架构的角度，领域层可以依赖基础设施层实现与其他外设的交互。另外，无论从分层架构的上层application层还是从六边形架构的角度的输入端口和适配器application，都可以依赖作为底层或处于同层的输出端口和适配器的infrastructure层，比如调用util或者exception模块。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;四、结束语&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;其实，无论是面向服务架构SOA，微服务，领域驱动，还是中台，其目的都是在说，我们做架构设计的时候，应该从业务视角出发，对所涉及的业务领域，基于高内聚、低耦合的思想进行划分，最大限度且合理的实现业务重用。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这样不仅方便提供专业且稳定的业务服务，更有利于业务的沉淀和可持续发展。业务之下是基于技术的系统实现，技术造就业务，业务引领技术，两者相辅相成，共同为社会进步做出贡献。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;五、参考文献&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[1] 《领域驱动设计软件核心复杂性应对之道》Eric Evans著, 赵俐 盛海燕 刘霞等译，人民邮电出版社&lt;/p&gt;&lt;p&gt;[2] 《实现领域驱动设计》Vaughn Vernon著, 滕云译, 张逸审，电子工业出版社&lt;/p&gt;&lt;p&gt;[3] 《微服务架构设计模式》[美]克里斯.理查森(Chris Richardson) 著, 喻勇译，机械工业出版社&lt;/p&gt;&lt;p&gt;[4] 《架构整洁之道》[美]Robert C.Martin 著，孙宇聪 译，电子工业出版社&lt;/p&gt;&lt;p&gt;[5] 《企业IT架构转型之道阿里巴巴中台战略思想与架构实践》钟华编著，机械工业出版社&lt;/p&gt;&lt;p&gt;[6] &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4NjY4MTU5Nw==&amp;amp;mid=2247486689&amp;amp;idx=1&amp;amp;sn=3d73f1a466aa8270db39a84244df3ac5&amp;amp;chksm=ebd87c73dcaff5655494060e1afe52256627a996b993329fcf7fc9341457d39afab7bfa9e3e7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;领域驱动设计(DDD)实践之路(二)：事件驱动与CQRS&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;领域驱动设计(DDD)实践之路(二)：事件驱动与CQRS&lt;/a&gt;，vivo互联网技术&lt;/p&gt;&lt;p&gt;[7]&lt;a target=&quot;_blank&quot; href=&quot;https://blog.csdn.net/meituantech/article/details/80062248&quot; textvalue=&quot; 领域驱动设计在互联网业务开发中的实践&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt; 领域驱动设计在互联网业务开发中的实践&lt;/a&gt;，美团技术团队&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;END&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;span title=&quot;&quot; opera-tn-ra-cell=&quot;_$.pages:0.layers:0.comps:0.title1&quot;&gt;&lt;p&gt;猜你喜欢&lt;/p&gt;&lt;/span&gt; &lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.1730382&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrvHJJZbdFa7zzq8S5fmniadOUVcicz39BH48M0eNY5S0yEHEI2jic1OJxyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;994&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrvIS8IDAibJpnwyHC34CR1oB1bk008rRysf61ILeiatztStQvYfbCdD4pA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;vivo互联网技术&lt;/span&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;vivo移动互联网是基于vivo 智能手机所建立的完整移动互联网生态圈，围绕vivo大数据运营，打造包括应用、游戏、资讯、品牌、电商、内容、金融、搜索的全方位服务生态，满足海量用户的多样化需求。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;点一下，代码无 Bug&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.8808777&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/4g5IMGibSxt77pLh6qajJzz8YbnibfOsrvM8QiaAiavpWPI4UftXyDCEbJrjoziaXRvopibd4E5L8tZicibhFPVHOVHOPw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;638&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>