<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>27544e5f2e328101a9ac1ac77318c578</guid>
<title>入门区块链，从发币开始</title>
<link>https://toutiao.io/k/i1yyga7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.0890625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/du7xBgeM5niahmzJqk9uibZfJiayFyIaVUADwAq5cy4nuLMTYSU0wPhyynTgDPK7xuTiapVIuNicXlaiaaql2XDbR0oA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;最近币圈新闻比较多，也炒币这么久了，然而却不知道币怎么来了，作为程序猿的我们，有点丢人，话不多说，我们来发一个币，名字叫 CodeToken，简称CTB。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;因为发币，部署，转账等都是要消耗GAS FEE（GAS FEE是什么？GAS FEE可以理解为手续费）的，所以我们在测试网上发币，测试网这里选择的是Rinkeby，首先你要去https://faucet.rinkeby.io/ 领币，步骤都写的很清楚。&lt;/p&gt;&lt;h4&gt;准备工具&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;在线编译器remix：https://remix.ethereum.org/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;主网区块浏览器：https://etherscan.io/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;rinkeby测试网区块浏览器：https://rinkeby.etherscan.io/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;MetaMask钱包插件&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;VPN&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;推特（领币需要）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;1.编码&lt;/h4&gt;&lt;p&gt;打开以太坊区块浏览器（https://etherscan.io/ ） 。如果打不开，需要VPN（&lt;strong&gt;公众号回复VPN，获取免费无限流量VPN&lt;/strong&gt;）哦，我们搜索之前比较火的一个币，YFII（二姨夫），相信炒币的人都了解，难得一遇的百倍币，产生了很多。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.8339483394833949&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7QHnq5ayReYrtia3ic7w0pcvR13nmH9GqyGCCX0YHuJ3yBylzmkPicd5yQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;813&quot;/&gt;&lt;/p&gt;&lt;p&gt;找到后，点击下图的合约地址&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.3753963221306278&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ72CLjbmS0cVMWjV0lqSBqHh4HicQ3Pkj5KCT5fWL7WzJK9YvyRPz93Ig/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1577&quot;/&gt;&lt;/p&gt;&lt;p&gt;ok，代码就在这里了&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5373711340206185&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7Z7icDn4q9ghgTGPDwYicDcp9icj3DAF4QNseMTntCvbnPwJmOrqM8UAkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1552&quot;/&gt;&lt;/p&gt;&lt;p&gt;把里面的代码拷贝出来，按文件划分，写到remix中，如下：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.6929740134744947&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7sFWl3pb6lBur6VwscuEIEBearCKkfvUp0dWbEic2aEsqszZncNEFWtA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1039&quot;/&gt;&lt;/p&gt;&lt;p&gt;代码都是遵循标准的ERC20协议。所有的代码我都加上了注释，方便小伙伴们查看，同时，代码也上传到Github：https://github.com/joeBeckham/codeToken&lt;/p&gt;&lt;h4&gt;2.编译&lt;/h4&gt;&lt;p&gt;代码写完后，我们就要编译一下，看下写的代码有没有问题。&lt;/p&gt;&lt;p&gt;首先我们要清楚，我们发布的主合约是CodeToken，编译的时候要选中CodeToken.sol文件，然后选择remix的左侧的编译按钮，选择solidity版本后，点击下方的Compile CodeToken.sol 按钮，当编译通过后，会发现左侧的编译按钮打上了一个对号，同时，会在文件按钮中新增出一个artifacts文件夹，里面包含编译后的文件。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.7038539553752536&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7Fl9X6xQbfBr2QaqAHk71B4SKrczysADu5FAWUDFaJHiadooIO4x9Faw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;493&quot;/&gt;&lt;/p&gt;&lt;h4&gt;3.部署&lt;/h4&gt;&lt;p&gt;编译通过了，接下来就要开始部署了。&lt;/p&gt;&lt;p&gt;首先，要清楚的是，remix左侧的第三个按钮是发布按钮。点击发布按钮，会看到有ENVIRONMENT、ACCOUNT 、GAS LIMIT、CONTRACT等。&lt;/p&gt;&lt;p&gt;其中，ENVIRONMENT有如下几个选项：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;JavaScript VM：这是Remix自己的内部沙箱。它不连接到MainNet，TestNet或任何专用网络。这是一个内存中的区块链，可用于简单测试和快速挖掘。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Injected Web3：这是用于浏览器插件（MetaMask）的选项。在这里，Remix将对区块链集成的所有控制权交给MetaMask插件。此时，MetaMask控制要连接到的网络。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Web3 Provider：这允许在Remix中输入URL以连接到区块链。此处最常见的设置是运行本地节点并通过其IP/端口连接到该节点&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;ENVIRONMENT我们选择 Injected Web3。&lt;/p&gt;&lt;p&gt;ACCOUNT 、GAS LIMIT默认即可，CONTRACT 则要选择 CodeToken.sol 主合约。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.3581818181818182&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ77Et6MdmvZXestsQOqYicvIQdrfHictZNsxCN2Jr6CAkg0dLnbjUJpyNQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;550&quot;/&gt;&lt;/p&gt;&lt;p&gt;一切就绪，那么，点击 Deploy 发布按钮，会弹出小狐狸确认框，此处会消耗GAS FEE，&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.6937354988399071&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7kLULATGCibnQnYjgPdXfdFyqscBVAXopETbYRWjTInibGe01PibsHH6yA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;431&quot;/&gt;&lt;/p&gt;&lt;p&gt;点击确认，我们会看到remix的控制台上有如下输出：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.4399126001456664&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7DwTafsXvjpYerXKjXD2vtrCnOxrzNdtiaLKdkFuQVNRmBqg9XiavPN3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1373&quot;/&gt;&lt;/p&gt;&lt;p&gt;包含了交易的状态、hash、gas等信息，status我们看到是成功的，我们把这笔交易拿到以太坊区块浏览器上去查看，当然，要去测试网的以太坊区块浏览器中查看，复制 &lt;strong&gt;transaction hash&lt;/strong&gt; ，然后 打开 https://rinkeby.etherscan.io/ ，会看到这笔交易的详细信息：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.680259499536608&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7UTcQoTEOTBTcu45o27kbqoM63IgyBMzvicF8xPKa7A3YFbxVuwWmabQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1079&quot;/&gt;&lt;/p&gt;&lt;p&gt;那么我们怎么查看部署的合约呢？&lt;/p&gt;&lt;p&gt;复制 From 地址，在区块浏览器中查询，找到此地址发布的合约：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.4197994987468672&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7tozAbp7TVasBEFWJtZTtmVDplKicKic8oNeAhoiclJgibN24AjdqJicDA0g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1596&quot;/&gt;&lt;/p&gt;&lt;p&gt;点进去即可看到。&lt;/p&gt;&lt;h4&gt;4.验证合约方法&lt;/h4&gt;&lt;p&gt;合约部署完成后，我们要验证下方法。依然是部署菜单，点击 &amp;gt; ，会看到 一堆的东西，不要慌，我们一起解读下&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.5802707930367506&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7h8YHMLoibt22oiaJLQXib08tIEicadwdR3BbOnpyNic1BnKdZgF6KEFMhXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;517&quot;/&gt;&lt;/p&gt;&lt;p&gt;这些都是我们定义在合约的变量和方法。&lt;/p&gt;&lt;p&gt;点击 totalSupply变量，我们查看下 发布的token总量，没错，是0，因为我们还没有铸币&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.31151832460732987&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7ff6e5IM7KlEzEghlxviaAP9Y4nFtXVibD4GznL4sACzyRMeYUasNr1tA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;382&quot;/&gt;&lt;/p&gt;&lt;p&gt;正如CodeToken代码中所写一样，要铸币（mint方法），首先要 有铸币权限的地址，要想有铸币权限的地址，就必须先给某个地址添加铸币权限（addMinter方法），添加铸币权限并不是每个用户都可以操作的，需要是治理管理员地址（governance变量），默认的治理管理员地址（governance变量）是部署合约的地址用户，如果想要修改治理管理员地址，需要设置治理管理员地址（setGovernance方法），这个方法要求调用者必须为当前治理管理员地址，这样就理解了吧。&lt;/p&gt;&lt;p&gt;我们在重新梳理一下，总结两句话：&lt;/p&gt;&lt;p&gt;我们来实践一下：&lt;/p&gt;&lt;p&gt;1.把小狐狸的账号切换到刚刚我们发布合约的账号；&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.9886621315192744&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7lC2gAiacE7ptlvGKl31WaXA8uQo64icicV4IKb4oiax52ibKgicic9DR0RdRg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;441&quot;/&gt;&lt;/p&gt;&lt;p&gt;2.把test账号设置为拥有铸币权限，把test的地址复制到 addMinter 后面的框中，点击 addMinter 框，小狐狸确认后，我们看到这笔交易是成功的&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.2889908256880734&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7ib9E8zhE5RoNDk6icR8Fb39GKQoZ93yVE5bp9UDM8UhPIOCAib5A1aWzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1526&quot;/&gt;&lt;/p&gt;&lt;p&gt;3.查询下test账号的地址是否拥有铸币权限&lt;/p&gt;&lt;p&gt;将test账号的地址复制到 minters 后面的框中，点击，true，验证通过&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.25699745547073793&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7BvicgsYWtq6bvCoRXU2Ra44tzcPCy19KrL26NgfmLwJMIGSx2tk7EvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;393&quot;/&gt;&lt;/p&gt;&lt;p&gt;4.铸币，使用test账号的地址来铸币10000个&lt;/p&gt;&lt;p&gt;在mint后面的框中输入参数 0xf43d31E51c78dEdDA5E12711401e3B516b207fB7,10000000000000000000000，10000后面加18个0，因为链上是不使用小数的。&lt;/p&gt;&lt;p&gt;点击mint按钮，小狐狸确认后，我们看到这笔交易是失败的&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.2607561929595828&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ75U58Pp79PicXyRefWK8lJVZzAukzlNVLyEhmYP3iayZKPqqjWUXicpMWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1534&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们点击上面的链接，查看这笔交易失败的原因：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.40076335877862596&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7nJG9icbCicnnwZpuQln0afiaYudDdiahRqiarjticu8HLhj224bel1tLL2gA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1048&quot;/&gt;&lt;/p&gt;&lt;p&gt;没错，错误是 不是miniter，我们捋一下，我们设置了 test账号地址 拥有铸币权限，但是 我们小狐狸账号是 nice&lt;span&gt;gogogo账号，显然，nice&lt;/span&gt;gogogo我们没有设置铸币权限。so，把小狐狸账号切换到 test账号&lt;/p&gt;&lt;p&gt;重新执行，ok，交易成功。&lt;/p&gt;&lt;p&gt;5.查看币的总量，点击 totalSupply&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.3047858942065491&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ72zh8wmeYggrw8yKD6oY7Mg9eWtBAJZe7hdicYYaMfvc8riceiclRKjXAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;397&quot;/&gt;&lt;/p&gt;&lt;p&gt;去掉18个0，总量10000，没错。&lt;/p&gt;&lt;p&gt;6.测试下转账方法&lt;/p&gt;&lt;p&gt;使用当前小狐狸账户（test账号）来给 hhhhh 账号转500个CTB，在 transfer 后面的框中输入：0x83B109CF083f0c8Bcc9ab07aF964B135Df325771,500000000000000000000，点击transfer按钮，&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.23297262889879058&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7vdibqb9onAxEPaJcrtiakEufwBc7KadDwsagXyicibFZC7FylwE1iakMZpA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1571&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们查看小狐狸的test账号，原来应该是有10000个CTB的，转账500个成功后，剩余 9500个。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.6823266219239374&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7IqpD2peEHf5sXPZtaJLrPPNgwxX7yicDcFjpc0jJeiaiarF2HGAuH9OcA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;447&quot;/&gt;&lt;/p&gt;&lt;p&gt;查看hhhhh账号的CTB，没有CTB，先添加代币&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.6823266219239374&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7tIrGQfhL4ZDxh3e1uoibatvRXOqYaVMtqjC4S0bAQZnO1AsA3ovD4eQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;447&quot;/&gt;&lt;/p&gt;&lt;p&gt;查看CTB余额，果然是500个&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.6823266219239374&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7pFya3I9ZhQAeUBBdhyicYufbHT9YHJ1u0rictQGC9vsYLUic9mTCWuThw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;447&quot;/&gt;&lt;/p&gt;&lt;h4&gt;5.发布源代码&lt;/h4&gt;&lt;p&gt;合约部署测试完成后，我们打开ETH区块链浏览器，搜索我们发的token，CTB，注意，这次发的token合约地址是0x120d5ce8be6f65e51776086aefbb3f83b491b33c&lt;/p&gt;&lt;p&gt;搜索的时候你可能会发现有两个 CTB，因为有一个是我测试的时候发的。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.4407853071564281&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7OgZxBUpqFI4VaQZ3vMAUIpfPu2UZceo1vtDaOgmglGoQ4W0ic2iaCukw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1579&quot;/&gt;&lt;/p&gt;&lt;p&gt;点击合约地址后，然后选择Contract选项，看不到我们的源代码，并看到 有Verify And Publish，没错，是因为我们还没有 上传代码并开源。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.488296488946684&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7ydoyGl7BSP72sHibj9FBG8ax5EUanbsYQy0Tf7X07vsIw5cZFL88NJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1538&quot;/&gt;&lt;/p&gt;&lt;p&gt;点击Verify And Publish，选择 编译器类型、solidity版本、开源证书类型，点击继续&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.7513611615245009&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7EJOOqfUamtbLQ8KWaOU6MYHpGPHexQ6UYlRo2qPiabcaQ89D7dzNslg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1102&quot;/&gt;&lt;/p&gt;&lt;p&gt;上传文件：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5536062378167641&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7hZVQeDQ7nID2NBTw57biajZBjHosJOQV5PicuO1yPrlwtG1xNrm3icLHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1026&quot;/&gt;&lt;/p&gt;&lt;p&gt;上传完文件后，拉到最底部，进行人机身份验证后，点击Verify And Publish&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.24623115577889448&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ74alNdQrtOEt0YLbac9uWMibyP6VVgpUricDicrJoNdkQvPcONPmrXibmog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1393&quot;/&gt;&lt;/p&gt;&lt;p&gt;等待一会，ok，源代码上传完成。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.3842315369261477&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7rxFxP7QeICCVCThydvYRj2k8eX6RmqadoeQ7y7N5mR8RibCqiajCktAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1002&quot;/&gt;&lt;/p&gt;&lt;p&gt;这样，整个合约就部署发布完成了。出了在remix中调用方法外，还可以在区块浏览器中调用，搜索刚刚发布的币 CTB，打开后 会看到 有Read Contract 和 Write Contract&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.3479643765903308&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5ng14DlJuh7XrnncvpNDkiaZ7g8ibH9Qsicatj283UYy66Kf25lGomrMT0d3TSDowtxldz57enS6Hic6pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1572&quot;/&gt;&lt;/p&gt;&lt;p&gt;这就是我们发布的 CTB 币，我们实现了标准的ERC20协议中的接口。&lt;/p&gt;&lt;p&gt;炒币不如了解怎么发币，知其然还要知其所以然，很NICE哦。&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages __bg_gif&quot; data-ratio=&quot;0.204&quot; data-type=&quot;gif&quot; data-w=&quot;500&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/du7xBgeM5nhubeOr7uLdPGUiajmqk3pIq2KjYw9CMRETicNuiacRFm66H3E1ZC4soIGbMYbfmJwOMOYSH1jndSmQQ/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/du7xBgeM5nia4xfEIOuMorhv5ed8otG15MQPlqEyUNd5ZmNQ7Tq1iclCI2syx6VOaPyibuulKGv7amIUaiaTjQ7ANA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d854038904b97ecc82328013e288604b</guid>
<title>上周我面了个三年 Javaer，这几个问题都没答出来</title>
<link>https://toutiao.io/k/9dtuitl</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;身为  Java Web 开发我发现很多人一些 Web 基础问题都答不上来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上周我面试了一个三年经验的小伙子，一开始我问他 HTTP/1、HTTP/2相关的他到是能答点东西出来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后来我问他：你知道 HTTP 的本质是什么吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他支支吾吾答不出来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我接着问那你知道什么是 HTTP 和 RPC 的关系吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么要有 RPC？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他眼睛盯着桌上的水，额了半天。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后我跟他说回家等通知吧（当然还有很多都答不上来哈，多方位我都问了）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面完试之后我回去问了同事相同的问题，我发现答的也不够好，有些地方有点混淆。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以今儿我就整理一波来说说这类问题，相信看完文章之后你会有进一步的认识。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.1053540587219344&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nEy43f7sR2HnDpF6FWbfCMH6KsnNZGDMZDHONXCpMLXuKykAcOsxZ8XgXHIjicllYMN2o7bnibicSI1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;579&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;HTTP 的本质&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先你要明确 HTTP 是一个协议，是一个超文本传输协议。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它基于 TCP/IP 来传输文本、图片、视频、音频等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;重点来了&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;HTTP 不提供数据包的传输功能，也就是数据包从浏览器到服务端再来回的&lt;span&gt;传输&lt;/span&gt;和它没关系。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是 TCP/IP 干的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那 HTTP 有啥用？我们来分析一波。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们上网要么就是获取一些信息来看，要么就是修改一些信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如你用浏览器刷微博就是获取信息，发微博就是修改信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以说浏览器需要告知服务器它需要什么，这次的请求是要获取哪些信息？发怎么样的微博。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就涉及到浏览器和服务器之间的通信交互。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而&lt;span&gt;交互就需要一种格式&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;像你我之间的谈话就用中文，你要突然换成俄语我听不懂那不就 GG 了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以说 HTTP 它规定了一种格式，一种通信格式，大家都用这个格式来交谈。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样不论你是什么服务器、什么浏览器都能顺利的交流，&lt;span&gt;减少交互的成本&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就像全世界如果都讲中文，那我们不就不需要学英文了，那不就较少交互的成本了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不像现在我们还得学英文，不然就看不懂文档等等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;万一之后俄语又起来了，咱还得对接俄文，这交互成本是不是就上来了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而网络世界还好，咱们现在的 Web 交互基本上就是 HTTP 了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实 HTTP 协议的格式很像我们信封，有个固定的格式。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.47454545454545455&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nEy43f7sR2HnDpF6FWbfCMHdopImepRSLOphlKJekOotaaibAW0C4Jo1GVdwmouQ2zkibKJj6vq3pCw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;550&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;左上角写邮编，右上角贴邮票，然后地址姓名啥的依次来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为计算机是很死板的，不像我们人一样有一种立体扫描感，所以要规定先写头、再写尾。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你要是先写尾，再写头计算机就认不出来了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以 HTTP 就规定了请求先搞请求行、再搞请求报头、再搞请求体。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;响应就状态行、响应报头、响应体。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.31725888324873097&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nEy43f7sR2HnDpF6FWbfCMHYSD7k4HTJ5fRJhE7NXSVQvPUqVI0d7dUQ9pTPAxazZXFSRMiadraZLg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1182&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以 HTTP 的本质是什么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就是&lt;span&gt;客户端和服务端约定好的一种通信格式&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对 HTTP 想有多的认识可以看我之前的文章 &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkxNTE3NjQ3MA==&amp;amp;mid=2247485724&amp;amp;idx=1&amp;amp;sn=70f1bbea6280ca6cee467ceac4633c8a&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;从 1950 年开始说起，带你看 HTTP 的演进之路&lt;/a&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;HTTP 和 RPC 的关系&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;HTTP 和 RPC 其实是两个维度的东西， HTTP 指的是通信协议。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 RPC 则是远程调用，其对应的是本地调用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RPC 的通信可以用 HTTP 协议，也可以自定义协议，是不做约束的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;像之前的单体时代，我们的 service 调用就是自己实现的方法，是本地进程内的调用。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;    public User getUserById(Long id) {&lt;br/&gt;       &lt;span&gt;return&lt;/span&gt; userDao.getUserById(id); // 这叫本地调用&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在都是微服务了，根据业务模块做了不同的拆分，像用户的服务不用我这个小组负责，我这小组只要写订单服务就行了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是我们服务需要用到用户的信息，于是我们需要调用用户小组的服务，于是代码变成了以下这种&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;    public User getUserById(Long id) {&lt;br/&gt;       &lt;span&gt;return&lt;/span&gt; userConsumer.getUserById(id); // 这是远程调用，逻辑是用户小组的服务实现的。&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可能还有些小伙伴不太清楚，再来看个图。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3676595744680851&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nEy43f7sR2HnDpF6FWbfCMHGicjTxWXenhZ075KZXzwKe8KkBOsth6bRGDThXbibZ2cBlYAOr5PB8ZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1175&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把之前的用户实现拆分出来弄了一个用户服务，订单相关的也拆成了订单服务，都单独部署。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样订单相关的服务要获取用户的信息就需要远程调用了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到 RPC 就是通过网络进行远程调用，订单服务其实就是客户端，而用户服务是服务端。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这又涉及到交互了，所以也需要约定一个格式，&lt;span&gt;至于要不要用 HTTP 这个格式，就是大家自己看着办&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至此相信你对 HTTP 是啥也清楚了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RPC 和 HTTP 的之间的关系也清楚了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下次再也不怕被面试官问这个了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;那为什么要有 RPC？&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可能你常听到什么什么之间是 RPC 调用的，那你有没有想过为什么要 RPC， 我们直接 WebClient HTTP 调用不行么？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实 RPC 调用是因为服务的拆分，或者本身公司内部的多个服务之间的通信。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务的拆分独立部署，那服务间的调用就必然需要网络通信，用 WebClient 调用当然可行，但是比较麻烦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们想即使服务被拆分了但是&lt;span&gt;使用起来还是和之前本地调用一样方便&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以就出现了 RPC 框架，来屏蔽这些底层调用细节，使得我们编码上还是和之前本地调用相差不多。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并且 HTTP 协议比较的冗余，RPC 都是内部调用所以不需要太考虑通用性，只要公司内部保持格式统一即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以可以&lt;span&gt;做各种定制化的协议来使得通信更高效&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如规定 yes 代表 yes的练级攻略，你看是不是更高效了，少传输的 5 个字。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就像特殊行动的暗号，高效简洁！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以公司内部服务的调用一般都用 RPC，而 HTTP 的优势在于通用，大家都认可这个协议。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以&lt;span&gt;三方平台提供的接口都是通过 HTTP 协议调用的&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以现在知道为什么我们调用第三方都是 HTTP ，公司内部用 RPC 了吧？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面这段话看起来仿佛 HTTP 和 RPC 是对等关系，不过相信大家看了之前的解析心里应该都有数了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近几次面试下来我发现挺多同学基础还是挺薄弱的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地基要牢啊，八股文得背没错，但是这种基本概念性的东西还是有必要清晰。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看起来好像对平时的编码没什么用，但是这可以认为是一个“世界观”。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这对于一些事物的判断和认知有很重要的意义。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你站的高才能看的远。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对了，理解了 HTTP 的本质相信你对 RESTful 风格也应该会有更深一层的理解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;H&lt;/span&gt;&lt;span&gt;TTP 它是协议，不是运输通道。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;下一篇我会&lt;/span&gt;&lt;span&gt;剖析下&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;span&gt;RESTful &lt;/span&gt;&lt;/span&gt;&lt;span&gt;，让你知其然知其所以然，敬请期待。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;欢迎加我好友进行深入地交流，备注「进群」，拉你进交流&amp;amp;内推群。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;平日的面试题遇到难处，或者看某个知识点翻遍全网的资料还是感觉很模糊、不透彻，可以私聊我，给我留言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;遇到合适的我会整理写出一篇文章，注意这个前提我认为合适的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那种工作遇到很细节的场景的还是别了，这种问你上司比较合适：）。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.1555555555555554&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nEy43f7sR2HnDpF6FWbfCMHU1RribEAG0WREar1MOBBJMswaiclUGib6ZC7s3gTrkhIShMuNbgQ3HJWA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;270&quot;/&gt;&lt;/figure&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我是 yes，从一点点到亿点点，欢迎在看、转发、留言，我们下篇见。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.2436974789915967&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eSdk75TK4nEy43f7sR2HnDpF6FWbfCMH8AKh8H9iaJPCUDhPmWPEzMvZEl2Z9rmoVe5uxE8vTtOibjYwcEALdDmg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1071&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b30d9c4ef17b9995337779de9d71dc7d</guid>
<title>程序员必知必会的十大排序算法</title>
<link>https://toutiao.io/k/zoyne3a</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;绪论&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;身为程序员，十大排序是是所有合格程序员所必备和掌握的，并且热门的算法比如快排、归并排序还可能问的比较细致，对算法性能和复杂度的掌握有要求。bigsai作为一个负责任的Java和数据结构与算法方向的小博主，在这方面肯定不能让读者们有所漏洞。跟着本篇走，带你捋一捋常见的十大排序算法，轻轻松松掌握！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先对于排序来说大多数人对排序的概念停留在冒泡排序或者JDK中的Arrays.sort()，手写各种排序对很多人来说都是一种奢望，更别说十大排序算法了，不过还好你遇到了本篇文章！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于排序的分类，主要不同的维度比如复杂度来分、内外部、比较非比较等维度来分类。我们正常讲的十大排序算法是内部排序，我们更多将他们分为两大类：基于&lt;strong&gt;「比较和非比较」&lt;/strong&gt;这个维度去分排序种类。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;「非比较类的有桶排序、基数排序、计数排序」&lt;/strong&gt;。也有很多人将排序归纳为8大排序，那就是因为基数排序、计数排序是建立在桶排序之上或者是一种特殊的桶排序，但是基数排序和计数排序有它特有的特征，所以在这里就将他们归纳为10种经典排序算法。而比较类排序也可分为&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;比较类排序也有更细致的分法，有基于交换的、基于插入的、基于选择的、基于归并的，更细致的可以看下面的脑图。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6503623188405797&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkRha8Nz7KiacJSWJq6ORrM98v8aqdsZegeR4RjicjgH36HfrvSn2sicsGQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2208&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;脑图&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;交换类&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;冒泡排序&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;冒泡排序，又称起泡排序，它是一种基于交换的排序典型，也是快排思想的基础，冒泡排序是一种稳定排序算法，时间复杂度为O(n^2).基本思想是：&lt;strong&gt;「循环遍历多次每次从前往后把大元素往后调，每次确定一个最大(最小)元素，多次后达到排序序列。」&lt;/strong&gt;(或者从后向前把小元素往前调)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体思想为(把大元素往后调)：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;从第一个元素开始往后遍历，每到一个位置判断是否比后面的元素大，如果比后面元素大，那么就交换两者大小，然后继续向后，这样的话进行一轮之后就可以保证&lt;strong&gt;「最大的那个数被交换交换到最末的位置可以确定」&lt;/strong&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第二次同样从开始起向后判断着前进，如果当前位置比后面一个位置更大的那么就和他后面的那个数交换。但是有点注意的是，这次并不需要判断到最后，只需要判断到倒数第二个位置就行(因为第一次我们已经确定最大的在倒数第一，这次的目的是确定倒数第二)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;同理，后面的遍历长度每次减一，直到第一个元素使得整个元素有序。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如&lt;code&gt;2 5 3 1 4&lt;/code&gt;排序过程如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5840867992766727&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkFGxhaBkDice3bvxWU7CMeHAR7ZkoiaErmtTdRbsFD0yZLy3ic1tFo1Lyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2212&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;实现代码为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt;  &lt;span&gt;maopaosort&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[] a)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;// TODO Auto-generated method stub&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=a.length-&lt;span&gt;1&lt;/span&gt;;i&amp;gt;=&lt;span&gt;0&lt;/span&gt;;i--)&lt;br/&gt;  {&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j=&lt;span&gt;0&lt;/span&gt;;j&amp;lt;i;j++)&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt;(a[j]&amp;gt;a[j+&lt;span&gt;1&lt;/span&gt;])&lt;br/&gt;      {&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; team=a[j];&lt;br/&gt;        a[j]=a[j+&lt;span&gt;1&lt;/span&gt;];&lt;br/&gt;        a[j+&lt;span&gt;1&lt;/span&gt;]=team;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;快速排序&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;快速排序是对冒泡排序的一种改进，采用递归分治的方法进行求解。而快排相比冒泡是一种不稳定排序,时间复杂度最坏是O(n^2),平均时间复杂度为O(nlogn),最好情况的时间复杂度为O(nlogn)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于快排来说，&lt;strong&gt;「基本思想」&lt;/strong&gt;是这样的&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;快排需要将序列变成两个部分，就是&lt;strong&gt;「序列左边全部小于一个数」&lt;/strong&gt;，&lt;strong&gt;「序列右面全部大于一个数」&lt;/strong&gt;，然后利用递归的思想再将左序列当成一个完整的序列再进行排序，同样把序列的右侧也当成一个完整的序列进行排序。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其中这个数在这个序列中是可以随机取的，可以取最左边，可以取最右边，当然也可以取随机数。但是&lt;strong&gt;「通常」&lt;/strong&gt;不优化情况我们取最左边的那个数。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4367606915377616&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkBoom9vCVosjTa6mMOU9ESMmNOiaPP13iaubcwc5UOdNa3oEHy6WIPEsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2198&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;实现代码为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;quicksort&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; [] a,&lt;span&gt;int&lt;/span&gt; left,&lt;span&gt;int&lt;/span&gt; right)&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; low=left;&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; high=right;&lt;br/&gt;  &lt;span&gt;//下面两句的顺序一定不能混，否则会产生数组越界！！！very important！！！&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt;(low&amp;gt;high)&lt;span&gt;//作为判断是否截止条件&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; k=a[low];&lt;span&gt;//额外空间k，取最左侧的一个作为衡量，最后要求左侧都比它小，右侧都比它大。&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt;(low&amp;lt;high)&lt;span&gt;//这一轮要求把左侧小于a[low],右侧大于a[low]。&lt;/span&gt;&lt;br/&gt;  {&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt;(low&amp;lt;high&amp;amp;&amp;amp;a[high]&amp;gt;=k)&lt;span&gt;//右侧找到第一个小于k的停止&lt;/span&gt;&lt;br/&gt;    {&lt;br/&gt;      high--;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;//这样就找到第一个比它小的了&lt;/span&gt;&lt;br/&gt;    a[low]=a[high];&lt;span&gt;//放到low位置&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt;(low&amp;lt;high&amp;amp;&amp;amp;a[low]&amp;lt;=k)&lt;span&gt;//在low往右找到第一个大于k的，放到右侧a[high]位置&lt;/span&gt;&lt;br/&gt;    {&lt;br/&gt;      low++;&lt;br/&gt;    }&lt;br/&gt;    a[high]=a[low];   &lt;br/&gt;  }&lt;br/&gt;  a[low]=k;&lt;span&gt;//赋值然后左右递归分治求之&lt;/span&gt;&lt;br/&gt;  quicksort(a, left, low-&lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;  quicksort(a, low+&lt;span&gt;1&lt;/span&gt;, right);  &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;插入类排序&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;直接插入排序&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接插入排序在所有排序算法中的是最简单排序方式之一。和我们上学时候 从前往后、按高矮顺序排序，那么一堆高低无序的人群中，从第一个开始，如果前面有比自己高的，就直接插入到合适的位置。&lt;strong&gt;「一直到队伍的最后一个完成插入」&lt;/strong&gt;整个队列才能满足有序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接插入排序遍历比较时间复杂度是每次O(n),交换的时间复杂度每次也是O(n),那么n次总共的时间复杂度就是O(n^2)。有人会问折半(二分)插入能否优化成O(nlogn),答案是不能的。因为二分只能减少查找复杂度每次为O(logn),而插入的时间复杂度每次为O(n)级别，这样总的时间复杂度级别还是O(n^2).&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插入排序的具体步骤：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;选取当前位置(当前位置前面已经有序) 目标就是将当前位置数据插入到前面合适位置。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;向前枚举或者二分查找，找到待插入的位置。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;移动数组，赋值交换，达到插入效果。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.39831401475237094&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkhwLBNnotVCL99PGSdiaHxuk51XWm6KydEx4gDgmsUzcfOlictse7gYKg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1898&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;实现代码为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;insertsort&lt;/span&gt; &lt;span&gt;(&lt;span&gt;int&lt;/span&gt; a[])&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; team=&lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;1&lt;/span&gt;;i&amp;lt;a.length;i++)&lt;br/&gt;  {&lt;br/&gt;    System.out.println(Arrays.toString(a));&lt;br/&gt;    team=a[i];&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j=i-&lt;span&gt;1&lt;/span&gt;;j&amp;gt;=&lt;span&gt;0&lt;/span&gt;;j--)&lt;br/&gt;    {&lt;br/&gt;&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt;(a[j]&amp;gt;team)&lt;br/&gt;      {&lt;br/&gt;        a[j+&lt;span&gt;1&lt;/span&gt;]=a[j];&lt;br/&gt;        a[j]=team; &lt;br/&gt;      } &lt;br/&gt;      &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  } &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;希尔排序&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接插入排序因为是O(n^2),在数据量很大或者数据移动位次太多会导致效率太低。很多排序都会想办法拆分序列，然后组合，希尔排序就是以一种特殊的方式进行预处理，考虑到了&lt;strong&gt;「数据量和有序性」&lt;/strong&gt;两个方面纬度来设计算法。使得序列前后之间小的尽量在前面，大的尽量在后面，进行若干次的分组别计算，最后一组即是一趟完整的直接插入排序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于一个&lt;code&gt;长串&lt;/code&gt;，希尔首先将序列分割(非线性分割)而是&lt;strong&gt;「按照某个数模」&lt;/strong&gt;(&lt;code&gt;取余&lt;/code&gt;这个类似报数1、2、3、4。1、2、3、4)这样形式上在一组的分割先&lt;strong&gt;「各组分别进行直接插入排序」&lt;/strong&gt;,这样&lt;strong&gt;「很小的数在后面」&lt;/strong&gt;可以通过&lt;strong&gt;「较少的次数移动到相对靠前」&lt;/strong&gt;的位置。然后慢慢合并变长，再稍稍移动。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为每次这样插入都会使得序列变得更加有序，稍微有序序列执行直接插入排序成本并不高。所以这样能够在合并到最终的时候基本小的在前，大的在后，代价越来越小。这样希尔排序相比插入排序还是能节省不少时间的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5086916742909423&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkyr9XJQ5gwEaoH7maYp7oaLVfNfHQeA7QKZJoR0cKictREoatrjONZ6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2186&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;实现代码为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;shellsort&lt;/span&gt; &lt;span&gt;(&lt;span&gt;int&lt;/span&gt; a[])&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; d=a.length;&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; team=&lt;span&gt;0&lt;/span&gt;;&lt;span&gt;//临时变量&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(;d&amp;gt;=&lt;span&gt;1&lt;/span&gt;;d/=&lt;span&gt;2&lt;/span&gt;)&lt;span&gt;//共分成d组&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=d;i&amp;lt;a.length;i++)&lt;span&gt;//到那个元素就看这个元素在的那个组即可&lt;/span&gt;&lt;br/&gt;    {&lt;br/&gt;      team=a[i];&lt;br/&gt;      &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j=i-d;j&amp;gt;=&lt;span&gt;0&lt;/span&gt;;j-=d)&lt;br/&gt;      {    &lt;br/&gt;        &lt;span&gt;if&lt;/span&gt;(a[j]&amp;gt;team)&lt;br/&gt;        {&lt;br/&gt;          a[j+d]=a[j];&lt;br/&gt;          a[j]=team; &lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;          &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;      }&lt;br/&gt;    } &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;选择类排序&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;简单选择排序&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单选择排序（Selection sort）是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到&lt;strong&gt;「已排序序列的末尾」&lt;/strong&gt;。以此类推，直到所有元素均排序完毕。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6903137789904502&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkgHZ9L9j69x9mic3NL6aTyzkzeh22JCvYcMIeYica5XI9ttnbbBpicNQcg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1466&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;实现代码为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;selectSort&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[] arr)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; arr.length - &lt;span&gt;1&lt;/span&gt;; i++) {&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; min = i; &lt;span&gt;// 最小位置&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = i + &lt;span&gt;1&lt;/span&gt;; j &amp;lt; arr.length; j++) {&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (arr[j] &amp;lt; arr[min]) {&lt;br/&gt;        min = j; &lt;span&gt;// 更换最小位置&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (min != i) {&lt;br/&gt;      swap(arr, i, min); &lt;span&gt;// 与第i个位置进行交换&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;swap&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[] arr, &lt;span&gt;int&lt;/span&gt; i, &lt;span&gt;int&lt;/span&gt; j)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; temp = arr[i];&lt;br/&gt;  arr[i] = arr[j];&lt;br/&gt;  arr[j] = temp;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;堆排序&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于堆排序，首先是建立在堆的基础上，堆是一棵完全二叉树，还要先认识下大根堆和小根堆，完全二叉树中所有节点均大于(或小于)它的孩子节点，所以这里就分为两种情况&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果所有节点&lt;strong&gt;「大于」&lt;/strong&gt;孩子节点值，那么这个堆叫做&lt;strong&gt;「大根堆」&lt;/strong&gt;，堆的最大值在根节点。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果所有节点&lt;strong&gt;「小于」&lt;/strong&gt;孩子节点值，那么这个堆叫做&lt;strong&gt;「小根堆」&lt;/strong&gt;，堆的最小值在根节点。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3686030428769018&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkibLdVLtsPpdcRUSTEfYbEjoibHCxRlHb1HIUZD5EXfv68DDTKZqkkskg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1446&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;堆排序首先就是&lt;strong&gt;「建堆」&lt;/strong&gt;，然后再是调整。对于二叉树(数组表示)，我们从下往上进行调整，从&lt;strong&gt;「第一个非叶子节点」&lt;/strong&gt;开始向前调整，对于调整的规则如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建堆是一个O(n)的时间复杂度过程，建堆完成后就需要进行删除头排序。给定数组建堆(creatHeap)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;①从第一个非叶子节点开始判断交换下移(shiftDown)，使得当前节点和子孩子能够保持堆的性质&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;②但是普通节点替换可能没问题，对如果交换打破子孩子堆结构性质，那么就要重新下移(shiftDown)被交换的节点一直到停止。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4158183241973375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpk8d13ULBl3fxpwVjxPydCtEmOXNFTRbmQiaictE6xEj8iaKxbOvibdJEFpg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1277&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;堆构造完成，取第一个堆顶元素为最小(最大)，剩下左右孩子依然满足堆的性值，但是缺个堆顶元素，如果给孩子调上来，可能会调动太多并且可能破坏堆结构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;①所以索性把最后一个元素放到第一位。这样只需要判断交换下移(shiftDown）,不过需要注意此时整个堆的大小已经发生了变化，我们在逻辑上不会使用被抛弃的位置，所以在设计函数的时候需要附带一个堆大小的参数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;②重复以上操作，一直堆中所有元素都被取得停止。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5374094931617055&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpksIDD39OT0wBiaafyQWr9OANTTvTUVPKMSia3Vv6h2hFST4xqmFmFTcuA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1243&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;而堆算法复杂度的分析上，之前建堆时间复杂度是O(n)。而每次删除堆顶然后需要向下交换，每个个数最坏为logn个。这样复杂度就为O(nlogn).总的时间复杂度为O(n)+O(nlogn)=O(nlogn).&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现代码为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;swap&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; arr[],&lt;span&gt;int&lt;/span&gt; m,&lt;span&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; team=arr[m];&lt;br/&gt;  arr[m]=arr[n];&lt;br/&gt;  arr[n]=team;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;//下移交换 把当前节点有效变换成一个堆(小根)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;shiftDown&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; arr[],&lt;span&gt;int&lt;/span&gt; index,&lt;span&gt;int&lt;/span&gt; len)&lt;/span&gt;&lt;span&gt;//0 号位置不用&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; leftchild=index*&lt;span&gt;2&lt;/span&gt;+&lt;span&gt;1&lt;/span&gt;;&lt;span&gt;//左孩子&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; rightchild=index*&lt;span&gt;2&lt;/span&gt;+&lt;span&gt;2&lt;/span&gt;;&lt;span&gt;//右孩子&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt;(leftchild&amp;gt;=len)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(rightchild&amp;lt;len&amp;amp;&amp;amp;arr[rightchild]&amp;lt;arr[index]&amp;amp;&amp;amp;arr[rightchild]&amp;lt;arr[leftchild])&lt;span&gt;//右孩子在范围内并且应该交换&lt;/span&gt;&lt;br/&gt;  {&lt;br/&gt;    swap(arr, index, rightchild);&lt;span&gt;//交换节点值&lt;/span&gt;&lt;br/&gt;    shiftDown(arr, rightchild, len);&lt;span&gt;//可能会对孩子节点的堆有影响，向下重构&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(arr[leftchild]&amp;lt;arr[index])&lt;span&gt;//交换左孩子&lt;/span&gt;&lt;br/&gt;  {&lt;br/&gt;    swap(arr, index, leftchild);&lt;br/&gt;    shiftDown(arr, leftchild, len);&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;//将数组创建成堆&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;creatHeap&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; arr[])&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=arr.length/&lt;span&gt;2&lt;/span&gt;;i&amp;gt;=&lt;span&gt;0&lt;/span&gt;;i--)&lt;br/&gt;  {&lt;br/&gt;    shiftDown(arr, i,arr.length);&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;heapSort&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; arr[])&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;{&lt;br/&gt;  System.out.println(&lt;span&gt;&quot;原始数组为         ：&quot;&lt;/span&gt;+Arrays.toString(arr));&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; val[]=&lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[arr.length]; &lt;span&gt;//临时储存结果&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;//step1建堆&lt;/span&gt;&lt;br/&gt;  creatHeap(arr);&lt;br/&gt;  System.out.println(&lt;span&gt;&quot;建堆后的序列为  ：&quot;&lt;/span&gt;+Arrays.toString(arr));&lt;br/&gt;  &lt;span&gt;//step2 进行n次取值建堆，每次取堆顶元素放到val数组中，最终结果即为一个递增排序的序列&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;arr.length;i++)&lt;br/&gt;  {&lt;br/&gt;    val[i]=arr[&lt;span&gt;0&lt;/span&gt;];&lt;span&gt;//将堆顶放入结果中&lt;/span&gt;&lt;br/&gt;    arr[&lt;span&gt;0&lt;/span&gt;]=arr[arr.length-&lt;span&gt;1&lt;/span&gt;-i];&lt;span&gt;//删除堆顶元素，将末尾元素放到堆顶&lt;/span&gt;&lt;br/&gt;    shiftDown(arr, &lt;span&gt;0&lt;/span&gt;, arr.length-i);&lt;span&gt;//将这个堆调整为合法的小根堆，注意(逻辑上的)长度有变化&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;//数值克隆复制&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;arr.length;i++)&lt;br/&gt;  {&lt;br/&gt;    arr[i]=val[i];&lt;br/&gt;  }&lt;br/&gt;  System.out.println(&lt;span&gt;&quot;堆排序后的序列为:&quot;&lt;/span&gt;+Arrays.toString(arr));&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;归并类排序&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在归并类排序一般只讲归并排序，但是归并排序也分二路归并、多路归并，这里就讲较多的二路归并排序，且用递归方式实现。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;归并排序&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;归并和快排都是&lt;strong&gt;「基于分治算法」&lt;/strong&gt;的，分治算法其实应用挺多的，很多分治会用到递归，但事实上&lt;strong&gt;「分治和递归是两把事」&lt;/strong&gt;。分治就是分而治之，可以采用递归实现，也可以自己遍历实现非递归方式。而归并排序就是先将问题分解成代价较小的子问题，子问题再采取代价较小的合并方式完成一个排序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至于归并的思想是这样的：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;第一次：整串先进行划分成一个一个单独，第一次是将序列中(&lt;code&gt;1 2 3 4 5 6---&lt;/code&gt;)两两归并成有序，归并完(&lt;code&gt;xx xx xx xx----&lt;/code&gt;)这样局部有序的序列。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第二次就是两两归并成若干四个(&lt;code&gt;1 2 3 4 5 6 7 8 ----&lt;/code&gt;)&lt;strong&gt;「每个小局部是有序的」&lt;/strong&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;就这样一直到最后这个串串只剩一个，然而这个耗费的总次数logn。每次操作的时间复杂的又是&lt;code&gt;O(n)&lt;/code&gt;。所以总共的时间复杂度为&lt;code&gt;O(nlogn)&lt;/code&gt;.&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7037914691943128&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkcjPHp459F3tpeU9HEFLzowFX3FJiczmia6icb9IbaH8jeN6f0JggY8nzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1688&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;合并为一个O(n)的过程：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7901234567901234&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkicrYjJ1vFTEqT4nC3HyicDyndSHiclibUXEdUxic9lM1dfzvte1zthUGA1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1296&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;实现代码为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;mergesort&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[] array, &lt;span&gt;int&lt;/span&gt; left, &lt;span&gt;int&lt;/span&gt; right)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; mid=(left+right)/&lt;span&gt;2&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt;(left&amp;lt;right)&lt;br/&gt;  {&lt;br/&gt;    mergesort(array, left, mid);&lt;br/&gt;    mergesort(array, mid+&lt;span&gt;1&lt;/span&gt;, right);&lt;br/&gt;    merge(array, left,mid, right);&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;merge&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[] array, &lt;span&gt;int&lt;/span&gt; l, &lt;span&gt;int&lt;/span&gt; mid, &lt;span&gt;int&lt;/span&gt; r)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; lindex=l;&lt;span&gt;int&lt;/span&gt; rindex=mid+&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; team[]=&lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[r-l+&lt;span&gt;1&lt;/span&gt;];&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; teamindex=&lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt; (lindex&amp;lt;=mid&amp;amp;&amp;amp;rindex&amp;lt;=r) {&lt;span&gt;//先左右比较合并&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(array[lindex]&amp;lt;=array[rindex])&lt;br/&gt;    {&lt;br/&gt;      team[teamindex++]=array[lindex++];&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;else&lt;/span&gt; {    &lt;br/&gt;      team[teamindex++]=array[rindex++];&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt;(lindex&amp;lt;=mid)&lt;span&gt;//当一个越界后剩余按序列添加即可&lt;/span&gt;&lt;br/&gt;  {&lt;br/&gt;    team[teamindex++]=array[lindex++];&lt;br/&gt;&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt;(rindex&amp;lt;=r)&lt;br/&gt;  {&lt;br/&gt;    team[teamindex++]=array[rindex++];&lt;br/&gt;  } &lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;teamindex;i++)&lt;br/&gt;  {&lt;br/&gt;    array[l+i]=team[i];&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;桶类排序&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;桶排序&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;桶排序是一种用空间换取时间的排序，桶排序重要的是它的思想，而不是具体实现，时间复杂度最好可能是线性O(n)，桶排序不是基于比较的排序而是一种分配式的。桶排序从字面的意思上看：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;桶：若干个桶，说明此类排序将数据放入若干个桶中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;桶：每个桶有容量，桶是有一定容积的容器，所以每个桶中可能有多个元素。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;桶：从整体来看，整个排序更希望桶能够更匀称，即既不溢出(太多)又不太少。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;桶排序的思想为：&lt;strong&gt;「将待排序的序列分到若干个桶中，每个桶内的元素再进行个别排序。」&lt;/strong&gt;  当然桶排序选择的方案跟具体的数据有关系，桶排序是一个比较广泛的概念，并且计数排序是一种特殊的桶排序，基数排序也是建立在桶排序的基础上。在数据分布均匀且每个桶元素趋近一个时间复杂度能达到O(n),但是如果数据范围较大且相对集中就不太适合使用桶排序。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8197146562905318&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkg6DWXdnn4Yy7JGiboGMb9pj1R17wUYeZ3YT5H3DSibHsxUXJFibBMqT9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1542&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;实现一个简单桶排序：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; java.util.ArrayList;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.List;&lt;br/&gt;&lt;span&gt;//微信公众号：bigsai&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;bucketSort&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; a[]= {&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;8&lt;/span&gt;,&lt;span&gt;7&lt;/span&gt;,&lt;span&gt;44&lt;/span&gt;,&lt;span&gt;42&lt;/span&gt;,&lt;span&gt;46&lt;/span&gt;,&lt;span&gt;38&lt;/span&gt;,&lt;span&gt;34&lt;/span&gt;,&lt;span&gt;33&lt;/span&gt;,&lt;span&gt;17&lt;/span&gt;,&lt;span&gt;15&lt;/span&gt;,&lt;span&gt;16&lt;/span&gt;,&lt;span&gt;27&lt;/span&gt;,&lt;span&gt;28&lt;/span&gt;,&lt;span&gt;24&lt;/span&gt;};&lt;br/&gt;  List[] buckets=&lt;span&gt;new&lt;/span&gt; ArrayList[&lt;span&gt;5&lt;/span&gt;];&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;buckets.length;i++)&lt;span&gt;//初始化&lt;/span&gt;&lt;br/&gt;  {&lt;br/&gt;   buckets[i]=&lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;Integer&amp;gt;();&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;a.length;i++)&lt;span&gt;//将待排序序列放入对应桶中&lt;/span&gt;&lt;br/&gt;  {&lt;br/&gt;   &lt;span&gt;int&lt;/span&gt; index=a[i]/&lt;span&gt;10&lt;/span&gt;;&lt;span&gt;//对应的桶号&lt;/span&gt;&lt;br/&gt;   buckets[index].add(a[i]);&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;buckets.length;i++)&lt;span&gt;//每个桶内进行排序(使用系统自带快排)&lt;/span&gt;&lt;br/&gt;  {&lt;br/&gt;   buckets[i].sort(&lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;   &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; j=&lt;span&gt;0&lt;/span&gt;;j&amp;lt;buckets[i].size();j++)&lt;span&gt;//顺便打印输出&lt;/span&gt;&lt;br/&gt;   {&lt;br/&gt;    System.out.print(buckets[i].get(j)+&lt;span&gt;&quot; &quot;&lt;/span&gt;);&lt;br/&gt;   }&lt;br/&gt;  } &lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;计数排序&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;计数排序是一种特殊的桶排序，每个桶的大小为1，每个桶不在用List表示，而通常用一个值用来计数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在&lt;strong&gt;「设计具体算法的时候」&lt;/strong&gt;，先找到最小值min，再找最大值max。然后创建这个区间大小的数组,从min的位置开始计数，这样就可以最大程度的压缩空间，提高空间的使用效率。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6816568047337278&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkPdhkTYOXhuyRHKnky7uPLW5o9ef8mgUO1ZW8dgmwxZ36G7tdia77DuA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;845&quot;/&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;countSort&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; a[])&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; min=Integer.MAX_VALUE;&lt;span&gt;int&lt;/span&gt; max=Integer.MIN_VALUE;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;a.length;i++)&lt;span&gt;//找到max和min&lt;/span&gt;&lt;br/&gt;  {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(a[i]&amp;lt;min) &lt;br/&gt;      min=a[i];&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(a[i]&amp;gt;max)&lt;br/&gt;      max=a[i];&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; count[]=&lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[max-min+&lt;span&gt;1&lt;/span&gt;];&lt;span&gt;//对元素进行计数&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;a.length;i++)&lt;br/&gt;  {&lt;br/&gt;    count[a[i]-min]++;&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;//排序取值&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; index=&lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;count.length;i++)&lt;br/&gt;  {&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt; (count[i]--&amp;gt;&lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;      a[index++]=i+min;&lt;span&gt;//有min才是真正值&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;基数排序&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基数排序是一种很容易理解但是比较难实现(优化)的算法。基数排序也称为卡片排序，基数排序的原理就是多次利用计数排序(计数排序是一种特殊的桶排序)，但是和前面的普通桶排序和计数排序有所区别的是，&lt;strong&gt;「基数排序并不是将一个整体分配到一个桶中」&lt;/strong&gt;，而是将自身拆分成一个个组成的元素，每个元素分别顺序分配放入桶中、顺序收集，当从前往后或者从后往前每个位置都进行过这样顺序的分配、收集后，就获得了一个有序的数列。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.418426103646833&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkBibpnLFrHe3kOSq7ar4fTxQU16gEbiaoOWnM2CGRsHp1H9Wze4WyHssA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2084&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;如果是数字类型排序，那么这个桶只需要装0-9大小的数字，但是如果是字符类型，那么就需要注意ASCII的范围。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以遇到这种情况我们基数排序思想很简单，就拿 934，241，3366，4399这几个数字进行基数排序的一趟过程来看，第一次会根据各位进行分配、收集：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4780952380952381&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkZa4LEm9soqTcgIBAJdw5dF9GN6ia7r2KrdXPKQxyhicnXY7RXtVRDQtQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2100&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;分配和收集都是有序的，第二次会根据十位进行分配、收集，此次是在第一次个位分配、收集基础上进行的，所以所有数字单看个位十位是有序的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.485024154589372&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkBrqDzfk6KP21dn2hU2BibcYlPnKVlB5tRR5c1Jn4zjWpfEo5lkVMYhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2070&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;而第三次就是对百位进行分配收集，此次完成之后百位及其以下是有序的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.46948818897637795&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkScWJOvm8zntbWuQa9nP9cm98AdLA6jWKpZrVJuecPBue42ZpbpFL3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2032&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;而最后一次的时候进行处理的时候，千位有的数字需要补零，这次完毕后后千位及以后都有序，即整个序列排序完成。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.47214076246334313&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkohRCaJhwBg4QUFQfpg1XHzssIVSib9m4gcV2Yrs3rJeqTHPKHtg9MDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2046&quot;/&gt;&lt;span/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;简单实现代码为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;radixSort&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[] arr)&lt;/span&gt;&lt;span&gt;//int 类型 从右往左&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;{&lt;br/&gt;  List&amp;lt;Integer&amp;gt;bucket[]=&lt;span&gt;new&lt;/span&gt; ArrayList[&lt;span&gt;10&lt;/span&gt;];&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;&lt;span&gt;10&lt;/span&gt;;i++)&lt;br/&gt;  {&lt;br/&gt;    bucket[i]=&lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;Integer&amp;gt;();&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;//找到最大值&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; max=&lt;span&gt;0&lt;/span&gt;;&lt;span&gt;//假设都是正数&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;arr.length;i++)&lt;br/&gt;  {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(arr[i]&amp;gt;max)&lt;br/&gt;      max=arr[i];&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; divideNum=&lt;span&gt;1&lt;/span&gt;;&lt;span&gt;//1 10 100 100……用来求对应位的数字&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt; (max&amp;gt;&lt;span&gt;0&lt;/span&gt;) {&lt;span&gt;//max 和num 控制&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; num:arr)&lt;br/&gt;    {&lt;br/&gt;      bucket[(num/divideNum)%&lt;span&gt;10&lt;/span&gt;].add(num);&lt;span&gt;//分配 将对应位置的数字放到对应bucket中&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;    divideNum*=&lt;span&gt;10&lt;/span&gt;;&lt;br/&gt;    max/=&lt;span&gt;10&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; idx=&lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;//收集 重新捡起数据&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt;(List&amp;lt;Integer&amp;gt;list:bucket)&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; num:list)&lt;br/&gt;      {&lt;br/&gt;        arr[idx++]=num;&lt;br/&gt;      }&lt;br/&gt;      list.clear();&lt;span&gt;//收集完需要清空留下次继续使用&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，基数排序还有字符串等长、不等长、一维数组优化等各种实现需要需学习，具体可以参考公众号内其他文章。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;结语&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本次十大排序就这么潇洒的过了一遍，我想大家都应该有所领悟了吧！对于算法总结，避免不必要的劳动力，我分享这个表格给大家：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;排序算法&lt;/th&gt;&lt;th&gt;平均时间复杂度&lt;/th&gt;&lt;th&gt;最好&lt;/th&gt;&lt;th&gt;最坏&lt;/th&gt;&lt;th&gt;空间复杂度&lt;/th&gt;&lt;th&gt;稳定性&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;冒泡排序&lt;/td&gt;&lt;td&gt;O(n^2)&lt;/td&gt;&lt;td&gt;O(n)&lt;/td&gt;&lt;td&gt;O(n^2)&lt;/td&gt;&lt;td&gt;O(1)&lt;/td&gt;&lt;td&gt;稳定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;快速排序&lt;/td&gt;&lt;td&gt;O(nlogn)&lt;/td&gt;&lt;td&gt;O(nlogn)&lt;/td&gt;&lt;td&gt;O(n^2)&lt;/td&gt;&lt;td&gt;O(logn)&lt;/td&gt;&lt;td&gt;不稳定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;插入排序&lt;/td&gt;&lt;td&gt;O(n^2)&lt;/td&gt;&lt;td&gt;O(n)&lt;/td&gt;&lt;td&gt;O(n^2)&lt;/td&gt;&lt;td&gt;O(1)&lt;/td&gt;&lt;td&gt;稳定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;希尔排序&lt;/td&gt;&lt;td&gt;O(n^1.3)&lt;/td&gt;&lt;td&gt;O(n)&lt;/td&gt;&lt;td&gt;O(nlog2n)&lt;/td&gt;&lt;td&gt;O(1)&lt;/td&gt;&lt;td&gt;不稳定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;选择排序&lt;/td&gt;&lt;td&gt;O(n^2)&lt;/td&gt;&lt;td&gt;O(n^2)&lt;/td&gt;&lt;td&gt;O(n^2)&lt;/td&gt;&lt;td&gt;O(1)&lt;/td&gt;&lt;td&gt;不稳定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;堆排序&lt;/td&gt;&lt;td&gt;O(nlogn)&lt;/td&gt;&lt;td&gt;O(nlogn)&lt;/td&gt;&lt;td&gt;O(nlogn)&lt;/td&gt;&lt;td&gt;O(1)&lt;/td&gt;&lt;td&gt;不稳定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;归并排序&lt;/td&gt;&lt;td&gt;O(nlogn)&lt;/td&gt;&lt;td&gt;O(nlogn)&lt;/td&gt;&lt;td&gt;O(nlogn)&lt;/td&gt;&lt;td&gt;O(n)&lt;/td&gt;&lt;td&gt;稳定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;桶排序&lt;/td&gt;&lt;td&gt;O(n+k)&lt;/td&gt;&lt;td&gt;O(n+k)&lt;/td&gt;&lt;td&gt;O(n+k)&lt;/td&gt;&lt;td&gt;O(n+k)&lt;/td&gt;&lt;td&gt;稳定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;计数排序&lt;/td&gt;&lt;td&gt;O(n+k)&lt;/td&gt;&lt;td&gt;O(n+k)&lt;/td&gt;&lt;td&gt;O(n+k)&lt;/td&gt;&lt;td&gt;O(k)&lt;/td&gt;&lt;td&gt;稳定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;基数排序&lt;/td&gt;&lt;td&gt;O(n*k)&lt;/td&gt;&lt;td&gt;O(n*k)&lt;/td&gt;&lt;td&gt;O(n*k)&lt;/td&gt;&lt;td&gt;O(n+k)&lt;/td&gt;&lt;td&gt;稳定&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;原创不易，bigsai请你帮两件事帮忙一下:&lt;/strong&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;点赞、在看、分享支&lt;/strong&gt;&lt;/span&gt;持一下， 您的肯定是我创作的源源动力。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;微信搜索「&lt;strong&gt;「bigsai」&lt;/strong&gt;」，关注我的公众号，不仅免费送你电子书，我还会第一时间在公众号分享知识技术。&lt;strong&gt;加我还可拉你进力扣打卡群&lt;/strong&gt;一起打卡LeetCode。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;记得关注、咱们下次再见！&lt;/p&gt;&lt;section&gt;&lt;strong&gt;近期精彩：&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247485498&amp;amp;idx=1&amp;amp;sn=1487f8657949d2cb849d2f0e6f953c96&amp;amp;chksm=ce1a2f8bf96da69db0778dd445662d8d1ed59706b716787f8bbb524560473bfae8221ddb0a3c&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;「万字图文」史上最姨母级Java继承详解&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247485144&amp;amp;idx=1&amp;amp;sn=2624bdd152e1bbaba99d3363943999d3&amp;amp;chksm=ce1a2169f96da87fd4a36009a31c7567bdb34b009a2acf4ed17edeee645d147082a62b0a4532&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;图解|双轴快排分析&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247484764&amp;amp;idx=1&amp;amp;sn=abc1ca0a2470f0bb2e3d543fc66ced4d&amp;amp;chksm=ce1a22edf96dabfba04b385be4c3dcc3e8b726572c9a947a9de23187ca505eaa207123fb02ed&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;MongoDB助力一个物流订单系统&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247485126&amp;amp;idx=2&amp;amp;sn=d443dcabfacf4082ab089a453ca209dd&amp;amp;chksm=ce1a2177f96da861e0040e4afdd30ad2a668c5070e1a630b43df4f60b1f72f9fb2daff26e939&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;面试官:什么是缓存穿透、缓存雪崩、缓存击穿？&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247485341&amp;amp;idx=1&amp;amp;sn=9322f5ea2eca0fb3f6927d87c3b532fb&amp;amp;chksm=ce1a202cf96da93a615868dba376b98d77561b88cdcc776bd58c4dd8e00d52b9b9267ad9f3a1&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;16张图带你彻底搞懂基数排序&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247485201&amp;amp;idx=1&amp;amp;sn=e2eb19410784b5bcb085d1e6775b6966&amp;amp;chksm=ce1a20a0f96da9b69778cabb9d09f70dfedef073fcc47acd131060934611c991099aac57dff9&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;8张图带你分析Redis与MySQL数据一致性问题&lt;/a&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3579175704989154&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThzO89HSicFib3OHh3XbfTWfpkz3MPz4z4aQWDDSdicmSz2qgghYda9psNPW2Jo37U0O5GhJB1yNosbxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2766&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b833a5133975af89b4c13e6b6a3662d7</guid>
<title>Flutter 源码剖析（四）：flutter run 流程解析</title>
<link>https://toutiao.io/k/bmtd9fz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;关于&lt;code&gt;flutter run&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;flutter run&lt;/code&gt;负责执行构建一个flutter工程，输出产物到对应设备，并负责提供基本的交互控制，使用效果如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;$ flutter run&lt;br/&gt;Launching lib/main.dart on COL AL10 &lt;span&gt;in&lt;/span&gt; debug mode...&lt;br/&gt;Running Gradle task &lt;span&gt;&#x27;assembleDebug&#x27;&lt;/span&gt;...&lt;br/&gt;Running Gradle task &lt;span&gt;&#x27;assembleDebug&#x27;&lt;/span&gt;... Done                        23.8s&lt;br/&gt;✓ Built build/app/outputs/flutter-apk/app-debug.apk.&lt;br/&gt;Installing build/app/outputs/flutter-apk/app.apk...                13.7s&lt;br/&gt;Waiting &lt;span&gt;for&lt;/span&gt; COL AL10 to report its views...                          7ms&lt;br/&gt;Syncing files to device COL AL10...                                279ms&lt;br/&gt;&lt;br/&gt;Flutter run key commands.&lt;br/&gt;r Hot reload. 🔥🔥🔥&lt;br/&gt;R Hot restart.&lt;br/&gt;h Repeat this &lt;span&gt;help&lt;/span&gt; message.&lt;br/&gt;d Detach (terminate &lt;span&gt;&quot;flutter run&quot;&lt;/span&gt; but leave application running).&lt;br/&gt;c Clear the screen&lt;br/&gt;q Quit (terminate the application on the device).&lt;br/&gt;An Observatory debugger and profiler on COL AL10 is available at: http://127.0.0.1:65470/jL7vVcN78XI=/&lt;br/&gt;D/AwareBitmapCacher(10010): handleInit switch not opened pid=10010&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面走读这个命令的执行流程。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;lib/executable.dart#main&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;lib/executable.dart#main&lt;/code&gt;是所有命令执行的入口：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Future&amp;lt;&lt;span&gt;void&lt;/span&gt;&amp;gt; main(&lt;span&gt;List&lt;/span&gt;&amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt; args) &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;  ....&lt;br/&gt;  &lt;span&gt;await&lt;/span&gt; runner.run(args, () =&amp;gt; &amp;lt;FlutterCommand&amp;gt;[&lt;br/&gt;    AssembleCommand(),&lt;br/&gt;    AttachCommand(verboseHelp: verboseHelp),&lt;br/&gt;    RunCommand(verboseHelp: verboseHelp),&lt;br/&gt;    ScreenshotCommand(),&lt;br/&gt;    ShellCompletionCommand(),&lt;br/&gt;    ....&lt;br/&gt;  );&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过层层封装转调之后，&lt;code&gt;flutter run&lt;/code&gt;这个命令，最终会调用到&lt;code&gt;lib/src/commands/run.dart#RunCommand&lt;/code&gt;的&lt;code&gt;runCommand&lt;/code&gt;方法。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;RunCommand#runCommand&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;核心代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;  &lt;span&gt;@override&lt;/span&gt;&lt;br/&gt;  Future&amp;lt;FlutterCommandResult&amp;gt; runCommand() &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;// Enable hot mode by default if `--no-hot` was not passed and we are in&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;// debug mode.&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; hotMode = shouldUseHotMode();&lt;br/&gt;&lt;br/&gt;    writePidFile(stringArg(&lt;span&gt;&#x27;pid-file&#x27;&lt;/span&gt;));&lt;br/&gt;&lt;br/&gt;    ......&lt;br/&gt;    ResidentRunner runner;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; applicationBinaryPath = stringArg(&lt;span&gt;&#x27;use-application-binary&#x27;&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (hotMode &amp;amp;&amp;amp; !webMode) {&lt;br/&gt;      runner = HotRunner(&lt;br/&gt;        flutterDevices,&lt;br/&gt;        target: targetFile,&lt;br/&gt;        debuggingOptions: _createDebuggingOptions(),&lt;br/&gt;        benchmarkMode: boolArg(&lt;span&gt;&#x27;benchmark&#x27;&lt;/span&gt;),&lt;br/&gt;        applicationBinary: applicationBinaryPath == &lt;span&gt;null&lt;/span&gt;&lt;br/&gt;            ? &lt;span&gt;null&lt;/span&gt;&lt;br/&gt;            : globals.fs.file(applicationBinaryPath),&lt;br/&gt;        projectRootPath: stringArg(&lt;span&gt;&#x27;project-root&#x27;&lt;/span&gt;),&lt;br/&gt;        dillOutputPath: stringArg(&lt;span&gt;&#x27;output-dill&#x27;&lt;/span&gt;),&lt;br/&gt;        stayResident: stayResident,&lt;br/&gt;        ipv6: ipv6,&lt;br/&gt;      );&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (webMode) {&lt;br/&gt;      ......&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;      ......&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;DateTime&lt;/span&gt; appStartedTime;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; Completer&amp;lt;&lt;span&gt;void&lt;/span&gt;&amp;gt; appStartedTimeRecorder = Completer&amp;lt;&lt;span&gt;void&lt;/span&gt;&amp;gt;.&lt;span&gt;sync&lt;/span&gt;();&lt;br/&gt;    &lt;span&gt;// This callback can&#x27;t throw.&lt;/span&gt;&lt;br/&gt;    unawaited(appStartedTimeRecorder.future.then&amp;lt;&lt;span&gt;void&lt;/span&gt;&amp;gt;(&lt;br/&gt;      (_) {&lt;br/&gt;        appStartedTime = globals.systemClock.now();&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (stayResident) {&lt;br/&gt;          TerminalHandler(runner)&lt;br/&gt;            ..setupTerminal()&lt;br/&gt;            ..registerSignalHandlers();&lt;br/&gt;        }&lt;br/&gt;      }&lt;br/&gt;    ));&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; result = &lt;span&gt;await&lt;/span&gt; runner.run(&lt;br/&gt;      appStartedCompleter: appStartedTimeRecorder,&lt;br/&gt;      route: route,&lt;br/&gt;    );&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (result != &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;      throwToolExit(&lt;span&gt;null&lt;/span&gt;, exitCode: result);&lt;br/&gt;    }&lt;br/&gt;    ......&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重要的逻辑有两个：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;创建一个&lt;code&gt;HotRunner&lt;/code&gt;，支持后面的热更&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设定在构建完成后启动命令行程序&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先看&lt;code&gt;HotRunner&lt;/code&gt;的&lt;code&gt;run&lt;/code&gt;方法。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;HotRunner#run&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;  Future&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; run({&lt;br/&gt;    Completer&amp;lt;DebugConnectionInfo&amp;gt; connectionInfoCompleter,&lt;br/&gt;    Completer&amp;lt;&lt;span&gt;void&lt;/span&gt;&amp;gt; appStartedCompleter,&lt;br/&gt;    &lt;span&gt;String&lt;/span&gt; route,&lt;br/&gt;  }) &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;    ......&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;Future&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt;&amp;gt; startupTasks = &amp;lt;Future&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt;&amp;gt;[];&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; PackageConfig packageConfig = &lt;span&gt;await&lt;/span&gt; loadPackageConfigWithLogging(&lt;br/&gt;      globals.fs.file(debuggingOptions.buildInfo.packagesPath),&lt;br/&gt;      logger: globals.logger,&lt;br/&gt;    );&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;final&lt;/span&gt; FlutterDevice device &lt;span&gt;in&lt;/span&gt; flutterDevices) {&lt;br/&gt;      &lt;span&gt;await&lt;/span&gt; runSourceGenerators();&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (device.generator != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;        startupTasks.add(&lt;br/&gt;          device.generator.recompile(&lt;br/&gt;            globals.fs.file(mainPath).uri,&lt;br/&gt;            &amp;lt;&lt;span&gt;Uri&lt;/span&gt;&amp;gt;[],&lt;br/&gt;            suppressErrors: applicationBinary == &lt;span&gt;null&lt;/span&gt;,&lt;br/&gt;            outputPath: dillOutputPath ??&lt;br/&gt;              getDefaultApplicationKernelPath(trackWidgetCreation: debuggingOptions.buildInfo.trackWidgetCreation),&lt;br/&gt;            packageConfig: packageConfig,&lt;br/&gt;          ).then((CompilerOutput output) =&amp;gt; output?.errorCount == &lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;        );&lt;br/&gt;      }&lt;br/&gt;      startupTasks.add(device.runHot(&lt;br/&gt;        hotRunner: &lt;span&gt;this&lt;/span&gt;,&lt;br/&gt;        route: route,&lt;br/&gt;      ).then((&lt;span&gt;int&lt;/span&gt; result) =&amp;gt; result == &lt;span&gt;0&lt;/span&gt;));&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;final&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt; results = &lt;span&gt;await&lt;/span&gt; Future.wait(startupTasks);&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (!results.every((&lt;span&gt;bool&lt;/span&gt; passed) =&amp;gt; passed)) {&lt;br/&gt;        appFailedToStart();&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;      }&lt;br/&gt;      cacheInitialDillCompilation();&lt;br/&gt;    } &lt;span&gt;on&lt;/span&gt; Exception &lt;span&gt;catch&lt;/span&gt; (err) {&lt;br/&gt;      globals.printError(err.toString());&lt;br/&gt;      appFailedToStart();&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; attach(&lt;br/&gt;      connectionInfoCompleter: connectionInfoCompleter,&lt;br/&gt;      appStartedCompleter: appStartedCompleter,&lt;br/&gt;    );&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要有两件事：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;针对每个设备，进行源码构建，并执行热更&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;全部完成后开始&lt;code&gt;attach&lt;/code&gt;设备&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先看&lt;code&gt;FlutterDevice#runHot&lt;/code&gt;这个方法&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;FlutterDevice#runHot&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;  Future&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt; runHot({&lt;br/&gt;    HotRunner hotRunner,&lt;br/&gt;    &lt;span&gt;String&lt;/span&gt; route,&lt;br/&gt;  }) &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;    .....&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// Start the application.&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; Future&amp;lt;LaunchResult&amp;gt; futureResult = device.startApp(&lt;br/&gt;      package,&lt;br/&gt;      mainPath: hotRunner.mainPath,&lt;br/&gt;      debuggingOptions: hotRunner.debuggingOptions,&lt;br/&gt;      platformArgs: platformArgs,&lt;br/&gt;      route: route,&lt;br/&gt;      prebuiltApplication: prebuiltMode,&lt;br/&gt;      ipv6: hotRunner.ipv6,&lt;br/&gt;      userIdentifier: userIdentifier,&lt;br/&gt;    );&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; LaunchResult result = &lt;span&gt;await&lt;/span&gt; futureResult;&lt;br/&gt;&lt;br/&gt;    .....&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;继续追踪&lt;code&gt;startApp&lt;/code&gt;方法，这个方法不同平台有不同实现，这里看&lt;code&gt;AndroidDevice&lt;/code&gt;的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;  &lt;span&gt;@override&lt;/span&gt;&lt;br/&gt;  Future&amp;lt;LaunchResult&amp;gt; startApp(&lt;br/&gt;    AndroidApk package, {&lt;br/&gt;    &lt;span&gt;String&lt;/span&gt; mainPath,&lt;br/&gt;    &lt;span&gt;String&lt;/span&gt; route,&lt;br/&gt;    DebuggingOptions debuggingOptions,&lt;br/&gt;    &lt;span&gt;Map&lt;/span&gt;&amp;lt;&lt;span&gt;String&lt;/span&gt;, &lt;span&gt;dynamic&lt;/span&gt;&amp;gt; platformArgs,&lt;br/&gt;    &lt;span&gt;bool&lt;/span&gt; prebuiltApplication = &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;bool&lt;/span&gt; ipv6 = &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;String&lt;/span&gt; userIdentifier,&lt;br/&gt;  }) &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;    ......&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (!prebuiltApplication || _androidSdk.licensesAvailable &amp;amp;&amp;amp; _androidSdk.latestVersion == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;      _logger.printTrace(&lt;span&gt;&#x27;Building APK&#x27;&lt;/span&gt;);&lt;br/&gt;      &lt;span&gt;final&lt;/span&gt; FlutterProject project = FlutterProject.current();&lt;br/&gt;      &lt;span&gt;await&lt;/span&gt; androidBuilder.buildApk(&lt;br/&gt;          project: project,&lt;br/&gt;          target: mainPath,&lt;br/&gt;          androidBuildInfo: AndroidBuildInfo(&lt;br/&gt;            debuggingOptions.buildInfo,&lt;br/&gt;            targetArchs: &amp;lt;AndroidArch&amp;gt;[androidArch],&lt;br/&gt;            fastStart: debuggingOptions.fastStart&lt;br/&gt;          ),&lt;br/&gt;      );&lt;br/&gt;      &lt;span&gt;// Package has been built, so we can get the updated application ID and&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;// activity name from the .apk.&lt;/span&gt;&lt;br/&gt;      package = &lt;span&gt;await&lt;/span&gt; AndroidApk.fromAndroidProject(project.android);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;await&lt;/span&gt; _installLatestApp(package, userIdentifier)) {&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; LaunchResult.failed();&lt;br/&gt;    }&lt;br/&gt;    .....&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;List&lt;/span&gt;&amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt; cmd;&lt;br/&gt;&lt;br/&gt;    cmd = &amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt;[&lt;br/&gt;      &lt;span&gt;&#x27;shell&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;am&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;start&#x27;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&#x27;-a&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;android.intent.action.RUN&#x27;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&#x27;-f&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;0x20000000&#x27;&lt;/span&gt;, &lt;span&gt;// FLAG_ACTIVITY_SINGLE_TOP&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&#x27;--ez&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;enable-background-compilation&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;true&#x27;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&#x27;--ez&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;enable-dart-profiling&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;true&#x27;&lt;/span&gt;,&lt;br/&gt;    ....&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到，主要是buildApk，然后&lt;code&gt;_installLatestApp&lt;/code&gt;负责安装，最后启动。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先看buildApk过程，在&lt;code&gt;AndroidBuilderImpl#buildApk&lt;/code&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;  &lt;span&gt;@override&lt;/span&gt;&lt;br/&gt;  Future&amp;lt;&lt;span&gt;void&lt;/span&gt;&amp;gt; buildApk({&lt;br/&gt;    &lt;span&gt;@required&lt;/span&gt; FlutterProject project,&lt;br/&gt;    &lt;span&gt;@required&lt;/span&gt; AndroidBuildInfo androidBuildInfo,&lt;br/&gt;    &lt;span&gt;@required&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; target,&lt;br/&gt;  }) &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;await&lt;/span&gt; buildGradleApp(&lt;br/&gt;        project: project,&lt;br/&gt;        androidBuildInfo: androidBuildInfo,&lt;br/&gt;        target: target,&lt;br/&gt;        isBuildingBundle: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;        localGradleErrors: gradleErrors,&lt;br/&gt;      );&lt;br/&gt;    } &lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;      globals.androidSdk?.reinitialize();&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后是真正的构建逻辑，还是通过gradle来进行调用的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;Future&amp;lt;&lt;span&gt;void&lt;/span&gt;&amp;gt; buildGradleApp({&lt;br/&gt;  &lt;span&gt;@required&lt;/span&gt; FlutterProject project,&lt;br/&gt;  &lt;span&gt;@required&lt;/span&gt; AndroidBuildInfo androidBuildInfo,&lt;br/&gt;  &lt;span&gt;@required&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; target,&lt;br/&gt;  &lt;span&gt;@required&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; isBuildingBundle,&lt;br/&gt;  &lt;span&gt;@required&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;GradleHandledError&amp;gt; localGradleErrors,&lt;br/&gt;  &lt;span&gt;bool&lt;/span&gt; shouldBuildPluginAsAar = &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; retries = &lt;span&gt;1&lt;/span&gt;,&lt;br/&gt;}) &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;  ......&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; BuildInfo buildInfo = androidBuildInfo.buildInfo;&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; assembleTask = isBuildingBundle&lt;br/&gt;    ? getBundleTaskFor(buildInfo)&lt;br/&gt;    : getAssembleTaskFor(buildInfo);&lt;br/&gt;&lt;br/&gt;  ......&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt; command = &amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt;[&lt;br/&gt;    gradleUtils.getExecutable(project),&lt;br/&gt;  ];&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (globals.logger.isVerbose) {&lt;br/&gt;    command.add(&lt;span&gt;&#x27;-Pverbose=true&#x27;&lt;/span&gt;);&lt;br/&gt;  } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;    command.add(&lt;span&gt;&#x27;-q&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  .....&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (target != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;    command.add(&lt;span&gt;&#x27;-Ptarget=&lt;span&gt;$target&lt;/span&gt;&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;assert&lt;/span&gt;(buildInfo.trackWidgetCreation != &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;  command.add(&lt;span&gt;&#x27;-Ptrack-widget-creation=&lt;span&gt;${buildInfo.trackWidgetCreation}&lt;/span&gt;&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (buildInfo.extraFrontEndOptions != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;    command.add(&lt;span&gt;&#x27;-Pextra-front-end-options=&lt;span&gt;${encodeDartDefines(buildInfo.extraFrontEndOptions)}&lt;/span&gt;&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (buildInfo.extraGenSnapshotOptions != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;    command.add(&lt;span&gt;&#x27;-Pextra-gen-snapshot-options=&lt;span&gt;${encodeDartDefines(buildInfo.extraGenSnapshotOptions)}&lt;/span&gt;&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (buildInfo.fileSystemRoots != &lt;span&gt;null&lt;/span&gt; &amp;amp;&amp;amp; buildInfo.fileSystemRoots.isNotEmpty) {&lt;br/&gt;    command.add(&lt;span&gt;&#x27;-Pfilesystem-roots=&lt;span&gt;${buildInfo.fileSystemRoots.join(&lt;span&gt;&#x27;|&#x27;&lt;/span&gt;)}&lt;/span&gt;&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (buildInfo.fileSystemScheme != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;    command.add(&lt;span&gt;&#x27;-Pfilesystem-scheme=&lt;span&gt;${buildInfo.fileSystemScheme}&lt;/span&gt;&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (androidBuildInfo.splitPerAbi) {&lt;br/&gt;    command.add(&lt;span&gt;&#x27;-Psplit-per-abi=true&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  .....&lt;br/&gt;  command.add(assembleTask);&lt;br/&gt;  .....&lt;br/&gt;&lt;br/&gt;  }&lt;br/&gt;  .....&lt;br/&gt;  &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;    exitCode = &lt;span&gt;await&lt;/span&gt; processUtils.stream(&lt;br/&gt;      command,&lt;br/&gt;      workingDirectory: project.android.hostAppGradleRoot.path,&lt;br/&gt;      allowReentrantFlutter: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;      environment: gradleEnvironment,&lt;br/&gt;      mapFunction: consumeLog,&lt;br/&gt;    );&lt;br/&gt;  } &lt;span&gt;on&lt;/span&gt; ProcessException &lt;span&gt;catch&lt;/span&gt;(exception) {&lt;br/&gt;  .....&lt;br/&gt;  &lt;span&gt;// Gradle produced an APK.&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; &lt;span&gt;Iterable&lt;/span&gt;&amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt; apkFilesPaths = project.isModule&lt;br/&gt;    ? findApkFilesModule(project, androidBuildInfo)&lt;br/&gt;    : listApkPaths(androidBuildInfo);&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; Directory apkDirectory = getApkDirectory(project);&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; File apkFile = apkDirectory.childFile(apkFilesPaths.first);&lt;br/&gt;&lt;br/&gt;  .....&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; appSize = (buildInfo.mode == BuildMode.debug)&lt;br/&gt;    ? &lt;span&gt;&#x27;&#x27;&lt;/span&gt; &lt;span&gt;// Don&#x27;t display the size when building a debug variant.&lt;/span&gt;&lt;br/&gt;    : &lt;span&gt;&#x27; (&lt;span&gt;${getSizeAsMB(apkFile.lengthSync())}&lt;/span&gt;)&#x27;&lt;/span&gt;;&lt;br/&gt;  globals.printStatus(&lt;br/&gt;    &lt;span&gt;&#x27;&lt;span&gt;$successMark&lt;/span&gt; Built &lt;span&gt;${globals.fs.path.relative(apkFile.path)}&lt;/span&gt;&lt;span&gt;$appSize&lt;/span&gt;.&#x27;&lt;/span&gt;,&lt;br/&gt;    color: TerminalColor.green,&lt;br/&gt;  );&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里会创建gradle所需的全部参数，然后通过&lt;code&gt;processUtils&lt;/code&gt;启动执行，执行后APK文件就会出现在构建目录了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时&lt;code&gt;androidBuilder.buildApk&lt;/code&gt;就执行完了，后面的&lt;code&gt;_installLatestApp&lt;/code&gt;负责apk文件的安装工作：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;  Future&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt; _installLatestApp(AndroidApk package, &lt;span&gt;String&lt;/span&gt; userIdentifier) &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; &lt;span&gt;bool&lt;/span&gt; wasInstalled = &lt;span&gt;await&lt;/span&gt; isAppInstalled(package, userIdentifier: userIdentifier);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (wasInstalled) {&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;await&lt;/span&gt; isLatestBuildInstalled(package)) {&lt;br/&gt;        _logger.printTrace(&lt;span&gt;&#x27;Latest build already installed.&#x27;&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;    _logger.printTrace(&lt;span&gt;&#x27;Installing APK.&#x27;&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (!&lt;span&gt;await&lt;/span&gt; installApp(package, userIdentifier: userIdentifier)) {&lt;br/&gt;    .....&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;真正的安装工作：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;  &lt;span&gt;@override&lt;/span&gt;&lt;br/&gt;  Future&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt; installApp(&lt;br/&gt;    AndroidApk app, {&lt;br/&gt;    &lt;span&gt;String&lt;/span&gt; userIdentifier,&lt;br/&gt;  }) &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;    .....&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; Status status = _logger.startProgress(&lt;br/&gt;      &lt;span&gt;&#x27;Installing &lt;span&gt;${_fileSystem.path.relative(app.file.path)}&lt;/span&gt;...&#x27;&lt;/span&gt;,&lt;br/&gt;      timeout: _timeoutConfiguration.slowOperation,&lt;br/&gt;    );&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; RunResult installResult = &lt;span&gt;await&lt;/span&gt; _processUtils.run(&lt;br/&gt;      adbCommandForDevice(&amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt;[&lt;br/&gt;        &lt;span&gt;&#x27;install&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&#x27;-t&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&#x27;-r&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (userIdentifier != &lt;span&gt;null&lt;/span&gt;)&lt;br/&gt;          ...&amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt;[&lt;span&gt;&#x27;--user&#x27;&lt;/span&gt;, userIdentifier],&lt;br/&gt;        app.file.path&lt;br/&gt;      ]));&lt;br/&gt;    status.stop();&lt;br/&gt;    .....&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看出，本质还是通过adb命令进行安装。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;attach&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;安装启动之后，会初始化交互式命令行，在之前的&lt;code&gt;setupTerminal&lt;/code&gt;里面：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;  void &lt;span&gt;&lt;span&gt;setupTerminal&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (!globals.logger.quiet) {&lt;br/&gt;      globals.printStatus(&lt;span&gt;&#x27;&#x27;&lt;/span&gt;);&lt;br/&gt;      residentRunner.printHelp(details: &lt;span&gt;false&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;    globals.terminal.singleCharMode = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    subscription = globals.terminal.keystrokes.listen(processTerminalInput);&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;processTerminalInput&lt;/code&gt;负责处理用户输入&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;  Future&amp;lt;&lt;span&gt;void&lt;/span&gt;&amp;gt; processTerminalInput(&lt;span&gt;String&lt;/span&gt; command) &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;    ......&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;      lastReceivedCommand = command;&lt;br/&gt;      &lt;span&gt;await&lt;/span&gt; _commonTerminalInputHandler(command);&lt;br/&gt;    &lt;span&gt;// Catch all exception since this is doing cleanup and rethrowing.&lt;/span&gt;&lt;br/&gt;    } &lt;span&gt;catch&lt;/span&gt; (error, st) { &lt;span&gt;// ignore: avoid_catches_without_on_clauses&lt;/span&gt;&lt;br/&gt;    ....&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;  Future&amp;lt;&lt;span&gt;bool&lt;/span&gt;&amp;gt; _commonTerminalInputHandler(&lt;span&gt;String&lt;/span&gt; character) &lt;span&gt;async&lt;/span&gt; {&lt;br/&gt;    globals.printStatus(&lt;span&gt;&#x27;&#x27;&lt;/span&gt;); &lt;span&gt;// the key the user tapped might be on this line&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;switch&lt;/span&gt;(character) {&lt;br/&gt;      ....&lt;br/&gt;      &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&#x27;r&#x27;&lt;/span&gt;:&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (!residentRunner.canHotReload) {&lt;br/&gt;          &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;final&lt;/span&gt; OperationResult result = &lt;span&gt;await&lt;/span&gt; residentRunner.restart(fullRestart: &lt;span&gt;false&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (result.fatal) {&lt;br/&gt;          throwToolExit(result.message);&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (!result.isOk) {&lt;br/&gt;          globals.printStatus(&lt;span&gt;&#x27;Try again after fixing the above error(s).&#x27;&lt;/span&gt;, emphasis: &lt;span&gt;true&lt;/span&gt;);&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;      &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&#x27;R&#x27;&lt;/span&gt;:&lt;br/&gt;        &lt;span&gt;// If hot restart is not supported for all devices, ignore the command.&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (!residentRunner.canHotRestart || !residentRunner.hotMode) {&lt;br/&gt;          &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;final&lt;/span&gt; OperationResult result = &lt;span&gt;await&lt;/span&gt; residentRunner.restart(fullRestart: &lt;span&gt;true&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (result.fatal) {&lt;br/&gt;          throwToolExit(result.message);&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (!result.isOk) {&lt;br/&gt;          globals.printStatus(&lt;span&gt;&#x27;Try again after fixing the above error(s).&#x27;&lt;/span&gt;, emphasis: &lt;span&gt;true&lt;/span&gt;);&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;      ....&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里只是初始化了命令行环境，还需要建立像设备发送命令的通道（等同于&lt;code&gt;flutter attach&lt;/code&gt;），这里涉及到和DartVM的远程通信，有机会留到&lt;code&gt;flutter attach&lt;/code&gt;再做分析。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7b49c7b5bf9b1bae6f53356a3729298d</guid>
<title>谈一谈程序员的职业发展路线</title>
<link>https://toutiao.io/k/b2k5zax</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;span&gt;作为程序员，在开发岗位上做了几年，特别是到了30岁，这个而立之年，我们会来到一个重要的人生岔路口。就是管理和技术两个选择，一边专业路线，一边是管理路线。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在互联网的头部企业，对管理和技术是平等对待的，所以晋升会存在管理和技两个通道的&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.21863799283154123&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4XQ0RVoHjpzvdGwZCdI89kDZdsdsDON9oMMGYNbdentcibz0PGdygusWyaDXjFWXCOZVjlciarw8Sz74xzBiagQXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1116&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;既然有了选择，就会有人纠结，不知道是选择专业路线，还是选择技术团队的管理路线。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个选择是程序员人生中第一个大的选择，也是第一个障碍，倒不是说这个障碍是到底要不要选择管理，而更多的是对做管理的迟疑，怀疑到底能不能做好管理，做了管理之后，技术是不是就荒废了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这种状态犹豫不决、摇摆不定的状态保持时间长了，最终会导致技术和管理都没做好，这是得不偿失的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了解决这个问题，有必要分析程序员职业发展的路线到底有几条，分别需要具备怎样的能力，从而做到”手中有粮，心中不慌“&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6060240963855422&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4XQ0RVoHjpzvdGwZCdI89kDZdsdsDON9vc9LjPfLclXch8Ikpmz0HKaic3K2JmHHQ31OFoK6qy0IoucbdvjsItA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot; data-style=&quot;color: rgb(49, 49, 49); font-size: 20px; letter-spacing: 0.544px; max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__10&quot;&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot;&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(255, 76, 0)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(255, 76, 0)&quot; data-style=&quot;color: rgb(255, 76, 0); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 24px; letter-spacing: 0.544px; text-align: center; white-space: normal; background-color: rgb(255, 255, 255); max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__11&quot;&gt;01技术&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;技术类上，是有两个方向：&lt;strong&gt;架构师和技术专家&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;架构师他的侧重点是&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;在“广”上，他主要负责技术的整体和架构，在业务上，需要有很深的理解，有丰富的经验，甚至能做到“走的桥比你吃的盐还多”。在技术上，能够广泛涉略，掌握的技术知识越多，内力就越加深厚。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我觉得架构师还需要三点必备能力，其一需要有极强的执行力，能够快速的给出合理的方案，推动技术落地。其二需要有极强的判断力，能够准确的找到复杂系统的疑难问题所在，就像武林高手，一眼就看出对方的破绽。最后还需要有极强的创新力，能够创造新的解决方案，解决现有技术难题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以从程序员到架构师的成长之路，总的指导原则是：积累经验，拓宽视野，深度思考（可以参考我之前文章《&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483826&amp;amp;idx=1&amp;amp;sn=c82601363825ba261b88c0198ee3a91d&amp;amp;chksm=cf2094a0f8571db6b69603ba66b1ac62ef588fc3668ffdcddd4ca2fa62713eb8c614e279290b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员进阶必备能力——深度思考&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;程序员进阶必备能力——深度思考&lt;/a&gt;》）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;技术专家他的侧重点&lt;/strong&gt;是在“专”上，这个就很好理解，就是在某个领域能够深入，能够熟悉其背后运行原理。不同的领域都会存在专家，例如：Java专家、前端专家、图像算法专家、Linux内核专家等等。专家相对架构师，更加专注，并不会考虑太多整体方案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以从高级开发成长为技术专家，主要是扩展领域内的技术宽度，提升领域内的技术深度。因为领域也不是特别窄的一个面，而是包含多个技术面。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;举一个例子：Linux内核专家，要想成为Linux内核专家，需要掌握，Linux CPU调度、内存管理、进程管理、存储管理、文件系统、设备管理和驱动、网络通信、系统调用、系统初始化等技术面。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在每个技术面中，同样包含了很多技术点，这些技术都是知识盲区，所以需要提升技术深度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot; data-style=&quot;color: rgb(49, 49, 49); font-size: 20px; letter-spacing: 0.544px; max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__10&quot;&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot;&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(255, 76, 0)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(255, 76, 0)&quot; data-style=&quot;color: rgb(255, 76, 0); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 24px; letter-spacing: 0.544px; text-align: center; white-space: normal; background-color: rgb(255, 255, 255); max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__11&quot;&gt;02管理&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;管理也分为了两个方向，技术管理和职业管理。顾名思义，技术管理更加倾向于技术，而职业管理完全抛开了技术，纯粹的商业方向。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;技术管理，&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;这个方向是程序员最自然的选择。大部分的技术管理者，在其从程序员转为管理岗位的时候，都是在领导或公司的要求下，被动的推到技术经理岗位上的，并非是自己当初有强烈意愿、主动去选择管理岗的。然后走上曼曼打怪进阶的路线，从技术经理岗到技术总监，带领几十号人的团队冲关，然后到成为技术业务部和事业部的技术副总裁，相当于CTO了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;技术管理需要在业务上有较深的理解，在技术上能够根据技术发展趋势，进行技术规划。在产品上能够极强的洞察力，进行产品规划。在团队加上能够规划团队建设、组织结构等等，所以这是综合素质的要求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;职业管理&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;职业管理者往往更加关心于整体产品业务的团队，不限于技术团队。比如某个事业部的总裁，或者是某个业务部的总裁。大家往往都听过某某事业部空降了领导，这个领导就是属于职业管理者，他的移动性更加强，能力更加通用。这个方向是可遇不可求的，有些人一辈子都不可能触及到。这个就是天花板上的别人家的楼板，你说难不难？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot; data-style=&quot;color: rgb(49, 49, 49); font-size: 20px; letter-spacing: 0.544px; max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__10&quot;&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot;&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(255, 76, 0)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(255, 76, 0)&quot; data-style=&quot;color: rgb(255, 76, 0); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 24px; letter-spacing: 0.544px; text-align: center; white-space: normal; background-color: rgb(255, 255, 255); max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__11&quot;&gt;03创业&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;创业这个方向上，一般是作为技术合伙人来参与，如果想要自己的创业公司能够成功，必须是全能型创业团队，在技术、产品、营销等方面不能有明显的短板。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我举一个真实的例子：&lt;strong&gt;我的上一家公司的直接领导，辞去技术总监的职位，作为一个技术合伙人创建了一个团队，主要提供物流解决方案。前几个月和他聊，公司已经在去年实现盈利1000多万，通过股权上操作，已经成为最大的股东，掌管着整个公司的前进方向。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说到这里挺惋惜的，创立之初，当时极力的拉我入伙，被我拒绝了，理由是工资太低了，这个理由在现在看来简直可笑啊&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot; data-style=&quot;color: rgb(49, 49, 49); font-size: 20px; letter-spacing: 0.544px; max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__10&quot;&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot;&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(255, 76, 0)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(255, 76, 0)&quot; data-style=&quot;color: rgb(255, 76, 0); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 24px; letter-spacing: 0.544px; text-align: center; white-space: normal; background-color: rgb(255, 255, 255); max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__11&quot;&gt;03其他&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;项目经理&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个方向也是程序员比较常见，也比较自然的方向。项目经理其实一种组织整合能力。不同于技术管理，这条路线走起来，几乎不需要任何外界依赖因素。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最需要关注的是进度、质量、人力、成本、风险。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;那如何提升项目管理能力呢?&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先需要对项目管理知识框架有个大致的认识，避免在庞大的知识体系中迷失方向，比如：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;范围管理：&lt;/span&gt;&lt;span&gt;项目为何总是做不完？&lt;/span&gt;&lt;span&gt;范围管理要界定&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;风险管理：项目风险引发的问题、成因以及防范方法&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;沟通管理：做好项目沟通计划&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;质量管理：加强项目质量&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;时间管理：项目进度控制&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;成本管理：产品成品控制&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;等等&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;其次需要掌握项目计划、项目变更、项目进展报告、复盘等过程方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后需要掌握跨部门协作，多维度沟通上进行加强。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;产品经理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;程序员转产品经理，需要做到技术思维到产品思维的转换。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;技术思维角度是从功能开始，而产品思维的角度是从业务开始。&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;作为程序员，当要做一个项目时候，我们最关心的是这个项目有哪些功能，然后考虑每个功能如何实现；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而作为产品经理，当要做一个项目时候，我们看重这个项目的业务场景是什么，解决用户什么问题&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;技术思维角度是怎么去实现功能，而产品思维角度是为什么要这个业务。&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从技术思维的角度关注一个需求时候，总是先关注一个需求如何去实现，即HOW；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而从产品思维上来关注一个需求时候，应该多问一下WHY，为什么需要这个需求，多思考为什么，从而找到需求或问题的本质。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;技术思维角度是向专家一样行动，而产品思维角度是向小白一样思考。&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;作为程序员，我们日常接触到最多的还是技术人员，这些人一般来说逻辑思维都较强，擅长使用和处理各种软件，所以总是将这种形象代入到客户身上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但作为产品人员思考时候，将用户想得越“小白”越好，假设他们是不懂电脑，不太会玩手机，甚至不会打字的人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot; data-style=&quot;color: rgb(49, 49, 49); font-size: 20px; letter-spacing: 0.544px; max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__10&quot;&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot;&gt;&lt;strong data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(255, 76, 0)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(255, 76, 0)&quot; data-style=&quot;color: rgb(255, 76, 0); font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 24px; letter-spacing: 0.544px; text-align: center; white-space: normal; background-color: rgb(255, 255, 255); max-width: 100%; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__11&quot;&gt;04总结&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面4个方向是程序员主要的职业发展路线，作为个人来看，如果能一直做自己热爱的工作和喜欢的角色，应该是最好的状态。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不管走那一条路，一些能力是共通的，比如：技术规划、团队建设、沟通、时间管理等。处于自己的选择，可能不会选择管理方向，但是难免在以后的工作中会和管理者打交道。管理作为一种通用的素质，希望大家能够技多不压身。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总之，作为程序员，技术和管理，就像人的两条腿，所有的职业发展路线都离不开，毕竟一条腿是走不远的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__135&quot;&gt;&lt;strong&gt;推荐阅读（干货）&lt;/strong&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__135&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483891&amp;amp;idx=1&amp;amp;sn=24cd8a6abf3b0681179dc5e5e846e0ba&amp;amp;chksm=cf2094e1f8571df70c1e37be4f3a3a81df0165e5e3359006a16ed64730fe9e5cc7fe97c37289&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员进阶必备能力——晋升之道&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;程序员进阶必备能力——晋升之道&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__135&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483792&amp;amp;idx=1&amp;amp;sn=f30fe58e4ea99d647b1853eca6bd5a6a&amp;amp;chksm=cf209482f8571d94e7dd372851397f98a838e84a9fbea9299337e5ee2301084228a4f57d315c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;送给刚毕业的程序员——7点建议&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;送给刚毕业的程序员——7点建议&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__135&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483826&amp;amp;idx=1&amp;amp;sn=c82601363825ba261b88c0198ee3a91d&amp;amp;chksm=cf2094a0f8571db6b69603ba66b1ac62ef588fc3668ffdcddd4ca2fa62713eb8c614e279290b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员进阶技术专家必备能力——深度思考&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;程序员进阶技术专家必备能力——深度思考&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__135&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NzUxMTgwNQ==&amp;amp;mid=2247483879&amp;amp;idx=1&amp;amp;sn=96067a68ebe584002a64dc0e21edb21d&amp;amp;chksm=cf2094f5f8571de38333e04d03d1dd60a56574d08d62324ae65bc73a3bc414e6d6e5e9d17121&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员如何选择一家好公司&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;程序员如何选择一家好公司&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__135&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__135&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-right: 8px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__137&quot;&gt;&lt;strong data-darkmode-bgcolor-16027590497592=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16027590497592=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16029336602567=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16029336602567=&quot;rgb(163, 163, 163)&quot; data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(163, 163, 163)&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(163, 163, 163)&quot;&gt;&lt;span data-darkmode-bgcolor-16027590497592=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16027590497592=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16027590497592=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16027590497592=&quot;rgb(49, 49, 49)&quot; data-style=&quot;max-width: 100%; background-color: rgb(255, 255, 255); color: rgb(49, 49, 49); font-size: 14px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__138&quot; data-darkmode-color-16029336602567=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16029336602567=&quot;rgb(49, 49, 49)&quot; data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(49, 49, 49)&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(49, 49, 49)&quot;&gt;觉得不错，记得关注、转发和在看！多年经验分享，实属不易，感谢支持！&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;hr data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;white-space: normal; max-width: 100%; letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; background-color: rgb(255, 255, 255); border-style: solid; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-color: rgba(0, 0, 0, 0.098); transform-origin: 0px 0px 0px; transform: scale(1, 0.5); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__139&quot;/&gt;&lt;p data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-style=&quot;white-space: normal; max-width: 100%; min-height: 1em; letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__140&quot;&gt;&lt;br data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot;/&gt;&lt;/p&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 10px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; color: rgb(77, 77, 77); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.5px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__141&quot;&gt;&lt;span data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot;&gt;&lt;span data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(77, 77, 77)&quot; data-style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 15px; max-width: 100%; background-color: rgb(255, 255, 255); color: rgb(77, 77, 77); letter-spacing: 0.544px;&quot; class=&quot;js_darkmode__142&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot;&gt;博主是一位物联网大厂技术总监，从业7年。&lt;/span&gt;&lt;span data-darkmode-bgcolor-16029336602567=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16029336602567=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16029336602567=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16029336602567=&quot;rgb(53, 53, 53)&quot; data-style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 15px; max-width: 100%; background-color: rgb(255, 255, 255); color: rgb(53, 53, 53); letter-spacing: 0.544px; text-align: left;&quot; class=&quot;js_darkmode__143&quot; data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(53, 53, 53)&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(53, 53, 53)&quot;&gt;从软件开发、高级软件开发、技术经理再到技术总监，分享职业发展、技术管理、职场晋升、技术成长等个人多年经验和心得。一起成长！&lt;/span&gt;&lt;span data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(77, 77, 77)&quot; data-style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 15px; max-width: 100%; background-color: rgb(255, 255, 255); color: rgb(77, 77, 77); letter-spacing: 0.544px;&quot; class=&quot;js_darkmode__144&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot;&gt;有问题可以加我微信交流：&lt;/span&gt;&lt;strong data-darkmode-bgcolor-16029336602567=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16029336602567=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16029336602567=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16029336602567=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(77, 77, 77)&quot; data-style=&quot;max-width: 100%; background-color: rgb(255, 255, 255); color: rgb(77, 77, 77); font-size: 14px; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__145&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot;&gt;pointersss&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 10px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; color: rgb(77, 77, 77); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.5px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__146&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot; data-style=&quot;margin-right: 8px; margin-bottom: 10px; margin-left: 8px; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; color: rgb(77, 77, 77); font-size: 16px; background-color: rgb(255, 255, 255); line-height: 25.5px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__148&quot;&gt;&lt;span data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot;&gt;&lt;strong data-darkmode-bgcolor-16029336602567=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16029336602567=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16029336602567=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16029336602567=&quot;rgb(77, 77, 77)&quot; data-darkmode-bgcolor-16030173785544=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030173785544=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030173785544=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16030173785544=&quot;rgb(77, 77, 77)&quot; data-style=&quot;max-width: 100%; background-color: rgb(255, 255, 255); color: rgb(77, 77, 77); font-size: 14px; letter-spacing: 0.544px; white-space: normal; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__149&quot; data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot;&gt;觉得不错、就长按关注我吧！&lt;br data-darkmode-bgcolor-16033270487548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16033270487548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16033270487548=&quot;rgb(153, 153, 153)&quot; data-darkmode-original-color-16033270487548=&quot;rgb(77, 77, 77)&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;191&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.3310344827586207&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1885&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4XQ0RVoHjpzZ9vYdxpUfZ0aOB7yCZ0Tx1Kib6QP8VqGGM5ftHs65fUicxBNn4M7G09hkr0j3gsMSTIfMq593icYMA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>