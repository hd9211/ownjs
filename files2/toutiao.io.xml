<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>35ac5b3f74b80e17d8e450b874e555ea</guid>
<title>惊艳面试官-Java中关于随机数生成8种方式的思考</title>
<link>https://toutiao.io/k/1f0hs2u</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section&gt;Java中生成随机数常用的有下面这8种写法：简而言之，名称带安全的未必安全，名字简洁的未必简单。&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;Math.random()&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Random&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;ThreadLocalRandom&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;SecureRandom&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;UUID.randomUUID()&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;RandomStringUtils&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;RandomUtils&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;RandomUtil&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Math.random()&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Talk is cheap, show me the code.  先上源码：&lt;/p&gt;&lt;pre&gt;&lt;span&gt;public static double &lt;/span&gt;&lt;span&gt;random&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return &lt;/span&gt;RandomNumberGeneratorHolder.&lt;span&gt;randomNumberGenerator&lt;/span&gt;.nextDouble()&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;pre&gt;&lt;span&gt;private static final class &lt;/span&gt;RandomNumberGeneratorHolder {&lt;br/&gt;    &lt;span&gt;static final &lt;/span&gt;Random &lt;span&gt;randomNumberGenerator &lt;/span&gt;= &lt;span&gt;new &lt;/span&gt;Random()&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;从源码可以看出：Math.random本质上用的就是new Random。而且人家给了一个最佳实践：使用的时候不用每次就new一个对象，直接做成一个静态类就可以了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Random&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Random是伪随机数类，采用线性同余算法产生的。伪随机数是1946年冯诺依曼提出来的。他在参加一个氢弹的制造项目，需要大量的随机数模拟核聚变、核裂变。因为当时设备没办法去存储大量的随机数，所以就想到了这个办法。伪随机数(或称伪乱数)这个称呼是因为真随机数都不是计算出来的。这里是使用一个确定性的算法计算出来的似乎是随机的数序，因此伪随机数实际上并不随机。从更宏大的视角看来，是非常有规律的，就像我在&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247483678&amp;amp;idx=1&amp;amp;sn=2091e0f6b52cd859284fb14baec7565c&amp;amp;chksm=fafdebb0cd8a62a632c71b43bfd92c387520ca9a4c2a7038fab5c667efa935352e7793a6fe5d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《大话高可用》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《大话高可用》&lt;/a&gt;里提到的炊烟。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;下面来说说这个线性同余算法，大家不用担心。我比大家还对算法一窍不通。但是我有人类的常识，这个常识是什么呢？既然是计算得到的，并且人类看起来没有规律，那一定有一个外部因子(种子)，种子是一个变量。顺着这个思路看源码：&lt;/p&gt;&lt;pre&gt;&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt;&lt;/span&gt;&lt;span&gt; * Creates a new random number generator. This constructor sets&lt;br/&gt;&lt;/span&gt;&lt;span&gt; * the seed of the random number generator to a value very likely&lt;br/&gt;&lt;/span&gt;&lt;span&gt; * to be distinct from any other invocation of this constructor.&lt;br/&gt;&lt;/span&gt;&lt;span&gt; */&lt;br/&gt;&lt;/span&gt;&lt;span&gt;public &lt;/span&gt;&lt;span&gt;Random&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;this&lt;/span&gt;(&lt;span&gt;seedUniquifier&lt;/span&gt;() ^ System.&lt;span&gt;nanoTime&lt;/span&gt;())&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;没想到在构造函数里就给出了答案，这个因子就是系统时间，精确到纳秒。这里为了方便描述，我们举例想要一个int类型的随机数(实际它可以产生其他数值类型的随机数)。来看看源码：&lt;/p&gt;&lt;pre&gt;&lt;span&gt;public int &lt;/span&gt;&lt;span&gt;nextInt&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return &lt;/span&gt;next(&lt;span&gt;32&lt;/span&gt;)&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;pre&gt;&lt;span&gt;protected int &lt;/span&gt;&lt;span&gt;next&lt;/span&gt;(&lt;span&gt;int &lt;/span&gt;bits) {&lt;br/&gt;    &lt;span&gt;long &lt;/span&gt;oldseed&lt;span&gt;, &lt;/span&gt;nextseed&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;AtomicLong seed = &lt;span&gt;this&lt;/span&gt;.&lt;span&gt;seed&lt;/span&gt;&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    do &lt;/span&gt;{&lt;br/&gt;        oldseed = seed.get()&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;        &lt;/span&gt;nextseed = (oldseed * &lt;span&gt;multiplier &lt;/span&gt;+ &lt;span&gt;addend&lt;/span&gt;) &amp;amp; &lt;span&gt;mask&lt;/span&gt;&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;} &lt;span&gt;while &lt;/span&gt;(!seed.compareAndSet(oldseed&lt;span&gt;, &lt;/span&gt;nextseed))&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    return &lt;/span&gt;(&lt;span&gt;int&lt;/span&gt;)(nextseed &amp;gt;&amp;gt;&amp;gt; (&lt;span&gt;48 &lt;/span&gt;- bits))&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;解释一下：调用nextInt默认会生成32个比特位的数字。调用next方法，会有oldseed和nextseed。计算出nextseed会使CAS，将nextseed替换现有oldseed。nextseed的计算方法是oldseed做一些运算，运算的其他数值都是常量。最终返回nextseed值。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;因为使用了AtomicLong、自旋+CAS(可以参考&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247485325&amp;amp;idx=1&amp;amp;sn=fad70990055111f09459f397233db339&amp;amp;chksm=fafded23cd8a64359f6ee3af7bec11bc121861b5323ef87ed2002dc967b660436b85c2b0bb99&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《系统梳理一下锁》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《系统梳理一下锁》&lt;/a&gt;)，&lt;span&gt;所以Random生成随机数是线程安全的。&lt;/span&gt;&lt;span&gt;new一个全局变量，下次不用新建，Math.random的调用方法是合理的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;通过这个源码大胆猜测一下：如果两个不同的进程或者线程，在纳秒级相同的时间同时调用new Random，这时候nextInt的返回值是相同的！下次调用nextInt的值也相同！想要验证的话，可以下载java源码，在new Random的地方稍作修改，&lt;/p&gt;&lt;p&gt;System.nanoTime()改成固定值，这里我就不验证了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;ThreadLocalRandom&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;上面提到Random使用了线程安全的算法：AtomicLong、自旋+CAS。这在保证线程安全的同时造成了很大的性能开销。ThreadLocalRandom是JDK 7之后提供并发产生随机数，能够解决多个线程发生的竞争。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;它不是直接用new实例化，而是第一次使用时初始化其静态方法current()。直接调用静态方法，可以每个线程实例化一个。有朋友测试过，100个线程的情况下，3分钟，Math.random可以跑几百次。而&lt;/p&gt;&lt;p&gt;ThreadLocalRandom.current().nextInt()可以跑十几万次！&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;来看一下它是怎么做到的：&lt;/p&gt;&lt;pre&gt;&lt;span&gt;public static &lt;/span&gt;ThreadLocalRandom &lt;span&gt;current&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;if &lt;/span&gt;(&lt;span&gt;UNSAFE&lt;/span&gt;.getInt(Thread.&lt;span&gt;currentThread&lt;/span&gt;()&lt;span&gt;, &lt;/span&gt;&lt;span&gt;PROBE&lt;/span&gt;) == &lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;        &lt;span&gt;localInit&lt;/span&gt;()&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    return &lt;/span&gt;&lt;span&gt;instance&lt;/span&gt;&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;pre&gt;&lt;span&gt;static final void &lt;/span&gt;&lt;span&gt;localInit&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;int &lt;/span&gt;p = &lt;span&gt;probeGenerator&lt;/span&gt;.addAndGet(&lt;span&gt;PROBE_INCREMENT&lt;/span&gt;)&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    int &lt;/span&gt;probe = (p == &lt;span&gt;0&lt;/span&gt;) ? &lt;span&gt;1 &lt;/span&gt;: p&lt;span&gt;; &lt;/span&gt;&lt;span&gt;// skip 0&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;long &lt;/span&gt;seed = &lt;span&gt;mix64&lt;/span&gt;(&lt;span&gt;seeder&lt;/span&gt;.getAndAdd(&lt;span&gt;SEEDER_INCREMENT&lt;/span&gt;))&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;Thread t = Thread.&lt;span&gt;currentThread&lt;/span&gt;()&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;UNSAFE&lt;/span&gt;.putLong(t&lt;span&gt;, &lt;/span&gt;&lt;span&gt;SEED&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;seed)&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;UNSAFE&lt;/span&gt;.putInt(t&lt;span&gt;, &lt;/span&gt;&lt;span&gt;PROBE&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;probe)&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;简而言之，Random是通过系统时间这个外部因子，而ThreadLocalRandom都是通过UNSAFE调用本地方法拿到线程本身的一些变量作为外部因子。所有的参数绑定在线程本身，和其他线程没有竞争，所以可以不加锁就保证线程安全。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;span&gt;public int &lt;/span&gt;&lt;span&gt;nextInt&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return &lt;/span&gt;&lt;span&gt;mix32&lt;/span&gt;(nextSeed())&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;p&gt;}&lt;/p&gt;&lt;pre&gt;&lt;span&gt;private static int &lt;/span&gt;&lt;span&gt;mix32&lt;/span&gt;(&lt;span&gt;long &lt;/span&gt;z) {&lt;br/&gt;    z = (z ^ (z &amp;gt;&amp;gt;&amp;gt; &lt;span&gt;33&lt;/span&gt;)) * &lt;span&gt;0xff51afd7ed558ccdL&lt;/span&gt;&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    return &lt;/span&gt;(&lt;span&gt;int&lt;/span&gt;)(((z ^ (z &amp;gt;&amp;gt;&amp;gt; &lt;span&gt;33&lt;/span&gt;)) * &lt;span&gt;0xc4ceb9fe1a85ec53L&lt;/span&gt;) &amp;gt;&amp;gt;&amp;gt; &lt;span&gt;32&lt;/span&gt;)&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/pre&gt;&lt;pre&gt;&lt;span&gt;final long &lt;/span&gt;&lt;span&gt;nextSeed&lt;/span&gt;() {&lt;br/&gt;    Thread t&lt;span&gt;; long &lt;/span&gt;r&lt;span&gt;; &lt;/span&gt;&lt;span&gt;// read and update per-thread seed&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;UNSAFE&lt;/span&gt;.putLong(t = Thread.&lt;span&gt;currentThread&lt;/span&gt;()&lt;span&gt;, &lt;/span&gt;&lt;span&gt;SEED&lt;/span&gt;&lt;span&gt;,&lt;br/&gt;&lt;/span&gt;&lt;span&gt;                   &lt;/span&gt;r = &lt;span&gt;UNSAFE&lt;/span&gt;.getLong(t&lt;span&gt;, &lt;/span&gt;&lt;span&gt;SEED&lt;/span&gt;) + &lt;span&gt;GAMMA&lt;/span&gt;)&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    return &lt;/span&gt;r&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;生成随机数计算的时候也都是调用线程内的变量，不加锁。大家可以举一反三一下，回忆一下ThreadLocal相关知识。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;SecureRandom&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在安全应用场景，随机数应该使用安全的随机数。密码学意义上的安全随机数，要求必须保证其不可预测性。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;由于 Random 是采用时间作为随机数种子，如果黑客知道随机数产生的时间，那就能重现随机数。而 SecureRandom 属于强随机数，一般不单独采用时间作为随机数种子，除了系统时间，还会采用临时文件夹中大小、某个线程从休眠到被唤醒所耗的时间等等一系列无法重现的值作为随机数种子。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;因为SecureRandom 采用了很多外部参数，会产生熵源不足时阻塞问题。在我做过的项目中，因为有的业务凌晨没有流量，这个问题实际发生过。建议有明显低谷的业务，低谷时低于1TPS时不要用。&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;像&lt;span&gt;SecureRandom这种强随机在很多场景下效果不一定好。有一个小故事说itunes之前播歌的时候采用的是真随机。有些用户总是抱怨说你这是真随机吗?怎么来来回回给我播放那几首歌。苹果公司有苦说不出，于是把算法改成伪随机：洗牌算法，先把所有的歌打乱顺序，然后按顺序播放。改完之后用户纷纷点赞。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;适合使用&lt;span&gt;SecureRandom的场景，比如要给每个资源生成一个url，为了防止url规律被别人攻破，使用爬虫爬取到自己的资源可以用这个。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;UUID.randomUUID()&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;看下面的代码就知道UUID.randomUUID()是基于&lt;span&gt;SecureRandom&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;span&gt;public static &lt;/span&gt;UUID &lt;span&gt;randomUUID&lt;/span&gt;() {&lt;br/&gt;    SecureRandom ng = Holder.&lt;span&gt;numberGenerator&lt;/span&gt;&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    byte&lt;/span&gt;[] randomBytes = &lt;span&gt;new byte&lt;/span&gt;[&lt;span&gt;16&lt;/span&gt;]&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;ng.nextBytes(randomBytes)&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;randomBytes[&lt;span&gt;6&lt;/span&gt;]  &amp;amp;= &lt;span&gt;0x0f&lt;/span&gt;&lt;span&gt;;  &lt;/span&gt;&lt;span&gt;/* clear version        */&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;randomBytes[&lt;span&gt;6&lt;/span&gt;]  |= &lt;span&gt;0x40&lt;/span&gt;&lt;span&gt;;  &lt;/span&gt;&lt;span&gt;/* set to version 4     */&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;randomBytes[&lt;span&gt;8&lt;/span&gt;]  &amp;amp;= &lt;span&gt;0x3f&lt;/span&gt;&lt;span&gt;;  &lt;/span&gt;&lt;span&gt;/* clear variant        */&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;randomBytes[&lt;span&gt;8&lt;/span&gt;]  |= &lt;span&gt;0x80&lt;/span&gt;&lt;span&gt;;  &lt;/span&gt;&lt;span&gt;/* set to IETF variant  */&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;return new &lt;/span&gt;UUID(randomBytes)&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;有的朋友说不对呀，网上告诉我UUID是时间戳+时钟序列+MAC地址。注意上面代码注释有个set to version 4。&lt;/p&gt;&lt;p&gt;从UUID的类注释里就可以看到java 8提到4个版本：&lt;/p&gt;&lt;pre&gt;&lt;span&gt;The version field holds a value that describes the type of this {&lt;/span&gt;&lt;span&gt;@code&lt;br/&gt;&lt;/span&gt;&lt;span&gt;* UUID}.  There are four different basic types of UUIDs: time-based, DCE&lt;br/&gt;&lt;/span&gt;&lt;span&gt;* security, name-based, and randomly generated UUIDs.  These types have a&lt;br/&gt;&lt;/span&gt;&lt;span&gt;* version value of 1, 2, 3 and 4, respectively.&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;翻译一下：&lt;/p&gt;&lt;p&gt;版本1 - 基于时间&lt;/p&gt;&lt;p&gt;版本2 - 基于DCE sercrity&lt;/p&gt;&lt;p&gt;版本3 - 基于名字(MD5)&lt;/p&gt;&lt;p&gt;版本4 - 基于随机数&lt;/p&gt;&lt;p&gt;记住啦：java默认UUID是基于随机数的！&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;证明一下：如果是基于时间戳的，生成的UUID前几位应该相同&lt;/p&gt;&lt;pre&gt;&lt;span&gt;@Test&lt;br/&gt;&lt;/span&gt;&lt;span&gt;public void &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;for &lt;/span&gt;(&lt;span&gt;int &lt;/span&gt;i = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;; &lt;/span&gt;i &amp;lt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;; &lt;/span&gt;i++) {&lt;br/&gt;        System.&lt;span&gt;out&lt;/span&gt;.println(UUID.&lt;span&gt;randomUUID&lt;/span&gt;())&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;}&lt;br/&gt;}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;结果：&lt;/p&gt;&lt;p&gt;a0858771-c903-4061-ba6a-53efc372d8a0&lt;/p&gt;&lt;p&gt;17ebdc58-db6c-452f-9b21-b4f54d3958a5&lt;/p&gt;&lt;p&gt;116d6a4f-e50a-4001-b94c-61596da3a75d&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;事实胜于记忆中的知识，它有可能是错的！&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;java UUID也支持版本3：&lt;/p&gt;&lt;pre&gt;&lt;br/&gt;&lt;span&gt;@Test&lt;br/&gt;&lt;/span&gt;&lt;span&gt;public void &lt;/span&gt;&lt;span&gt;test&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;for &lt;/span&gt;(&lt;span&gt;int &lt;/span&gt;i = &lt;span&gt;0&lt;/span&gt;&lt;span&gt;; &lt;/span&gt;i &amp;lt; &lt;span&gt;3&lt;/span&gt;&lt;span&gt;; &lt;/span&gt;i++) {&lt;br/&gt;        System.&lt;span&gt;out&lt;/span&gt;.println(UUID.&lt;span&gt;nameUUIDFromBytes&lt;/span&gt;(&lt;span&gt;&quot;&lt;/span&gt;&lt;span&gt;编程一生&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;.getBytes()))&lt;span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;    &lt;/span&gt;}&lt;br/&gt;}&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;运行结果：&lt;/p&gt;&lt;p&gt;743f24b2-0914-363b-ace1-f4da750dccad&lt;/p&gt;&lt;p&gt;743f24b2-0914-363b-ace1-f4da750dccad&lt;/p&gt;&lt;p&gt;743f24b2-0914-363b-ace1-f4da750dccad&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这个在你的机器上执行也是这个结果，就是MD5了一下。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;有人说版本1、版本2怎么用，好像还听说过版本5。可以用linux命令&lt;/p&gt;&lt;p&gt;uuid -n 3 -v1&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;运行结果：&lt;/p&gt;&lt;p&gt;5b01cea2-9561-11e9-965b-a3d050dd0f23&lt;/p&gt;&lt;p&gt;5b01cf60-9561-11e9-965c-1b66505f5845&lt;/p&gt;&lt;p&gt;5b01d118-9561-11e9-965d-97354eb9e914&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;linux命令版本可指定！&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;RandomStringUtils、RandomUtils和RandomUtil&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;strong&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/pre&gt;&lt;pre&gt;&lt;strong&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这两个不是Java原生的方法，apache commons下有这两个工具类，本质上还是Random。跟进代码去看可以发现：RandomUtils用的是JVMRandom。这个只不过是封装了一个静态的Random，所有使用RandomUtils类的，全局只用一个，减少了新建对象成本。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果你问我一般情况下建议用哪个，我选ThreadLocalRandom。那这么好的方法是不是应该也有对应的封装工具类呢？有的，hultool就搞了一个RandomUtil，&lt;/p&gt;&lt;p&gt;RandomUtil.getRandom()返回的就是ThreadLocalRandom。&lt;/p&gt;&lt;p&gt;RandomUtil.getSecureRandom()返回的是&lt;span&gt;SecureRandom&lt;/span&gt;，提供多种选择。&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;一张图表示他们之间的关系：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.44584382871536526&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;794&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRl8R5yH7dkHlIiczfsoayOtiaRz9YOq5ht1zaR3dnF9JtXd9wcbdZ7Toa5GiaK6QnEVyVNC6h5FYoe6Sg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;在&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247485928&amp;amp;idx=1&amp;amp;sn=d60b63b554e5d1b054f273e898ed12c5&amp;amp;chksm=fafde346cd8a6a50fbf7d2d4b3eafc36ba356e161251504203465effcf187dc5368cff9f04b9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《CURD系统怎么做出技术含量--怎样引导面试》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;《CURD系统怎么做出技术含量--怎样引导面试》&lt;/a&gt;里我提到可以利用工作中总结的技巧惊艳面试官，如果能把一个问题系统性讲明白，甚至让面试官意识到之前的知识竟然是错的，也一定能让面试官眼前一亮。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e5062d3cda2e2ee20099da8627bc370e</guid>
<title>云原生应用的构建之路</title>
<link>https://toutiao.io/k/goqpvwc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;云计算的拐点已至&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;进入成熟期，&lt;/span&gt;&lt;span&gt;云原生成为驱动云计算发展&lt;/span&gt;&lt;span&gt;的新&lt;/span&gt;&lt;span&gt;动力引擎&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;致力于成为&lt;/span&gt;&lt;span&gt;新型基础设施，不仅是企业数字化转型的最佳技术路径，同时也成为&lt;/span&gt;&lt;span&gt;新兴领域，&lt;/span&gt;&lt;span&gt;人工智能、大数据、边缘计算、5G 等底层基础平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云原生充分释放了云计算的红利，未来将有更多的业务应用&lt;/span&gt;&lt;span&gt;生于云，长于云&lt;/span&gt;&lt;span&gt;；为了最大程度发挥云原生的优势，支持好各种复杂个性化场景，云原生技术&lt;/span&gt;&lt;span&gt;体系还&lt;/span&gt;&lt;span&gt;在不断完善演进，&lt;/span&gt;&lt;span&gt;覆盖范围也&lt;/span&gt;&lt;span&gt;从&lt;/span&gt;&lt;span&gt;集中式&lt;/span&gt;&lt;span&gt;中心&lt;/span&gt;&lt;span&gt;场景&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;分散式的&lt;/span&gt;&lt;span&gt;边缘&lt;/span&gt;&lt;span&gt;场景延伸拓展&lt;/span&gt;&lt;span&gt;；理念也在不断总结升华，&lt;/span&gt;&lt;span&gt;以应用为中心，&lt;/span&gt;&lt;span&gt;从微服务到&lt;/span&gt;&lt;span&gt;Service &lt;/span&gt;&lt;span&gt;Mesh，再到Serverless&lt;/span&gt;&lt;span&gt;层层演进&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;业驱云长，云随业动&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;1.1.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;云原生的定义&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;shapetype coordsize=&quot;21600,21600&quot; spt=&quot;75&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; preferrelative=&quot;t&quot; filled=&quot;f&quot; stroked=&quot;f&quot;&gt;&lt;stroke joinstyle=&quot;miter&quot;/&gt;&lt;formulas&gt;&lt;f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;/&gt;&lt;f eqn=&quot;sum @0 1 0&quot;/&gt;&lt;f eqn=&quot;sum 0 0 @1&quot;/&gt;&lt;f eqn=&quot;prod @2 1 2&quot;/&gt;&lt;f eqn=&quot;prod @3 21600 pixelWidth&quot;/&gt;&lt;f eqn=&quot;prod @3 21600 pixelHeight&quot;/&gt;&lt;f eqn=&quot;sum @0 0 1&quot;/&gt;&lt;f eqn=&quot;prod @6 1 2&quot;/&gt;&lt;f eqn=&quot;prod @7 21600 pixelWidth&quot;/&gt;&lt;f eqn=&quot;sum @8 21600 0&quot;/&gt;&lt;f eqn=&quot;prod @7 21600 pixelHeight&quot;/&gt;&lt;f eqn=&quot;sum @10 21600 0&quot;/&gt;&lt;/formulas&gt;&lt;path extrusionok=&quot;f&quot; gradientshapeok=&quot;t&quot; connecttype=&quot;rect&quot;/&gt;&lt;lock aspectratio=&quot;t&quot;/&gt;&lt;/shapetype&gt;&lt;shape type=&quot;#_x0000_t75&quot; filled=&quot;f&quot;&gt;&lt;imagedata title=&quot;image1&quot;/&gt;&lt;/shape&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uuibanYID93U6H6uGjuOM5L030wmIkpWwdvpHyt5N6ics9CYPf4SZlUg24QnfZlmd96ldwcbvOo8jQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;Pivotal&lt;/span&gt;&lt;span&gt;对云原生的定义：&lt;/span&gt;&lt;span&gt;云原生是一种构建和运行充分利用云计算模型优势的应用程序的方法&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;CNCF&lt;/span&gt;&lt;span&gt;对云原生的定义&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括&lt;/span&gt;&lt;span&gt;容器、服务网格（Service Mesh）、微服务、不可变基础设施和声明式API&lt;/span&gt;&lt;span&gt;。这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;阿里云&lt;/span&gt;&lt;span&gt;对云原生的定义&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;围绕基础设施、应用架构、开发运维等场景，让系统更加弹性可靠容错、松耦合、易管理可观测，充分发挥云计算的优势，提升技术效率。&lt;/span&gt;&lt;span&gt;代表&lt;/span&gt;&lt;span&gt;技术&lt;/span&gt;&lt;span&gt;为容器、服务网格、不可变基础设施、声明式API和Serverless&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总的来说，&lt;/span&gt;&lt;span&gt;云原生并不存在明确统一的定义，其代表了一种在云计算基础设施之上，以应用为中心的技术架构与思想理念，&lt;/span&gt;&lt;span&gt;是云计算发展演进的一次彻底革命性的突破。云原生助力企业快速构建标准化、弹性高可靠、松耦合、易管理维护的应用系统，提升交付效率，降低运维复杂度&lt;/span&gt;&lt;span&gt;。具体表现在如下两个方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;在技术架构方面，&lt;/strong&gt;&lt;span&gt;云原生技术架构具备：一）&lt;/span&gt;&lt;span&gt;敏捷的弹性伸缩能力&lt;/span&gt;&lt;span&gt;，不同于虚拟机分钟级的弹性伸缩响应，云原生应用可实现秒级甚至毫秒级的弹性伸缩响应；二）&lt;/span&gt;&lt;span&gt;智能的服务故障自愈能力&lt;/span&gt;&lt;span&gt;，云原生应用具有极强的自愈能力，可实现应用故障的自动摘除与重构；&lt;/span&gt;&lt;span&gt;三&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;span&gt;大规模的复制分发能力&lt;/span&gt;&lt;span&gt;，云原生应用标准化的交付制品，可实现跨平台、跨区域，云边一体规模化复制分发部署能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在应用价值方面，&lt;/span&gt;&lt;span&gt;云原生标准化&lt;/span&gt;&lt;span&gt;了&lt;/span&gt;&lt;span&gt;异构基础资源，有效解决了异构环境的部署一致性问题，&lt;/span&gt;&lt;span&gt;为&lt;/span&gt;&lt;span&gt;资源的&lt;/span&gt;&lt;span&gt;标准化、自动化、服务化&lt;/span&gt;&lt;span&gt;奠定了基础：&lt;/span&gt;&lt;span&gt;一）&lt;/span&gt;&lt;span&gt;加速数字基础设施升级&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;解放生产力&lt;/span&gt;&lt;span&gt;，降低用户数字化技术的使用门槛，提高资源的利用率&lt;/span&gt;&lt;span&gt;；&lt;/span&gt;&lt;span&gt;二）&lt;/span&gt;&lt;span&gt;重塑研发运营的生产方式&lt;/span&gt;&lt;span&gt;，打破组织壁垒，实现研发与运维的跨域协同，提升交付效率；&lt;/span&gt;&lt;span&gt;三&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;span&gt;实现应用&lt;/span&gt;&lt;span&gt;交付&lt;/span&gt;&lt;span&gt;的敏捷&lt;/span&gt;&lt;span&gt;，大幅提升交付速度，降低业务试错成本，高效响应用户需求，增强用户体验加速业务创新。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;1.2.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;云原生的发展&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;shapetype coordsize=&quot;21600,21600&quot; xmlns:o=&quot;urn:schemas-microsoft-com:office:office&quot; o:spt=&quot;75&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; filled=&quot;f&quot; stroked=&quot;f&quot;&gt;&lt;formulas&gt;&lt;f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;/&gt;&lt;f eqn=&quot;sum @0 1 0&quot;/&gt;&lt;f eqn=&quot;sum 0 0 @1&quot;/&gt;&lt;f eqn=&quot;prod @2 1 2&quot;/&gt;&lt;f eqn=&quot;prod @3 21600 pixelWidth&quot;/&gt;&lt;f eqn=&quot;prod @3 21600 pixelHeight&quot;/&gt;&lt;f eqn=&quot;sum @0 0 1&quot;/&gt;&lt;f eqn=&quot;prod @6 1 2&quot;/&gt;&lt;f eqn=&quot;prod @7 21600 pixelWidth&quot;/&gt;&lt;f eqn=&quot;sum @8 21600 0&quot;/&gt;&lt;f eqn=&quot;prod @7 21600 pixelHeight&quot;/&gt;&lt;f eqn=&quot;sum @10 21600 0&quot;/&gt;&lt;/formulas&gt;&lt;path o:extrusionok=&quot;f&quot; gradientshapeok=&quot;t&quot; o:connecttype=&quot;rect&quot;/&gt;&lt;/shapetype&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5298372513562387&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uuibanYID93U6H6uGjuOM5LpRztL4U0RSsGiaqBWlZVwWLX7uQDrfKS0WUKxia9wxeXv9EoJOxBUvEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;553&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云计算的发展史，浓缩成两个字，就是抽象；没有技术架构解决不了，如果有，就再抽象一层，云计算的发展史，就是基础设施的不断抽象史，直至无可再抽！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;整个云计算发展大致可以分为两个阶段&lt;/span&gt;&lt;span&gt;：以&lt;/span&gt;&lt;span&gt;虚拟化技术为核心&lt;/span&gt;&lt;span&gt;的传统云计算阶段，以及以&lt;/span&gt;&lt;span&gt;容器技术为核心&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;云原生阶段&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;传统云计算阶段：&lt;/span&gt;&lt;span&gt;虚拟化是传统云计算的基础，简单来说，虚拟化就是在一台物理服务器上，运行多台“虚拟服务器”。这种虚拟服务器，也叫虚拟机（VM，Virtual Machine）；通过Hypervisor技术完成物理资源虚拟化的工作，Hypervisor有VMware、KVM、Xen、Virtual Box等多种实现方案，其中KVM（kernel-based virtual machine）是基于Linux内核的虚拟机技术，是目前最热门的单主机虚拟化方案；OpenStack是云管理平台，基于虚拟化技术构建包含&lt;/span&gt;&lt;span&gt;计算，存储，网络等产品的基础云平台&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;云原生阶段&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;容器也是虚拟化，但是属于&lt;/span&gt;&lt;span&gt;轻量级的虚拟化&lt;/span&gt;&lt;span&gt;。虚拟机是操作系统级别的资源隔离，而容器本质上是&lt;/span&gt;&lt;span&gt;进程级的资源隔离&lt;/span&gt;&lt;span&gt;。容器优势明显：&lt;/span&gt;&lt;span&gt;一）启动快&lt;/span&gt;&lt;span&gt;（秒级启动）；&lt;/span&gt;&lt;span&gt;二）资源使用率高（&lt;/span&gt;&lt;span&gt;一台主机可以同时运行上千个容器），&lt;/span&gt;&lt;span&gt;三）占用空间小&lt;/span&gt;&lt;span&gt;（虚拟机一般GB级别，而容器只需要MB级）。Kubernetes是容器管理平台，主要职责是&lt;/span&gt;&lt;span&gt;容器编排（Container Orchestration），包含启动容器，自动化部署、扩展和管理容器应用，还有回收容器&lt;/span&gt;&lt;span&gt;。相比&lt;/span&gt;&lt;span&gt;OpenStack，&lt;/span&gt;&lt;span&gt;Kubernetes不仅屏蔽底层差异化的基础设施，提供计算，存储，网络基本云计算能力，更重要的是容器编排，监控治理等应用赋能能力。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;1.3.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;云原生的架构原则&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;shapetype coordsize=&quot;21600,21600&quot; xmlns:o=&quot;urn:schemas-microsoft-com:office:office&quot; o:spt=&quot;75&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; filled=&quot;f&quot; stroked=&quot;f&quot;&gt;&lt;formulas&gt;&lt;f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;/&gt;&lt;f eqn=&quot;sum @0 1 0&quot;/&gt;&lt;f eqn=&quot;sum 0 0 @1&quot;/&gt;&lt;f eqn=&quot;prod @2 1 2&quot;/&gt;&lt;f eqn=&quot;prod @3 21600 pixelWidth&quot;/&gt;&lt;f eqn=&quot;prod @3 21600 pixelHeight&quot;/&gt;&lt;f eqn=&quot;sum @0 0 1&quot;/&gt;&lt;f eqn=&quot;prod @6 1 2&quot;/&gt;&lt;f eqn=&quot;prod @7 21600 pixelWidth&quot;/&gt;&lt;f eqn=&quot;sum @8 21600 0&quot;/&gt;&lt;f eqn=&quot;prod @7 21600 pixelHeight&quot;/&gt;&lt;f eqn=&quot;sum @10 21600 0&quot;/&gt;&lt;/formulas&gt;&lt;path o:extrusionok=&quot;f&quot; gradientshapeok=&quot;t&quot; o:connecttype=&quot;rect&quot;/&gt;&lt;/shapetype&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48736462093862815&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uuibanYID93U6H6uGjuOM5LVJ6CvOrY8u9l6UpRogKLhzLJRYianVskcZMrDLLoowqJLYle7NMbia9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云原生时代需要新的架构理念及原则，来帮助应用更好地利用云的优势，让业务更敏捷、成本更低，同时又具备伸缩性、灵活性。通过遵从这些架构原则，可以确保应用技术架构的&lt;/span&gt;&lt;span&gt;先进性及科学性&lt;/span&gt;&lt;span&gt;，避免出现大的偏差，云原生七大原则如下：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;服务化：&lt;/span&gt;&lt;span&gt;云原生架构强调在分布式环境下，应用基于&lt;/span&gt;&lt;span&gt;服务流量&lt;/span&gt;&lt;span&gt;（而非网络流量）的控制策略实现限流降级、熔断隔仓、灰度、反压、零信任安全等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;弹性&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;云原生架构强调应用&lt;/span&gt;&lt;span&gt;的部署规模可以随着业务量的变化&lt;/span&gt;&lt;span&gt;自动伸缩&lt;/span&gt;&lt;span&gt;，无须&lt;/span&gt;&lt;span&gt;提前&lt;/span&gt;&lt;span&gt;规划容量&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;准备固定的硬件和软件资源。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;可观察性：&lt;/span&gt;&lt;span&gt;云原生架构强调&lt;/span&gt;&lt;span&gt;主动通过&lt;/span&gt;&lt;span&gt;日志、链路跟踪和度量&lt;/span&gt;&lt;span&gt;等手段，让一次请求的多次服务调用的耗时、返回值和参数都清晰可见，甚至可以下钻到每次三方软件调用、SQL 请求、节点拓扑、网络响应等，实现应用运行的&lt;/span&gt;&lt;span&gt;全过程透明可观察&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;韧性：&lt;/span&gt;&lt;span&gt;云原生架构强调&lt;/span&gt;&lt;span&gt;多个维度诠释了&lt;/span&gt;&lt;span&gt;软件持续服务的能力&lt;/span&gt;&lt;span&gt;，提升软件的MTBF（Mean Time Between Failure，平均无故障时间）。从架构设计上，韧性包括服务异步化能力、重试/限流/降级/熔断/反压、主从模式、集群模式、AZ 内的高可用、单元化、跨 region 容灾、异地多活容灾等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;自动化：&lt;/span&gt;&lt;span&gt;云原生架构强调需要&lt;/span&gt;&lt;span&gt;使用 CI/CD流水线自动化交付工具&lt;/span&gt;&lt;span&gt;，一方面标准化&lt;/span&gt;&lt;span&gt;应用&lt;/span&gt;&lt;span&gt;交付过程，另一方面在标准化的基础上进行自动化，通过配置数据自描述和面向终态的交付过程，让自动化工具理解&lt;/span&gt;&lt;span&gt;应用&lt;/span&gt;&lt;span&gt;交付目标和环境差异，实现&lt;/span&gt;&lt;span&gt;整个软件交付和运维的自动化&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;6.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;零信任：&lt;/span&gt;&lt;span&gt;云原生架构&lt;/span&gt;&lt;span&gt;强调在任何情况下，不应该信任网络内部和外部的任何人/设备/系统，需要基于&lt;/span&gt;&lt;span&gt;认证和授权重构访问控制的信任基础&lt;/span&gt;&lt;span&gt;，诸如IP地址、主机、地理位置、所处网络等均不能作为可信的凭证。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;7.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;架构演进：&lt;/span&gt;&lt;span&gt;云原生架构强调对&lt;/span&gt;&lt;span&gt;新建应用，&lt;/span&gt;&lt;span&gt;采用云原生架构并且权衡选择侧重的架构原则（通常是选择弹性、敏捷、成本的维度）；&lt;/span&gt;&lt;span&gt;对存量应用迁移&lt;/span&gt;&lt;span&gt;，则需要从架构上考虑迁出迁入成本/风险，对&lt;/span&gt;&lt;span&gt;应用云原生重构，&lt;/span&gt;&lt;span&gt;通过微服务/应用网关、应用集成、适配器、服务网格、数据迁移、在线灰度等应用和流量进行细粒度控制及治理。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;1.4.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;云原生应用&lt;/span&gt;&lt;span&gt;建设&lt;/span&gt;&lt;span&gt;之路&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;shapetype coordsize=&quot;21600,21600&quot; xmlns:o=&quot;urn:schemas-microsoft-com:office:office&quot; o:spt=&quot;75&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; filled=&quot;f&quot; stroked=&quot;f&quot;&gt;&lt;formulas&gt;&lt;f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;/&gt;&lt;f eqn=&quot;sum @0 1 0&quot;/&gt;&lt;f eqn=&quot;sum 0 0 @1&quot;/&gt;&lt;f eqn=&quot;prod @2 1 2&quot;/&gt;&lt;f eqn=&quot;prod @3 21600 pixelWidth&quot;/&gt;&lt;f eqn=&quot;prod @3 21600 pixelHeight&quot;/&gt;&lt;f eqn=&quot;sum @0 0 1&quot;/&gt;&lt;f eqn=&quot;prod @6 1 2&quot;/&gt;&lt;f eqn=&quot;prod @7 21600 pixelWidth&quot;/&gt;&lt;f eqn=&quot;sum @8 21600 0&quot;/&gt;&lt;f eqn=&quot;prod @7 21600 pixelHeight&quot;/&gt;&lt;f eqn=&quot;sum @10 21600 0&quot;/&gt;&lt;/formulas&gt;&lt;path o:extrusionok=&quot;f&quot; gradientshapeok=&quot;t&quot; o:connecttype=&quot;rect&quot;/&gt;&lt;/shapetype&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5072202166064982&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uuibanYID93U6H6uGjuOM5LC8icp6PWRLyTVbAtwdf2DLFOQicPGrb8licicUV2nxajAzaNpicJOfjL97A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于Kubernetes云原生容器技术&lt;/span&gt;&lt;span&gt;为基础，&lt;/span&gt;&lt;span&gt;构建&lt;/span&gt;&lt;span&gt;以应用为中心的&lt;/span&gt;&lt;span&gt;一站式云原生基础设施&lt;/span&gt;&lt;span&gt;平台&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;面向平台，&lt;/span&gt;&lt;span&gt;建设容器网络、容器存储、容器安全等&lt;/span&gt;&lt;span&gt;基础能力&lt;/span&gt;&lt;span&gt;；建设容器镜像仓库、容器监控、容器日志等&lt;/span&gt;&lt;span&gt;配套设施及监控运维能力&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;面向应用，&lt;/span&gt;&lt;span&gt;建设&lt;/span&gt;&lt;span&gt;对容器化应用的&lt;/span&gt;&lt;span&gt;全&lt;/span&gt;&lt;span&gt;生命周期管理，&lt;/span&gt;&lt;span&gt;包含&lt;/span&gt;&lt;span&gt;应用的自动伸缩、配置管理、资源管理、自动运维等&lt;/span&gt;&lt;span&gt;基础应用管理能力&lt;/span&gt;&lt;span&gt;；&lt;/span&gt;&lt;span&gt;应用升级策略，如滚动、灰度等&lt;/span&gt;&lt;span&gt;高级管理能力&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;面向交付，&lt;/span&gt;&lt;span&gt;建设&lt;/span&gt;&lt;span&gt;DevOps流水线，对接多种代码仓库，&lt;/span&gt;&lt;span&gt;自助配置&lt;/span&gt;&lt;span&gt;流水线的阶段和任务等&lt;/span&gt;&lt;span&gt;研发过程支持能力&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;同时结合实际应用场景及团队技术储备能力，还可以深入构建微服务，无服务等&lt;/span&gt;&lt;span&gt;高级平台能力&lt;/span&gt;&lt;span&gt;，提升应用的分&lt;/span&gt;&lt;span&gt;布式及治理能力&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;shapetype coordsize=&quot;21600,21600&quot; xmlns:o=&quot;urn:schemas-microsoft-com:office:office&quot; o:spt=&quot;75&quot; path=&quot;m@4@5l@4@11@9@11@9@5xe&quot; o:preferrelative=&quot;t&quot; filled=&quot;f&quot; stroked=&quot;f&quot;&gt;&lt;formulas&gt;&lt;f eqn=&quot;if lineDrawn pixelLineWidth 0&quot;/&gt;&lt;f eqn=&quot;sum @0 1 0&quot;/&gt;&lt;f eqn=&quot;sum 0 0 @1&quot;/&gt;&lt;f eqn=&quot;prod @2 1 2&quot;/&gt;&lt;f eqn=&quot;prod @3 21600 pixelWidth&quot;/&gt;&lt;f eqn=&quot;prod @3 21600 pixelHeight&quot;/&gt;&lt;f eqn=&quot;sum @0 0 1&quot;/&gt;&lt;f eqn=&quot;prod @6 1 2&quot;/&gt;&lt;f eqn=&quot;prod @7 21600 pixelWidth&quot;/&gt;&lt;f eqn=&quot;sum @8 21600 0&quot;/&gt;&lt;f eqn=&quot;prod @7 21600 pixelHeight&quot;/&gt;&lt;f eqn=&quot;sum @10 21600 0&quot;/&gt;&lt;/formulas&gt;&lt;path o:extrusionok=&quot;f&quot; gradientshapeok=&quot;t&quot; o:connecttype=&quot;rect&quot;/&gt;&lt;/shapetype&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.516245487364621&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8Tts2IxBm8uuibanYID93U6H6uGjuOM5Lxxc1mDMSn8rrZxqR6yMIAzS6ZZKYEj8zkP9TCtr5N3QJ9PMsnKutxw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云原生应用建设之路，从容器化，微服务，持续交付到DevOps逐渐推进，难度也在逐渐增加，从单纯的技术，到自动化平台，最后到DevOps整个团队文化与技术配合的大体系，实现基础设施平台及业务系统交付的大跨越。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;容器化：&lt;/span&gt;&lt;span&gt;容器化就是将应用整合到容器中并且运行起来，容器能够简化&lt;/span&gt;&lt;span&gt;应用的构建、部署和运行过程&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;微服务：&lt;/span&gt;&lt;span&gt;微服务是一种软件架构方式，它将应用构建成一系列按业务领域划分模块的、小的自治服务。在微服务架构中，每个服务都是自我包含的，并且实现了单一的业务功能，服务间通过Restful来通信，以此来实现&lt;/span&gt;&lt;span&gt;高内聚，低耦合，去中心化管理&lt;/span&gt;&lt;span&gt;的软件架构模式。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;持续交付：&lt;/span&gt;&lt;span&gt;借助CI/CD自动化平台，从原始需求识别，最终产品部署到生产环境这个过程中，需求以小批量形式在团队的各个角色间顺畅流动，能够以较短地周期完成需求的小粒度频繁交付。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ø&lt;span/&gt;&lt;/span&gt;&lt;span&gt;DevOps：&lt;/span&gt;&lt;span&gt;团队践行DevOps的敏捷理念，基于DevOps的思想构建一体化能力平台，研发运维团队借助平台完成全流程高效协作，最终实现技术的敏捷到业务敏捷的价值转化。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;1.5.&lt;span/&gt;&lt;/span&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;总的来说，微服务与容器化技术已常态化，基本上成为当前应用建设的&lt;/span&gt;&lt;span&gt;标配&lt;/span&gt;&lt;span&gt;。一方面，Service Mesh，CI/CD流水线技术也日趋成熟，DevOps与云原生深度融合相互驱动，在不同领域得到了初步实践；另一方面，技术团队的构成也正发生着与云原生相应的变革，研发运维团队融合一体。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是在云原生应用实践中，依然存在诸多挑战及陷阱，企业及团队不要盲目将云原生当成是万能圣母。在使用云原生之前，需要综合评估业务真实需求，团队能力现状以及未来的布局。&lt;/span&gt;&lt;span&gt;好风凭借力，&lt;/span&gt;&lt;span&gt;由简到难，逐步深入&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;以容器化，微服务为起点，逐渐借助&lt;/span&gt;&lt;span&gt;持续交付工具完善流程及团队能力&lt;/span&gt;&lt;span&gt;，最后切实落地DevOps理念，实现&lt;/span&gt;&lt;span&gt;业务交付及价值交付的闭环&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ee151853c5a022300e09b21f969da554</guid>
<title>tmux 不支持 rz / sz ，于是有一个兼容 tmux 的 trz / tsz ( trzsz )，可以与 iTerm2 一起用，还有一个不错的进度条。</title>
<link>https://toutiao.io/k/2znbuck</link>
<content:encoded>&lt;div&gt;&lt;div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7befc41008741548a6b626d87ca5c7da</guid>
<title>一文读懂异常检测 LOF 算法（Python代码）</title>
<link>https://toutiao.io/k/2r49el1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4OTQ1MTA4OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYJ1LbaTxqd4VPOibfZ1tf0fXDUqFOLlPcRPvv4W4Cro4YnhRx2Xib5MId5rECtVMBkmvJk8nSNnsekw/0?wx_fmt=png&quot; data-nickname=&quot;数据挖掘工程师&quot; data-alias=&quot;DataMinings&quot; data-signature=&quot;数万名数据挖掘爱好者的聚集地，致力于前沿数据技术研究。公众号以数据为核心，分享大数据、数据分析、机器学习、深度学习等干货，想学数据我等你来。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上一篇介绍：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4OTQ1MTA4OQ==&amp;amp;mid=2247498295&amp;amp;idx=1&amp;amp;sn=299450d9b155fc65f18b4d82cad28349&amp;amp;chksm=fdcfe009cab8691f9dd3c4314f6c6b4a39a926cafe04a474595f65a625b1dfabe36eafdaf970&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一文读懂层次聚类（Python代码）&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;一文读懂层次聚类（Python代码）&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本篇介绍一个经典的异常检测算法：局部离群因子(Local Outlier Factor)，简称&lt;strong&gt;LOF算法&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Local Outlier Factor（LOF）是基于密度的经典算法（Breuning et. al. 2000）, 文章发表于 SIGMOD 2000, 到目前已经有 3000+ 的引用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 LOF 之前的异常检测算法大多是基于统计方法的，或者是借用了一些聚类算法用于异常点的识别（比如 ，DBSCAN，OPTICS）。这些方法都有一些不完美的地方：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;基于统计的方法：通常需要假设数据服从特定的概率分布，这个假设往往是不成立的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;聚类方法：通常只能给出 0/1 的判断（即：是不是异常点），不能量化每个数据点的异常程度。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;相比较而言，基于密度的LOF算法要更简单、直观。它不需要对数据的分布做太多要求，还能量化每个数据点的异常程度（outlierness）。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面开始正式介绍LOF算法。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;LOF 算法&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，基于密度的离群点检测方法有一个基本假设：&lt;strong&gt;非离群点对象周围的密度与其邻域周围的密度类似，而离群点对象周围的密度显著不同于其邻域周围的密度。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;什么意思呢？看下面图片感受下。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.901294498381877&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYIItCz0bnKmXgUgUE9ERbyhicgwtLBX64zHYJYtUUNibHqr2CtInicSJ82EbUmaOhMnqZich9yAkQO3JQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;618&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;集群 &lt;code&gt;C1&lt;/code&gt; 包含了 400 多个点，集群 &lt;code&gt;C2&lt;/code&gt; 包含 100 个点。&lt;code&gt;C1&lt;/code&gt; 和 &lt;code&gt;C2&lt;/code&gt; 都是一类集群点，区别是 &lt;code&gt;C1&lt;/code&gt; 位置比较集中，或者说密度比较大。而像 &lt;code&gt;o1&lt;/code&gt;、&lt;code&gt;o2&lt;/code&gt;点均为异常点，因为基于我们的假设，这两个点周围的密度显著不同于周围点的密度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;LOF 就是基于密度来判断异常点的，通过给每个数据点都分配一个依赖于邻域密度的离群因子 LOF，进而判断该数据点是否为离群点。&lt;/strong&gt; 如果 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;LOF&amp;gt;=1&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -704 4804.6 786&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4C&quot; d=&quot;M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(681, 0)&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1444, 0)&quot;&gt;&lt;path data-c=&quot;46&quot; d=&quot;M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2470.8, 0)&quot;&gt;&lt;path data-c=&quot;3E&quot; d=&quot;M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z&quot;/&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot; transform=&quot;translate(778, 0)&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(4304.6, 0)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，则该点为离群点，如果 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;LOF=1&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -704 4026.6 786&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4C&quot; d=&quot;M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(681, 0)&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1444, 0)&quot;&gt;&lt;path data-c=&quot;46&quot; d=&quot;M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2470.8, 0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(3526.6, 0)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，则该点为正常数据点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么什么是LOF呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解LOF前，必须先知道一下3个基本概念，因为LOF是基于这几个概念而来的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1. k邻近距离&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在距离数据点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;P&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 751 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 最近的几个点中，第 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;k&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 521 705&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 个最近的点跟点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;P&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 751 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 之间的距离称为点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;P&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 751 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的 K-邻近距离，记为 k-distance (p)，公式如下：&lt;/p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;d_k(P)=d(P,O)&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 7057.6 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;64&quot; d=&quot;M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(520, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(938.4, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1327.4, 0)&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2078.4, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2745.2, 0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(3801, 0)&quot;&gt;&lt;path data-c=&quot;64&quot; d=&quot;M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4321, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(4710, 0)&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(5461, 0)&quot;&gt;&lt;path data-c=&quot;2C&quot; d=&quot;M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(5905.6, 0)&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(6668.6, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;/span&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -704 763 726&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 为距离点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;P&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 751 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 最近的第 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;k&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 521 705&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 个点。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9382352941176471&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYIItCz0bnKmXgUgUE9ERbyhzy7oqAicdGTslVLnFV3AiaWm2dXqz64cKv5StPjA1TKuI5vCib6e9XFew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;340&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如上图中，距离点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;p&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 503 636&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 最近的第 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;4&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -677 500 677&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;34&quot; d=&quot;M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 个点是点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;6&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -666 500 688&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;36&quot; d=&quot;M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的距离计算可以采用欧式距离、汉明距离、马氏距离等等。比如用欧式距离的计算公式如下：&lt;/p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;d_{Euclid}(X_i,X_j)=\sqrt{\sum_{k=1}^{m}{(X_{ik}-X_{jk})^2}}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/CttmTaYSYkSOHZDya6icZEzbl32XWMGtJVmvogPOZb8Fd4E8MmbOLQwYt76lKBRYxHJmia1jlszSGDU3RnEZ1r0eoOl60Iqjax/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这里的重点是找到第 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;k&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 521 705&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 个最近的那个点，然后带公式计算距离。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2. k距离领域&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;P&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 751 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 为圆心，以k邻近距离 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;d_k(P)&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 2467.4 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;64&quot; d=&quot;M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(520, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(938.4, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1327.4, 0)&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2078.4, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 为半径画圆，这个圆以内的范围就是k距离领域，公式如下：&lt;/p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;N_k(P) = \big \{ d(P,O^\prime)\leq d_k(P) \}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/CttmTaYSYkSOHZDya6icZEzbl32XWMGtJe4FlBm76T7FvxXghllVN3xCibLQZtTUtF2ITe1AaeajwRfticoFbDM73lV0vSAPncf/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还是上图所示，假设k=4，那么点 1-6 均是邻域范围内的点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3. 可达距离&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个可达距离大家需要留意点，点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;P&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 751 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 到点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -704 763 726&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的第 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;k&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 521 705&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 可达距离：&lt;/p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;N_k(P) = max\big \{ d_k(P), d(O,P) \}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/CttmTaYSYkSOHZDya6icZEzbl32XWMGtJ2HllYscQ0XopqTICTtLlfIIlY1f7RQoJaUgbibRawxHTWPuRDTnZo2gmMib2ynnf5O/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里计算&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;P&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 751 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 到点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -704 763 726&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的第 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;k&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 521 705&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 可达距离，但是要以点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -704 763 726&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 为中心，取一个最大值，也就是在点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;P&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 751 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 与 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -704 763 726&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的距离、距离点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -704 763 726&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 最近的第 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;k&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 521 705&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 个点距离中取较大的一个，如图下所示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6850533807829181&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYIItCz0bnKmXgUgUE9ERbyhtlpsoBiaib6DibHQvs3nU9l8dTViaZqRp2aTJricXWlahutH9dvdmwrm4Ow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;562&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;p2&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -666 1003 860&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(503, 0)&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 距离 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;o&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -441 485 452&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 远，那么两者之间的可达距离就是它们的实际距离。如果距离足够近，如点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;p1&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -666 1003 860&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(503, 0)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，实际距离将被 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;o&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -441 485 452&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;k&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 521 705&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 距离代替。所有 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;p&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 503 636&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 接近 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;o&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -441 485 452&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的统计波动 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;d(p,o)&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 2730.7 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;64&quot; d=&quot;M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(520, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(909, 0)&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1412, 0)&quot;&gt;&lt;path data-c=&quot;2C&quot; d=&quot;M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1856.7, 0)&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2341.7, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;可以显著减少，这可以通过参数 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;k&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 521 705&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 来控制，&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;k&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 521 705&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 值越高，同一邻域内的点的可达距离越相似。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4. 局部可达密度&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先给出公式，然后再说明密度的含义。&lt;/p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;lrd_k(P)=\frac{1}{\frac{\sum_{O\ni N_k(P)} reach\_dist_k(P,O)}{\left| N_k(P) \right|}}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/CttmTaYSYkSOHZDya6icZEzbl32XWMGtJjKadO8PVIb6kaEGZsNnXb6ycc70JJeXNNCYWL2aYR2FYMEBxMR3iaESsbqurQYcfD/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;P&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 751 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的局部可达密度就是基于 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;P&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 751 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;50&quot; d=&quot;M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的最近邻的平均可达距离的倒数。距离越大，密度越小。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;5. 局部异常因子&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据局部可达密度的定义，如果一个数据点跟其他点比较疏远的话，那么显然它的局部可达密度就小。&lt;strong&gt;但LOF算法衡量一个数据点的异常程度，并不是看它的绝对局部密度，而是看它跟周围邻近的数据点的相对密度。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样做的好处是可以允许数据分布不均匀、密度不同的情况。局部异常因子即是用局部相对密度来定义的。数据点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;p&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 503 636&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的局部相对密度（局部异常因子）为点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;p&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 503 636&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 邻域内点的平均局部可达密度跟数据点 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;p&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 503 636&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的局部可达密度的比值，即：&lt;/p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;LOF_k(P) = \frac{\sum_{O\ni N_k(P)}\frac{lrd(O)}{lrd(P)}}{\left| N_k(P) \right|}=\frac{\sum_{O\ni N_k(P)}lrd(O)}{\left| N_k(P) \right|}/lrd(P)&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/CttmTaYSYkSOHZDya6icZEzbl32XWMGtJgibw0H6PiaYswqibte2ArT7HYTmmZcLykLA2U6Efow763hpKnLibtRKVWMzV7lFq10ko/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;LOF算法流程&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解了 LOF 的定义以后，整个算法也就显而易见了：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;对于每个数据点，计算它与其它所有点的距离，并按从近到远排序；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;对于每个数据点，找到它的 k-nearest-neighbor，计算 LOF 得分;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果LOF值越大，说明越异常，反之如果越小，说明越趋于正常。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8285163776493256&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYIItCz0bnKmXgUgUE9ERbyhGYa8chaXR6cVmNfIS5x3luAp3Azc4TESlRzGE5g79E1fSmbTib4PM1Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;519&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;LOF优缺点&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;LOF 的一个优点是它同时考虑了数据集的局部和全局属性。异常值不是按绝对值确定的，而是相对于它们的邻域点密度确定的。当数据集中存在不同密度的不同集群时，LOF表现良好，比较适用于中等高维的数据集。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;LOF算法中关于局部可达密度的定义其实暗含了一个假设，即：&lt;strong&gt;不存在大于等于 k 个重复的点。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当这样的重复点存在的时候，这些点的平均可达距离为零，局部可达密度就变为无穷大，会给计算带来一些麻烦。在实际应用时，为了避免这样的情况出现，可以把 k-distance 改为 k-distinct-distance，不考虑重复的情况。或者，还可以考虑给可达距离都加一个很小的值，避免可达距离等于零。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，LOF 算法需要计算数据点两两之间的距离，造成整个算法时间复杂度为 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O(n^2)&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -833.9 2544.6 1083.9&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(763, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(1152, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(600, 363) scale(0.707)&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2155.6, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 。为了提高算法效率，后续有算法尝试改进。FastLOF （Goldstein，2012）先将整个数据随机的分成多个子集，然后在每个子集里计算 LOF 值。对于那些 LOF 异常得分小于等于 1 的，从数据集里剔除，剩下的在下一轮寻找更合适的 nearest-neighbor，并更新 LOF 值。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Python 实现 LOF&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有两个库可以计算LOF，分别是&lt;code&gt;PyOD&lt;/code&gt;和&lt;code&gt;Sklearn&lt;/code&gt;，下面分别介绍。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用&lt;code&gt;pyod&lt;/code&gt;自带的方法生成200个训练样本和100个测试样本的数据集。正态样本由多元高斯分布生成，异常样本是使用均匀分布生成的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;训练和测试数据集都有 5 个特征，10% 的行被标记为异常。并且在数据中添加了一些随机噪声，让完美分离正常点和异常点变得稍微困难一些。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;from&lt;/span&gt; pyod.utils.data &lt;span&gt;import&lt;/span&gt; generate_data&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; numpy &lt;span&gt;as&lt;/span&gt; np&lt;br/&gt;X_train, y_train, X_test, y_test = \&lt;br/&gt;        generate_data(n_train=&lt;span&gt;200&lt;/span&gt;,&lt;br/&gt;                      n_test=&lt;span&gt;100&lt;/span&gt;,&lt;br/&gt;                      n_features=&lt;span&gt;5&lt;/span&gt;,&lt;br/&gt;                      contamination=&lt;span&gt;0.1&lt;/span&gt;,&lt;br/&gt;                      random_state=&lt;span&gt;3&lt;/span&gt;) &lt;br/&gt;X_train = X_train * np.random.uniform(&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, size=X_train.shape)&lt;br/&gt;X_test = X_test * np.random.uniform(&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;1&lt;/span&gt;, size=X_test.shape)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;PyOD&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面将训练数据拟合了 LOF 模型并将其应用于合成测试数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 &lt;code&gt;PyOD&lt;/code&gt; 中，有两个关键方法：&lt;code&gt;decision_function&lt;/code&gt; 和 &lt;code&gt;predict&lt;/code&gt;。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;decision_function：返回每一行的异常分数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;predict：返回一个由 0 和 1 组成的数组，指示每一行被预测为正常 (0) 还是异常值 (1)&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;from&lt;/span&gt; pyod.models.lof &lt;span&gt;import&lt;/span&gt; LOF&lt;br/&gt;clf_name = &lt;span&gt;&#x27;LOF&#x27;&lt;/span&gt;&lt;br/&gt;clf = LOF()&lt;br/&gt;clf.fit(X_train)&lt;br/&gt;&lt;br/&gt;test_scores = clf.decision_function(X_test)&lt;br/&gt;&lt;br/&gt;roc = round(roc_auc_score(y_test, test_scores), ndigits=&lt;span&gt;4&lt;/span&gt;)&lt;br/&gt;prn = round(precision_n_scores(y_test, test_scores), ndigits=&lt;span&gt;4&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;print(&lt;span&gt;f&#x27;&lt;span&gt;{clf_name}&lt;/span&gt; ROC:&lt;span&gt;{roc}&lt;/span&gt;, precision @ rank n:&lt;span&gt;{prn}&lt;/span&gt;&#x27;&lt;/span&gt;)&lt;br/&gt;&amp;gt;&amp;gt; LOF ROC:&lt;span&gt;0.9656&lt;/span&gt;, precision @ rank n:&lt;span&gt;0.8&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以通过 LOF 模型方法查看 LOF 分数的分布。在下图中看到正常数据（蓝色）的分数聚集在 1.0 左右。离群数据点（橙色）的得分均大于 1.0，一般高于正常数据。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6384439359267735&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYIItCz0bnKmXgUgUE9ERbyhR6Sn5d367a6IQQ2WnoRd9HqJicjSdKBfQvNLYpJ8zfZnRWQaTFyeKYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;437&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Sklearn&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在&lt;code&gt;scikit-learn&lt;/code&gt;中实现 &lt;code&gt;LOF&lt;/code&gt; 进行异常检测时，有两种模式选择：异常检测模式 &lt;code&gt;(novelty=False)&lt;/code&gt; 和 novelty检测模式 &lt;code&gt;(novelty=True)&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在异常检测模式下，只有&lt;code&gt;fit_predict&lt;/code&gt;生成离群点预测的方法可用。可以使用&lt;code&gt;negative_outlier_factor_&lt;/code&gt;属性检索训练数据的异常值分数，但无法为未见过的数据生成分数。模型会根据&lt;code&gt;contamination&lt;/code&gt;参数（默认值为 0.1）自动选择异常值的阈值。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span&gt;as&lt;/span&gt; plt&lt;br/&gt;&lt;br/&gt;detector = LOF()&lt;br/&gt;scores = detector.fit(X_train).decision_function(X_test)&lt;br/&gt;&lt;br/&gt;sns.distplot(scores[y_test==&lt;span&gt;0&lt;/span&gt;], label=&lt;span&gt;&quot;inlier scores&quot;&lt;/span&gt;)&lt;br/&gt;sns.distplot(scores[y_test==&lt;span&gt;1&lt;/span&gt;], label=&lt;span&gt;&quot;outlier scores&quot;&lt;/span&gt;).set_title(&lt;span&gt;&quot;Distribution of Outlier Scores from LOF Detector&quot;&lt;/span&gt;)&lt;br/&gt;plt.legend()&lt;br/&gt;plt.xlabel(&lt;span&gt;&quot;Outlier score&quot;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在novelty检测模式下，只有&lt;code&gt;decision_function&lt;/code&gt;用于生成异常值可用。&lt;code&gt;fit_predict&lt;/code&gt;方法不可用，但&lt;code&gt;predict&lt;/code&gt;方法可用于生成异常值预测。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;clf = LocalOutlierFactor(novelty=&lt;span&gt;True&lt;/span&gt;)&lt;br/&gt;clf = clf.fit(X_train)&lt;br/&gt;test_scores = clf.decision_function(X_test)&lt;br/&gt;&lt;br/&gt;test_scores = &lt;span&gt;-1&lt;/span&gt;*test_scores&lt;br/&gt;&lt;br/&gt;roc = round(roc_auc_score(y_test, test_scores), ndigits=&lt;span&gt;4&lt;/span&gt;)&lt;br/&gt;prn = round(precision_n_scores(y_test, test_scores), ndigits=&lt;span&gt;4&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;print(&lt;span&gt;f&#x27;&lt;span&gt;{clf_name}&lt;/span&gt; ROC:&lt;span&gt;{roc}&lt;/span&gt;, precision @ rank n:&lt;span&gt;{prn}&lt;/span&gt;&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该模式下模型的异常值分数被反转，异常值的分数低于正常值。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6592920353982301&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYIItCz0bnKmXgUgUE9ERbyhhfjIKm54MOiciba4cKia2ujjnmMKWc9NWTBGW2hF21NVkvAlocSB55gwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;452&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;实战系列的全部完整代码可见：&lt;/strong&gt;https://github.com/xiaoyusmd/PythonDataScience&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;原创不易，欢迎点赞、在看。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于LOF的原论文可以在公众号回复：&lt;span&gt;&lt;strong&gt;LOF&lt;/strong&gt;&lt;/span&gt; 获取。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;p&gt;https://pub.towardsai.net/an-in-depth-guide-to-local-outlier-factor-lof-for-outlier-detection-in-python-5a6f128e5871
https://zhuanlan.zhihu.com/p/28178476
https://mp.weixin.qq.com/s/SHYNjtqCo-Ue3lezdVk1jA
https://www.cnblogs.com/xzydn/p/14408758.html&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b2f744d93911070b2066f2c7b0d97ab1</guid>
<title>使用损失条件训练优化多个损失函数</title>
<link>https://toutiao.io/k/th3nbxa</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;p&gt;很多机器学习的应用模型的表现不能用一个简单数字来概括，而是依赖于几个性质，其中一些甚至是相互排斥的。例如，学习的图像压缩模型应该在最大化其质量的同时最小化压缩图像的大小。通常不可能同时优化所有感兴趣的值，因为它们从根本上是相互冲突的，例如上面示例中的图像质量和压缩比，或者仅仅是由于模型容量有限。因此，在实践中，人们必须决定如何平衡利益价值。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceGAicW3DMXx2VtmpVq4DeLdI9kedXkO0FGETRLA4q48LzFOMFW0yicpicVL8qNLkb8aAeFwexl6icNeMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;训练必须平衡不同属性的模型的标准方法是最小化损失函数，该函数是衡量这些属性的项的加权和。例如，在图像压缩的情况下，损失函数将包括两项，分别对应于图像重建质量和压缩率。根据这些项的系数，使用此损失函数进行训练会产生一个模型，该模型产生更紧凑或更高质量的图像重建。&lt;/p&gt;&lt;p&gt;如果需要在模型质量（例如图像质量与压缩率）之间进行不同的权衡，标准做法是训练几个单独的模型，每个模型的损失函数具有不同的系数。这需要在训练和推理期间保留多个模型，这是非常低效的。然而，所有这些独立的模型都解决了非常相关的问题，这表明它们之间可以共享一些信息。&lt;/p&gt;&lt;p&gt;在ICLR 2020 上同时接受的两篇论文中，我们提出了一种简单且广泛适用的方法，该方法避免了针对不同损失权衡训练多个模型的低效率，而是使用涵盖所有这些的单一模型。在“你只训练一次：深度网络的损失条件训练”，我们给出了该方法的一般公式，并将其应用于多个任务，包括变分自编码器和图像压缩，而在“可调实时风格迁移”中，我们更深入地研究了该方法在风格迁移中的应用。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;损失条件训练&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;我们的方法背后的想法是训练一个单一的模型，它涵盖了损失项系数的所有选择，而不是为每组系数训练一个模型。我们通过（i）在损失分布而不是单个损失函数上训练模型，以及（ii）在损失项的系数向量上调节模型输出来实现这一点。这样，在推理时，可以改变条件向量，使我们能够遍历与具有不同系数的损失函数对应的模型空间。&lt;/p&gt;&lt;p&gt;下图显示了这种风格迁移任务的训练过程。对于每个训练示例，首先随机采样损失系数。然后它们既用于通过调节网络调节主网络，也用于计算损失。整个系统是端到端联合训练的，即模型参数的训练与损失函数的随机采样同时进行。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceGAicW3DMXx2VtmpVq4DeLdIOZPAHiajEEqyQstPKFatiaw4JdjddpXD2P8Mcia4zo23hZ9tYI3W4pibYQ/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;这种方法在概念上的简单性使其适用于许多问题领域，只需对现有代码库进行极少的更改。在这里，我们关注两个这样的应用程序，图像压缩和样式转换。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;应用：可变速率图像压缩&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;作为我们方法的第一个示例应用，我们展示了学习图像压缩的结果。压缩图像时，用户应该能够在图像质量和压缩率之间选择所需的权衡。经典图像压缩算法旨在允许这种选择。然而，许多领先的学习压缩方法需要为每个这样的权衡训练一个单独的模型，这在训练和推理时计算量都很大。对于此类问题，需要针对不同损失优化的一组模型，我们的方法提供了一种简单的方法来避免效率低下并使用单个模型涵盖所有权衡。&lt;/p&gt;&lt;p&gt;我们将损失条件训练技术应用于Balle 等人的学习图像压缩模型。这里的损失函数由两个项组成，一个负责图像质量的重建项和一个负责压缩率的紧凑性项。如下图所示，我们的技术允许训练涵盖广泛的质量压缩权衡的单个模型。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6612903225806451&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceGAicW3DMXx2VtmpVq4DeLdITot322icIhovrbR7urxR5IIPrvGczeKibpZ0KNPW4Cqh5pJvXxzMONcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;620&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;应用：可调整的风格迁移&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;我们展示的第二个应用是艺术风格迁移，它通过合并一张图片的内容和另一张图片的风格来合成一张图片。最近的方法允许训练深度网络，以实时和多种风格对图像进行风格化。然而，对于每种给定的风格，这些方法不允许用户控制合成输出的细节，例如，对图像进行多少风格化以及更强调哪些风格特征。如果风格化的输出对用户没有吸引力，他们必须用不同的超参数训练多个模型，直到获得最喜欢的风格化。&lt;/p&gt;&lt;p&gt;相反，我们提出的方法允许训练涵盖各种风格化变体的单个模型。在此任务中，我们将模型置于损失函数上，该函数具有对应于五个损失项的系数，包括内容损失和四个用于风格化损失的项。直观地说，内容损失调节了风格化图像与原始内容的相似程度，而四个风格化损失定义了哪些风格特征可以延续到最终的风格化图像。下面我们展示了改变所有这些系数时单个模型的输出：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceGAicW3DMXx2VtmpVq4DeLdIejViammeWRmHLO12FNplACeUINfIrnIpODOFwc3gkXs2rgCHVgLTicBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;显然，该模型捕捉了每种风格的许多变化，例如风格化程度、添加到图像的元素类型、它们的确切配置和位置等等。在我们的网页上可以找到更多示例以及交互式演示。结论 我们提出了损失条件训练，这是一种简单而通用的方法，它允许为以前需要大量单独训练的网络的任务训练单个深度网络。虽然我们已经展示了它在图像压缩和风格转换方面的应用，但还有更多的应用是可能的——只要损失函数有需要调整的系数，我们的方法就允许训练一个单一的模型，覆盖这些系数的范围很广。&lt;/p&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>