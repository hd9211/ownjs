<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>e5b65672b2a44aabb6818d65eea7d69e</guid>
<title>曝光了，清华计算机系最牛的课</title>
<link>https://toutiao.io/k/71s8fte</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;p&gt;大家好，我是石头哥。&lt;/p&gt;&lt;p&gt;今天这篇文章，墙裂建议想提高核心竞争力的程序员同学重点关注，并付出行动。&lt;/p&gt;&lt;p&gt;我曾经在 &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI3OTUzMzcwNw==&amp;amp;mid=2247484698&amp;amp;idx=1&amp;amp;sn=03cc4636e7ee7364a85788a98809cc03&amp;amp;chksm=eb4704fedc308de8efd48ab9aed4fd1ddee5665d8e76d0d3767c1f704eac8b15a83e450a08f1&amp;amp;token=920855099&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;从一道面试题谈谈一线大厂码农应该具备的基本能力&lt;/a&gt;这篇文章中，强调我们在仓促地码着繁琐的业务代码时候，希望不要抛弃一些基础的东西，多培养一下我们的编程素养。&lt;/p&gt;&lt;p&gt;在用编程语言，利用各种工具来实现我们想要达到的目的的时候，能做到“知其然，知其所以然”更好。&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据结构&lt;/span&gt;就是其中最重要的基础之一。&lt;/p&gt;&lt;p&gt;我也曾经在多次场合推荐过（比如&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI3OTUzMzcwNw==&amp;amp;mid=2247492954&amp;amp;idx=1&amp;amp;sn=b487e0164a11e6753affc8de19c92647&amp;amp;chksm=eb44e4bedc336da843f9b0a3d9b6295727e025018b039dc654ac92672e85032307d769269ea7&amp;amp;token=920855099&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;万字长文讲述我是怎样保送清华的 | 寒门学子奋斗史（四）&lt;/a&gt;），清华计算机系的邓老师这门公开课《数据结构》。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.24887556221889057&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1bPolj4q9veQXgkosN7f6WdV8ZY49xZxicfNCcbwo5UUfJYlmmXIGz2A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1334&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多个场合爆吹邓老师的《数据结构》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;偶然发现这门课程，今年上半年又开课了，因此特此又来推荐给大家，发自内心推荐，实名点赞。&lt;/p&gt;&lt;p&gt;邓老师深受清华校内外的学生喜爱，他和他的课程也获奖无数，后文你将看到大家对邓老师的评价。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5817490494296578&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1Ig2e0PT35bBH2swZa1Rn2bQbiboibicyic8e8SZsagNPbnlKY6yh2mOicUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;526&quot;/&gt;&lt;figcaption&gt;43W+人学习&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;&lt;span&gt;缘起&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;我在清华时，上过邓老师的 2 门课程：《数据结构》、《计算几何》。《计算几何》研究生期间选修的专业课程，《数据结构》是旁听本科生的课程。&lt;/p&gt;&lt;p&gt;亲身体验过，那是真的很赞，被实力圈粉。他在讲授《数据结构》和《计算几何》方面拥有20多年的经验，课堂用的 PPT 和 动画效果也特别赞、特别赞、特别赞（还能额外学到人文知识！）。&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是我上过现场效果最好，最生动的课程（没有之一）。在学校&lt;/span&gt;&lt;span&gt;时候，线下教室也饱满，线上公开课学堂在线也是爆满。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5969498910675382&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia15atSkvUrdxD0pIVFXDQWfgst0vtYNC2lW6ARicGQlmibt1AcA5I3fZNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;918&quot;/&gt;&lt;figcaption&gt;我曾经报名的课程&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这真不是我在这里爆吹，这门课程是清华大学评选出的首批 7 门标杆课程之一。你可以去看看知乎上的讨论（https://www.zhihu.com/question/306632594）。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.8487874465049928&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1pddzEhia4xfHYXicZLy2LmX5mIibfyHHbcM1Zo2ibysELiaxlzf7QpibCNlQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1402&quot;/&gt;&lt;figcaption&gt;邓公《数据结构》实至名归，截图自知乎&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.446064139941691&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia16F9MoVOCgdGa8Oq7VBGIebaBUVLEVwgZMRVpJ5b1MrBrq33sqlMpVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1372&quot;/&gt;&lt;figcaption&gt;知乎评论：我从来没碰到过能如此深入浅出把数据结构讲得这么透彻又有趣的老师&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;&lt;span&gt;识邓公好比遇美酒&lt;/span&gt;&lt;/h2&gt;&lt;figure&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.437570303712036&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1GGFNlIdEmibhBS00tdNjobOiby8icNPe4n7YGdXWJkJdIb9p17chJ08BA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;889&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;邓老师主页封面&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;邓俊辉，清华大学计算机系教授。1993和1997年分别于清华大学计算机系获学士、博士学位，1997年起在清华大学任教，他在讲授“数据结构”和“计算几何”方面拥有20多年的经验。&lt;/p&gt;&lt;p&gt;古人云，“天若不爱酒，酒星不在天；地若不爱酒，地应无酒泉”，天地爱酒，人亦如此。&lt;/p&gt;&lt;p&gt;有学子言：“识邓公好比路遇美酒：越存越香，越品越醇”，好比美酒的“邓公”所言即是清华大学&lt;strong&gt;新百年教学成就奖&lt;/strong&gt;的获得者，计算机系教授 —— 邓俊辉。（来源：https://news.tsinghua.edu.cn/info/1070/40526.htm）&lt;/p&gt;&lt;p&gt;邓老师说，数据结构与算法（简称DSA）是个非常开放的专题，学习过程没有终点，任何一门课程都不可能穷尽：(内容来自邓老师课程主页)&lt;/p&gt;&lt;p&gt;若将DSA比作汽车，则熟悉基本的数据结构的基本功能与使用方法，犹如拿驾照会开车能上道。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;懂得不同DSA之间的差异及其适用场合，懂得针对问题需要选取适当的DSA，犹如懂得如何选购适宜于自己的汽车。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;懂得对DSA做适当的裁剪、扩充和改造，并优化组合，犹如玩车的行家里手，有DIY的能力和乐趣。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;探索DSA的优化极限，能够完成从内部优化到外部封装的整个过程，则是设计师与工程师的任务与要求。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;课程内容&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;PPT、板书、教材（示例代码）、教学演示，无一不称赞。&lt;/p&gt;&lt;h3&gt;制作精美的 PPT&lt;/h3&gt;&lt;p&gt;首先，我们来看看 PPT（文末附 PPT 下载）&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.6400885935769657&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1aSnfQcY6rKaZyynPRNVAxlKmUug13UpfpwVgpNiaLd8sYQtiarAYjkEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1806&quot;/&gt;&lt;figcaption&gt;PPT，邓老师每年会更新迭代，图为 2021 年&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;大部分章节的首页，均有一两句“引言”：或是名言名句，或者名著节选，也有歌词。&lt;/p&gt;&lt;p&gt;可怕的是，还基本上都会和本节的内容有关系！有关系！有关系！（可见邓老师的用心程度之高！）&lt;/p&gt;&lt;p&gt;比如随便选了其中的 3 页 PPT：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;栈 —— “陛下用群臣，如积薪耳，后来者居上”，语出《史记·汲郑列传》。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;红黑树 —— “这时，我看见两只大蚂蚁，一只红不棱登，另一只个儿特大，差不离有半英寸长，是黑不溜秋的，它们两个正在相互凶殴...”，美国作家 亨利·戴维·梭罗 的《瓦尔登湖》&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;图的广度优先搜索 —— 《五环之歌》，岳云鹏&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.563&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1O57Jebgu7FU91WmQrm4pQMSyJzhEDSIaWiafXobM4PosDqH9QZHh6yg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2000&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5564278704612365&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1YZf2bEicRbWeAzd9ozlWKhcwJER6qPPjoVKnm9EfvJ5WrxVTrB5nxmg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2038&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.554679802955665&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1cBEaXWibU84pqA4sd8SSLM7TC9Iaof0rS4q36HViakt21sVOiboDIjQiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2030&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&amp;lt;&amp;lt;&amp;lt; 记得左右滑动，一共 3 张 &amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;&lt;p&gt;不好意思，知识储备不够，看《数据结构》PPT，让我一边百度一边，学起了人文知识。难怪听说不少非计算机相关专业的学生也来旁听课程，原来是为了学人文知识，笑😁&lt;/p&gt;&lt;h3&gt;生动的板书演示&lt;/h3&gt;&lt;p&gt;我们再来看看，邓老师的板书演示。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5622254758418741&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1wGotzToe0noMbjKibc57T3SyUXFwJ62RXsibyujH8Q4S9ZZaG0KBOMEA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;683&quot;/&gt;&lt;figcaption&gt;看看这板书演示1&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5622254758418741&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1P1OAxH8muAeibcQMsjqj86x34F8gxjGvcOcVHLNvOLIaAn90muS0GGA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;683&quot;/&gt;&lt;figcaption&gt;看看这板书演示2&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;课堂效果好的背后其实还有一套软件，叫“LectureMate”，是邓老师开发的教学演讲辅助工具。&lt;/p&gt;&lt;p&gt;邓老师也是无偿捐献出来供非盈利使用，可直接到老师主页下载使用。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.42962962962962964&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1IWg9KA9V9TBeeI8L9CSzfxhicnKicf4L6DTLib0TfcGwqRo2xuhHLox4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;正规院校教师可直接免费使用完整功能的教学工具&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;不得不说，邓老师的字也是非常漂亮。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.3074670571010249&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1MHia4UrjOy2sjjnL7VRbLob9TJu3x0mEvdUd4AJwW3xShKiakNwn9zCA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;683&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;邓老师书法&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-tools=&quot;新媒体排版&quot; data-id=&quot;1259732&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.6713754646840149&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia16oibN9t1fR88aqNkNMBvkfTRzk6VLqI0Yqm1icicNkF9cs7njvLibBNgZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1345&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;邓老师写的书签送给学生，图片来源见水印&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/figure&gt;&lt;h3&gt;教材、教学演示、配套源码&lt;/h3&gt;&lt;p&gt;我们再来看看教材。（在公众号“程序猿石头”后台回复“清华数据结构” 免费下载）&lt;/p&gt;&lt;p&gt;教材，到目前为止一共出了 3 版，最新版如下所示：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.7819548872180451&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1xwMabc06OKV1JmdvicYq1SUl6ib1ts1YoSkWbZn8wbxhOP4f0b2NFwkw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;798&quot;/&gt;&lt;figcaption&gt;数据结构第三版封面&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.7309697601668405&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1wmIG0wdiaSSX3ea0nkicB6mLUUD6aXUbCQtpkhECzXgwgHvBXfBibQsbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;959&quot;/&gt;&lt;figcaption&gt;数据结构第三版截图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;我手里有的实体书是第二版，长这个样子：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.7437145174371452&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1QOR2sbDp6ic1euC3xrbuL3VaGj5ht3v65k6a964tdLNmzmtu3wJ4paA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1233&quot;/&gt;&lt;figcaption&gt;数据结构（C++语言版）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;目前，邓老师教材均以 C++语言作为示例，但其实数据结构掌握并不依赖于某一门特定的语言。重点是我们要掌握其中的思想。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.9724025974025974&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1lfMD6RdaCU4bK7icu4hlzRialBQRYwM3xGZPNsdnqibURVugAWouuh7Fg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1232&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;配套源码&lt;/figcaption&gt;&lt;p&gt;我看邓老师，早年期间（2006年）也出过 Java 版本的教材，如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.6190476190476191&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1d9ANs0WTib0BgpWnhtoSxoVByPiawMY5RDrPzqqUI3TZiaqDJl1LdZH8A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1008&quot;/&gt;&lt;figcaption&gt;数据结构与算法（Java描述）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;邓老师一直把教书育人、传播知识放在首位。你看，他将上述所有相关教学材料均向公众开放。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5639913232104121&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1EJTD7jPqWJu68XUP4cjxc5ukSZ4ict2qicfNwynXDLibt8GG2K9ntw0zg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;922&quot;/&gt;&lt;figcaption&gt;邓老师相关教学资料向公共开放&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.7684210526315789&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibs6vG1gRXjntxKJtgplhVia1x9U7wR4O6fjukbibAfcmKEczeh6MTZOkEKibZPe61J8IQ1hmbGSwWTzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;855&quot;/&gt;&lt;/figure&gt;&lt;p&gt;还在等什么呢？抓紧去学堂在线学习邓老师的数据结构课程吧。&lt;/p&gt;&lt;p&gt;这门课程不仅适用于在校生，工作之后，若想补齐巩固相应的基础，也是很好的选择，关键还免费（证书认证收费）。&lt;/p&gt;&lt;p&gt;这不比外面各种培训班香太多吗？&lt;/p&gt;&lt;p&gt;也感谢现在科技的发达，同时也感谢邓老师的无私，让你足不出户即可享受清华名师的教学。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;后记&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;真正能学好了这门课程，什么 BAT 大厂，都是小 case，学完后你找我，帮你推荐到各个大厂。&lt;/p&gt;&lt;p&gt;大家抓紧去清华学堂免费在线注册学习（学堂在线，打钱&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibtwNJw9tAEnJ0KgLBF9RDf1WAZuepzJBBhS9RtjbGqv6adk4pGIrETYs8mFmLUTbqYPQuIt55dbeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;20&quot;/&gt;）吧，视频公开课、配合邓老师的教材，真的很棒！网址点击左下角阅读原文直达。&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了方便大家，我已经把相关学习资料下载打包好了（当然你也可以到前文提到的邓老师课程主页下&lt;/span&gt;&lt;span&gt;载），你只需要在公众号后台回复“清华数据结构”，我就将上述所有资料提供给你。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI3OTUzMzcwNw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibsGrjJaF5hvicrswVeQicFujw8LhrKnbvzEUPibAQINJDc60oDZ9S1XrQsrxQf6M8iakCatO0YA4jXbvA/0?wx_fmt=png&quot; data-nickname=&quot;程序猿石头&quot; data-alias=&quot;tangleithu&quot; data-signature=&quot;清华毕业的打工仔，分享计算机领域的技术、职场和大学生学习方法，涉及后端技术、互联网、计算机基础、编程技术、程序员职场、程序员面试等话题。欢迎关注。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;点↑小卡片，回复“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;清华数据结构&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”获取公开学习资料&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;学习过程中，有问题欢迎交流讨论。精力有限，不然我组织一波共同学习，定期交流。感兴趣的同学可以进入交流群报团。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你可能还感兴趣：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3OTUzMzcwNw==&amp;amp;mid=2247488892&amp;amp;idx=1&amp;amp;sn=1b026c5a8688b880ca06c51c816265b1&amp;amp;chksm=eb471498dc309d8eaac5bd296a3971901e624e9abfc5a0add8928f5ebc3a83b8402ebfadd95d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;关于 AI 的数百个问题，清华男神刘云浩教授的 3 万字回复给整得明明白白&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5ffa84268cd775c929002e1dd5b61a74</guid>
<title>并发编程：Double-Checked Locking Pattern</title>
<link>https://toutiao.io/k/a3x8y4h</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Double-Checked Locking Pattern&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;，简称 DCLP，是并发编程的一个常见学习案例。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DCLP 的故事要从一个常见且简单的设计模式 —— 单例（Singleton）模式开始。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;Singleton* &lt;span&gt;Singleton::getInstance&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (instance == &lt;span&gt;nullptr&lt;/span&gt;) {&lt;br/&gt;        instance = &lt;span&gt;new&lt;/span&gt; Singleton;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; instance;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们限制只能通过 &lt;code&gt;getInstance&lt;/code&gt;静态成员函数获取 &lt;code&gt;Singleton&lt;/code&gt;对象，并由 &lt;code&gt;getInstance&lt;/code&gt;函数保证只分配一个实例对象。这样，就可以实现一个简单的单例模式。但是，这里的 &lt;code&gt;getInstance&lt;/code&gt;不是线程安全的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了保证线程安全，我们需要对 &lt;code&gt;getInstance&lt;/code&gt;进行同步，最简单的同步方式，就是使用一个互斥锁（mutex）。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;Singleton* &lt;span&gt;Singleton::getInstance&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;std&lt;/span&gt;::lock_guard&amp;lt;&lt;span&gt;std&lt;/span&gt;::mutex&amp;gt; &lt;span&gt;lock&lt;/span&gt;&lt;span&gt;(instance_mtx)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (instance == &lt;span&gt;nullptr&lt;/span&gt;) {&lt;br/&gt;        instance = &lt;span&gt;new&lt;/span&gt; Singleton;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; instance;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如此，可以保证 &lt;code&gt;getInstance&lt;/code&gt;函数是线程安全的。但是，这会导致在程序的长期运行中产生很多非必要的“加锁”操作——因为在所有线程都看到 &lt;code&gt;instance&lt;/code&gt;成功创建之后，&lt;code&gt;getInstance&lt;/code&gt;就不会有线程安全问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在低并发的场景下，锁争用并不多，这个“加锁”的开销并不明显。但是，在高并发的场景下，存在大量的锁争用，这个“加锁”的开销可能就无法接受了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了减少这种情况下的加锁操作，DCLP 出现了。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;Singleton* &lt;span&gt;Singleton::getInstance&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (instance == &lt;span&gt;nullptr&lt;/span&gt;) {&lt;br/&gt;        &lt;span&gt;&lt;span&gt;std&lt;/span&gt;::lock_guard&amp;lt;&lt;span&gt;std&lt;/span&gt;::mutex&amp;gt; &lt;span&gt;lock&lt;/span&gt;&lt;span&gt;(instance_mtx)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (instance == &lt;span&gt;nullptr&lt;/span&gt;) {&lt;br/&gt;            &lt;span&gt;auto&lt;/span&gt; t = &lt;span&gt;new&lt;/span&gt; Singleton;&lt;br/&gt;            instance = t;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; instance;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样看起来，如果 &lt;code&gt;instance&lt;/code&gt;已经成功创建，就不会再走“加锁”的路径了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然而，这里依然有问题：第一个 &lt;code&gt;instance == nullptr&lt;/code&gt; 没有加锁保护，也不是原子操作。&lt;code&gt;instance = t&lt;/code&gt;也不是原子操作。这意味着，第一个 &lt;code&gt;instance == nullptr&lt;/code&gt;可能看到一个“初始化了一半”的 instance，然后也返回这个“不完整的 instance”。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们需要用原子操作来解决这个问题。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;std&lt;/span&gt;::atomic&amp;lt;Singleton*&amp;gt; instance;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;Singleton* &lt;span&gt;Singleton::getInstance&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;auto&lt;/span&gt; t = instance.load(&lt;span&gt;std&lt;/span&gt;::memory_order_acquire);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (t == &lt;span&gt;nullptr&lt;/span&gt;) {&lt;br/&gt;        &lt;span&gt;&lt;span&gt;std&lt;/span&gt;::lock_guard&amp;lt;&lt;span&gt;std&lt;/span&gt;::mutex&amp;gt; &lt;span&gt;lock&lt;/span&gt;&lt;span&gt;(instance_mtx)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;        t = instance.load(&lt;span&gt;std&lt;/span&gt;::memory_order_acquire);&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (t == &lt;span&gt;nullptr&lt;/span&gt;) {&lt;br/&gt;            t = &lt;span&gt;new&lt;/span&gt; Singleton;&lt;br/&gt;            instance.store(t, &lt;span&gt;std&lt;/span&gt;::memory_order_release);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; t;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不明白 Release-Acquire 语意的，可以参考我之前写的一篇文章：&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI0NjA1MTU5Ng==&amp;amp;mid=2247484061&amp;amp;idx=1&amp;amp;sn=01c91276bc03ae44442c633a9cb1ef06&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;并发编程：内存模型&lt;/a&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;Double-Checked Locking Pattern: &lt;em&gt;https://www.aristeia.com/Papers/DDJ_Jul_Aug_2004_revised.pdf&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3dd19e09dfb22149c9f7139fe3032584</guid>
<title>localhost 就一定是 localhost 么？</title>
<link>https://toutiao.io/k/4w956kj</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;markdown-body&quot;&gt;&lt;blockquote&gt;&lt;p&gt;我们在本地测试或者本地通讯的时候经常使用 localhost 域名，但是访问 localhost 的对应的一定就是我们的本机地址么？&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;/&gt;背景&lt;/h2&gt;&lt;p&gt;在一个风和日丽下午，突然收到了运维同学的反馈，说我们的一个服务调用突然报错了，关键是这个服务已经半年没有更新发版过了，询问后得知最近基础架构也没有什么变更，这就很迷了&lt;/p&gt;&lt;p&gt;我们排查日志后发现这个服务去调用了一个不知名的 ip 地址，这个地址还能 ping 通，但是我们明明是配置的 localhost，为什么会出现这个地址？localhost 不应该指向的是 &lt;code&gt;127.0.0.1&lt;/code&gt; 么？我们使用 &lt;code&gt;dig&lt;/code&gt; 和 &lt;code&gt;nslookup&lt;/code&gt; 之后发现 localhost 的确是 &lt;code&gt;127.0.0.1&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;我们修改了应用的配置，让这个调用直接调用 &lt;code&gt;127.0.0.1&lt;/code&gt; 结果发现这个时候服务就正常了，然后我们在机器上抓包之后发现 localhost 竟然走了域名解析! 并且 &lt;code&gt;localhost&lt;/code&gt; 这个域名在我们内网还被注册了，解析出来的地址就是最开始发现的这个不知名的地址&lt;/p&gt;&lt;h3 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;/&gt;小结&lt;/h3&gt;&lt;p&gt;所以我们下意识认为的域名解析流程应该是这样的，先去找 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件，localhost 找到了（默认是 127.0.0.1）就返回了&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://mohuishou-blog-sz.oss-cn-shenzhen.aliyuncs.com/image/20210615212124.gif&quot; srcset=&quot;/img/loading.gif&quot; alt=&quot;1&quot;/&gt;&lt;/p&gt;&lt;p&gt;排查之后发现，实际上的流程是这样的，先做了 DNS 查询 DNS 没查到然后去查了 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://mohuishou-blog-sz.oss-cn-shenzhen.aliyuncs.com/image/20210615212206.gif&quot; srcset=&quot;/img/loading.gif&quot; alt=&quot;2&quot;/&gt;&lt;/p&gt;&lt;p&gt;直到有一天，我们的内网域名解析中添加了一个 localhost 的域名解析，就直接查询成功返回了&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://mohuishou-blog-sz.oss-cn-shenzhen.aliyuncs.com/image/20210615213112.gif&quot; srcset=&quot;/img/loading.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;复现&quot;&gt;&lt;a href=&quot;#复现&quot; class=&quot;headerlink&quot; title=&quot;复现&quot;/&gt;复现&lt;/h2&gt;&lt;p&gt;我们先使用一段简单的代码复现一下，简单请求一下 &lt;code&gt;localhost&lt;/code&gt; 就行了&lt;/p&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs go&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; (&lt;br/&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;net/http&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;client := &amp;amp;http.Client{}&lt;br/&gt;_, err := client.Get(&lt;span class=&quot;hljs-string&quot;&gt;&quot;http://localhost:8080&quot;&lt;/span&gt;)&lt;br/&gt;fmt.Println(err)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后我们使用 &lt;code&gt;GODEBUG=&quot;netdns=go+2&quot;&lt;/code&gt; 环境变量执行程序，带上这个环境变量之后程序运行时就会输出是先执行 dns 查询还是先从 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件进行查询&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;GODEBUG=&lt;span class=&quot;hljs-string&quot;&gt;&quot;netdns=go+2&quot;&lt;/span&gt; go run main.go &lt;br/&gt;go package net: GODEBUG setting forcing use of Go&lt;span class=&quot;hljs-string&quot;&gt;&#x27;s resolver&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-string&quot;&gt;go package net: hostLookupOrder(localhost) = files,dns&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-string&quot;&gt;Get &quot;http://localhost:8080&quot;: dial tcp [::1]:8080: connect: connection refused&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;上面显示的 &lt;code&gt;files,dns&lt;/code&gt; 的意思就是先从 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件中查询，再去查询 &lt;code&gt;dns&lt;/code&gt; 结果，但是我们当时服务的运行结果是 &lt;code&gt;dns,files&lt;/code&gt; 这个问题出现在哪里呢？和 Go 的版本以及本地环境有关系&lt;/p&gt;&lt;p&gt;我们使用 Docker 模拟了线上环境，我们线上也是用的 Docker&lt;/p&gt;&lt;figure class=&quot;highlight dockerfile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs dockerfile&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; golang:&lt;span class=&quot;hljs-number&quot;&gt;1.15&lt;/span&gt; as builder&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; /app&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; main.go main.go&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; run.sh run.sh&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;ENV&lt;/span&gt; CGO_ENABLED=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;ENV&lt;/span&gt; GOOS=linux&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;RUN&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; go build main.go&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;FROM&lt;/span&gt; alpine:&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; /app&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; --from=builder /app /app&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; run.sh run.sh&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;RUN&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; chmod +x run.sh&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;ENV&lt;/span&gt; GODEBUG=&lt;span class=&quot;hljs-string&quot;&gt;&quot;netdns=go+2&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;ENV&lt;/span&gt; CGO_ENABLED=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;ENV&lt;/span&gt; GOOS=linux&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; /app/run.sh&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用这个容器运行的结果如下，可以看到已经变成了 &lt;code&gt;dns,files&lt;/code&gt; 为什么会这样呢？&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;go package net: built with netgo build tag; using Go&lt;span class=&quot;hljs-string&quot;&gt;&#x27;s DNS resolver&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-string&quot;&gt;go package net: hostLookupOrder(localhost) = dns,files&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-string&quot;&gt;Get &quot;http://localhost:8080&quot;: dial tcp 127.0.0.1:8080: connect: connection refused&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&quot;排查&quot;&gt;&lt;a href=&quot;#排查&quot; class=&quot;headerlink&quot; title=&quot;排查&quot;/&gt;排查&lt;/h2&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://github.com/golang/go/blob/20a838ab94178c55bc4dc23ddc332fce8545a493/src/net/dnsclient_unix.go#L492&quot;&gt;src/net/dnsclient_unix.go&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Go 中定义了下面几种 DNS 解析顺序，其中 &lt;code&gt;files&lt;/code&gt; 表示查询 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件，&lt;code&gt;dns&lt;/code&gt; 表示执行 dns 查询&lt;/p&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs go&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// hostLookupOrder specifies the order of LookupHost lookup strategies.&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// It is basically a simplified representation of nsswitch.conf.&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// &quot;files&quot; means /etc/hosts.&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; hostLookupOrder &lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; (&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// hostLookupCgo means defer to cgo.&lt;/span&gt;&lt;br/&gt;hostLookupCgo      hostLookupOrder = &lt;span class=&quot;hljs-literal&quot;&gt;iota&lt;/span&gt;&lt;br/&gt;hostLookupFilesDNS                 &lt;span class=&quot;hljs-comment&quot;&gt;// files first&lt;/span&gt;&lt;br/&gt;hostLookupDNSFiles                 &lt;span class=&quot;hljs-comment&quot;&gt;// dns first&lt;/span&gt;&lt;br/&gt;hostLookupFiles                    &lt;span class=&quot;hljs-comment&quot;&gt;// only files&lt;/span&gt;&lt;br/&gt;hostLookupDNS                      &lt;span class=&quot;hljs-comment&quot;&gt;// only DNS&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在 &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://github.com/golang/go/blob/go1.14/src/net/conf.go&quot;&gt;src/net/conf.go&lt;/a&gt; 中可以看到&lt;/p&gt;&lt;p&gt;Go 会先根据一些初始条件判断查询的顺序，然后就查找 &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt; 文件中的 &lt;code&gt;hosts&lt;/code&gt; 配置项，如果不存在就会走一些回退逻辑。这次的问题出现在这个回退逻辑上&lt;/p&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs go&quot;&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;(c *conf)&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;hostLookupOrder&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(r *Resolver, hostname &lt;span class=&quot;hljs-keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;hljs-params&quot;&gt;(ret hostLookupOrder)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// ... 省略&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;nss := c.nss&lt;br/&gt;srcs := nss.sources[&lt;span class=&quot;hljs-string&quot;&gt;&quot;hosts&quot;&lt;/span&gt;]&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// If /etc/nsswitch.conf doesn&#x27;t exist or doesn&#x27;t specify any&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// sources for &quot;hosts&quot;, assume Go&#x27;s DNS will work fine.&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; os.IsNotExist(nss.err) || (nss.err == &lt;span class=&quot;hljs-literal&quot;&gt;nil&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;hljs-built_in&quot;&gt;len&lt;/span&gt;(srcs) == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) {&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; c.goos == &lt;span class=&quot;hljs-string&quot;&gt;&quot;solaris&quot;&lt;/span&gt; {&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// illumos defaults to &quot;nis [NOTFOUND=return] files&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; fallbackOrder&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; c.goos == &lt;span class=&quot;hljs-string&quot;&gt;&quot;linux&quot;&lt;/span&gt; {&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// glibc says the default is &quot;dns [!UNAVAIL=return] files&quot;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// https://www.gnu.org/software/libc/manual/html_node/Notes-on-NSS-Configuration-File.html.&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; hostLookupDNSFiles&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; hostLookupFilesDNS&lt;br/&gt;}&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; nss.err != &lt;span class=&quot;hljs-literal&quot;&gt;nil&lt;/span&gt; {&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// We failed to parse or open nsswitch.conf, so&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// conservatively assume we should use cgo if it&#x27;s&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// available.&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; fallbackOrder&lt;br/&gt;}&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过上面的代码我们可以发现，当前系统如果是 linux 并且不存在 &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt; 文件的时候，会直接返回 &lt;code&gt;dns,files&lt;/code&gt; 的顺序，这个是参考了 glibc 的实现&lt;sup id=&quot;fnref:2&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:2&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;glibc 实现 https://www.gnu.org/software/libc/manual/html_node/Notes-on-NSS-Configuration-File.html&amp;#10;&quot;&gt;[2]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;这个问题其实一般在虚拟机上没有问题，因为一般操作系统都会默认有这个配置文件，但是容器化之后我们一般喜欢使用 alpine linux 这种比较小的基础镜像，alpine 中就不存在的 &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt; 这个文件，所以就有可能会出现问题&lt;/p&gt;&lt;p&gt;上面这段逻辑不能再 1.16 中进行复现，是因为 1.16 已经修改了这个逻辑，主要就是把 &lt;code&gt;linux&lt;/code&gt; 的这个判断分支删除掉了，感兴趣可以看这个&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://github.com/golang/go/commit/c80022204e8fc36ec487888d471de27a5ea47e17#diff-a7c29e18c1a96d08fed3e81f367d079d14c53ea85d739e7460b21fb29a063128&quot;&gt;修改记录&lt;/a&gt;&lt;sup id=&quot;fnref:3&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:3&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;修改记录: https://github.com/golang/go/commit/c80022204e8fc36ec487888d471de27a5ea47e17#diff-a7c29e18c1a96d08fed3e81f367d079d14c53ea85d739e7460b21fb29a063128&amp;#10;&quot;&gt;[3]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt; 和这个 &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://github.com/golang/go/issues/35305&quot;&gt;issue&lt;/a&gt;&lt;sup id=&quot;fnref:4&quot; class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn:4&quot; rel=&quot;footnote&quot;&gt;&lt;span class=&quot;hint--top hint--rounded&quot; aria-label=&quot;https://github.com/golang/go/issues/35305&amp;#10;&quot;&gt;[4]&lt;/span&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;/&gt;总结&lt;/h2&gt;&lt;p&gt;最大的感受就是经验主义害死人，很多时候由于我们知识点的原因所以可能会出现一些和我们认为的常识相违背的地方，这个时候就需要大胆假设小心求证了&lt;/p&gt;&lt;p&gt;针对这次这个问题的修复方案，我们是直接先删除了 localhost 的解析，复盘之后给出我不成熟的几点小建议&lt;/p&gt;&lt;ul&gt;&lt;li&gt;公司内网就不要搞注册 localhost 域名这种骚操作了&lt;/li&gt;&lt;li&gt;基础镜像的维护很重要，建议大家最好能够统一一个基础镜像这样不仅仅可以减少一些磁盘空间，同时还可以做一些统一的变更，例如这次这种就可以直接在基础镜像加上 &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt; 文件，避免其他业务也进坑里&lt;/li&gt;&lt;li&gt;如果没有什么特别的版本依赖（绝大部分应用其实都没有）Go 版本建议升级 1.16 可以省很多事&lt;/li&gt;&lt;li&gt;dns 解析并不一定会先查询 hosts 文件，除了这种默认的情况外，还可以手动修改 &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt; 文件，调整解析的顺序，这个感兴趣的话可以试试&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这篇文章还试着用 figma 做了几个小动画，感觉还是不错，后续有空写文章可以再搞搞（曹大不要再卷了，快学不动了）&lt;/p&gt;&lt;h2 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;/&gt;参考文献&lt;/h2&gt;&lt;section class=&quot;footnotes&quot;/&gt;&lt;h2 id=&quot;关注我获取更新&quot;&gt;&lt;a href=&quot;#关注我获取更新&quot; class=&quot;headerlink&quot; title=&quot;关注我获取更新&quot;/&gt;关注我获取更新&lt;a class=&quot;anchorjs-link&quot; aria-label=&quot;Anchor&quot; data-anchorjs-icon=&quot;&quot; href=&quot;#关注我获取更新&quot;/&gt;&lt;/h2&gt;&lt;h2 id=&quot;猜你喜欢&quot;&gt;猜你喜欢&lt;/h2&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1da5124e3e3082a1e9fc1a873c16722e</guid>
<title>FAQ：使用 Kotlin 进行 Android 开发</title>
<link>https://toutiao.io/k/9r2rg7u</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot;&gt;&lt;p&gt;自从 2017 年我们宣布支持 Kotlin 以来，收到了很多关于使用 Kotlin 进行 Android 开发的问题: 大家想知道现在是否适合学习 Kotlin，是否要在应用开发中引入 Kotlin，学习 Kotlin 的最佳课程或教程是什么，Google 内部是否在使用 Kotlin，以及我们对 Java 编程语言的规划是怎样的？本文将一一作答。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;问: 是否应该学习 Kotlin 进行 Android 开发？&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;最常提及的问题大都围绕同一个话题:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;&quot;对于初学者，应该选择学习 Kotlin 还是 Java 编程语言？&quot;&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;&quot;如果已经掌握了 Java 基础知识，现在适合改用 Kotlin 进行 Android 开发吗？&quot;&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;&quot;对于资深 Java 开发者如果学习 Android 开发，推荐直接上手 Kotlin 还是使用 Java 入门呢？&quot;&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;简单来说:&lt;/p&gt;&lt;p&gt;是的！开始学习和使用 Kotlin 吧！&lt;/p&gt;&lt;p&gt;&lt;b&gt;展开来回答:&lt;/b&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;Kotlin 与 Android&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;2017 年，我们在 Google I/O 大会上宣布支持 Kotlin。从那时起，我们开始着手确保我们的 API、文档和示例适用于 Kotlin。2019 年，Kotlin 成为 Android 开发的首选语言，这让我们开始更加依赖于 Kotlin 的功能。例如，协程成为我们实现异步操作的推荐方案。&lt;/p&gt;&lt;p&gt;我们还做了以下工作:&lt;/p&gt;&lt;p&gt;&lt;b&gt;Kotlin 优先库&lt;/b&gt;&lt;/p&gt;&lt;p&gt;首先在若干 Android Jetpack API (如 Room、LiveData、ViewModel 和 WorkManager) 中，我们增加了对 Kotlin 协程的一流支持，从而转变了在 Android 上执行异步操作的方式。Firebase Android SDK 和许多 Jetpack 库都具有 &lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//developer.android.google.cn/kotlin/ktx&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Kotlin 扩展库&lt;/a&gt;&lt;/b&gt; (KTX)，通过 Kotlin 使用起来更加流畅。&lt;/p&gt;&lt;p&gt;现在，我们的很多库都优先使用 Kotlin，如 Paging 3.0 和 DataStore。&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//developer.android.google.cn/jetpack/compose&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Jetpack Compose&lt;/a&gt;&lt;/b&gt; 是全新的、独立的、声明式 UI 工具包，它从头到尾使用 Kotlin 编写。&lt;/p&gt;&lt;p&gt;&lt;b&gt;工具&lt;/b&gt;&lt;/p&gt;&lt;p&gt;开发效率源自强大的工具。因此，我们对编译工具链做了很多针对 Kotlin 的改进，包括对 Kotlin JVM 编译器的改进、针对 Kotlin 的 R8 优化，甚至还开发了 &lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/google/ksp&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Kotlin Symbol Processing&lt;/a&gt;&lt;/b&gt; 等新工具。我们添加了内置 Android Kotlin Live 模板，供您使用简写语法将常见的 Android 代码结构应用到 Kotlin 代码。同时，针对 Kotlin 的 Lint 检查可帮助您确保 Kotlin 代码更符合语言习惯。该工具在您从 Java 编程语言过渡到 Kotlin 时尤其有用。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;问: Google 内部是否在使用 Kotlin？&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;在 Google 内部，我们也在着力推广使用 Kotlin。我们有超过 60 个应用 (如 Google Home、Drive、Maps 等) 已将 Kotlin 添加到代码库中。我们庞大的内部代码库中已有超过 200 万行 Kotlin 代码。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;问: 是否应该将应用迁移到 Kotlin？&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;我们经常收到这一问题，但最终的答案因人而异。如果您对当前的代码库和技术栈感到满意，能熟练使用您的解决方案来管理异步任务，并且具有高效的错误捕获方法，那么迁移到 Kotlin 对您来说可能不是合适的解决方案。&lt;/p&gt;&lt;p&gt;如果您在试用 Kotlin 之后或通过下文提到的一些课程学习该语言之后，很喜欢它的效果，而且希望充分利用最新的 Jetpack API，那么您应该考虑将 Kotlin 加入到应用开发中。Kotlin 的一大优势在于它与 Java 有很好的互操作性。您可以循序渐进地采用 Kotlin，比如可以首先在测试中试用，然后在新功能中试用，在慢慢接触的过程中，再尝试转换部分旧代码。&lt;/p&gt;&lt;p&gt;着手迁移到至 Kotlin，请查阅 &lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//codelabs.developers.google.cn/codelabs/java-to-kotlin%230&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Codelab 教程 - 转换到 Kotlin&lt;/a&gt;&lt;/b&gt;。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;问: Java 编程语言在 Android 开发中将如何发展？&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;我们在 Java 的基础上增加了对 Kotlin 的支持，因为这两种语言都可以编译成相同的字节码，并且可以共存。我们喜欢 Kotlin 是因为用它编写代码更易于表达、更安全，同时我们也会继续 &lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//developer.android.google.cn/studio/write/java8-support&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;维护并推动对 Java 语言的支持&lt;/a&gt;&lt;/b&gt;。例如，在 Android 11 中，从 OpenJDK 的较新版本一直到版本 13，我们增加了对许多 API 的支持，Android Studio 甚至支持在所有 Android 设备上使用其中一些 API，而不受操作系统版本的限制。查阅文章，进一步了解 &lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//medium.com/androiddevelopers/support-for-newer-java-language-apis-bca79fc8ef65&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;对 OpenJDK 中新 API 的支持情况&lt;/a&gt;&lt;/b&gt;。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;问: 学习 Kotlin 的最佳途径是什么？&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;采纳一门新语言并非易事，但我们正努力使其尽可能简单:&lt;/p&gt;&lt;p&gt;自从 3 年前正式增加对 Kotlin 的支持以来，我们一直在加大力度对这一出色的语言和生态系统进行支持。我们携手 JetBrains 一起为 Kotlin 建立了坚实的基础，确保该语言健康发展，例如，通过谨慎的流程来审核重大变更。我们的贡献不止于此: Google 内部有一支专职研究 Kotlin 编译器的工程师团队；我们正在构建的 Jetpack API 不仅支持 Kotlin，而且以 Kotlin 为首选语言；我们还致力于为使用 Kotlin 进行 Android 开发提供无缝的体验。&lt;/p&gt;&lt;p&gt;&lt;i&gt;Java 是 Oracle 公司和/或其子公司的注册商标。&lt;/i&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7c589c406fdc79759d8e90d6fccc8c80</guid>
<title>Android 之最全面总结 Native 与 H5 的交互方式和 WebView 简单使用</title>
<link>https://toutiao.io/k/2748dn8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;130&quot; data-source-title=&quot;&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;随着H5性能的提升，在我们移动应用开发的过程中，我们会越来越多的在我们的App页面内嵌入H5页面，使得App变的更加动态灵活。而H5页面往往并不是独立，很多时候需要和native进行交互，调用native的一些方法，或者Web中的一些方法被native所调用。&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、WebView介绍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;281&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;Android WebView在Android平台上是一个特殊的View，基于webkit引擎、展现web页面的控件，这个类可以被用来在你的app中仅仅显示一张在线的网页，还可以用来开发浏览器。WebView内部实现是采用渲染引擎来展示view的内容，提供网页前进后退，网页放大，缩小，搜索。Android的Webview在低版本和高版本采用了不同的webkit版本内核，4.4后直接使用了ChromeWebview功能强大，可以直接使用html文件（本地sdcard/assets目录），还可以直接加载url，使用JavaScript可以html跟原生APP互调&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;WebView中最主要的两个辅助类&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;WebViewClient与WebChromeClient&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;WebViewClient主要帮助WebView处理各种通知、请求事件的，有以下常用方法：&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__deletion&quot;&gt;- onPageFinished 页面请求完成&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__deletion&quot;&gt;- onPageStarted 页面开始加载&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__deletion&quot;&gt;- shouldOverrideUrlLoading 拦截url&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt; onReceivedError 访问错误时回调，例如访问网页时报错404，在这个方法回调的时候可以加载错误页面。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;WebChromeClient主要辅助WebView处理Javascript的对话框、网站图标、网站title、加载进度等，有以下常用方法。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;onJsAlert webview不支持js的alert弹窗，需要自己监听然后通过dialog弹窗&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__deletion&quot;&gt;- onReceivedTitle 获取网页标题&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__deletion&quot;&gt;- onReceivedIcon 获取网页icon&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__deletion&quot;&gt;- onProgressChanged 加载进度回调&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;webView设置代码如下：&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;http&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attribute&quot;&gt;webView = (WebView) findViewById(R.id.webview);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webView.loadUrl(&quot;http://www,baidu.com&quot;);//加载url&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webView.addJavascriptInterface(this,&quot;android&quot;);//添加js监听 这样html就能调用客户端&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webView.setWebChromeClient(webChromeClient);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webView.setWebViewClient(webViewClient);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        WebSettings webSettings=webView.getSettings();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webSettings.setJavaScriptEnabled(true);//允许使用js&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        /**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         * LOAD_CACHE_ONLY&lt;/span&gt;: 不使用网络，只读取本地缓存数据&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         * &lt;span class=&quot;code-snippet__attribute&quot;&gt;LOAD_DEFAULT&lt;/span&gt;: （默认）根据cache-control决定是否从网络上取数据。&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         * &lt;span class=&quot;code-snippet__attribute&quot;&gt;LOAD_NO_CACHE&lt;/span&gt;: 不使用缓存，只从网络获取数据.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         * &lt;span class=&quot;code-snippet__attribute&quot;&gt;LOAD_CACHE_ELSE_NETWORK，只要本地有，无论是否过期，或者no-cache，都使用缓存中的数据。&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         */&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webSettings.setCacheMode(WebSettings.LOAD_NO_CACHE);//不使用缓存，只从网络获取数据.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        //支持屏幕缩放&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webSettings.setSupportZoom(true);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webSettings.setBuiltInZoomControls(true);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; //WebViewClient主要帮助WebView处理各种通知、请求事件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private WebViewClient webViewClient=new WebViewClient(){&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        public void onPageFinished(WebView view, String url) {//页面加载完成&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            progressBar.setVisibility(View.GONE);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        public void onPageStarted(WebView view, String url, Bitmap favicon) {//页面开始加载&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            progressBar.setVisibility(View.VISIBLE);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        public boolean shouldOverrideUrlLoading(WebView view, String url) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            Log.i(&quot;ansen&quot;,&quot;拦截url:&quot;+url);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            if(url.equals(&quot;http://www.google.com/&quot;)){&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                Toast.makeText(MainActivity.this,&quot;国内不能访问google,拦截该url&quot;,Toast.LENGTH_LONG).show();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                return true;//表示我已经处理过了&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            return super.shouldOverrideUrlLoading(view, url);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    };&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   //WebChromeClient主要辅助WebView处理Javascript的对话框、网站图标、网站title、加载进度等&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private WebChromeClient webChromeClient=new WebChromeClient(){&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        //不支持js的alert弹窗，需要自己监听然后通过dialog弹窗&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        public boolean onJsAlert(WebView webView, String url, String message, JsResult result) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            AlertDialog.Builder localBuilder = new AlertDialog.Builder(webView.getContext());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            localBuilder.setMessage(message).setPositiveButton(&quot;确定&quot;,null);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            localBuilder.setCancelable(false);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            localBuilder.create().show();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            //注意:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            //必须要这一句代码:result.confirm()表示:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            //处理结果为确定状态同时唤醒WebCore线程&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            //否则不能继续点击按钮&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            result.confirm();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            return true;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        //获取网页标题&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        public void onReceivedTitle(WebView view, String title) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            super.onReceivedTitle(view, title);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            Log.i(&quot;ansen&quot;,&quot;网页标题:&quot;+title);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        //加载进度回调&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        public void onProgressChanged(WebView view, int newProgress) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            progressBar.setProgress(newProgress);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    };&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    public boolean onKeyDown(int keyCode, KeyEvent event) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Log.i(&quot;ansen&quot;,&quot;是否有上一个页面:&quot;+webView.canGoBack());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        if (webView.canGoBack() &amp;amp;&amp;amp; keyCode == KeyEvent.KEYCODE_BACK){//点击返回按钮的时候判断有没有上一页&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            webView.goBack(); // goBack()表示返回webView的上一页面&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            return true;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        return super.onKeyDown(keyCode,event);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、Js和java的交互&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;191&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;&lt;p&gt;方法有3种&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;通过WebView的addJavascriptInterface（）进行对象映射&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;通过 WebViewClient 的shouldOverrideUrlLoading ()方法回调拦截 url&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;通过 WebChromeClient 的onJsAlert()、onJsConfirm()、onJsPrompt（）方法回调拦截JS对话框alert()、confirm()、prompt（） 消息&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;1、通过 WebView的addJavascriptInterface（）进行对象映射&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;①定义一个与JS对象映射关系的Android类：AndroidtoJs&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;AndroidtoJs&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Object&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@JavascriptInterface&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(String msg)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        System.out.println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;JS调用了Android的hello方法&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;②在Android里通过WebView设置Android类与JS代码的映射&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;http&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__attribute&quot;&gt;WebSettings webSettings = mWebView.getSettings();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 设置与Js交互的权限&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webSettings.setJavaScriptEnabled(true);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 通过addJavascriptInterface()将Java对象映射到JS对象&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        //参数1：Javascript对象名&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        //参数2：Java对象名&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        mWebView.addJavascriptInterface(new AndroidtoJs(), &quot;test&quot;);//AndroidtoJS类对象映射到js的test对象&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 加载JS代码&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 格式规定为:file:///android_asset/文件名.html&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        mWebView.loadUrl(&quot;file:///android_asset/javascript.html&quot;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;2、通过 WebViewClient 的方法shouldOverrideUrlLoading ()回调拦截 url&lt;/strong&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;95&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;&lt;p&gt;具体原理：&lt;/p&gt;&lt;p&gt;Android通过 WebViewClient 的回调方法shouldOverrideUrlLoading ()拦截 url&lt;/p&gt;&lt;p&gt;解析该 url 的协议&lt;/p&gt;&lt;p&gt;如果检测到是预先约定好的协议，就调用相应方法&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;①在JS约定所需要的Url协议&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;②在Android通过WebViewClient复写shouldOverrideUrlLoading （）&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mWebView.setWebViewClient(&lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; WebViewClient() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                      &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                      &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;boolean&lt;/span&gt; shouldOverrideUrlLoading(WebView view, &lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt; url) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                          &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                          &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                          &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                          Uri uri = Uri.parse(url);                                 &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                          &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                          &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                          &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; ( uri.getScheme().equals(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                              &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                              &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                              &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (uri.getAuthority().equals(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;webview&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                 &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                  System.out.println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js调用了Android的方法&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                  HashMap&amp;lt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt;&amp;gt; params = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                  Set&amp;lt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt;&amp;gt; collection = uri.getQueryParameterNames();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                              }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                              &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                          }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                          &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;super&lt;/span&gt;.shouldOverrideUrlLoading(view, url);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        );&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;3、通过WebChromeClient 的onJsAlert()、onJsConfirm()、onJsPrompt（）方法回调拦截JS对话框alert()、confirm()、prompt（） 消息&lt;/strong&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;105&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;&lt;p&gt;原理：Android通过 WebChromeClient 的onJsAlert()、onJsConfirm()、onJsPrompt（）方法回调分别拦截JS对话框&lt;/p&gt;&lt;p&gt;（即上述三个方法），得到他们的消息内容，然后解析即可&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;①商定协议&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;clickprompt&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; result=prompt(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js://demo?arg1=111&amp;amp;arg2=222&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    alert(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;demo &quot;&lt;/span&gt; + result);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;②在Android通过WebChromeClient复写onJsPrompt（）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;代码如下&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webSettings.setJavaScriptEnabled(&lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        webSettings.setJavaScriptCanOpenWindowsAutomatically(&lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        mWebView.loadUrl(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;file:///android_asset/javascript.html&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        mWebView.setWebChromeClient(&lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; WebChromeClient() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;boolean&lt;/span&gt; onJsPrompt(WebView view, &lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt; url, &lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt; message, &lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt; defaultValue, JsPromptResult result) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            Uri uri = Uri.parse(message);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; ( uri.getScheme().equals(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (uri.getAuthority().equals(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;webview&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                    System.out.println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js调用了Android的方法&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                    HashMap&amp;lt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt;&amp;gt; params = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                    Set&amp;lt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt;&amp;gt; collection = uri.getQueryParameterNames();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                    result.confirm(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js调用了Android的方法成功啦&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                                &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;super&lt;/span&gt;.onJsPrompt(view, url, message, defaultValue, result);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;boolean&lt;/span&gt; onJsAlert(WebView view, &lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt; url, &lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt; message, JsResult result) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;super&lt;/span&gt;.onJsAlert(view, url, message, result);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;boolean&lt;/span&gt; onJsConfirm(WebView view, &lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt; url, &lt;span class=&quot;code-snippet__built_in&quot;&gt;String&lt;/span&gt; message, JsResult result) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;super&lt;/span&gt;.onJsConfirm(view, url, message, result);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        );&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3595505617977528&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kyDL16ViavhFRyFIZU4zdW5BnkS9WJ4FEWVVsO9zLVjF0TicAIUTOxZQORMaXLGSXJHUcQINetlklheVzlf90zYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;890&quot;/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;webview还有很多知识点：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzk0NDE3MjM1Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/kyDL16ViavhFRZkgpibUGGz2NIiaBUpj7NeBSJASje1M1ZhVvpDIGibicMUeCiad3ptsJLaLUjhrVYs5bGZWuenY6UaQ/0?wx_fmt=png&quot; data-nickname=&quot;Android开发编程&quot; data-alias=&quot;&quot; data-signature=&quot;一个有10多年经验开发的android、java、前端等语言的老程序员，在这里一起聊聊技术，一起聊聊生活、一起聊聊中年危机的生存之道，一起进步一起加油，感兴趣的欢迎订阅；不定时的更新。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>