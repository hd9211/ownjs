<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>538568a608f9c28e75b6e2c7645a5764</guid>
<title>码仔漫画：重学设计模式之装饰者模式</title>
<link>https://toutiao.io/k/38691ur</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ce296fb34058beaa93d36b4abba0f67e</guid>
<title>技术变化那么快，如何做到不被淘汰呢？</title>
<link>https://toutiao.io/k/8958dqc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;span&gt;作为程序员，技术变化那么快，如何做到不被淘汰呢？&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNav94sFJmRfZmWtb6Z7heu46zN3fozSgjLyDuicyEokozKXKQ3YCagOicLcHDylwhnWMTWesHo5XaKIJA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;300&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数位上市公司 CTO 都在订阅的「码农周刊 VIP 会员专属邮件周报」，了解一下？&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;「码农周刊 VIP 会员」是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;简介版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;码农周刊 VIP 会员 = 全年 52 期「VIP 会员专属邮件周报」 + 只限 VIP 会员加入的交流圈子 + 大厂「内推机会」 + N 多福利&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;详细版&lt;/span&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点击「阅读原文」即可查看详细介绍&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;加入「码农周刊 VIP 会员」，与上市公司 CTO 一起成长！&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;全年 52 期「VIP 会员专属邮件周报」 + 只限 VIP 会员加入的交流圈子 + 大厂「内推机会」 + N 多福利，你值得拥有！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;原价 365 元/年&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;，现价仅需 108 元！还没加入的，抓紧时间啦！&lt;/strong&gt;&lt;strong/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;260&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;260&quot; data-ratio=&quot;1.3478260869565217&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNavibNJDoLvVWUq6RKn5LwtlzRHSMFBED29234hRwibmOzJF4XxKOv5lzRVCelQJIEIOaXh3vYRHOMRzQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;690&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>06c6376ec88be66b9a047431cb25266b</guid>
<title>之前遇到一位老面试官，问我的问题真的有点东西</title>
<link>https://toutiao.io/k/zfokmsr</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这篇文章其实源于一次我的面试经历。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那次我面对是一位&lt;span&gt;老面试官&lt;/span&gt;，真的很有东西。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那次面试我和他叨叨了&lt;span&gt;两小时&lt;/span&gt;....我滴妈我嘴巴都干了真的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他的提问都很有深度，可以说对我的学习之路有很大的帮助。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我记得有个问题，差不多是面了一个小时的时候他问我：Cookie、Session、Token知道的吧？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我说：知道。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那你从&lt;span&gt;演进的角度&lt;/span&gt;来讲讲 Cookie 、Session、Token？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我当时就懵了，单独的说我都清楚，这演进的角度让我一下不知从何说起。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个面试官会从各个角度去感受我对&lt;span&gt;一个知识点到底是背的，还是有自己理解的。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他提问的方式真的很有东西，他也给我反馈了很多他的理解，相谈甚欢，真的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就这个问题他从 HTTP 无状态开始慢慢的引导我.....&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他的这波引导其实就串联起了这一系列的知识点，零散的东西就被他整理的明明白白。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以后来的学习我都喜欢找缘由，也就是为什么。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也是我一直强调的要知道：&lt;span&gt;为什么会有这个东西的存在，这个的东西是为了解决什么痛点。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;起初是因为我怕面试官再问我这样的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在是因为&lt;span&gt;就应该这样学。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今儿就来捋捋之前面试官问我的这个题的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;正文&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1990 年。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;蒂姆·伯纳斯·李创建了 HTTP 协议。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;李老的想法是把文档存储在服务器中，谁需要这个文档直接从服务器获取即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;按照这个思想，当时的需求只有 GET。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并且按照拿文档的思路：拿完了连接就可以断了，也不需要什么交互。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以 &lt;span&gt;HTTP 起初的设计就是无状态的。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是请求和请求之间是没有关联的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而随着互联网的发展，交互开始兴起。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;人们不再满足简单的静态文件获取，各种购物、社交接踵而至。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这意味着服务器需要判断每个请求的发起者是谁，也就是需要状态。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你聊天总得表明你是谁，并且和谁聊吧？不然服务器可不知这聊天信息得发给谁。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你购物总得让服务器知道是谁买了这玩意吧？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总不能你买完了下线，再上线发现你买的东西没了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时候就是需要一种技术让请求与请求之间建立起联系，让请求变得有状态。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这技术叫 Cookie，&lt;span&gt;就是一个以 Key-Value 格式存储的小文件，保存在客户端本地&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如登录之后，服务器就能设置 Cookie 返回给浏览器，然后保存在本地。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随便截了个百度的，列出来的就是 key，下拉箭头打开里面就有 value。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5327380952380952&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nGbpzvSt6CHQ1iaaKrst0V9GBqtQIwDTIvnUZyic2tlSe3VicWxKxliaicib4HM5ya27ejZ6PUjP7gSltMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;672&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之后对百度的请求就可以带着 Cookie 去访问服务器，这里假设 BAIDUID 是用户 ID。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;百度的服务器一看原来是这个 ID 啊，就知道是“我”请求了，这就有状态了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单地说 Cookie 就是存储在本地的一份文件，每次请求都会带上 Cookie 去访问服务器。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以把一些&lt;span&gt;用户信息塞到 Cookie 里，这样服务器就能判别是哪个用户的请求了&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意 &lt;span&gt;Cookie 是有域的划分的&lt;/span&gt;，来看下这个图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.37683284457478006&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nGbpzvSt6CHQ1iaaKrst0V9GP31wWUoWs8zzjSNCnIzySiclYQG4KRawVzKjCj7gJSGeJK1FwA6PVNg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;682&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是每个域下面都有各自的 Cookie ，访问不同的网站带属于这个网站的 Cookie ，不会带别人的 Cookie ，不然就乱套了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4860392967942089&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nGbpzvSt6CHQ1iaaKrst0V9GM1n3UKeq98ZdPHJHCv647F1UpPaIoGv2FxVcHjH5fNpbqoEGnZFvjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;967&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是 Cookie 是&lt;span&gt;明文存储在用户本地，而且带有大量的用户信息&lt;/span&gt;这不太安全。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并且每次请求都需要带这么多 Cookie 对带宽来说也不太划算。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Session&lt;/span&gt; 就解决了这个问题，Session 就是会话，&lt;span&gt;它有更加广泛的含义&lt;/span&gt;，在和 Cookie 这些一起谈论的场景，我们把它狭义化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Session 就是把用户的会话信息存储在服务端。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后颁发给客户端一个 sessionId，让客户端之后带着 sessionId 来请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样服务端就可以通过 sessionId 去找到这个用户的信息，从而识别请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那客户端是如何带上 sessionId 的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个 sessionId 还是按照 Cookie 的形式存储在用户的本地，发起请求的时候带上即可。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.329608938547486&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nGbpzvSt6CHQ1iaaKrst0V9GoG0kkAoKNfFyC3q85D8o9ibNawSLviaYQJ1exUPZUzBGAJWKsWWXoPibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1074&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是把这种状态信息存储到服务器中&lt;span&gt;使得服务器就有状态了&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般我们部署在线上的服务器会有多台来做负载均衡，也互相作为 backup。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以如果 Session 的信息存在某一台机器上，那么当&lt;span&gt;下一次请求被负载分到另一台机器&lt;/span&gt;那就找不到这个 Session 信息了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就不认得这个请求了，可能的现象就是告诉用户没登录，那用户不就傻了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我这刚还登录着呢，这就告诉我没登录了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以处理方式有 session 复制，就是服务器之间互相同步 session，这样不论请求到哪个服务器都有用户的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过这复制就冗余了，有额外的开销。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有一种就是 session sticky，其实就是把你的请求一直粘在某一个服务器上，如果你请求的一开始被指派的是 A 服务器，那么之后的所有请求都只会被指派到 A 服务器上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是&lt;span&gt;如果 A 服务器挂了&lt;/span&gt;，你的请求还是会被指派到别的服务器上，这样一来用户登录信息还是会丢了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到复制和 sticky 都有缺陷，所以可以把 session 放到第三方存储，比如 Redis 里。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样服务器等于又没状态了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而服务器的无状态意味着可以随意伸缩，服务集群根据流量加几台减几台，很方便。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是把 session 放第三方存储上只是把这个维护从服务器转嫁到第三方身上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第三方得保证它的高可用，不然用户登录信息又会丢了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过一般而言我们的系统本来就要维护的第三方存储，所以影响不大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;小结一下&lt;/span&gt;：Cookie 明文存储在本地不太安全，所以想着把用户状态存在服务端，而 Session 就是将用户状态信息保存在服务端。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就暴露 sessionId 给客户端，这样相对而言安全些，并且也减少了网络流量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但这样服务端就有状态了，难以扩展。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此可以把 Session 放到第三方存储上，但是等于状态还是由服务端维护。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Token&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实仔细想想，&lt;span&gt;是不是不需要在服务端存储用户的信息？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只需要一个&lt;span&gt;能代表身份的凭证&lt;/span&gt;即可，一个服务端颁发给用户凭证，之后的请求让用户带着这个凭证就行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就像我们的身份证，就代表我们。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个凭证里面就包含了用户的信息，有人可能怕凭证被伪造。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没事，&lt;span&gt;把凭证给签名了&lt;/span&gt;，这样我们服务器就能验证凭证的真伪。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和别人做不得假身份证一样。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这种凭证叫 Token。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果一个用户登录了系统，我就返回一个 Token 给他，之后每次请求他带着这个 Token 来就行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务器验证了真伪之后拿到 Token 里面的用户信息就知道这个请求是谁发的了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5743362831858407&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nGbpzvSt6CHQ1iaaKrst0V9GwcXzJtbqApe14VIVUygHqVIkwJicVARr55wy2ib9BhsWIEn0Ieyqw7UA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1130&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样服务器就无状态了，是真的无状态了，当然客户端有状态了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由客户端来保存 Token ，这样是最合理的，不需要在服务端冗余数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了 Token 之后服务器因为无状态所以可扩展，&lt;span&gt;并且 Token 还能跨应用使用。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如同一个公司不同应用之间的调用，所有应用只要能识别这个 Token 就都能登录。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个 Token 就搞定了，不用每个网站都登录一遍，这就是单点登录。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果是第三方服务提供方也更容易地提供服务，只需要颁发一个 Token 给调用者即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Token  简单的说就是一个含有凭证信息的令牌&lt;/span&gt;，只要服务器能识别这个令牌就能根据令牌的身份进行相应的响应。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实这还&lt;span&gt;蕴含了时间换空间的思想&lt;/span&gt;，把存储在服务器的用户信息暴露出去，利用签名来验证 Token 的真伪。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样每次请求都需要耗费时间去验签，不过好处就是不需要存储信息，也就是时间换空间。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实像 Cookie + Session 除了可扩展还有跨域啊、跨站伪造请求等问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;像 Token 更加灵活，在移动端等场景也更加的适用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有关文章所讲的演进&lt;span&gt;看起来&lt;/span&gt;好像就是 &lt;code&gt;Cookie =&amp;gt; Session =&amp;gt;Token&lt;/code&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;不是的&lt;/span&gt;，这几个东西都很有用，&lt;span&gt;文章只是单从认证这一方面来看罢了&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;欢迎加我好友进行深入地交流，备注「进群」，拉你进交流&amp;amp;内推群。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;平日的面试题遇到难处，或者看某个知识点翻遍全网的资料还是感觉很模糊、不透彻，可以私聊我，给我留言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;遇到合适的我会整理写出一篇文章，注意这个前提我认为合适的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那种工作遇到很细节的场景的还是别了，这种问你上司比较合适:)。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.1555555555555554&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nGbpzvSt6CHQ1iaaKrst0V9GjLvabMsdhXD0icVfZYnrIFaUFWfSricQibzlOCC9Cmrn6qUc1ceMTr1sA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;270&quot;/&gt;&lt;/figure&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我是 yes，从一点点到亿点点，欢迎在看、转发、留言，我们下篇见。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>84bbafa2cf7edfaa33b5b9940d905c56</guid>
<title>常见算法模版总结（一）</title>
<link>https://toutiao.io/k/m7uyc89</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/f93EtXu3Zk9TibJxSn9tLMfK37bcbQtgTXznNxWSfwp7FGx94fcczKB8YwbC3HctNntf3XDibgYQ6ibykpGa7c0xA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1240&quot; title=&quot;日常&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;日常&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;鉴于leetcode刷题即使有了思路，代码也总是磕磕绊绊调试好久，也调不对……直到发现网上不少算法模版，原来模版像单词一样，是需要背的。背会了模版也许能事半功倍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本篇文章233酱准备了二分法、排序、位运算的一些模版，欢迎小伙伴们交流指正，持续更新中&amp;gt;_&amp;lt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;二分法&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;「二分查找」的思想是待搜索的数据元素满足一些&lt;strong&gt;二段性&lt;/strong&gt;（前面的一半不满足这段性质，后面的一半满足这个性质，如有序数组），能够通过中间元素&lt;/span&gt;&lt;code&gt;&lt;span&gt;arr[mid]&lt;/span&gt;&lt;/code&gt;&lt;span&gt;和判断条件&lt;/span&gt;&lt;code&gt;&lt;span&gt;check(mid)&lt;/span&gt;&lt;/code&gt;&lt;span&gt;将数据分为两半,目标值&lt;/span&gt;&lt;code&gt;&lt;span&gt;target&lt;/span&gt;&lt;/code&gt;&lt;span&gt;一定在符合条件的一半中。这样通过每次折半，查找的时间的复杂为O(logN)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;假设目标值存在闭区间[l,r]中，每次将区间长度缩小一半，当l=r时，就找到了目标值target。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;    &lt;span&gt;//区间[l, r]被划分成[l, mid]和[mid + 1, r]时使用&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;binarySearch1&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; l,&lt;span&gt;int&lt;/span&gt; r)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt;(l&amp;lt;r){&lt;br/&gt;            &lt;span&gt;int&lt;/span&gt; mid = l +r &amp;gt;&amp;gt;&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;//如果mid满足了这个性质，target在区间[l,mid]中&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (check(mid)) r=mid;&lt;br/&gt;            &lt;span&gt;else&lt;/span&gt; l = mid + &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;//此时l==r,跳出后判断arr[r]是不是我们要的target即可&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; r;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//区间[l, r]被划分成[l, mid -1]和[mid, r]时使用&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;binarySearch2&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; l,&lt;span&gt;int&lt;/span&gt; r)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt;(l&amp;lt;r){&lt;br/&gt;            &lt;span&gt;int&lt;/span&gt; mid = l + r+ &lt;span&gt;1&lt;/span&gt; &amp;gt;&amp;gt;&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;//如果mid满足了这个性质，target在右区间[mid,r]中&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (check(mid)) l=mid;&lt;br/&gt;            &lt;span&gt;else&lt;/span&gt; r = mid - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;//此时l==r,跳出后判断arr[r]是不是我们要的target即可&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; r;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;check&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; mid)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;// mid是否满足我们区分二段性的条件&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;上面两段模版代码&lt;/span&gt;&lt;code&gt;&lt;span&gt;binarySearch1&lt;/span&gt;&lt;/code&gt;&lt;span&gt;和&lt;/span&gt;&lt;code&gt;&lt;span&gt;binarySearch2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;微妙的区别在于mid应该被划分在区间[l,mid] 还是 区间[mid,r]。前者在满足check条件下不断向左试探target，后者在满足条件的情况下不断向右试探target。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们通过leetcodee34 来理解这两个模版代码。&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;题目描述：&lt;/strong&gt;&lt;br/&gt;给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。&lt;br/&gt;如果数组中不存在目标值 target，返回 [-1, -1]。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;题目分析：&lt;/strong&gt;&lt;br/&gt;这道题让我们找到target的开始位置和结束位置，&lt;br/&gt;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Step1:找开始位置&lt;/span&gt;&lt;/code&gt; &lt;br/&gt;&lt;span&gt;从[l,r]中找到start,不断向左试探。更新r=mid，套用模版&lt;/span&gt;&lt;code&gt;&lt;span&gt;binarySearch1&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;&lt;span&gt;Step2:找结束位置&lt;/span&gt;&lt;/code&gt;&lt;br/&gt;&lt;span&gt;Step1结束后如果 arr[r] == target,则说明r是target的开始位置&lt;br/&gt;继续二分[r,nums-1]：不断向右试探。更新l=mid，套用模版&lt;/span&gt;&lt;code&gt;&lt;span&gt;binarySearch2&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;完整代码为：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Solution&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[] &lt;span&gt;searchRange&lt;/span&gt;(&lt;span&gt;&lt;span&gt;int&lt;/span&gt;[] nums, &lt;span&gt;int&lt;/span&gt; target&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt;[] result = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[&lt;span&gt;2&lt;/span&gt;];&lt;br/&gt;        result[&lt;span&gt;0&lt;/span&gt;] = &lt;span&gt;-1&lt;/span&gt;;&lt;br/&gt;        result[&lt;span&gt;1&lt;/span&gt;] = &lt;span&gt;-1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (nums.length == &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; result;&lt;br/&gt;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; l = &lt;span&gt;0&lt;/span&gt;, r = nums.length - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;//Step1:从[l,r]中找到start,不断向左试探&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; (l &amp;lt; r) {&lt;br/&gt;            &lt;span&gt;int&lt;/span&gt; mid = l + r &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (nums[mid] &amp;gt;= target) {&lt;br/&gt;                r = mid;&lt;br/&gt;            } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;                l = mid + &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (nums[r] != target) {&lt;br/&gt;            &lt;span&gt;//不存在目标元素&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; result;&lt;br/&gt;        }&lt;br/&gt;        result[&lt;span&gt;0&lt;/span&gt;] = r;&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//Step2:从[r,nums.length-1]中寻找end，不断向右试探&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; L = r, R = nums.length - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; (L &amp;lt; R) {&lt;br/&gt;            &lt;span&gt;int&lt;/span&gt; mid = L + R + &lt;span&gt;1&lt;/span&gt; &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (nums[mid] == target) {&lt;br/&gt;                L = mid;&lt;br/&gt;            } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;                R = mid - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;        result[&lt;span&gt;1&lt;/span&gt;] = L;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; result;&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;排序算法&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;排序算法的复杂度图表如下：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.4548254620123203&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/f93EtXu3Zk9TibJxSn9tLMfK37bcbQtgTNt2zsC4BsmR5EeFGJeXWBnTQ5VBVxhxAADial7Ll2CX7T0zWurlUpfw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;974&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;这里我准备了一下快速排序、堆排序和归并排序的模版。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;快速排序和归并排序都用了&lt;strong&gt;分治思想&lt;/strong&gt;，就是将一个大问题分解成小的子问题来解决。小的子问题解决了，大问题也就解决了。通过将全局排序不断分解，局限在子问题内排序，减少了排序中不必要的重复比较操作。从而使平均复杂度降为O(nlogn)。不过在全局排序的分与合的策略上，两者有一些区别。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;快速排序&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;「快速排序」的思想是使用&lt;/span&gt;&lt;span&gt;分治法&lt;/span&gt;&lt;span&gt;（Divide and conquer）策略来把一个&lt;/span&gt;&lt;span&gt;序列&lt;/span&gt;&lt;span&gt;（list）分为较小和较大的2个子序列，然后递归地排序两个子序列。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;  &lt;span&gt;void&lt;/span&gt; &lt;span&gt;quickSort&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[]nums,&lt;span&gt;int&lt;/span&gt; l,&lt;span&gt;int&lt;/span&gt; r)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;&lt;span&gt;//终止条件&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (l&amp;gt;=r) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; i = l - &lt;span&gt;1&lt;/span&gt;, j = r + &lt;span&gt;1&lt;/span&gt;, partition = nums[l + r &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;];&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; (i&amp;lt;j){&lt;br/&gt;            &lt;span&gt;while&lt;/span&gt; (nums[ ++ i] &amp;lt; partition);&lt;br/&gt;            &lt;span&gt;while&lt;/span&gt; (nums[ -- j] &amp;gt; partition);&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (i&amp;lt;j) {&lt;br/&gt;                swap(nums,i,j);&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;&lt;span&gt;//递推步骤&lt;/span&gt;&lt;br/&gt;&lt;span&gt;//注意：分界区间是[l,j] 和 [j+1,r],因为如果r-l+1 = 偶数时，跳出循环时 i&amp;gt;j。此时j才是分区的位置&lt;/span&gt;&lt;br/&gt;        quickSort(nums,l,j);&lt;br/&gt;        quickSort(nums,j+&lt;span&gt;1&lt;/span&gt;,r);&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt;  &lt;span&gt;void&lt;/span&gt; &lt;span&gt;swap&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[]nums,&lt;span&gt;int&lt;/span&gt; i, &lt;span&gt;int&lt;/span&gt; j)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; temp = nums[i];&lt;br/&gt;        nums[i] = nums[j];&lt;br/&gt;        nums[j] = temp;&lt;br/&gt;    }&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;归并排序&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;「归并排序」指的是将两个已经排序的序列合并成一个序列的操作。归并排序算法依赖归并操作。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;mergeSort&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[] nums,&lt;span&gt;int&lt;/span&gt; l,&lt;span&gt;int&lt;/span&gt; r)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;&lt;span&gt;//终止条件&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (l&amp;gt;=r) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; mid = l+r&amp;gt;&amp;gt;&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;//递推公式&lt;/span&gt;&lt;br/&gt;        mergeSort(nums,l,mid);&lt;br/&gt;        mergeSort(nums,mid+&lt;span&gt;1&lt;/span&gt;,r);&lt;br/&gt;&lt;span&gt;//合并过程&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt;[] temp = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;[r-l+&lt;span&gt;1&lt;/span&gt;];&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; k =&lt;span&gt;0&lt;/span&gt;,i=l,j=mid+&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; (i&amp;lt;=mid &amp;amp;&amp;amp; j &amp;lt;= r){&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (nums[i]&amp;lt;= nums[j]) {&lt;br/&gt;                temp[k++] = nums[i++];&lt;br/&gt;            }&lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;                temp[k++] = nums[j++];&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; (i&amp;lt;=mid) temp[k++] = nums[i++];&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; (j&amp;lt;=r) temp[k++] = nums[j++];&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; ( i=l,j=&lt;span&gt;0&lt;/span&gt;;i&amp;lt;=r;i++,j++){&lt;br/&gt;            nums[i] = temp[j];&lt;br/&gt;        }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;堆排序&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;堆是一个近似&lt;/span&gt;&lt;span&gt;完全二叉树&lt;/span&gt;&lt;span&gt;的结构，并同时满足&lt;strong&gt;堆的性质&lt;/strong&gt;：即子节点的键值或索引总是小于（或者大于）它的父节点。&lt;br/&gt;如果先构建一个大顶堆，重复从最大堆取出数值最大的结点(把根结点和最后一个结点交换，把交换后的最后一个结点移出堆)，并让残余的&lt;/span&gt;&lt;span&gt;堆&lt;/span&gt;&lt;span&gt;维持最大堆性质，从而完成排序。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;   public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;heapSort&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[] nums)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//构建一个大顶堆&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; lastIndex = nums.length &lt;span&gt;-1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; maxParent = (lastIndex&amp;gt;&amp;gt;&lt;span&gt;1&lt;/span&gt;) &lt;span&gt;-1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = maxParent;i&amp;gt;= &lt;span&gt;0&lt;/span&gt;;i--){&lt;br/&gt;            maxHeapify(nums,i,lastIndex);&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;//不断交换数组的最后面&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt;(&lt;span&gt;int&lt;/span&gt; i = lastIndex;i&amp;gt;&lt;span&gt;0&lt;/span&gt;;i--){&lt;br/&gt;            swap(nums,&lt;span&gt;0&lt;/span&gt;,i);&lt;br/&gt;            maxHeapify(nums,&lt;span&gt;0&lt;/span&gt;,i&lt;span&gt;-1&lt;/span&gt;);&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;maxHeapify&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[] nums,&lt;span&gt;int&lt;/span&gt; parent,&lt;span&gt;int&lt;/span&gt; lastIndex)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; lChild = (parent&amp;lt;&amp;lt;&lt;span&gt;1&lt;/span&gt;)+ &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; rChild = lChild + &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (lChild &amp;gt; lastIndex) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; maxChild = lChild;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (rChild &amp;lt;= lastIndex &amp;amp;&amp;amp; nums[rChild] &amp;gt; nums[lChild]) maxChild = rChild;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (nums[maxChild] &amp;gt; nums[parent]) {&lt;br/&gt;            swap(nums,maxChild,parent);&lt;br/&gt;            &lt;span&gt;//需要继续判断换下后的父节点是否符合堆的特性&lt;/span&gt;&lt;br/&gt;            maxHeapify(nums,maxChild, lastIndex);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;swap&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[]nums,&lt;span&gt;int&lt;/span&gt; i, &lt;span&gt;int&lt;/span&gt; j)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; temp = nums[i];&lt;br/&gt;        nums[i] = nums[j];&lt;br/&gt;        nums[j] = temp;&lt;br/&gt;    }&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;位运算&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;我们看一下leetcode191如何运用上述性质。&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;题目描述：&lt;/strong&gt;计算数字的二进制中有多少个1&lt;br/&gt;&lt;strong&gt;题目示例：&lt;/strong&gt;&lt;br/&gt;输入：00000000000000000000000000001011&lt;br/&gt;输出：3&lt;br/&gt;解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 &#x27;1&#x27;。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;方法一：&lt;/strong&gt;常规解法，如果n &amp;amp; mask != 0，说明n的右边第k位为1，则计数+1，mask左移一位。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;hammingWeight&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; bits = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; mask = &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;32&lt;/span&gt;; i++) {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; ((n &amp;amp; mask) != &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;                bits++;&lt;br/&gt;            }&lt;br/&gt;            mask &amp;lt;&amp;lt;= &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; bits;&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;方法二：&lt;/strong&gt;令n=n&amp;amp;(n-1)，如果 n!=0，则说明去掉了最右面的1，则计数+1&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;hammingWeight&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; bits =&lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt;(n != &lt;span&gt;0&lt;/span&gt;){&lt;br/&gt;            bits++;&lt;br/&gt;            n = n&amp;amp;(n&lt;span&gt;-1&lt;/span&gt;);&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; bits;&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;参考资料：&lt;br/&gt;[1].https://www.acwing.com/blog/content/277/&lt;br/&gt;[2].https://stackoverflow.com/questions/4678333/n-n-1-what-does-this-expression-do&lt;br/&gt;[3].维基百科&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>860fb3d96c7557bb77269db3b63bcec5</guid>
<title>explain：索引优化的这把绝世好剑，你真的会用吗？</title>
<link>https://toutiao.io/k/y3en305</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于互联网公司来说，随着用户量和数据量的不断增加，慢查询是无法避免的问题。一般情况下如果出现慢查询，意味着接口响应慢、接口超时等问题。如果是高并发的场景，可能会出现数据库连接被占满的情况，直接导致服务不可用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;慢查询的确会导致很多问题，我们要如何优化慢查询呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要解决办法有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;监控sql执行情况，发邮件、短信报警，便于快速识别慢查询sql&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;打开数据库慢查询日志功能&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;简化业务逻辑&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;代码重构、优化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;异步处理&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;sql优化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;索引优化&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其他的办法先不说，后面有机会再单独介绍。今天我重点说说索引优化，因为它是解决慢查询sql问题最有效的手段。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何查看某条sql的索引执行情况呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没错，在sql前面加上&lt;code&gt;explain&lt;/code&gt;关键字，就能够看到它的执行计划，通过执行计划，我们可以清楚的看到表和索引执行的情况，索引有没有执行、索引执行顺序和索引的类型等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;索引优化的步骤是：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;使用&lt;code&gt;explain&lt;/code&gt;查看sql执行计划&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断哪些索引使用不当&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;优化sql，sql可能需要多次优化才能达到索引使用的最优值&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然索引优化的第一步是使用&lt;code&gt;explain&lt;/code&gt;，我们先全面的了解一下它。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;explain介绍&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先看看mysql的官方文档是怎么描述explain的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.41162514827995256&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kpoicCelQNQZ2XD0xHavicjic8aKfSEib90ah7J43sW11HicuvuibD6M5oYyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1686&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;EXPLAIN可以使用于 SELECT， DELETE， INSERT， REPLACE，和 UPDATE语句。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当EXPLAIN与可解释的语句一起使用时，MySQL将显示来自优化器的有关语句执行计划的信息。也就是说，MySQL解释了它将如何处理该语句，包括有关如何连接表以及以何种顺序连接表的信息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当EXPLAIN与非可解释的语句一起使用时，它将显示在命名连接中执行的语句的执行计划。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对于SELECT语句， EXPLAIN可以显示的其他执行计划的警告信息。&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;explain详解&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;explain的语法：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{&lt;span&gt;EXPLAIN&lt;/span&gt; | &lt;span&gt;DESCRIBE&lt;/span&gt; | &lt;span&gt;DESC&lt;/span&gt;}&lt;br/&gt;    tbl_name [col_name | wild]&lt;br/&gt;&lt;br/&gt;{&lt;span&gt;EXPLAIN&lt;/span&gt; | &lt;span&gt;DESCRIBE&lt;/span&gt; | &lt;span&gt;DESC&lt;/span&gt;}&lt;br/&gt;    [explain_type]&lt;br/&gt;    {explainable_stmt | &lt;span&gt;FOR&lt;/span&gt; &lt;span&gt;CONNECTION&lt;/span&gt; connection_id}&lt;br/&gt;&lt;br/&gt;explain_type: {&lt;br/&gt;    &lt;span&gt;EXTENDED&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;PARTITIONS&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;FORMAT&lt;/span&gt; = format_name&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;format_name: {&lt;br/&gt;    TRADITIONAL&lt;br/&gt;  | &lt;span&gt;JSON&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;explainable_stmt: {&lt;br/&gt;    &lt;span&gt;SELECT&lt;/span&gt; &lt;span&gt;statement&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;DELETE&lt;/span&gt; &lt;span&gt;statement&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;INSERT&lt;/span&gt; &lt;span&gt;statement&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;REPLACE&lt;/span&gt; &lt;span&gt;statement&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;UPDATE&lt;/span&gt; &lt;span&gt;statement&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用一条简单的sql看看使用&lt;code&gt;explain&lt;/code&gt;关键字的效果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt; &lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; test1;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行结果：&lt;img data-ratio=&quot;0.06435006435006435&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kO3VHAJaQXmU5kK3IxYUzTKpS53tfElDIrMbzzDY8W8Qt5a6DFnxIBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1554&quot;/&gt;从上图中看到执行结果中会显示12列信息，每列具体信息如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.1130434782608696&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kqJNiarvwlZ02IDE0h7p4kXc387QNBAwpm0A06gnIcqwUEQ2BoiaKXlWw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;920&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说白了，我们要搞懂这些列的具体含义才能正常判断索引的使用情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;话不多说，直接开始介绍吧。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;id列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该列的值是select查询中的序号，比如：1、2、3、4等，它决定了表的执行顺序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;某条sql的执行计划中一般会出现三种情况：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;id相同&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;id不同&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;id相同和不同都有&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么这三种情况表的执行顺序是怎么样的呢？&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.id相同&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt; &lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; test1 t1 &lt;span&gt;inner &lt;/span&gt; &lt;span&gt;join&lt;/span&gt; test1 t2 &lt;span&gt;on&lt;/span&gt; t1.id=t2.id&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;img data-ratio=&quot;0.06096361848574238&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kLervBHPDBZVjCIiaKic9p6easoiakia5mkkPplVib3JxJFSjiaJkHuf3iaJjQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2034&quot;/&gt;我们看到执行结果中的两条数据id都是1，是相同的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况表的执行顺序是怎么样的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答案：从上到下执行，先执行表t1，再执行表t2。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行的表要怎么看呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答案：看table字段，这个字段后面会详细解释。&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.id不同&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt; &lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; test1 t1 &lt;span&gt;where&lt;/span&gt; t1.id = (&lt;span&gt;select &lt;/span&gt; &lt;span&gt;id &lt;/span&gt; &lt;span&gt;from&lt;/span&gt;  test1 t2 &lt;span&gt;where&lt;/span&gt;  t2.id=&lt;span&gt;2&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;img data-ratio=&quot;0.08385481852315395&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kPdVpcPlhichucKLib6qyA76kT4nJ6nCO3pJ4MF07N7CI6vlgfqUKU89Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1598&quot;/&gt;我们看到执行结果中两条数据的id不同，第一条数据是1，第二条数据是2。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况表的执行顺序是怎么样的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答案：序号大的先执行，这里会从下到上执行，先执行表t2，再执行表t1。&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.id相同和不同都有&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain&lt;/span&gt; &lt;br/&gt;&lt;span&gt;select&lt;/span&gt; t1.* &lt;span&gt;from&lt;/span&gt; test1 t1&lt;br/&gt;&lt;span&gt;inner &lt;/span&gt; &lt;span&gt;join&lt;/span&gt; (&lt;span&gt;select &lt;/span&gt; &lt;span&gt;max&lt;/span&gt;(&lt;span&gt;id&lt;/span&gt;) &lt;span&gt;mid &lt;/span&gt; &lt;span&gt;from&lt;/span&gt; test1 &lt;span&gt;group &lt;/span&gt; &lt;span&gt;by &lt;/span&gt; &lt;span&gt;id&lt;/span&gt;) t2&lt;br/&gt;&lt;span&gt;on&lt;/span&gt; t1.id=t2.mid&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.09975961538461539&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kE7icz2DYpbhWF45AS2jvwFSWCP236icRT1zY6sfHqbmpS8sSyvs83RGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1664&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们看到执行结果中三条数据，前面两条数据的的id相同，第三条数据的id跟前面的不同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况表的执行顺序又是怎么样的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答案：先执行序号大的，先从下而上执行。遇到序号相同时，再从上而下执行。所以这个列子中表的顺序顺序是：test1、t1、&lt;derived2/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;也许你会在这里心生疑问：&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;derived2&amp;gt;&lt;/code&gt; 是什么鬼？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它表示派生表，别急后面会讲的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;还有一个问题：id列的值允许为空吗？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答案在后面揭晓。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;select_type列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该列表示select的类型。具体包含了如下11种类型：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6964064436183395&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kcZ4hxd9ABD7h8qM8ahRiapIxFaB9Cf99U5Btp7Kg443VedI0GbhYYTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1614&quot;/&gt;&lt;/p&gt;&lt;p&gt;但是常用的其实就是下面几个：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;类型&lt;/th&gt;&lt;th&gt;含义&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;SIMPLE&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;简单SELECT查询，不包含子查询和UNION&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;PRIMARY&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;复杂查询中的最外层查询，表示主要的查询&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;SUBQUERY&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;SELECT或WHERE列表中包含了子查询&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;DERIVED&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;FROM列表中包含的子查询，即衍生&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;UNION&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;UNION关键字之后的查询&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;UNION RESULT&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;从UNION&lt;span&gt;后&lt;/span&gt;的表获取结果集&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;下面看看这些SELECT类型具体是怎么出现的：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;SIMPLE&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain select &lt;span&gt;*&lt;/span&gt; from &lt;span&gt;test1;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.07587064676616916&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kStLQBMmn9UvcJaSsr4Bo1EwFGiciaicI4W9KjbMnEbZBdY0sUUNL0Fpwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1608&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;它只在简单SELECT查询中出现，不包含子查询和UNION&lt;/span&gt;，这种类型比较直观就不多说了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;PRIMARY&lt;/span&gt; 和 &lt;span&gt;SUBQUERY&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt; * &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;&lt;span&gt; test1 t1 &lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt; t1.id = (&lt;/span&gt;&lt;span&gt;select &lt;/span&gt;&lt;span&gt;id &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;&lt;span&gt;  test1 t2 &lt;/span&gt;&lt;span&gt;where&lt;/span&gt;&lt;span&gt;  t2.id=&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;);&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.08513189448441247&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2ksJaZMTicUvI080lXhS7B6vFtXalUac61jmKibJHib1iadAB17WEbic6nS3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1668&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们看到这条嵌套查询的sql中，最外层的t1表是&lt;span&gt;PRIMARY&lt;/span&gt;类型，而最里面的子查询t2表是SUBQUERY类型。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;DERIVED&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;执行sql如下：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; t1.* &lt;span&gt;from&lt;/span&gt; test1 t1&lt;br/&gt;&lt;span&gt;inner &lt;/span&gt;&lt;span&gt;join&lt;/span&gt; (&lt;span&gt;select &lt;/span&gt;&lt;span&gt;max&lt;/span&gt;(&lt;span&gt;id&lt;/span&gt;) &lt;span&gt;mid &lt;/span&gt;&lt;span&gt;from&lt;/span&gt; test1 &lt;span&gt;group &lt;/span&gt;&lt;span&gt;by &lt;/span&gt;&lt;span&gt;id&lt;/span&gt;) t2&lt;br/&gt;&lt;span&gt;on&lt;/span&gt; t1.id=t2.mid&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.10983981693363844&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2khAQz5ImCj8UepNSwGOoibUV5tTrCP7ia8GjxvUThiaiaNy9mqciapwMjicicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1748&quot;/&gt;&lt;/p&gt;&lt;p&gt;最后一条记录就是衍生表，它一般是&lt;span&gt;FROM列表中包含的子查询&lt;/span&gt;，这里是sql中的分组子查询。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;UNION 和 &lt;span&gt;UNION RESULT&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;执行sql如下：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain&lt;/span&gt;&lt;br/&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; test1&lt;br/&gt;union&lt;br/&gt;&lt;span/&gt;&lt;span&gt;select&lt;/span&gt;&lt;span&gt;* &lt;/span&gt;&lt;span&gt;from&lt;/span&gt;&lt;span&gt; test2&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1076555023923445&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kHzicZyBlf52QApUmniccibksyTmr3icI70AJDcOpKicrOYphUiae1OG6YkHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1672&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;     test2表是UNION关键字之后的查询，所以被标记为&lt;span&gt;U&lt;/span&gt;&lt;span&gt;N&lt;/span&gt;&lt;span&gt;ION&lt;/span&gt;，test1是最主要的表，被标记为PRIMARY。而&amp;lt;union1,2&amp;gt;表示id=1和id=2的表union，其结果被标记为UNION RESULT。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;UNION 和 &lt;/span&gt;&lt;span&gt;UNION RESULT&lt;/span&gt;一般会成对出现。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;此外，回答上面的问题：&lt;/strong&gt;&lt;strong&gt;id列的值允许为空吗？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果仔细看上面那张图，会发现id列是可以允许为空的，并且是在SELECT&lt;span&gt;类型&lt;/span&gt;为： &lt;span&gt;UNION RESULT&lt;/span&gt;的时候。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;table列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该列的值表示输出行所引用的表的名称，比如前面的：test1、test2等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但也可以是以下值之一：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;&amp;lt;unionM,N&amp;gt;&lt;/code&gt;：具有和id值的行的M并集N。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;&amp;lt;derivedN&amp;gt;&lt;/code&gt;：用于与该行的派生表结果id的值N。派生表可能来自（例如）FROM子句中的子查询 。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;&amp;lt;subqueryN&amp;gt;&lt;/code&gt;：子查询的结果，其id值为N&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;partitions列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该列的值表示查询将从中匹配记录的分区&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;type列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该列的值表示连接类型，是查看索引执行情况的一个重要指标。包含如下类型：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7230769230769231&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kvnRImFPQQ1sfylafBkz0WOJ6Nr3Urspy33WibqpzldRGjnxsYj4eXtw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1430&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行结果从最好到最坏的的顺序是从上到下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们需要重点掌握的是下面几种类型：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;system &amp;gt; const &amp;gt; eq_ref &amp;gt; ref &amp;gt; range &amp;gt; index &amp;gt; ALL&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在演示之前，先说明一下test2表中只有一条数据：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.25287356321839083&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kmqUEm4qwUe0Tkm8wM5um2ibs0Kho7P4wwJpo29y3nd3BZG7ruUia2YqA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;348&quot;/&gt;&lt;/p&gt;&lt;p&gt;并且code字段上面建了一个普通索引：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.11505681818181818&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2k2YznqwXKJqPQbRtD73kGb4qMUnlCRfChlibplJp4nHdb1ibZWwmbaRhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1408&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;下面逐一看看常见的几个连接类型是怎么出现的：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;system&lt;/p&gt;&lt;p&gt;这种类型要求数据库表中只有一条数据，是const类型的一个特例，一般情况下是不会出现的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;const&lt;/p&gt;&lt;p&gt;通过一次索引就能找到数据，一般用于主键或唯一索引作为条件的查询sql中，执行sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; test2 where id=1;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.06530089628681178&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kd4fkG8goyGf3N4ej7WqxdaVAqqT4UrQGt2UIfu76BDic8WtOjU9VgDg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1562&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;eq_ref&lt;/p&gt;&lt;p&gt;常用于主键或唯一索引扫描。执行sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; test2 t1 inner join test2 t2 on t1.id=t2.id;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.08494208494208494&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kJulD2LQKicox3L3Db9jdSCTuhzuamUAjxmcNibVu85G53icaH2z31WlGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1554&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;此时，有人可能感到不解，const和eq_ref都是对主键或唯一索引的扫描，有什么区别？&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt; 答：const只索引一次，而eq_ref主键和主键匹配，由于表中有多条数据，一般情况下要索引多次，才能全部匹配上。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;ref&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;常用于非主键和唯一索引扫描。&lt;/span&gt;执行sql如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; test2 where code = &#x27;001&#x27;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.06361323155216285&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2k7Svvs3JVvF7w3QxcmNRmJiarFibXwbmoI9dtU45U3II963jOscib5Bgwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1572&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;range&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;常用于范围查询，比如：between ... and 或 In 等操作，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;执行sql如下：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; test2 where id between 1 and 2;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.06505102040816327&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kefd80qqoRJsWUS1ibl3PR4Ptic0FzaAqKQXcDTHt8nVovCqNrwNJfzCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1568&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;index&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;全索引扫描。执行sql如下&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select&lt;/span&gt; code &lt;span&gt;from&lt;/span&gt; test2;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.07033248081841433&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kJe3ochfmFgTjsp2KZgbCSw2jKBU7LI2hMI53H65n6SC9qYdJsBaKUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1564&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ALL&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;全表扫描。执行sql如下&lt;span&gt;：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select *&lt;/span&gt;  &lt;span&gt;from&lt;/span&gt; test2;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.06940874035989718&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kW86NpiagvibUlUKMX3n5iawwIknNDfDib8EDfGeXIeLFhK03jsMemXR2dg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1556&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt; &lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;possible_keys列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;该列表示可能的索引选择。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;请注意，此列完全独立于表的顺序，这就意味着possible_keys在实践中，某些键可能无法与生成的表顺序一起使用。&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.08955223880597014&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kPMmV6cSjnLzibwUQjwDFXcIhBOQ6Via3QiaKSAicVUuLpuqlWl4gaT250w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1608&quot;/&gt;&lt;/p&gt;&lt;p&gt;如果此列是NULL，则没有相关的索引。在这种情况下，您可以通过检查该WHERE 子句以检查它是否引用了某些适合索引的列，从而提高查询性能。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;key列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;该列表示实际用到的索引。&lt;/p&gt;&lt;p&gt;可能会出现&lt;span&gt;possible_keys列为NULL，但是key不为NULL的情况。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;演示之前，先看看test1表结构：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.14564564564564564&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2k6Q0iceKkzcGg7uIOhXnReWWYickj2wU6VAmSt2b55HwIZLosicibQIUOibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1332&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;test1表中数据：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.37777777777777777&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kaJRZ2nmcjKtjW7DpOic0ZqUoiaztKj6ibMQXic3buDMVVdsC426QO5Ua9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;360&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;使用的索引：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.08560311284046693&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2ksATCVUmgjMIhfn5PrXv9Piaw1Wq6fu6pKkSIH9FgjgvLGOkiajdc4PNw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1028&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;code和name字段使用了联合索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下&lt;span&gt;：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select code&lt;/span&gt;  &lt;span&gt;from&lt;/span&gt; test1;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.06447534766118837&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kJt4v2gUAsJptgj5awVfZ7sHutGa0TAmuS8x2Qu35TBgSVyeC54WbTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1582&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这条sql预计没有使用索引，但是实际上使用了全索引扫描方式的索引。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;key_len列&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;该列表示使用索引的长度。上面的key列可以看出有没有使用索引，key_len列则可以更进一步看出索引使用是否充分。不出意外的话，它是最重要的列。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.07052896725440806&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2k5LXQ446IFVibcmRDX7tqsPYHGz6licAfMVeRfwTTyGwzuhceUdrNuVVA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1588&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;有个关键的问题浮出水面：key_len是如何计算的？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;决定&lt;/span&gt;key_len值的&lt;span&gt;三个因素&lt;/span&gt;：&lt;/p&gt;&lt;p&gt;  1.字符集&lt;/p&gt;&lt;p&gt;  2.长度&lt;/p&gt;&lt;p&gt;  3.是否为空 &lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;常用的字符编码占用字节数量如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.0817307692307692&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kMx9Lf6icoxXGZgArGTNcCa7crHNibCicXTe32Y2yUIuUk1ayARAuqe3kA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;416&quot;/&gt;&lt;/p&gt;&lt;p&gt;目前我的数据库字符编码格式用的：UTF8占3个字节。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;mysql常用字段占用字节数：&lt;/p&gt;&lt;section&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;字段类型&lt;/th&gt;&lt;th&gt;占用字节数&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;char(n)&lt;/td&gt;&lt;td&gt;n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;varchar(n)&lt;/td&gt;&lt;td&gt; n + 2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tinyint&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;smallint&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;bigint&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;date&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;timestamp&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;datetime&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;此外，如果字段类型允许为空则加1个字节。&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;上图中的 184是怎么算的？&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;184 = 30 * 3 + 2 + 30 * 3 + 2&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;  再把test1表的code字段类型改成char，并且改成允许为空：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.16522988505747127&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2krhicVQcZwCbAFqvqyDJTiaCVCc3iah7K4yRjZKspnyXRrpHMMibIDicicWBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1392&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下&lt;span&gt;：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select code&lt;/span&gt;  &lt;span&gt;from&lt;/span&gt; test1;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.06650544135429262&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kLKIOibTXSTZCsUc7icmVqJrEVgKPeGhtmiaJibI5lm0tokO85wH8TmJK5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1654&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;怎么算的？&lt;/h3&gt;&lt;p&gt;183 = 30 * 3 + 1 + 30 * 3 + 2&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;还有一个问题：为什么这列表示索引使用是否充分呢，还有使用不充分的情况？&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下&lt;span&gt;：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select code&lt;/span&gt;  &lt;span&gt;from&lt;/span&gt; test1 where code=&#x27;001&#x27;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.07178217821782178&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDHwNnQGoicHwEU2oHlmYdy6WfSJFOd96znUpLqsZ1cG2rucwcUKbUek3c4Cl4WwYH0uXZgaMnfUAibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1616&quot;/&gt;&lt;/p&gt;&lt;p&gt;上图中使用了联合索引：idx_code_name，如果索引全匹配key_len应该是183，但实际上却是92，这就说明没有使用所有的索引，索引使用不充分。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;ref列&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;该列表示索引命中的列或者常量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下&lt;span&gt;：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select *&lt;/span&gt;  &lt;span&gt;from&lt;/span&gt; test1 t1 inner join test1 t2 on t1.id=t2.id where t1.code=&#x27;001&#x27;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.08610086100861009&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2k6dk1uYlt5mx1HgZzhsicYq1xFNAnib2q3nIP8q3RoCt0dsj5eZr0ibO7A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1626&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们看到表t1命中的索引是const(常量)，而t2命中的索引是列sue库的t1表的id字段。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;rows列&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该列表示MySQL认为执行查询必须检查的行数。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.07407407407407407&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kxISHicEfkJlzPwrZq9kG2Lo0rfpYgegmZ55W8KILsy5wxDQuXrZMXEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1512&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于InnoDB表，此数字是估计值，可能并不总是准确的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;filtered列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该列表示按表条件过滤的表行的估计百分比。最大值为100，这表示未过滤行。值从100减小表示过滤量增加。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.07519788918205805&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2khZ2yibSIQqkMWVK5icKrziaZa1IMSlc98UicJfzBAVuY1Kq97JA9nYhakQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1516&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;rows显示了检查的估计行数，rows× filtered显示了与下表连接的行数。例如，如果 rows为1000且 filtered为50.00（50％），则与下表连接的行数为1000×50％= 500。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Extra列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该字段包含有关MySQL如何解析查询的其他信息，这列还是挺重要的，但是里面包含的值太多，就不一一介绍了，只列举几个常见的。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;Impossible WHERE&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;表示WHERE后面的条件一直都是false，&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下&lt;span&gt;：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select code&lt;/span&gt;  &lt;span&gt;from&lt;/span&gt; test1 where &#x27;a&#x27; = &#x27;b&#x27;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.07308584686774942&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kv2XibVDv5fp0KYu2C7341cnBibTneZznktElC4Yvr2DjuN32RqPG2nBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1724&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Using filesort&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;表示按文件排序，一般是在指定的排序和索引排序不一致的情况才会出现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下&lt;span&gt;：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select code&lt;/span&gt;  &lt;span&gt;from&lt;/span&gt; test1 order by name desc;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.07549361207897794&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kZIib3XgpGIuibeRZLHLABdwibPJLmcNolgibq4gORic5VpK0OYNQURBK6wA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1722&quot;/&gt;&lt;/p&gt;&lt;p&gt;这里建立的是code和name的联合索引，顺序是code在前，name在后，这里直接按name降序，跟之前联合索引的顺序不一样。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Using index&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;表示是否用了覆盖索引，说白了它表示是否所有获取的列都走了索引。&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.07359813084112149&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kxR3W8rO5QH7l6m0ECePAeIlZ4r3VP9wPUz5TQDGTFAOZkwGbSZtWjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1712&quot;/&gt;&lt;/p&gt;&lt;p&gt;上面那个例子中其实就用到了：Using index，因为只返回一列code，它字段走了索引。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Using temporary&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;表示是否使用了临时表，一般多见于order by 和 group by语句。&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行sql如下&lt;span&gt;：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;explain &lt;/span&gt;&lt;span&gt;select name&lt;/span&gt;  &lt;span&gt;from&lt;/span&gt; test1 group by name;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果：&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.06365740740740741&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kLFAtAYJu3vgT4WzZfHXQt04L30zykTONZF4aJRrP7D34fzMmrGd6MQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1728&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Using where&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;表示使用了where条件过滤。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Using join buffer&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;   表示是否使用连接缓冲。&lt;span&gt;来自较早联接的表被部分读取到联接缓冲区中，然后从缓冲区中使用它们的行来与当前表执行联接。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;索引优化的过程&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;   1.先用慢查询日志定位具体需要优化的sql&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;   2.使用explain执行计划查看索引使用情况&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;   3.重点关注：&lt;/p&gt;&lt;p&gt;       key（查看有没有使用索引）&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;       key_len（查看索引使用是否充分）&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;       type（查看索引类型）&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;       Extra（查看附加信息：排序、临时表、where条件为false等）&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;   一般情况下根据这4列就能找到索引问题。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;   4.根据上1步找出的索引问题优化sql&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;   5.再回到第2步&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;最后说一句(求关注，别白嫖我)&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果这篇文章对您有所帮助，或者有所启发的话，帮忙扫描下发二维码关注一下，您的支持是我坚持写作最大的动力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;求一键三连：点赞、转发、在看。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在公众号中回复：面试、代码神器、开发手册、时间管理有超赞的粉丝福利，另外回复：加群，可以跟很多BAT大厂的前辈交流和学习。&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDEWFbxDB7L0jHzTqu6ust2kKMgibWoPXLoPgIZ0eibZRRBMTbMibxWCqYiafxOSK85p04eh8icnow0fGJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;推荐阅读：&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODkzNTQ3Nw==&amp;amp;mid=2247485262&amp;amp;idx=1&amp;amp;sn=abe19452e4c13876270f329cc6929be7&amp;amp;chksm=f9800194cef78882e5ad4d8eb00b7e3f745a4159aee6afb1858cc16cae599f8889afa330e17b&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;让人头痛的大事务问题到底要如何解决？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODkzNTQ3Nw==&amp;amp;mid=2247485244&amp;amp;idx=1&amp;amp;sn=ea47bdaf3f3681c5e5fa8e6044a95a40&amp;amp;chksm=f98001e6cef788f02320b1607bfcc3b7fe059b59cdee3ee1163503a131e72a5874020476ddb5&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;mybatis日志功能是如何设计的？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODkzNTQ3Nw==&amp;amp;mid=2247485157&amp;amp;idx=1&amp;amp;sn=aa513ce2687162c0083b8b1c9dbf0152&amp;amp;chksm=f980003fcef78929b2c3b8322976a4c908f68727ace867553e46db5ba952959d8d946e682ac9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;zuul如果两个filter的order一样，是如何排序的？&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;zuul如果两个filter的order一样，是如何排序的？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODkzNTQ3Nw==&amp;amp;mid=2247484811&amp;amp;idx=1&amp;amp;sn=0d97b7ed61f7010704f24bd78e6cc9ee&amp;amp;chksm=f9800351cef78a47f43f5478d8f5b359b4e9f0158af9a2c1e13f1b7622c343d343998517450d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;mysql的这几个坑你踩过没？真是防不胜防&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODkzNTQ3Nw==&amp;amp;mid=2247484746&amp;amp;idx=1&amp;amp;sn=77146a6e05e8164d26f39e34fd15dc15&amp;amp;chksm=f9800390cef78a862543c15e1feeb4f722f393bed0f5aed151a60fa4d55c4b295f0d3cf365d9&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;线程池最佳线程数量到底要如何配置？&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODkzNTQ3Nw==&amp;amp;mid=2247484698&amp;amp;idx=1&amp;amp;sn=12999ca31f93a8a3fd582d282a522714&amp;amp;chksm=f98003c0cef78ad6473a38cf0f42f44a8fbbe0bb58f20297cca92d5db47351f543631a69087d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;这8种保证线程安全的技术你都知道吗？&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxODkzNTQ3Nw==&amp;amp;mid=2247484664&amp;amp;idx=1&amp;amp;sn=46922fa7acd8e485a2b1a9a341b226ac&amp;amp;chksm=f9800222cef78b34d26883f86563d36444303d480b5b81d279685828c941dad86baf577a9e75&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;springboot面试杀手锏-自动配置原理&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>