<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>405db624a363b8e04c5807b955746871</guid>
<title>优质网站同好者周刊（第 070 期） | 倾城博客</title>
<link>https://toutiao.io/k/y6s6dfg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%88%9B%E4%BD%9C%E8%80%85&quot;&gt;&lt;code&gt;创作者&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E8%B5%9E%E5%8A%A9&quot;&gt;&lt;code&gt;赞助&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B9%B3%E5%8F%B0&quot;&gt;&lt;code&gt;平台&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：创作者, 支持者, 平台, 赞助, 支持, Buy Me a Coffee, 给我买咖啡, 获得报酬, 内容, 创收&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Buy Me a Coffee is the best way for creators and artists to accept support and membership from their fans.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.buymeacoffee.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Buy Me a Coffee&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.buymeacoffee.com/&quot;&gt;Buy Me a Coffee&lt;/a&gt;（“给我买咖啡”），一个连接&lt;strong&gt;创作者&lt;/strong&gt;与支持者的平台；是创作者接受粉丝一次性和每月支持的一种很好的方式。无需将 Patreon、Mailchimp 和捐赠按钮等一堆应用程序拼凑在一起，您就可以接受支持、会员资格，并与您的粉丝建立直接关系。您的粉丝会喜欢它的。&lt;strong&gt;一个支持者抵得上一千个追随者&lt;/strong&gt;。基于 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.buymeacoffee.com/&quot;&gt;Buy Me a Coffee&lt;/a&gt; 这个平台，您可以方便接受捐款，卖任何你喜欢的东西。这比你想象的要容易。它免费即可使用，只需起个名字，即可开始你的旅程；&lt;strong&gt;Buy Me a Coffee&lt;/strong&gt;，专为&lt;strong&gt;创作者&lt;/strong&gt;，不适合企业。 它具有以下功能特征：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;不称他们为“客户”或交易，他们是你的&lt;strong&gt;支持者&lt;/strong&gt;。&lt;/li&gt;&lt;li&gt;您会立即收到付款到您的银行帐户；不再有 30 天的延误。&lt;/li&gt;&lt;li&gt;您拥有支持者的 100% 所有权。平台从不向支持者发送电子邮件，您可以随时导出列表。&lt;/li&gt;&lt;li&gt;您可以与人交谈以寻求帮助，或者如果您只是想获得一些建议以开始行动。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Buy Me a Coffee&lt;/strong&gt; 始于 2017 年，其目标是&lt;strong&gt;消除所有复杂性&lt;/strong&gt;，并为创作者提供一种简单的方式，来获得报酬，并与他们的粉丝建立联系。但简单是不够的。&lt;code&gt;创作者&lt;/code&gt;需要一种有意义且易于使用的产品。这意味着从名称本身开始，设计一个没有交易感觉的支付平台。&lt;/p&gt;&lt;p&gt;这个想法是从哪里来的？其创始人 Jijo Sunny 和 Joseph Sunny 是创作者，他们从创意演出中获得适度的广告收入。尽管每月 500 美元，是您在旧金山获得健身房会员资格的费用，但这足以在世界许多地方谋生。如果没有这些 Adsense 支票（checks），就不会有 &lt;strong&gt;Buy Me a Coffee&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;也就是说，广告模式和算法已经变得太不可靠，无法向创作者支付他们的价值。与观众建立直接关系要可靠得多。&lt;strong&gt;Buy Me a Coffee&lt;/strong&gt; 给了粉丝一个有意义的方式，来表达对创作者的感谢。创作者还可以为他们最大的粉丝提供独家内容和社区访问。在国内，也有类似的平台，如&lt;a href=&quot;https://nicelinks.site/post/60365a42927df32aa12de4cc&quot;&gt;爱发电&lt;/a&gt;（一个连接创作者与粉丝的会员制平台）。如果您也是创作者、创业者，不妨考虑入驻这些平台，为创收增加一种渠道（方式）。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62a9d03f90509e23cea772c2&quot;&gt;倾城之链 - Buy Me a Coffee&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/JavaScript&quot;&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/Web%E5%BC%80%E5%8F%91&quot;&gt;&lt;code&gt;Web开发&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/Svelte&quot;&gt;&lt;code&gt;Svelte&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：Svelte, JavaScript, Web apps, Truly reactive, No virtual DOM, Write less code, JavaScript Framework&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Svelte is a new way to build web applications. It&#x27;s a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/svelte.dev.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - Svelte • Cybernetically enhanced web apps&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：Svelte，一个继 &lt;a href=&quot;https://nicelinks.site/post/5b1294b5e93ed2618cfac134&quot;&gt;React&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5b1a221c0526c920d6dfaada&quot;&gt;Vue&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5b2b7f663bd7ef3847a3fadf&quot;&gt;Angular&lt;/a&gt; 之后，又一关注度极高的 &lt;code&gt;JavaScript&lt;/code&gt;  框架，作者是 Rich Harris（即 Ractive, Rollup 和 Buble 的作者）。Svelte 对自身定位是：一种构建 Web 应用程序的新方法。它是一个编译器，它获取你的声明性组件并将它们转换为高效的 JavaScript，从而通过手术方式更新 DOM。与传统框架（如 React 和 Vue）在浏览器中完成大部分工作不同，Svelte 将这些工作，转移到构建应用程序时发生的&lt;strong&gt;编译&lt;/strong&gt;步骤。Svelte 没有使用虚拟 DOM diffing 之类的技术，而是编写了在应用程序状态发生变化时，以手术方式更新 DOM 的代码。它主要具备以下功能特征：&lt;/p&gt;&lt;h3 id=&quot;少写代码&quot;&gt;&lt;a href=&quot;#%E5%B0%91%E5%86%99%E4%BB%A3%E7%A0%81&quot; aria-label=&quot;少写代码 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;少写代码&lt;/h3&gt;&lt;p&gt;使用您已经知道的语言（HTML、CSS 和 JavaScript）构建无样板的组件；&lt;/p&gt;&lt;h3 id=&quot;没有虚拟-dom&quot;&gt;&lt;a href=&quot;#%E6%B2%A1%E6%9C%89%E8%99%9A%E6%8B%9F-dom&quot; aria-label=&quot;没有虚拟 dom permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;没有虚拟 DOM&lt;/h3&gt;&lt;p&gt;Svelte 将您的代码编译为微小的、无框架的 Vanilla JS——您的应用程序启动速度快并保持快速；&lt;/p&gt;&lt;h3 id=&quot;真正的响应式&quot;&gt;&lt;a href=&quot;#%E7%9C%9F%E6%AD%A3%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F&quot; aria-label=&quot;真正的响应式 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;真正的响应式&lt;/h3&gt;&lt;p&gt;不再有复杂的状态管理库——Svelte 为 JavaScript 本身带来了响应性。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/post/5b1a221c0526c920d6dfaada&quot;&gt;Vue&lt;/a&gt; 作者尤雨溪，在知乎给出了如下评价：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;这个框架的 API 设计是从 Ractive 那边传承过来的（自然跟 Vue 也非常像），但这不是重点。Svelte 的核心思想在于『通过静态编译减少框架运行时的代码量』。举例来说，当前的框架无论是 React Angular 还是 Vue，不管你怎么编译，使用的时候必然需要『引入』框架本身，也就是所谓的运行时 (runtime)。但是用 Svelte 就不一样，一个 Svelte 组件编译了以后，所有需要的运行时代码都包含在里面了，除了引入这个组件本身，你不需要再额外引入一个所谓的框架运行时！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;在 2019 年时候，有简单调研过 Svelte，书写页面和逻辑，非常快捷且灵活；迄今尚未在应用中真正使用，日后有机会，很想尝试基于 Svelte 来开发 Web 应用。Svelte &lt;a href=&quot;https://nicelinks.site/redirect?url=https://github.com/sveltejs/svelte&quot;&gt;在 Github 开源&lt;/a&gt;，时至今日，它已越发成熟，感兴趣的朋友不妨了解下。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62a9c2ad90509e23cea772c0&quot;&gt;倾城之链 - Svelte • Cybernetically enhanced web apps&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2&quot;&gt;&lt;code&gt;个人博客&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E4%BA%92%E8%81%94%E7%BD%91&quot;&gt;&lt;code&gt;互联网&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%88%86%E4%BA%AB&quot;&gt;&lt;code&gt;分享&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：SEO, 编程技术, OpenCV, 计算机视觉, 深度学习, 网站设计, Python&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;热衷于分享技术和日常生活的机械专业小哥哥，捣鼓机械设计、计算机视觉和深度学习。网站还涉及到网页设计以及 SEO 相关博文。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/www.52txr.cn.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 陶小桃 Blog-无限进步的优质帅气大学生！&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://www.52txr.cn/&quot;&gt;陶小桃 Blog&lt;/a&gt;，基于 &lt;a href=&quot;https://nicelinks.site/post/5fe209779b4e656960bd8466&quot;&gt;Typecho&lt;/a&gt;、&lt;a href=&quot;https://nicelinks.site/post/5b0f943be93ed2618cfac12f&quot;&gt;七牛云&lt;/a&gt; 搭建的个人博展网站，用以承载技术和日常生活相关分享，主要涉及机械设计、计算机视觉、深度学习、网页设计、SEO、谷歌广告、数据库、网站开发等内容，通过接入 Google AdSense 赚取收入。值得一提的是，该博客对 &lt;a href=&quot;https://nicelinks.site/post/5f75ea02cda9de27bd93a919&quot;&gt;AMP&lt;/a&gt; 做了支持。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62a5f7dfbcba9006a79e86a3&quot;&gt;倾城之链 - 陶小桃 Blog-无限进步的优质帅气大学生！&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E6%8F%92%E5%9B%BE&quot;&gt;&lt;code&gt;插图&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%88%9B%E9%80%A0&quot;&gt;&lt;code&gt;创造&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%9B%BE%E7%89%87%E7%BC%96%E8%BE%91%E5%99%A8&quot;&gt;&lt;code&gt;图片编辑器&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;A constantly growing library from our Studio team, all completely customizable online&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/designstripe.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - designstripe | Create &amp;amp; customize beautiful illustrations&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://designstripe.com/&quot;&gt;DesignStripe&lt;/a&gt;，一个在线创建精美的插图的网站，无需设计技能即可使用。它具备如下功能特征：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;🎨 不断增长的可定制插 图库；&lt;/li&gt;&lt;li&gt;💻 精美简单的在线编辑器；&lt;/li&gt;&lt;li&gt;🧠 每个对象的智能变化；&lt;/li&gt;&lt;li&gt;✏️ 用于调整视觉和样式的智能滑块；&lt;/li&gt;&lt;li&gt;✨ 每天都有新的手绘插图；&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;无论是网站还是应用程序，在特定的场景，适当植入插图，可以极大丰富应用呈现；&lt;a href=&quot;https://nicelinks.site/redirect?url=https://designstripe.com/&quot;&gt;DesignStripe&lt;/a&gt;，简单、强大（且有趣！）的定制工具，可以帮您创建精美插图，该编辑器免费可用。&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62a5be4dbcba9006a79e86a0&quot;&gt;倾城之链 - designstripe | Create &amp;amp; customize beautiful illustrations&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%BA%94%E7%94%A8&quot;&gt;&lt;code&gt;应用&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%A3%81%E7%BA%B8&quot;&gt;&lt;code&gt;壁纸&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%9B%BE%E7%89%87&quot;&gt;&lt;code&gt;图片&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关键字&lt;/strong&gt;：壁纸, 美女, 锁屏, 明星, 网红, 写真, 模特&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;一款简单纯粹的明星美女模特网红写真壁纸精选 APP。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/jimeiapp.zhangbingdev.com.png?x-oss-process=style/png2jpg&quot; alt=&quot;倾城之链 - 集美美图-简单纯粹的明星美女模特网红写真壁纸精选 APP&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://jimeiapp.zhangbingdev.com/&quot;&gt;集美美图&lt;/a&gt; ，一款简单纯粹的美女壁纸精选 APP。每一张美图均为人工精心挑选和审核，每天只更新 10 张，该团队觉得壁纸不在多而在精，且不用机器操作，也不用算法推荐。他们希望做一款精致、克制、纯粹的超高品质应用。支持 Android 和 IOS 设备。它具备以下特征：&lt;/p&gt;&lt;h3 id=&quot;沉浸式设计&quot;&gt;&lt;a href=&quot;#%E6%B2%89%E6%B5%B8%E5%BC%8F%E8%AE%BE%E8%AE%A1&quot; aria-label=&quot;沉浸式设计 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;沉浸式设计&lt;/h3&gt;&lt;p&gt;设计简约、简单、纯粹看图的快乐、精心设计。&lt;/p&gt;&lt;h3 id=&quot;绿色安全&quot;&gt;&lt;a href=&quot;#%E7%BB%BF%E8%89%B2%E5%AE%89%E5%85%A8&quot; aria-label=&quot;绿色安全 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;绿色、安全&lt;/h3&gt;&lt;p&gt;不侵犯隐私、不获取非必要权限、提供帐号注销。&lt;/p&gt;&lt;h3 id=&quot;每日划一划&quot;&gt;&lt;a href=&quot;#%E6%AF%8F%E6%97%A5%E5%88%92%E4%B8%80%E5%88%92&quot; aria-label=&quot;每日划一划 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;每日划一划&lt;/h3&gt;&lt;p&gt;我们每天只更新 10 张美图，可以在首页滑动浏览。&lt;/p&gt;&lt;h3 id=&quot;编辑推荐&quot;&gt;&lt;a href=&quot;#%E7%BC%96%E8%BE%91%E6%8E%A8%E8%8D%90&quot; aria-label=&quot;编辑推荐 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;编辑推荐&lt;/h3&gt;&lt;p&gt;编辑精选美图，包括推荐分类和美图合集。&lt;/p&gt;&lt;h3 id=&quot;美图排行榜&quot;&gt;&lt;a href=&quot;#%E7%BE%8E%E5%9B%BE%E6%8E%92%E8%A1%8C%E6%A6%9C&quot; aria-label=&quot;美图排行榜 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;美图排行榜&lt;/h3&gt;&lt;p&gt;收藏排行榜 TOP&lt;/p&gt;&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/62a434dbbcba9006a79e869e&quot;&gt;倾城之链 - 集美美图-简单纯粹的明星美女模特网红写真壁纸精选 APP&lt;/a&gt;&lt;/p&gt;&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;&lt;h2 id=&quot;本期文末寄语&quot;&gt;&lt;a href=&quot;#%E6%9C%AC%E6%9C%9F%E6%96%87%E6%9C%AB%E5%AF%84%E8%AF%AD&quot; aria-label=&quot;本期文末寄语 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期文末寄语&lt;/h2&gt;&lt;p&gt;清夜无尘，月色如银。酒斟时、须满十分。浮名浮利，虚苦劳神。叹隙中驹，石中火，梦中身。&lt;br/&gt;虽抱文章，开口谁亲。且陶陶、乐尽天真。几时归去，作个闲人。对一张琴，一壶酒，一溪云。&lt;br/&gt;── 北宋 · 苏轼《行香子》&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/250/h/250/interlace/1/ignore-error/1&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;&lt;h3 id=&quot;您可能感兴趣的文章&quot;&gt;&lt;a href=&quot;#%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot; aria-label=&quot;您可能感兴趣的文章 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您可能感兴趣的文章&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e219fcab4b17aeaf83f47bf3e12c59a9</guid>
<title>6年时间，我做了一个纯净的 Java 学习&amp;面试网站！</title>
<link>https://toutiao.io/k/q51bb2i</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText css-9scqi7&quot; options=&quot;[object Object]&quot;&gt;&lt;p data-first-child=&quot;&quot; data-pid=&quot;y5XRUnLs&quot;&gt;在大三准备面试的时候，我开源了 JavaGuide 。我把自己准备面试过程中的一些总结都毫不保留地通过 JavaGuide 分享了出来。&lt;/p&gt;&lt;p data-pid=&quot;L9ySiV3i&quot;&gt;目前，这个项目在 Github 一共有 4100+ commit，320+ contributor，收获了 120k+ star。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-18f4cb4d3d40294c34af760d63324ac8_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1227&quot; data-rawheight=&quot;642&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-18f4cb4d3d40294c34af760d63324ac8_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1227&quot; data-rawheight=&quot;642&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-18f4cb4d3d40294c34af760d63324ac8_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-18f4cb4d3d40294c34af760d63324ac8_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;76uS2y1R&quot;&gt;项目地址：&lt;/p&gt;&lt;p data-pid=&quot;ro99HBHl&quot;&gt;开源 JavaGuide 初始想法源于自己的个人那一段比较迷茫的学习经历。主要目的是为了通过这个开源平台来帮助一些在学习 Java 或者面试过程中遇到问题的小伙伴。&lt;/p&gt;&lt;ul&gt;&lt;li data-pid=&quot;4P-h4sTL&quot;&gt;&lt;b&gt;对于 Java 初学者来说：&lt;/b&gt; 本文档倾向于给你提供一个比较详细的学习路径，让你对于 Java 整体的知识体系有一个初步认识。另外，本文的一些文章也是你学习和复习 Java 知识不错的实践；&lt;/li&gt;&lt;li data-pid=&quot;QGwSAxPq&quot;&gt;&lt;b&gt;对于非 Java 初学者来说：&lt;/b&gt; 本文档更适合回顾知识，准备面试，搞清面试应该把重心放在那些问题上。要搞清楚这个道理：提前知道那些面试常见，不是为了背下来应付面试，而是为了让你可以更有针对的学习重点。&lt;/li&gt;&lt;/ul&gt;&lt;p data-pid=&quot;pG-gCd7z&quot;&gt;相比于其他通过 JavaGuide 学到东西或者说助力获得 offer 的朋友来说 ， JavaGuide 对我的意义更加重大。不夸张的说，有时候真的感觉像是自己的孩子一点一点长大一样，我一直用心呵护着它。虽然，我花了很长时间来维护它，但是，我觉得非常值得！非常有意义！&lt;/p&gt;&lt;p data-pid=&quot;XG32HNiK&quot;&gt;希望大家对面试不要抱有侥幸的心理，打铁还需自身硬！ 我希望这个文档是为你学习 Java 指明方向，而不是用来应付面试用的。加油！奥利给！&lt;/p&gt;&lt;p data-pid=&quot;f9FFYu-5&quot;&gt;去年十月份，我终于下定决心对 JavaGuide 的在线阅读网站进行升级。说做就做！目前，网站已经顺利上线并运行了半年多了。&lt;/p&gt;&lt;p data-pid=&quot;PUAGE_JD&quot;&gt;距离上次介绍 &lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JavaGuide&lt;/a&gt;&lt;/b&gt; 新版在线阅读网站已经过去 7 个多月了（相关阅读：&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg2OTA0Njk0OA%3D%3D%26mid%3D2247513622%26idx%3D1%26sn%3D2e254f37b6b13206f3397efbe81bd438%26chksm%3Dcea1f9ddf9d670cb1443e5fbf11ac272c1c1a46f46ab8cce4eddce11d6843a0e2b77b1ef9510%23rd&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;官宣！我升级了!!!&lt;/a&gt;&lt;/b&gt;），这 7 个多月里不论是 JavaGuide 的内容，还是 JavaGuide 新版在线阅读网站，都进行了非常多的完善改进。&lt;/p&gt;&lt;p data-pid=&quot;v1RFm8lg&quot;&gt;从 3452 commits 到 4145 commits，不算多不算少。用心维护，真心希望能够提供帮助给需要的小伙伴。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-1897332a64fad5949791f34621367fda_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1052&quot; data-rawheight=&quot;622&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-1897332a64fad5949791f34621367fda_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1052&quot; data-rawheight=&quot;622&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-1897332a64fad5949791f34621367fda_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-1897332a64fad5949791f34621367fda_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-8efab1e4beb1530aef972fa79728f26f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1148&quot; data-rawheight=&quot;534&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-8efab1e4beb1530aef972fa79728f26f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1148&quot; data-rawheight=&quot;534&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-8efab1e4beb1530aef972fa79728f26f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-8efab1e4beb1530aef972fa79728f26f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;DsNY0vpH&quot;&gt;最近有很多小伙伴在备战秋招，为了能够助力大家准备面试，今天再来简单介绍一下 JavaGuide 新版在线阅读网站的近况。&lt;/p&gt;&lt;p data-pid=&quot;XosbtaPa&quot;&gt;即使你不准备面试的话，我也强烈推荐你看完这篇文章，这个项目的知识点总结的非常全面，拿来复习对应的知识点也是非常不错的选择。另外，如果你是新手的话，参照着这个项目的目录去学习也是很不错的。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;网站概览&lt;/b&gt;&lt;/h2&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-453ec24de24e4f13c853c3ea65f90c7a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1208&quot; data-rawheight=&quot;999&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-453ec24de24e4f13c853c3ea65f90c7a_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1208&quot; data-rawheight=&quot;999&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-453ec24de24e4f13c853c3ea65f90c7a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-453ec24de24e4f13c853c3ea65f90c7a_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;S3nOVYZm&quot;&gt;整个网站分为了下面几部分：&lt;/p&gt;&lt;ul&gt;&lt;li data-pid=&quot;GZonWpPt&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/home.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;面试指南&lt;/a&gt;&lt;/b&gt; ：网站核心，JavaGuide 项目内容在线阅读。&lt;/li&gt;&lt;li data-pid=&quot;6-iJyOJX&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/zhuanlan/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;优质专栏&lt;/a&gt;&lt;/b&gt; ：知识星球的部分专栏。&lt;/li&gt;&lt;li data-pid=&quot;jlkMbOWJ&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/open-source-project/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;开源项目&lt;/a&gt;&lt;/b&gt; ：收集整理了 Gitee/Github 上非常棒的 Java 开源项目集合。Java 开发必备！&lt;/li&gt;&lt;li data-pid=&quot;OJ95hvNv&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/high-quality-technical-articles/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;技术文章&lt;/a&gt;&lt;/b&gt; : 精选一些和 Java 相关的优质技术文章，每一篇都值得你阅读 3 遍以上！&lt;/li&gt;&lt;li data-pid=&quot;vaBeVSAf&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/books/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;技术书籍&lt;/a&gt;&lt;/b&gt; : Java 后端开发值得一读的一些书籍。&lt;/li&gt;&lt;li data-pid=&quot;DX75-MqZ&quot;&gt;网站相关 ：网站历史、作者介绍、RSS 订阅......。&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;b&gt;面试指南&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;9j7OL7dK&quot;&gt;&lt;b&gt;「面试指南」&lt;/b&gt; 部分内容详细介绍。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;Java&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;HvxZOMtn&quot;&gt;Java 部分总结了 Java 基础、Java 容器、并发、JVM、Java 新特性这些知识点。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-902b46eb99621d9138c870e6c2eba9f7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;302&quot; data-rawheight=&quot;383&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;302&quot; data-rawheight=&quot;383&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-902b46eb99621d9138c870e6c2eba9f7_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;计算机基础&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;_0Kgh5vE&quot;&gt;计算机基础部分总结了网络、操作系统、数据结构、算法这些知识点。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-72b02d503378675f08366620665e7481_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;306&quot; data-rawheight=&quot;379&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;306&quot; data-rawheight=&quot;379&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-72b02d503378675f08366620665e7481_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;数据库&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;Tj4ALFWx&quot;&gt;数据库部分总结了数据库基础、字符集、MySQL、Redis 等知识点。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6e171e55ca6dc946e7682087697ad13e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;307&quot; data-rawheight=&quot;262&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;307&quot; data-rawheight=&quot;262&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-6e171e55ca6dc946e7682087697ad13e_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;开发工具&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;6Z2dNWk8&quot;&gt;开发工具部分总结了 Git 、 Docker 和 IDEA。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-34eff576da6cf1910ddfb68fcc89f529_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;312&quot; data-rawheight=&quot;143&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;312&quot; data-rawheight=&quot;143&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-34eff576da6cf1910ddfb68fcc89f529_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;常用框架&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;VYjaDPCh&quot;&gt;为了避免系统设计部分的内容过于臃肿，我已经将常用框架的内容从系统设计部分抽了出来。&lt;/p&gt;&lt;p data-pid=&quot;Z48XchCF&quot;&gt;其本质上还是属于系统设计部分的内容，只是在排版结构上独立了出来。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-a18229b9aa6be91e4b88d7a26b7e475f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;304&quot; data-rawheight=&quot;179&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;304&quot; data-rawheight=&quot;179&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-a18229b9aa6be91e4b88d7a26b7e475f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;系统设计&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;v1SlsovS&quot;&gt;系统设计部分总结了 RestFul API、命名、重构等内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-18de0fc763e34d746ce2d1449acdc36d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;310&quot; data-rawheight=&quot;292&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;310&quot; data-rawheight=&quot;292&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-18de0fc763e34d746ce2d1449acdc36d_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;分布式&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;rZ_dLkpJ&quot;&gt;分布式部分总结了分布式常见的理论&amp;amp;算法&amp;amp;协议、网关、分布式 ID、RPC 等内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-c7c24eae016af5b9f0858b874d198ba3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;368&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;368&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-c7c24eae016af5b9f0858b874d198ba3_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;高性能&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;KuC5xgN7&quot;&gt;高性能部分总结了读写分离、分库分表、负载均衡、消息队列等内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-fcf6ac119a651bd75889af7b943c4cde_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;315&quot; data-rawheight=&quot;324&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;315&quot; data-rawheight=&quot;324&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-fcf6ac119a651bd75889af7b943c4cde_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;高可用&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;fdRGJCT-&quot;&gt;高可用部分总结了限流、降级、熔断等内容。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-666a9f362d40a6a12842b90610a5915e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;308&quot; data-rawheight=&quot;306&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;308&quot; data-rawheight=&quot;306&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-666a9f362d40a6a12842b90610a5915e_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;优质专栏&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;J_aJmvJ9&quot;&gt;&lt;b&gt;「优质专栏」&lt;/b&gt; 部分我同步了&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/about-the-author/zhishixingqiu-two-years.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;知识星球&lt;/a&gt;&lt;/b&gt;的部分专栏介绍，主要用来宣传我的知识星球。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-f5aaa9ee93ab33fc28b8d92f67525358_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1191&quot; data-rawheight=&quot;774&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-f5aaa9ee93ab33fc28b8d92f67525358_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1191&quot; data-rawheight=&quot;774&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-f5aaa9ee93ab33fc28b8d92f67525358_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-f5aaa9ee93ab33fc28b8d92f67525358_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;b-vabTVJ&quot;&gt;欢迎准备 Java 面试以及学习 Java 的同学加入我的&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/about-the-author/zhishixingqiu-two-years.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;知识星球&lt;/a&gt;&lt;/b&gt;，干货非常多！收费虽然是白菜价，但星球里的内容比你参加的上万的培训班质量还要高。不割韭菜，用心做内容，真心希望帮助到你！&lt;/p&gt;&lt;h2&gt;&lt;b&gt;开源项目&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;LEIMeuS-&quot;&gt;这个模块主要是将几年前我开源的 &lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/CodingDocs/awesome-java&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;awesome-java&lt;/a&gt;&lt;/b&gt; 这个项目的内容同步过来了，为了方便阅读。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8fa2a8b5847ad3097910a63a2d8fea94_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1187&quot; data-rawheight=&quot;975&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-8fa2a8b5847ad3097910a63a2d8fea94_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1187&quot; data-rawheight=&quot;975&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-8fa2a8b5847ad3097910a63a2d8fea94_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-8fa2a8b5847ad3097910a63a2d8fea94_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-d29911d9a79b5f9a946d45bb27f995c2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1223&quot; data-rawheight=&quot;1271&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-d29911d9a79b5f9a946d45bb27f995c2_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1223&quot; data-rawheight=&quot;1271&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-d29911d9a79b5f9a946d45bb27f995c2_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-d29911d9a79b5f9a946d45bb27f995c2_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;技术书籍&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;wim5jYSH&quot;&gt;精选优质计算机书籍，拯救你的书荒。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-92508fc3704bec44ae679f59ecbdbff5_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1216&quot; data-rawheight=&quot;699&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-92508fc3704bec44ae679f59ecbdbff5_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1216&quot; data-rawheight=&quot;699&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-92508fc3704bec44ae679f59ecbdbff5_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-92508fc3704bec44ae679f59ecbdbff5_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;技术文章&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;LhtucU_b&quot;&gt;在这里我会精选一些和 Java 相关的优质技术文章，每一篇都值得你阅读 3 遍以上！&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-70a80e79e7796fea9d510d34cd77ac3b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1179&quot; data-rawheight=&quot;1203&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-70a80e79e7796fea9d510d34cd77ac3b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1179&quot; data-rawheight=&quot;1203&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-70a80e79e7796fea9d510d34cd77ac3b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-70a80e79e7796fea9d510d34cd77ac3b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;总结&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;3cPSMeYa&quot;&gt;这篇文章简单介绍了 JavaGuide 新版在线阅读网站的近况，除了上面的介绍之外，其实还有很多大家看不到的升级，都隐藏在了项目的提交记录背后。&lt;/p&gt;&lt;p data-pid=&quot;GJQUdInm&quot;&gt;另外，欢迎大家加入我的&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/about-the-author/zhishixingqiu-two-years.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;知识星球&lt;/a&gt;&lt;/b&gt;获取更多面试干货，&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/zhuanlan/java-mian-shi-zhi-bei.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;《Java 面试指北》&lt;/a&gt;&lt;/b&gt;持续更新完善中！&lt;/p&gt;&lt;p data-pid=&quot;goqDKvuk&quot;&gt;未来的路很长，继续加油吧！少说多做，与君共勉！&lt;/p&gt;&lt;h2&gt;&lt;b&gt;后记&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;aJKWlOaV&quot;&gt;自荐一个非常不错的 Java 教程类开源项目：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//javaguide.cn/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JavaGuide&lt;/a&gt; 。这是我在大三开始准备秋招面试的时候创建的，已经维护了 4 年多了，目前这个项目在 Github 上收到了 122k+ 的 star。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-d31f72b06d90a3b2d206f13addc05536_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1644&quot; data-rawheight=&quot;1193&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-d31f72b06d90a3b2d206f13addc05536_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1644&quot; data-rawheight=&quot;1193&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-d31f72b06d90a3b2d206f13addc05536_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-d31f72b06d90a3b2d206f13addc05536_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;fmScJtVt&quot;&gt;并且，这个项目还推出了一个PDF版本：&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzg2OTA0Njk0OA%3D%3D%26mid%3D2247486324%26idx%3D1%26sn%3De8b690ddaedabc486bd399310105aad3%26chksm%3Dcea244bff9d5cda9a627fa65235be09e7b089e92cf49c0eb0ceb35b39bbed86c1fab0125f5af%26token%3D1351080357%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;完结撒花！JavaGuide面试突击版来啦！&lt;/a&gt;。&lt;/p&gt;&lt;p data-pid=&quot;6FUVSQ4k&quot;&gt;&lt;br/&gt;&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.yuque.com/docs/share/f37fc804-bfe6-4b0d-b373-9c462188fec7&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;《Java 面试进阶指北》&lt;/a&gt;&lt;/b&gt;是一份教你如何更高效地准备面试的小册，涵盖常见八股文（系统设计、常见框架、分布式、高并发 ......）、优质面经等内容。&lt;br/&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-eb29b2d8245630aa4c87313f77bd4b1f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;988&quot; data-rawheight=&quot;1302&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-eb29b2d8245630aa4c87313f77bd4b1f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;988&quot; data-rawheight=&quot;1302&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-eb29b2d8245630aa4c87313f77bd4b1f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-eb29b2d8245630aa4c87313f77bd4b1f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;5b0zKAUP&quot;&gt;原创不易，欢迎点赞分享，欢迎关注 &lt;a href=&quot;https://www.zhihu.com/people/ee0f19babdc46c21672264080ad7a641&quot; class=&quot;internal&quot;&gt;@JavaGuide&lt;/a&gt;,我会持续分享原创干货~&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9c20ff679b2e64141a9eb0ef6dc83aeb</guid>
<title>python 本地音乐播放器制作过程（附完整源码）</title>
<link>https://toutiao.io/k/86zvrkc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;
            &lt;section&gt;&lt;p&gt;&lt;span&gt;制作这个播放器的目的是为了将下载下来的mp3文件进行随机或是顺序的播放。选择需要播放的音乐的路径，选择播放方式，经过测试可以完美的播放本地音乐。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;完整源代码请前往文末获取下载方式......&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在开始之前介绍一个免费下载mp3音乐的网站，有需要的可以下载自己喜欢的音乐。当然有各大音乐平台会员的大佬就不需要了。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;http://music.y444.cn/&lt;span&gt;#/&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;缺少音乐素材的可以去免费下载即可，准备好音乐素材后将其放到一个文件夹下面即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在应用实现过程中，总共使用了下面这些库，特别需要注意的是这个库playsound使用的版本是1.3.0，听说其他版本在播放音乐时可能存在问题。也可以将播放音乐的部分换成其他的实现方式。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;from&lt;/span&gt; PyQt5.QtWidgets &lt;span&gt;import&lt;/span&gt; *&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; PyQt5.QtCore &lt;span&gt;import&lt;/span&gt; *&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; PyQt5.QtGui &lt;span&gt;import&lt;/span&gt; *&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; sys&lt;br/&gt;&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; QCandyUi &lt;span&gt;import&lt;/span&gt; CandyWindow&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; random, os&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; playsound &lt;span&gt;import&lt;/span&gt; playsound&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;最先实现的是播放音乐的业务逻辑，这里是采用pyqt5自带的QThread线程来实现的，目的是将播放音乐的部分作为一个子线程来运行，防止与UI界面的主线程产生阻塞。&lt;/span&gt;&lt;mpcpc js_editor_cpcad=&quot;&quot; class=&quot;js_cpc_area cpc_iframe&quot; src=&quot;/cgi-bin/readtemplate?t=tmpl/cpc_tmpl#1655383578286&quot; data-category_id_list=&quot;1|16|17|2|21|24|28|29|31|35|36|37|39|41|42|43|46|47|48|5|50|51|55|56|57|58|59|6|60|61|62|63|64|65|66|7|8&quot; data-id=&quot;1655383578286&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实现子线程的部分是一样的范式，一般情况下按照这种范式实现，屡试不爽。在前面的UI桌面应用中几乎都是使用这种方式来实现多线程的。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;PlayThread&lt;/span&gt;&lt;span&gt;(QThread)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    finished = pyqtSignal(bool)&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self, parent=None)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        super(PlayThread, self).__init__(parent)&lt;br/&gt;        self.parent = parent&lt;br/&gt;        self.working = &lt;span&gt;True&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__del__&lt;/span&gt;&lt;span&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        self.working = &lt;span&gt;False&lt;/span&gt;&lt;br/&gt;        self.wait()&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;run&lt;/span&gt;&lt;span&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        music_files = os.listdir(self.parent.music_file_path.text())&lt;br/&gt;        print(music_files)&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; index &lt;span&gt;in&lt;/span&gt; range(&lt;span&gt;0&lt;/span&gt;, len(music_files) - &lt;span&gt;1&lt;/span&gt;):&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; self.parent.play_type_selected.currentText() == &lt;span&gt;&#x27;随机播放&#x27;&lt;/span&gt;:&lt;br/&gt;                index = random.randint(&lt;span&gt;0&lt;/span&gt;, len(music_files) - &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;            print(index)&lt;br/&gt;            playsound(os.path.join(self.parent.music_file_path.text(), music_files[index]))&lt;br/&gt;        self.finished.emit(&lt;span&gt;True&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;音乐播放的业务逻辑实现完成了，接下来来实现UI界面的部分。应用就是简单的设计了一下不是很复杂。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.26&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wzyc1ToJM6j8CJkKpZDWSiaLaymTMnXacEq4sTkh5etHYkvagkO1ShQGbiaUQrYSEVku5Fg7759Vk6KYz1aETqIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;500&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;pyqt5的UI界面的实现方式主要是组件的布局和槽函数的引用，下面是UI界面布局及各个槽函数的初始化及引用。以及如何界面的主线程中调用子线程的使用。&lt;/span&gt;&lt;mpcpc js_editor_cpcad=&quot;&quot; class=&quot;js_cpc_area cpc_iframe&quot; src=&quot;/cgi-bin/readtemplate?t=tmpl/cpc_tmpl#1655383593041&quot; data-category_id_list=&quot;1|16|17|2|21|24|28|29|31|35|36|37|39|41|42|43|46|47|48|5|50|51|55|56|57|58|59|6|60|61|62|63|64|65|66|7|8&quot; data-id=&quot;1655383593041&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MusicUI&lt;/span&gt;&lt;span&gt;(QWidget)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        super(MusicUI, self).__init__()&lt;br/&gt;        self.init_ui()&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;init_ui&lt;/span&gt;&lt;span&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        self.setWindowTitle(&lt;span&gt;&#x27;本地音乐播放器  公众号：[Python 集中营]&#x27;&lt;/span&gt;)&lt;br/&gt;        self.setWindowIcon(QIcon(&lt;span&gt;&#x27;音乐.ico&#x27;&lt;/span&gt;))&lt;br/&gt;&lt;br/&gt;        self.setFixedWidth(&lt;span&gt;500&lt;/span&gt;)&lt;br/&gt;        self.setFixedHeight(&lt;span&gt;100&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;        hbox1 = QHBoxLayout()&lt;br/&gt;        self.music_file_path = QLineEdit()&lt;br/&gt;        self.music_file_path.setReadOnly(&lt;span&gt;True&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;        self.music_file_btn = QPushButton()&lt;br/&gt;        self.music_file_btn.setText(&lt;span&gt;&#x27;路径&#x27;&lt;/span&gt;)&lt;br/&gt;        self.music_file_btn.clicked.connect(self.music_file_btn_click)&lt;br/&gt;&lt;br/&gt;        hbox1.addWidget(self.music_file_path)&lt;br/&gt;        hbox1.addWidget(self.music_file_btn)&lt;br/&gt;&lt;br/&gt;        hbox2 = QHBoxLayout()&lt;br/&gt;&lt;br/&gt;        self.play_type_selected = QComboBox()&lt;br/&gt;        self.play_type_selected.addItem(&lt;span&gt;&#x27;随机播放&#x27;&lt;/span&gt;)&lt;br/&gt;        self.play_type_selected.addItem(&lt;span&gt;&#x27;顺序播放&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;        self.start_btn = QPushButton()&lt;br/&gt;        self.start_btn.setText(&lt;span&gt;&#x27;开始播放&#x27;&lt;/span&gt;)&lt;br/&gt;        self.start_btn.clicked.connect(self.start_btn_click)&lt;br/&gt;&lt;br/&gt;        hbox2.addWidget(self.play_type_selected)&lt;br/&gt;        hbox2.addWidget(self.start_btn)&lt;br/&gt;&lt;br/&gt;        vbox = QVBoxLayout()&lt;br/&gt;        vbox.addLayout(hbox1)&lt;br/&gt;        vbox.addLayout(hbox2)&lt;br/&gt;&lt;br/&gt;        self.thread_ = PlayThread(self)&lt;br/&gt;        self.thread_.finished.connect(self.finished)&lt;br/&gt;&lt;br/&gt;        self.setLayout(vbox)&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;music_file_btn_click&lt;/span&gt;&lt;span&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        dir = QFileDialog.getExistingDirectory(self, &lt;span&gt;&quot;选择文件夹&quot;&lt;/span&gt;, os.getcwd())&lt;br/&gt;        self.music_file_path.setText(dir)&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;start_btn_click&lt;/span&gt;&lt;span&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        self.start_btn.setEnabled(&lt;span&gt;False&lt;/span&gt;)&lt;br/&gt;        self.thread_.start()&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;finished&lt;/span&gt;&lt;span&gt;(self,finished)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; finished &lt;span&gt;is&lt;/span&gt; &lt;span&gt;True&lt;/span&gt;:&lt;br/&gt;            self.start_btn.setEnabled(&lt;span&gt;True&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 最后，使用mian函数将界面布局的整个过程加入到主体循环中就大功告成了。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; __name__ == &lt;span&gt;&#x27;__main__&#x27;&lt;/span&gt;:&lt;br/&gt;&lt;br/&gt;    app = QApplication(sys.argv)&lt;br/&gt;    w = CandyWindow.createWindow(MusicUI(), theme=&lt;span&gt;&#x27;blue&#x27;&lt;/span&gt;, title=&lt;span&gt;&#x27;本地音乐播放器  公众号：[Python 集中营]&#x27;&lt;/span&gt;,&lt;br/&gt;                                 ico_path=&lt;span&gt;&#x27;音乐.ico&#x27;&lt;/span&gt;)&lt;br/&gt;    w.show()&lt;br/&gt;    sys.exit(app.exec_())&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;完整源代码已经保存在百度网盘上面，将上述代码块全部copy到开发中运行即可，或者在公众号内回复&#x27;1002&#x27;获取下载链接直接下载.py文件到开发工具运行也是可以的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;创作不易，欢迎大家积极提问，有python相关的问题请留言，看到即回复，感谢大家一直的支持！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;「Python 集中营」&lt;/span&gt;&lt;/strong&gt;，只做知识分享 ！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA3ODk1Mzg0Mg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/wzyc1ToJM6hibKwqc6pgs9eu9tgh5AeibzhIhhMcAiaKaoczZdvmic9lLBP6oAyjibayia3ctN1WXEFyVia1OXoD9y3ibQ/0?wx_fmt=png&quot; data-nickname=&quot;Python 集中营&quot; data-alias=&quot;python_code1024&quot; data-signature=&quot;编程技巧、实战总结，在 Python 的路上越走越宽，+关注自动领取Python 学习视频资料！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section data-id=&quot;99661&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;往期推荐:&lt;/strong&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p hm_fix=&quot;369:426&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3ODk1Mzg0Mg==&amp;amp;mid=2649852283&amp;amp;idx=1&amp;amp;sn=13fdeed14c3189380999ade0b317eb42&amp;amp;chksm=87bfc566b0c84c701e2ddb312fd5d81349535e70f7891fa559d132394e1f24a39c57a115f478&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;自动化工具：PyAutoGUI的鼠标与键盘控制，解放双手的利器！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;自动化工具：PyAutoGUI的鼠标与键盘控制，解放双手的利器！&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3ODk1Mzg0Mg==&amp;amp;mid=2649852276&amp;amp;idx=1&amp;amp;sn=ff7ccf5c93d1832d5070373bd87927cd&amp;amp;chksm=87bfc569b0c84c7f9d5321f9432dc4a4473c0a4369ee2f4b7d5aa4104f9ae7807bf61bc014a8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;来自程序猿的生日蛋糕你见过吗？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;来自程序猿的生日蛋糕你见过吗？&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3ODk1Mzg0Mg==&amp;amp;mid=2649852268&amp;amp;idx=1&amp;amp;sn=8b2499ae592664d068fad88df879c607&amp;amp;chksm=87bfc571b0c84c671f5239da4d710e25b02f5848f060dd1cacc17f52d18560d7ebc427491990&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;懒人python操作，代码中永远只需要导入一个库...&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;懒人python操作，代码中永远只需要导入一个库...&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3ODk1Mzg0Mg==&amp;amp;mid=2649852260&amp;amp;idx=1&amp;amp;sn=c31fe2cc6bef8e76c41c457194ae8df0&amp;amp;chksm=87bfc579b0c84c6f0a7002405fad8890d8d9a602ee818349cfd65ff6a7960ca7dbf4dbd9989f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;自动化办公：手机号码提取器，使用正则表达式轻松提取文本文件中的手机号码...&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;自动化办公：手机号码提取器，使用正则表达式轻松提取文本文件中的手机号码...&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3ODk1Mzg0Mg==&amp;amp;mid=2649852252&amp;amp;idx=1&amp;amp;sn=33e7e74827dfc78a3c4ce89dace10cd2&amp;amp;chksm=87bfc541b0c84c57887caa919e23c6fa28718eaf300ececa39b4186574371838840b2a07951b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;刚刚发现的可视化动态图库ipyvizzu，太好看了！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;刚刚发现的可视化动态图库ipyvizzu，太好看了！&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-id=&quot;104587&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-role=&quot;animate&quot;&gt;&lt;svg viewbox=&quot;0 0 640 200&quot;&gt;&lt;text x=&quot;380&quot; y=&quot;130&quot; fill=&quot;#3e3e3e&quot; hm_fix=&quot;375:337&quot;&gt;点个“在看”每天收到最新消息！&lt;/text&gt;&lt;/svg&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                          
              &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                  &lt;p class=&quot;tips_global&quot; aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_title&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                    &lt;p role=&quot;option&quot; aria-labelledby=&quot;js_a11y_reward_qr_word js_a11y_comma js_a11y_reward_qr_title js_a11y_reward_qr_money&quot; aria-describedby=&quot;js_a11y_reward_qr_tips &quot; class=&quot;reward_tips&quot; id=&quot;js_a11y_reward_qr_word&quot;&gt;加个鸡腿🍗&lt;/p&gt;
                  &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img alt=&quot;赞赏二维码&quot; class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                  &lt;p aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_tips&quot; class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                &lt;/div&gt;
                                              
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ddde22d44c1ae42b98f0f84b4fea478f</guid>
<title>Java、Go 和 Python 的多线程性能对比</title>
<link>https://toutiao.io/k/qac29q3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天分享多线程下这三门语言的表现。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;简介&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在计算机中，线程是可以由处理器独立执行的小指令序列。多线程在一个进程中是可能的，其中它们共享资源，例如指令和上下文。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;发现在运行多线程进程时效率最高的编程语言非常重要，因为它可以帮助软件开发人员同时选择最有利的语言来实现他们的系统。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文的目的是分析和比较 Java、Go 和 Python 使用它们的并行工具解决几种算法的性能，例如：Java 和 Python 的线程，以及 Go 的 goroutine。为了评估性能，我们编写了经典矩阵乘法算法、快速排序算法和康威生存游戏（Conway’s game of life）的并行实现。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Java&lt;/strong&gt; ：它是一种面向对象的编程语言，通过Thread类、Runnable接口和java.util.concurrent包中包含的其他功能内置支持并发。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Go&lt;/strong&gt;：它是谷歌在 2012 年发布的一种编程语言。它是一种类似于 C 的语言，并且具有垃圾收集器和内置的并发支持。对于并发性和并行性，Go 使用称为 goroutines 的线程实现。它使用内置的调度程序在后台处理线程，并试图向用户隐藏通常线程管理的大部分复杂性，以支持简单地指定要运行的函数并使用 go 命令为它们开头。Go 在幕后使用操作系统 (OS) 线程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Python&lt;/strong&gt;：标准库 threading，这个模块封装了线程，提供了一个干净的接口来处理它们。在这种方法中，操作系统实际上知道每个线程，并且可以随时中断它以开始运行不同的线程。使用 Python 的其他标准库（称为 multiprocessing）可以在 Python 中实现并行性，而 multiprocessing 会创建新的进程。threading 模块使用线程，multiprocessing 模块使用进程。不同之处之一是线程在相同的内存空间中运行，而进程具有单独的内存。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;矩阵乘法&lt;/strong&gt;：它是线性代数中一个重要而简单的数学运算，经典的矩阵乘法算法（CMMA）可以很容易地用任何编程语言实现。CMMA 时间复杂度 *O(N^3)*，其中 &lt;em&gt;N&lt;/em&gt; 是矩阵的维度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;快速排序&lt;/strong&gt;：它是一种分而治之的算法。最初，它将数组拆分为两个子数组：分别是较低的项和较高的项。然后它递归地对这些子数组进行排序。其算法可以描述为：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;从数组中选择一个枢轴元素。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对数组进行分区，使得枢轴左侧的所有元素的值都小于枢轴的值，而枢轴右侧的所有元素的值都大于枢轴的值。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对生成的子数组递归执行上述步骤，直到得到完全排序的子数组。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它的平均排序复杂度为*O(nlog(n))&lt;em&gt;，但在极少数情况下会降级为&lt;/em&gt;O(n^2)*。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;康威的生存游戏&lt;/strong&gt;：它是由剑桥大学冈维尔和凯斯学院的数学家约翰霍顿康威在 60 年代开发的。规则是：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;规则 1 生存：如果一个活细胞有两个或三个活的邻居，它就可以生存。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;规则 2 死亡：如果一个活细胞的存活邻居少于两个或多于三个，它就会死亡。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;规则 3 出生：如果一个死细胞恰好有三个活着的邻居，它就会出生。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图片显示了康威生存游戏从时间 T 到时间 T + 2 的几个场景。该算法的一个简单实现将检查每一步的每个单元格，其时间复杂度为 &lt;em&gt;O(M × N )&lt;em&gt;，其中 &lt;em&gt;M&lt;/em&gt; 表示行数，&lt;/em&gt;N&lt;/em&gt; 表示网格的列数。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.3906581740976645&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jdTRWcqrowSYI4bktibmlK8vsvHwx5V3MKkXeZ9wuSYicfuOlSVAKuUib7ACsNnX9zmxU8ja0uo0ia4Er2dYRk8bLw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;471&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;It shows several scenarios of Conway’s game of life from time T to time T + 2&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;解决方案&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;所有基准测试都在同一台计算机和同一环境中执行。&lt;/span&gt;&lt;span&gt;表 I 显示了我们进行实验的硬件规格，表 II 显示了每种语言编程编译器的版本&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7672811059907834&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jdTRWcqrowSYI4bktibmlK8vsvHwx5V3MwWdIRQp01U1YRyc8rAW1juto9icLJgdwXR9c0aZNJmq61VPN1JAHYYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;434&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;硬件和编程语言软件概览&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于每个基准，我们计算其各自的加速和效率。加速定义为最佳顺序时间与&lt;em&gt;p&lt;/em&gt;个处理器的并行时间之比：&lt;em&gt;S = T1/Tp&lt;/em&gt;。那么效率定义为：并行系统中每个处理器的总体利用率：&lt;em&gt;E = S/p&lt;/em&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;矩阵乘法&lt;/strong&gt;：在本实验中，我们使用由&lt;em&gt;C = AB&lt;/em&gt;计算的简单矩阵乘法。矩阵的大小为 512 × 512。我们正在运行一个顺序场景，然后是几个线程池大小为：2、4、8、16 和 32 个线程的多线程场景。相同的矩阵&lt;em&gt;A&lt;/em&gt;和&lt;em&gt;B&lt;/em&gt;用于运行 Java、Go 和 Python 中的代码。这些矩阵将具有从 0 到 1000 的整数值（包括 0 到 1000）。线程池将接收 n 个工作，表示矩阵 &lt;em&gt;A&lt;/em&gt; 中的行数，然后每个线程将执行该特定行的乘法，并更新&lt;em&gt;C中的相应行&lt;/em&gt;与得到的结果。每次线程完成其工作时，它将从线程池接收新的分配，直到所有工作都完成。下图说明了矩阵&lt;em&gt;C&lt;/em&gt;的计算。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6701680672268907&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jdTRWcqrowSYI4bktibmlK8vsvHwx5V3MahMTKy0WkvXqEeFlCJHGdxjrDm7EDUknNqGp96HXV2ibdKCUz6259icQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;476&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;矩阵乘法&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;快速排序&lt;/strong&gt;：我们从 0 到 10^7（包括 0 和 10^7）对 10^7 个整数值的数组进行排序。我们使用 &lt;em&gt;ForkJoinPool&lt;/em&gt; 方法来解决这个实验。执行顺序运行，然后多线程测试以 2 的幂从 2 到 32 个线程。这 3 个实现对同一个数组进行排序。在快速排序的并行实现中，分区后新子序列的排序可以并行执行，因为没有冲突。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;康威生存游戏&lt;/strong&gt;：康威生存游戏中有几个初始已知模式会产生预期的结果，有一个会无限增长，下一张图像的左侧显示其初始设置。在这个基准测试中，我们定义了一个 28 × 28 的 2D 网格，其中 4 个先前的模式彼此相邻，并在 20,000 代期间执行游戏，该网格看起来像下图的右侧。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6219239373601789&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jdTRWcqrowSYI4bktibmlK8vsvHwx5V3MMup9FAanbDrmCUic1ztJpeDeicanOy905b20ibBenOXLPjHrmbSCZZT3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;447&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;无限增长模式&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于这个实验，我们重复线程池方法，它将处理 2、4、8、16 和 32 个线程。此外，我们运行顺序实现。我们并行应用了决定细胞在每一代中是否继续生存、死亡或重生的规则。此外，为了获取单元格的邻居，我们不会将网格视为无限网格，如果单元格的邻居在世界范围之外，则认为它已死。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;结果&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;矩阵乘法&lt;/strong&gt;：表 III 显示了运行矩阵乘法基准后获得的结果。Java 是顺序执行中最好的，它在 316 毫秒内运行了 512 × 512 矩阵乘法，而 Go 消耗了 453 毫秒，这代表顺序运行的时间增加了 43.35%。性能最差的是 Python，它使用了 93,870 毫秒（93.87 秒），相差约 29,600%。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，在表 III 中可以看出，当使用 2 个线程执行基准测试时，Java 性能更好，但是当实验在 4、8 和 16 个线程中运行时，Go 优于 Java 和 Python。我们可以在 32 个线程的阈值处检测到性能下降，这可能是由于创建过多线程的开销超过了 CPU 中的物理内核；即使在这种恶化的情况下，Go 的性能也优于其他两种语言。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4401154401154401&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jdTRWcqrowSYI4bktibmlK8vsvHwx5V3MYW82f9Hespl4iaib24lJxtgRGic35TT2C3ultN9EKld4wzH7I6tjSvC6A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;693&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;矩阵乘法时间消耗（以毫秒为单位）。越低越好。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图的左侧反映了对于 Go，从 2 到 4 个线程的性能差异是显着的（大约 92% 的改进），而从 8 到 16 个线程它是微不足道的，因为图中的曲线几乎保持不变，这说明我们认为 8 个线程对于这个特定场景来说是一个很好的数字。另一方面，Java 的性能从 2 个线程稳步增加到 16 个线程；从这个图中，我们可以选择 16 个线程作为大量线程，以便在 Java 中获得不错的性能。从下图右侧可以确定，资源利用效率最差的是Python，最好的是Go。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4695222405271829&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jdTRWcqrowSYI4bktibmlK8vsvHwx5V3MYvHBAE6cL1Tibp69NRQv2FEHetVt4jQ56IqCplGiarpYDzfEpa41UFuA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;607&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;矩阵乘法的加速和效率。&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;快速排序&lt;/strong&gt;：在表 IV 中，我们可以看到 Go 在测试的顺序运行中获得最佳性能，而 Python 最差。Python 实现的一般行为非常糟糕，在 16 和 32 线程的情况下，应用程序无法完成执行（DNF 代表没有完成）卡住并阻塞计算机。Go 提供了有趣的结果，因为多线程运行从糟糕到最差的性能。对于这个度量，Java 获得了最好的多线程结果，但是在 16 和 32 线程的运行中，我们可以发现性能下降，其中 16 线程的性能最差。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5531135531135531&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jdTRWcqrowSYI4bktibmlK8vsvHwx5V3MHVLpVbdSMs2E0ReajbbdPhNEbTJSHmov9NxLJ7XB1uBB2IbslyViccQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;546&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;快速排序时间消耗（以毫秒为单位）。越低越好。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图左侧的加速表明，当使用 Java 实现时，使用超过 8 个线程运行快速排序算法是没有意义的。此外，我们可以看到 32 线程的运行比 16 线程的运行好一点，但比 8 线程的运行差。该图反映了 Go 多线程实现不如顺序实现。即使 Python 的性能很差，使用 2、4 和 8 个线程的运行也比顺序运行要好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图右侧反映的效率证实了我们在表 IV 中看到的最好的，但不是最差的，因为这个图可以让我们认为 Python 比 Go 更好，但是时间的消耗告诉我们一段不同的历史：Go 的表现优于 Python。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.45768566493955093&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jdTRWcqrowSYI4bktibmlK8vsvHwx5V3MJBjVZfzpaTAia0G2IFcgEORlYVn4iavzoJkppbL342DSvKIic4saa0HmA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;579&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;快速排序的加速和效率。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;康威的生存游戏&lt;/strong&gt;：Python 再次获得了所有 3 种实现中最差的结果，但是正如我们在表 V 中看到的，它是唯一一个从顺序实现到多线程实现有一些改进的版本；尽管如此，随着线程数量的增加，时间的消耗也会增加。在 Java 和 Go 的情况下，它们的最佳性能来自顺序实现。在 Java 场景中，从顺序版本到具有 32 个线程的版本的时间差异为 11,455%，这代表了当时的巨大差距。在 Java 实现中，每一代之后都会释放线程池并创建一个新的线程池，这会产生相当大的开销。Go 行为不稳定，时间利用率从顺序到 2 线程版本增加，然后在 4、8 和 16 个线程的版本中，它会稍微减少一点，最后在 32 个线程时，它会再次增加。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5311418685121108&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jdTRWcqrowSYI4bktibmlK8vsvHwx5V3M0aJJuWzuHcWlfk9qTDecYt0WjxnAwiargSHsasibt5dg2NeCj7ULkRJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;康威的生存时间消耗游戏（以毫秒为单位）。越低越好。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图的加速图证实了康威生存游戏的多线程实现的一般性能很差。围绕加速曲线的期望是它应该遵循增加的行为，而这并没有发生。报告的效率表明资源没有得到适当的利用。Java 的效率非常接近于零，Go 和 Java 之间只有一点点差异。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4745762711864407&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jdTRWcqrowSYI4bktibmlK8vsvHwx5V3Ml3mRBaSpmn8o4CPNDe05diaqpfjO6J0yMjqEv7HsVYQTJz84h59KXxA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;590&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;康威生存游戏的加速和效率。&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;结论&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建线程的开销直接影响应用程序的性能。在表 III 中可以看出，在达到某个阈值后继续创建线程是没有意义的，因为性能会下降。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如表 V 所示，使用多线程解决问题并不能保证我们会获得更好的性能，有时顺序实现是最好的选择。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;处理并发性和并行性的 Python 标准库不如 Java 和 Go 等其他编程语言中实现的标准库。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很难说 Java 和 Go 之间哪个更好，因为 Java 在矩阵乘法基准测试中优于 Go，但 Go 在快速排序实验中超过了 Java。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;未来的工作&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这项工作仅限于每个算法的基本实现，下一步将是复制本研究引入的场景，但使用每个基准测试的最知名实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Python 中实现并行代码有多种选择，例如：MPI for Python、CharmPy、Numba 等。一个好的实验是使用这个库用更有效的实现来替换书面代码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;扩展这项研究的一种方法是考虑其他技术方面，例如编译时间、文件大小和编写的代码行数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作者：Jose Pablo，原文链接：https://levelup.gitconnected.com/java-go-and-python-a-multi-thread-performance-comparison-28e942cb73e6。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6f8b266909ff8725844709671fa2cceb</guid>
<title>李向林：OPPO自研大规模知识图谱及其在小布助手中的应用</title>
<link>https://toutiao.io/k/ahnl8qr</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-bottom: -10px; margin-left: -8px; max-width: 100%; width: 18px; height: 18px; border-top: 8px solid rgb(54, 65, 173); border-left: 8px solid rgb(54, 65, 173); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-bgopacity=&quot;50%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot; data-style=&quot;max-width: 100%; width: 543.333px; background: rgb(247, 247, 247); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot;&gt;&lt;p&gt;&lt;span&gt;分享嘉宾：李向林 OPPO&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编辑整理：吴祺尧 加州大学圣地亚哥分校&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;出品平台：DataFunTalk&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; width: 18px; height: 18px; border-bottom: 8px solid rgb(54, 65, 173); border-right: 8px solid rgb(54, 65, 173); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;导读：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;OPPO知识图谱是OPPO数智工程系统小布助手团队主导、多团队协作建设的自研大规模通用知识图谱，目前已达到数亿实体和数十亿三元组的规模，主要落地在小布助手知识问答、电商搜索等场景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文主要分享OPPO知识图谱建设过程中算法相关的技术挑战和对应的解决方案，主要包括实体分类、实体对齐、信息抽取、实体链接和图谱问答query解析等相关算法内容。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;全文&lt;/span&gt;&lt;span&gt;围绕下面四点展开：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;OPPO知识图谱&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;知识图谱在小布助手中的应用&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;总结与展望&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先和大家分享下小布助手和知识图谱的背景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 背景——小布助手 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVnVbRauwOhqWw7y74Fr8JVKwZVdvjNZ3vaphvH5WgN3zoVCKon3W6MQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;小布助手是OPPO旗下有趣贴心、无处不在的AI助手，搭载在OPPO手机、OnePlus、Realme以及如智能手表等IoT智能硬件上。它可以为用户提供系统应用、生活服务、影音娱乐、信息查询、智能聊天等服务，进而挖掘潜在的用户价值、营销价值和技术价值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2. 背景——oppo知识图谱&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVm5sBQNsibcV2JzFqyR7WJicfZRSWRUcXyasMnvmxJf0dB6GFA4tKU12A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在2020年年底，OPPO开始着手构建自己的知识图谱。经过一年左右的时间，OPPO已经构建了数亿实体和数十亿关系的高质量通用知识图谱。目前，OPPO知识图谱支持了每天线上数百万次的小布问答请求。进一步，OPPO正将通用知识图谱逐渐扩展到商品图谱、健康图谱、风控图谱等多个垂类。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;02 &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;OPPO知识图谱&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVAQL8AvPYky67F4pCqlSETTIP6hRct8sh9Bs3wMZWgE18bVkn6ANVRQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;接下来为大家介绍OPPO知识图谱的整体架构&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。如上图所示，它由三大部分组成。最底层是通用的数据处理平台和图数据库相关框架。我们具体选取NebulaGraph来存储图数据。中间层包含数据获取、图谱构建和图谱管理模块。最顶层涵盖了OPPO图谱各种应用场景，包括智能问答、搜索推荐、内容理解、安全风控、智慧健康等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面介绍应用知识图谱的三个核心算法：实体分类、实体对齐和信息抽取。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVEV9YvZlC6sRuh8icmomPEiaD5P28ibIFuqkfL7cyLFhJkhiaoqMibdMehFA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实体分类根据图谱预定义的schema对实体进行归类，进而可以使我们对实体进行属性、关系的关联。同时，实体分类可以对下游的实体对齐、实体链接和线上的智能问答业务等提供重要的特征。目前，我们采用规则+预训练语言模型文本分类的pipeline方案。在第一阶段，我们利用如百科中对实体的描述，使用预定义的规则处理大量半监督的伪标签数据。随后，这些数据会交给标注同事进行校验，整理出有标签的训练集，结合预训练语言模型训练一个多标签的文本分类模型。值得一提的是，我们为业界提供了一个大规模实体分类数据集，组织了2021CCKS通用百科知识图谱竞赛，吸引了数百只队伍参赛。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVn8SMemBCrEBJibYiaAibvrXAI8iaCviaf7uGmDia3DviaUUs3DkNFl4Zibc9Aw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实体对齐任务是知识图谱构建中比较关键的环节。在互联网的开源数据中，同一实体在多个来源下存在相似或者相同的信息，若将这部分冗余信息全部包含在知识图谱中，那么在下游使用知识图谱进行信息检索时会带来歧义。所以，我们对多源相同的实体进行信息整合，减少信息冗余。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVY8evzrchq1LHy1hp5r6lDfCnGefx5zfru8CficePa1sS0qiaic7TZ8x3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;具体地，由于知识图谱中的实体规模达到了上亿的量级，考虑到效率问题，我们提出了Dedupe+BERT语义分类的两阶段方案。在第一阶段，我们采用并行处理的方式将名字、别名相同的实体进行分组，输入Dedupe数据去重工具，生成第一阶段实体对齐结果。我们要求这一阶段的结果的准确率很高。在第二阶段，我们会训练一个实体相关性匹配模型，其输入是一对候选实体，旨在调整、补充第一阶段的对齐结果。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVLrSI8KURHoVKyyoqiaibbuy67zepTw0ibiaUE8xkgJES1bULPibgKATyLlA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在实体分类与对齐后，由于数据源存在信息缺失，图谱中存在一些实体缺失部分关键属性。我们将缺失属性的实体分成两类，使用信息抽取的方法对它们进行属性补全。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;第一类是常见的实体与属性&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，如国家的首都、人物的年龄和性别等。我们使用百度CASREL模型以及业界常用的开源数据集训练一个关系抽取模型。模型的结构可以看作一个多标签的指针网络，每个标签对应一个关系类型。CASREL首先抽取句子中的主实体，再将主实体的embedding输入指针网络，预测每一个关系下句子中的客体起始位置和终止位置，最后通过设定的阈值来判定SPO三元组是否可信。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;第二类是长尾属性&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，它们在开源数据集上标注较少。我们利用阅读理解（MRC）模型抽取长尾属性。如我们想要抽取“某奥特曼的人间体”这一属性，我们就将“某奥特曼的人间体是谁”这一问题作为query，检索文本结果，使用阅读理解模型判断文本中是否包含“人间体”的客体。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;总结来说，在构建知识图谱的过程中，我们应用了实体分类、实体对齐与信息抽取任务，希望通过它们来提升知识图谱的质量和丰富程度。后续建设过程中，我们希望在现有的框架下将实体分类基于迁移学习扩展到商品分类、游戏分类等垂域场景。此外，目前的实体对齐任务还较为基础，我们希望在未来结合多模态、节点表示学习等多策略对齐方案。最后，对于信息抽取任务，我们希望借助大规模预训练语言模型，基于少量标记样本，甚至零标记样本，来抽取实体关系。我们还考虑应用实体抽取算法，使得它可以落地于小布助手的业务场景中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;知识图谱在小布助手中的应用&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第三部分重点介绍知识图谱在小布助手业务场景中的应用。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibV1gHexXibQpsMViatwUgLtg2XRSbbDvaiacvMb9wNtial1bYFD6SaDtpglQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;小布助手按照对话领域可以划分为三大类：&lt;/span&gt;&lt;span&gt;闲聊、任务对话和知识问答。&lt;/span&gt;&lt;span&gt;其中，闲聊类使用检索式、生成式算法；&lt;/span&gt;&lt;span&gt;任务对话利用帧语义的算法对query进行结构化解析；&lt;/span&gt;&lt;span&gt;知识问答进一步细分为两部分，基于知识图谱的KBQA的结构化问答和基于阅读理解与向量检索的非结构化问答。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibV2wJB5I6O23iaf1YK24SMKS9rySlI2JQr54o7fHby5MrxBtyCnMN8Q0A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先介绍知识问答。对于结构化问题，我们采用KBQA来解决；对于非结构化问题，我们采用DeepQA+阅读理解的框架来处理。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibV8N8vYQoXh0fLN1roX0kBglg6n8iadNuxLPtrubM6Dnc7iaXQWpznV4eg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;对于结构化问题，在小布助手的应用中有四大类query：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基础链式查询，如单跳、两跳、甚至更多跳的问题&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;多变量约束查询&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实体关系查询&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;比较推理查询&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibV6ibNQbPcjv6x7gn8wtPQdLQr69ySLDkUjAkQbtOXE1OeKkeY7Omwm7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;我们针对结构化问题设计了一套基于KBQA的算法框架。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;首先，在接收到线上用户的query输入后，我们会先对其进行领域识别以及意图分类。若query是可以使用KBQA解决，那么我们会对query进行实体识别、query解析和答案生成。这三个主要步骤又可以通过在线和离线两方面进行进一步归类。比如，离线KBQA会进行别名挖掘、新词发现、属性归一、模板挖掘，最终更新知识图谱和图数据库。在线KBQA会进行实体抽取、实体链接、属性识别、约束挂载、模板匹配和长尾模板的语义匹配，最后在图数据中进行知识查询或者根据查询结果进行推理计算。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVibQibga7k3ibLyoUQ046Llo6MFLH5NvV1wHLx8lbhiaDpUs1XvokLlRdjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;小布助手的输入以语音为主，所以小布助手场景下实体往往存在别名以及语音识别错误的特点。在语音输入时，用户往往不会说出人物的完整名字，而是采用别名。其次，语音识别的错误率相对较高，导致输入相较于网页上的query输入差异较大。针对别名问题，最基础的解决方案是基于知识图谱的实体别名建设一个映射词表；其次，针对复合实体，我们会利用图谱中的上位词挖掘实体复合词。针对语音识别错误问题，我们会采用内部大量搜索点击日志，利用点击网页中title包含的标准名和对应的query做匹配。匹配时的输入特征有两类：偏旁部首的特征（倩雅集和晴雅集）以及拼音特征（分马奥特曼和风马奥特曼）。我们将候选标准名的特征和query的特征进行聚类，最终选取距离最近的标准名。值得一提的是，在生成实体映射词表前，我们还会进行额外的人工校验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVZqXRvoib7d3kYicLQSOSPavynOOBvpC6KMLneN2QjJicF1Qc5KKUXnWog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在对用户query进行实体识别之后，我们需要进行实体链接任务。&lt;/span&gt;&lt;span&gt;以“李白哪个技能最厉害？&lt;/span&gt;&lt;span&gt;”这个query为例。&lt;/span&gt;&lt;span&gt;“李白”这一实体会在知识图谱中对应着多个不同类型的实体，如游戏角色、唐代诗人、李荣浩歌曲、撒贝宁妻子等。&lt;/span&gt;&lt;span&gt;此时，我们需要结合query的语义来选取真正的实体。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVA3So8K6cicJPQrflBzJntueqpXXrYqgPmhdC1SkM6ibvhiarI7ktV6pBQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;实体链接会经历三个步骤。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;首先，我们采用BiLSTM+CRF进行实体识别；之后，我们会在知识图谱中召回候选实体；最后，我们基于实体消歧模型，对query和候选实体的匹配度进行打分，选择最匹配的实体。若所有候选实体的匹配度均低于预设的阈值，我们则会输出一个特殊的空类别。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVhCohBlSKrZqdZph3C53v5icXoQHDxLB1tib2KSYLTvHCYroOZVpNmZXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上图呈现的方案是我们团队在参加百度千言实体链接比赛中提出的。它采用了多任务训练框架（语义匹配+实体类型分类），引入了对抗学习策略，融入了统计类特征（如实体的热度、实体的丰富度等），并加入了多模型集成的方法。最终我们在千言实体链接比赛中斩获第二名。具体地，我们将query与实体的相似度匹配任务建模为一个二分类任务，将实体类型分类任务建模为一个多分类任务。经过对比实验，我们证明了多任务学习、对抗学习的思路对实体消歧模型的效果有一定提升。需要指出的是，在实体链接模型真正上线使用的时候，我们会选取一个相对较小规模的模型。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibV0YBrEs2UTqZr89eia45ibTwc9ZMujfyouhoXal7Z6e14oYXzlecibp75g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;对query进行实体链接后，我们需要对query基于模板进行属性抽取。业界主要有两种方案：基于语义解析（semantic parsing）类的方法和基于信息检索（information retrieval）类的方法。&lt;strong&gt;OPPO主要选取语义解析类的方案，并且在解析失败的长尾属性采用语义匹配的方法进行兜底。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVnLqfDNrB3SebwnHkMFu1SIVkPLI8G2qHalZAbMLvXf4HaUpzZUVhYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在语义解析类的方案中，首先我们需要挖掘用于语义解析的常见模板。我们采用远程监督模板挖掘的方式，利用互联网海量的问答数据，将这些语料与我们的知识图谱进行匹配，得到问答库中实体的属性，最后得到问答语料中常见的query模板。例如，“q:刘德华多少岁了 ans:59岁”这个问答，经过图谱属性检索，得到query实际上在询问某个人的年龄属性。类似的，我们可以得到询问某个人的身高属性、年龄属性、出生地属性的query，据此生成一系列query模板。基于挖掘的模板，我们可以训练一个语义匹配分类模型，其输入是原始query和一个候选query属性。此外，在训练过程中，我们会将实体mask掉，旨在使模型学习query在实体信息之外的语义与实体属性的相关性。在模型训练完毕后，我们使用小布线上query日志，先对它们进行实体抽取，然后将query以及图谱中query实体所对应的所有候选属性输入模型，进行语义匹配的预测任务，得到一部分较高置信度的候选模板。输出模板会交由标注人员进行校验，最终得到的模板会加入query解析的算法模块中。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVffQNvRXFqPJjCv6zA09Xh8k1FEPPR6pMn5ObC6p75ibndosRiaqZKZUA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;接下来以一个具体的例子来解释我们如何使用模板来解析在线的KBQA问题&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。比如用户输入query为“印度的首都有多大”，即用户的真实意图是询问新德里的面积。首先，我们会对query做实体识别，将“印度”映射至图谱中的“国家”，利用模板将“首都”映射至“国家的首都”或者“王朝的首都”，同理将“有多大”归一化至“人的年龄”、“地区的面积”、“公司的面积”、“行星的体积”等属性。此时还不能完全确定对应的属性，所以我们会将所有的候选属性进行排列组合，结合剪枝的方法，选择最有可能的模板，生成中间表示式。在上面的例子中，最佳模板是“国家首都的面积”。这个query实际上是个两跳的问题，我们会利用单条模板将其中一部分抽象为一个子查询，如“国家的首都”。具体地，我们会将子查询与剩余的查询模板拼接在一起，生成一个复合查询。在执行知识图谱的查询的时候，我们会首先执行子查询，并将其替换为查询得到的实体，最后按照生成的query继续在图谱中搜索最终的结果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVF8dLSSOicMNEKdgbsrhibPYWXCpicqPepv4mUJk2YEicKYI5UzXM0e1I1Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然我们离线挖掘了大量的归一化模板，但是这一方法依然对一些极端情况效果不佳。由于用户输入的不确定性，模板存在长尾query欠召回的问题。考虑到线上效率问题，我们很难完全将query与所有模板进行模型的语义匹配打分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;基于上述问题，我们提出了类似于双塔模型匹配的方案：将模板通过BERT模型生成对应的模板向量，建立模板向量索引。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;当无法得到合适的模板进行query解析时，输入query会经过BERT模型得到query向量，随后在模板向量索引中召回一部分相似模板向量，最后通过人工设定的阈值判断是否接受候选模板。在实际业务中，使用这一方法进行应答的占比较小。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVgaG0ONj2bCXlUbxJksiacIVwFNzyRdEtUPRSSGeMjeGZp8RuE3FibW8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;用户可能会提出多约束问题，例如“重庆的男演员有哪些？”。我们会利用问句分类模块判断出query属于多约束查询，随后将query中包含的所有约束识别出来。在使用多约束查询时，我们不会在图数据库中执行查询操作，而是选用ES进行多条件查询，这是因为图数据库检索耗时很大。最后，我们将ES查询输出进行热度排序，输出相对合理的结果。类似地，对于比较推理问题，我们首先利用问句分类模块识别出query属于比较推理查询，随后在图谱中进行多实体查询，根据比较推理中需要查询的属性判断两个实体对应的属性是否可比。若多实体属性是可比的，我们会执行推理计算，最终输出推理查询的结果。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVTB1KEfJiakAiblVzonHjOYlYK62cOXq9aGGqPHdicyUq8lYsB4obstwvw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;接下来简单介绍一下&lt;strong&gt;OPPO对于非结构化问答的解决方案。&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;离线情况下，我们选取了业界流行的海量网页数据+MRC模型进行答案抽取的框架&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。首先，利用搜索query中包含的大量URL和点击日志，获取query对应的网页文本数据；随后，将query与网页文本数据输入MRC模型，得到query在文本中对应的答案；之后，答案会经过一个离线训练好的“答非所问”判别模型，筛选出那些与query真正相关的答案；最终离线构建问题-答案的数据库。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;此外，基于构建的QA库，我们会使用双塔模型构建QA数据库的向量索引。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;在线查询时，query首先会经过意图识别和文体类型识别的模块。在OPPO业务设定中，使用KBQA的优先级大于使用非结构化问答框架的优先级。如果KBQA无法针对输入query返回结果，那么query会被输入至非结构化问题的向量检索框架中。Query会被双塔模型进行语义向量编码，随后在索引库中进行向量召回得到topK候选QA。由于向量召回的方案会丢失query与答案的交互信息，所以在得到候选QA后，query向量与候选向量会经过一个精排模型增强语义交互，得到最终的精排排序打分。根据预设的阈值，我们可以选择接受或拒绝候选QA结果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVNiaeTBdsMwVYeY2wL0Q51joKfRXF99iaSLovhMPvPGNEfDW4POUM3eJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们针对MRC模型进行了一些优化。首先，我们选择rikinet作为MRC模型。它的特点是对网页中长文本的数据处理效果最优，其潜在的原因是rikinet会对输入文本进行段落划分，在语言模型attention机制中不同段落之间没有信息交互，避免不同段落之间的噪声信息影响答案信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;04&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;总结与展望 &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后，对今天分享的内容做一个总结和展望。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然OPPO着手构建知识图谱的时间相对较晚，但是在构建过程中积累了大量经验。首先，图谱构建算法是建设高质量知识图谱的关键环节，我们会优先保证算法的准确率，对召回率的要求相对较低。其次，针对知识问答算法，在离线时我们会训练用于模板挖掘、阅读理解的大模型，保证离线挖掘的数据质量；在线服务时，我们会选取在线模板+小模型的方案保证服务效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在未来，我们可能会尝试以下几类优化方案：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;常识推理图谱+常识问答&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;多模态图谱+多模态问答&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;用户图谱+个性化推荐&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;知识图谱+大规模预训练语言模型&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;低资源条件的信息抽取&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;05&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Q&amp;amp;A&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Q：通用百科图谱的实体量级是多少？有什么办法可以降低实体对齐的时间复杂度？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A：OPPO内部的知识图谱的实体量级为约两亿，关系数为十几亿的量级。由于图谱的规模较大，在尝试降低实体对齐的时间复杂度时，我们首先会对候选实体做类别划分，例如实体类型是人物则在人物类别的条件下做实体对齐，这相当于借鉴了分而治之的思想降低一部分计算复杂度。随后，我们采用两阶段的实体对齐算法。第一阶段不会涉及深度学习模型，而是将实体进行粗粒度的分组（如别名相同的实体），选用Dedupe和Spark框架执行并行化实体对齐。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Q：&lt;/span&gt;知识问答中如何判断query的对话领域？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;A：&lt;/span&gt;小布助手在内部有一套复杂的领域分类和意图识别系统。例如，在闲聊领域，我们会标注大量的闲聊语料。随后，我们会训练BERT模型对语料进行分类。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Q：&lt;/span&gt;如何辨别语音识别错误与新词的情形？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;A：&lt;/span&gt;在纠正语音识别错误时，我们使用搜索点击日志对应的网页title，与query一起输入模型进行实体识别。这是因为我们认为网页title在大多数情况下都会包含正确的实体名。随后，我们考虑了偏旁部首的特征和拼音特征，当query特征和候选实体特征的相似度达到了预设的阈值后，那么我们基本上可以认为这是一个语音识别错误而不是一个新词。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Q：&lt;/span&gt;实体消歧模型中会不会加入一些手工特征？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A：我们会加入一些手工特征，例如实体的热度特征、实体在训练数据中真正被标注为正例的比例、实体属性的个数等统计类特征。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Q：rikinet对网页长文本数据效果更加的原因是什么？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A：Rikinet设计了一种特殊的attention机制。首先，它将长文本按照段落进行切分。一般情况下，短答案只会出现在一个段落中。Rikinet的attention机制使得段落之间不存在注意力交互，这样就可以让不存在答案的段落包含的无关信息无法影响包含答案的段落语义信息。只不过这只是实验中的得到的结论，没有理论支撑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Q：&lt;/span&gt;query在线模板匹配中，查询路径解析的剪枝是如何实现的？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A：例如“印度的首都有多大”这一例子，我们会使用到实体分类辅助剪枝任务。首先，“印度”是一个国家，虽然“首都”可以映射到“国家的首都”或者“王朝的首都”，但由于前面的实体被识别为“国家”，那么“王朝的首都”的排序就相对靠后。总的来说，我们会根据识别出的实体类型和属性之间的关系进行剪枝。如果属性类型不存在冲突，无法直接进行剪枝操作，那么我们会对候选模板进行热度排序，即若一个模板在训练集出现的频次更高，那么我们优先考虑这一模板。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Q：&lt;/span&gt;请问OPPO如何应对方言的语音输入？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A：OPPO目前主要支持粤语方言输入。这一部分的工作是前端ASR负责的，所以方言会在ASR模块后就转换为普通话文本输入了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;今天的分享就到这里，谢谢大家。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;在文末分享、点赞、在看，给个3连击呗~&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分享嘉宾：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;289&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;289&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVUSiavmI5SicibPc1JzFssu3fGib1pLRysicz5xibCZ3LNycEYCCiaLBnj8hLw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;免费资料下载：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section data-id=&quot;58684&quot; data-type=&quot;lspecial02&quot; data-tools=&quot;速排小蚂蚁编辑器&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;d5e6a&quot;&gt;&lt;section label=&quot;Powered by xmyeditor.com&quot; data-tools=&quot;速排小蚂蚁编辑器&quot; data-md5=&quot;d5e6a&quot;&gt;&lt;section data-md5=&quot;d5e6a&quot;&gt;&lt;section data-md5=&quot;d5e6a&quot;&gt;&lt;section data-md5=&quot;d5e6a&quot;&gt;&lt;section data-type=&quot;lspecial07&quot; data-id=&quot;58684&quot; data-md5=&quot;d5e6a&quot;&gt;&lt;section data-md5=&quot;d5e6a&quot;&gt;&lt;section data-md5=&quot;d5e6a&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;374&quot; data-backw=&quot;556&quot; data-ratio=&quot;0.47148148148148145&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVPv3KXebTy6FvBKf4Ea0jZzVSfcQZtaYs39EoTmothAsuZbs2wic0hjw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1041&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-md5=&quot;d5e6a&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《大数据典藏版合集》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-type=&quot;lspecial07&quot; data-id=&quot;58684&quot; data-md5=&quot;d5e6a&quot;&gt;&lt;section data-md5=&quot;d5e6a&quot;&gt;&lt;section data-md5=&quot;d5e6a&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;363&quot; data-backw=&quot;556&quot; data-ratio=&quot;0.47148148148148145&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVCejbnOCgDTTxmcYT9jEp8NE5Aq8cibSlMqUmMibB8mEMteDtvTkzE3iag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1053&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-md5=&quot;d5e6a&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《互联网核心应用算法宝藏书》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;(向右滑动查看全部目录)&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-id=&quot;112901&quot; data-type=&quot;lspecial02,lspecial04&quot; powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;f2128&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;f2128&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;f2128&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;f2128&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;f2128&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;f2128&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;f2128&quot;&gt;&lt;p&gt;&lt;span&gt; 如何下载资料合集？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;识别二维码，添加小助手微信，&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;回复：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;『大数据典藏版合集』或&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;『互联网核心应用算法宝藏书』&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;即可下载对应资料&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.47148148148148145&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgwfHrX9lJXr4W7n4x9pFibVvBEibEE4tfguWmXhSIgs66icro0YLDl8nfp2e5sXuUVFyTZLF2VE3WxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;396&quot; title=&quot;image.jpeg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;活动推荐：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;941&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;135&quot; data-ratio=&quot;1.6287037037037038&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjNQ7nHsncU5uyic4bZibMXyzLZMF8OtroG28PjumUFqyOe9cKcqIXmPl0EDa2ECOZXUI1Cib32jZN8A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; title=&quot;小海报.png&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;关于我们：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;DataFun：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;专注于大数据、人工智能技术应用的分享与交流。发起于2017年，在北京、上海、深圳、杭州等城市举办超过100+线下和100+线上沙龙、论坛及峰会，已邀请超过2000位专家和学者参与分享。其公众号 DataFunTalk 累计生产原创文章700+，百万+阅读，14万+精准粉丝。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU1NTMyOTI4Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPh87SyjsEtoRFs9iaLyPXYh9ls0BcsiaPDnFkg72xgLsvku13ZRYibyq93DgRoCaTaTkbJj7Hia4dvI1w/0?wx_fmt=png&quot; data-nickname=&quot;DataFunTalk&quot; data-alias=&quot;datafuntalk&quot; data-signature=&quot;专注于大数据、人工智能技术应用的分享与交流。致力于成就百万数据科学家。定期组织技术分享直播，并整理大数据、推荐/搜索算法、广告算法、NLP 自然语言处理算法、智能风控、自动驾驶、机器学习/深度学习等技术应用文章。&quot; data-from=&quot;0&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;🧐 &lt;strong&gt;分享、点赞、在看&lt;/strong&gt;，给个&lt;strong&gt;3连击&lt;/strong&gt;呗！&lt;strong&gt;👇&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>