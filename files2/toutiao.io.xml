<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>fc73632006df55c9c1ff30b668f95659</guid>
<title>[译] 生存指南之 CORS + API Gateway</title>
<link>https://toutiao.io/k/bdr9xsb</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;Markdown__Wrapper-sbgo4h-0 kKEhyL markdown-body&quot;&gt;&lt;p&gt;构建 Web API 是 Serverless 应用中最流行的用例之一，您能在不增加其他操作开销的情况下，获得简单、可扩展的后端优势。&lt;/p&gt;
&lt;p&gt;然而，如果您的网页正在调用后端 API，那么必须处理 &lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS&quot;&gt;跨域资源共享 (CORS)&lt;/a&gt; 的问题 ，如果您的网页向与您当前所在域的不同域发出 HTTP 请求，则它必须是 CORS 友好的。&lt;/p&gt;
&lt;p&gt;如果您发现以下错误：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;No &#x27;Access-Control-Allow-Origin&#x27; header is present on the requested resource&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么本文可能对您有所帮助。&lt;/p&gt;
&lt;p&gt;接下来，我们将介绍 Serverless + CORS 的相关信息，目录如下：&lt;/p&gt;

&lt;h2 id=&quot;tldr&quot;&gt;&lt;a href=&quot;#tldr&quot; aria-label=&quot;tldr permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;快速开始 🔜 如果您想快速解决 Serverless 应用中的 CORS，可以执行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;要处理 &lt;a href=&quot;#cors-preflight-requests&quot;&gt;preflight requests&lt;/a&gt;，在每个 HTTP 端点中添加 &lt;code class=&quot;language-text&quot;&gt;enableCORS: true&lt;/code&gt; 和  &lt;code class=&quot;language-text&quot;&gt;integratedResponse: true&lt;/code&gt; 标记：&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yml&quot;&gt;&lt;pre class=&quot;language-yml&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# serverless.yml&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; products&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;service

&lt;span class=&quot;token key atrule&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; tencent
  &lt;span class=&quot;token key atrule&quot;&gt;region&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ap&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;guangzhou
  &lt;span class=&quot;token key atrule&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Nodejs8.9 &lt;span class=&quot;token comment&quot;&gt;# Nodejs8.9 or Nodejs6.10&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; serverless&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;tencent&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;scf

&lt;span class=&quot;token key atrule&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;getProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; handler.getProduct
    &lt;span class=&quot;token key atrule&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;apigw&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; api
          &lt;span class=&quot;token key atrule&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /product
            &lt;span class=&quot;token key atrule&quot;&gt;stageName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; release
            &lt;span class=&quot;token comment&quot;&gt;# 修改成你的 API 服务 ID&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;serviceId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; service&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;xxx
            &lt;span class=&quot;token key atrule&quot;&gt;httpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; GET
            &lt;span class=&quot;token comment&quot;&gt;# 开启集成相应，这里必须开启，才能自定义响应 headers&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;integratedResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;# 开启 CORS&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;enableCORS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;createProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; handler.createProduct
    &lt;span class=&quot;token key atrule&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;apigw&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; api
          &lt;span class=&quot;token key atrule&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /product
            &lt;span class=&quot;token key atrule&quot;&gt;stageName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; release
            &lt;span class=&quot;token comment&quot;&gt;# 修改成你的 API 服务 ID&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;serviceId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; service&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;xxx
            &lt;span class=&quot;token key atrule&quot;&gt;httpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; POST
            &lt;span class=&quot;token comment&quot;&gt;# 开启集成相应，这里必须开启，才能自定义响应 headers&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;integratedResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;# 开启 CORS&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;enableCORS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;要处理 &lt;a href=&quot;#cors-response-headers&quot;&gt;CORS headers&lt;/a&gt;，请在响应中返回 CORS headers。主要标头是 &lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Origin&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Credentials&lt;/code&gt;。示例如下：&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&#x27;use strict&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// mock function&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;retrieveProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;good1&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    price&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// mock function&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; queryString &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;queryString&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;good1&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    price&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;getProduct&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; product &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;retrieveProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    statusCode&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    headers&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Origin&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;*&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Credentials&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    body&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      product&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; product&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createProduct&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Do work to create Product&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; product &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    statusCode&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    headers&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Origin&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;*&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Credentials&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    body&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      product&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; product&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;cors-preflight-requests&quot;&gt;&lt;a href=&quot;#cors-preflight-requests&quot; aria-label=&quot;cors preflight requests permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;CORS preflight requests&lt;/h2&gt;
&lt;p&gt;如果您不是在进行「simple request」，那么浏览器会用  &lt;code class=&quot;language-text&quot;&gt;OPTIONS&lt;/code&gt; 方法，发送 &lt;strong&gt;preflight
request&lt;/strong&gt; 到资源里，您请求的资源将使用 安全发送到资源 的方法返回，并且可以选择返回有效发送的标头。&lt;/p&gt;
&lt;p&gt;我们拆开来看看：&lt;/p&gt;
&lt;h3 id=&quot;浏览器什么时候发送-preflight-requests&quot;&gt;&lt;a href=&quot;#%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E5%8F%91%E9%80%81-preflight-requests&quot; aria-label=&quot;浏览器什么时候发送 preflight requests permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;浏览器什么时候发送 preflight requests?&lt;/h3&gt;
&lt;p&gt;您的浏览器会对几乎所有的跨域请求发送一个 preflight requests。（例外是「simple requests」，但这只是请求的一小部分）。大体上看，一个简单请求只是一个 &lt;code class=&quot;language-text&quot;&gt;GET&lt;/code&gt; request 或者 &lt;code class=&quot;language-text&quot;&gt;POST&lt;/code&gt; request，如果您不在此范围内，则需要进行预检。&lt;/p&gt;
&lt;h3 id=&quot;对-preflight-requests-的响应是什么？&quot;&gt;&lt;a href=&quot;#%E5%AF%B9-preflight-requests-%E7%9A%84%E5%93%8D%E5%BA%94%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F&quot; aria-label=&quot;对 preflight requests 的响应是什么？ permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;对 preflight requests 的响应是什么？&lt;/h3&gt;
&lt;p&gt;对一个 preflight requests 的 响应包括其允许访问的资源，它允许在该资源的方法，如 &lt;code class=&quot;language-text&quot;&gt;GET&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;POST&lt;/code&gt;,
&lt;code class=&quot;language-text&quot;&gt;PUT&lt;/code&gt; 等。还可以包括被允许在该资源标头，如 &lt;code class=&quot;language-text&quot;&gt;Authentication&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;如何处理-serverless-中的-preflight-requests&quot;&gt;&lt;a href=&quot;#%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86-serverless-%E4%B8%AD%E7%9A%84-preflight-requests&quot; aria-label=&quot;如何处理 serverless 中的 preflight requests permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;如何处理 Serverless 中的 preflight requests?&lt;/h3&gt;
&lt;p&gt;要设置 preflight requests，您只需要在 API Gateway 的端点上配置一个 &lt;code class=&quot;language-text&quot;&gt;OPTIONS&lt;/code&gt; 。幸运的是，你可以非常简单地使用 Serverless Framework 来完成。&lt;/p&gt;
&lt;p&gt;只需要在 &lt;code class=&quot;language-text&quot;&gt;serverless.yml&lt;/code&gt; 添加设置 &lt;code class=&quot;language-text&quot;&gt;enableCORS: true&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yml&quot;&gt;&lt;pre class=&quot;language-yml&quot;&gt;&lt;code class=&quot;language-yml&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# serverless.yml&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; products&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;service

&lt;span class=&quot;token key atrule&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; tencent
  &lt;span class=&quot;token key atrule&quot;&gt;region&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ap&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;guangzhou
  &lt;span class=&quot;token key atrule&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Nodejs8.9 &lt;span class=&quot;token comment&quot;&gt;# Nodejs8.9 or Nodejs6.10&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; serverless&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;tencent&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;scf

&lt;span class=&quot;token key atrule&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;getProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; handler.getProduct
    &lt;span class=&quot;token key atrule&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;apigw&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; api
          &lt;span class=&quot;token key atrule&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /product
            &lt;span class=&quot;token key atrule&quot;&gt;stageName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; release
            &lt;span class=&quot;token key atrule&quot;&gt;serviceId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; service&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;lanyfiga
            &lt;span class=&quot;token key atrule&quot;&gt;httpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; GET
            &lt;span class=&quot;token comment&quot;&gt;# 开启集成相应，这里必须开启，才能自定义响应 headers&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;integratedResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;# 开启 CORS&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;enableCORS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;createProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; handler.createProduct
    &lt;span class=&quot;token key atrule&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;apigw&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; api
          &lt;span class=&quot;token key atrule&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /product
            &lt;span class=&quot;token key atrule&quot;&gt;stageName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; release
            &lt;span class=&quot;token key atrule&quot;&gt;serviceId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; service&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;lanyfiga
            &lt;span class=&quot;token key atrule&quot;&gt;httpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; POST
            &lt;span class=&quot;token comment&quot;&gt;# 开启集成相应，这里必须开启，才能自定义响应 headers&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;integratedResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;# 开启 CORS&lt;/span&gt;
            &lt;span class=&quot;token key atrule&quot;&gt;enableCORS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;cors-response-headers&quot;&gt;&lt;a href=&quot;#cors-response-headers&quot; aria-label=&quot;cors response headers permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;CORS Response Headers&lt;/h2&gt;
&lt;p&gt;尽管 preflight request 仅适用于某些跨域请求，但每个跨域请求中都必须存在 CORS Response Headers，这意味着您必须将 &lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Origin&lt;/code&gt; 添加进 handlers 的响应中。&lt;/p&gt;
&lt;p&gt;如果您使用 cookies，还需要添加 &lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Credentials&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;要与上面的 &lt;code class=&quot;language-text&quot;&gt;serverless.yml&lt;/code&gt; 匹配，&lt;code class=&quot;language-text&quot;&gt;handler.js&lt;/code&gt; 文件应该如下设置：&lt;/p&gt;

&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// handler.js&lt;/span&gt;

&lt;span class=&quot;token string&quot;&gt;&#x27;use strict&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;getProduct&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Do work to retrieve Product&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; product &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;retrieveProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    statusCode&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    headers&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Origin&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;*&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Credentials&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    body&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      product&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; product&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createProduct&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Do work to create Product&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; product &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    statusCode&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    headers&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Origin&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;*&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Credentials&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    body&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      product&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; product&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里需要注意 &lt;code class=&quot;language-text&quot;&gt;response&lt;/code&gt; 的 &lt;code class=&quot;language-text&quot;&gt;headers&lt;/code&gt; 属性，其中包含 &lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Origin&lt;/code&gt; 和 &lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Credentials&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;下面是一个简单的示例：&lt;/p&gt;

&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// hello.js&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; middy &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#x27;middy&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; cors &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#x27;middy/middlewares&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// This is your common handler, no way different than what you are used to do every day&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    statusCode&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    body&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;Hello, world!&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// Let&#x27;s &quot;middyfy&quot; our handler, then we will be able to attach middlewares to it&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; handler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;middy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;hello&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;cors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Adds CORS headers to responses&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; handler &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;cors-with-cookie-credentials&quot;&gt;&lt;a href=&quot;#cors-with-cookie-credentials&quot; aria-label=&quot;cors with cookie credentials permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;CORS with Cookie credentials&lt;/h2&gt;
&lt;p&gt;在上面的示例中，我们给定了 &quot;*&quot; 作为 &lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Origin&lt;/code&gt; 的值。但是，如果您使用 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials&quot;&gt;request using credentials&lt;/a&gt; 则不被允许。为了使浏览器能够响应，&lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Origin&lt;/code&gt; 需要包含发出请求的特定来源。有两种方法可以解决。&lt;/p&gt;
&lt;p&gt;首先，如果只有一个发出请求的原始网站，则可以将其硬编码到云函数的响应中：&lt;/p&gt;

&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// handler.js&lt;/span&gt;

&lt;span class=&quot;token string&quot;&gt;&#x27;use strict&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;getProduct&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Do work to retrieve Product&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; product &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;retrieveProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    statusCode&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    headers&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Origin&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;https://myorigin.com&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// &amp;lt;-- Add your specific origin here&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Credentials&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    body&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      product&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; product&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果有多个原始网站使用您的 API，那么需要采用一种更加动态的方法。你可以检查 &lt;code class=&quot;language-text&quot;&gt;origin&lt;/code&gt; header 看看是否在被批准的来源列表中，如果是，则在 &lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Origin&lt;/code&gt; 返回原点值。&lt;/p&gt;

&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// handler.js&lt;/span&gt;

&lt;span class=&quot;token string&quot;&gt;&#x27;use strict&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ALLOWED_ORIGINS&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
&lt;span class=&quot;token string&quot;&gt;&#x27;https://myfirstorigin.com&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token string&quot;&gt;&#x27;https://mysecondorigin.com&#x27;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;getProduct&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;event&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; origin &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;headers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;origin&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; headers&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;ALLOWED_ORIGINS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    headers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Origin&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; origin&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Credentials&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    headers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&#x27;Access-Control-Allow-Origin&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;*&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Do work to retrieve Product&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; product &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;retrieveProduct&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    isBase64Encoded&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    statusCode&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    headers
    body&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      product&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; product
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在这个示例中，我们检查 &lt;code class=&quot;language-text&quot;&gt;origin&lt;/code&gt; header 是否匹配。如果匹配，我们会在 &lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Origin&lt;/code&gt; 包含特定来源，并声明 &lt;code class=&quot;language-text&quot;&gt;Access-Control-Allow-Credentials&lt;/code&gt; 允许的来源。如果 &lt;code class=&quot;language-text&quot;&gt;origin&lt;/code&gt; 不是我们允许的来源之一，则我们将包含标准 headers，如果来源尝试进行凭据请求，则将被拒绝。&lt;/p&gt;
&lt;h2 id=&quot;小结&quot;&gt;&lt;a href=&quot;#%E5%B0%8F%E7%BB%93&quot; aria-label=&quot;小结 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;小结&lt;/h2&gt;
&lt;p&gt;处理 CORS 确实是一件麻烦的事情，但是使用 Serverless Framework 会让处理步骤变得简单得多！而这也就意味着再也不会出现 &lt;code class=&quot;language-text&quot;&gt;No &#x27;Access-Control-Allow-Origin&#x27; header is present on the requested resource&lt;/code&gt; 这样的错误啦！👋&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参考：&lt;/p&gt;

&lt;/blockquote&gt;
&lt;p&gt;欢迎访问：&lt;a href=&quot;https://serverlesscloud.cn/&quot;&gt;Serverless 中文技术社区&lt;/a&gt;，您可以在 &lt;a href=&quot;https://serverlesscloud.cn/best-practice&quot;&gt;最佳实践&lt;/a&gt; 里体验更多关于 Serverless 应用的开发！&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f77002a890e158af8f790e3ba0990015</guid>
<title>美团弹性伸缩系统的技术演进与落地实践</title>
<link>https://toutiao.io/k/cdkjc3r</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一、弹性伸缩系统演进&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;二、挑战与应对之策&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;三、业务赋能场景&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.1 节假日扩缩容&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.2 日常高峰期扩容&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.3 应急资源保障&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.4 服务链路扩缩容&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;四、弹性伸缩未来规划&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;作者简介&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;招聘信息&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;稳定、高效、可靠的基础设施是互联网企业应对业务高峰流量的底层基石。作为美团统一的基础技术平台，基础技术部一直致力于通过业内前沿技术的落地，保障公司内部所有业务在线生产系统所依赖的基础技术平台能稳定、安全、低成本、可持续地运行与发展。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;弹性伸缩系统&lt;/strong&gt;是基于Docker开发的自动弹性伸缩平台，在美团经历了多年的发展。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;早在2016年，美团就在线上环境中尝试使用容器环境，推出了基于OpenStack的&lt;strong&gt;容器集群平台&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651746302&amp;amp;idx=1&amp;amp;sn=85e20ee55ee704ec6e4047776e57985a&amp;amp;chksm=bd12b6b38a653fa58eafa73f8e921775c1cbf7ecccb5042c8f10c265e0f5d54a6c7de4e2a607&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Hulk 1.0&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Hulk 1.0&lt;/a&gt;&lt;/strong&gt;。随着容器的落地，弹性伸缩1.0版本应运而生，它解决了扩容实例慢、扩容上线慢、资源回收慢、计算资源冗余等问题。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;结合前两年的探索和实践以及业界相关领域技术的成熟度，2018年至今，我们对容器集群平台进行了一次自底向上的的整体升级，也就是现在的&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651750633&amp;amp;idx=1&amp;amp;sn=51a4b05deac592c4ccbf2dbcf709288b&amp;amp;chksm=bd1259a48a65d0b2d198239c03158e4f5eeace74241f8dc7f7d361974fa1e85bfbc8d3dfab88&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Hulk 2.0&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;Hulk 2.0&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;平台&lt;/strong&gt;。在底层，Hulk 2.0建设了自研的操作系统、容器引擎，并将OpenStack替换成了容器编排的事实标准&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651752646&amp;amp;idx=1&amp;amp;sn=364171bf1e6948287737c7b1a4f92d6d&amp;amp;chksm=bd12518b8a65d89d9e26094ca25ca54e28c0ea3bea5f6dcfb415845e708d85c7fb4a8a54fd3d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Kubernetes&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Kubernetes&lt;/a&gt;；在上层弹性伸缩系统PaaS层面，推出了弹性伸缩系统2.0，解决了弹性伸缩1.0实践过程中面临的很多业务痛点，包括：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;扩出的业务代码版本不一致&lt;/strong&gt;：导致业务逻辑异常，造成资损。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;部分服务高峰期资源不足&lt;/strong&gt;：导致业务无法有效承载流量，引起资损，&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;平台维护成本高&lt;/strong&gt;：北京、上海的业务各自一套弹性伸缩用户端管理平台、弹性逻辑（&lt;/span&gt;&lt;span&gt;因为美团、大众点评合并前期，服务治理框架、CMDB系统、发布系统尚未标准化&lt;/span&gt;&lt;span&gt;）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;配置使用灵活性低&lt;/strong&gt;：业务集群每增/减一个IDC均需在平台做相匹配的配置操作，在资源的调控上无法和公司的流量调度体系包括单元化架构、同地域、同中心调用有效地进行匹配。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;一、弹性伸缩系统演进&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;弹性伸缩1.0架构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我们首先看一下，产品演进路线和弹性伸缩1.0架构图。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.37797810688989053&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZRZAvia3f9eMw4anxfZjeMEpHSS5sYQ9WouOKRUUgFRV1JQqqlIEDicAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3106&quot;/&gt;&lt;p&gt;&lt;span&gt;产品演进路线&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6348547717842323&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZyngUgulRG4RgFxHd5oG8ZEnRcmvia7NMibJIick1cdYYuftcg9KAWibpiaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1928&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;弹性伸缩1.0架构&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;自左向右、自上而下进行模块介绍：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;用户端Portal&lt;/strong&gt;：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651760860&amp;amp;idx=1&amp;amp;sn=bd7c526de424db278b73255ca5d06ebe&amp;amp;chksm=bd1271918a65f887e9d558cff1e79a2cc5d39bcddb7ac3ecec0d14c5ae06603ee49c2d12de58&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;OCTO&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;OCTO&lt;/a&gt;管理端，OCTO是美团服务治理平台，出于北京业务操作服务节点习惯的考虑，在其上开发了对应的弹性伸缩管理页面；TTT管理端，TTT是上海侧（&lt;/span&gt;&lt;span&gt;原大众点评侧&lt;/span&gt;&lt;span&gt;）的CMDB管理平台，出于上海侧业务操作服务节点习惯的考虑，我们在其上开发了对应的弹性伸缩管理页面。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Hulk-ApiServer&lt;/strong&gt;：Hulk 1.0容器平台的网关服务。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Hulk-Policy&lt;/strong&gt;：弹性伸缩系统1.0的业务逻辑模块，其中涵盖了具体的指标聚合、扩缩容逻辑、策略等，主从架构模式，使用Zookeeper进行Master选举，从是冷备。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Hulk数据源&lt;/strong&gt;：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651751600&amp;amp;idx=2&amp;amp;sn=fc68d44065ede84318a95dd874776b95&amp;amp;chksm=bd125dfd8a65d4ebddd3a80bc24b01468b2dcffaaf03e95da8bd4b30b2863f8dc0f3b6583436&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;OCTO&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;OCTO&lt;/a&gt;，美团服务治理平台；CAT，美团服务端、移动端监控平台，主要负责应用层面；Falcon，基于开源Falcon定制化的系统监控平台，主要负责机器层面。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Scheduler&lt;/strong&gt;：Hulk 1.0容器平台的调度系统，基于OpenStack做了二次开发。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;弹性伸缩2.0架构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;弹性伸缩系统2.0主要在以下四个方面进行了架构演进：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1）&lt;strong&gt;调度系统-替换&lt;/strong&gt;：将OpenStack替换成了容器编排的事实标准&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651750561&amp;amp;idx=1&amp;amp;sn=561a3be8815ed376db3a3e28bcaf603f&amp;amp;chksm=bd1259ec8a65d0fa626644495ff69d9292bc07d7c9c695c04154514d4390875f3eb2e96bac0d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Kubernetes&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Kubernetes&lt;/a&gt;，并且在常驻资源池的基础上，新托管了专区资源池以及应急资源池。 &lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2）&lt;strong&gt;单体服务-微服务化。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;a. API-Server：弹性伸缩-网关服务。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;b. Engine：弹性伸缩-引擎，负责各服务实例扩缩的发起、终止，主从架构模式，使用Zookeeper进行Master选举，从是热备。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;c. Metrics-Server、Metrics-Data：【新增】弹性伸缩指标服务，负责Raptor、OCTO等数据源的采集&amp;amp;聚合。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;d. Resource-Server：【新增】弹性伸缩-库存管控服务，为各服务自动扩缩的资源需求保驾护航。 &lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3）&lt;strong&gt;服务画像-数据平台化&lt;/strong&gt;：Portrait-Server、Portrait-Data，弹性伸缩系统内部自建的服务画像数据体系。 &lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4）&lt;strong&gt;可观测性&lt;/strong&gt;：【新增】Alarm、Scanner，负责弹性伸缩的监控告警、运营治理等工作。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6412429378531074&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZyeLlpsvibianHsRWHf93DialWveaoH9NxllJqWq37JKd1JxhwskJkUEWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2832&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;弹性伸缩2.0架构&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;二、挑战与应对之策&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在介绍前，有必要重点说明下2018年这个时间节点。如前言中所述，2018年以前弹性伸缩1.0这个PaaS平台存在的一些问题，以及整体Hulk 1.0容器平台落地过程中遇到的一些问题，在产品战略上我们提出了Hulk 2.0的计划，它涵盖调度系统、容器引擎、内核隔离增强、弹性伸缩增强等领域；在战术上，遵循自顶向下的设计原则、自底向上的实施原则。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在2018年4月前比较长的一段时间内，Hulk容器平台的研发主要聚焦在底层系统的升级上（&lt;/span&gt;&lt;span&gt;优先打通Hulk 2.0容器编排Kubernetes、容器创建/销毁的流程&lt;/span&gt;&lt;span&gt;），在弹性伸缩PaaS平台的投入约为0.5个人力，增量业务停止接入，存量业务继续维护。在Hulk 2.0底层系统基本成型后，容器平台团队一方面开始着手将未接入弹性伸缩平台的Hulk 1.0容器平滑迁移至Hulk 2.0容器。另外一方面，开始着手组建人力建设可对接Hulk 2.0容器平台编排能力的弹性伸缩2.0系统，为已接入弹性伸缩平台的Hulk 1.0容器平滑迁移过来做技术储备。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在弹性伸缩2.0系统的演进过程中遵循“技术”、“推广”、“运营”的演进策略。我们可以先来看下在搭建平台的过程中面临的一些挑战以及解法。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.1 技术挑战&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;结合当下弹性伸缩系统面临的处境，并对业界弹性伸缩产品做过一番调研后，在平台搭建上确定了如下三期目标：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;一期目标&lt;/strong&gt;：弹性伸缩2.0系统MVP版本，简单来说是把底层OpenStack相关生态更换成Kubernetes周边生态，上层功能先维持不变。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;二期目标&lt;/strong&gt;：业务上，找同部门业务先行试点，基于反馈，小步快跑，快速迭代；技术上，对北京、上海服务治理平台，CMDB系统等相关业务逻辑进行融合。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;三期目标&lt;/strong&gt;：1.0系统的用户端融合为一套，减少业务侧的理解成本、研发侧的开发/维护成本。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在上述三期目标基本落地后，弹性伸缩2.0系统基本可以跑起来，处于一个不比弹性伸缩1.0系统差的阶段，接下来基于过往运维问题汇总以及业务访谈诉求，在后端架构上做了几个比较大的升级。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.1.1 弹性调度&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;正如前言所述，和大部分弹性伸缩产品类似，早期启用弹性伸缩的过程如下：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;创建弹性分组&lt;/strong&gt;：弹性分组是弹性伸缩管理的基本单元，弹性分组用来管理同质化的业务实例，在美团的实践中，主要是同一个IDC中的实例。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;创建弹性伸缩配置&lt;/strong&gt;：用于确定扩容出来的弹性伸缩实例的机型配置，比如：CPU、内存、硬盘大小等。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;创建弹性伸缩规则&lt;/strong&gt;：具体来讲就是扩容几台、缩容几台。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;创建弹性伸缩任务&lt;/strong&gt;：监控任务、定时任务。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在美团的落地场景中，我们遇到如下问题：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;该扩未扩&lt;/strong&gt;，业务集群新部署一个IDC的实例时，不容易联想到需要给这个IDC实例创建弹性分组，导致的问题是高峰期其他IDC可正常扩容，这个IDC无法正常扩容。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;不该扩却扩&lt;/strong&gt;，业务集群不再使用某个IDC后，未联想到需要关停这个弹性分组，导致的问题是一些定时任务依旧扩容出这个IDC的实例，部分情况下会引发业务异常。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;IDC视角的扩缩局限性，未站在“上帝视角”做扩缩容决策，会导致部分IDC资源紧缺时，比较难以Fail-Fast。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;业务在不同IDC的业务逻辑不一致，部分业务把具体的策略耦合在业务逻辑中，一个业务集群使用一套镜像弹性扩容，会引发业务异常。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;基于以上种种原因，我们拉通了各PaaS方，梳理了流量分组、弹性分组、发布分组之间的关系，以保证弹性伸缩在美团私有云中的扩容准确性。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5737373737373738&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZsBBaP5FBicTFfyG9OfEz5FPiaGRFtenKx2ARolIgojKBdwKosSNoOmdA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2970&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;分组关系图&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;流量分组&lt;/strong&gt;：划分来源于美团服务治理平台-OCTO、SET化平台-大禹，比如这个服务走的是SET化方式（&lt;/span&gt;&lt;span&gt;类业界单元化架构&lt;/span&gt;&lt;span&gt;），那么每一个SET就是一个流量分组；依次类推，设置的是无差别调用方式，那么全局就是一个流量分组；设置的是同地域（&lt;/span&gt;&lt;span&gt;Region&lt;/span&gt;&lt;span&gt;）调用方式，那么每个Region就是一个流量分组；设置的是同中心调用方式，那么每个中心就是一个流量分组；设置的是同IDC优先调用方式，那么每个IDC就是一个流量分组。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;弹性分组&lt;/strong&gt;：无需手动划分，一个流量分组就对应一个弹性分组，直接Mapping创建即可。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;发布分组&lt;/strong&gt;：划分来源于美团发布平台-Plus，对于未采用SET化架构的业务集群，则仅有一个Default-发布分组；针对采用SET化架构的集群，每个SET对应一个SET-发布分组，它们的代码/镜像可以不一样；基于同一个SET下又可能有多个地域、多个中心、多个IDC（&lt;/span&gt;&lt;span&gt;目前美团的SET化架构以同IDC调用为主&lt;/span&gt;&lt;span&gt;），所以和流量分组之间是1对N的关系。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;同地域访问的方式比较有代表性，这里对同地域调用&amp;amp;未SET化、同地域调用&amp;amp;SET化的业务集群自动扩容方式进行展开说明，其他组合可依次类推。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5476510067114094&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZc8tCjibicYDQibNYRJT3V9J8FkDbPov05jyWRrYibLJ8FNGHPGPe2p0IAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2980&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;分组明细图&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.1.2 库存管控&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;弹性伸缩系统如果只是单纯地提供一个IaaS资源的自动供给能力，这件事情并不难。然而实际情况下，弹性伸缩系统在落地过程中需要解决资源上面临的问题。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;业务关注点&lt;/strong&gt;：资源如何保障？过往在弹性伸缩系统1.0遇到过多次扩不出资源的情况。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;组织关注点&lt;/strong&gt;：弹性资源池该划分为多大合适？如果储备大量的资源，却无法较好的进行分时复用，作为PaaS平台本身会造成资源闲置。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;针对业务的这个关注点，目前业界公有云厂商的做法基本是不做SLA承诺或者说很难做到SLA承诺，因此也自然不会面临到组织的关注点问题。具体来说，在美团主要是通过以下几个措施来解决。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.1.2.1 多租户管理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.25443786982248523&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZgpxgWj8VMYNRQGlM7qd3e65RdDgNicewv8UM2Qdln6JB26xf8zK2ACw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2704&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;资源多租户图&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;平台给到每个业务线的资源并非无限，会给每个业务集群的弹性分组，设置一个默认的资源Quota。如果业务觉得默认Quota不够，可通过工单的方式进行一轮评估调整（&lt;/span&gt;&lt;span&gt;从实践来看，绝大部分情况无需调整&lt;/span&gt;&lt;span&gt;）。针对这个资源Quota，平台侧承诺的SLA：99.9%的扩容成功率。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里会有个问题：是不是给业务Quota后，这部分资源就直接划分给这个业务独占了？答案：不是的。这只是一个逻辑上的划分，资源本身是各业务混用的，平台需控制资源闲置率，本身会做些“超售”，但过程中需解决好“超售”可能面临的问题，这就是水位线监管机制。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.1.2.2 常态-资源保障&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;常规-资源保障，指的是平日、小节假日下的资源供给机制，这部分的资源来源于常驻资源池（&lt;/span&gt;&lt;span&gt;架构图所示&lt;/span&gt;&lt;span&gt;），平台会对已接入平台的所有服务，进行小时粒度的资源重预估。具体示意图如下：&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4564102564102564&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZ8Ic3tPM78PiaJBXK3zQibvLes4hDgbzccic2UCXdM9fmS6WfE1UaJL8eg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3120&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;资源保障图&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;新增/更新服务的伸缩任务、伸缩规则时，会对当前变更对整体资源池水位的影响进行预估，如果在叠加时间点将超过整体资源池的水位，平台会拒绝执行变更操作，并给到用户和平台管理员消息推送，用户可通过工单方式进行资源请求说明（&lt;/span&gt;&lt;span&gt;需保障存量服务的资源可靠性&lt;/span&gt;&lt;span&gt;）。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4986690328305235&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZlJTEibhfJwd6StH8mwHQHTSwwv8jagpHzG8SeD5gicBcj8EQHYp6WM8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2254&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;库存&amp;amp;实时用量&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5068493150684932&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZXKyFdTNDZpibClMpIsHrFKDgsdCBksgbpRF9QLsMEghrLJibC78amlPw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2190&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;库存&amp;amp;预估用量&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.1.2.3 应急-资源保障&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;常驻资源池的大小是有限的，应急-资源保障指的是业务拉新、大促、大节假日等非常态的资源供给机制，这部分的资源来源于常驻资源池+应急资源池（&lt;/span&gt;&lt;span&gt;如&lt;/span&gt;&lt;span&gt;架构图所示&lt;/span&gt;&lt;span&gt;）。应急资源池简单来说就是，我们按用量计费模式购买的公有云资源，这是一种更灵活的资源池模式（&lt;/span&gt;&lt;span&gt;具备一定的租约&lt;/span&gt;&lt;span&gt;）。在此基础上，我们构建了更省成本的混合云弹性调度能力（&lt;/span&gt;&lt;span&gt;在此之前仅在私有云的常驻资源池调度&lt;/span&gt;&lt;span&gt;）。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;弹性扩容&lt;/strong&gt;：常驻资源池实例优先占用，应急资源池实例次之。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;弹性缩容&lt;/strong&gt;：应急资源池实例先缩容，常驻资源池实例次之。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;以下示意图展示的是一个服务在大促期间（&lt;/span&gt;&lt;span&gt;维持T天&lt;/span&gt;&lt;span&gt;）需要208台容器实例，其中8台为常态下的资源诉求，200台为应急资源诉求。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大促前：&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-cropselx1=&quot;0&quot; data-cropselx2=&quot;521&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;281&quot; data-ratio=&quot;0.5392768079800498&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZJeH4mY6175FrzE5sj4EJ4KIDCbTz8aeVLuZWiag6Wxho8iaq2IiagceSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3208&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大促后（&lt;/span&gt;&lt;span&gt;T+1&lt;/span&gt;&lt;span&gt;）：&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5491100856954515&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZ121rar3uk3uyPVctjHgzXlOvOSJvIlVDCXQcRrsUicgC4O8LAibsMibkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3034&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;T+1天后，这些应急资源池将被腾退回公有云厂商，公司无需为后续继续付费。多业务都应急的场景其实会偏复杂些；特殊情况下，需要采用重调度、治理。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.2 推广思路&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在2020年之前，是弹性伸缩2.0系统的练内功阶段，并未大规模向业务推广Hulk 2.0弹性伸缩系统，主要原因归结为两方面：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;公司还处在从虚拟机、Hulk 1.0容器迁移至Hulk 2.0容器阶段，Hulk 2.0容器实例还处于打磨以及逐步赢得业务信任的过程中，推广弹性弹性伸缩2.0系统，容器化是第一步。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Hulk 2.0系统在基础功能上不足以满足相对复杂的业务场景，比如SET化架构的业务。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;截止2020年年底，共接入了约500个服务。这里主要以弹性伸缩1.0系统中平滑迁移过来的服务，同部门的服务（&lt;/span&gt;&lt;span&gt;Eat Your Own Dog Food&lt;/span&gt;&lt;span&gt;）为主。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在2020年-2021年，是弹性伸缩2.0系统的规模化阶段。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;数据驱动&lt;/strong&gt;：从数万个服务中，通过自建的服务画像数据体系挖掘出数千个美团适合接入弹性伸缩的服务，主要是参考高低峰、是否有状态、实例配置、业务集群规模等因素，并将其下钻到各业务部门，共建设30+运营大盘，锁定了平台侧希望去赋能的业务群体。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;价值量化&lt;/strong&gt;：这里面经历了一些认知迭代的过程，最后提炼出来主要是三方面：“应突发”、“省成本”、“自动化”。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;深入业务&lt;/strong&gt;：在前面500多个服务相对比较稳定之后，大概花了两三个月，和美团的各个业务线负责人去聊，主要围绕业务介绍（&lt;/span&gt;&lt;span&gt;只有了解它，才有可能为它赋能&lt;/span&gt;&lt;span&gt;），弹性伸缩价值介绍（&lt;/span&gt;&lt;span&gt;横向拉通其他业务的最佳实践&lt;/span&gt;&lt;span&gt;），业务今年的OKR是哪几块（&lt;/span&gt;&lt;span&gt;评估弹性伸缩三方面的价值是否可以帮助业务更好的达成业绩、合作共赢&lt;/span&gt;&lt;span&gt;），一起讨论当前业务接入后可能看到的收益。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;技术培训&lt;/strong&gt;：根据前期深入业务，获得的反馈。业务比较关注技术原理、接入成本、系统健壮性、最佳实践、有哪些潜在的坑。团队同学把这些进行了提炼总结，输出了弹性伸缩白皮书（&lt;/span&gt;&lt;span&gt;技术原理、FAQ手册、最佳实践等&lt;/span&gt;&lt;span&gt;）、避坑指南，并在有需要的业务部门进行VIP式的技术分享，一次不够、可以来两次，大大小小的业务团队、公司级的分享，我们做了十几二十次。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;渠道闭环&lt;/strong&gt;：公司层面上要做一些大促活动，如“安心复苏计划”、“517吃货节”、“1001夜直播”，这些活动只要我们知道了，我们就主动加入进去看看能帮助哪些，从结果来看，效果还是挺好的。我们还在公司的COE系统（&lt;/span&gt;&lt;span&gt;故障复盘分析工具&lt;/span&gt;&lt;span&gt;）去搜“负载”、“秒杀”、“暴涨”、“扩容”之类的关键字，学习问题的处理过程以及待办事项，评估后发现能帮上的，我们就主动联系业务去沟通。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;业务回访&lt;/strong&gt;：虽然我们会在技术支持群内会做答疑，且每周会进行值班问题的汇总Review，但相对来说会偏零散些。我们开始是采用问卷调查的方式去获取反馈，但是践行下来效果比较一般。因此，我们还是采用比较原始的方式——“促膝长谈”，我们主动从业务侧去拉取接入后遇到的问题，在评估优先级后快速迭代系统本身。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-cropselx1=&quot;0&quot; data-cropselx2=&quot;288&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;287&quot; data-ratio=&quot;0.9987277353689568&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZTSciazkhB59VAX4Zqw64ZjUHbkZibzOONFCFEQto1Ziazr3SdAubFCJ4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1572&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;经过以上这些工作，我们80%+的服务接入了弹性，覆盖了公司90%+的业务线。回到那句话，如果弹性伸缩系统只是单纯地提供一个IaaS资源的自动供给能力，这件事情并不难，而我们的定位是PaaS平台。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.3 运营难题&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这部分主要介绍向业务交付弹性容器实例后，碰到的三类典型问题：&lt;strong&gt;配置&lt;/strong&gt;、&lt;strong&gt;启动&lt;/strong&gt;、&lt;strong&gt;性能&lt;/strong&gt;。这些问题大部分不是弹性伸缩2.0这个PaaS平台本身领域内可直接闭环解决的事项，这往往取决于各PaaS平台是否已全量标准化、业务自身逻辑、以及基础设施层性能等因素，催化我们多去做这一步的原因只有一个：&lt;strong&gt;弹性扩容出的实例只有很好的帮助业务分担负载，才可真正帮助业务解决问题&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.3.1 配置问题&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-cropselx1=&quot;0&quot; data-cropselx2=&quot;521&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;157&quot; data-ratio=&quot;0.3180952380952381&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZl1kyzLJ32psSSCzfMTMs6xFptnfaqLu7Cs1m61r7Lqqib2iaOHk9tuMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2100&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.3.2 启动问题&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;启动问题，大部分解决的是容器的这种开箱即用方式所面临的问题，而非过往的采用先申请机器、再在这上面发布代码包的方式。而且这里面会经常要面临着业务的质疑，为什么我手动发布的时候不存在这个问题，采用弹性扩容就出现了？&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-cropselx1=&quot;0&quot; data-cropselx2=&quot;521&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;406&quot; data-ratio=&quot;0.7784431137724551&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZ5Lk8zl1GJwKPg93UFOKAfyAFvUTAcKHCNlHmMojMnDl7DbojArKh2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2672&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.3.3 性能问题&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;生产环境中，业务容器的性能问题其实是比较复杂的，可能涉及到重IO容器影响、宿主机Load过高、多个容器突发占用CPU过高导致影响某个业务容器问题。相对于不使用弹性时囤积算力的稳定场景，弹性扩缩容场景中，因对资源的频繁调配会更容易遇到资源性能的问题。为了保障使用效果，Hulk项目组主要从三个角度对性能问题完整解决：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;事前&lt;/strong&gt;：服务粒度配置个性化调度策略。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;事中&lt;/strong&gt;：基于服务画像数据平台提供服务时序特征、宿主机时序特征，建设多维度资源打散能力的调度算法。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;事后&lt;/strong&gt;：针对存量Node上的重IO、重CPU等容器进行重调度。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;三、业务赋能场景&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1 节假日扩缩容&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;业务场景&lt;/strong&gt;：有着明显的“七节二月”特性，就流量而言周末是工作日的1.5倍左右，节假日流量是周末的3~5倍左右。服务机器基本上是按照节假日的流量部署，平时机器使用率很低。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;如何使用弹性伸缩：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;接入弹性伸缩定时任务，节假日期间弹性扩容，应对节假日流量高峰；非节假日高峰，弹性缩容，减少服务器资源开销。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;任务配置示例：节前配置定时任务扩容；节后配置定时任务缩容；监控扩容任务作为托底。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5051055139550715&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZ8JQdlgqQX6VlOlib83SRJLKABxvFavE8l51BCicicjt7kkJDzibM8ibJVvw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2938&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;接入效果&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：业务侧平均节约成本20.4%。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.2 日常高峰期扩容&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;业务场景&lt;/strong&gt;：配送是外卖服务的下游，具有明显的午高峰特性。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;如何使用弹性伸缩：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;设置定时任务：在午高峰来临前扩容出足量的机器，在午高峰结束后缩掉富余的机器，如示例，分组【global - banner-east - 无swimlane】绑定了2个定时任务，每天09:55扩容125台机器；每天14:00缩容125台机器。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.36816524908869985&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZPkcOcuqWyibQHShVUuxdBhlibWY2YkV9zoZL40SG1lKd8E8YN4JfhnKw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3292&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3405474220241884&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZMYabI95Ll2Bc8Hfuia3Hib17C0Etj3JOn8PZdTxYwg2dqeykWP7bugaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3142&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;接入效果&lt;/strong&gt;：接入弹性之前，为应对午高峰流量，该服务需要常驻机器2420台；接入弹性之后常驻机器释放了365台，高峰期弹性机器占总机器数的15%。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.3 应急资源保障&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;业务场景&lt;/strong&gt;：风控反爬服务，是公司业务的服务安全盾和数据安全盾。目前，已有上百个业务方接入反爬服务，每天处理百亿级重点流量，为各大业务方防控恶意流量，保障业务稳定、数据安全及统计数据的正确性。风控反爬相关服务，活动节假日期间，服务负载会受业务影响增长明显，需要活动节假日期间补充大量资源。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;如何使用弹性策略&lt;/strong&gt;：活动节假日期间，风控反爬业务，申请弹性应急资源（&lt;/span&gt;&lt;span&gt;采购公有云宿主机&lt;/span&gt;&lt;span&gt;），提升活动期间弹性扩容总量，提升服务稳定性。活动节假日过后，缩容应急资源，腾退公有云宿主机，节约资源。&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.37335009428032684&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZEfo0Aa02voFAdE1S6b2urZzYHQovVF27l3ncwauwe0rpPEjv33TvnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3182&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;服务A&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.37329700272479566&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZqqaXpAUvV19zVrHhaBXGbbbTIpfLYZw0IVhNdibxsovh08KjmCt0RbQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2936&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;服务B&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;接入效果&lt;/strong&gt;&lt;span&gt;：为风控业务支持了5次大规模线上活动，基于弹性伸缩的应急-资源保障机制，累计提供公有云资源700+台高配容器，约7000+CPU资源。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.4 服务链路扩缩容&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;业务场景&lt;/strong&gt;：餐饮SaaS采取“火车模型发布的模式”交付功能，需要为70+服务申请专用的灰度链路机器，用于云端功能的灰度验证。但机器每月仅需使用2~3个工作日，一直持有机器，造成机器资源浪费；最初团队是通过每月定时手动申请、释放机器来解决，耗费较大人力，一定程度上影响到了研发的效率。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;如何使用弹性策略：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;配置链路拓扑。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;每月活动开始前，配置链路任务，设置：扩缩容时间、机器SET/LiteSet标识、链路服务扩容机器数量。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;到达设定时间，自动扩容、缩容机器。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4516740366392925&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZOicXoC31LhlGuicJIhfd8YiahM2tjqpG1ofN71XBiaTqIob5ia2GYC6cuvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3166&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4741557546519642&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZiaLug8UyXbBfqNsOPTUicA2LYv6alq81NdJPwicDDxGr597t0GzVJDRKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2902&quot;/&gt;&lt;img data-ratio=&quot;0.26794554455445546&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUveEqpbFqR3WiceMQmZiadVZ4Yk7Tv6u6VwfKqMNaKam94icfpQJ2Cc7Jhib3ERv2iamLhvliaHGmFC11g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3232&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;接入效果&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;使用前：火车发版涉及70+服务，每月需要70+服务负责人各自在发版前扩容机器，验证完成后缩容机器。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;使用后：首次配置链路拓扑后，此后每月仅需一名RD同学，统一配置一个链路任务，达到预设时间，自动扩、缩容，大大提高效率。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;四、弹性伸缩未来规划&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;随着弹性伸缩系统2.0在美团的规模化落地，我们未来会从稳定性、易用性、业务解决方案、新技术探索四个方面去做深、做广：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1）&lt;strong&gt;稳定性&lt;/strong&gt;：基础服务的稳定性是一切的基石，而这往往是不少研发同学容易忽视的一点，研发同学需“在晴天时修屋顶”。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;系统自身的健壮性&lt;/strong&gt;：集群全链路拆分（&lt;/span&gt;&lt;span&gt;缩爆炸半径&lt;/span&gt;&lt;span&gt;）、池化、资源QoS保障能力建设。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;弹性实例的稳定性&lt;/strong&gt;：加固发现能力，持续完善异常检测工具（&lt;/span&gt;&lt;span&gt;区别于常规的健康检测，会从异构算力的宿主机、不同内核参数、各系统指标层面进行综合决策&lt;/span&gt;&lt;span&gt;），自动进行异常实例的替换；加强数据运营，提升反馈能力，持续协同调度算法进行演进。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2）&lt;strong&gt;易用性&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;强化预演模式&lt;/strong&gt;：可以预测当前的弹性伸缩规则，服务接下来24小时的扩缩是怎么样的。这块我们目前做了个MVP版本，接下来除了会进一步提升用户触达率，另外也计划在用户端为接入的用户呈现使用后收益数据。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;自动任务配置&lt;/strong&gt;：基于阈值的配置方式不小程度上取决于工程师经验，可能会因为工程师过于“年轻”而没有做正确的配置，导致一些异常；目前在接入侧已经对部分业务放开了任务推荐的功能；计划基于运营数据进一步打磨工具后，会周期性的自动帮助业务调整配置。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3）&lt;strong&gt;业务解决方案&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;链路伸缩&lt;/strong&gt;：目前已经实现了基于链路拓扑批量配置、对各服务伸缩规则进行拆分的能力；接下来会将服务与服务之间，服务与中间件、存储之间的背压反馈作用于弹性决策中。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;专区弹性伸缩&lt;/strong&gt;：目前已在金融业务线、美团七层负载均衡服务网关&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651748728&amp;amp;idx=1&amp;amp;sn=41223f0591bad2dbe6c2ae117aa8a4e0&amp;amp;chksm=bd12a0358a652923fb53d5f6d8b510079d1c245f546aac8793ac564de7e1b44176f11c1f8f6f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Oceanus&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Oceanus&lt;/a&gt;中发挥弹性伸缩系统的“应突发”价值，未来计划为更多有专区场景的业务提供弹性伸缩支持。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4）&lt;strong&gt;新技术探索&lt;/strong&gt;：借鉴Knative、Keda的设计理念，为云原生业务场景的弹性伸缩做技术储备。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;作者简介&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;涂扬，现任基础架构部弹性策略团队负责人。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6f62d8393d99e2bf961e6f45932230ca</guid>
<title>手摸手教你阅读和调试大型开源项目 ZooKeeper</title>
<link>https://toutiao.io/k/y1lq4em</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.425531914893617&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QTLYO4x0PgdOiaOHQh18BTZxDFt12ZiaOu5Xia2rTzgQibicmbgtXPogflYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;940&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文作者：HelloGitHub-&lt;strong&gt;老荀&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Hi，这里是 HelloGitHub 推出的 HelloZooKeeper 系列，&lt;strong&gt;免费开源、有趣、入门级的 ZooKeeper 教程&lt;/strong&gt;，面向有编程基础的新手。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;项目地址：https://github.com/HelloGitHub-Team/HelloZooKeeper&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今儿就带大家打入 ZooKeeper 的源码内部！&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QseAyL7bkfFNibgIEALxhx139TQfmQibI3MwIOIDquJgXaE78fcuibOOSg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-ratio=&quot;0.62&quot; data-w=&quot;300&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一、源码调试&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;授人以鱼不如授人以渔&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我始终相信 “纸上得来终觉浅”，最终读者想要自己真正了解到 ZK 内部原理，阅读源码还是必不可少的，如果你们和我一样也拥有肉眼 Debug 的能力，那其实可以不用大费周章搭建源码调试环境，直接正面硬刚。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586Q69WOgD1fE4Xbw01iajRD7GB784JjGkeuItvcnUK41GbBAubyxKnKNLw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-ratio=&quot;0.93125&quot; data-w=&quot;320&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是如果没有的话，把 ZK 源码下载下来，使用称手的 IDE 直接跑起来，然后在需要学习的地方直接打断点，岂不是美滋滋&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QAZ1WbGGiaiaCgeeziasNOlbP0CcWwa92rBFdV0cHMn6CicM3poB449AZYA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-ratio=&quot;1&quot; data-w=&quot;250&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1 下载源码&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ZooKeeper 3.6.2 源码下载页面&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QRDZY3rz9zA4tKgzKHjvcc6z0TTL8ZRRKq9TomrEhFmYBxIm3tVCIpg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6027777777777777&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的链接中随便选一个下载速度快的，点击下载压缩包即可，下载完成后解压缩就会得到如下的目录结构&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;.&lt;br/&gt;├── zookeeper-server&lt;br/&gt;├── zookeeper-recipes&lt;br/&gt;├── zookeeper-metrics-providers&lt;br/&gt;├── zookeeper-jute&lt;br/&gt;├── zookeeper-it&lt;br/&gt;├── zookeeper-docs&lt;br/&gt;├── zookeeper-contrib&lt;br/&gt;├── zookeeper-compatibility-tests&lt;br/&gt;├── zookeeper-client&lt;br/&gt;├── zookeeper-assembly&lt;br/&gt;├── zk-merge-pr.py&lt;br/&gt;├── pom.xml&lt;br/&gt;├── owaspSuppressions.xml&lt;br/&gt;├── excludeFindBugsFilter.xml&lt;br/&gt;├── dev&lt;br/&gt;├── conf&lt;br/&gt;├── checkstyleSuppressions.xml&lt;br/&gt;├── checkstyle-strict.xml&lt;br/&gt;├── checkstyle-simple.xml&lt;br/&gt;├── bin&lt;br/&gt;├── README_packaging.md&lt;br/&gt;├── README.md&lt;br/&gt;├── NOTICE.txt&lt;br/&gt;├── LICENSE.txt&lt;br/&gt;├── Jenkinsfile-PreCommit&lt;br/&gt;└── Jenkinsfile&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目录中是有 &lt;code&gt;pom.xml&lt;/code&gt; 所以 ZK 需要通过 maven 编译整个项目，先确保自己的 maven 是安装好的&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ mvn --version&lt;br/&gt;Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-18T02:33:14+08:00)&lt;br/&gt;Maven home: /your/maven/home/apache-maven-3.5.4&lt;br/&gt;Java version: 1.8.0_181, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre&lt;br/&gt;Default locale: zh_CN, platform encoding: UTF-8&lt;br/&gt;OS name: &lt;span&gt;&quot;mac os x&quot;&lt;/span&gt;, version: &lt;span&gt;&quot;10.16&quot;&lt;/span&gt;, arch: &lt;span&gt;&quot;x86_64&quot;&lt;/span&gt;, family: &lt;span&gt;&quot;mac&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果有这样的输出说明 maven 是安装成功的，具体安装过程我这里就略过了，如果你有困难的话，可以留言给我们&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.2 编译项目&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进入和 &lt;code&gt;pom.xml&lt;/code&gt; 同级目录中并输入&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ mvn install -DskipTests=&lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就会看到项目在进行编译了，等到最后的输出 &lt;code&gt;BUILD SUCCESS&lt;/code&gt;，就说明项目编译完成了&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[INFO] Reactor Summary:&lt;br/&gt;[INFO]&lt;br/&gt;[INFO] Apache ZooKeeper 3.6.2 ............................. SUCCESS [  3.621 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Documentation ................... SUCCESS [  2.086 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Jute ............................ SUCCESS [ 10.633 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Server .......................... SUCCESS [ 19.246 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Metrics Providers ............... SUCCESS [  0.108 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Prometheus.io Metrics Provider .. SUCCESS [  1.286 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Client .......................... SUCCESS [  0.083 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Recipes ......................... SUCCESS [  0.092 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Recipes - Election .............. SUCCESS [  0.244 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Recipes - Lock .................. SUCCESS [  0.259 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Recipes - Queue ................. SUCCESS [  0.295 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Assembly ........................ SUCCESS [  5.425 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Compatibility Tests ............. SUCCESS [  0.072 s]&lt;br/&gt;[INFO] Apache ZooKeeper - Compatibility Tests - Curator 3.6.2 SUCCESS [  0.432 s]&lt;br/&gt;[INFO] ------------------------------------------------------------------------&lt;br/&gt;[INFO] BUILD SUCCESS&lt;br/&gt;[INFO] ------------------------------------------------------------------------&lt;br/&gt;[INFO] Total time: 44.263 s&lt;br/&gt;[INFO] Finished at: 2021-01-22T13:49:30+08:00&lt;br/&gt;[INFO] ------------------------------------------------------------------------&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.3 打开并配置项目&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之后就可以通过你的 IDE 打开这个目录了，我这里使用的是 idea&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586Q0JjV35Mqtlayv7tQQHyoHDTIJQdPH6fxW1HG1TuL6Uzl09Tv8rJDbQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.22727272727272727&quot; data-w=&quot;638&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后开始配置 &lt;code&gt;Run/Debug Configurations&lt;/code&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QogkZLoOcDiaWdX7G5RBOzfRmPAEPI58WkDQmLWgMJUoN04CmscE1MqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.9345314505776636&quot; data-w=&quot;779&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;点击 &lt;code&gt;+&lt;/code&gt; 添加新的配置&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QL8cD9nS8DvWMuCZYlPibEwYDDqB5ZW5RwxhwvC6NEbeBIGtelRBkc1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6444444444444445&quot; data-w=&quot;1035&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;选择 &lt;code&gt;Application&lt;/code&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QwbMB5O4pVTmQ4RXdBib27aic958oP7iapJYS8bGZjYtIbaadhtvCMg1Yw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;1.5017064846416381&quot; data-w=&quot;293&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.3.1 单机版启动配置&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后配置按照下图去填写或选择&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QribxM8zZq1hsauLDptam9J0UdIySlyOG7zgDQcAhXloFjz0q43WqJKw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.5555555555555556&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;先给这个配置起一个牛逼的名字&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;选择 &lt;code&gt;Modify options&lt;/code&gt; 打开子菜单&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;确保图中菜单中的三个子选项都被选中（前面有 √）&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后我们看具体的配置&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586Qjbp6p8pZptTTqC0Mups8DfTYpnzkWemwibDdm9icMelYaiaVLJsWykkCw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.8050734312416555&quot; data-w=&quot;749&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在我电脑上解压缩后的项目路径为 &lt;code&gt;/Users/junjiexun/Desktop/apache-zookeeper-3.6.2&lt;/code&gt; 读者请根据自己情况修改&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;选择你本地 jdk （我本地是 1.8 其他版本的不知道行不行，低版本肯定是不行，因为源码中用到了 1.8 的一些写法）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;选择 &lt;code&gt;zookeeper&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;配置 &lt;code&gt;VM options&lt;/code&gt;，内容为 &lt;code&gt;-Dlog4j.configuration=file:/Users/junjiexun/Desktop/apache-zookeeper-3.6.2/conf/log4j.properties&lt;/code&gt;，如果不配置的话，无法输出日志&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;指定启动类 &lt;code&gt;org.apache.zookeeper.server.ZooKeeperServerMain&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;单机版启动需要命令行参数，内容为 &lt;code&gt;2181 /Users/junjiexun/Desktop/apache-zookeeper-3.6.2/data&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;这个应该是不用修改，自动就会填上的，反正内容就是 &lt;code&gt;/Users/junjiexun/Desktop/apache-zookeeper-3.6.2&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;点击中间的 &lt;code&gt;+&lt;/code&gt; 添加包路径，内容为 &lt;code&gt;org.apache.zookeeper.server.*&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后点击 &lt;code&gt;Apply&lt;/code&gt; 以及 &lt;code&gt;OK&lt;/code&gt; 完成保存。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后点击这个小虫子就可以启动了&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QYnRvt2f9VARYJmRoAYenfezuz0bUbWTia8icZzlWgLvoUx2MEmGubBmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.3969849246231156&quot; data-w=&quot;199&quot;/&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;2021-01-22 15:12:16,319 [myid:] - INFO  [main:NIOServerCnxnFactory@674] - binding to port 0.0.0.0/0.0.0.0:2181&lt;br/&gt;2021-01-22 15:12:16,413 [myid:] - INFO  [main:WatchManagerFactory@42] - Using org.apache.zookeeper.server.watch.WatchManager as watch manager&lt;br/&gt;2021-01-22 15:12:16,413 [myid:] - INFO  [main:WatchManagerFactory@42] - Using org.apache.zookeeper.server.watch.WatchManager as watch manager&lt;br/&gt;2021-01-22 15:12:16,413 [myid:] - INFO  [main:ZKDatabase@132] - zookeeper.snapshotSizeFactor = 0.33&lt;br/&gt;2021-01-22 15:12:16,413 [myid:] - INFO  [main:ZKDatabase@152] - zookeeper.commitLogCount=500&lt;br/&gt;2021-01-22 15:12:16,429 [myid:] - INFO  [main:SnapStream@61] - zookeeper.snapshot.compression.method = CHECKED&lt;br/&gt;2021-01-22 15:12:16,432 [myid:] - INFO  [main:FileSnap@85] - Reading snapshot /Users/junjiexun/Desktop/apache-zookeeper-3.6.2/data/version-2/snapshot.2&lt;br/&gt;2021-01-22 15:12:16,444 [myid:] - INFO  [main:DataTree@1737] - The digest value is empty &lt;span&gt;in&lt;/span&gt; snapshot&lt;br/&gt;2021-01-22 15:12:16,480 [myid:] - INFO  [main:ZKDatabase@289] - Snapshot loaded &lt;span&gt;in&lt;/span&gt; 67 ms, highest zxid is 0x2, digest is 1371985504&lt;br/&gt;2021-01-22 15:12:16,481 [myid:] - INFO  [main:FileTxnSnapLog@470] - Snapshotting: 0x2 to /Users/junjiexun/Desktop/apache-zookeeper-3.6.2/data/version-2/snapshot.2&lt;br/&gt;2021-01-22 15:12:16,488 [myid:] - INFO  [main:ZooKeeperServer@529] - Snapshot taken &lt;span&gt;in&lt;/span&gt; 6 ms&lt;br/&gt;2021-01-22 15:12:16,544 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@136] - PrepRequestProcessor (sid:0) started, reconfigEnabled=&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;2021-01-22 15:12:16,546 [myid:] - INFO  [main:RequestThrottler@74] - zookeeper.request_throttler.shutdownTimeout = 10000&lt;br/&gt;2021-01-22 15:12:16,623 [myid:] - INFO  [main:ContainerManager@83] - Using checkIntervalMs=60000 maxPerMinute=10000 maxNeverUsedIntervalMs=0&lt;br/&gt;2021-01-22 15:12:16,628 [myid:] - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到日志输出，如果没有报错的话就是成功了！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后我们可以用客户端测试下&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ZooKeeper client = &lt;span&gt;new&lt;/span&gt; ZooKeeper(&lt;span&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span&gt;3000&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;List&amp;lt;String&amp;gt; children = client.getChildren(&lt;span&gt;&quot;/&quot;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;);&lt;br/&gt;System.out.println(children);&lt;br/&gt;client.close();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出为&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[zookeeper]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单机版的搞定了！我们下面试试集群版&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.3.2 集群版启动配置&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们有时候需要调试集群版 ZK 才有的逻辑，那之前的单机版就不够用了，并且我这里推荐将之前的源码压缩包，解压到两个不同的目录下，然后通过 IDE 分别打开这两个目录，去完全模拟两个不同的节点。集群版的和单机版配置是差不多的，我们来看看有哪些不一样的吧？我这里演示就启动两个节点 myid 分别是 1 和 2。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QWN6NoQyTV9qkFCwu83XryIbfibjKrRAS2mWuQDL8FKmYw0aJZjzicTMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6733668341708543&quot; data-w=&quot;398&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;首先将默认的 &lt;code&gt;zoo_sample.cfg&lt;/code&gt; 复制并重命名成 &lt;code&gt;zoo.cfg&lt;/code&gt;，也可以直接重命名&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;新建 &lt;code&gt;data&lt;/code&gt; 目录（如果没有的话），并在其下新建一个文本文件 myid 文本内容是 1&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后编辑下 &lt;code&gt;zoo.cfg&lt;/code&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# 修改&lt;/span&gt;&lt;br/&gt;dataDir=/Users/junjiexun/Desktop/apache-zookeeper-3.6.2/data&lt;br/&gt;&lt;span&gt;# 新增下面两行&lt;/span&gt;&lt;br/&gt;server.1=127.0.0.1:2888:3888&lt;br/&gt;server.2=127.0.0.1:2887:3887&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体的配置如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QVEtn0w3gNXWAqibXDCZ04QGG139mP58NUvqahBKV3Q9HXxTukRPtdsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.8013333333333333&quot; data-w=&quot;750&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;启动类不同，集群的为 &lt;code&gt;org.apache.zookeeper.server.quorum.QuorumPeerMain&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;命令行参数不同，传入的是 &lt;code&gt;zoo.cfg&lt;/code&gt; 路径，我的路径是 &lt;code&gt;/Users/junjiexun/Desktop/apache-zookeeper-3.6.2/conf/zoo.cfg&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后是配置第二个节点，我这里假设第二个节点的项目目录是 &lt;code&gt;/Users/junjiexun/Desktop/apache-zookeeper-3.6.2-bak&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第二个节点把 myid 文件中的内容修改为 2&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;zoo.cfg&lt;/code&gt; 中内容是&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# 修改&lt;/span&gt;&lt;br/&gt;dataDir=/Users/junjiexun/Desktop/apache-zookeeper-3.6.2-bak/data&lt;br/&gt;&lt;span&gt;# 修改，因为我两个节点是在一台机器中的，所以端口是不能重复的&lt;/span&gt;&lt;br/&gt;clientPort=2182&lt;br/&gt;&lt;span&gt;# 同样新增下面两行&lt;/span&gt;&lt;br/&gt;server.1=127.0.0.1:2888:3888&lt;br/&gt;server.2=127.0.0.1:2887:3887&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;命令行的参数是 &lt;code&gt;/Users/junjiexun/Desktop/apache-zookeeper-3.6.2-bak/conf/zoo.cfg&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其他我没提到的和节点 1 是一样的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们启动两个节点试试&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;2021-01-22 15:44:08,461 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):WatchManagerFactory@42] - Using org.apache.zookeeper.server.watch.WatchManager as watch manager&lt;br/&gt;2021-01-22 15:44:08,461 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):WatchManagerFactory@42] - Using org.apache.zookeeper.server.watch.WatchManager as watch manager&lt;br/&gt;2021-01-22 15:44:08,471 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):Learner@677] - Learner received NEWLEADER message&lt;br/&gt;2021-01-22 15:44:08,471 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):QuorumPeer@1811] - Dynamic reconfig is disabled, we don&lt;span&gt;&#x27;t store the last seen config.&lt;br/&gt;2021-01-22 15:44:08,471 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):FileTxnSnapLog@470] - Snapshotting: 0x28100000001 to /Users/junjiexun/Desktop/apache-zookeeper-3.6.2/data/version-2/snapshot.28100000001&lt;br/&gt;2021-01-22 15:44:08,472 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):ZooKeeperServer@529] - Snapshot taken in 1 ms&lt;br/&gt;2021-01-22 15:44:08,525 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):Learner@661] - Learner received UPTODATE message&lt;br/&gt;2021-01-22 15:44:08,525 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):QuorumPeer@868] - Peer state changed: following - synchronization&lt;br/&gt;2021-01-22 15:44:08,537 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):CommitProcessor@476] - Configuring CommitProcessor with readBatchSize -1 commitBatchSize 1&lt;br/&gt;2021-01-22 15:44:08,537 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):CommitProcessor@438] - Configuring CommitProcessor with 4 worker threads.&lt;br/&gt;2021-01-22 15:44:08,544 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):RequestThrottler@74] - zookeeper.request_throttler.shutdownTimeout = 10000&lt;br/&gt;2021-01-22 15:44:08,567 [myid:1] - INFO  [QuorumPeer[myid=1](plain=[0:0:0:0:0:0:0:0]:2181)(secure=disabled):QuorumPeer@863] - Peer state changed: following - broadcast&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后的 &lt;code&gt;Peer state changed&lt;/code&gt; 代表选举完成了，贴出来的这个节点 1 是 Follower，大功告成！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之后当你想要学习源码的流程的时候，直接本地启动服务端即可，是不是美滋滋呢～&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.4 源码阅读指北&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;服务端启动，集群 &lt;code&gt;QuorumPeerMain#main&lt;/code&gt;，单机 &lt;code&gt;ZooKeeperServerMain#main&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;客户端 &lt;code&gt;ZooKeeper&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;解析配置相关，&lt;code&gt;QuorumPeerConfig#parse&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;内存模型（小红本）&lt;code&gt;DataTree&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;回调通知（小黄本）&lt;code&gt;IWatchManager&lt;/code&gt; 查看该接口实现&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;默认实现 &lt;code&gt;WatchManager&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;优化方案 &lt;code&gt;WatchManagerOptimized&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;选举 &lt;code&gt;FastLeaderElection#lookForLeader&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;服务端实例，设置流水线 &lt;code&gt;setupRequestProcessors&lt;/code&gt; 方法&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Leader 节点 &lt;code&gt;LeaderZooKeeperServer&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Follower 节点 &lt;code&gt;FollowerZooKeeperServer&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Observer 节点 &lt;code&gt;ObserverZooKeeperServer&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;各个流水线员工 &lt;code&gt;RequestProcessor&lt;/code&gt; 查看该接口的实现&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;持久化 log &lt;code&gt;FileTxnLog&lt;/code&gt;，snapshot &lt;code&gt;FileSnap&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;会话管理 &lt;code&gt;SessionTrackerImpl#run&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;协议 &lt;code&gt;Record&lt;/code&gt; 查看该接口的实现&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.5 源码阅读心得&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读大型项目的源码一定是一个费时费心费力的工作，我这里也讲一下我阅读 ZK 源码的心得：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;不要死抠细节！大型项目的源码数量通常比较多，如果盯着逻辑中的每一个细节，就会迷失在源码的汪洋大海中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通常阅读源码都要带着一个目的。例如：ZK 是怎么进行协议转换的，ZK 是怎么选举的等等。有了目的以后，看相关源码是要选择性的忽略一些其他不相关的细节，可以通过方法名或者注释，来对具体的代码块先有一个感性的认识。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;碰到读不懂的地方，可以先去网上看看有没有人写过类似的博客，站在巨人的肩膀上，很可能别人一点你就通了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在 ZK 中一般间接或者直接继承 &lt;code&gt;ZooKeeperThread&lt;/code&gt; 都是线程对象，主要逻辑可以查看 &lt;code&gt;run&lt;/code&gt; 方法。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;任何一个类重要的属性肯定是在成员字段中，通过查看成员字段是可以大致推测出该类背后的数据结构。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;成员属性中如果有阻塞队列的字段，大概率会是生产者-消费者模式的体现，可以重点关注该阻塞队列的使用，何时放入以及取出元素。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.6 小结&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我用一些图文的篇幅介绍了如何在本地调试 ZK 源码，以及如何科学的阅读源码。我本地的环境是 Mac，用的 IDE 是 idea，如果你的环境或者工具和我不一样，碰到了困难的话，也可以给我们留言哦～&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二、ZK 中应用到的设计模式&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ZK 本身就是分布式的应用，也是优秀的开源项目，我这里就简单聊聊我在阅读源码中看到的应用在 ZK 里的设计模式吧&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1 生产者消费者&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个是 ZK 中非常有代表性的设计模式应用了，ZK 本身是 C/S 架构的设计，请求就是客户端发送给服务端数据，响应则是服务端发送给客户端数据，而 ZK 实现一些功能并不是通过线性顺序的去调用不同的方法去完成的，通常会由生产者线程，阻塞队列和消费者线程组成，生产者线程将上游收到的一些请求对象放入阻塞队列，当前的方法就返回了，之后由消费者线程通过循环不停的从阻塞队列中获取，再完成之后的业务逻辑。举例：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;PrepRequestProcessor&lt;/code&gt;，阻塞队列是 &lt;code&gt;submittedRequests&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;SyncRequestProcessor&lt;/code&gt;，阻塞队列是 &lt;code&gt;queuedRequests&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2 工厂模式&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有一些接口的实现，ZK 本身提供了默认的选择，但是如果使用者在配置中配置了其他的实现的话，ZK 的工厂就会自动去创建那些其他的实现。举例：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;在创建 &lt;code&gt;ClientCnxnSocket&lt;/code&gt; 时，会根据 &lt;code&gt;zookeeper.clientCnxnSocket&lt;/code&gt; 的配置去选择客户端的 IO 实现&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在创建 &lt;code&gt;IWatchManager&lt;/code&gt; 时，会根据 &lt;code&gt;zookeeper.watchManagerName&lt;/code&gt; 的配置去选择服务端的 watch 管理实现&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在创建 &lt;code&gt;ServerCnxnFactory&lt;/code&gt; 时，会根据 &lt;code&gt;zookeeper.serverCnxnFactory&lt;/code&gt; 的配置去选择服务端的 IO 工厂实现&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3 责任链模式&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前有学习过，ZK 服务端业务逻辑处理是通过将一个个 &lt;code&gt;XxxProcessor&lt;/code&gt; 串起来实现的，Processor 彼此不关心调用顺序，仅仅通过 &lt;code&gt;nextProcessor&lt;/code&gt; 关联，不同的服务端角色也可以通过这种方式极大的复用代码&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;单机模式下：&lt;code&gt;PrepRequestProcessor -&amp;gt; SyncRequestProcessor -&amp;gt; FinalRequestProcessor&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;集群模式下 Leader ：&lt;code&gt;LeaderRequestProcessor -&amp;gt; PrepRequestProcessor -&amp;gt; ProposalRequestProcessor -&amp;gt; CommitProcessor -&amp;gt; Leader.ToBeAppliedRequestProcessor -&amp;gt; FinalRequestProcessor&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;集群模式下 Follower ：&lt;code&gt;FollowerRequestProcessor -&amp;gt; CommitProcessor -&amp;gt; FinalRequestProcessor&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;集群模式下 Observer ：&lt;code&gt;ObserverRequestProcessor -&amp;gt; CommitProcessor -&amp;gt; FinalRequestProcessor&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.4 策略模式&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;zookeeper.snapshot.compression.method&lt;/code&gt; 可以配置成不同的 snapshot 压缩算法，当需要生成 snapshot 文件的时候，会根据不同的压缩算法去执行：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;gz&lt;/code&gt;：&lt;code&gt;GZIPInputStream&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;snappy&lt;/code&gt;：&lt;code&gt;SnappyInputStream&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;默认：&lt;code&gt;BufferedInputStream&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.5 装饰器模式&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还是刚刚的压缩算法，对外提供的是 &lt;code&gt;CheckedInputStream&lt;/code&gt; 的统一处理对象，使用 &lt;code&gt;CheckedInputStream&lt;/code&gt; 将上面三种压缩实现包装起来，这些对象全部都是 &lt;code&gt;InputStream&lt;/code&gt; 的子类&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;switch&lt;/span&gt; (根据不同的配置) {&lt;br/&gt;  &lt;span&gt;// 策略模式的体现&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;case&lt;/span&gt; GZIP:&lt;br/&gt;    is = &lt;span&gt;new&lt;/span&gt; GZIPInputStream(fis);&lt;br/&gt;    &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;case&lt;/span&gt; SNAPPY:&lt;br/&gt;    is = &lt;span&gt;new&lt;/span&gt; SnappyInputStream(fis);&lt;br/&gt;    &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;case&lt;/span&gt; CHECKED:&lt;br/&gt;  &lt;span&gt;default&lt;/span&gt;:&lt;br/&gt;    is = &lt;span&gt;new&lt;/span&gt; BufferedInputStream(fis);&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;// 都被包装进了 CheckedInputStream&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// 装饰器模式的体现&lt;/span&gt;&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; CheckedInputStream(is, &lt;span&gt;new&lt;/span&gt; Adler32()); &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;三、总结&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天我讲了如何直接从 ZK 源码 DEBUG，介绍了一些 ZK 中用到的设计模式，大家有阅读源码问题的话，欢迎给我留言哦&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下一期介绍 &lt;strong&gt;ZK 的高级用法纯实战&lt;/strong&gt;，期待一下吧～&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOc3c8IFlXegQnpYoLC586QRiaxvJ68BnSGK10Wwju7VQOsSSRZ9ibLwJOo2Budt9FValzspP1BK2Gw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-ratio=&quot;1&quot; data-w=&quot;280&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6b44caa885e66e29d0d882b72a3261a0</guid>
<title>代码为王的时代：车企如何掌握卓越软件开发能力</title>
<link>https://toutiao.io/k/11eua30</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.4255319&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5xO1SHIhBRqsgnArYPPct3yS3dlica01nzm39UaQyibS6aBYPQOownrsnHGf6wJypiaN5ng6EbnLT7gpZB2djPbYA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;940&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;由于软件正在推动汽车行业的创新，车企研发部门必须迅速掌握软件开发这项复杂能力。&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;作者：Ondrej Burkacky、Johannes Deichmann、Stefan Frank、Dominik Hepp、André Rocha&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;软件正在迅速重塑汽车行业&lt;/strong&gt;。近年来，业内的四股颠覆浪潮——自动驾驶化、网联化、电动化、共享化（ACES）——全都重度依赖先进的软件。这些领域未来还将迎来更多的颠覆发展。全行业的整车厂（OEM）、供应商和新企业无不希望自己能在这条由软件驱动的新价值链上把握住关键的控制点。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;软件：关键的行业转折点&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;随着行业格局改变，缺少软件能力的车企将面临重大风险，包括量产（SOP）延期和预算超支。它们甚至可能落后于竞争对手和新入场者，倘若后两者能以快得多的速度将新颖得多的产品推向市场的话。更糟的是，软件问题可能导致大规模召回，或是让车企无力防范因黑客攻击而产生的客户安全风险。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们的研究显示，软件能力强的企业和能力弱的企业之间的差距是显著的，能力最强的企业报告中公布的产量和质量，比能力垫底的企业高出三到六倍【1】。这一开发效率差距远大于不同能力的硬件生产商之间可产生的差距。很多车企已认识到强大的软件开发能力带来的各种优势，也正在采取大刀阔斧的措施改善业绩。一些车企计划在今后几年提升软件能力，并将招聘数以千计的软件工程师；另一些则将重新定义治理模式，建立合作关系，并在全球推广卓越软件开发中心。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;然而，我们认为这些措施是不够的，因为只有当车企针对软件开发更新了基础运营模式的时候，真正的变革才会到来。根据我们的研究，在那些认为软件是主要颠覆因素的车企研发领导当中，仅有40%的人觉得自己已为必要的运营变革做好了准备【2】。虽然一些领军车企已在软件工程实践上取得长足进步，但大部分车企仍然远远落后于佼佼者。目前车企的问题集中在几个领域：敏捷实践、持续集成、自动化测试。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;软件开发转型的风险如此之大，车企必须对一整套软件开发方法进行重新思考，包括基础运营模式等。本文分享了我们通过与车企、供应商，以及生态圈中其他合作伙伴密切合作，收获的关键理念和洞见。这些洞见还建立在两项基础上：一是针对技术专家开展的广泛访谈，二是利用麦肯锡SottCoster专有数据库进行的大规模对标。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;用数字说话：软件的重要性是如何后来居上的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;若干趋势凸显了汽车软件与日俱增的重要性。第一个趋势与软件和电气/电子市场的迅速扩张有关，2020年到2030年，这个市场预计将实现12%的年复合增长率——比普通汽车销量的预期增速高出三倍多。有几个领域增长最为强劲，包括软件功能（年复合增长率达11%）以及集成测试（年复合增长率为12%）【3】。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;复杂度不断升高，但开发效率进步缓慢&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;无论功能层面还是架构层面，汽车软件的复杂度都在升高，而开发工作的效率却没有以同等速率跟上。我们的研究显示，软件复杂度在过去十年已增加到原来的4倍，而软件开发效率只提升了1到1.5倍（图1）。这个问题在变得日益复杂的大型模块中最为严重，如信息娱乐系统和高级驾驶辅助系统（ADAS）。相比传统的深度嵌入式软件，开发这些模块的效率大约低25%到35%。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5509259&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5xO1SHIhBRqsgnArYPPct3yS3dlica01nGRoYz3Cp4mQsmtcIQN0BSGDGIVoxticnHOARaQcjicUURlx6v7zQJQVQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这个日渐扩大的差距可能会影响车企未来的成功。车企需要投入更多资源开发软件，并在软件生命周期中对其进行维护，这可能会削弱自身在创新和应对竞争对手方面的能力。访谈期间，有位企业领导注意到，如果复杂度持续升高，而效率原地踏步，那么仅软件维护这一项，就会迅速耗尽所有的软件开发资源，不会给创新留下丝毫余裕。最终，复杂度和效率之间的差距将削弱成本竞争力，造成严重的财务和商誉问题。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;显而易见，软件开发实力排在前25%的企业，相比实力垫底者，效率高出3倍，产量高出3.5倍，质量好上6倍（图2）。因此，它们的产品面市时间更短，软件功能每提升一个档次所需的开发成本也更低。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.6842593&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5xO1SHIhBRqsgnArYPPct3yS3dlica01n9gZDuC1T9ibqYnkjkV4xZO7KBsWuYPUpz7K079k8qHRj7EiacSxHRPYg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;硬件方面，实力最强和最弱的企业在业绩上的差距相对不那么明显，因此，在这个领域追求差异化的机会也相应更少。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;降低复杂度，同时提升效率&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;为了在这个迅速变化的环境中取得成功，企业应当通过减少开发和维护软件需要做的工作，以求最大限度地降低复杂度。这个策略涉及限制各平台和生命周期阶段的功能和特性的版本数量，同时，企业必须加大对构件的重复利用。至于开发效率，企业应当尝试在软件开发速度上向数字原生企业看齐，以提升开发效率。由于软件创新的整体水平不会下降，企业还必须提高其软件开发和维护的产出量，以便交付在市场上取得成功所需的产品和服务。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;降低复杂度和提高效率需要一个新的软件运营模式，该模式着重考量四个维度：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;开发什么软件，包括架构、设计以及各项要求&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在哪里开发软件，由企业内部哪个部门开发，包括涉及到的地点、人才及合作关系&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;采取什么方式开发软件，这个维度考量的是开发工作的方法论，如大规模敏捷开发，或是开发和测试流程的改变&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;采取什么方式推动软件开发，包括绩效管理和工具链基础架构&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;第一个维度——开发什么软件——聚焦的是通过模块化和解耦的硬件/软件架构、以用户为中心的设计，以及需求管理，来降低开发复杂度。其他三个维度所聚焦的，则是通过提供合适的结构、流程和基础设施，提高软件开发的效率。我们从四个维度出发，明确了11项最佳实践，这些做法能帮助车企成功地解决在软件上面临的挑战（图3）。理想情况下，企业将同时处理好所有维度。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.8425926&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5xO1SHIhBRqsgnArYPPct3yS3dlica01nRjXj2iaLLiaD0xcnTKdnawpbFmIbcMXubk4bHKNiaJW5klER5eTHFibBxw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;1&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;开发什么软件：架构、设计及各项要求&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在新的运营模式下，企业必须把与软件相关的开发目标和业务机会转化为产品、功能和模块等层面上的可行架构、产品及投资组合需求。通过这个流程，企业可以详细了解能为其创造价值的软件类型。这个流程还将助力企业降低架构的复杂度，应用以用户为中心的设计流程，改善对软件需求的管理。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;1&lt;/section&gt;&lt;/section&gt;&lt;span title=&quot;&quot; opera-tn-ra-cell=&quot;_$.pages:0.layers:0.comps:21.txt2&quot;&gt;&lt;p&gt;&lt;strong&gt;降低架构的复杂度&lt;/strong&gt;&lt;/p&gt;&lt;/span&gt; &lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;根据我们的研究，如果汽车软件的模块化程度不够，就会使设计复杂度提高，也会提高项目的整体难度。另外，汽车软件的架构构件边界往往是不理想的，这有可能导致更多的相互依存关系，使开发人员在添加新功能时必须修改的构件数量成倍增加。这些依存关系还可能造成一个后果：检测到缺陷时，需要更长的时间和更高的专业水平来追踪特定软件模块和开发团队的错误。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;为解决此类问题，OEM必须大幅提高标准化和模块化程度，这样就能实现软件在各平台之间的可扩展性，使软件复杂度维持在可以管理的水平。车企还必须重视两项工作，一是促成软硬件之间的解耦，二是应用服务导向型设计。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;解耦架构。车企可以引入一个强大的中间件层次，利用它提取硬件能力，并通过上层使用的标准化应用程序接口（API）使这些能力对软件功能开放（图4）。这种软件架构可以利用各平台之间的共性，降低设计上的复杂度，不必多次重复开发相同的软件。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.7685185&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5xO1SHIhBRqsgnArYPPct3yS3dlica01n0Kbtf1nlxvY0icUFuaRkcyoUA0JvVZQWNjqmWIdD8zgElLa9O5mXIibA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;除了解耦，车企还应当创建一系列标准化的操作系统，利用它们支持各构件之间的协调，确保互通性。很多企业已宣布将要开发此类操作系统，但目前尚不存在统一的方法。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;而且企业也还没有明确这些系统的确切研发重点和功能。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;通过遵循明确的架构原理和指导原则，企业能够有效地应对更高的系统和软件复杂度。硬件/软件解耦允许多个实体参与模块化开发。反过来，由于代码共性增多，模块化软件构建技术可增加对代码的重复利用，并减少需要的代码总量。很多企业已着手引入软件产品线工程（PLE）方法，以增加重复利用，同时处理产品变更。这个方法能让一个软件服务于多个产品、产品变体和产品系列，还可以兼容不同的硬件版本。软件PLE显著降低了开发和测试工作的难度，这两项工作都只需进行一次。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;换句话说，促使硬件从软件上解耦，可促使硬件实现进一步的“自主化”，硬件提供了标准的计算、存储、输入/输出和电源功能，而软件则定义了终端用户功能。对于需要标准性能的应用，不同的软件功能可以利用虚拟化和容器化技术在相同的硬件上运行，如有必要，还可以动态地分布到其他硬件（例如在硬件发生故障的情况下）。对于ADAS等存在实时性能要求的应用，针对特定硬件的软件开发工作对于实现最优效率仍然至关重要。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;以服务为导向的架构。该架构应当遵循各项服务的定义，反过来，这些定义则应将业务或用户需求代码化。以服务为导向的架构设计既能让企业实现各核心要素的标准化，也能让各部门和各业务单位之间的接口实现标准化。企业还应对单项硬件和软件要素应用标准化的设计，以便在不影响性能的情况下，针对其他支持设备和功能规模化地配置资源，如计算和存储资源。以服务为导向的架构对OEM尤为重要。实现从车辆到云端的迅速连接，不仅将提升车企各种车型的长期价值，也将推动车企能力的迅速更新和升级。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;2&lt;/p&gt;&lt;/section&gt;&lt;span title=&quot;&quot; opera-tn-ra-cell=&quot;_$.pages:0.layers:0.comps:25.txt2&quot;&gt;&lt;p&gt;&lt;strong&gt;应用以用户为中心的设计技术&lt;/strong&gt;&lt;/p&gt;&lt;/span&gt; &lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;综观各行业，专注于开发以用户为中心的强大设计、创造最优用户体验（UX）的企业，将实现更高的财务收益[4]。随着ACES概念持续受到追捧，软件定义的汽车成为常态，对于OEM的整体竞争力而言，这些特征将会变得越来越重要。即便是顶尖企业也需要做改进，原因在于汽车行业在设计良好的软件用户体验、提供最优的客户价值等方面仍然落后于其他行业。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;按照最佳实践奉行的设计原则，OEM应当与终端用户合作对新软件进行迭代，无论交付前后都应如此。车企也应当采用新的交付模式，以便以每周或每月一次的频率对软件进行更新或添加，从而实现持续的优化。这些工作的周期相比经典软件开发工作短了许多，后者通常需要几年时间。新的交付模式还有一个好处，它可以让OEM与客户实现持续的直接接触，从而使OEM持续收到反馈，而这些反馈有助于它们优化软件需求，提供积极的用户体验提升。当OEM依赖硬件实现升级时，此类互动是不可能实现的，因为接触只会在通过经销商网络进行的一次性销售或市场调研期间发生一次。为了达到这个目标状态，OEM需要落实必要的先决条件，例如配套的软件和电子架构，以及可实现云端更新的工具链。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;希望成为用户体验领导者的OEM必须对自己的数据善加利用。随着车载软件和传感器数量不断增多，OEM如今能够获取大量的数据，以了解客户如何使用汽车。OEM可以挖掘此类数据，识别对客户最重要的特性，以及配置超标或根本没人用的特性。这些洞见将为明确配置和未来型号需求提供参考。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;最终，新的交付模式将给开发效率带来积极影响。鉴于车企将对软件进行频繁的变更、调适、修改，它们不需要从项目一开始的时候就确定极端详细的需求。由于用在定义需求上的时间缩短了，产品面市时间也将缩短。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;3&lt;/p&gt;&lt;/section&gt;&lt;span title=&quot;&quot; opera-tn-ra-cell=&quot;_$.pages:0.layers:0.comps:27.txt2&quot;&gt;&lt;p&gt;&lt;strong&gt;调整软件需求管理&lt;/strong&gt;&lt;/p&gt;&lt;/span&gt; &lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;历史上，汽车行业曾是在集成的价值链上管理各项需求的领导者。但是，OEM主要关注的是硬件需求，而且它们的既有流程并未针对软件调适到最优状态。随着车载软件成为重要的差异化因素，OEM必须采用新的做法来管理需求。管理需求的变更尤为重要，因为我们的研究显示，对汽车软件的种种需求已经变得过于细化，以至于拖慢了开发进程。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;按照最佳实践，OEM应当基于客户价值对各项需求进行聚类。第一个层级应当主要包括面向客户的需求（通常被表述为用例）。另一个层级主要包括技术或实施方面的需求（通常被表述为赋能因素），比如某个特性所需的内存。这个方法可以保证OEM着重关注价值创造，并能在软件开发期间设定合理的优先事项。随着车企将各种需求划分到多个层级，以下工作能够起到帮助作用。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;将需求与战略和客户价值挂钩。成功的软件开发需要根据客户反馈对需求进行持续的调整和修正。虽然企业在初期就应根据其商业战略和目标定义软件需求，但它们也应根据客户反馈和开发进度周期性地做出调整。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;确保端到端的可追溯性。通过在整条价值链上对需求进行密切追踪，车企可避免做无用功，加快开发进程。但是，只有当车企的开发流程和工具链能够从定义到验收全过程实现需求的严格可追溯性时，车企才能做到这一点。这种明确性有助于车企了解清楚各项需求（客户观点）、需要的功能（开发者观点），以及各项交付成果（测试者观点）。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;车企必须分四步实现端到端的追踪，这要么需要用到少数几种高度集成的工具，要么用到四种专业工具，并搭配相应的接口。这些步骤是：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;对需求进行追踪，从特性到构件对这些需求进行细化和具体说明&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;管理待办清单，这项工作有助于各团队在软件开发冲刺时管理好各项需求的覆盖范围（与下一个步骤密切相关）&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;追踪代码变更，包括对代办项目的更新&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;通过开展测试案例对需求进行验证，并检查测试案例的通过-失败状态&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;利用工具将各项需求关联起来，用户能够高效地在项目的每个阶段实施变更，从而满足监管对端到端可追溯性的各种要求（例如，ASPICE或UNECE[5]）。利用这个方法，我们能迅速弄清楚哪些变更影响到了哪些工作成果。当遵循敏捷流程开发软件时，此类需求变更是正常的，也是可取的（如基于客户反馈的变更），企业应当利用各种流程和工具对它们予以支持。在软件开发工作的传统瀑布式流程当中，此类变更是罕见的，而且通常也预见不到。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;避免过度细化，创建明确的需求类别。企业可以建立一些最佳实践，对软件需求进行具体说明和分类，并拟定精简的测试办法。一份优秀的需求说明应当是清晰明确的，而且允许测试工作不受其他需求影响。与组合管理一样，企业应当对不同类型的需求加以区分。常见的需求类别包括法律监管类、安全类、战略类，以及必要改进、客户价值、成本赋能等因素。另外，企业还必须确保，凡是需求之间的依存关系都应当是透明的。很多企业已经将这些规则融入到自己的软件开发流程和培训课程之中，以便优化对需求的处理和评审过程。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;开展优先排序，进行持续调整。企业既应根据具体的商业论证和战略目标，也应根据在整个开发过程中（例如在测试过程中）获得的客户反馈和经验对软件需求进行评估和优先排序。企业应当定期对需求进行重新评估，并在一份公开透明的待办清单中对其加以维护。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;很多企业任命了产品负责人，这些人拥有宽广的知识面，可以做出产品功能取舍，组建跨职能团队，并确保各职能部门就各项需求达成共识。根据最佳实践，产品负责人还需要负责遵循最佳实践，并对需求和用例的待办清单进行维护。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.0555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5xO1SHIhBRqsgnArYPPct3yS3dlica01nPy9MPDzNu7YoyxG1Nia392XFq2HJrOrt8ibngTYt4dwUFxaVySHlcmHA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.0843373&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5xO1SHIhBRqsgnArYPPct3yS3dlica01n2uyyzibUKTgV7ibsEBKj7VqqEM3gt8q3zVbjICicKcTvauTp108YKCbgA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;498&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;本文选摘自麦肯锡未来出行研究中心的报告《代码为王的时代：车企如何掌握卓越软件开发能力》。&lt;/p&gt;&lt;p&gt;点击“&lt;strong&gt;阅读原文&lt;/strong&gt;”获取报告中文PDF。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;[1] 基于麦肯锡的SoftCoster专有数据库的信息，该数据库包含多个行业的14000多个软件开发项目。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;[2] 麦肯锡未来研发调研。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;[3] Ondrej Burkacky、Johannes Deichmann、Jan Paul Stein合撰的文章《2030年的汽车软件与电子市场：梳理行业的未来格局》（Automotive software and electronics 2030: Mapping the sector’s future landscape），2019年7月9日，McKinsey.com；文章续篇即将出炉。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;[4] 基于针对业务发展的麦肯锡设计指数评分的相关分析。如欲了解更多信息，参阅Benedict Sheppard、Hugo Sarrazin、Garen Kouyoumjian和Fabricio Dore合撰的文章《设计的商业价值》（The business value of design），McKinsey Quarterly，2018年10月25日，McKinsey.com。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;[5] 汽车软件流程改进及能力评定（Automotive Software Performance Improvement and Capability determination）；联合国欧洲经济委员会（United Nations Economic Commission for Europe）。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.037037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5xO1SHIhBRqsgnArYPPct3yS3dlica01nWOJc9XpPb6hxy9LSWp149wQI7pUQjwNn8P288icaHZIHDHlrNF5pWmw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;关于作者：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Ondrej Burkacky&lt;/strong&gt;是麦肯锡全球董事合伙人，常驻慕尼黑分公司；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Dominik Hepp&lt;/strong&gt;是麦肯锡全球董事合伙人，常驻慕尼黑分公司； &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Johannes Deichmann&lt;/strong&gt;是麦肯锡全球董事合伙人，常驻斯图加特分公司；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Stefan Frank&lt;/strong&gt;是麦肯锡咨询顾问，常驻汉堡分公司；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;André Rocha&lt;/strong&gt;是麦肯锡全球董事合伙人，常驻东京分公司。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;作者感谢Silviu Apostu、Georg Doll、JuliaGößwein、Anna Gomulec、Virginia Herbst、Shannon Johnston、Maximilian Lemmens和Henrik Rochlitz对本文的贡献。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文中文版由麦肯锡全球董事合伙人&lt;strong&gt;彭波&lt;/strong&gt;与全球副董事合伙人&lt;strong&gt;陈晴&lt;/strong&gt;校对。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;麦肯锡公司版权所有©2021年。未经许可，不得做任何形式的转载和出版。转载请在消息栏回复“转载”查阅须知。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2ab685662eb5e0d993abe096eb3e95bc</guid>
<title>monkey-api-encrypt 又增强了一个实用功能</title>
<link>https://toutiao.io/k/3qy2z6i</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIwMDY0Nzk2Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/WRLYshvT39ykfC4Jy6mnxuibX6vJOmVCNF49BAQXbX3dKVmHVjpF89LmQhvdd6GbaQAbwrKSeaMu3Q41SnmOpxA/0?wx_fmt=png&quot; data-nickname=&quot;猿天地&quot; data-alias=&quot;cxytiandi&quot; data-signature=&quot;猿天地由《Spring Cloud微服务-全栈技术与案例解析》, 《Spring Cloud微服务 入门 实战与进阶》作者尹吉欢创建。 资深Java技术专家和微服务技术专家，在Spring Cloud和微服务方面有丰富的经验。&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;框架主页：&lt;/strong&gt;https://github.com/yinjihuan/monkey-api-encrypt&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有阵子没更新 monkey-api-encrypt 这个框架了，然后看了下 Github 上一些用户提的问题，挑了一个比较实用的进行了修复。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说问题之前先简单的讲下 monkey-api-encrypt 的原理，目前 monkey-api-encrypt 中核心部分就是用了 javax.servlet.Filter 来对数据进行加解密的处理，实现也比较简单。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;唯一要注意的就是在 Filter 中如何知道当前访问的 uri 是否需要加解密，而是否需要加解密可以通过配置的方式指定，也可以通过注解的方式配置在方法上。基于注解的方式，在项目启动的时候会去扫描方法，将 uri 存储起来，这样在 Filter 中就可以判断当前访问的 uri 是否需要加解密了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.42872989462007766&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WRLYshvT39yzo60Wia3sGicNsL9A9AOXPxNvqdKZNxuWMJwGmzdgicJOg86EeyGbIA6XC0pR1t8RMAGPRNeqvwkMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1803&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;uri 匹配的方式存在的问题是对于目前比较流行的 Restful 风格的 API 不支持，因为 uri 不是固定的，无法匹配到，这就是当前版本要解决的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实最开始的版本用的是 spring 的@ResponseBodyAdvice @RequestBodyAdvice 实现的，后面才改成了 Filter 的方式。如果是之前的实现，那么就不会存在今天的问题了，因为在 Advice 中可以获取到当前访问的 Method 对象。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面看怎么解决如何在 Filter 中通过当前访问的 uri 判断是否需要加解密的操作。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;AntPathMatcher&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;spring-core 包中提供了一个 AntPathMatcher 类，可以用于路径的匹配。比如我的接口格式是/users/{id}，当访问路径是/users/1001 的时候，这个路径应该匹配到/users/{id}才对，如果匹配上了/users/{id}，那么就可以通过/users/{id}知道当前接口是不是需要加解密操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;for (String u : list) {&lt;br/&gt;    boolean match = antPathMatcher.match(u, prefixUri);&lt;br/&gt;    if (match) {&lt;br/&gt;        return true;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;list 格式：[&quot;get:/users/{id}&quot;]&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;prefixUri：get:/users/1&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;循环将需要加解密的 uri 模板跟当前请求的 uri 进行匹配，如果匹配成功了，就证明需要加解密操作。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;HandlerMapping&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在做之前，我也想了下这个问题，可以借鉴 dispatcherServlet 中的代码。当我们的请求需要转发到对应的方法上，dispatcherServlet 就承担了这个工作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过获取 HandlerMapping，然后获取具体的 handler 对象，内部逻辑我们完全不需要关心，也不用担心会出 Bug，如果这个出 Bug 了那 Spring MVC 就没法玩了。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;try {&lt;br/&gt;    // 支持RestFul风格API&lt;br/&gt;    // 采用Spring MVC内置的匹配方式将当前请求匹配到对应的Controller Method上，获取注解进行匹配是否要加解密&lt;br/&gt;    HandlerExecutionChain handler = getHandler(request);&lt;br/&gt;    if (Objects.isNull(handler)) {&lt;br/&gt;        return false;&lt;br/&gt;    }&lt;br/&gt;    if (Objects.nonNull(handler.getHandler()) &amp;amp;&amp;amp; handler.getHandler() instanceof HandlerMethod) {&lt;br/&gt;        HandlerMethod handlerMethod = (HandlerMethod) handler.getHandler();&lt;br/&gt;        String apiUri = RequestUriUtils.getApiUri(handlerMethod.getClass(), handlerMethod.getMethod(), request.getContextPath());&lt;br/&gt;        if (list.contains(apiUri)) {&lt;br/&gt;            return true;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;} catch (Exception e) {&lt;br/&gt;    throw new RuntimeException(e);&lt;br/&gt;}&lt;br/&gt;protected HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {&lt;br/&gt;    if (Objects.isNull(dispatcherServlet)) {&lt;br/&gt;        return null;&lt;br/&gt;    }&lt;br/&gt;    if (dispatcherServlet.getHandlerMappings() != null) {&lt;br/&gt;        for (HandlerMapping mapping : dispatcherServlet.getHandlerMappings()) {&lt;br/&gt;            HandlerExecutionChain handler = mapping.getHandler(request);&lt;br/&gt;            if (handler != null) {&lt;br/&gt;                return handler;&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;    return null;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;完整参考源码：https://github.com/yinjihuan/monkey-api-encrypt/blob/master/monkey-api-encrypt-core/src/main/java/com/cxytiandi/encrypt/core/EncryptionFilter.java&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;新版本地址：https://search.maven.org/artifact/com.cxytiandi/monkey-api-encrypt-core/1.2.2.RELEASE/jar&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文看似是在宣传一个新功能，其实我想分享给大家的是 Restful 这种 API 的处理场景，除了本文中的场景，在其他场景下也会遇到类似的问题。比如我们在用 Cat 做埋点的时候，如果不做任何处理，Cat 上的地址信息就是访问的 uri，比如 /users/1, /users/2 这种，其实这 2 个 uri 都是一个接口的请求，没办法归类。所以在埋点之前也需要将请求的 uri 转换下格式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;关于作者&lt;/strong&gt;：尹吉欢，简单的技术爱好者，《Spring Cloud 微服务-全栈技术与案例解析》, 《Spring Cloud 微服务 入门 实战与进阶》作者, 公众号&lt;strong&gt;猿天地&lt;/strong&gt;发起人。&lt;/p&gt;&lt;/section&gt;&lt;pre data-darkmode-bgcolor-15923650965579=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15923650965579=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15923650965579=&quot;rgb(167, 167, 167)&quot; data-darkmode-original-color-15923650965579=&quot;rgb(63, 63, 63)&quot; data-style=&quot;letter-spacing: 0.544px; font-size: 16px; color: rgb(63, 63, 63); word-spacing: 1px; line-height: inherit;&quot; class=&quot;js_darkmode__91&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre&gt;&lt;p&gt;&lt;span&gt;后台回复 &lt;/span&gt;&lt;strong&gt;&lt;span&gt;学习资料&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;&lt;span&gt;领取学习视频&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-mpa-template-id=&quot;112&quot; data-mpa-category=&quot;quote&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.511002444987775&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WRLYshvT39zWmaics1nAAwT4NCD77uDcf6vcXE1DAHybibTY0V3XDmf4YX1q9qYibIwz9xmRVTkEvTjP87gaKEZrQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;818&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如有收获，点个在看，诚挚感谢&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>