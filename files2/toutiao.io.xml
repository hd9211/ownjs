<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>379f4d913224a719e7f9c1af8dd37c00</guid>
<title>一个产品需求的研发流程是怎样的？</title>
<link>https://toutiao.io/k/fb90qrq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. 前言&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以前在不足百人的小公司待过，产品需求的研发并没有什么正规的流程，通常是产品提了需求之后，技术部门简单评审一下就开始写代码，本地和测试环境没问题就直接发布线上了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后来去了某二线互联网公司，&lt;span&gt;大概几千人。&lt;/span&gt;虽然跟一线大厂还差很多，但需求的研发流程跟大厂大同小异。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前段时间运营小姐姐找我了解一些开发相关的内容，&lt;/span&gt;&lt;span&gt;就跟她讲到了我们的开发流程。&lt;/span&gt;&lt;span&gt;这里简单做个小结。&lt;/span&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. 整体概述&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个相对完整的需求研发流程大致如下图所示：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7219123505976096&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/ophTb90oYCRicibRwUEawU6RuBbhnTtd3ZERMVO7oczeic36Yj88fVoTFS8kBPpK1fKkTc8ySBamkOLgyZVvfSNFQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1255&quot;/&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;PS: 该流程仅供参考，不同公司可能会有所不同，但主流程大体相似。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面简要介绍各个环节的主要内容。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3. 流程分析&lt;/span&gt;&lt;/h1&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;0. 产品提出需求&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;产品通常是对接「运营」和「研发」的，是运营和研发之间的桥梁。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运营过程中产生的需求一般会反馈给产品，产品把需求的主要功能整理成需求文档（Product Requirements Document, PRD），并画出产品原型图（常用工具：Axure）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;PRD 通常主要包含：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;需求背景。就是为什么要做这个需求？想要达成怎样的目的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;需求细节。各部分如何实现，包括业务逻辑以及如何交互等。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;1. PRD 评审&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;PRD 完成之后，产品经理（或者项目经理）就约一个会议室，邀请开发、测试、运营、交互设计师等人一起开会，详细说明本次需求，主要是讨论需求的可行性，比如技术能否实现、逻辑是否有问题等。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;2. 交互评审&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;产品给出的原型图可能不够具体，细节部分就要由交互设计师来出设计稿了（常用工具：Sketch、Figma 等）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如某个按钮具体放到哪里、宽高多少、颜色值多少、点击后如何跳转，等等。&lt;span&gt;然后设&lt;/span&gt;&lt;span&gt;计师会根据设计稿切图并给到前端开发人员。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;3. 技术评审&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就是确定技术方案，这部分工作就要由我们开发人员来主导了。主要包括如下部分：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;需求整体可以分为哪几个模块？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;需要哪些业务方配合？是否需要对接二方、三方？&lt;span&gt;各业务方之间是如何交互的？&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;表结构如何设计？&lt;span&gt;接口如何定义？&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;有没有技术难点？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要是开发同学向大家阐述详细的技术实现方案，评估一下是否有不合理之处。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;对于架构图、流程图和时序图，常用画图工具有 ProcessOn、draw.io、OmniGraffle、StarUML 等。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;4. 开发测试排期&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过技术评审，一个需求具体有多少工作量大致就可以确定了。&lt;span&gt;此时就要给出一个比较详细的排期了，主要包括：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;开发时间：单纯的开发「总人时」需要多久（时间通常以 0.5 天/人、或者 0.25 天&lt;span&gt;/人&lt;/span&gt;为单位）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;联调时间：前后端联调、后端跟其他第二方、第三方联调需要多久&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;提测时间：哪天可以交付测试同学进行测试（如果需求比较紧急，可以分批提测，也就是拆分成不同的功能模块提测）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;测试时间：通常包括测试环境、预发布环境、生产环境回归测试，这几个时间都要算上&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常「开发排期 + 联调排期 + 测试排期」就是这个需求的实施时间，这几个时间确定之后需求的发布上线时间基本就定了。但也要考虑到期间可能产生的一些意外情况。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;5. 输出技术文档&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;技术评审需要输出技术文档，把此次需求使用哪些技术、增加哪些配置、设计哪些表记录下来，涉及到流程图、架构图也要形成文档，以便过段时间之后再看，或者后面交接给其他人维护。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，后端开发通常还要先给出接口定义、入参出参等（该过程可以前后端讨论确定），以便前端同学 Mock 数据。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;6. 测试用例评审&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;测试同学把本期需求的功能点全部列出来，向大家说明自己如何去测试、期望得到怎样的结果等。如果有的接口对 QPS、RT 等要求较高，一般会进行「压测」来确定是否满足要求。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;有点类似测试的“技术评审”。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7. 前后端各自开发&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时候总算可以撸代码了！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前后端按照之前的接口定义各自开发。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;8. 前后端联调&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开发分别在本地自测以后，前后端一起走下整体流程。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;PS: 有时候提测之前测试同学会给出一个冒烟测试用例&lt;span&gt;（非必须）&lt;/span&gt;，通常是主流程和一些核心部分逻辑，当这些地方都没问题时，才可以提测。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;9. 提测&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;提测就是正式告诉测试同学这个需求已经初步开发完成，可以进行测试了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般以邮件的形式告知，包含相关测试同学、项目经理、开发、产品等人，以便各方了解项目进度。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;PS: &lt;span&gt;如有特殊情况导致延期，需要提前发邮件告知各需求方延期的原因。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;10. 测试环境测试&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;测试同学在测试环境按照之前的测试用例各种测、各种找 bug……改 bug……找 bug……改 bug……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;bug 整体改完之后，会叫产品经理初步验收一下是否符合预期。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;11. 预发布环境测试&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;测试环境的数据可能不够正式，主要是用来测试各个流程能够走通。而到了预发布环境，各种配置和数据库就跟生产环境基本一致了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果预发布环境没问题，就准备发布生产环境了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;12. 发布生产环境&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;发布生产环境之前，通常是需要做些准备工作的：比如创建数据表、新增配置等，通常要运维同学配合添加和修改（因为开发通常没这个权限）。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;13. 线上回归测试&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;发布成功之后，测试同学需要进行回归测试，也就是在生产环境把需求再验证一次。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;全部通过之后，就叫产品正式验收了，产品觉得 OK，才能说明这次需求 OK 的。&lt;span&gt;产品点头之后，这个&lt;/span&gt;&lt;span&gt;需求才算真正开发完成。&lt;/span&gt;&lt;span&gt;之后可能还会有些其他收尾工作，但非必须。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;14. 项目复盘总结&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分并非必须。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般在需求过程中问题比较多时，会复盘一下问题主要出在哪里，以后如何规避等。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;15. 需求完成&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至此，一个比较完整的需求研发流程就结束了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4. 补充说明&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;1. Code Review&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常的 Code Review 在测试环境流程通过之后。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然经过测试功能上没问题了，但代码中可能潜藏一些问题难以测出来。此时可以叫几个开发小哥还有老大，一起找个地方把关键部分的代码 Review 一下，看是否有潜在的漏洞，或者代码在哪部分写得不够合理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分做好的话其实对个人成长帮助挺大的，但有些公司可能会忽略这部分，尤其是排期紧张的时候。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;2. 说明&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上述流程只是根据个人平时开发经历总结的，仅供参考。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;若需求比较简单，可能会把一些步骤省略掉。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;PS: 运营小姐姐说此前还觉得我们做需求应该很快，不明白为啥开发一个需求要这么久，待我跟她讲完开发流程，她保证以后再也不催我们了。&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>284babd2bb027cf223da67c684a1dc31</guid>
<title>一文熟悉 Presto</title>
<link>https://toutiao.io/k/4xt1kuj</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;strong&gt;&lt;span&gt;1. Presto&lt;span&gt;介绍&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.1 Presto&lt;span&gt;简介&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.1.1 Presto&lt;span&gt;概述&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Presto是一个分布式SQL查询引擎，用于查询分布在一个或多个异构数据源上的大型数据集。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.1.2 Presto&lt;span&gt;架构&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5275862068965518&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dXCnejTRMLc2bicVBpvKShemp7ORBG6KHZJj1icsZibkJLXW4bt6OHKibYHmgfjicc1PicXicWEjNscaAqnoMEKpYzvFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;580&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.1.3 &lt;span&gt;官网地址&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;就在&lt;/span&gt;2020&lt;span&gt;年&lt;/span&gt;&lt;span&gt;12&lt;/span&gt;&lt;span&gt;月&lt;/span&gt;&lt;span&gt;27&lt;/span&gt;&lt;span&gt;日&lt;/span&gt;&lt;span&gt;,prestosql&lt;/span&gt;&lt;span&gt;与&lt;/span&gt;&lt;span&gt;facebook&lt;/span&gt;&lt;span&gt;正式分裂&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;并改名为&lt;/span&gt;&lt;span&gt;trino.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;https://prestosql.io/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://trino.io&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.1.4 Prestodb VS Prestosql(trino)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;根据目前社区活跃度和使用广泛度&lt;/span&gt;,&lt;span&gt;更加推荐&lt;/span&gt;&lt;span&gt;prestosql.&lt;/span&gt;&lt;span&gt;具体区别参考博文&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http://armsword.com/2020/05/02/the-difference-between-prestodb-and-prestosql/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2 Prestosql&lt;span&gt;的安装和使用&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.1 prestosql&lt;span&gt;版本的选择&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;在&lt;/span&gt;presto330&lt;span&gt;版本里已经提到&lt;/span&gt;&lt;span&gt;,jdk8&lt;/span&gt;&lt;span&gt;只支持到&lt;/span&gt;&lt;span&gt;2020-03&lt;/span&gt;&lt;span&gt;月发行的版本&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;详情参考&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;https://prestosql.io/docs/current/release/release-330.html&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;在&lt;/span&gt;2020&lt;span&gt;年&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;月&lt;/span&gt;&lt;span&gt;8&lt;/span&gt;&lt;span&gt;号&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;社区发布的&lt;/span&gt;&lt;span&gt;332&lt;/span&gt;&lt;span&gt;版本开始&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;需要&lt;/span&gt;&lt;span&gt;jdk11&lt;/span&gt;&lt;span&gt;的版本&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;由于现在基本都使用的是&lt;/span&gt;&lt;span&gt;jdk8,&lt;/span&gt;&lt;span&gt;所以我们选择&lt;/span&gt;&lt;span&gt;presto315&lt;/span&gt;&lt;span&gt;版本的&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;此版本在&lt;/span&gt;&lt;span&gt;jdk8&lt;/span&gt;&lt;span&gt;的环境下是可用的&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;如果我们生产环境是&lt;/span&gt;&lt;span&gt;jdk8,&lt;/span&gt;&lt;span&gt;但是又想使用新版的&lt;/span&gt;&lt;span&gt;presto,&lt;/span&gt;&lt;span&gt;可以为&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;单独指定&lt;/span&gt;&lt;span&gt;jdk11&lt;/span&gt;&lt;span&gt;即可使用&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;最后附录部分会给出使用&lt;/span&gt;&lt;span&gt;jdk11&lt;/span&gt;&lt;span&gt;的配置方式&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.2 &lt;span&gt;集群安装规划&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;host&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;coordinator&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;worker&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;linux121&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;√&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;×&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;linux122&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;×&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;√&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;linux123&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;×&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;√&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.3 Presto Server&lt;span&gt;的安装&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. &lt;/span&gt;&lt;span&gt;&lt;span&gt;安装包下载地址&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;https://repo1.maven.org/maven2/io/prestosql/presto-server/315/presto-server-315.tar.gz&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. &lt;/span&gt;&lt;span&gt;&lt;span&gt;将&lt;/span&gt;presto-server-315.tar.gz&lt;span&gt;上传到服务器上&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;这里导入到&lt;/span&gt;&lt;span&gt;linux121&lt;/span&gt;&lt;span&gt;服务器上的&lt;/span&gt;&lt;span&gt;/opt/software&lt;/span&gt;&lt;span&gt;目录下&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;并解压至&lt;/span&gt;&lt;span&gt;/opt/servers&lt;/span&gt;&lt;span&gt;目录下&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 software]# tar -zvxf presto-server-315.tar.gz -C /opt/servers/&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;3. &lt;/span&gt;&lt;span&gt;&lt;span&gt;创建&lt;/span&gt;presto&lt;span&gt;的数据目录&lt;/span&gt;&lt;span&gt;(presto&lt;/span&gt;&lt;span&gt;集群的每台机器都要创建&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;span&gt;用来存储日志这些&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 presto-server-315]# mkdir -p /file/data/presto&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;4. &lt;/span&gt;&lt;span&gt;&lt;span&gt;在安装目录&lt;/span&gt;/opt/servers/presto-server-315&lt;span&gt;下创建&lt;/span&gt;&lt;span&gt;etc&lt;/span&gt;&lt;span&gt;目录&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;用来存放各种配置文件&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 presto-server-315]# mkdir etc&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.4 Node Properties&lt;span&gt;配置&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;在&lt;/span&gt;/opt/servers/presto-server-315/etc&lt;span&gt;路径下&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;配置&lt;/span&gt;&lt;span&gt;node&lt;/span&gt;&lt;span&gt;属性&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;注意&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt;集群中每台&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;node.id&lt;/span&gt;&lt;span&gt;必须不一样&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;后面需要修改集群中其它节点的&lt;/span&gt;&lt;span&gt;node.id&lt;/span&gt;&lt;span&gt;值&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 etc]# vim node.properties&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;环境名称&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;自己任取&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;集群中的所有&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;节点必须具有相同的环境名称&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;node.environment=develop&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;支持字母&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;数字&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;对于每个节点&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;这必须是唯一的&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;这个标识符应该在重新启动或升级&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;时保持一致&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;node.id=1&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;指定&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;的日志和其它数据的存储目录&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;自己创建前面创建好的数据目录&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;node.data-dir=/file/data/presto&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.5 JVM Config&lt;span&gt;配置&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;在&lt;/span&gt;/opt/servers/presto-server-315/etc&lt;span&gt;目录下添加&lt;/span&gt;&lt;span&gt;jvm.config&lt;/span&gt;&lt;span&gt;配置文件&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;并填入如下内容&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 etc]# vim jvm.config&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;参考官方给的配置&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;根据自身机器实际内存进行配置&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-server&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;最大&lt;/span&gt;&lt;span&gt;jvm&lt;/span&gt;&lt;span&gt;内存&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-Xmx15G&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-XX:-UseBiasedLocking&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;指定&lt;/span&gt;&lt;span&gt;GC&lt;/span&gt;&lt;span&gt;的策略&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-XX:+UseG1GC&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-XX:G1HeapRegionSize=32M&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-XX:+ExplicitGCInvokesConcurrent&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-XX:+ExitOnOutOfMemoryError&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-XX:ReservedCodeCacheSize=512M&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-Djdk.attach.allowAttachSelf=true&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-Djdk.nio.maxCachedBufferSize=2000000&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.6 Config Properties&lt;span&gt;配置&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;The config properties file, etc/config.properties, contains the configuration for the Presto server. Every Presto server can function as both a coordinator and a worker, but dedicating a single machine to only perform coordination work provides the best performance on larger clusters.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Presto&lt;span&gt;是由一个&lt;/span&gt;&lt;span&gt;coordinator&lt;/span&gt;&lt;span&gt;节点和多个&lt;/span&gt;&lt;span&gt;worker&lt;/span&gt;&lt;span&gt;节点组成&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;由于在单独一台服务器上配置&lt;/span&gt;&lt;span&gt;coordinator&lt;/span&gt;&lt;span&gt;有利于提高性能&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;所以在&lt;/span&gt;&lt;span&gt;linux121&lt;/span&gt;&lt;span&gt;上配置成&lt;/span&gt;&lt;span&gt;coordinator,&lt;/span&gt;&lt;span&gt;在&lt;/span&gt;&lt;span&gt;linux122,linux123&lt;/span&gt;&lt;span&gt;上配置为&lt;/span&gt;&lt;span&gt;worker(&lt;/span&gt;&lt;span&gt;如果实际机器数量不多的话可以将在协调器上部署&lt;/span&gt;&lt;span&gt;worker.)&lt;/span&gt;&lt;span&gt;在&lt;/span&gt;&lt;span&gt;/opt/servers/presto-server-315/etc&lt;/span&gt;&lt;span&gt;目录下添加&lt;/span&gt;&lt;span&gt;config.properties&lt;/span&gt;&lt;span&gt;配置文件&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;这是针对&lt;span&gt;coordinator&lt;/span&gt;&lt;span&gt;所在节点的配置信息&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;针对&lt;/span&gt;&lt;span&gt;worker&lt;/span&gt;&lt;span&gt;所在节点配置信息后面会配置&lt;/span&gt;&lt;span&gt;.):&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux122 etc]# vim config.properties&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;该节点是否作为&lt;/span&gt;&lt;span&gt;coordinator,&lt;/span&gt;&lt;span&gt;如果是&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;就允许该&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;实例充当协调器&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;coordinator=true&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;允许在协调器上调度工作&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;即配置&lt;/span&gt;&lt;span&gt;worker&lt;/span&gt;&lt;span&gt;节点&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;span&gt;为&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;span&gt;就是不允许&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;对于较大的集群&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;协调器上的处理工作可能会影响查询性能&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;因为机器的资源无法用于调度&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;管理和监视查询执行的关键任务&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;如果需要在协调器所在节点配置&lt;/span&gt;&lt;span&gt;worker&lt;/span&gt;&lt;span&gt;节点改为&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;即可&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;node-scheduler.include-coordinator=false&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;指定&lt;/span&gt;&lt;span&gt;HTTP&lt;/span&gt;&lt;span&gt;服务器的端口&lt;/span&gt;&lt;span&gt;.Presto&lt;/span&gt;&lt;span&gt;使用&lt;/span&gt;&lt;span&gt;HTTP&lt;/span&gt;&lt;span&gt;进行所有内部和外部通信&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http-server.http.port=7788&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;每个查询可以使用的最大分布式内存量。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query.max-memory=12GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;查询可在任何一台计算机上使用的最大用户内存量&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query.max-memory-per-node=5GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;查询可在任何一台计算机上使用的最大用户和系统内存量，其中系统内存是读取器，写入器和网络缓冲区等在执行期间使用的内存。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query.max-total-memory-per-node=6GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;该参数默认值时&lt;/span&gt;&lt;span&gt;-Xmx&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;30%.&lt;/span&gt;&lt;span&gt;且这个值加上&lt;/span&gt;&lt;span&gt;query.max-total-memory-per-node&lt;/span&gt;&lt;span&gt;的值不能大于&lt;/span&gt;&lt;span&gt;-Xmx&lt;/span&gt;&lt;span&gt;的值&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;否则无法启动&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;memory.heap-heaproom-per-node=2GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#discover-server&lt;span&gt;是&lt;/span&gt;&lt;span&gt;coordinator&lt;/span&gt;&lt;span&gt;内置的服务&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;负责监听&lt;/span&gt;&lt;span&gt;worker&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;discovery-server.enabled=true&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;发现服务器的&lt;/span&gt;&lt;span&gt;URI.&lt;/span&gt;&lt;span&gt;因为已经在&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;协调器中启用了&lt;/span&gt;&lt;span&gt;discovery,&lt;/span&gt;&lt;span&gt;所以这应该是&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;协调器的&lt;/span&gt;&lt;span&gt;URI&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;discovery.uri=http://linux121:7788&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.7 Catalog Properties&lt;span&gt;配置&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Presto&lt;span&gt;可以支持多个数据源&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;在&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;里面叫&lt;/span&gt;&lt;span&gt;catalog,&lt;/span&gt;&lt;span&gt;这里以配置支持&lt;/span&gt;&lt;span&gt;Hive&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;MySQL&lt;/span&gt;&lt;span&gt;的数据源为例&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;配置一个&lt;/span&gt;&lt;span&gt;Hive&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;catalog&lt;/span&gt;&lt;span&gt;和多个&lt;/span&gt;&lt;span&gt;MySQL&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;catalog:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;在&lt;/span&gt;&lt;span&gt;etc&lt;/span&gt;&lt;span&gt;目录下创建&lt;/span&gt;&lt;span&gt;catalog&lt;/span&gt;&lt;span&gt;目录&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 etc]# mkdir catalog&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Hive&lt;span&gt;的&lt;/span&gt;&lt;span&gt;catalog:&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;在&lt;/span&gt;&lt;span&gt;catalog&lt;/span&gt;&lt;span&gt;目录下创建&lt;/span&gt;&lt;span&gt;hive.properties&lt;/span&gt;&lt;span&gt;文件&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 catalog]# vim hive.properties&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;代表&lt;/span&gt;&lt;span&gt;hadoop2&lt;/span&gt;&lt;span&gt;代版本&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;并不是单单指&lt;/span&gt;&lt;span&gt;hadoop2.x&lt;/span&gt;&lt;span&gt;的版本&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;而是&lt;/span&gt;&lt;span&gt;hadoop&lt;/span&gt;&lt;span&gt;第二代&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;固定写法&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;connector.name=hive-hadoop2&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;指定&lt;/span&gt;&lt;span&gt;hive&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;metastore&lt;/span&gt;&lt;span&gt;的地址&lt;/span&gt;&lt;span&gt;(hive&lt;/span&gt;&lt;span&gt;必须启用&lt;/span&gt;&lt;span&gt;metastore)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;hive.metastore.uri=thrift://linux123:9083&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;如果&lt;/span&gt;&lt;span&gt;hdfs&lt;/span&gt;&lt;span&gt;是高可用必须增加这个配置&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;如果不是高可用&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;可省略&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;如果&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;所在的节点没有安装&lt;/span&gt;&lt;span&gt;Hadoop,&lt;/span&gt;&lt;span&gt;需要从其它&lt;/span&gt;&lt;span&gt;hadoop&lt;/span&gt;&lt;span&gt;节点复制这些文件到&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;的节点&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;hive.config.resources=/opt/servers/hadoop-2.9.2/etc/hadoop/core-site.xml,/opt/servers/hadoop-2.9.2/etc/hadoop/hdfs-site.xml&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;MySQL&lt;span&gt;的&lt;/span&gt;&lt;span&gt;catalog(&lt;/span&gt;&lt;span&gt;第一个对接的是&lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;业务线的&lt;/span&gt;&lt;span&gt;Mysql):&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;通过文件名称区分不同的&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;span&gt;数据来源&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 catalog]# vim mysql_a.properties&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;配置&lt;/span&gt;&lt;span&gt;Mysql&lt;/span&gt;&lt;span&gt;源&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;这里必须是&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;connector.name=mysql&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;指定连接&lt;/span&gt;&lt;span&gt;Mysql&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;url&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;connection-url=jdbc:mysql://linux123:3306&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;连接&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;span&gt;的主机名&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;connection-user=root&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;连接&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;span&gt;的密码&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;connection-password=12345678&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;MySQL&lt;span&gt;的&lt;/span&gt;&lt;span&gt;catalog(&lt;/span&gt;&lt;span&gt;第二个对接的是&lt;/span&gt;&lt;span&gt;b&lt;/span&gt;&lt;span&gt;业务线的&lt;/span&gt;&lt;span&gt;Mysql):&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;通过文件名称区分不同的&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;span&gt;数据来源&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 catalog]# vim mysql_b.properties&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;配置&lt;/span&gt;&lt;span&gt;Mysql&lt;/span&gt;&lt;span&gt;源&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;这里必须是&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;connector.name=mysql&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;指定连接&lt;/span&gt;&lt;span&gt;Mysql&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;url&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;connection-url=jdbc:mysql://linux121:3306&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;连接&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;span&gt;的主机名&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;connection-user=root&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;连接&lt;/span&gt;&lt;span&gt;mysql&lt;/span&gt;&lt;span&gt;的密码&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;connection-password=123456&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.8 &lt;span&gt;分发安装目录到集群中其它节点上&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;将&lt;/span&gt;linux121&lt;span&gt;上配置好的&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;安装包分发到集群中的其它节点&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;这里使用的是自己写的分发脚本&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 servers]# rsync-script /opt/servers/presto-server-315/&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.9 &lt;span&gt;修改&lt;/span&gt;&lt;span&gt;node.id&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;修改&lt;/span&gt;linux122&lt;span&gt;和&lt;/span&gt;&lt;span&gt;linux123&lt;/span&gt;&lt;span&gt;机器上&lt;/span&gt;&lt;span&gt;node.properties&lt;/span&gt;&lt;span&gt;配置文件中的&lt;/span&gt;&lt;span&gt;node.id(&lt;/span&gt;&lt;span&gt;因为每台机器&lt;/span&gt;&lt;span&gt;node.id&lt;/span&gt;&lt;span&gt;必须要不一样&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux122 etc]# vim node.properties&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;node.id=2&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux123 etc]# vim node.properties&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;node.id=3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.10 &lt;span&gt;修改&lt;/span&gt;&lt;span&gt;work&lt;/span&gt;&lt;span&gt;节点的配置信息&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;修改&lt;/span&gt;worker&lt;span&gt;节点&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;即&lt;/span&gt;&lt;span&gt;linux122&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;linux123&lt;/span&gt;&lt;span&gt;机器&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;上的&lt;/span&gt;&lt;span&gt;config.properties&lt;/span&gt;&lt;span&gt;配置文件&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;里面的配置内容与&lt;/span&gt;&lt;span&gt;coordinator&lt;/span&gt;&lt;span&gt;所在的节点是不一样的&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux122 etc]# vim config.properties&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;该节点是否作为&lt;/span&gt;&lt;span&gt;coordinator,&lt;/span&gt;&lt;span&gt;因为是&lt;/span&gt;&lt;span&gt;worker&lt;/span&gt;&lt;span&gt;节点&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;这里是&lt;/span&gt;&lt;span&gt;false&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;coordinator=false&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;访问端口&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;可以自己指定&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http-server.http.port=7788&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;每个查询可以使用的最大分布式内存量。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query.max-memory=12GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;查询可在任何一台计算机上使用的最大用户内存量&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query.max-memory-per-node=5GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;查询可在任何一台计算机上使用的最大用户和系统内存量，其中系统内存是读取器，写入器和网络缓冲区等在执行期间使用的内存。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query.max-total-memory-per-node=6GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;该参数默认值时&lt;/span&gt;&lt;span&gt;-Xmx&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;30%.&lt;/span&gt;&lt;span&gt;且这个值加上&lt;/span&gt;&lt;span&gt;query.max-total-memory-per-node&lt;/span&gt;&lt;span&gt;的值不能大于&lt;/span&gt;&lt;span&gt;-Xmx&lt;/span&gt;&lt;span&gt;的值&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;否则无法启动&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;memory.heap-heaproom-per-node=2GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;指定&lt;/span&gt;&lt;span&gt;discovery-server&lt;/span&gt;&lt;span&gt;的地址&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;这样&lt;/span&gt;&lt;span&gt;worker&lt;/span&gt;&lt;span&gt;才能找到它&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;与上面的端口须一致&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;discovery.uri=http://linux121:7788&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux123 etc]# vim config.properties&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;该节点是否作为&lt;/span&gt;&lt;span&gt;coordinator,&lt;/span&gt;&lt;span&gt;如果是&lt;/span&gt;&lt;span&gt;true&lt;/span&gt;&lt;span&gt;就是作为协调器&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;coordinator=false&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;访问端口&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;可以自己指定&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http-server.http.port=7788&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;每个查询可以使用的最大分布式内存量。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query.max-memory=12GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;查询可在任何一台计算机上使用的最大用户内存量&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query.max-memory-per-node=5GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;查询可在任何一台计算机上使用的最大用户和系统内存量，其中系统内存是读取器，写入器和网络缓冲区等在执行期间使用的内存。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query.max-total-memory-per-node=6GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;该参数默认值时&lt;/span&gt;&lt;span&gt;-Xmx&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;30%.&lt;/span&gt;&lt;span&gt;且这个值加上&lt;/span&gt;&lt;span&gt;query.max-total-memory-per-node&lt;/span&gt;&lt;span&gt;的值不能大于&lt;/span&gt;&lt;span&gt;-Xmx&lt;/span&gt;&lt;span&gt;的值&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;否则无法启动  &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;memory.heap-heaproom-per-node=2GB&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;指定&lt;/span&gt;&lt;span&gt;discovery-server&lt;/span&gt;&lt;span&gt;的地址&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;这样&lt;/span&gt;&lt;span&gt;worker&lt;/span&gt;&lt;span&gt;才能找到它&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;与上面的端口须一致&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;discovery.uri=http://linux121:7788&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.11 &lt;span&gt;以&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;用户启动服务&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;如果是以&lt;/span&gt;root&lt;span&gt;用户就可以直接启动了&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;我们这里使用&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;用户启动&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;还需要进行下面的操作&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;须保证每台已存在&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;用户&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. &lt;/span&gt;&lt;span&gt;&lt;span&gt;将&lt;/span&gt;presto&lt;span&gt;的数据目录&lt;/span&gt;&lt;span&gt;/file/data/presto&lt;/span&gt;&lt;span&gt;所有者修改为&lt;/span&gt;&lt;span&gt;presto:presto(&lt;/span&gt;&lt;span&gt;使用自己写的脚本一次性修改集群中每个节点&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 ~]# myssh chown -R presto:presto /file/data/presto/&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;2. &lt;/span&gt;&lt;span&gt;&lt;span&gt;将&lt;/span&gt;presto&lt;span&gt;的安装目录&lt;/span&gt;&lt;span&gt;/opt/servers/presto-server-315&lt;/span&gt;&lt;span&gt;所有者修改为&lt;/span&gt;&lt;span&gt;presto:presto&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 ~]# myssh chown -R presto:presto /opt/servers/presto-server-315/&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.12 &lt;span&gt;启动&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;服务&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;分别在&lt;/span&gt;linux121,linux122,linux123&lt;span&gt;上启动&lt;/span&gt;&lt;span&gt;Presto Server(&lt;/span&gt;&lt;span&gt;为了连接&lt;/span&gt;&lt;span&gt;hive,&lt;/span&gt;&lt;span&gt;需要先要保证&lt;/span&gt;&lt;span&gt;Hive&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;metastore&lt;/span&gt;&lt;span&gt;是启动的&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;&lt;span&gt;这里使用后台进程启动的命令&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[presto@linux121 presto-server-315]$ bin/launcher start&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[presto@linux122 presto-server-315]$ bin/launcher start&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[presto@linux123 presto-server-315]$ bin/launcher start&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;说明&lt;/span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;若启动有问题去查看日志&lt;/span&gt;.&lt;span&gt;日志目录在前面指定的数据目录的&lt;/span&gt;&lt;span&gt;var/log&lt;/span&gt;&lt;span&gt;下&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;即&lt;/span&gt;&lt;span&gt;/file/data/presto/var/log&lt;/span&gt;&lt;span&gt;目录下&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.13 &lt;span&gt;启动成功后会看到多了一个&lt;/span&gt;&lt;span&gt;PrestoServer&lt;/span&gt;&lt;span&gt;进程&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[presto@linux121 presto-server-315]$ jps&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;14881 PrestoServer&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.2.14 &lt;span&gt;访问&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;webui&lt;/span&gt;&lt;span&gt;界面&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;http://linux121:7788&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.45517241379310347&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dXCnejTRMLc2bicVBpvKShemp7ORBG6KHib1hO8aVtJ38R7WYrwSIqgVLuJE6B12RFvwzZ1icazk7dauHJhSK6wtQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;580&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.3 Presto&lt;span&gt;命令行&lt;/span&gt;&lt;span&gt;Client&lt;/span&gt;&lt;span&gt;的安装&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. &lt;/span&gt;&lt;span&gt;&lt;span&gt;下载&lt;/span&gt;Presto&lt;span&gt;的客户端&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;下载&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;对应的版本&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;https://repo1.maven.org/maven2/io/prestosql/presto-cli/315/presto-cli-315-executable.jar&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. &lt;/span&gt;&lt;span&gt;&lt;span&gt;将&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;presto-cli-315-executable.jar&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;上传至服务器&lt;/span&gt;,&lt;span&gt;放在&lt;/span&gt;&lt;span&gt;linux121&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;/opt/servers/presto-server-315/bin&lt;/span&gt;&lt;span&gt;目录下&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3. &lt;/span&gt;&lt;span&gt;&lt;span&gt;为方便使用&lt;/span&gt;,&lt;span&gt;修改&lt;/span&gt;&lt;span&gt;jar&lt;/span&gt;&lt;span&gt;包名称为&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[presto@linux121 bin]$ mv presto-cli-315-executable.jar presto&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;4. &lt;/span&gt;&lt;span&gt;&lt;span&gt;给文件增加执行权限&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 presto-server-315]# chmod +x presto&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.4 Presto&lt;span&gt;的基本使用&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. &lt;/span&gt;&lt;span&gt;&lt;span&gt;启动&lt;/span&gt;presto&lt;span&gt;客户端并选择连接的数据源&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;这里以&lt;/span&gt;&lt;span&gt;hive&lt;/span&gt;&lt;span&gt;为例&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[presto@linux121 presto-server-315]$ ./presto \&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--server linux121:7788 \&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--catalog hive \(&lt;span&gt;可选&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--schema test \(&lt;span&gt;可选&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--user xiaobai (&lt;span&gt;可选&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;说明&lt;/span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--server&lt;span&gt;指定的是&lt;/span&gt;&lt;span&gt;coordinator&lt;/span&gt;&lt;span&gt;的地址&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--catalog&lt;span&gt;指定的是连接的数据源&lt;/span&gt;&lt;span&gt;.(&lt;/span&gt;&lt;span&gt;跟配置文件里面的名称一致&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--schema&lt;span&gt;指定的是连接哪个数据库&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;这里是&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;数据库&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. &lt;/span&gt;&lt;span&gt;Presto&lt;span&gt;命令行操作&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;查看所有的数据库&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;presto:test&amp;gt; show schemas;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;查看某个库下的所有表&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;presto:test&amp;gt; show tables;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;查看一条&lt;/span&gt;&lt;span&gt;sql&lt;/span&gt;&lt;span&gt;查询&lt;/span&gt;&lt;span&gt;(6&lt;/span&gt;&lt;span&gt;亿多条数据比&lt;/span&gt;&lt;span&gt;hive&lt;/span&gt;&lt;span&gt;快很多&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;presto:test&amp;gt; select count(1) from test.test_hive;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;   _col0   &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-----------&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; 620756992&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.5 Presto&lt;span&gt;可视化客户端的安装&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;了解&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Presto&lt;span&gt;可视化客户端有多种&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;这里我们选择使用&lt;/span&gt;&lt;span&gt;yanagishima-20.0&lt;/span&gt;&lt;span&gt;版本&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. &lt;/span&gt;&lt;span&gt;&lt;span&gt;将&lt;/span&gt;yanagishima-20.0.zip&lt;span&gt;安装包上传至&lt;/span&gt;&lt;span&gt;linux121&lt;/span&gt;&lt;span&gt;服务器上&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. &lt;/span&gt;&lt;span&gt;&lt;span&gt;解压&lt;/span&gt;yanagishima-20.0.zip&lt;span&gt;安装包&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 software]# unzip yanagishima-20.0.zip -d /opt/servers&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;3. &lt;/span&gt;&lt;span&gt;&lt;span&gt;进入到&lt;/span&gt;/opt/servers/yanagishima-20.0/conf/&lt;span&gt;目录下&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;修改&lt;/span&gt;&lt;span&gt;yanagishima.properties&lt;/span&gt;&lt;span&gt;配置文件&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 conf]# vim yanagishima.properties&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;可以删除原文件的内容&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;然后重新填入下面的内容&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;指定&lt;/span&gt;&lt;span&gt;jetty&lt;/span&gt;&lt;span&gt;的端口&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;类似&lt;/span&gt;&lt;span&gt;tomcat&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;web&lt;/span&gt;&lt;span&gt;容器的一个组件&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;jetty.port=8080&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;#&lt;span&gt;指定数据源&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;presto.datasources=presto_test&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;presto.coordinator.server.presto_test=http://linux121:7788&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;catalog.presto_test=hive&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;schema.presto_test=ods&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;sql.query.engines=presto&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;4. &lt;/span&gt;&lt;span&gt;&lt;span&gt;启动&lt;/span&gt;yanagishima&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[root@linux121 yanagishima-20.0]# nohup bin/yanagishima-start.sh 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;5. &lt;/span&gt;&lt;span&gt;webUI&lt;span&gt;访问界面&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;http://linux121:8080/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.6 &lt;span&gt;附录&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;补充知识&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.6.1 &lt;span&gt;使用新版的&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;为其单独配置&lt;/span&gt;&lt;span&gt;jdk11&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;在&lt;/span&gt;presto&lt;span&gt;的各集群节点上安装&lt;/span&gt;&lt;span&gt;jdk11.0.9(&lt;/span&gt;&lt;span&gt;注意不要配置&lt;/span&gt;&lt;span&gt;jdk11&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;JAVA_HOME.&lt;/span&gt;&lt;span&gt;这里是在&lt;/span&gt;&lt;span&gt;/opt/servers/jdk-11.0.9&lt;/span&gt;&lt;span&gt;目录下&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;然后在&lt;/span&gt;&lt;span&gt;$PRESTO_HOME/bin/launcher&lt;/span&gt;&lt;span&gt;文件中增加下面&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;行参数&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;PATH=/opt/servers/jdk-11.0.9/bin/:$PATH&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;注意&lt;/span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;一定要加在&lt;/span&gt;exec &quot;$(dirname &quot;$0&quot;)/launcher.py&quot; &quot;$@&quot;&lt;span&gt;之前&lt;/span&gt;&lt;span&gt;!!!&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;然后按照上面的配置好之后&lt;/span&gt;,&lt;span&gt;就可启动&lt;/span&gt;&lt;span&gt;presto&lt;/span&gt;&lt;span&gt;了&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.6.2 &lt;span&gt;修改&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;访问&lt;/span&gt;&lt;span&gt;HDFS&lt;/span&gt;&lt;span&gt;的用户名&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;当&lt;/span&gt;Kerberos&lt;span&gt;没有与&lt;/span&gt;&lt;span&gt;HDFS&lt;/span&gt;&lt;span&gt;一起使用时&lt;/span&gt;&lt;span&gt;,Presto&lt;/span&gt;&lt;span&gt;默认将使用启动&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;进程的&lt;/span&gt;&lt;span&gt;OS&lt;/span&gt;&lt;span&gt;用户访问&lt;/span&gt;&lt;span&gt;HDFS(&lt;/span&gt;&lt;span&gt;即操作系统用户&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;span&gt;例如&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;如果&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;是以&lt;/span&gt;&lt;span&gt;root&lt;/span&gt;&lt;span&gt;用户运行的 &lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;它访问&lt;/span&gt;&lt;span&gt;HDFS&lt;/span&gt;&lt;span&gt;的权限即为&lt;/span&gt;&lt;span&gt;root&lt;/span&gt;&lt;span&gt;用户的权限&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;如果需要修改该用户&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;可以在&lt;/span&gt;&lt;span&gt;$PRESTO_HOME/etc/jvm.config&lt;/span&gt;&lt;span&gt;中设置系统属性来覆盖默认使用的用户&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;比如以&lt;/span&gt;&lt;span&gt;xiaobai&lt;/span&gt;&lt;span&gt;用户来访问&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;增加如下&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Shell&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-DHADOOP_USER_NAME=xiaobai&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.6.3 Presto-338&lt;span&gt;版本之前查询&lt;/span&gt;&lt;span&gt;MySQL&lt;/span&gt;&lt;span&gt;时可能遇到的&lt;/span&gt;&lt;span&gt;Bug&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;在实际场景中&lt;/span&gt;,&lt;span&gt;我们对于&lt;/span&gt;&lt;span&gt;smallint,int&lt;/span&gt;&lt;span&gt;等整数类型的值都是使用的无符号类型的&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;所以它存的值比标准的会大一倍&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;这时如果使用&lt;/span&gt;&lt;span&gt;Presto&lt;/span&gt;&lt;span&gt;查询时可能会遇到&lt;/span&gt;&lt;span&gt;&quot;outside valid range...&lt;/span&gt;&lt;span&gt;的错误&lt;/span&gt;&lt;span&gt;&quot;.&lt;/span&gt;&lt;span&gt;这个问题在&lt;/span&gt;&lt;span&gt;338&lt;/span&gt;&lt;span&gt;版本中被修复&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;具体可参考&lt;/span&gt;&lt;span&gt;github&lt;/span&gt;&lt;span&gt;的代码&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/trinodb/trino/commit/ed1c554acf31db6bab9d2f971419e798ab15289a&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.6.4 Presto WebUI&lt;span&gt;监控页面的含义&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.47586206896551725&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dXCnejTRMLc2bicVBpvKShemp7ORBG6KHAfVGBKoTEu5hkPm04WhRkSvHPWpOO0ryEtugwbk54LVbvrVHhzic1OQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;580&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.44310344827586207&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dXCnejTRMLc2bicVBpvKShemp7ORBG6KHkvOC0nnW5KHGXvwdRFy5e8pBQG9ibk5yN0PZqqEfy8M8s56WLWg60kQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;580&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4793103448275862&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dXCnejTRMLc2bicVBpvKShemp7ORBG6KH3cDiaRg9ZT2brQUpRzMjXTVh6BES5wyS2oW8JKfGxRJ5WOqqUyRa2uw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;580&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1.6.5 &lt;span&gt;使用&lt;/span&gt;&lt;span&gt;Presto sql&lt;/span&gt;&lt;span&gt;实现几个常见的&lt;/span&gt;&lt;span&gt;SQL&lt;/span&gt;&lt;span&gt;场景&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;场景&lt;/span&gt;1: &lt;span&gt;分组求&lt;/span&gt;&lt;span&gt;topN&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;SQL&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--1.&lt;span&gt;在&lt;/span&gt;&lt;span&gt;hive&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;test&lt;/span&gt;&lt;span&gt;库下车间&lt;/span&gt;&lt;span&gt;presto1&lt;/span&gt;&lt;span&gt;表&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;create table hive.test.presto1(&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&quot;sid&quot; int comment &#x27;&lt;span&gt;学生&lt;/span&gt;&lt;span&gt;id&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&quot;sname&quot; varchar(50) comment &#x27;&lt;span&gt;学生姓名&lt;/span&gt;&lt;span&gt;&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&quot;cname&quot; varchar(50) comment &#x27;&lt;span&gt;班级名称&lt;/span&gt;&lt;span&gt;&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&quot;total_score&quot; int comment &#x27;&lt;span&gt;考试总分&lt;/span&gt;&lt;span&gt;&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--2.&lt;span&gt;往表中插入数据&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;insert into hive.test.presto1 values(1101,&#x27;&lt;span&gt;孙悟空&lt;/span&gt;&lt;span&gt;&#x27;,&#x27;1&lt;/span&gt;&lt;span&gt;班&lt;/span&gt;&lt;span&gt;&#x27;,500),(1102,&#x27;&lt;/span&gt;&lt;span&gt;猪八戒&lt;/span&gt;&lt;span&gt;&#x27;,&#x27;1&lt;/span&gt;&lt;span&gt;班&lt;/span&gt;&lt;span&gt;&#x27;,600),(1103,&#x27;&lt;/span&gt;&lt;span&gt;如来佛祖&lt;/span&gt;&lt;span&gt;&#x27;,&#x27;1&lt;/span&gt;&lt;span&gt;班&lt;/span&gt;&lt;span&gt;&#x27;,600)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;,(1104,&#x27;&lt;span&gt;观音菩萨&lt;/span&gt;&lt;span&gt;&#x27;,&#x27;2&lt;/span&gt;&lt;span&gt;班&lt;/span&gt;&lt;span&gt;&#x27;,480),(1105,&#x27;&lt;/span&gt;&lt;span&gt;姜子牙&lt;/span&gt;&lt;span&gt;&#x27;,&#x27;2&lt;/span&gt;&lt;span&gt;班&lt;/span&gt;&lt;span&gt;&#x27;,500),(1106,&#x27;&lt;/span&gt;&lt;span&gt;李达康&lt;/span&gt;&lt;span&gt;&#x27;,&#x27;2&lt;/span&gt;&lt;span&gt;班&lt;/span&gt;&lt;span&gt;&#x27;,550)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;,(1107,&#x27;&lt;span&gt;王瞎子&lt;/span&gt;&lt;span&gt;&#x27;,&#x27;3&lt;/span&gt;&lt;span&gt;班&lt;/span&gt;&lt;span&gt;&#x27;,500),(1108,&#x27;&lt;/span&gt;&lt;span&gt;姜子牙&lt;/span&gt;&lt;span&gt;&#x27;,&#x27;3&lt;/span&gt;&lt;span&gt;班&lt;/span&gt;&lt;span&gt;&#x27;,500),(1109,&#x27;&lt;/span&gt;&lt;span&gt;凤姐&lt;/span&gt;&lt;span&gt;&#x27;,&#x27;3&lt;/span&gt;&lt;span&gt;班&lt;/span&gt;&lt;span&gt;&#x27;,550),(1110,&#x27;&lt;/span&gt;&lt;span&gt;张无忌&lt;/span&gt;&lt;span&gt;&#x27;,&#x27;3&lt;/span&gt;&lt;span&gt;班&lt;/span&gt;&lt;span&gt;&#x27;,480)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--3.&lt;span&gt;查看数据&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;select * from hive.test.presto1;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--4.&lt;span&gt;计算出每个班级总分排在前&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;名的学生信息&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;分数相同就名次并列&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;如果第一名有&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;个并列&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;那么分数第&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;的就排名第&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;了&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;span&gt;语法与&lt;/span&gt;&lt;span&gt;hive&lt;/span&gt;&lt;span&gt;一模一样&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;select&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;sid&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;,sname&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;,cname&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;,total_score&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;from&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        select&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        sid&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        ,sname&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        ,cname&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        ,total_score&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        ,rank() over(partition by cname order by total_score desc) as dn&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        from hive.test.presto1&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;)t1&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;where dn&amp;lt;=2&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;场景&lt;/span&gt;2: &lt;span&gt;求连续&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;SQL&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--1.&lt;span&gt;创建&lt;/span&gt;&lt;span&gt;hive.test.presto2&lt;/span&gt;&lt;span&gt;表&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;create table hive.test.presto2(&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&quot;user_id&quot; int comment &#x27;&lt;span&gt;用户&lt;/span&gt;&lt;span&gt;id&#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&quot;login_time&quot; varchar(50) comment &#x27;&lt;span&gt;登陆时间&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;精确到秒&lt;/span&gt;&lt;span&gt;&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--2.&lt;span&gt;往表中插入数据&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;insert into hive.test.presto2 values(1001,&#x27;2020-12-30 12:10:15&#x27;),(1001,&#x27;2020-12-30 13:10:15&#x27;),(1001,&#x27;2020-12-31 10:00:00&#x27;),(1001,&#x27;2021-01-01 15:00:00&#x27;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;,(1002,&#x27;2020-12-25 12:10:15&#x27;),(1002,&#x27;2020-12-26 13:10:15&#x27;),(1002,&#x27;2020-12-27 10:00:00&#x27;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;,(1003,&#x27;2020-12-25 12:08:50&#x27;),(1003,&#x27;2020-12-25 13:10:15&#x27;),(1003,&#x27;2020-12-26 10:00:00&#x27;),(1003,&#x27;2020-12-26 11:00:00&#x27;),(1003,&#x27;2020-12-28 18:00:00&#x27;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--3.&lt;span&gt;查询表的数据&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;select * from hive.test.presto2 order by user_id,login_time;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;--4.&lt;span&gt;求出连续&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;span&gt;天都有登陆的用户&lt;/span&gt;&lt;span&gt;id(&lt;/span&gt;&lt;span&gt;语法与&lt;/span&gt;&lt;span&gt;hive&lt;/span&gt;&lt;span&gt;有一些区别&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;select&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;distinct user_id&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;from&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        select&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        user_id&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        ,date_add(&#x27;day&#x27;,-rn,date(login_date)) as date_diff&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        from&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        (&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                select&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                user_id&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                ,login_date&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                ,row_number() over(partition by user_id order by login_date) as rn&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                from&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                (                         &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                        select&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                        user_id&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                        ,format_datetime(cast(login_time as timestamp),&#x27;yyyy-MM-dd&#x27;) as login_date&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                        from hive.test.presto2&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                        group by user_id,format_datetime(cast(login_time as timestamp),&#x27;yyyy-MM-dd&#x27;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                )t1&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        )t2&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;)t3&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;group by  user_id,date_diff&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;having count(user_id)&amp;gt;=3&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;说明&lt;/span&gt;:&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;写&lt;/span&gt;sql&lt;span&gt;使用的工具是&lt;/span&gt;&lt;span&gt;dbeaver&lt;/span&gt;&lt;span&gt;连接&lt;/span&gt;&lt;span&gt;presto.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;投稿来自群友！！！&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;img data-type=&quot;gif&quot; class=&quot;__bg_gif&quot; data-ratio=&quot;0.08658008658008658&quot; data-w=&quot;462&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/dXCnejTRMLfaPKxaibsZ7cCiaozWvibvo25R8yoqsvvTmiaG2PAMap0daZ8F31icEtXsianE5bA67SQ5Lh1fAbT9yLvA/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247486194&amp;amp;idx=1&amp;amp;sn=ec78e61a34dfaa54f2e78f67b3b7c765&amp;amp;chksm=ea68e03edd1f69289909e16fc98e735912069471d205cc00c232f959439cd6808ce7b5908548&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;2020大数据面试题真题总结(附答案)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247485691&amp;amp;idx=1&amp;amp;sn=d6cb1353031e07e4b02cd903d8b57911&amp;amp;chksm=ea68e237dd1f6b210f65f25ef42dabf4453d3bfa36fe8f33b149c0ff5329f77b9b792eef7882&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;一文探究数据仓库体系(2.7万字建议收藏)&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247486497&amp;amp;idx=1&amp;amp;sn=4498d46a2d7e3a1b3eecd5bda171d3f5&amp;amp;chksm=ea68e6eddd1f6ffb7cb6b19263178fc0e5d1f564dd11eaf6f932c119904d65cb99b2dc613a90&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;一文探究Hadoop(3万字长文，建议收藏)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247485965&amp;amp;idx=1&amp;amp;sn=2fc0899c82dffe7721c55ad717cd2678&amp;amp;chksm=ea68e0c1dd1f69d70689408d9e9f66f00a638d851b9ffb50484d697ecf05f9b0f2989a10b80d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;一文带你走进HIVE的世界(1.8W字建议收藏)&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247486303&amp;amp;idx=1&amp;amp;sn=c1f58c14372ae9ba22dc9c464ae04143&amp;amp;chksm=ea68e193dd1f6885c3fa1903114ea62aa9f6ee4ee78384c667306fd815c37de9cf1fb300212a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;一文带你全方位了解Flink(3.2W字建议收藏)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247485858&amp;amp;idx=1&amp;amp;sn=75a3a3dd71a612b5ac4412c423554787&amp;amp;chksm=ea68e36edd1f6a785b739bd2ec2f0cc94f5d3679ac40f631fbd61abad96e9652bea14cc705f5&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;你要悄悄学会HBase，然后惊艳所有人(1.7万字建议收藏)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247485999&amp;amp;idx=1&amp;amp;sn=b7e6e0aabb77504e920ff4342f44d26f&amp;amp;chksm=ea68e0e3dd1f69f56ac2c97839cf8d043d9b503b5461fe006fa14a9974375a386cd66000aadd&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;一文带你深入了解kafka并提供52道企业常见面试题(1.8W字建议收藏)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247486107&amp;amp;idx=1&amp;amp;sn=b1fb84db241e15defd91eb3a6a3699c9&amp;amp;chksm=ea68e057dd1f69411f72e646bdffd28d0ac1682ede5d613c698d5fff18f1b861de39627d86ea&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;非常全面的DolphinScheduler(海豚调度)安装使用文档&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247485048&amp;amp;idx=1&amp;amp;sn=5fc1219f4947bea9743cd938cec510c7&amp;amp;chksm=ea68ecb4dd1f65a2df364d79272e0e472a394c5b13b5d55d848c89d9498ccb7ea78a933fbdea&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;Hive调优，数据工程师成神之路&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247485039&amp;amp;idx=1&amp;amp;sn=140c3bc720da51765292fe3f5082fe38&amp;amp;chksm=ea68eca3dd1f65b5aef4d6f7ab0c33d3d3033bcc0eead1650be079687e0b4e898562bfe4d25b&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;数据质量那点事&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247485186&amp;amp;idx=1&amp;amp;sn=85fbe5703c56aa2dcfd2980fccbab4f6&amp;amp;chksm=ea68edcedd1f64d8e2d8c3da6b456fcaa4b105f2216a2bddb2393a7380498166225de5e855b4&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;简述元数据管理&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDQzOTk3MQ==&amp;amp;mid=2247484074&amp;amp;idx=1&amp;amp;sn=f1b74ec65a9d0101cafb7741046e29f9&amp;amp;chksm=ea68e866dd1f61703304e4f01fb97d3b1f98aba6ea3fc5a9fb258b4c5e4e317d79edd7f15267&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;简单聊一聊大数据学习之路&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-type=&quot;png&quot; data-ratio=&quot;0.4259501965923984&quot; data-w=&quot;763&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dXCnejTRMLeibmoxSpRXUevnVIz4RyV0AUrglXsIgLOkFMNuffPAh5lZbwOnSoRHbZqT12VyKibm0EmnTicXBSRTg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ed3fe0024eebb6e01861671b4c0579be</guid>
<title>如何优雅地重试</title>
<link>https://toutiao.io/k/z3j5ni9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;背景&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在微服务架构中，一个大系统被拆分成多个小服务，小服务之间大量 RPC 调用，经常可能因为网络抖动等原因导致 RPC 调用失败，这时候使用重试机制可以提高请求的最终成功率，减少故障影响，让系统运行更稳定。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.394150417827298&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6HssI2ye26323D6xZDhXhDPfAVEIwB3MBMBkZcSqoQo0dCnXe0nZh2juA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;718&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;重试的风险&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重试能够提高服务稳定性，但是一般情况下大家都不会轻易去重试，或者说不敢重试，主要是因为重试有放大故障的风险。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，重试会加大直接下游的负载。如下图，假设 A 服务调用 B 服务，重试次数设置为 r（包括首次请求），当 B 高负载时很可能调用不成功，这时 A 调用失败重试 B ，B 服务的被调用量快速增大，最坏情况下可能放大到 r 倍，不仅不能请求成功，还可能导致 B 的负载继续升高，甚至直接打挂。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6390977443609023&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6HssqXInicaFiaakXwowB7CJvpLwEVCIEibpPZ9NRUyTUVmBDwX63lWPibGRA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1064&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更可怕的是，重试还会存在链路放大的效应，结合下图说明一下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0843023255813953&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6HsEIk1fd3JibpSiaavdNEWpfyOGW1le1hzLg2PhQQ2QVlZ92DUGHEtowyA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;688&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设现在场景是 Backend A 调用 Backend B，Backend B 调用 DB Frontend，均设置重试次数为 3 。如果 Backend B 调用 DB Frontend，请求 3 次都失败了，这时 Backend B 会给 Backend A 返回失败。但是 Backend A 也有重试的逻辑，Backend A 重试 Backend B 三次，每一次 Backend B 都会请求 DB Frontend 3 次，这样算起来，DB Frontend 就会被请求了 9 次，实际是指数级扩大。假设正常访问量是 n，链路一共有 m 层，每层重试次数为 r，则最后一层受到的访问量最大，为 n * r ^ (m - 1) 。这种指数放大的效应很可怕，可能导致链路上多层都被打挂，整个系统雪崩。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;重试的使用成本&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外使用重试的成本也比较高。之前在字节跳动的内部框架和服务治理平台中都没有支持重试，在一些很需要重试的业务场景下（比如调用一些第三方业务经常失败），业务方可能用简单 for 循环来实现，基本不会考虑重试的放大效应，这样很不安全，公司内部出现过多次因为重试而导致的事故，且出事故的时候还需要修改代码上线才能关闭重试，导致事故恢复也不迅速。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外也有一些业务使用开源的重试组件，这些组件通常会考虑对直接下游的保护，但不会考虑链路级别的重试放大，另外需要业务方修改 RPC 调用代码才能使用，对业务代码入侵较多，而且也是静态配置，需要修改配置时都必须重新上线。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于以上的背景，为了让业务方能够灵活安全的使用重试，我们字节跳动直播中台团队设计和实现了一个重试治理组件，具有以下优点：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;能够在链路级别防重试风暴。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;保证易用性，业务接入成本小。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;具有灵活性，能够动态调整配置。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面介绍具体的实现方案。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;重试治理&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;动态配置&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何让业务方简单接入是首先要解决的问题。如果还是普通组件库的方式，依旧免不了要大量入侵用户代码，且很难动态调整。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;字节跳动的 Golang 开发框架支持中间件 (Milddleware) 模式，可以注册多个自定义 Middleware 并依次递归调用，通常是用于完成打印日志、上报监控等非业务逻辑，能够有效将业务和非业务代码功能进行解耦。因此我们决定使用 Middleware 的方式来实现重试功能，定义一个 Middleware 并在内部实现对 RPC 的重复调用，把重试的配置信息用字节跳动的分布式配置存储中心存储，这样 Middleware 中能够读取配置中心的配置并进行重试，对用户来说不需要修改调用 RPC 的代码，而只需要在服务中引入一个全局的 Middleware 即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下面的整体架构图所示，我们提供配置的网页和后台，用户能够在专门进行服务治理的页面上很方便的对 RPC 进行配置修改并自动生效，内部的实现逻辑对用户透明，对业务代码无入侵。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5860215053763441&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6Hsd67HiaMHqtyViaqRhOt0sd6PrPCXwGC735FeYMfwQ9aaRbVIAv3uAVDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1488&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置的维度按照字节跳动的 RPC 调用特点，选定 [调用方服务，调用方集群，被调用服务， 被调用方法] 为一个元组，按照元组来进行配置。Middleware 中封装了读取配置的方法，在 RPC 调用的时候会自动读取并生效。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种 Middleware 的方式能够让业务方很容易接入，相对于之前普通组件库的方式要方便很多，并且一次接入以后就具有动态配置的能力，可能很方便地调整或者关闭重试配置。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;退避策略&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;确定了接入方式以后就可以开始实现重试组件的具体功能，一个重试组件所包含的基本功能中，除了重试次数和总延时这样的基础配置外，还需要有退避策略。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于一些暂时性的错误，如网络抖动等，可能立即重试还是会失败，通常等待一小会儿再重试的话成功率会较高，并且也可能打散上游重试的时间，较少因为同时都重试而导致的下游瞬间流量高峰。决定等待多久之后再重试的方法叫做退避策略，我们实现了常见的退避策略，如：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;指数退避：连续重试时，每次等待时间都是前一次的倍数。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;防止 retry storm&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何安全重试，防止 retry storm 是我们面临的最大的难题。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;限制单点重试&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先要在单点进行限制，一个服务不能不受限制的重试下游，很容易造成下游被打挂。除了限制用户设定的重试次数上限外，更重要的是限制重试请求的成功率。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现的方案很简单，基于断路器的思想，限制 请求失败/请求成功 的比率，给重试增加熔断功能。我们采用了常见的滑动窗口的方法来实现，如下图，内存中为每一类 RPC 调用维护一个滑动窗口，比如窗口分 10 个 bucket ，每个 bucket 里面记录了 1s 内 RPC 的请求结果数据（成功、失败）。新的一秒到来时，生成新的 bucket ，并淘汰最早的一个 bucket ，只维持 10s 的数据。在新请求这个 RPC 失败时，根据前 10s 内的 失败/成功 是否超过阈值来判断是否可以重试。默认阈值是 0.1 ，即下游最多承受 1.1 倍的 QPS ，用户可以根据需要自行调整熔断开关和阈值。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.30997304582210244&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6Hsakf79NO6z2diaLiaoyxfbV6q2erSaKo2Wy9jpVqJKzOC8D4u7UOP9ZVQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1484&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;限制链路重试&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面说过在多级链路中如果每层都配置重试可能导致调用量指数级扩大，虽然有了重试熔断之后，重试不再是指数增长(每一单节点重试扩大限制了 1.1 倍)，但还是会随着链路的级数增长而扩大调用次数，因此还是需要从链路层面来考虑重试的安全性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;链路层面的防重试风暴的核心是限制每层都发生重试，理想情况下只有最下一层发生重试。Google SRE 中指出了 Google 内部使用特殊错误码的方式来实现：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;统一约定一个特殊的 status code ，它表示：调用失败，但别重试。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;任何一级重试失败后，生成该 status code 并返回给上层。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;上层收到该 status code 后停止对这个下游的重试，并将错误码再传给自己的上层。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式理想情况下只有最下一层发生重试，它的上游收到错误码后都不会重试，链路整体放大倍数也就是 r 倍(单层的重试次数)。但是这种策略依赖于业务方传递错误码，对业务代码有一定入侵，而且通常业务方的代码差异很大，调用 RPC 的方式和场景也各不相同，需要业务方配合进行大量改造，很可能因为漏改等原因导致没有把从下游拿到的错误码传递给上游。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好在字节跳动内部用的 RPC 协议中有扩展字段，我们在 Middleware 中做了很多尝试，封装了错误码处理和传递的逻辑，在 RPC 的 Response 扩展字段中传递错误码标识 nomore_retry ，它告诉上游不要再重试了。Middleware 完成错误码的生成、识别、传递等整个生命周期的管理，不需要业务方修改本身的 RPC 逻辑，错误码的方案对业务来说是透明的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2901849217638691&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6HsJL6iaLicyRx74t9tZyicz8RpMicmELKnb6wX61icE7mV5OOVGcUP2E05Bgw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1406&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在链路中，推进每层都接入重试组件，这样每一层都可以通过识别这个标志位来停止重试，并逐层往上传递，上层也都停止重试，做到链路层面的防护，达到“只有最靠近错误发生的那一层才重试”的效果。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;超时处理&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在测试错误码上传的方案时，我们发现超时的情况可能导致传递错误码的方案失效。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于 A -&amp;gt; B -&amp;gt; C 的场景，假设 B -&amp;gt; C 超时，B 重试请求 C ，这时候很可能 A -&amp;gt; B 也超时了，所以 A 没有拿到 B 返回的错误码，而是也会重试 B , 这个时候虽然 B 重试 C 且生成了重试失败的错误码，但是却不能再传递给 A 。这种情况下，A 还是会重试 B ，如果链路中每一层都超时，那么还是会出现链路指数扩大的效应。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此为了处理这种情况，除了下游传递重试错误标志以外，我们还实现了“对重试请求不重试”的方案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于重试的请求，我们在 Request 中打上一个特殊的 retry flag ，在上面 A -&amp;gt; B -&amp;gt; C 的链路，当 B 收到 A 的请求时会先读取这个 flag 判断这个请求是不是重试请求，如果是，那它调用 C 即使失败也不会重试；否则调用 C 失败后会重试 C 。同时 B 也会把这个 retry flag 下传，它发出的请求也会有这个标志，它的下游也不会再对这个请求重试。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.29457364341085274&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6Hsd48PXLaS0LhvaN9mPftcTuQfcHTS02fGPwW3Q7pK2heZyRne9eq3Qg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1548&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样即使 A 因为超时而拿不到 B 的返回，对 B 发出重试请求后，B 能感知到并且不会对 C 重试，这样 A 最多请求 r 次，B 最多请求 r + r - 1，如果后面还有更下层次的话，C 最多请求 r + r + r - 2 次， 第 i 层最多请求 i * r - (i-1) 次，最坏情况下是倍数增长，不是指数增长了。加上实际还有重试熔断的限制，增长的幅度要小很多。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过重试熔断来限制单点的放大倍数，通过重试错误标志链路回传的方式来保证只有最下层发生重试，又通过重试请求 flag 链路下传的方式来保证对重试请求不重试，多种控制策略结合，可以有效地较少重试放大效应。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;超时场景优化&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分布式系统中，RPC 请求的结果有三种状态：成功、失败、超时，其中最难处理的就是超时的情况。但是超时往往又是最经常发生的那一个，我们统计了字节跳动直播业务线上一些重要服务的 RPC 错误分布，发现占比最高的就是超时错误，怕什么偏来什么。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在超时重试的场景中，虽然给重试请求添加 retry flag 能防止指数扩大，但是却不能提高请求成功率。如下图，假如 A 和 B 的超时时间都是 1000ms ，当 C 负载很高导致 B 访问 C 超时，这时 B 会重试 C ，但是时间已经超过了 1000ms ，时间 A 这里也超时了并且断开了和 B 的连接，所以 B 这次重试 C 不管是否成功都是无用功，从 A 的视角看，本次请求已经失败了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.233270794246404&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6HsyNv0Wsu762VraGckuszRuwibZPsNgibWa9RiasQgsIlC2uiazEjnXfK1qA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1599&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况的本质原因是因为链路上的超时时间设置得不合理，上游和下游的超时时间设置的一样，甚至上游的超时时间比下游还要短。在实际情况中业务一般都没有专门配置过 RPC 的超时时间，所以可能上下游都是默认的超时，时长是一样的。为了应对这种情况，我们需要有一个机制来优化超时情况下的稳定性，并减少无用的重试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图，正常重试的场景是等拿到 Resp1 (或者拿到超时结果) 后再发起第二次请求，整体耗时是 t1 + t2 。我们分析下，service A 在发出去 Req1 之后可能等待很长的时间，比如 1s ，但是这个请求的 pct99 或者 pct999 可能通常只有 100ms 以内，如果超过了 100ms ，有很大概率是这次访问最终会超时，能不能不要傻等，而是提前重试呢？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.99860529986053&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6HsbVheWa9v6nBYJID0hDLjckjQcsjnJlMZOKUicjFvApTmkKUgoWiafJxg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;717&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于这种思想，我们引入并实现了 Backup Requests 的方案。如下图，我们预先设定一个阈值 t3（比超时时间小，通常建议是 RPC 请求延时的 pct99 ），当 Req1 发出去后超过 t3 时间都没有返回，那我们直接发起重试请求 Req2 ，这样相当于同时有两个请求运行。然后等待请求返回，只要 Resp1 或者 Resp2 任意一个返回成功的结果，就可以立即结束这次请求，这样整体的耗时就是 t4 ，它表示从第一个请求发出到第一个成功结果返回之间的时间，相比于等待超时后再发出请求，这种机制能大大减少整体延时。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9559412550066756&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6HsKibLm9v6Rr1mVuRAbYWvgvc2GPOnoaibg5CrQicxIMLGew7a9mpxR2JZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;749&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实际上 Backup Requests 是一种用访问量来换成功率 (或者说低延时) 的思想，当然我们会控制它的访问量增大比率，在发起重试之前，会为第一次的请求记录一次失败，并检查当前失败率是否超过了熔断阈值，这样整体的访问比率还是会在控制之内。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;结合 DDL&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Backup Requests 的思路能在缩短整体请求延时的同时减少一部分的无效请求，但不是所有业务场景下都适合配置 Backup Requests ，因此我们又结合了 DDL 来控制无效重试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDL 是“ Deadline Request 调用链超时”的简称，我们知道 TCP/IP 协议中的 TTL 用于判断数据包在网络中的时间是否太长而应被丢弃，DDL 与之类似，它是一种全链路式的调用超时，可以用来判断当前的 RPC 请求是否还需要继续下去。如下图，字节跳动的基础团队已经实现了 DDL 功能，在 RPC 请求调用链中会带上超时时间，并且每经过一层就减去该层处理的时间，如果剩下的时间已经小于等于 0 ，则可以不需要再请求下游，直接返回失败即可。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2694533762057878&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5EcwYhllQOjMxYqia0LrjdJ8O4qYsf6Hs0G78VZloBba0LL8ic1CHc1P04cplQwg9nmTS6NBmq3t3OCJMkOlLibDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1555&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDL 的方式能有效减少对下游的无效调用，我们在重试治理中也结合了 DDL 的数据，在每一次发起重试前都会判断 DDL 的剩余值是否还大于 0 ，如果已经不满足条件了，那也就没必要对下游重试，这样能做到最大限度的减少无用的重试。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;实际的链路放大效应&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前说的链路指数放大是理想情况下的分析，实际的情况要复杂很多，因为有很多影响因素：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;策略&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;重试熔断&lt;/td&gt;&lt;td&gt;请求失败 / 成功 &amp;gt; 0.1 时停止重试&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;链路上传错误标志&lt;/td&gt;&lt;td&gt;下层重试失败后上传错误标志，上层不再重试&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;链路下传重试标志&lt;/td&gt;&lt;td&gt;重试请求特殊标记，下层对重试请求不会重试&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;DDL&lt;/td&gt;&lt;td&gt;当剩余时间不够时不再发起重试请求&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;框架熔断&lt;/td&gt;&lt;td&gt;微服务框架本身熔断、过载保护等机制也会影响重试效果&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;各种因素综合下来，最终实际方法情况不是一个简单的计算公式能说明，我们构造了多层调用链路，在线上实际测试和记录了在不同错误类型、不同错误率的情况下使用重试治理组件的效果，发现接入重试治理组件后能够在链路层面有效的控制重试&lt;span&gt;放大倍数&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;大&lt;/span&gt;&lt;span&gt;幅减少重试导致系统雪崩的概率。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上所述，基于服务治理的思想我们开发了重试治理的功能，支持动态配置，接入方式基本无需入侵业务代码，并使用多种策略结合的方式在链路层面控制重试放大效应，兼顾易用性、灵活性、安全性，在字节跳动内部已经有包括直播在内的很多服务接入使用并上线验证，对提高服务本身稳定性有良好的效果。目前方案已经被验证并在字节跳动直播等业务推广，后续将为更多的字节跳动业务服务。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;加入我们&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们是字节跳动跳动直播中台团队，负责旗下抖音、抖音火山版、西瓜视频、今日头条等各 APP 的直播业务的基础服务研发，业务快速发展，用户群体巨大。如果你对技术充满热情，欢迎加入字节跳动直播中台团队，和我们一同解决各种技术难题。目前我们在北京、深圳、杭州等地均有招聘需求，内推可以联系邮件：&lt;span&gt;&lt;strong&gt; tech@bytedance.com&lt;/strong&gt; &lt;/span&gt;&lt;span&gt;； &lt;/span&gt;邮件标题：&lt;span&gt; &lt;span&gt;&lt;strong&gt;姓&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;名 - 工作年限 - 直播 - 平台 &lt;/strong&gt;&lt;/span&gt;。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>15555f3d314b903a2e862883b6e608b7</guid>
<title>CTO 们邀请你加入码农周刊 VIP，升职加薪不再难！</title>
<link>https://toutiao.io/k/z9xjxc0</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;码农周刊 VIP 新年特惠&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;原价 365 元/年&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;，现价仅需 108 元！&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;全年 52 期「VIP 会员专属邮件周报」&lt;br/&gt;只限 VIP 会员加入的交流圈子&lt;br/&gt;大厂「内推机会」&lt;br/&gt;N 多福利，你值得拥有！&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;CTO 们邀请你加入码农周刊 VIP，升职加薪不再难！&lt;br/&gt;↓↓↓&lt;/strong&gt;&lt;strong/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;31&quot; data-cropselx2=&quot;291&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;350&quot; data-ratio=&quot;1.0857487922705313&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNav9LRTqibic3sUoh5tv76OXCpNTWbZ0gCYsFDShjwfRVvM157WDel2cr2dy5ghjxDCCwRc2Mu8bgehnA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;828&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;「码农周刊 VIP 会员」是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;简介版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;码农周刊 VIP 会员 = 全年 52 期「VIP 会员专属邮件周报」 + 只限 VIP 会员加入的交流圈子 + 大厂「内推机会」 + N 多福利&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;详细版&lt;/span&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点击「阅读原文」即可查看详细介绍&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;CTO 们邀请你加入码农周刊 VIP，升职加薪不再难！&lt;br/&gt;↓↓↓&lt;/strong&gt;&lt;strong/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;31&quot; data-cropselx2=&quot;291&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;350&quot; data-ratio=&quot;1.0857487922705313&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNav9LRTqibic3sUoh5tv76OXCpNTWbZ0gCYsFDShjwfRVvM157WDel2cr2dy5ghjxDCCwRc2Mu8bgehnA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;828&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3ce1ac70e452eda94cc89469e628a2d6</guid>
<title>软件架构基础（一）：架构师的 8 大核心能力</title>
<link>https://toutiao.io/k/mk9kqnq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;strong data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(0, 0, 0)&quot; data-style=&quot;font-size: medium; white-space: normal; caret-color: rgb(52, 73, 94); max-width: 100%; color: rgb(0, 0, 0); font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; text-align: left; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__1&quot; data-darkmode-color-16094149065186=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(0, 0, 0)&quot;&gt;&lt;span data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(136, 136, 136)&quot; data-darkmode-color-16094149065186=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(136, 136, 136)&quot;&gt;&lt;span data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(217, 33, 66)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(217, 33, 66)&quot; data-darkmode-color-16094149065186=&quot;rgb(217, 33, 66)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(217, 33, 66)&quot;&gt;▲ &lt;/span&gt;&lt;span data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(2, 30, 170)&quot; data-style=&quot;max-width: 100%; color: rgb(2, 30, 170); text-align: center; font-size: 11px; letter-spacing: 1px; visibility: visible;&quot; class=&quot;js_darkmode__2&quot; data-darkmode-color-16094149065186=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(2, 30, 170)&quot;&gt;点击上方&quot;多颗糖&quot;&lt;/span&gt;&lt;span data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(62, 62, 62)&quot; data-style=&quot;max-width: 100%; color: rgb(62, 62, 62); text-align: center; font-size: 11px; letter-spacing: 1px; visibility: visible;&quot; class=&quot;js_darkmode__3&quot; data-darkmode-color-16094149065186=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(62, 62, 62)&quot;&gt;关注公众号&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;《软件架构基础（Fundamentals of Software Architecture）》被誉为和《设计数据密集型应用》一样经典的后端书籍，架构师的入门指南。本篇为该书第一章的读书笔记，2021 年第一个目标就是和大家一起读完这本书。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.3226600985221675&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA1sLqkl0nicPpFFBzwPJGIhB7Jv4gHI8AQBGRolrSlMMhNLvV32cmZA51czvSH8fvIKDFFEfibRexMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;812&quot;/&gt;&lt;/p&gt;&lt;p&gt;如今，全球范围内“架构师”这一头衔炒得十分火热，但没有真正的指南来帮助开发人员成为软件架构师。&lt;/p&gt;&lt;p&gt;这本书主要有三部分内容：基础、架构风格、技术和软技能。基础部分是关于软件体系结构的一般概念；架构风格部分介绍了不同的架构风格，并以一些架构特征标准进行评价；技术和软技能部分涵盖了很多好的概念，包括做出健康的架构决策、风险分析技术、演讲能力、管理团队关系、谈判、架构师职业规划等。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;架构就是关于重要的东西......不管那是什么。—— Ralph Johnson&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;1. 什么是软件架构&lt;/h2&gt;&lt;p&gt;学习架构就像学习艺术一样，读者必须要在特定的背景下去理解它。&lt;/p&gt;&lt;p&gt;在一个动态系统中，不存在一劳永逸的解决方案。&lt;/p&gt;&lt;p&gt;学习架构时，必须放在上下文中理解。架构师做的许多决定都是基于他们所处的实际情况。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;例如，在 20 世纪末的主要目标是有效地利用共享资源，因为当时所有的基础设施都是昂贵的商业化产品：操作系统、服务器和数据库等等。如果你在 2002 年告诉主管，“我有一个革命性的架构好主意，每个服务都运行在自己隔离的机器上，有自己的专用数据库……（即描述今天的微服务架构）所以，我需要 50 个 Windows 的许可证，另外 30 个服务器许可证，以及至少 50 个数据库许可证。”在 2002 年想构建这样的微服务架构成本之高难以想象。然而这几年，随着开源运动的兴起，以及 DevOps 的出现，我们可以合理地构建一个如上所述的架构。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;整个行业都在努力精确定义“软件架构”，有些称为系统的蓝图，有些定义为开发的路线图。本书关于架构的定义主要从四个方面：&lt;/p&gt;&lt;h4&gt;&lt;span&gt;系统的结构指的是系统实现架构风格的类型（如微服务、分层或微内核）。但仅仅通过结构来描述一个架构，并不能完全阐明一个架构。&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6964924838940587&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA1sLqkl0nicPpFFBzwPJGIhBtCQv2FHH8A6vamHZ2QefZNwC81bWiagAsaeh6ZiaGQQV13N54JYOhl4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1397&quot;/&gt;&lt;/p&gt;&lt;p&gt;￼&lt;/p&gt;&lt;h4&gt;&lt;span&gt;架构特性多以 &quot;&lt;em&gt;-ility&lt;/em&gt;&quot; 结尾（例如 Availability、Scalability）&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6964924838940587&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA1sLqkl0nicPpFFBzwPJGIhBTlkT7LCZeO3Z7oYrmvVjQ3eMMMeKVEnW2LRuLE276F4x7hjHcwIVEw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1397&quot;/&gt;&lt;/p&gt;&lt;p&gt;￼&lt;/p&gt;&lt;h4&gt;&lt;span&gt;架构决策定义了系统应该如何构建的规则。例如，架构师可能会做出一个架构决策，即在分层架构中只有业务层和服务层可以访问数据库（见图），限制表现层直接调用数据库。架构决策形成了系统的约束，并指导开发团队什么是允许的，什么是不允许的。&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7050823192555477&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA1sLqkl0nicPpFFBzwPJGIhBfBo6ZbhHUk7MEmKf8GFa46NR2XxKdFmmWjDnicVdyA0McNOSyRN8a7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1397&quot;/&gt;&lt;/p&gt;&lt;p&gt;￼&lt;/p&gt;&lt;h4&gt;&lt;span&gt;设计原则与架构决策的不同之处在于，设计原则是一个指导方针，而不是一个硬性规定。例如，图示的设计原则指出，开发团队应该在微服务架构中的服务之间传递异步消息来提高性能。一个架构决策永远不可能涵盖服务之间通信的每一个条件和选项，设计原则为首选方法（在本例中，异步消息传递）提供指导，允许开发人员在特定情况下选择更合适的通信协议（如 REST 或 gRPC）。&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6964924838940587&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA1sLqkl0nicPpFFBzwPJGIhBVjS7UVDeyUxohJFdVrMK50jISI59tibmArclDTkcn9NktyZYwtibW1Ng/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1397&quot;/&gt;&lt;/p&gt;&lt;p&gt;￼&lt;/p&gt;&lt;h2&gt;2. 对架构师的 8 个期待&lt;/h2&gt;&lt;h3&gt;2.1 做出架构决定&lt;/h3&gt;&lt;p&gt;架构师应确定架构和设计原则，用于指导团队、部门或整个企业的技术决策。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;架构师应该指导而不是指定技术选择&lt;/strong&gt;。例如，架构师应该决定开发团队使用基于响应式 (Reactive) 的框架进行开发，从而指导开发团队在 Angular、Elm、React.js、Vue 或其他任何基于响应式的 Web 框架之间做出选择。&lt;/p&gt;&lt;p&gt;架构师偶尔需要做出特定的技术决策，以保留特定的架构特性，如可扩展性、性能或可用性。&lt;/p&gt;&lt;p&gt;架构师经常为找到正确的界线而苦恼。&lt;/p&gt;&lt;h3&gt;2.2 持续分析架构&lt;/h3&gt;&lt;p&gt;多数架构都会经历结构性衰变，当开发人员进行编码或设计变更时，会影响到所需的架构特性，如性能、可用性和可扩展性。架构师需要评估三年或更长时间前定义的架构在今天的可行性。&lt;/p&gt;&lt;p&gt;另一方面，架构师还常常忘记测试和发布环境。敏捷性有很大的好处，如果团队需要几周的时间来测试变更，而发布又需要几个月的时间，那么架构师就无法实现整体架构的敏捷性。&lt;/p&gt;&lt;h3&gt;2.3 紧跟最新趋势&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;架构师要跟上最新的技术和行业趋势。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;开发人员必须掌握他们每天使用的最新技术，以保持代码能力(并保住一份工作！)。架构师有一个更关键的要求，就是要掌握最新的技术和行业趋势。架构师所做的决定往往是长期的，难以改变的，了解和跟踪关键趋势有助于架构师为未来做好准备，做出正确的决定。&lt;/p&gt;&lt;h3&gt;2.4 确保遵守各项决定&lt;/h3&gt;&lt;p&gt;架构师要不断验证开发团队是否遵循架构师定义、记录和传达的架构决策和设计原则。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;考虑这样的场景：架构师做出一个决定，在分层架构中限制对数据库的访问，只限于业务层和服务层（而不是表现层）。这意味着表现层必须经过架构的所有层才能进行最简单的数据库调用。用户界面开发人员可能不同意这个决定，出于性能考虑而直接访问数据库。然而，架构师做出这个架构决策是有特定原因的：控制变化。通过保持各层独立，可以在不影响表现层的情况下进行数据库变更。如果不确保架构决策的合规性，就会发生类似这样的违规行为，架构将无法满足所需的架构特性，应用程序或系统将无法按预期工作。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;2.5 多样化的接触和经验&lt;/h3&gt;&lt;p&gt;架构师要接触多种多样的技术、框架、平台和环境。&lt;/p&gt;&lt;p&gt;现在的大多数环境都是异构的，一个架构师至少应该知道如何与多个系统和服务对接，不管这些系统或服务是用什么语言、平台和技术编写的。&lt;/p&gt;&lt;p&gt;最好方法之一是让架构师延伸自己的舒适区，只关注单一技术或平台是一个安全的避风港，一个好的软件架构师应该积极寻找机会，以获得多种语言、平台和技术的经验，关注技术广度而不只是技术深度。&lt;/p&gt;&lt;h3&gt;2.6 具备业务领域知识&lt;/h3&gt;&lt;p&gt;一个架构师要有一定的业务领域专业知识。&lt;/p&gt;&lt;p&gt;有效的软件架构师不仅了解技术，还了解业务问题。&lt;strong&gt;如果没有业务领域的知识，就很难理解业务问题、目标和需求，很难设计出满足业务需求的有效架构。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;最成功的架构师是那些拥有广泛的、实践性的技术知识，再加上对某一特定领域的深刻了解的人。这些软件架构师能够使用这些利益相关者所能理解的领域知识和语言，与主管和业务用户进行有效的沟通。&lt;/p&gt;&lt;h3&gt;2.7 具备人际交往能力&lt;/h3&gt;&lt;p&gt;架构师应具备卓越的人际交往能力，包括团队合作、促进和领导能力。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;拥有卓越的领导力和人际交往能力是大多数开发人员和架构师难以企及的期望&lt;/strong&gt;。作为技术专家，开发人员和架构师喜欢解决技术问题，而不是人的问题。&lt;/p&gt;&lt;p&gt;架构师不仅要为团队提供技术指导，还要带领开发团队完成架构的实施。无论架构师的角色和头衔是什么，领导能力是成为一个软件架构师不可或缺的。&lt;/p&gt;&lt;h3&gt;2.8 理解和驾驭企业政治&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;架构师要了解企业的政治氛围，并能驾驭政治。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在一本关于软件架构的书中谈论谈判和驾驭办公室政治，可能看起来比较奇怪。主要的一点是，&lt;strong&gt;几乎架构师的每一个决策都会受到挑战&lt;/strong&gt;。由于涉及到成本或工作量（时间）的增加，架构决策会受到产品、项目经理、开发和业务利益相关者的挑战，因为他们觉得自己的方法更好。无论在哪种情况下，架构师都必须驾驭公司的政治，并应用基本的谈判技巧来获得批准。&lt;/p&gt;&lt;p&gt;架构师不像开发，可以自行设计代码结构、类、设计模式甚至是语言而不需要批准，架构师做出广泛而重要的决策，必须为几乎每一个决策进行论证和争取。&lt;/p&gt;&lt;h2&gt;3. 架构师和其它的交集&lt;/h2&gt;&lt;h3&gt;3.1 工程实践&lt;/h3&gt;&lt;p&gt;将软件开发过程与软件工程实践分开是有益的。所谓过程，我们指的是如何组建和管理团队，如何进行会议以及工作流组织，指的是人们如何组织和互动的机制。而&lt;strong&gt;软件工程实践则是指那些已经说明了的、可重复效益的与过程无关的实践。&lt;/strong&gt;例如，持续集成是一种经过验证的工程实践，它不依赖于特定的过程。&lt;/p&gt;&lt;p&gt;注重工程实践很重要：&lt;/p&gt;&lt;p&gt;unknown unknowns 是软件系统的克星：没有人知道会出现的东西，却又意外地出现了。例如：某个意外的 bug 出现。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;所有的架构都会因为 unknown unknowns 而变成迭代式的，敏捷只是认识到了这一点，并且更早去做了。（All architectures become iterative because of unknown unknowns, Agile just recognizes this and does it sooner.）&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;迭代流程更符合软件架构的本质，试图使用像瀑布这样的陈旧流程来构建微服务这样的现代系统的团队会发现，一个陈旧的流程忽视了软件如何结合在一起的现实，会产生大量的摩擦。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.54177897574124&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA1sLqkl0nicPpFFBzwPJGIhBKiaGewtzqYY6nq5aibPYnrfV4gPsK1xsTiahKjQlvRUXXK8SMCono5EUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;742&quot;/&gt;&lt;/p&gt;&lt;p&gt;￼&lt;/p&gt;&lt;p&gt;如图所示，&lt;strong&gt;软件系统的架构由需求和所有其他架构特征组成&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;采用敏捷工程实践，如持续集成、自动机器供应和类似的实践，使构建弹性架构变得更容易。这也说明了架构与工程实践是如何相互交织在一起的。&lt;/p&gt;&lt;h3&gt;3.2 运维/DevOps&lt;/h3&gt;&lt;p&gt;架构和相关领域之间最近最明显的交集发生在 DevOps 的出现。许多公司认为运维是与软件开发是分离的，在 20 世纪 90 年代和 2000 年代设计的架构都假设架构师无法控制运维，架构师们被迫围绕引入的限制进行防御性设计。因此，他们构建了能够在内部处理规模、性能、弹性和其他一系列能力的架构。这种设计的副作用是大大增加了架构的复杂性。&lt;/p&gt;&lt;p&gt;微服务风格架构的构建者们意识到，通过在架构和运维之间建立一个联络点，架构师可以简化设计，依靠运维来处理他们最擅长的事情。因此，意识到资源的挪用导致了意外的复杂性，架构师和运维合作创建了微服务。&lt;/p&gt;&lt;h3&gt;3.3 流程&lt;/h3&gt;&lt;p&gt;软件架构与软件开发过程大多是正交的（相互不可替代的），大多数关于软件架构的书籍都忽略了软件开发过程。例如，在过去的几十年里，由于软件的性质，许多公司都采用了敏捷开发方法。架构师在敏捷项目中得到更快的反馈，这使得架构师可以更积极地进行实验。&lt;/p&gt;&lt;p&gt;所有的架构都会变成迭代式的，这只是时间问题。为此，我们要在整个过程中假设敏捷方法论的基线，并允许适当的例外。例如，许多单体架构因为年龄、政治或其他与软件无关的因素而使用旧流程的情况还是很常见的。&lt;/p&gt;&lt;h3&gt;3.4 数据&lt;/h3&gt;&lt;p&gt;很大一部分严肃的应用程序开发包括外部数据存储，通常采用关系型(或越来越多的 NoSQL)数据库的形式。然而，许多关于软件架构的书籍只对架构的这一重要方面进行了轻描淡写的处理。代码和数据具有共生关系：两者缺一不可。&lt;/p&gt;&lt;h2&gt;4. 软件架构法则&lt;/h2&gt;&lt;p&gt;软件架构第一定律：&lt;br/&gt;&lt;strong&gt;软件架构中的所有东西都是一种权衡。(Everything in software architecture is a trade-off.)&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我们对软件架构的定义超越了结构的范畴，包含了原则、特性等，架构的范围比单纯的结构更广，体现在我们的软件架构第二定律中：&lt;br/&gt;&lt;strong&gt;为什么比怎么做更重要。（Why is more important than how.）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;欢迎关注我的公众号：&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.36484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA2qgPwzomIicebbmoOGzU1IsUWQMb3xr4nLcjtfIy5Zwyia3HTKnIJ8xc9NFkkPBkL8MEAfh3YdNuaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>