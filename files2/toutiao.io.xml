<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>9911d94de47bcb8255070ef46fe7b8c9</guid>
<title>非 VIP 用户下载限速，原来是这么实现的</title>
<link>https://toutiao.io/k/m4uehh8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText css-hnrfcf&quot; options=&quot;[object Object]&quot;&gt;&lt;p&gt;在日常工作之余，二狗子其实还是个隐藏的大触，一手素描画得出神入化，不少看过的小伙伴嗷嗷叫着求分享。为了让更多小粉丝能看到自己的作品，二狗子开发了一个提供有版权的素描稿件的下载网站。&lt;/p&gt;&lt;p&gt;二狗子的小网站，只要是注册用户就可以无限速下载素描稿。这原本是一件好事，但随着访问量的增多，带宽成本成为了二狗子不可承受之重。于是就有小伙伴建议做一个 VIP 服务，让 VIP 全速下载，免费用户稍微限速一点。二狗子觉得这是个很好的办法，于是打开百度找了找具体操作方式。&lt;/p&gt;&lt;p&gt;百度说传统的一些设置，都是在本地设置限制下载速度，如果是需要限制别人从你网站中下载的速度，则要用到 Rewrite 规则。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;什么是 Rewrite 规则?&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;Rewrite 是一种服务器的重写技术，主要的功能就是实现 URL 的跳转，它的正则表达式是基于 Perl 语言。可基于服务器级的(httpd.conf)和目录级的(.htaccess)两种方式。&lt;/p&gt;&lt;p&gt;如果要想用到 Rewrite 模块，必须先安装或加载 Rewrite 模块。方法有两种：一种是编译 apache 的时候就直接安装 Rewrite 模块；另一种是编译 apache 时以 DSO 模式安装 apache，然后再利用源码和 apxs 来安装 Rewrite 模块。&lt;/p&gt;&lt;p&gt;上面两种实现方法，二狗子看得一头雾水，感觉分开来每个字都看得懂，连起来又仿佛天书。无奈的二狗子尝试求助万能的又拍云客服——薇薇小姐姐。&lt;/p&gt;&lt;p&gt;“接入又拍云 CDN 就可以直接使用 Rewrite 功能哦，而且可以直接在控制台进行操作，非常方便。”薇薇小姐姐淡定回答。&lt;/p&gt;&lt;p&gt;好家伙！不愧是二狗子最爱的又拍云，赶快来看看具体使用方法吧。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;又拍云 Rewrite 功能概述&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;又拍云 Rewrite 功能主要是为了帮助用户简化内容分发业务逻辑，提升终端用户访问体验。特色是可以快速部署且配置简单，可极大降低业务实现成本。同时功能强大，涵盖了大部分互联网需求场景，包括：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;通过 URL 改写，可美化网站 URL，提升网站 SEO&lt;/li&gt;&lt;li&gt;为了节省更多访问带宽，限制网站请求下载速度&lt;/li&gt;&lt;li&gt;控制请求 URL 的结构、HTTP 头域等&lt;/li&gt;&lt;li&gt;自定义源站错误页面，提升终端用户体验&lt;/li&gt;&lt;li&gt;限制特定客户端的访问行为，合理进行访问控制&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在使用时，又拍云也根据不同用户需求划分了两种不同的使用方式：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;通用模式：适用于没有开发基础，且对语法规则不熟悉的用户，该模式使用方便快捷。&lt;/li&gt;&lt;li&gt;编程模式：适用于开发者，对相对通用模式来说，编程模式会更灵活，功能会更强大一些，适合对语法规则有深入了解的用户使用。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;为了让通用模式满足更多用户的需求。根据使用场景的不同，又拍云为【通用模式】配备了 7 大功能：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;添加 HTTP 头部（包括请求头和响应头）&lt;/li&gt;&lt;li&gt;删除 HTTP 头部（包括请求头和响应头）&lt;/li&gt;&lt;li&gt;边缘重定向&lt;/li&gt;&lt;li&gt;URL 改写&lt;/li&gt;&lt;li&gt;请求限速&lt;/li&gt;&lt;li&gt;访问控制&lt;/li&gt;&lt;li&gt;自定义错误页面&lt;/li&gt;&lt;/ul&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-ebaa630641ca44aa6ce486d4dc1964ce_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;452&quot; data-rawheight=&quot;390&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-ebaa630641ca44aa6ce486d4dc1964ce_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;452&quot; data-rawheight=&quot;390&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-ebaa630641ca44aa6ce486d4dc1964ce_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-ebaa630641ca44aa6ce486d4dc1964ce_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;Rewrite 使用案例&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;看完了又拍云 Rewrite 功能的介绍，二狗子配置下载限速，具体要怎么做呢。薇薇小姐姐告诉二狗子，通用和编程两种模式下都可以实现，并且一步步亲手示范怎么操作。&lt;/p&gt;&lt;p&gt;通用模式：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-39348f3bb113268f50dd79b2b8ba3e66_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;339&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-39348f3bb113268f50dd79b2b8ba3e66_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;339&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-39348f3bb113268f50dd79b2b8ba3e66_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-39348f3bb113268f50dd79b2b8ba3e66_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;编程模式：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-95442eec73c1a74a8f9a4dd60045090a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;302&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-95442eec73c1a74a8f9a4dd60045090a_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;302&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-95442eec73c1a74a8f9a4dd60045090a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-95442eec73c1a74a8f9a4dd60045090a_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;这个规则表示，当访问的 URL 匹配到这个域名的时候就在文件加载 1k 后开始限速，限速值为：60k。&lt;/p&gt;&lt;p&gt;设置完成后二狗子马上测试了一下，设置就生效，立刻完成了限速。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-ce0e7ef20434998c493c7a8131f70897_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;159&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-ce0e7ef20434998c493c7a8131f70897_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;159&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-ce0e7ef20434998c493c7a8131f70897_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-ce0e7ef20434998c493c7a8131f70897_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;薇薇还告诉二狗子，除了进行域名限速，也可以对指定类型的文件进行下载限速，比如：指定 zip 文件下载限速。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-8df7aeaebb11d6e56d4040e7648480a7_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;354&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-8df7aeaebb11d6e56d4040e7648480a7_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;354&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-8df7aeaebb11d6e56d4040e7648480a7_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-8df7aeaebb11d6e56d4040e7648480a7_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;完成这个设置后，当访问的 URL 匹配到这个域名，并且符合这个后缀的文件，就开始限速。&lt;/p&gt;&lt;p&gt;符合限制文件的效果：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-ee40d7b1c0417927bfe5889afe599c5b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;203&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-ee40d7b1c0417927bfe5889afe599c5b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;203&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-ee40d7b1c0417927bfe5889afe599c5b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-ee40d7b1c0417927bfe5889afe599c5b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;其他文件的效果:&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-700bb3537c4559df35d356224b3c57a5_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;202&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-700bb3537c4559df35d356224b3c57a5_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;202&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-700bb3537c4559df35d356224b3c57a5_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-700bb3537c4559df35d356224b3c57a5_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;当然了也可以进行 URL 改写，例如：当访问一个 URL 需要改写成在后面加上 !lalala 参数。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a72dc875bc79a5c0bd51983faa8c2ebe_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;324&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-a72dc875bc79a5c0bd51983faa8c2ebe_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;512&quot; data-rawheight=&quot;324&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-a72dc875bc79a5c0bd51983faa8c2ebe_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-a72dc875bc79a5c0bd51983faa8c2ebe_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;注：$_URI 表示请求的 URI，不包含参数。这些字段官网都有着详细的解释的哈。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Rewrite 功能还有需要可以花式操作的用法等待大家的体验，大家在使用的时候有不清楚的地方，欢迎随时咨询我们哦~&lt;/p&gt;&lt;p&gt;&lt;b&gt;推荐阅读：&lt;/b&gt;&lt;/p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//www.upyun.com/tech/article/583/%25E5%25A6%2582%25E4%25BD%2595%25E9%2580%2589%25E6%258B%25A9%25E9%2580%2582%25E5%2590%2588%25E8%2587%25AA%25E5%25B7%25B1%25E7%25BD%2591%25E7%25AB%2599%25E7%259A%2584%25E9%2598%25B2%25E7%259B%2597%25E9%2593%25BE.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic2.zhimg.com/v2-56c5b7b098e6252cc7acb7a601428c09_180x120.jpg&quot; data-image-width=&quot;960&quot; data-image-height=&quot;640&quot; data-text=&quot;如何选择适合自己网站的防盗链&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//www.upyun.com/tech/article/584/%25E7%25A7%258B%25E5%25A4%25A9%25E7%259A%2584%25E7%25AC%25AC%25E4%25B8%2580%25E4%25BB%25BD%25E2%2580%259C%25E5%25B9%25B2%25E8%25B4%25A7%25E2%2580%259D%2520I%2520Referer%2520%25E9%2598%25B2%25E7%259B%2597%25E9%2593%25BE%25EF%25BC%258C%25E4%25B8%25BA%25E4%25BB%2580%25E4%25B9%2588%25E5%25B0%2591%25E4%25BA%2586%25E4%25B8%25AA%25E5%25AD%2597%25E6%25AF%258D%2520R%25EF%25BC%259F.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-e195eeff19a5bab920de43f5c0995a40_180x120.jpg&quot; data-image-width=&quot;960&quot; data-image-height=&quot;674&quot; data-text=&quot;秋天的第一份“干货” I Referer 防盗链，为什么少了个字母 R？&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;p/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>fe1760681f8fe20491e2cea14406221f</guid>
<title>基于 K8s 的集群稳定架构</title>
<link>https://toutiao.io/k/h8rg2ec</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;cnblogs_post_body&quot; class=&quot;blogpost-body cnblogs-markdown&quot;&gt;
&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;我司的集群时刻处于崩溃的边缘，通过近三个月的掌握，发现我司的集群不稳定的原因有以下几点：&lt;/p&gt;
&lt;p&gt;1、发版流程不稳定&lt;/p&gt;
&lt;p&gt;2、缺少监控平台【最重要的原因】&lt;/p&gt;
&lt;p&gt;3、缺少日志系统&lt;/p&gt;
&lt;p&gt;4、极度缺少有关操作文档&lt;/p&gt;
&lt;p&gt;5、请求路线不明朗&lt;/p&gt;
&lt;p&gt;总的来看，问题的主要原因是缺少可预知的监控平台，总是等问题出现了才知道。次要的原因是服务器作用不明朗和发版流程的不稳定。&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;解决方案&lt;/h2&gt;
&lt;h3 id=&quot;发版流程不稳定&quot;&gt;发版流程不稳定&lt;/h3&gt;
&lt;p&gt;重构发版流程。业务全面k8s化，构建以kubernetes为核心的ci/cd流程。&lt;/p&gt;
&lt;h4 id=&quot;发版流程&quot;&gt;发版流程&lt;/h4&gt;
&lt;p&gt;有关发版流程如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/1143489/1600418093087-a37b992f-9c63-4528-82f7-9406f8414024.png&quot; alt=&quot;image.png&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;浅析：研发人员提交代码到developer分支(时刻确保developer分支处于最新的代码)，developer分支合并到需要发版环境对应的分支，触发企业微信告警，触发部署在k8s集群的gitlab-runner pod，新启runner pod 执行ci/cd操作。在这个过程中需要有三个步骤：测试用例、打包镜像、更新pod。第一次部署服务在k8s集群环境的时候可能需要：创建namespace、创建imagepullsecret、创建pv(storageclass)、创建deployment（pod controller）、创建svc、创建ingress、等。其中镜像打包推送阿里云仓库和从阿里云仓库下载镜像使用vpc访问，不走公网，无网速限制。流程完毕，runner pod 销毁，gitlab 返回结果。&lt;/p&gt;
&lt;p&gt;需要强调的一点是，在这里的资源资源清单不包含configmap或者secret，牵扯到安全性的问题，不应该出&lt;/p&gt;
&lt;p&gt;现在代码仓库中，我司是使用rancher充当k8s多集群管理平台，上述安全问题在rancher的dashboard中由运维来做的。&lt;/p&gt;
&lt;h4 id=&quot;服务部署逻辑图&quot;&gt;服务部署逻辑图&lt;/h4&gt;
&lt;p&gt;有关服务部署逻辑图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/1143489/1600416637014-b3958417-ae03-482b-8748-da013edf0cee.png&quot; alt=&quot;image.png&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;根据发版流程的浅析，再根据逻辑图可以明确发版流程。在这里看到我司使用的是kong代替nginx，做认证、鉴权、代理。而slb的ip绑定在kong上。0，1，2属于test job；3属于build job；4，5，6，7属于change pod 阶段。并非所有的服务都需要做存储，需要根据实际情况来定，所以需要在kubernetes.sh里写判断。在这里我试图使用一套CI应用与所有的环境，所以需要在kubernetes.sh中用到的判断较多，且.gitlab-ci.yml显得过多。建议是使用一个ci模版，应用于所有的环境，毕竟怎么省事怎么来。还要考虑自己的分支模式，具体参考：&lt;a href=&quot;https://www.cnblogs.com/zisefeizhu/p/13621797.html&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/zisefeizhu/p/13621797.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;缺少监控预警平台&quot;&gt;缺少监控预警平台&lt;/h3&gt;
&lt;p&gt;构建可信赖且符合我司集群环境的联邦监控平台，实现对几个集群环境的同时监控和预故障告警，提前介入。&lt;/p&gt;
&lt;h4 id=&quot;监控预警逻辑图&quot;&gt;监控预警逻辑图&lt;/h4&gt;
&lt;p&gt;有关监控预警逻辑图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/1143489/1600421706485-4360b3ea-d85c-47b7-86e6-d735e84828b9.png&quot; alt=&quot;image.png&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;浅析：总的来说，我这里使用到的监控方案是prometheus➕shell脚本或go脚本➕sentry。使用到的告警方式是企业微信或者企业邮箱。上图三种颜色的线代表三种监控方式需要注意。脚本主要是用来做备份告警、证书告警、抓贼等。prometheus这里采用的是根据prometheus-opertor修改的prometheus资源清单，数据存储在nas上。sentry严格的来讲属于日志收集类的平台，在这里我将其归为监控类，是因为我看中了其收集应用底层代码的崩溃信息的能力，属于业务逻辑监控, 旨在对业务系统运行过程中产生的错误日志进行收集归纳和监控告警。&lt;/p&gt;
&lt;p&gt;注意这里使用的是联邦监控平台，而部署普通的监控平台。&lt;/p&gt;
&lt;h4 id=&quot;联邦监控预警平台逻辑图&quot;&gt;联邦监控预警平台逻辑图&lt;/h4&gt;
&lt;p&gt;多集群联邦监控预警平台逻辑图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/1143489/1600409207552-4fd648d9-96a5-4e4f-8fa0-81ba8ab51978.png&quot; alt=&quot;image.png&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;因为我司有几个k8s集群，如果在每个集群上都部署一套监控预警平台的话，管理起来太过不便，所以这里我采取的策略是使用将各监控预警平台实行一个联邦的策略，使用统一的可视化界面管理。这里我将实现三个级别饿监控：操作系统级、应用程序级、业务级。对于流量的监控可以直接针对kong进行监控，模版7424。&lt;/p&gt;
&lt;h3 id=&quot;缺少日志系统&quot;&gt;缺少日志系统&lt;/h3&gt;
&lt;p&gt;随着业务全面k8s化进程的推进，对于日志系统的需求将更加渴望，k8s的特性是服务的故障日志难以获取。建立可观测的能过滤的日志系统可以降低对故障的分析难度。&lt;/p&gt;
&lt;p&gt;有关日志系统逻辑图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/1143489/1600416773745-5c2f6a58-bdac-4295-a2fd-af50873a16a0.png&quot; alt=&quot;image.png&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;浅析：在业务全面上k8s化后，方便了管理维护，但对于日志的管理难度就适当上升了。我们知道pod的重启是有多因素且不可控的，而每次pod重启都会重新记录日志，即新pod之前的日志是不可见的。当然了有多种方法可以实现日志长存：远端存储日志、本机挂载日志等。出于对可视化、可分析等的考虑，选择使用elasticsearch构建日志收集系统。&lt;/p&gt;
&lt;h3 id=&quot;极度缺少有关操作文档&quot;&gt;极度缺少有关操作文档&lt;/h3&gt;
&lt;p&gt;建立以语雀--&amp;gt; 运维相关资料为中心的文档中心，将有关操作、问题、脚本等详细记录在案，以备随时查看。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/1143489/1605489428820-488240b2-5be7-458c-93a7-d299fd7c0e12.png&quot; alt=&quot;image.png&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;浅析因安全性原因，不便于过多同事查阅。运维的工作比较特殊，安全化、文档化是必须要保障的。我认为不论是运维还是运维开发，书写文档都是必须要掌握的，为己也好，为他也罢。文档可以简写，但必须要含苞核心的步骤。我还是认为运维的每一步操作都应该记录下来。&lt;/p&gt;
&lt;h3 id=&quot;请求路线不明朗&quot;&gt;请求路线不明朗&lt;/h3&gt;
&lt;p&gt;根据集群重构的新思路，重新梳理集群级流量请求路线，构建具备：认证、鉴权、代理、连接、保护、控制、观察等一体的流量管理，有效控制故障爆炸范围。&lt;/p&gt;
&lt;p&gt;请求路线逻辑图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/1143489/1600416834256-384a4aef-89a3-4e16-9241-35090d49d539.png&quot; alt=&quot;image.png&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;浅析：客户访问https://www.cnblogs.com/zisefeizhu 经过kong网关鉴权后进入特定名称空间(通过名称空间区分项目)，因为服务已经拆分为微服务，服务间通信经过istio认证、授权，需要和数据库交互的去找数据库，需要写或者读存储的去找pv，需要转换服务的去找转换服务...... 然后返回响应。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;综上所述，构建以：以kubernetes为核心的ci/cd发版流程、以prometheus为核心的联邦监控预警平台、以elasticsearch为核心的日志收集系统、以语雀为核心的文档管理中心、以kong及istio为核心的南北东西流量一体化服务，可以在高平发，高可靠性上做到很好保障。&lt;/p&gt;
&lt;p&gt;附：总体架构逻辑图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.nlark.com/yuque/0/2020/png/1143489/1600738931195-5c47ddfa-a273-4b13-880c-d14a95c33190.png&quot; alt=&quot;image.png&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;注：请根据箭头和颜色来分析。&lt;/p&gt;
&lt;p&gt;浅析：上图看着似乎过于混乱，静下心来，根据上面的拆分模块一层层分析还是可以看清晰的。这里我用不同颜色的连线代表不同模块的系统，根据箭头走还是蛮清晰的。&lt;/p&gt;
&lt;p&gt;根据我司目前的业务流量，上述功能模块，理论上可以实现集群的维稳。私认为此套方案可以确保业务在k8s集群上稳定的运行一段时间，再有问题就属于代码层面的问题了。这里没有使用到中间件，倒是使用到了缓存redis不过没画出来。我规划在上图搞定后再在日志系统哪里和转换服务哪里增加个中间件kafka或者rq 看情况吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.yuque.com/attachments/yuque/0/2020/drawio/1143489/1600411200868-58438b59-a153-4462-b81d-b9b2bd490e27.drawio&quot; target=&quot;_blank&quot;&gt;📎集群架构稳定架构图.drawio&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>dd6fd007438f796e01aeef7ebb2b212c</guid>
<title>这可能是 8 月 GitHub 最火热的开源项目</title>
<link>https://toutiao.io/k/s122yjk</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;314&quot; data-ratio=&quot;0.50625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/F9T2mRyExghjcSicRMLJjXGtHqapoVZxQazS5bPk1SeqqGMBoAKJicffCNFsF7ruu0foh9oBY9BRCUfNg9rr8kzA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;哈喽，大家好，我是开源君，一个资深的互联网玩家，致力于为大家分享各领域优质开源项目。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天梳理一下 &lt;code&gt;8 月的 Github 热榜项目&lt;/code&gt;，及时挖掘和发现有用的项目，让开源君的朋友们比其他人走的更快。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;JavaScript&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1. Web-Dev-For-Beginners&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/microsoft/Web-Dev-For-Beginners&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是微软提供的一个为期 12 周、24 节课前端开发入门的课程，所有内容都是关于 JavaScript、CSS 和 HTML 基础知识。每节课包括课前和课后的小测验，完成课程的说明，一个解决方案，一个作业等，它在本周收获了约 2,035 个 star，总计 31,933 个 star。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2. freeCodeCamp&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/freeCodeCamp/freeCodeCamp&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目是 freeCodeCamp.org 的开源代码库和免费学习编程的课程。包括全栈 web 开发和机器学习课程等，它在本周收获了约 1,536 个 star，总计 328,386 star。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3. Rubick&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/clouDr-f2e/rubick&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它是基于 electron 的工具箱。Rubick(拉比克) 是 dota 里面的英雄之一，其核心技能是插件化使用其他英雄的技能，用完即走，非常符合这个工具的设计理念，所以取名 Rubick&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4. didact&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/pomber/didact&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目教你从零写一个 React 框架，从而理解 React 内部原理。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;Python&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;5. weiboSpider&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/dataabc/weiboSpider&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个开源项目是用 Python 写的微博爬虫，命令行可以直接启动，对于想实战爬虫项目的朋友很有帮助。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;6. ray&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/ray-project/ray&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目基于 Python 的分布式计算框架，采用动态图计算模型，特别推荐，大家仅需修改极少的的代码，让原本运行在单机的 Python 代码轻松实现分布式计算。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;7.MockingBird&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/babysor/MockingBird&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目还挺有趣的，5 秒内克隆你的声音并生成任意语音内容。把自己的声音录入之后，AI 会识别克隆你的声音，并记录下来，这样你输入其他的文本，这个声音就会把其他的任何文本都可以读出来，支持普通话。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;8.jina&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/jina-ai/jina&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;个项目允许你在短短几分钟内建立由深度学习驱动的搜索即服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/jina-ai/jina&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;个项目允许你在短短几分钟内建立由深度学习驱动的搜索即服务。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;Go&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;9.filebrowser&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/filebrowser/filebrowser&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文件浏览器提供了一个文件管理界面在指定的目录，它可以用来上传，删除，预览，重命名和编辑您的文件。它允许创建多个用户，并且每个用户可以拥有自己的目录。它可以作为一个独立的应用程序，也可以作为一个中间件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;10.learning_tools&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/hwholiday/learning_tools&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实践的 Go 代码集合，包含了 Go 语言实用三方库、微服务、数据库、算法等代码片段，可以帮助初学者学习 Go语言。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;C++&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;11.openpilot&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/commaai/openpilot&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Openpilot 是一个开源驱动辅助系统。目前，openpilot 为越来越多的汽车制造商、车型和车型年份提供自适应巡航控制(ACC)、自动车道对中(ALC)、前向碰撞预警(FCW)和车道偏离预警(LDW)功能。此外，当 openpilot 投入使用时，基于摄像头的驾驶员监控(DM)功能会提醒分心和睡着的驾驶员。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;12.simdjson&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/simdjson/simdjson&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每秒可解析千兆字节的高性能 JSON 解析库，对于前后端开发者都有很大的帮助。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;Java&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;13.lettuce-core&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/lettuce-io/lettuce-core&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目是基于 Netty 实现了非阻塞 I/O，支持同步、异步、集群、哨兵、管道等功能，线程安全的高级 Java Redis 客户端。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;14.leetcode&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/doocs/leetcode&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目虽说是 Java 占大多数，其实是多种语言的 leetcode 题解。包含了:LeetCode《剑指 Offer（第 2 版）》《剑指 Offer（专项突击版）》《程序员面试宝典（第 6 版）》&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;15.novel-plus&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/201206030/novel-plus&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目是一个使用 springBoot 开发的小说平台，是一个很好的项目，可以用来研究。所使用的技术栈如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.1973684210526316&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/F9T2mRyExgialFaQhhia9SKYwlemRwOyHbt1bS8WK86Ribqxz1yD1COecWEicPqfNBODP5WTlUmQIj6vhX3FX0joibA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;684&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;16.webdav-aliyundriver&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/zxbu/webdav-aliyundriver&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目实现了阿里云盘的 webdav 协议，只需要简单的配置一下，就可以让阿里云盘变身为 webdav 协议的文件服务器。基于此，你可以把阿里云盘挂载为 Windows、Linux、Mac 系统的磁盘，可以通过 NAS 系统做文件管理或文件同步，更多玩法等你挖掘。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;17.SpringAll&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/wuyouzhuguli/SpringAll&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目包含Spring Boot、Spring Boot &amp;amp; Shiro、Spring Cloud，Spring Boot &amp;amp; Spring Security &amp;amp; Spring Security OAuth2，可以循序渐进的学习 Spring 全家桶。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;PHP&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;18.icon-workshop&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/zhanghuanchong/icon-workshop&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目能够一键生成多种尺寸的 iOS/Android 应用图标和 APP 启动图，值得学习。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;TypeScript&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;19.micro-app&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/micro-zoe/micro-app&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;micro-app 由京东零售-应用业务产品研发部推出，是一款基于类 WebComponent 进行渲染的微前端框架，不同于目前流行的开源框架，它从组件化的思维实现微前端，旨在降低上手难度、提升工作效率。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;C#&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;20.AduSkin&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址：https://github.com/aduskin/AduSkin&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一款简约漂亮的 WPF UI 库，值得 C# 爱好者研究学习。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是开源指南&lt;code&gt;月榜第 1 期&lt;/code&gt;的所有内容，我们下期见！&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7d790e94490b1969b4f153fc62acf4e5</guid>
<title>Atomic 原子类的实现原理</title>
<link>https://toutiao.io/k/xqomf14</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;线程安全真的是线程的安全吗？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是 Atomic？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;实现一个计数器&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;AtomicInteger 源码分析&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;AtomicLong 和 LongAdder 谁更牛？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;总结&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当我们谈论『线程安全』的时候，肯定都会想到 Atomic 类。不错，Atomic 相关类都是线程安全的，在讲 Atomic 类之前我想再聊聊『线程安全』这个概念。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;线程安全真的是线程的安全吗？&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;初看『线程安全』这几个字，很容易望文生义，这不就是线程的安全吗？其实不是，线程本身没有好坏，没有『安全的线程』和『不安全的线程』之分，俗话说：人之初性本善，线程天生也是纯洁善良的，真正让线程变坏是因为访问的变量的原因，变量对于操作系统来说其实就是内存块，所以绕了这么一大圈，线程安全称为『内存的安全』可能更为贴切。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简而言之，线程访问的内存决定了这个线程是否是安全的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;变量大致可以分为&lt;strong&gt;局部变量&lt;/strong&gt;和&lt;strong&gt;共享变量&lt;/strong&gt;，局部变量对于 JVM 来说是栈空间，大家都背过八股文，栈是线程私有的是非共享的，那自然也是内存安全的；共享变量对于 JVM 来说一般是存在于堆上，堆上的东西是所有线程共享的，如果不加任何限制自然是不安全的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为线程安全这个概念已经深入人心了，所以后面我们还是用线程安全来表达内存安全的含义。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那如何解决这种&lt;code&gt;不安全&lt;/code&gt;呢？方法有很多，比如：加锁、Atomic 原子类等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，咱们今天先来看看&lt;code&gt;Atomic类&lt;/code&gt;。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;什么是 Atomic？&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Java&lt;/code&gt;从&lt;code&gt;JDK1.5&lt;/code&gt;开始提供&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;包，这里包含了多个原子操作类。原子操作类提供了一个简单、高效、安全的方式去更新一个变量。&lt;/p&gt;&lt;img data-ratio=&quot;1.3806228373702423&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EqRLB3cM9QwDgnbqRBpDfYz6JelKET0YLEy1g7Q02zj99wAACrCGvm5YrhYMVPmI4bDz3nuicCLxvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Atomic 包下的原子操作类有很多，可以大致分为四种类型：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;原子操作基本类型&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;原子操作数组类型&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;原子操作引用类型&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;原子操作更新属性&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Atomic原子操作类在源码中都使用了&lt;code&gt;Unsafe类&lt;/code&gt;，&lt;code&gt;Unsafe类&lt;/code&gt;提供了硬件级别的原子操作，可以安全地直接操作内存变量。后面讲解源码时再详细介绍。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;实现一个计数器&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如在业务代码中需要实现一个计数器的功能，啪地一下，很快我们就写出了以下的代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Counter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; count;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;increase&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        count++;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;increase&lt;/code&gt;方法对 count 变量进行递增。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当代码提交上库进行&lt;code&gt;code review&lt;/code&gt;时，啪地一下，很快收到了检视意见（严重级别）：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果在多线程场景下，你的计数器可能有问题。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上大一的时候老师就讲过 &lt;code&gt;count++&lt;/code&gt; 是非原子性的，它实际上包含了三个操作：读数据，加一，写回数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再次修改代码，多线访问&lt;code&gt;increase方法&lt;/code&gt;会有问题，那就给它加个锁吧，count变量修改了其他线程可能不能即时看到，那就给变量加个 &lt;code&gt;volatile&lt;/code&gt; 吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;吭哧吭哧，代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;LockCounter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; count;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;synchronized&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;increase&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        count++;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一顿操作猛如虎，再次提交代码后，依然收到了检视意见（建议级别）：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;加锁会影响效率，可以考虑使用原子操作类。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原子操作类？「黑人问号脸」，莫不是大佬知道我晚上有约会故意整我，不想合入代码吧。带着将信将疑的态度，打开百度谷歌，原来 AtomicInteger 可以轻松解决这个问题，手忙脚乱一顿复制粘贴代码搞定了，终于可以下班了。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;AtomicCounter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; AtomicInteger count = &lt;span&gt;new&lt;/span&gt; AtomicInteger(&lt;span&gt;0&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;increase&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        count.incrementAndGet();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;AtomicInteger 源码分析&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;调用&lt;code&gt;AtomicInteger类&lt;/code&gt;的&lt;code&gt;incrementAndGet方法&lt;/code&gt;不用加锁可以实现安全的递增，这个好神奇，下面带领大家分析一下源码是这么实现的，等不及了等不及了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;打开源码，可以看到定义的incrementAndGet方法：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt;* 在当前值的基础上自动加 1&lt;br/&gt;*&lt;br/&gt;* &lt;span&gt;@return&lt;/span&gt; 更新后的值&lt;br/&gt;*/&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;incrementAndGet&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; unsafe.getAndAddInt(&lt;span&gt;this&lt;/span&gt;, valueOffset, &lt;span&gt;1&lt;/span&gt;) + &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过源码可以看到实际上是调用了 unsafe 的一个方法，unsafe 是什么待会再说。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们再看看getAndAddInt方法的参数：第一个参数 this 是当前对象的引用；第二个参数valueOffset是用来记录value值在内存中的偏移地址，第三个参数是一个常量 1；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 AtomicInteger 中定义了一个常量&lt;code&gt;valueOffset&lt;/code&gt;和一个可变的成员变量 &lt;code&gt;value&lt;/code&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Unsafe unsafe = Unsafe.getUnsafe();&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; valueOffset;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;static&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;        valueOffset = unsafe.objectFieldOffset&lt;br/&gt;            (AtomicInteger&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;.&lt;span&gt;getDeclaredField&lt;/span&gt;(&quot;&lt;span&gt;value&lt;/span&gt;&quot;))&lt;/span&gt;;&lt;br/&gt;    } &lt;span&gt;catch&lt;/span&gt; (Exception ex) { &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Error(ex); }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; value;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;value&lt;/code&gt; 变量保存当前对象的值，&lt;code&gt;valueOffset&lt;/code&gt; 是变量的内存偏移地址，也是通过调用unsafe的方法获取。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Unsafe&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// ……省略其他方法&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;native&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; &lt;span&gt;objectFieldOffset&lt;/span&gt;&lt;span&gt;(Field f)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里再说说 &lt;code&gt;Unsafe&lt;/code&gt; 这个类，人如其名：不安全的类。打开 Unsafe 类会看到大部分方法都标识了 &lt;code&gt;native&lt;/code&gt;，也就是说这些都是本地方法，本地方法强依赖于操作系统平台，一般都是采用&lt;code&gt;C/C++&lt;/code&gt;语言编写，在调用 Unsafe 类的本地方法实际会执行这些方法，熟悉 C/C++的小伙伴可自行下载源码研究。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，我们再回到最开始，调用了 Unsafe 类的getAndAddInt方法：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Unsafe&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// ……省略其他方法&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;getAndAddInt&lt;/span&gt;&lt;span&gt;(Object o, &lt;span&gt;long&lt;/span&gt; offset, &lt;span&gt;int&lt;/span&gt; delta)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; v;&lt;br/&gt;        &lt;span&gt;do&lt;/span&gt; {&lt;br/&gt;            v = getIntVolatile(o, offset); &lt;br/&gt;            &lt;span&gt;// 循环 CAS 操作&lt;/span&gt;&lt;br/&gt;        } &lt;span&gt;while&lt;/span&gt; (!compareAndSwapInt(o, offset, v, v + delta));&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; v;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 根据内存偏移地址获取当前值&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;native&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;getIntVolatile&lt;/span&gt;&lt;span&gt;(Object o, &lt;span&gt;long&lt;/span&gt; offset)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// CAS 操作&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;native&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;compareAndSwapInt&lt;/span&gt;&lt;span&gt;(Object o, &lt;span&gt;long&lt;/span&gt; offset,&lt;br/&gt;                                                  &lt;span&gt;int&lt;/span&gt; expected,&lt;br/&gt;                                                  &lt;span&gt;int&lt;/span&gt; x)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过getIntVolatile方法获取当前 AtomicInteger 对象的value值，这是一个本地方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后调用compareAndSwapInt进行 CAS 原子操作，尝试在当前值的基础上加 1，如果 CAS 失败会循环进行重试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此compareAndSwapInt方法是最核心的，详细实现大家可以自行找源码看。这里我们看看方法的参数，一共有四个参数：o 是指当前对象；offset 是指当前对象值的内存偏移地址；expected是期望值；x是修改后的值；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;compareAndSwapInt方法的思路是拿到对象 o 和 offset 后会再去取对象实际的值，如果当前值与之前取的期望值是一致的就认为 value 没有被修改过，直接将 value 的值更新为 x，这样就完成了一次 CAS 操作，CAS 操作是通过操作系统保证原子性的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果当前值与期望值不一致，说明 value 值被修改过，那么就会重试 CAS 操作直到成功。&lt;img data-ratio=&quot;0.34210526315789475&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EqRLB3cM9QwDgnbqRBpDfYzwGVWQVicyBUqeSzqIv0hEkhbDlaVoPpPd8xcBHU5VBtHVD9icUhMdCVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;608&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;AtomicInteger类中还有很多其他的方法，如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;decrementAndGet()&lt;br/&gt;getAndDecrement()&lt;br/&gt;getAndIncrement()&lt;br/&gt;accumulateAndGet()&lt;br/&gt;&lt;span&gt;// …… 省略&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些方法实现原理都是大同小异，希望大家可以举一反三理解其他的方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外还有一些其他的类，如：&lt;code&gt;AtomicLong&lt;/code&gt;，&lt;code&gt;AtomicReference&lt;/code&gt;，&lt;code&gt;AtomicIntegerArray&lt;/code&gt;等，这里也不再赘述，原理都是大同小异。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;AtomicLong 和 LongAdder 谁更牛？&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java 在 &lt;code&gt;jdk1.8版本&lt;/code&gt; 引入了 &lt;code&gt;LongAdder&lt;/code&gt; 类，与 &lt;code&gt;AtomicLong&lt;/code&gt; 一样可以实现加、减、递增、递减等线程安全操作，但是在高并发竞争非常激烈的场景下 &lt;code&gt;LongAdder&lt;/code&gt; 的效率更胜一筹，后续单独用一篇文章进行介绍。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;讲了半天，可能有的小伙伴还是比较懵，Atomic 类到底是如何实现线程安全的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在语言层面上，Atomic 类是没有做任何同步操作的，翻看源代码方法没有任何加锁，其实最大功劳还是在 CAS 身上。CAS 利用操作系统的硬件特性实现了原子性，利用 CPU 多核能力实现了硬件层面的阻塞。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只有 CAS 的原子性保证就一定是线程安全的吗？当然不是的，通过源码发现 value 变量还用了 volatile 修饰了，保证了线程可见性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那有些小伙伴可能要问了，那是不是加锁就没有用了，非也，虽然基于 CAS 的线程安全机制很好很高效，但是这适合一些粒度比较小的需求才有效，如果遇到非常复杂的业务逻辑还是需要加锁操作的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;版权申明：内容来源网络，版权归原创者所有。除非无法确认，我们都会标明作者及出处，如有侵权烦请告知，我们会立即删除并表示歉意。谢谢!&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzAwMTA0MjE4Mg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/viaAhcbfwicmKmsicDGWdSkukmPxZkARn73IdszWYZrgK7WM0YEScRq0AXmjSErUvgeuoVfYfr03dGHOwTfYHKfhg/0?wx_fmt=png&quot; data-nickname=&quot;架构算法&quot; data-alias=&quot;&quot; data-signature=&quot;分享典型互联网架构设计，底层原理，数据结构和程序算法！聚合了阿里，美团，淘宝，支付宝等公司技术架构迭代之路，涵盖大电商，大物流，大金融，大供应链，大游戏等领域典型算法解析！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>21b64fa1954b965e096dd49f5aeb9e52</guid>
<title>缓存一致性？get</title>
<link>https://toutiao.io/k/bga7ilo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是老三，今天又是被算法致郁的一天，写篇文章缓一缓。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这篇文章，我们来看看缓存一致性问题。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;缓存一致性&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我接下来会巴巴说一堆缓存一致性，但是——&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为一名暴躁老哥，我先把结论撂这了！&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;&lt;strong&gt;缓存和数据库的强一致性无法实现！&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CAP理论了解一下，缓存适用的场景属于CAP中的AP，是非强一致性的场景。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那还扯个犊子的缓存一致性？洗洗睡吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;BASE&lt;/strong&gt;理论接着了解一下，强一致性保证不了，那只好委屈求全，尽量保证最终一致性呗。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态。因此，最终一致性的本质是需要系统保证最终数据能够达到一致，而不需要实时保证系统数据的强一致性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，我们追求的是&lt;strong&gt;尽可能保证缓存和数据库的最终一致性。&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4755671902268761&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWeAAo73iaIl9STAC0GbcmQicAwb5wS5WbLRxkugMffPWu6rJ13ialMRJxb1mFltgnic9ADcy1LxNQXkxw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1146&quot;/&gt;&lt;figcaption&gt;CAP和BASE理论&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;先更新数据库，再删除缓存&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Cache Aside Pattern&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在开始之前，我们先来科普一下缓存+数据库读写，最经典的Cache Aside Pattern。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;读取：先读取缓存，缓存里没有，读取数据库，然后返回响应，顺斌保存缓存&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.29784688995215314&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWeAAo73iaIl9STAC0GbcmQicATZ9G1BZLcxhcOBEJon73qFflqmicPdZYACicHselsJkvHU7DGGNIy18A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;836&quot;/&gt;&lt;figcaption&gt;读取&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.33615477629987905&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWeAAo73iaIl9STAC0GbcmQicAc9owTsLRbf662ia7eUQibAAzaOgBVdSsFic7EK22jrXtVoQoIvpQ3mIKw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;827&quot;/&gt;&lt;figcaption&gt;更新&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;为什么是删除缓存，而不是更新缓存？&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;并发情况下更新缓存可能会带来种种问题，直接删除缓存更加稳妥。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缓存更新在很多时候需要耗费资源，直接删除，用时再从数据库读取，写进缓存，更省性能。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一致性问题&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么我们采用这种先更新数据库，再删除缓存，可能会出现什么问题呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如，我们更新数据库成功，接下来还没来删除缓存，或者删除缓存失败怎么办？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么很明显，这时候其它线程进来读的就是脏数据。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.37669376693766937&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWeAAo73iaIl9STAC0GbcmQicAtrkWAwVF6t6QlXczv5etnm8Aa0XMdCnqIQOMJ3EQXoy4wpu136ic4vA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;738&quot;/&gt;&lt;figcaption&gt;先更数据库，后删缓存问题&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那怎么解决呢？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;解决方案&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然删除缓存失败会导致脏数据，那我们就想办法让它能删除成功呗。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;消息队列重试机制&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以引入一个重试机制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果删除缓存失败，向消息队列发送消息，把删除失败的key放进去，消费消息队列，获取要删除的key，然后去重试删除。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.49303944315545245&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWeAAo73iaIl9STAC0GbcmQicAyOicYaTic8w8taDxUSjTY4vsNCMMN1hfw7ooWBP4FiboWXoaXQqSTJZTQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;862&quot;/&gt;&lt;figcaption&gt;引入消息队列重试&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，这么干，好好的业务，咱们又引入了消息队列，对现有的业务造成了入侵，复杂度又提升了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;监听binlog异步删除&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实还有另外一种办法，我们可以用一个服务（比如阿里的 canal）去监听数据库的binlog，获取需要操作的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后用另外一个服务获取订阅程序传来的信息，进行缓存删除操作。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6267605633802817&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWeAAo73iaIl9STAC0GbcmQicAKIUtoKecWib33ygWqkt7e77hY1Tv9xINWrGnUTsDq8UjVhKBdib0R4bA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;994&quot;/&gt;&lt;figcaption&gt;监听binlog异步删除&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样一来，对我们本身的业务入侵就小了很多。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;先删除缓存，再更新数据库&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一致性问题&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们看一下，如果先删除缓存，再更新数据库可能会带来什么问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在并发情况下，先删除缓存，再更新数据库，此时数据库还未更新成功，这时候有其它线程进来了，读取缓存，缓存不存在，读取数据库，读取的是旧值，这时候，缓存不一致就发生了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0783132530120483&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWeAAo73iaIl9STAC0GbcmQicA1MrK3CqnXCkicSjRY9kuzADF5pf0HFs1B9Gdg8ticNvCwicnba2ibhPsCw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;498&quot;/&gt;&lt;figcaption&gt;先删缓存，后更数据库不一致&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;解决方案&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;延时双删&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;延时双删是什么意思呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就是在删除缓存，更新数据库之后，休眠一段时间后，再次删除缓存。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.2457466918714555&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWeAAo73iaIl9STAC0GbcmQicAo2xmAuPRL43GZHibBxWjQkJ3ibs6DQicfIslFG6ZfDk0rQFshRh8emHIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;529&quot;/&gt;&lt;figcaption&gt;延时双删&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;延时删除之后，就把缓存里缓存的旧值给删除了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再有请求进来，就是读取数据库里的新值，再把新值保存进缓存。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，第二次删除也有失败的可能，怎么办呢？重试。那怎么重试呢？前面写了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于删除，还有一个兜底的方案——&lt;code&gt;设置缓存过期时间&lt;/code&gt;，这样一来，哪怕缓存了脏数据，但是脏数据总有过期的时候，不至于一直不一致。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们来简单总结一下，首先对缓存的操作，删除优于更新，所以要删除，而不是更新。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;删除缓存两种方式：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;先更新数据库，在删除缓存。缓存不一致的两种处理方式是&lt;code&gt;消息队列重试机制&lt;/code&gt;和&lt;code&gt;binlog异步删除&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;先删除缓存，再更新数据库。缓存不一致的处理方式是&lt;code&gt;延时双删&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，这些方案无疑都增加了系统的复杂度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果不是并发特别高的话，就没有必要过度设计。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;简单的事情重复做，重复的事情认真做，认真的事情有创造性地做。&lt;/p&gt;&lt;p&gt;我是三分恶，一个努力学习中的程序员。&lt;/p&gt;&lt;p&gt;&lt;code&gt;点赞&lt;/code&gt;、&lt;code&gt;关注&lt;/code&gt;不迷路，咱们下期见！&lt;/p&gt;&lt;/blockquote&gt;&lt;br data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;[1].https://xie.infoq.cn/article/47241d099404a1565e168fad4&lt;br/&gt;[2]. https://zhuanlan.zhihu.com/p/147028497&lt;br/&gt;[3]. https://segmentfault.com/a/1190000038572546&lt;br/&gt;[4]. https://juejin.cn/post/6964531365643550751#heading-3&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend-list&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247485766_1&quot; data-recommend-article-time=&quot;1618927334&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWc1HlE3bTLydkdBicStnBOTSBOYNZzhUPua5ZOrwnauRNFicEjkEicN2ZQgHyTTcVqZbl4XMpZE6hEXw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;【Redis破障之路】一：强大的Redis&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247485766&amp;amp;idx=1&amp;amp;sn=1bafe8a665d4fdc73c0597b7ec92f0e0&amp;amp;chksm=c0cce1e3f7bb68f57c1cc0ce33e1e1bcc96b16a70b9b6c9b37fa90359507d443421f7ba6da26#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247485766&amp;amp;idx=1&amp;amp;sn=1bafe8a665d4fdc73c0597b7ec92f0e0&amp;amp;chksm=c0cce1e3f7bb68f57c1cc0ce33e1e1bcc96b16a70b9b6c9b37fa90359507d443421f7ba6da26&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.425&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWc1HlE3bTLydkdBicStnBOTSBOYNZzhUPua5ZOrwnauRNFicEjkEicN2ZQgHyTTcVqZbl4XMpZE6hEXw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;【Redis破障之路】一：强大的Redis&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247485872_1&quot; data-recommend-article-time=&quot;1619152609&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWdsT47fXXSXicRSFjN895zUuELpgQocY0nEGuClF3DMd4sX0bJhcBUiclotKfF366WSacFArkHKGD3w/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;【Redis破障之路】二：Redis安装和基本数据结构&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247485872&amp;amp;idx=1&amp;amp;sn=75c3ea75cacaf8c32f9d571d04c2c6aa&amp;amp;chksm=c0cce115f7bb6803b04156d0545b163a98e94621182e2183ce45c18c70b3389465b7194ec5e8#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247485872&amp;amp;idx=1&amp;amp;sn=75c3ea75cacaf8c32f9d571d04c2c6aa&amp;amp;chksm=c0cce115f7bb6803b04156d0545b163a98e94621182e2183ce45c18c70b3389465b7194ec5e8&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.42578125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWdsT47fXXSXicRSFjN895zUuELpgQocY0nEGuClF3DMd4sX0bJhcBUiclotKfF366WSacFArkHKGD3w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1024&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;【Redis破障之路】二：Redis安装和基本数据结构&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247485895_1&quot; data-recommend-article-time=&quot;1619433333&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWclHjFzib2lr6leR5lSQKrNy6Xzg6PxcM1rHAlqdKkUp9auo5q1JkKS9u3IIQmpj5oTYvaZpvLPFTQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;【Redis破障之路】三：Redis单线程架构&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247485895&amp;amp;idx=1&amp;amp;sn=8d3d5f470420e16126098e0a3b7a81b4&amp;amp;chksm=c0cce162f7bb6874591c8ccbfb39a676a343b42773adad1d606c0a006fb15399b398237ee65e#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247485895&amp;amp;idx=1&amp;amp;sn=8d3d5f470420e16126098e0a3b7a81b4&amp;amp;chksm=c0cce162f7bb6874591c8ccbfb39a676a343b42773adad1d606c0a006fb15399b398237ee65e&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.42577777777777776&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWclHjFzib2lr6leR5lSQKrNy6Xzg6PxcM1rHAlqdKkUp9auo5q1JkKS9u3IIQmpj5oTYvaZpvLPFTQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1125&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;【Redis破障之路】三：Redis单线程架构&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247486158_1&quot; data-recommend-article-time=&quot;1621402959&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWfbFPBL9SBQQMMKONbH51Hib8ULibtC0xfxPjCQHD9EseGBqAp7gC2FCibr3ZlrOyqo2QBuPENxDGOog/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;【Redis破障之路】四：Jedis基本使用&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247486158&amp;amp;idx=1&amp;amp;sn=556db8b3ccb03f3be4628bcb3e2222c0&amp;amp;chksm=c0cce26bf7bb6b7d6f99fa7cc0375727ed5951fbd023c1348983d7552de7d327e40395f1c3b4#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247486158&amp;amp;idx=1&amp;amp;sn=556db8b3ccb03f3be4628bcb3e2222c0&amp;amp;chksm=c0cce26bf7bb6b7d6f99fa7cc0375727ed5951fbd023c1348983d7552de7d327e40395f1c3b4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.425&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWfbFPBL9SBQQMMKONbH51Hib8ULibtC0xfxPjCQHD9EseGBqAp7gC2FCibr3ZlrOyqo2QBuPENxDGOog/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;【Redis破障之路】四：Jedis基本使用&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247488048_1&quot; data-recommend-article-time=&quot;1631287965&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWdicRFdvwlGXxvYdLGyWiaEehyNLtpYSsHpE9l5RIF7OI4xRZzMzB1ZDJmCibeTRY14BCXgQyBf1dHSg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;十分钟彻底掌握缓存击穿、缓存穿透、缓存雪崩&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247488048&amp;amp;idx=1&amp;amp;sn=959ef15104f95fc341ba837c628f5d6f&amp;amp;chksm=c0ccfa95f7bb73837942d7d863befadfd198bdb22a72276c6622d4725607b08a835876757622#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247488048&amp;amp;idx=1&amp;amp;sn=959ef15104f95fc341ba837c628f5d6f&amp;amp;chksm=c0ccfa95f7bb73837942d7d863befadfd198bdb22a72276c6622d4725607b08a835876757622&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.4266666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWdicRFdvwlGXxvYdLGyWiaEehyNLtpYSsHpE9l5RIF7OI4xRZzMzB1ZDJmCibeTRY14BCXgQyBf1dHSg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;900&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;十分钟彻底掌握缓存击穿、缓存穿透、缓存雪崩&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot; aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_title&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p role=&quot;option&quot; aria-labelledby=&quot;js_a11y_reward_qr_word js_a11y_comma js_a11y_reward_qr_title js_a11y_reward_qr_money&quot; aria-describedby=&quot;js_a11y_reward_qr_tips &quot; class=&quot;reward_tips&quot; id=&quot;js_a11y_reward_qr_word&quot;&gt;听说一键三连等于学会哦！&lt;/p&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img alt=&quot;赞赏二维码&quot; class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_tips&quot; class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>