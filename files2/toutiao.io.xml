<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>cb82fa54fbe0e01c4c9b31872737ac3e</guid>
<title>如何基于 Docker 部署 Uptime Kuma 服务？ - 悠然宜想亭</title>
<link>https://toutiao.io/k/nosdyyu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;Post-body&quot;&gt;
                    &lt;p&gt;&lt;a href=&quot;https://nicelinks.site/post/625eb42bac29ce06470af87d&quot; rel=&quot; nofollow ugc&quot;&gt;Uptime Kuma&lt;/a&gt;，是一个类似于“Uptime Robot”的自托管监控工具。它支持灵活配置，拥有漂亮的界面，支持任何人托管部署，针对监控 Web 网站或者后台接口，有非常高的价值。它具有以下功能特征：&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;监控 HTTP(s) / TCP / HTTP(s) 关键字 / Ping / DNS 记录 / 推送 / Steam 游戏服务器的正常运行时间。&lt;/li&gt;
&lt;li&gt;花哨的、反应式的、快速的 UI/UX。&lt;/li&gt;
&lt;li&gt;通过 Telegram、Discord、Gotify、Slack、Pushover、电子邮件 (SMTP) 和 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications&quot; rel=&quot; nofollow ugc&quot;&gt;70 多种通知服务发送通知，请单击此处查看完整列表&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;默认 20 秒间隔；&lt;/li&gt;
&lt;li&gt;支持多种语言；&lt;/li&gt;
&lt;li&gt;简单状态页面；&lt;/li&gt;
&lt;li&gt;Ping 图（Ping Chart）；&lt;/li&gt;
&lt;li&gt;证书信息（Certificate Info）；&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/uptime.kuma.pet.png?x-oss-process=style/png2jpg&quot; title=&quot;&quot; alt=&quot;如何基于 Docker 部署 Uptime Kuma 服务？&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;如何安装？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/post/625eb42bac29ce06470af87d&quot; rel=&quot; nofollow ugc&quot;&gt;Uptime Kuma&lt;/a&gt; 支持 Docker、基于 Node.js 工具链（外加 Git、 pm2）等方式部署，以下是基于 Docker 的安装方式：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/post/625eb42bac29ce06470af87d&quot; rel=&quot; nofollow ugc&quot;&gt;Uptime Kuma&lt;/a&gt; 服务，在我来看非常有价值；可将其部署起来，监控正在维护的各种服务（如&lt;a href=&quot;https://nicelinks.site/&quot; rel=&quot; nofollow ugc&quot;&gt;倾城之链&lt;/a&gt;、&lt;a href=&quot;https://read.lovejade.cn/&quot; rel=&quot; nofollow ugc&quot;&gt;曼妙句子&lt;/a&gt;）；倘若应用出现问题，使得我能在第一时间知道，从而快速排查并修复，从而最大限度降低损失。&lt;/p&gt;

&lt;p&gt;当然，您也可以基于 Docker Compose 来安装，相比之下，更喜欢这种方式。&lt;/p&gt;

&lt;p&gt;创建 docker-compose 配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;touch docker-compose.yml&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将其填充以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;version: &quot;3.8&quot;

services:
  app:
    container_name: uptime-kuma
    image: louislam/uptime-kuma:1.14.1
    restart: always
    volumes:
      - uptime-kuma:/app/data
    ports:
      - &quot;80:3001&quot;

volumes:
  uptime-kuma:
    driver: local&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过如下命令，来启动服务：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker-compose up -d&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在，您应该可以通过访问服务器的 IP 或域名（如果您配置了的话），在浏览器中访问该服务。如果在本地执行此操作，那么它就是 &lt;code&gt;localhost&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;晚上下班回来，有基于 Docker Compose 部署了下 Uptime Kuma，真是稳，一次便成功；创建个账号，即可开始添加监控，极其方便；无论是页面主题、配置项、通知方式，都能按需设置。有采用“企业微信机器人🤖”，来给予通知，以方便及时收到消息。有将添加几个服务监控后的效果，截图如下，感兴趣的朋友们，可以感受下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lovejade.oss-cn-shenzhen.aliyuncs.com/uptime-monitor.png&quot; title=&quot;&quot; alt=&quot;Uptime Kuma | 监控服务&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>cde5abca5a265a12df18155e5a31e52b</guid>
<title>有福了！这款二次元客户端开源啦！美观、易用、无广告</title>
<link>https://toutiao.io/k/tp9f8fe</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MzA0ODkyMA==&amp;amp;mid=2655078432&amp;amp;idx=2&amp;amp;sn=f1ba1fa5fbfbcf98a3e6f610b258cf05&amp;amp;chksm=bd2918178a5e9101b993d9e84d783562c995577cec855adf32ccb5946ff4da21fd6e89ba078e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AjN1jquNavibHVJLA1Veb2tAXpnl02QjBcWiaSWj9vUVqq42f2lQNOicxEyUB86OwrE3YovoAQTWY9eMNzz74SttQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MzA0ODkyMA==&amp;amp;mid=2655078432&amp;amp;idx=2&amp;amp;sn=f1ba1fa5fbfbcf98a3e6f610b258cf05&amp;amp;chksm=bd2918178a5e9101b993d9e84d783562c995577cec855adf32ccb5946ff4da21fd6e89ba078e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;选对圈子，一切都对了！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;选对圈子，一切都对了！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;美观易用且无广告的二次元客户端，同时支持MacOS, Windows, Android, iOS。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;strong&gt;特性&lt;/strong&gt;&lt;br/&gt;*  用户&lt;br/&gt;    *  登录 / 注册 / 获取个人信息 / 自动打卡&lt;br/&gt;    *  修改密码 / 修改签名 / 修改头像&lt;br/&gt;*  漫画&lt;br/&gt;    *  分类 / 搜索 / 随机本子 / 看此本子的也在看 / 排行榜&lt;br/&gt;    *  在分类中搜索 / 按 &quot;分类 / 标签 / 创建人 / 汉化组&quot; 检索&lt;br/&gt;    *  漫画详情 / 章节 / 看图 / 将图片保存到相册&lt;br/&gt;    *  收藏 / 喜欢&lt;br/&gt;    *  获取评论 / 评论 / 评论回复 (社区评论后无法删除, 请谨慎使用)&lt;br/&gt;*  游戏&lt;br/&gt;    *  列表 / 详情 / 无广告下载&lt;br/&gt;*  下载&lt;br/&gt;    *  导入导出 / 无线共享 / 移动设备与PC设备传输&lt;br/&gt;*  聊天室&lt;br/&gt;*  缓存 / 清理&lt;br/&gt;*  设备支持&lt;br/&gt;    *  安卓&lt;br/&gt;        *  高刷新频率屏幕适配 (90/120/144... Hz)&lt;br/&gt;        *  安卓10以上随系统进入深色/夜间模式&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;3.1146666666666665&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AjN1jquNav8VtEoYeI2aW2FrTZROXlicleEWUria8RiaCpeo7pJBmcEzFOusQsicaunApcG1K9R56bcHQGEUCWVhiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f750205b6abe4a3c6f19d1346a06a649</guid>
<title>基于代价的慢查询优化建议</title>
<link>https://toutiao.io/k/drtvhbu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;48&quot; data-ratio=&quot;0.10078125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUrXicw2VXTQTVVN5yxXWEacdY1ZdxTH195Pgibtib8EENJRMia3tzEnyVfgyfAgRibMssKqwlE186TLSw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;总第503&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;篇&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2022年 第020篇&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;127&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;127&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;93&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;93&quot; data-ratio=&quot;0.9966329966329966&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVLR21NicmyQxcmiaqQ2KOJJj2JLwgJL4KSbo7CcuMF1hLf4xFjGQiaDRhSPyERxWGChWYP47Oc4sKGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;594&quot; data-width=&quot;100%&quot; opacity=&quot;&quot; title=&quot;undefined&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; data-style=&quot;text-align: left; font-size: 14px; color: inherit;&quot;&gt;&lt;section&gt;&lt;span&gt;对于数据库来说，慢查询往往意味着风险。SQL执行得越慢，消耗的CPU资源或IO资源也会越大。大量的慢查询可直接引发业务故障，关注慢查询即是关注故障本身。本文主要介绍了美团如何利用数据库的代价优化器来优化慢查询，并给出索引建议，评估跟踪建议质量，运营治理慢查询。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1 背景&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2 基于代价的优化器介绍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2.1 SQL执行与优化器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2.2 代价模型介绍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2.3 基于代价的索引选择&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2.4 基于代价的索引推荐思路&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3 索引推荐实现&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.1 前置校验&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.2 提取关键列名&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.3 生成候选索引&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.4 数据采集&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.5 统计数据计算&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3.6 候选索引代价评估&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4 推荐质量保证&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.1 有效性验证&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.2 效果追踪&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.3 仿真环境&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4.4 测试案例库&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5 慢查询治理运营&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5.1 过去-历史慢查询&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5.2 现在-新增慢查询&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5.3 未来-潜在慢查询&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;6 项目运行情况&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;7 未来规划&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1 背景&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;慢查询是指数据库中查询时间超过指定阈值（&lt;/span&gt;&lt;span&gt;美团设置为100ms&lt;/span&gt;&lt;span&gt;）的SQL，它是数据库的性能杀手，也是业务优化数据库访问的重要抓手。随着美团业务的高速增长，日均慢查询量已经过亿条，此前因慢查询导致的故障约占数据库故障总数的10%以上，而且高级别的故障呈日益增长趋势。因此，对慢查询的优化已经变得刻不容缓。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;那么如何优化慢查询呢？最直接有效的方法就是选用一个查询效率高的索引。关于高效率的索引推荐，主要有基于经验规则和代价的两种算法。在日常工作中，基于经验规则的推荐随处可见，对于简单的SQL，如&lt;/span&gt;&lt;code&gt;&lt;span&gt;select * from sync_test1 where name like &#x27;Bobby%&#x27;&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，直接添加索引IX(&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;) 就可以取得不错的效果；但对于稍微复杂点的SQL，如&lt;/span&gt;&lt;code&gt;&lt;span&gt;select * from sync_test1 where name like &#x27;Bobby%&#x27; and dt &amp;gt; &#x27;2021-07-06&#x27;&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，到底选择IX(&lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;)、IX(&lt;/span&gt;&lt;span&gt;dt&lt;/span&gt;&lt;span&gt;)、IX(&lt;/span&gt;&lt;span&gt;dt,name&lt;/span&gt;&lt;span&gt;) 还是IX(&lt;/span&gt;&lt;span&gt;name,dt&lt;/span&gt;&lt;span&gt;)，该方法也无法给出准确的回答。更别说像多表Join、子查询这样复杂的场景了。所以采用基于代价的推荐来解决该问题会更加普适，因为基于代价的方法使用了和数据库优化器相同的方式，去量化评估所有的可能性，选出的是执行SQL耗费代价最小的索引。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2 基于代价的优化器介绍&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.1 SQL执行与优化器&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;一条SQL在MySQL服务器中执行流程主要包含：SQL解析、基于语法树的准备工作、优化器的逻辑变化、优化器的代价准备工作、基于代价模型的优化、进行额外的优化和运行执行计划等部分。具体如下图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;439&quot; data-ratio=&quot;0.7870646766169154&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7mM6vFd0EMAYd7hrAZA4uv8MaeJDcBbHcp8jlKJWFG2uR5RZkiaVr23g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1005&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;SQL执行与优化器&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.2 代价模型介绍&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;而对于优化器来说，执行一条SQL有各种各样的方案可供选择，如表是否用索引、选择哪个索引、是否使用范围扫描、多表Join的连接顺序和子查询的执行方式等。如何从这些可选方案中选出耗时最短的方案呢？这就需要定义一个量化数值指标，这个指标就是代价(&lt;/span&gt;&lt;span&gt;Cost&lt;/span&gt;&lt;span&gt;)，我们分别计算出可选方案的操作耗时，从中选出最小值。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;代价模型将操作分为Server层和Engine（&lt;/span&gt;&lt;span&gt;存储引擎&lt;/span&gt;&lt;span&gt;）层两类，Server层主要是CPU代价，Engine层主要是IO代价，比如MySQL从磁盘读取一个数据页的代价io_block_read_cost为1，计算符合条件的行代价为row_evaluate_cost为0.2。除此之外还有：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;memory_temptable_create_cost (&lt;/span&gt;&lt;span&gt;default 2.0&lt;/span&gt;&lt;span&gt;) 内存临时表的创建代价。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;memory_temptable_row_cost (&lt;/span&gt;&lt;span&gt;default 0.2&lt;/span&gt;&lt;span&gt;) 内存临时表的行代价。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;key_compare_cost (&lt;/span&gt;&lt;span&gt;default 0.1&lt;/span&gt;&lt;span&gt;) 键比较的代价，例如排序。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;disk_temptable_create_cost (&lt;/span&gt;&lt;span&gt;default 40.0&lt;/span&gt;&lt;span&gt;) 内部myisam或innodb临时表的创建代价。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;disk_temptable_row_cost (&lt;/span&gt;&lt;span&gt;default 1.0&lt;/span&gt;&lt;span&gt;) 内部myisam或innodb临时表的行代价。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;span&gt;在MySQL 5.7中，这些操作代价的默认值都可以进行配置。为了计算出方案的总代价，还需要参考一些统计数据，如表数据量大小、元数据和索引信息等。MySQL的代价优化器模型整体如下图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;259&quot; data-ratio=&quot;0.4634146341463415&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7zHFyuOhfw449FWRvWRz3sIEJzVQpjvKKl0NaVgGXhwTRMxNIiaZxT0Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;861&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;代价模型&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.3 基于代价的索引选择&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;还是继续拿上述的&lt;/span&gt;&lt;code&gt;&lt;span&gt;SQL select * from sync_test1 where name like &#x27;Bobby%&#x27; and dt &amp;gt; &#x27;2021-07-06&#x27;&lt;/span&gt;&lt;/code&gt;&lt;span&gt;为例，我们看看MySQL优化器是如何根据代价模型选择索引的。首先，我们直接在建表时加入四个候选索引。&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;Create&lt;/span&gt; &lt;span&gt;Table&lt;/span&gt;: &lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;`sync_test1`&lt;/span&gt; (&lt;br/&gt;    &lt;span&gt;`id`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;br/&gt;    &lt;span&gt;`cid`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;`phone`&lt;/span&gt; &lt;span&gt;int&lt;/span&gt;(&lt;span&gt;11&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;`name`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;10&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;`address`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;`dt`&lt;/span&gt; datetime &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt;,&lt;br/&gt;    PRIMARY &lt;span&gt;KEY&lt;/span&gt; (&lt;span&gt;`id`&lt;/span&gt;),&lt;br/&gt;    &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;`IX_name`&lt;/span&gt; (&lt;span&gt;`name`&lt;/span&gt;),&lt;br/&gt;    &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;`IX_dt`&lt;/span&gt; (&lt;span&gt;`dt`&lt;/span&gt;),&lt;br/&gt;    &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;`IX_dt_name`&lt;/span&gt; (&lt;span&gt;`dt`&lt;/span&gt;,&lt;span&gt;`name`&lt;/span&gt;),&lt;br/&gt;    &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;`IX_name_dt`&lt;/span&gt; (&lt;span&gt;`name`&lt;/span&gt;,&lt;span&gt;`dt`&lt;/span&gt;)&lt;br/&gt;    ) &lt;span&gt;ENGINE&lt;/span&gt;=&lt;span&gt;InnoDB&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;通过执行explain看出MySQL最终选择了IX_name索引。&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;mysql&amp;gt; explain  select * from sync_test1 &lt;span&gt;where&lt;/span&gt; name like &lt;span&gt;&#x27;Bobby%&#x27;&lt;/span&gt; and dt &amp;gt; &lt;span&gt;&#x27;2021-07-06&#x27;&lt;/span&gt;;&lt;br/&gt;+----+-------------+------------+------------+-------+-------------------------------------+---------+---------+------+------+----------+------------------------------------+&lt;br/&gt;| id | select_type | table      | partitions | &lt;span&gt;type&lt;/span&gt;  | possible_keys                       | key     | key_len | ref  | rows | filtered | Extra                              |&lt;br/&gt;+----+-------------+------------+------------+-------+-------------------------------------+---------+---------+------+------+----------+------------------------------------+&lt;br/&gt;|  1 | SIMPLE      | sync_test1 | NULL       | range | IX_name,IX_dt,IX_dt_name,IX_name_dt | IX_name | 12      | NULL |  572 |    36.83 | Using index condition; Using &lt;span&gt;where&lt;/span&gt; |&lt;br/&gt;+----+-------------+------------+------------+-------+-------------------------------------+---------+---------+------+------+----------+------------------------------------+&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;然后再打开MySQL追踪优化器Trace功能。可以看出，没有选择其他三个索引的原因均是因为在其他三个索引上使用range scan的代价均&amp;gt;= IX_name。&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;mysql&amp;gt; select * from INFORMATION_SCHEMA.OPTIMIZER_TRACE\G;&lt;br/&gt;*************************** 1. row ***************************&lt;br/&gt;&lt;br/&gt;TRACE: {&lt;br/&gt;...&lt;br/&gt;&lt;span&gt;&quot;rows_estimation&quot;&lt;/span&gt;: [&lt;br/&gt;{&lt;br/&gt;&lt;span&gt;&quot;table&quot;&lt;/span&gt;: &lt;span&gt;&quot;`sync_test1`&quot;&lt;/span&gt;,&lt;br/&gt;&lt;span&gt;&quot;range_analysis&quot;&lt;/span&gt;: {&lt;br/&gt;&lt;span&gt;&quot;table_scan&quot;&lt;/span&gt;: {&lt;br/&gt;  &lt;span&gt;&quot;rows&quot;&lt;/span&gt;: 105084,&lt;br/&gt;  &lt;span&gt;&quot;cost&quot;&lt;/span&gt;: 21628&lt;br/&gt;},&lt;br/&gt;...&lt;br/&gt;&lt;span&gt;&quot;analyzing_range_alternatives&quot;&lt;/span&gt;: {&lt;br/&gt;  &lt;span&gt;&quot;range_scan_alternatives&quot;&lt;/span&gt;: [&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;index&quot;&lt;/span&gt;: &lt;span&gt;&quot;IX_name&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;ranges&quot;&lt;/span&gt;: [&lt;br/&gt;        &lt;span&gt;&quot;Bobby\u0000\u0000\u0000\u0000\u0000 &amp;lt;= name &amp;lt;= Bobbyÿÿÿÿÿ&quot;&lt;/span&gt;&lt;br/&gt;      ],&lt;br/&gt;      &lt;span&gt;&quot;index_dives_for_eq_ranges&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;rowid_ordered&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;using_mrr&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;index_only&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;rows&quot;&lt;/span&gt;: 572,&lt;br/&gt;      &lt;span&gt;&quot;cost&quot;&lt;/span&gt;: 687.41,&lt;br/&gt;      &lt;span&gt;&quot;chosen&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;index&quot;&lt;/span&gt;: &lt;span&gt;&quot;IX_dt&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;ranges&quot;&lt;/span&gt;: [&lt;br/&gt;        &lt;span&gt;&quot;0x99aa0c0000 &amp;lt; dt&quot;&lt;/span&gt;&lt;br/&gt;      ],&lt;br/&gt;      &lt;span&gt;&quot;index_dives_for_eq_ranges&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;rowid_ordered&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;using_mrr&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;index_only&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;rows&quot;&lt;/span&gt;: 38698,&lt;br/&gt;      &lt;span&gt;&quot;cost&quot;&lt;/span&gt;: 46439,&lt;br/&gt;      &lt;span&gt;&quot;chosen&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;cause&quot;&lt;/span&gt;: &lt;span&gt;&quot;cost&quot;&lt;/span&gt;&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;index&quot;&lt;/span&gt;: &lt;span&gt;&quot;IX_dt_name&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;ranges&quot;&lt;/span&gt;: [&lt;br/&gt;        &lt;span&gt;&quot;0x99aa0c0000 &amp;lt; dt&quot;&lt;/span&gt;&lt;br/&gt;      ],&lt;br/&gt;      &lt;span&gt;&quot;index_dives_for_eq_ranges&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;rowid_ordered&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;using_mrr&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;index_only&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;rows&quot;&lt;/span&gt;: 38292,&lt;br/&gt;      &lt;span&gt;&quot;cost&quot;&lt;/span&gt;: 45951,&lt;br/&gt;      &lt;span&gt;&quot;chosen&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;cause&quot;&lt;/span&gt;: &lt;span&gt;&quot;cost&quot;&lt;/span&gt;&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;index&quot;&lt;/span&gt;: &lt;span&gt;&quot;IX_name_dt&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;ranges&quot;&lt;/span&gt;: [&lt;br/&gt;        &lt;span&gt;&quot;Bobby\u0000\u0000\u0000\u0000\u0000 &amp;lt;= name &amp;lt;= Bobbyÿÿÿÿÿ&quot;&lt;/span&gt;&lt;br/&gt;      ],&lt;br/&gt;      &lt;span&gt;&quot;index_dives_for_eq_ranges&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;rowid_ordered&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;using_mrr&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;index_only&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;rows&quot;&lt;/span&gt;: 572,&lt;br/&gt;      &lt;span&gt;&quot;cost&quot;&lt;/span&gt;: 687.41,&lt;br/&gt;      &lt;span&gt;&quot;chosen&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;cause&quot;&lt;/span&gt;: &lt;span&gt;&quot;cost&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  ],&lt;br/&gt;  &lt;span&gt;&quot;analyzing_roworder_intersect&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;usable&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;cause&quot;&lt;/span&gt;: &lt;span&gt;&quot;too_few_roworder_scans&quot;&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;},&lt;br/&gt;&lt;span&gt;&quot;chosen_range_access_summary&quot;&lt;/span&gt;: {&lt;br/&gt;  &lt;span&gt;&quot;range_access_plan&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;range_scan&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;index&quot;&lt;/span&gt;: &lt;span&gt;&quot;IX_name&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;rows&quot;&lt;/span&gt;: 572,&lt;br/&gt;    &lt;span&gt;&quot;ranges&quot;&lt;/span&gt;: [&lt;br/&gt;      &lt;span&gt;&quot;Bobby\u0000\u0000\u0000\u0000\u0000 &amp;lt;= name &amp;lt;= Bobbyÿÿÿÿÿ&quot;&lt;/span&gt;&lt;br/&gt;    ]&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;rows_for_plan&quot;&lt;/span&gt;: 572,&lt;br/&gt;  &lt;span&gt;&quot;cost_for_plan&quot;&lt;/span&gt;: 687.41,&lt;br/&gt;  &lt;span&gt;&quot;chosen&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;...&lt;br/&gt;}&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;下面我们根据代价模型来推演一下代价的计算过程：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;走全表扫描的代价：io_cost + cpu_cost = （数据页个数 * io_block_read_cost）+ (数据行数 * row_evaluate_cost + 1.1)  = （data_length / block_size + 1）+ (rows * 0.2 + 1.1) =  (9977856 / 16384 + 1) + (105084 * 0.2 + 1.1) =  21627.9。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;走二级索引IX_name的代价：io_cost + cpu_cost = (预估范围行数 * io_block_read_cost + 1) + (数据行数 * row_evaluate_cost + 0.01) =  (572 * 1 +  1) + (572*0.2 + 0.01) = 687.41。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;走二级索引IX_dt的代价：io_cost + cpu_cost = (预估范围行数 * io_block_read_cost + 1) + (数据行数 * row_evaluate_cost + 0.01)  = (38698 * 1 + 1) + (38698*0.2 + 0.01) = 46438.61。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;走二级索引IX_dt_name的代价: io_cost + cpu_cost = (预估范围行数 * io_block_read_cost + 1) + (数据行数 * row_evaluate_cost + 0.01)  = (38292 * 1 + 1) + (38292 * 0.2 + 0.01) = 45951.41。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;走二级索引IX_name_dt的代价：io_cost + cpu_cost = (预估范围行数 * io_block_read_cost + 1) + (数据行数 * row_evaluate_cost + 0.01)  = (572 * 1 +  1) + (572*0.2 + 0.01) = 687.41。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;补充说明&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;计算结果在小数上有偏差，因为MySQL使用%g打印浮点数，小数会以最短的方式输出。 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;除“+1.1 +1”这种调节值外，Cost计算还会出现+0.01, 它是为了避免index scan和range scan出现Cost的竞争。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Cost计算是基于MySQL的默认参数配置，如果Cost Model参数改变，optimizer_switch的选项不同，数据分布不同都会导致最终Cost的计算结果不同。 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;data_length可查询information_schema.tables，block_size默认16K。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.4 基于代价的索引推荐思路&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;如果想借助MySQL优化器给慢查询计算出最佳索引，那么需要真实地在业务表上添加所有候选索引。对于线上业务来说，直接添加索引的时间空间成本太高，是不可接受的。MySQL优化器选最佳索引用到的数据是索引元数据和统计数据，所以我们想是否可以通过给它提供候选索引的这些数据，而非真实添加索引的这种方式来实现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;通过深入调研MySQL的代码结构和优化器流程，我们发现是可行的：一部分存在于Server层的frm文件中，比如索引定义；另一部分存在于Engine层中，或者通过调用Engine层的接口函数来获取，比如索引中某个列的不同值个数、索引占据的页面大小等。索引相关的信息，如下图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;249&quot; data-ratio=&quot;0.44532488114104596&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz72C6lxY9mGHK0XItFGpbmLOV51yAwV8pZpEcqhuTbjfPcMmYLbotRcA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;631&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;基于代价的索引推荐思路&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因为MySQL本身就支持自定义存储引擎，所以索引推荐思路是构建一个支持虚假索引的存储引擎，在它上面建立包含候选索引的空表，再采集样本数据，计算出统计数据提供给优化器，让优化器选出最优索引，整个调用关系如下图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;507&quot; data-ratio=&quot;0.8763866877971473&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7JU49Uf9QbT9Uc2SWUg8MEvMd48Dk7Vvl5PhBtGH5h2kftxHOrrC01Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;631&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;基于代价的索引推荐思路&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3 索引推荐实现&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;因为存储引擎本身并不具备对外提供服务的能力，直接在MySQL Server层修改也难以维护，所以我们将整个索引推荐系统拆分成支持虚假索引的Fakeindex存储引擎和对外提供服务的Go-Server两部分，整体架构图如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;458&quot; data-ratio=&quot;0.7917059377945335&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz76CTgUXlYHDM7JmmGuelQpI9ZF5KiaPicn3s6DRhrUkRLXQc39sxLRafw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1061&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;架构图&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;首先简要介绍一下Fakeindex存储引擎，这是一个轻量级的存储引擎，负责将索引的相关接口透传到Go-Server部分。因为它必须采用C++实现，与Go-Server间存在跨语言调用的问题，我们使用了Go原生的轻量级RPC技术+cgo来避免引入重量级的RPC框架，也不必引入第三方依赖包。函数调用链路如下所示，MySQL优化器调用Fakeindex的C++函数，参数转换成C语言，然后通过cgo调用到Go语言的方法，再通过Go自带的RPC客户端向服务端发起调用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;74&quot; data-ratio=&quot;0.1287037037037037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7Yd8LP3AgzBUPLjX6vOl3mV3QJM6cJLVv6R0MlMYYBgFumUsdDEtkpQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;调用链路&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;下面将重点阐述核心逻辑Go-Server部分，主要流程步骤如下。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1 前置校验&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;首先根据经验规则，排除一些不支持通过添加索引来提高查询效率的场景，如查系统库的SQL，非select、update、delete SQL等。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.2 提取关键列名&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;这一步提取SQL可用来添加索引的候选列名，除了选择给出现在where中的列添加索引，MySQL对排序、聚合、表连接、聚合函数（&lt;/span&gt;&lt;span&gt;如max&lt;/span&gt;&lt;span&gt;）也支持使用索引来提高查询效率。我们对SQL进行语法树解析，在树节点的where、join、order by、group by、聚合函数中提取列名，作为索引的候选列。值得注意的是，对于某些SQL，还需结合表结构才能准确地提取，比如：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;select * from tb1, tb2 where a = 1，列a归属tb1还是tb2取决于谁唯一包含列a。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;select * from  tb1 natural join tb2 where tb1.a = 1，在自然连接中，tb1和tb2默认使用了相同列名进行连接，但SQL中并没有暴露出这些可用于添加索引的列。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.3 生成候选索引&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;将提取出的关键列名进行全排列即包含所有的索引组合，如列A、B、C的所有索引组合是[&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;AB&#x27;, &#x27;AC&#x27;, &#x27;BA&#x27;, &#x27;BC&#x27;, &#x27;CA&#x27;, &#x27;CB&#x27;, &#x27;ABC&#x27;, &#x27;ACB&#x27;, &#x27;BAC&#x27;, &#x27;BCA&#x27;, &#x27;CAB&#x27;, &#x27;CBA&#x27;]，但还需排除一些索引才能得到所有的候选索引，比如：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;已经存在的索引，如存在AB，需排除AB、A，因为MySQL支持使用前缀索引。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;超过最大索引长度3072字节限制的索引。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一些暂时不支持的索引，如带地理数据类型列的空间索引。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.4 数据采集&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;直接从业务数据库采集，数据分成元数据、统计数据、样本数据三部分：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;元数据&lt;/strong&gt;：即表的定义数据，包括列定义、索引定义，可通过show create table获取。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;统计数据&lt;/strong&gt;：如表的行数、表数据大小、索引大小，可以通过查询infromation_schema.tables获取；已存在索引的cardinality（&lt;span&gt;关键值：即索引列的不同值个数，值越大，索引优化效果越明显&lt;/span&gt;），可以通过查询mysql.innodb_index_stats表获取。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;样本数据&lt;/strong&gt;：候选索引为假索引，采集的统计数据并不包含假索引的数据，这里我们通过采集原表的样本数据来计算出假索引的统计数据。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;475&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;388&quot; data-ratio=&quot;0.8168421052631579&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7gTLBiaO14micSakg3SiblVPaG1JYMGm9OpaK80XSWbxFr92MNDp6aEia9g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;475&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;数据采集&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;下面介绍样本数据的采样算法，好的采样算法应该尽最大可能采集到符合原表数据分布的样本。比如基于均匀随机采样的方式&lt;/span&gt;&lt;code&gt;&lt;span&gt;select * from table where rand() &amp;lt; rate&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，然而它会给线上数据库造成大量I/O的问题，严重时可引发数据库故障。所以我们采用了基于块的采样方式：它参考了MySQL 8.0的直方图采样算法，如对于一张100万的表，采集10万行数，根据主键的最小值最大值将表数据均分成100个区间，每个区间取一块1000行数据，采集数据的SQL，最后将采集到的数据塞入采样表中。代码如下：&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;select A,B,C,id from table &lt;span&gt;where&lt;/span&gt; id &amp;gt;= 1000 and id &amp;lt;= 10000 &lt;span&gt;limit&lt;/span&gt; 1000;&lt;br/&gt;select A,B,C,id from table &lt;span&gt;where&lt;/span&gt; id &amp;gt;= 10000 and id &amp;lt;= 20000 &lt;span&gt;limit&lt;/span&gt; 1000;&lt;br/&gt;...&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.5 统计数据计算&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;下面举例说明两个核心统计数据的计算方式。首先是records_in_range，优化器在处理范围查询时，如果可以用索引，就会调用该函数估算走该索引可过滤出的行数，以此决定最终选用的索引。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如，对于SQL&lt;/span&gt;&lt;code&gt;&lt;span&gt;select * from table1 where A &amp;gt; 100 and B &amp;lt; 1000&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，候选索引A、B来说，优化器会调用此函数在索引页A上估算A &amp;gt; 100有多少行数，在索引页B上估计B&amp;lt;1000的行数，例如满足条件的A有200行，B有50行，那么优化器会优先选择使用索引B。对于假索引来说，我们按照该公式：样本满足条件的范围行数 * (原表行数 / 样本表行数)，直接样本数据中查找，然后按照采样比例放大即可估算出原表中满足条件的范围行数。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其次是用于计算索引区分度的cardinality。如果直接套用上述公式：样本列上不同值个数 * (原表行数 / 样本表行数)， 如上述的候选索引A，根据样本统计出共有100个不同值，那么在原表中，该列有多少不同值？一般以为是10,000 =100 *（1,000,000/100,000）。但这样计算不适用某些场景，比如状态码字段，可能最多100个不同值。针对该问题，我们引入斜率和两趟计算来规避，流程如下：&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;第一趟计算&lt;/strong&gt;：取样本数据一半来统计A的不同值个数R1，区间[min_id, min_id+(max_id - min_id) / 2]。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;第二趟计算&lt;/strong&gt;：取所有样本据统计A的不同值个数R2，区间[min_id, max_id]
计算斜率：R2/R1。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;判断斜率&lt;/strong&gt;：如果斜率小于1.1，为固定值100，否则根据采样比例放大，为10,000。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;421&quot; data-ratio=&quot;0.7273809523809524&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz75HWy70B0gt1LicIFvw5MeFlar5HwNNT0UvCb13unibCnCWpoicR2iaGRjg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;840&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;统计数据计算&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.6 候选索引代价评估&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;这一步让优化器帮助我们从候选索引中选出最佳索引，主要步骤如下：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;建包含候选索引的表：将候选索引塞入原表定义，并把存储引擎改为Fakeindex，在推荐引擎的mysqld上创建表。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;通过在推荐引擎mysqld上explain format=json SQL，获取优化器选择的索引。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;span&gt;值得注意的是，MySQL表最多建64个索引（&lt;/span&gt;&lt;span&gt;二级索引&lt;/span&gt;&lt;span&gt;），计算所有候选索引的可能时，使用的是增幅比指数还恐怖的全排列算法。如下图所示，随着列数的增加，候选索引数量急剧上升，在5个候选列时的索引组合数量就超过了MySQL最大值，显然不能满足一些复杂SQL的需求。统计美团线上索引列数分布后，我们发现，95%以上的索引列数都&amp;lt;=3个。同时基于经验考虑，3列索引也可满足绝大部分场景，剩余场景会通过其他方式，如库表拆分来提高查询性能，而不是增加索引列个数。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;473&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;270&quot; data-ratio=&quot;0.5708245243128964&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7I9rZdoLibKBjYJr2lD2stsuWFicSbepBlPC4aUNamgUXfIlxTRLQ9srQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;473&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;候选索引代价评估&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;但即便最多推荐3列索引，在5个候选列时其排列数量85=&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -839.4 5905.5 1152.3&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msubsup&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;41&quot; d=&quot;M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(750, 363) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(750, -287.9) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;35&quot; d=&quot;M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1375.8, 0)&quot;&gt;&lt;path data-c=&quot;2B&quot; d=&quot;M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msubsup&quot; transform=&quot;translate(2376, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;41&quot; d=&quot;M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(750, 363) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(750, -287.9) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;35&quot; d=&quot;M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3751.8, 0)&quot;&gt;&lt;path data-c=&quot;2B&quot; d=&quot;M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msubsup&quot; transform=&quot;translate(4752, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;41&quot; d=&quot;M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(750, 369.2) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;33&quot; d=&quot;M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(750, -297.3) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;35&quot; d=&quot;M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;也远超64。这里我们采用归并思路。如下图所示，将所有候选索引拆分到多个表中，采用两次计算，先让MySQL优化器选出批次一的最佳索引，可采用并行计算保证时效性，再MySQL选出批次一所有最佳索引的最佳索引，该方案可以最多支持4096个候选索引，结合最大索引3列限制，可以支持计算出17个候选列的最佳索引。&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;561&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;551&quot; data-ratio=&quot;0.9824253075571178&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7qDLw0RSWYEKsy8NY6z6U6GVX77UbHh92LeXiaC9u4gH4y40CotgYTOg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;569&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;候选索引代价评估&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4 推荐质量保证&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;为了得到索引推荐质量大致的整体数据，我们使用美团数据库最近一周的线下慢查询数据，共246G、约3万个SQL模板用例做了一个初步测试。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;118&quot; data-ratio=&quot;0.20459518599562362&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7iabJwjT4mwDFGvN6LiaIsqqRicYw7YvorTjWhwaagFfV8RibLshkX7CFDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1828&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;建议质量保证&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;从结果可以看出，系统基本能覆盖到大部分的慢查询。但还是会出现无效的推荐，大致原因如下：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;索引推荐计算出的Cost严重依赖样本数据的质量，在当表数据分布不均或数据倾斜时会导致统计数据出现误差，导致推荐出错误索引。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;索引推荐系统本身存在缺陷，从而导致推荐出错误索引。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;MySQL优化器自身存在的缺陷，导致推荐出错误索引。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;span&gt;因此，我们在业务添加索引前后增加了索引的有效性验证和效果追踪两个步骤，整个流程如下所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;131&quot; data-ratio=&quot;0.22592592592592592&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7VNEYEAUWGEv9bRUoH2MKzvstEPLf2OISXraw0MQTFzsrhib86QQ7uEQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;全链路&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.1 有效性验证&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;因为目前还不具备大规模数据库备份快速还原的能力，所以无法使用完整的备份数据做验证。我们近似地认为，如果推荐索引在业务库上取得较好的效果，那么在样本库也会取得不错效果。通过真正地在样本库上真实执行SQL，并添加索引来验证其有效性，验证结果展示如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;168&quot; data-ratio=&quot;0.28958333333333336&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7y1K27K97ajRSfCOoK7JT0O8VAAuHKYEOpBPfQia5rTia1Sl5UxPftnTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1920&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;有效性验证&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.2 效果追踪&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;考虑到使用采样数据验证的局限性，所以当在生产环境索引添加完毕之后，会立即对添加的索引进行效果追踪。一方面通过explain验证索引是否被真正用到，以及Cost是否减小；另一方面用Flink实时跟踪该数据库的全量SQL访问数据，通过对比索引添加前后，该SQL的真实执行时间来判断索引是否有效。如果发现有性能方面的回退，则立即发出告警，周知到DBA和研发人员。生成的报告如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;359&quot; data-ratio=&quot;0.62125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7te3Wl4Xv35s3keiaZBicph1ibXMs9yNSvhjfFqUXYFibIUQtwfjneiaFOIA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;效果追踪&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.3 仿真环境&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;当推荐链路出现问题时，直接在线上排查验证问题的话，很容易给业务带来安全隐患，同时也降低了系统的稳定性。对此我们搭建了离线仿真环境，利用数据库备份构建了和生产环境一样的数据源，并完整复刻了线上推荐链路的各个步骤，在仿真环境回放异常案例，复现问题、排查根因，反复验证改进方案后再上线到生产系统，进而不断优化现有系统，提升推荐质量。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;171&quot; data-ratio=&quot;0.2953703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz76kPmRMCL38GGgp2Dr5L7IE125LIRwSKNutNgq5iaaQYz9f8mhIVXHbg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;仿真环境&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.4 测试案例库&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;在上线过程中，往往会出现改进方案修复了一个Bug，带来了更多Bug的情况。能否做好索引推荐能力的回归测试，直接决定了推荐质量的稳定性。于是，我们参考了阿里云的技术方案，计划构建一个尽可能完备的测试案例库用于衡量索引推荐服务能力强弱。但考虑影响MySQL索引选择的因素众多，各因素间的组合，SQL的复杂性，如果人为去设计测试用例是是不切实际的，我们通过下列方法自动化收集测试用例：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;利用美团线上的丰富数据，以影响MySQL索引选择的因素特征为抓手，直接从全量SQL和慢SQL中抽取最真实的案例，不断更新现有测试案例库。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;在生产的推荐系统链路上埋点，自动收集异常案例，回流到现有的测试案例库。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;对于现有数据没有覆盖到的极端场景，采用人为构造的方案，补充测试用例。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;326&quot; data-ratio=&quot;0.562962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7jaYA8u7hp6Dm6zjIibJtTic5e7lOiaibcWzOrupQlVoYff1Gr41ltTzF2A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;测试案例库&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5 慢查询治理运营&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;我们主要从时间维度的三个方向将慢查询接入索引推荐，推广治理：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;73&quot; data-ratio=&quot;0.12609238451935081&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7WBqPZ772NaoGmTdCkVZLAp3GKsoa4AWWWQe3V0Tu3zuKVGXDhDGP4A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;801&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;慢查询治理运营&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5.1 过去-历史慢查询&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;这类慢查询属于过去产生的，并且一直存在，数量较多，治理推动力不足，可通过收集历史慢查询日志发现，分成两类接入：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;核心数据库&lt;/strong&gt;：该类慢查询通常会被周期性地关注，如慢查询周报、月报，可直接将优化建议提前生成出来，接入它们，一并运营治理。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;普通数据库&lt;/strong&gt;：可将优化建议直接接入数据库平台的慢查询模块，让研发自助地选择治理哪些慢查询。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5.2 现在-新增慢查询&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;这类慢查询属于当前产生的，数量较少，属于治理的重点，也可通过实时收集慢查询日志发现，分成两类接入：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;影响程度一般的慢查询&lt;/strong&gt;：可通过实时分析慢查询日志，对比历史慢查询，识别出新增慢查询，并生成优化建议，为用户创建数据库风险项，跟进治理。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;影响程度较大的慢查询&lt;/strong&gt;：该类通常会引发数据库告警，如慢查询导致数据库Load过高，可通过故障诊断根因系统，识别出具体的慢查询SQL，并生成优化建议，及时推送到故障处理群，降低故障处理时长。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5.3 未来-潜在慢查询&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;这类查询属于当前还没被定义成慢查询，随着时间推进可能变成演变成慢查询，对于一些核心业务来说，往往会引发故障，属于他们治理的重点，分成两类接入：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;未上线的准慢查询&lt;/strong&gt;：项目准备上线而引入的新的准慢查询，可接入发布前的集成测试流水线，Java项目可通过 agentmain的代理方式拦截被测试用例覆盖到的SQL，再通过经验+explain识别出慢查询，并生成优化建议，给用户在需求管理系统上创建缺陷任务，解决后才能发布上线。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;已上线的准慢查询&lt;/strong&gt;：该类属于当前执行时间较快的SQL，随着表数据量的增加，会演变成慢查询，最常见的就是全表扫描，这类可通过增加慢查询配置参数log_queries_not_using_indexes记录到慢日志，并生成优化建议，为用户创建数据库风险项，跟进治理。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;6 项目运行情况&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;当前，主要以新增慢查询为突破点，重点为全表扫描推荐优化建议。目前我们已经灰度接入了一小部分业务，共分析了六千多条慢查询，推荐了一千多条高效索引建议。另外，美团内部的研发同学也可通过数据库平台自助发起SQL优化建议工单，如下图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;291&quot; data-ratio=&quot;0.5037037037037037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz7spmwtSR1u3dbS5QGUZOZZjarZicNQEh1rtnWIQ5J0sFhAgH1MVcqu5w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;RDS平台发起&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另外在美团内部，我们已经和数据库告警打通，实现了故障发现、根因分析、解决方案的自动化处理，极大地提高了故障处理效率。下面是一个展示案例，当数据库集群发生告警，我们会拉一个故障群，先通过根因定位系统，如果识别出慢查询造成的，会马上调用SQL优化建议系统，推荐出索引，整个处理流程是分钟级别，都会在群里面推送最新消息。如下图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;323&quot; data-ratio=&quot;0.5578125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hEx03cFgUsUZwgCRT3IibKB8g48hV0Fz70Ks7icGD2ID2erY4kfEEmXiaKVagAjLnuicXmebrUU4HQkpo0L3YtB6bg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;告警诊断&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;7 未来规划&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;考虑到美团日均产生近亿级别的慢查询数据，为了实现对它们的诊断分析，我们还需要提高系统大规模的数据并发处理的能力。另外，当前该系统还是针对单SQL的优化，没有考虑维护新索引带来的代价，如占用额外的磁盘空间，使写操作变慢，也没有考虑到MySQL选错索引引发其他SQL的性能回退。对于业务或者DBA来说，我们更多关心的是整个数据库或者集群层面的优化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;业界如阿里云的DAS则是站在全局的角度考量，综合考虑各个因素，输出需要创建的新索引、需要改写的索引、需要删除的索引，实现数据库性能最大化提升，同时最大化降低磁盘空间消耗。未来我们也将不断优化和改进，实现类似基于Workload的全局优化。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;本文作者&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;粟含，美团基础研发平台/基础技术部/数据库平台研发组工程师。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;----------  END  ----------&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;也许你还想看&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;  | &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651751923&amp;amp;idx=1&amp;amp;sn=3908b323818b299c13cb19da24d2eb91&amp;amp;chksm=bd125cbe8a65d5a89a72e9b39e04da8ad78a609ed886c7f70dfcaebfb78aebd63f5701cc7787&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;美团MySQL数据库巡检系统的设计与应用&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651751923&amp;amp;idx=1&amp;amp;sn=3908b323818b299c13cb19da24d2eb91&amp;amp;chksm=bd125cbe8a65d5a89a72e9b39e04da8ad78a609ed886c7f70dfcaebfb78aebd63f5701cc7787&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;美团MySQL数据库巡检系统的设计与应用&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;美团MySQL数据库巡检系统的设计与应用&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;  |&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651747996&amp;amp;idx=1&amp;amp;sn=0879656c7453333a22e814b49f68ea23&amp;amp;chksm=bd12afd18a6526c7ab082991100437ccc3c6618b9f1417eff3dded0efd870cf9530148f62021&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;SQL解析在美团点评中的应用&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;SQL解析在美团中的应用&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;  |&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://tech.meituan.com/2014/06/30/mysql-index.html&quot; textvalue=&quot;MySQL索引原理及慢查询优化&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;MySQL索引原理及慢查询优化&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;阅读更多&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;---&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765958&amp;amp;idx=1&amp;amp;sn=8201546812e5a95a2bee9dffc6d12f00&amp;amp;chksm=bd12658b8a65ec9de2f5be1e96796dfb3c8f1a374d4b7bd91266072f557caf8118d4ddb72b07&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;前‍端&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;前端&lt;/a&gt;&lt;span&gt;&lt;strong&gt; |&lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://t.1yb.co/jo7v&quot; textvalue=&quot; 安全&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt; &lt;/strong&gt; &lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765981&amp;amp;idx=1&amp;amp;sn=c2dd86f15dee2cbbc89e27677d985060&amp;amp;chksm=bd1265908a65ec86d4d08f7600d1518b61c90f6453074f9b308c96861c045712280a73751c73&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;算‍法&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;算法&lt;/a&gt;&lt;span&gt;&lt;strong&gt; |&lt;/strong&gt; &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765982&amp;amp;idx=1&amp;amp;sn=231b41f653ac7959f3e3b8213dcec2b0&amp;amp;chksm=bd1265938a65ec85630c546169444d56377bc2f11401d251da7ca50e5d07e353aa01580c7216&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;后‍端&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;后端&lt;/a&gt;&lt;span&gt;&lt;strong&gt; | &lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765964&amp;amp;idx=1&amp;amp;sn=ab6d8db147234fe57f27dd46eec40fef&amp;amp;chksm=bd1265818a65ec9749246dd1a2eb3bf7798772cc4d5b4283b15eae2f80bc6db63a1471a9e61e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数‍据&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;数据&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765965&amp;amp;idx=1&amp;amp;sn=37e0c56c8b080146ce5249243bfd84d8&amp;amp;chksm=bd1265808a65ec96d3a2b2c87c6e27c910d49cb6b149970fb2db8bf88045a0a85fed2e6a0b84&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;安‍全&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;安全&lt;/a&gt;&lt;span&gt;&lt;strong&gt; | &lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765972&amp;amp;idx=1&amp;amp;sn=afe02ec92762c1ce18740d03324c4ac3&amp;amp;chksm=bd1265998a65ec8f10d5f58d0f3681ddfc5325137218e568e1cda3a50e427749edb5c6a7dcf5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;And‍roid&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;Android&lt;/a&gt;&lt;span&gt;&lt;strong&gt; |&lt;/strong&gt; &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765973&amp;amp;idx=1&amp;amp;sn=32a23bf1d278dda0398f993ab60a697e&amp;amp;chksm=bd1265988a65ec8e630ef4d24b4946ab6bd7e66702c1d712481cf3c471468a059c470a14c30d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;iO‍S&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;iOS&lt;/a&gt;&lt;span&gt; &lt;strong&gt; |&lt;/strong&gt; &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765963&amp;amp;idx=1&amp;amp;sn=a3de9ef267d07d94118c1611776a4b28&amp;amp;chksm=bd1265868a65ec906592d25ad65f2a8516338d07ec3217059e6975fc131fc0107d66a8cd2612&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;运‍维&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;运维&lt;/a&gt;&lt;span&gt;&lt;strong&gt; | &lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765974&amp;amp;idx=1&amp;amp;sn=763c1e37d04acffd0142a2852ecfb000&amp;amp;chksm=bd12659b8a65ec8dfcfeb2028ef287fae7c38f134a665375ba420556ce5d2e4cf398147bd12e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;测‍试&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;测试&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MjM5NjQ5MTI5OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVGibnsaEib3aNlqF0tOrA2RGEmNSbia2nnohE4Tpf95UyTiaSjDVbHRfY8WNBeTuLLTaVdSckkNyEx1Q/0?wx_fmt=png&quot; data-nickname=&quot;美团技术团队&quot; data-alias=&quot;meituantech&quot; data-signature=&quot;10000+工程师，如何支撑中国领先的生活服务电子商务平台？数亿消费者、数百万商户、2000多个行业、几千亿交易额背后是哪些技术在支撑？这里是美团、大众点评、美团外卖、美团配送、美团优选等技术团队的对外窗口。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d7a58970b536ca688b5fc9267208974e</guid>
<title>如果你是一个Golang面试官，你会问哪些问题？</title>
<link>https://toutiao.io/k/0acpnu3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MzA0ODkyMA==&amp;amp;mid=2655078432&amp;amp;idx=2&amp;amp;sn=f1ba1fa5fbfbcf98a3e6f610b258cf05&amp;amp;chksm=bd2918178a5e9101b993d9e84d783562c995577cec855adf32ccb5946ff4da21fd6e89ba078e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AjN1jquNavibHVJLA1Veb2tAXpnl02QjBcWiaSWj9vUVqq42f2lQNOicxEyUB86OwrE3YovoAQTWY9eMNzz74SttQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MzA0ODkyMA==&amp;amp;mid=2655078432&amp;amp;idx=2&amp;amp;sn=f1ba1fa5fbfbcf98a3e6f610b258cf05&amp;amp;chksm=bd2918178a5e9101b993d9e84d783562c995577cec855adf32ccb5946ff4da21fd6e89ba078e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;选对圈子，一切都对了！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;选对圈子，一切都对了！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;没有假如，我就是一个Golang面试官，来自百度。同时&lt;strong&gt;我到百度之前也面过头条，腾讯，小米，高德的golang，基本都过了。&lt;/strong&gt;我回答应该还是比较有说服力。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;事实上，golang的问题只占我面试问题的20%左右。问东西的顺序不一定是下面的顺序，有的时候我会根据简历选择二分法难度来问，直接问一个难度适中的问题。说上来就继续二分法筛。&lt;strong&gt;下面是我问过的问题&lt;/strong&gt;。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1，make和new差别，引用类型的意义&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2，逃逸分析&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3，channel的实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4，gmp与gc，重点问题（网络io等待队列，读写屏障）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5，map的实现，重点问题（sync.map的实现，map实现随机的方法）&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;期间会根据实际情况，从这几个题发散问一些细节，但是难度不会太难了。因为我面的是p6级别的，问源码有点欺负人了。另外会问一个开发性问题，你写go遇到的坑点。从这里也可以发散问一些，但是不会问太多了。这几个问题在10分钟之内肯定要问完的。我的面试范围和我之前遇到过的面试基本都在https://draveness.me/golang/ 内，这个教程还是非常不错的。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这些问题不一定都要答上来，我是综合考察的，我写这几个题目也不是让大家去背这几个题的，只是想告诉大家面试的难度一般如何，顺便说几个经典题目。另外我主要关注的问题其实主要是mysql，redis，mq，算法，分布式。有人看的话，我就补充一下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;补充mysql&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;先声明一下，我说的面试题都是个人向的，其实大家要面哪家公司的时候，搜那家公司的面试题用处其实不大，因为面试官并没有说题库，或者统一标准的说法。如果我去了其他家公司当面试官我一样也会这么问（注意是提问方式和难度，题目我会换的）。而你碰到百度其他面试官，也很可能不会按我这么问。另外，因为我面的校招到10年的都有，所以具体问法也会灵活调整。说到校招，这次大校招我也被安排当面试官了，校招的朋友也可以关注一下，如果能答出来，那就惊喜级别。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;补充一下我对mysql的考察方式。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1，八股，为什么用b+树不用b树&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以第一题为分界线，答出来了问下面的&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2，说说对mvcc的理解&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3，幻读是怎么解决的&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4，redo，undo的作用和实现&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5，事务的实现&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;答不出第一题就问，下面就是纯八股了&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2，索引怎么建&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3，联合索引最左前缀&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;4，聚簇索引&lt;/span&gt;&lt;svg viewbox=&quot;0 0 15 15&quot;&gt;&lt;path d=&quot;M10.89 9.477l3.06 3.059a1 1 0 0 1-1.414 1.414l-3.06-3.06a6 6 0 1 1 1.414-1.414zM6 10a4 4 0 1 0 0-8 4 4 0 0 0 0 8z&quot; fill=&quot;currentColor&quot;/&gt;&lt;/svg&gt;&lt;span&gt;与回表&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果觉得前半部分回答得不行，就会转问后半部分的简单题。和上面一样，我问的问题和我遇见过的问题，基本都在《&lt;em&gt;MySQL技术内幕&lt;/em&gt;:InnoDB存储引擎》姜承尧&lt;/span&gt;&lt;svg viewbox=&quot;0 0 15 15&quot;&gt;&lt;path d=&quot;M10.89 9.477l3.06 3.059a1 1 0 0 1-1.414 1.414l-3.06-3.06a6 6 0 1 1 1.414-1.414zM6 10a4 4 0 1 0 0-8 4 4 0 0 0 0 8z&quot; fill=&quot;currentColor&quot;/&gt;&lt;/svg&gt;&lt;span&gt;老师的书里面。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;补充redis&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;redis的东西虽然不多，但是也是必问的。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1，底层数据结构实现，重点问题如：压缩列表&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2，aof与rdb，重点问题如：aof重写机制&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3，为什么用跳表&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;4，分布式锁与redlock&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;5，三种分布式的结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;6，大KEY&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基本上说明白一半就行了，和上面一样，我问的问题和我遇见过的问题，大部分都在《Redis设计与实现》里面。因为redis的问题都不算难，如果全答上来了，我可能会问一个：在扩容rehash的时候scan扫集合，会不会扫到重复的数据。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;补充mq+es+分布式&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;那就补一下剩下的常问问题吧，mq主要是kafka。下面基本上工作3年之内不怎么问，3年以上的说上1/3到1/2就通过。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1，kafka的零拷贝和顺序io 零拷贝最好说说细节，其实就是用户空间和内核空间mmap&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2，kafka的分片，分片的读一致性（水位和活跃组？忘了叫什么了）和写一致性怎么保证&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3，es的倒排索引，和分片的查询召回&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;4，分布式锁，redis redlock etcd&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;5，分布式事务 2pc 3pc tcc&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;6，分布式共识协议 raft和paxos&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;7，分布式数据库 CAP BASE的概念 etcd tidb的了解&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;额外的问题，只有简历写了我才会问&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1，k8s的应用和架构（k8s其实我也没深入研究，随便）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2，监控prometheus，比如里面时序数据库TSDB&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3，微服务架构的内容，比如服务发现和链路追踪的工具&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;4，校招的话问问tcp&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;5，其他我感兴趣的东西&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;6，算法题必问，一般先选一个中等偏难的，难度参见周赛第三题。要是很顺畅就加一个第四题难度（困难），做不出来就换一个第二题难度（中等偏简单）。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;7，架构设计，因为我只是一面，这种问题一般留给二面问。不过我给的建议是，mysql分表，redis缓存，kafka削峰这三板斧&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;写在最后，其实我的标准只有一个，我的所有提问也是围绕这一标准来的，就是让我感受到你对技术的热情，对技术路线有清晰规划，并且正在进行系统性地有条理的学习持续一年以上，比如看书，事实上我也是这么要求自己的。我相信满足了这个条件，你面其他公司也很容易。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;链接：https://www.zhihu.com/question/67846139/answer/2105444792&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;加入我们，成为更好的开发者！&lt;/strong&gt;&lt;strong&gt;&lt;br/&gt;↓↓↓&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNavicibroqCN98y5SNT9NbfA3oHYQiaicFScHFfppgek7ZGicJiaHK45qc2zoccBibfEzIvzTsI4AB2xO2IaOw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a11ccf48683e5c2efcaf540855a105c5</guid>
<title>IM开发干货分享：浅谈IM系统中离线消息、历史消息的最佳实践</title>
<link>https://toutiao.io/k/vskpw1w</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;js-text&quot;&gt;&amp;#13;
  &lt;p class=&quot;js-site&quot;&gt;Copyright © 2014-2022 即时通讯网 - 即时通讯开发者社区 &lt;span class=&quot;hidden-xs&quot;&gt;/ 版本 V4.4&lt;/span&gt;&lt;/p&gt;&amp;#13;
  &lt;p class=&quot;js-ipc&quot;&gt;苏州网际时代信息科技有限公司 &lt;a href=&quot;https://beian.miit.gov.cn/&quot; getarticles=&quot;&quot; target=&quot;_blank&quot;&gt;(苏ICP备16005070号-1）&lt;/a&gt;&lt;/p&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>