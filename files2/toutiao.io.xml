<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>6301a280edf2a2d67f99bba7dd4525fd</guid>
<title>这 5 个 GitHub 项目 + 3 个网站，助你一飞冲天</title>
<link>https://toutiao.io/k/ql650fu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小伙伴们周末好呀，这次来更新一波学习资源啦~ 👍&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前推荐过一些书，这次我们就来看看 &lt;strong&gt;4ye&lt;/strong&gt; 平时常关顾的一些学习网站叭！😋&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（同时会更新在菜单栏的 &lt;strong&gt;宝藏资源&lt;/strong&gt; 中，方便查找）&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;资源一览&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6080808080808081&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8ul4cnxKiamJ1rM0y4BL5aqicteOicQlLEZExVYSBeRuLqO5SvDkuvoNddA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;990&quot;/&gt;&lt;figcaption&gt;image-20210807235820378&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;CyC2018 / CS-Notes&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;高达 &lt;strong&gt;136K&lt;/strong&gt; star 的项目! 😄&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;📚 技术面试必备基础知识、Leetcode、计算机操作系统、计算机网络、系统设计&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;概览图&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址👉  https://github.com/CyC2018/CS-Notes&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.762043795620438&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8uo9iaL5E3iayzKV0bW0ias0yyibwRWoe1NFFZDACTcvjne5xRloJgnSUusw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;685&quot;/&gt;&lt;figcaption&gt;image-20210807210235663&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;特点&lt;span/&gt;&lt;/h4&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Snailclimb / JavaGuide&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Guide哥的，高达 &lt;strong&gt;109k&lt;/strong&gt; star ！😄&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;「Java学习+面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide！&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;概览图&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址 👉  https://github.com/Snailclimb/JavaGuide&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;推荐国内地址👇（&lt;strong&gt;在线文档&lt;/strong&gt;）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://snailclimb.gitee.io/javaguide/#/&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.49222797927461137&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8uNEYNGjiaRYNzWkE3vAQibC7ouk23QE0aECZShPenock2pzaCAwdzAchw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1351&quot;/&gt;&lt;figcaption&gt;image-20210807213513537&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;特点&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;针对性比较强，主要是 &lt;code&gt;Java&lt;/code&gt; 以及常见的一些技术&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;基础，进阶&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;面试&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你不知道怎么复习，打开网站文档看看目录就能很快明白了 😄&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;macrozheng / mall&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个超级棒的电商项目! 高达 &lt;strong&gt;51.6k&lt;/strong&gt; star ！😄&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而且还有两个配套的项目！太顶了！👍&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;mall项目是一套电商系统，包括前台商城系统及后台管理系统，基于SpringBoot+MyBatis实现，采用Docker容器化部署。前台商城系统包含首页门户、商品推荐、商品搜索、商品展示、购物车、订单流程、会员中心、客户服务、帮助中心等模块。后台管理系统包含商品管理、订单管理、会员管理、促销管理、运营管理、内容管理、统计报表、财务管理、权限管理、设置等模块。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;概览图&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址都在这了👇&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;http://www.macrozheng.com/#/README&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;https://github.com/macrozheng/mall-learning （配套的学习教程）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;https://github.com/macrozheng/mall-swarm (微服务版)&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.47533632286995514&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8up1MwvXAefWvV6t6pUtS2FIq11oeGictsUOlIWCU1SjjTgk0Dhs3M3pg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1338&quot;/&gt;&lt;figcaption&gt;image-20210807223251628&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;特点&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你想找项目练练手的话，这是一个非常不错的选择~  从单体到微服务，都给你安排得明明白白的了，而且可以在线体验，有专门的教程！👍👍&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;doocs / advanced-java&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个开源组织 &lt;code&gt;doocs&lt;/code&gt; ， 哈哈 我加了好久了，还没贡献过（尴尬😅）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里只是列举了其中一个项目，还有其他好几个非常顶的，包括 &lt;code&gt;JVM&lt;/code&gt; 和 &lt;strong&gt;框架源码&lt;/strong&gt; ，算法，书籍等👍👍&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Core Interview Questions &amp;amp; Answers For Experienced Java(Backend) Developers | 互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;概览图&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有这么多非常顶的项目！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址 👉   https://github.com/doocs&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5214723926380368&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8unBWy6yrt8lZdwnWo5l51wNOkKz3AQSqVmrPvzc4JcYda902d39z9sg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1141&quot;/&gt;&lt;figcaption&gt;image-20210807225219109&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中一个在线文档&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址 👉  https://adjava.netlify.app/#/?id=%e4%ba%92%e8%81%94%e7%bd%91-java-%e5%b7%a5%e7%a8%8b%e5%b8%88%e8%bf%9b%e9%98%b6%e7%9f%a5%e8%af%86%e5%ae%8c%e5%85%a8%e6%89%ab%e7%9b%b2&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4663133989401968&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8uibCpudSiaaFqcpphFXk0eWFDepWfhrYvjyYiaiaEhrSYk1WbcKmicPEUU5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1321&quot;/&gt;&lt;figcaption&gt;image-20210807225300343&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;特点&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;超级多优秀的文章 👍&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;有源码分析专区！👍&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;进阶大厂必看系列 👍&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;反正我把它当作进阶修炼的地方 哈哈哈哈 😄&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;shishan100 / Java-Interview-Advanced&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个就不用过多介绍了 哈哈，从上面 &lt;code&gt;doocs&lt;/code&gt; 仓库就知道这里的文章质量得多顶 ，而且确确实实帮我打开了眼界！😋&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;中华石杉--互联网Java进阶面试训练营&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;概览图&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址 👉  https://github.com/shishan100/Java-Interview-Advanced&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6843501326259946&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8uAratM3uHyEwF9n03uDGtO5aG1TvHW1WsfHMQv87sd5cqq7f74gn2oQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;754&quot;/&gt;&lt;figcaption&gt;image-20210807230930031&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;特点&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;进阶大厂必看系列 👍&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;主要是 &lt;strong&gt;高并发&lt;/strong&gt; 类的文章👍&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业内很有名！&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;并发编程网&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说到并发，就不得不提下这个网站了，里面的内容几乎都是关于并发的，是提升并发能力的好地方 😝&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就是网站的主题有点老了，不知道为啥看着就像是用 &lt;code&gt;wordpress&lt;/code&gt; 搭建的😂&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;概览图&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址 👉  http://ifeve.com/&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.1805243445692884&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8unWvlqRkt2gFCPg4QS0uaiaIYxjlKyejzsPuiaXfDRAwzVUXNa8lukNpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1335&quot;/&gt;&lt;figcaption&gt;image-20210807231718781&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;特点&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;高质量的并发文章，如果你对并发有啥不懂的话，这里肯定是个不错的选择！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而且还有部分翻译了国外大佬的文章，能很好地解惑😄&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;阿里云知行动手实验室&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阿里的技术那没得说 哈哈&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而且这个真的是超级赞，以前我们还要自己装环境啥的，跟着文档或者视频，一步步来，现在好了，直接云端给你安排了，直接在这里练习！！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那话咋说来的 ， 就吹爆！哈哈哈&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;概览图&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址 👉  [https://start.aliyun.com](http://ifeve.com/)&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.46795366795366794&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8uPpibaqtW4dLLf1fWEibA1Nt9Pfb1Bu8EOBOYGELgDeRAquBibDga7HxCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1295&quot;/&gt;&lt;figcaption&gt;image-20210807232644268&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如我选这个 &lt;strong&gt;Arthas 基础教程&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接左边文档，右边 &lt;code&gt;shell&lt;/code&gt; 窗口，这真的太方便了！！&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.48535871156661786&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8uYsDG7SZ8RUSAZv0K7Qicx7Vdic7sTFzlUzPv3ibryHLyqpo77nIibRen3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1366&quot;/&gt;&lt;figcaption&gt;image-20210807233007404&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;特点&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;真的很赞，直接边看文档边敲代码，不用捣鼓环境先了！👍&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;力扣&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这肯定得推荐呀，因为 &lt;strong&gt;数据结构和算法&lt;/strong&gt; 真的特别重要，特别是越低层的开发，越重要！😄&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;crud 太无聊了，平时没事可以刷刷题锻炼下 哈哈 有种做数学题的感觉 还是很有意思的😝&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;概览图&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址 👉  https://leetcode-cn.com/problemset/all&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到这里有非常多&lt;strong&gt;专业的讲解&lt;/strong&gt;！，&lt;strong&gt;超级棒(๑•̀ㅂ•́)و✧&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.45018450184501846&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8uvsZGqicllrsNmhMdVkv7PzGAI5w0p788icx4qB5ia6nd73S0GpfJ6kSMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1355&quot;/&gt;&lt;figcaption&gt;image-20210807234151768&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;特点&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有很多优秀的解析！现在不用担心不会做了 哈哈😄&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;凑个数🤣&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自己的仓库 &lt;strong&gt;(lll￢ω￢)&lt;/strong&gt; ，就 &lt;code&gt;GitHub&lt;/code&gt; 主页好看些了 哈哈哈&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;不定期推荐优秀的学习资源，帮助你快速成长！共同进步，多摸鱼 哈哈哈&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;地址 👉  https://github.com/Java4ye&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.45298507462686566&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8ubx9a2mYhHXOOZnJRaFDHsw6xXcjQDvPhlMGFNxxvs84x7FHIWxo5Kw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1340&quot;/&gt;&lt;figcaption&gt;image-20210807234617130&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;额，会不定期上传一些项目啦，哈哈 有时间再好好折腾下🐷&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3646055437100213&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8u1rmIx7DklXWYJhgOwR8zrVkaC8Fzq6RkG4YFZzpK4bRLR1yaSWGWvw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;938&quot;/&gt;&lt;figcaption&gt;image-20210807235451336&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老规矩，画个图叭😝&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6487964989059081&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8u9B6z4TOzyicuvoxic3OhFhtmiaIKsCOyZtibmwx3m0pWia06h1vmmsFHsDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;914&quot;/&gt;&lt;figcaption&gt;image-20210808002110587&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;别只收藏吃灰啦！&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这话也是对我自己说  哈哈哈哈&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9866220735785953&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFLt03csToVvV7xiaGPViaa8ustGExAQuOdJ6F3NfYjicJUdhbWiaRCcMdILdpFULicrSJEfpeXIAwzMEg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;299&quot;/&gt;&lt;figcaption&gt;image-20210808091424597&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;最后&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;欢迎小伙伴们来一起探讨问题~&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果你觉得本篇文章还不错的话，那&lt;strong&gt;拜托再点点赞&lt;/strong&gt;支持一下呀😝&lt;/p&gt;&lt;p&gt;&lt;strong&gt;让我们开始这一场意外的相遇吧！~&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;欢迎留言！谢谢支持！ヾ(≧▽≦*)o 冲冲冲！！&lt;/p&gt;&lt;p&gt;&lt;strong&gt;我是4ye 咱们下期应该……很快再见！！&lt;/strong&gt; 😆&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>60710272a045417f743b0e8fcf58e083</guid>
<title>字节跳动正式开源 CloudWeGo</title>
<link>https://toutiao.io/k/c4yzbh1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>dbb1e932bf335fba4ec111bd7a04bc57</guid>
<title>庖丁解牛：图解 MySQL 8.0 优化器查询解析篇</title>
<link>https://toutiao.io/k/inuemwy</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFffVk6Sa8u3iatvUicEakd7jESC6SsFHd0usAX4zbS6m4dKia5XWKRSyFg6A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1024&quot;/&gt;&lt;/p&gt;&lt;h1&gt;&lt;br/&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一  背景和架构&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;我们都知道，利用编写程序来动态实现我们应用所需要的逻辑，从而程序执行时得到我们需要的结果。那么数据库就是一种通过输入SQL字符串来快速获取数据的应用。当然，假设没有数据库这种系统应用，用程序如何实现呢？我们可能会发现，即使不管数据如何存储、数据是否并发访问，仍然需要不断通过修改程序处理不同应用对数据的不同请求。比如大数据领域，我们通常通过非关系型数据库的API，实现对数据的获取。然而这种方式虽然入门简单，但是维护极难，而且通用性不强，即使不断进行软件架构设计或者抽象重构，仍然需要不断地变换应用，这也是为何非关系型数据库回头拥抱数据库SQL优化器的原因。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.62&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFff8G64xskEtxt5SrB2Hq4EobJ8QC0IPIJCu8qFTOXNosu45qvGbk06nA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;SQL优化器本质上是一种高度抽象化的数据接口的实现，经过该设计，客户可以使用更通用且易于理解的SQL语言，对数据进行操作和处理，而不需要关注和抽象自己的数据接口，极大地解放了客户的应用程序。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;本文就来通过图形解说的方式介绍下MySQL 8.0 SQL优化器如何把一个简单的字符串（SQL），变成数据库执行器可以理解的执行序列，最终将数据返还给客户。强大的优化器是不需要客户关注SQL如何写的更好来更快获得需要的数据，因此优化器对原始SQL一定会做一些等价的变化。在&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzOTU0NTQ0MA==&amp;amp;mid=2247504340&amp;amp;idx=1&amp;amp;sn=d061b217a5be9e245964bb5d74a3887d&amp;amp;chksm=e92aecdbde5d65cdb6841d03e3ef124cce2e0d50428e1f3aae7a81582864334d31fa5266e7dd&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《MySQL 8.0 Server层最新架构详解》&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;《MySQL 8.0 Server层最新架构详解》&lt;/span&gt;&lt;/a&gt;&lt;span&gt;一文中我们重点介绍了MySQL最新版本关于Server层解析器、优化器和执行器的总体介绍，包括一些代码结构和变化的详细展示，并且通过simple_joins函数抛砖引玉展示了MySQL优化器在逻辑变换中如何简化嵌套Join的优化。本文我们会一步一步带你进入神奇的优化器细节，详细了解优化器优化部分的每个步骤如何改变着一个SQL最终的执行。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;本文基于最新MySQL8.0.25版本，因为优化器转换部分篇幅比较长，我们分成两篇文章来介绍，第一部分介绍基于基本结构的Setup和Resolve的解析转换过程，第二部分介绍更为复杂的子查询、分区表和连接的复杂转换过程，大纲如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;Setup and Resolve&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_tables : Set up table leaves in the query block based on list of tables.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;resolve_placeholder_tables/merge_derived/setup_table_function/setup_materialized_derived : Resolve derived table, view or table function references in query block.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_natural_join_row_types : Compute and store the row types of the top-most NATURAL/USING joins.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_wild : Expand all &#x27;*&#x27; in list of expressions with the matching column references.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_base_ref_items : Set query_block&#x27;s base_ref_items.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_fields : Check that all given fields exists and fill struct with current data.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_conds : Resolve WHERE condition and join conditions&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_group : Resolve and set up the GROUP BY list.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;m_having_cond-&amp;gt;fix_fields : Setup the HAVING clause.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;resolve_rollup : Resolve items in SELECT list and ORDER BY list for rollup processing&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;resolve_rollup_item : Resolve an item (and its tree) for rollup processing by replacing items matching grouped expressions with Item_rollup_group_items and updating properties (m_nullable, PROP_ROLLUP_FIELD). Also check any GROUPING function for incorrect column.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_order : Set up the ORDER BY clause.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;resolve_limits : Resolve OFFSET and LIMIT clauses.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Window::setup_windows1: Set up windows after setup_order() and before setup_order_final()&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_order_final: Do final setup of ORDER BY clause, after the query block is fully resolved.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_ftfuncs : Setup full-text functions after resolving HAVING&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;resolve_rollup_wfs : Replace group by field references inside window functions with references in the presence of ROLLUP.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;二  详细转换过程&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;转换的整个框架是由Query_expression到Query_block调用prepare函数(sql/sql_resolver.cc)并且根据不同转换规则的要求自顶向下或者自底向上的过程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.20859375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFffqV6NgkBzZDnfF8RV1SUlAlxp4UJzETRgiaBfKfs9WPsoXb4W6OteYbg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;1  传递null到join的内表列表（propagate_nullability）&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;prepare开始先要处理nullable table，它指的是table可能包含全为null的row，根据JOIN关系（top_join_list）null row可以被传播。如果能确定一个table为nullable会使得一些优化退化，比如access method不能为EQ_REF、outer join不能优化为inner join等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;2  解析设置查询块的leave_tables（setup_tables）&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  t1.c1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; t1,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     (&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       t2.c1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; t2,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          (&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            t3.c1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; t3&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;UNION&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            t4.c1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; t4) &lt;span class=&quot;code-snippet__keyword&quot;&gt;AS&lt;/span&gt; t3a) &lt;span class=&quot;code-snippet__keyword&quot;&gt;AS&lt;/span&gt; t2a;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;未在setup_table调用之前，每个Query_block的leaf_tables是为0的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.42323651452282157&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naI5zpdkI0MIeDpL35cIS4qtCHqxsNDQ4VXTs8bxgva1r6xg31R5dwO4MDRDKQM0jrmtJibkQFkZe4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1205&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;该函数的作用就是构建leaf_tables，包括base tables和derived tables列表，用于后续的优化。setup_tables并不会递归调用，而是只解决本层的tables，并统计出本层derived table的个数。但是随后会调用resolve_placeholder_tables()-&amp;gt;resolve_derived()-&amp;gt;derived(Query_expression)::prepare-&amp;gt;Query_block::prepare来专门递归处理derived table对应的Query_expression。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.9&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFff6RUMyQEOOBdMv05mHZP4IXBKAeibjtDGLQa2zg92OKfPCaPjUjOicGibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1160&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;接下来我们根据prepare的调用顺序，继续看下针对于derived table处理的函数resolve_placeholder_tables。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;3  解析查询块Derived Table、View、Table函数 （resolve_placeholder_tables）&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;这个函数用于对derived table、view和table function的处理，如果该table已经merged过了，或者是由于使用transform_grouped_to_derived()被调用到，已经决定使用materialized table方式，则直接忽略。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.244&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFffUqS0a5Xbiau1Ouyeibpl4iagG2os0yU8AGOwTkvePJ7tNlTMqAJvzibbvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;前面已经介绍过resolve_derived()的作用，我们重点介绍merge_derived()函数，merge_derived是改变Query_expression/Query_block框架结构，将derived table或者view合并到到query block中。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;merge_derived 处理和合并Derived table&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;1）merge_derived transformation的先决条件&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;外层query block是否允许merge（allow_merge_derived）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;ul ne-level=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;外层query expression的子查询为nullptr，derived table是第一层子查询&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;ul ne-level=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;外层的外层query block可以allow_merge_derived=true，或者不包括外层的外层query block话是否为SELECT/SET&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;外层lex是否可以支持merge（lex-&amp;gt;can_use_merged()+lex-&amp;gt;can_no_use_merged()）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;derived table是否已经被标记为需要物化materialize，比如创建视图的方法是CREATE ALGORITHM=TEMPTABLE VIEW（derived_table-&amp;gt;algorithm == VIEW_ALGORITHM_TEMPTABLE）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;整个dervived table所在的查询表达式单元中，不能是（Query_expression::is_mergeable() ）：&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;ul ne-level=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Union查询&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;包含聚集、HAVING、DISTINCT、WINDOWS或者LIMIT&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;HINT或者optimizer_switch没有禁止derived_merge；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;heuristic建议合并(derived_query_expressionmerge_heuristic())；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;ul ne-level=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果derived table包含的子查询SELECT list依赖于自己的列时，不支持；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;ul ne-level=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果是dependant subquery需要多次执行时，不支持；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;derived table中如果查询块包含SEMI/ANTI-JOIN，并指定STRAIGHT_JOIN时，不支持；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果合并的derived table和现有query block的leaf table count大约 MAX_TABLES时，不支持；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;2）merge_derived transformation的转换过程&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;利用derived_table-&amp;gt;nested_join结构来辅助处理OUTER JOIN的情况。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;把derived table中的表merge到NESTED_JOIN结构体（derived_table-&amp;gt;merge_underlying_tables()）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;将derived table中的所有表连接到父查询的table_list列表中，同时把derived table从父查询中删除。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;对父查询的所有相关数据结构进行重新计算（leaf_table_count、derived_table_count、table_func_count、materialized_derived_table_count、has_sj_nests、has_aj_nests、partitioned_table_count、cond_count、between_count、select_n_having_items）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;传播设置父查询OPTION_SCHEMA_TABLE（add_base_options()）和如果是外查询JOIN的内表，传播设置nullable属性（propagate_nullability()）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;合并derived table的where条件到外查询中（merge_where()）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;建立对derived table需要获取的列的引用（create_field_translation()）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;将Derived table的结构从父查询中删除（exclude_level()）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;将derived table中的列或者表的重命名合并到父查询（fix_tables_after_pullout()/repoint_contexts_of_join_nests()）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;因为已经把derived table中包含的表merge到了父查询，所以需要对TABLE_LIST中的表所在的位置进行重新定位（remap_tables()）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;将derived table合并到父查询之后，需要重新修改原来derived table中所有对derived table中所有列的引用（fix_tables_after_pullout()）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果derived table中包含ORDER BY语句，如果满足下列条件，derived table将会保留ORDER BY并合并到父查询中，其他情况ORDER BY将会被忽略掉：&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;ul ne-level=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果父查询允许排序并且正好是只有derived table&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;不是一个UNION&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;ul ne-level=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;可以有WHERE条件，但是不能有group by或聚合函数&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;本身并不是有序的&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;过程简化为：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.34453125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFffCUes7cd9pHLMNbNCJicAAutB4gOaVb70ibFy0cwsIicBDDe92aJo3jmMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;merge_derived 图解过程&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;看起来官方的derived merge还是不够完美，无法自底向上的递归merge&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;包含的opt trace：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;trace_derived.add_utf8_table(derived_table)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       .&lt;span class=&quot;code-snippet__keyword&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;select#&quot;&lt;/span&gt;, derived_query_block-&amp;gt;select_number)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       .&lt;span class=&quot;code-snippet__keyword&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;merged&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;trace_derived.add_alnum(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;transformations_to_derived_table&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;removed_ordering&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;该优化可以通过set optimizer_switch=&quot;derived_merge=on/off&quot;来控制。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;setup_materialized_derived 设置物化Derived Table&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;对于剩下不能采用 merge 算法的 derived table ，会转为materialize 物化方式去处理。但此时只是做一些变量设置等预处理，实际的物化执行是在executor阶段执行。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_materialized_derived_tmp_table(): 设置一个临时表包含物化Derived Table的所有行数据。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;check_materialized_derived_query_blocks(): 设置属于当前Derived Table所在的查询块结构。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;trace_derived.add_utf8_table(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       .&lt;span class=&quot;code-snippet__keyword&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;select#&quot;&lt;/span&gt;, derived-&amp;gt;first_query_block()-&amp;gt;select_number)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       .&lt;span class=&quot;code-snippet__keyword&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;materialized&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;setup_table_function 处理表函数&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;如果 query block 中有 table function，整个过程会处理两遍。第一遍会跳过 table function 的 table ，第二遍才专门再对table function 的 table 执行一遍上述逻辑。这里的考虑应该是先 resolve 了外部环境（相对于table function），因为有可能函数参数会有依赖外部的 derived table。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;trace_derived.add_utf8_table(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       .add_utf8(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;function_name&quot;&lt;/span&gt;, func_name, func_name_len)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       .&lt;span class=&quot;code-snippet__keyword&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;materialized&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;4  将SELECT *的通配符展开成具体的fields（setup_wild）&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38515625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFffJPO5z4fwAicA7Hotia6PrMD0UjtMO8xYsgicAsEeLhicTeM1Std3qFTibVQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;5  建立Query_block级别的base_ref_items（setup_base_ref_items)&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;base_ref_items记录了所有Item的位置，方便查询块的其他Item可以进行引用，或者通过Item_ref及其Item_ref子类进行直接引用，例如子查询的引用（Item_view_ref）、聚合函数引用（Item_aggregate_ref）、外查询列的引用（Item_outer_ref）、subquery 子查询产生NULL value的引用辅助（Item_ref_null_helper）。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;举例说明比较复杂的Item_outer_ref：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.45703125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFffvB4g6SZwpEiafN12FNMttTTcF9YGIicCaPqnGm16EQz2rPVPkUpc5ogg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;6  对select_fields进行fix_fields()和列权限检查（setup_fields）&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;下图是比较复杂的带子查询的fixed field过程。有些field和表关联，有的要添加相应的Item_xxx_ref引用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4171875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFff19knesLIoZenTuF3ygkqXvXK481V6Hic2tX8oAgHLPtgyuhYa0ok6Ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;7  解析和fixed_fields WHERE条件和Join条件（setup_conds）&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;setup_join_cond如果有nested_join会递归调用setup_join_cond进行解析和设置。这里也顺带介绍下simplify_const_condition函数的作用，如果发现可以删除的const Item，则会用Item_func_true/Item_func_false来替代整个的条件，如图。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.20546875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFff1gt7XAesA1OWsyspeJgtQxr71XJwfLXRlN7c1AXI0UjBBD6XtEfktQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;8  解析和设置ROLLUP语句（resolve_rollup）&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在数据库查询语句中，在 GROUP BY 表达式之后加上 WITH ROLLUP 语句，可以使得通过单个查询语句来实现对数据进行不同层级上的分析与统计。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT YEAR,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       country,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       product,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       SUM(profit) AS profit&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM sales&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;GROUP BY YEAR,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         country,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         product WITH ROLLUP;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+------+---------+------------+--------+&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| year |&lt;/span&gt; country &lt;span class=&quot;code-snippet__params&quot;&gt;| product    |&lt;/span&gt; profit &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+------+---------+------------+--------+&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| Finland |&lt;/span&gt; Computer   &lt;span class=&quot;code-snippet__params&quot;&gt;|   1500 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2000 |&lt;/span&gt; Finland &lt;span class=&quot;code-snippet__params&quot;&gt;| Phone      |&lt;/span&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| Finland |&lt;/span&gt; NULL       &lt;span class=&quot;code-snippet__params&quot;&gt;|   1600 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2000 |&lt;/span&gt; India   &lt;span class=&quot;code-snippet__params&quot;&gt;| Calculator |&lt;/span&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;150&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| India   |&lt;/span&gt; Computer   &lt;span class=&quot;code-snippet__params&quot;&gt;|   1200 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2000 |&lt;/span&gt; India   &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL       |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;1350&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| USA     |&lt;/span&gt; Calculator &lt;span class=&quot;code-snippet__params&quot;&gt;|     75 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2000 |&lt;/span&gt; USA     &lt;span class=&quot;code-snippet__params&quot;&gt;| Computer   |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;1500&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| USA     |&lt;/span&gt; NULL       &lt;span class=&quot;code-snippet__params&quot;&gt;|   1575 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2000 |&lt;/span&gt; NULL    &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL       |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;4525&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2001&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| Finland |&lt;/span&gt; Phone      &lt;span class=&quot;code-snippet__params&quot;&gt;|     10 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2001 |&lt;/span&gt; Finland &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL       |&lt;/span&gt;     &lt;span class=&quot;code-snippet__number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2001&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| USA     |&lt;/span&gt; Calculator &lt;span class=&quot;code-snippet__params&quot;&gt;|     50 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2001 |&lt;/span&gt; USA     &lt;span class=&quot;code-snippet__params&quot;&gt;| Computer   |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;2700&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2001&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| USA     |&lt;/span&gt; TV         &lt;span class=&quot;code-snippet__params&quot;&gt;|    250 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2001 |&lt;/span&gt; USA     &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL       |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2001&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL    |&lt;/span&gt; NULL       &lt;span class=&quot;code-snippet__params&quot;&gt;|   3010 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| NULL |&lt;/span&gt; NULL    &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL       |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;7535&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+------+---------+------------+--------+&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;相当于做了下面的查询：&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT *&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  (SELECT YEAR,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          country,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          product,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          SUM(profit) AS profit&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   FROM sales&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   GROUP BY YEAR,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            country,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            product&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   UNION ALL SELECT YEAR,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    country,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    NULL,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    SUM(profit) AS profit&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   FROM sales&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   GROUP BY YEAR,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            country&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   UNION ALL SELECT YEAR,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    NULL,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    NULL,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    SUM(profit) AS profit&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   FROM sales&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   GROUP BY YEAR&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   UNION ALL SELECT NULL,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    NULL,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    NULL,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    SUM(profit) AS profit&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   FROM sales) AS sum_table&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ORDER BY YEAR, country, product;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+------+---------+------------+--------+&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; YEAR &lt;span class=&quot;code-snippet__params&quot;&gt;| country |&lt;/span&gt; product    &lt;span class=&quot;code-snippet__params&quot;&gt;| profit |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+------+---------+------------+--------+&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| NULL |&lt;/span&gt; NULL    &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL       |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;7535&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL    |&lt;/span&gt; NULL       &lt;span class=&quot;code-snippet__params&quot;&gt;|   4525 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2000 |&lt;/span&gt; Finland &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL       |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;1600&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| Finland |&lt;/span&gt; Computer   &lt;span class=&quot;code-snippet__params&quot;&gt;|   1500 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2000 |&lt;/span&gt; Finland &lt;span class=&quot;code-snippet__params&quot;&gt;| Phone      |&lt;/span&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| India   |&lt;/span&gt; NULL       &lt;span class=&quot;code-snippet__params&quot;&gt;|   1350 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2000 |&lt;/span&gt; India   &lt;span class=&quot;code-snippet__params&quot;&gt;| Calculator |&lt;/span&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;150&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| India   |&lt;/span&gt; Computer   &lt;span class=&quot;code-snippet__params&quot;&gt;|   1200 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2000 |&lt;/span&gt; USA     &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL       |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;1575&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| USA     |&lt;/span&gt; Calculator &lt;span class=&quot;code-snippet__params&quot;&gt;|     75 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2000 |&lt;/span&gt; USA     &lt;span class=&quot;code-snippet__params&quot;&gt;| Computer   |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;1500&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2001&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL    |&lt;/span&gt; NULL       &lt;span class=&quot;code-snippet__params&quot;&gt;|   3010 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2001 |&lt;/span&gt; Finland &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL       |&lt;/span&gt;     &lt;span class=&quot;code-snippet__number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2001&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| Finland |&lt;/span&gt; Phone      &lt;span class=&quot;code-snippet__params&quot;&gt;|     10 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2001 |&lt;/span&gt; USA     &lt;span class=&quot;code-snippet__params&quot;&gt;| NULL       |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2001&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| USA     |&lt;/span&gt; Calculator &lt;span class=&quot;code-snippet__params&quot;&gt;|     50 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| 2001 |&lt;/span&gt; USA     &lt;span class=&quot;code-snippet__params&quot;&gt;| Computer   |&lt;/span&gt;   &lt;span class=&quot;code-snippet__number&quot;&gt;2700&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;2001&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| USA     |&lt;/span&gt; TV         &lt;span class=&quot;code-snippet__params&quot;&gt;|    250 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+------+---------+------------+--------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;排序由于有NULL的问题，所以分级汇总的效果非常难弄，而且group 列不同改变，SQL复杂度来回变化，而ROLLUP很简单就可以实现效果，下面看下rollup在解析过程做了什么样的转换达到了意想不到的效果。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.40234375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFffhZhP1oxrKtPpN8TL74afsVRPh9ibLkDx9ViabSstR3ic0voE7z7oRia9iag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;9  解析和设置GROUP BY/ORDER BY语句（setup_group/setup_order）&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;其中一个函数find_order_in_list(): 尝试在select fields里去寻找可以映射的列，否则就得在最后投影的all fields里加上当前列，同时也做fix_fields。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5390625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naIY6eXziawYicpSrvsMtkaFffX5fsfRoWGOmxR4snI89d04JAnVmOsateK1mJKWhofHH2Aiag3KDiajvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;m_having_cond-&amp;gt;fix_fields : 对having条件进行fixed_fields。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;resolve_limits : 处理OFFSET和LIMIT子句（offset_limit和select_limit的Items）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;setup_ftfuncs : 如果有full-text的函数，对相关Item进行fix_fields。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;remove_redundant_subquery_clause : 对于Table Subquery的表达式，通常是IN/ANY/ALL/EXISTS/etc，如果没有聚合函数和Having子句，通常可以考虑删除不必要的ORDER/DISTINCT/GROUP BY。该函数支持三种REMOVE_ORDER | REMOVE_DISTINCT | REMOVE_GROUP，如果是SINGLEROW_SUBS的子查询，只考虑删除REMOVE_ORDER。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; c1 &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; t1 &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; t1.&lt;span class=&quot;code-snippet__function&quot;&gt;c2 &lt;span class=&quot;code-snippet__title&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; distinct c1 &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; t2 &lt;span class=&quot;code-snippet__keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;by&lt;/span&gt; c1, c2 order &lt;span class=&quot;code-snippet__keyword&quot;&gt;by&lt;/span&gt; c1&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;转化为 =&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; c1 &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; t1 &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; t1.&lt;span class=&quot;code-snippet__function&quot;&gt;c2 &lt;span class=&quot;code-snippet__title&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; c1 &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; t2&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;处理是否可以删除不必要的distinct语句，删除的条件就是GROUP BY的列都在SELECT列表中，并且没有ROLLUP和Window函数。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;is_grouped() &amp;amp;&amp;amp; hidden_group_field_count == 0 &amp;amp;&amp;amp; olap == UNSPECIFIED_OLAP_TYPE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;例如场景：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;DISTINCT&lt;/span&gt; c1, &lt;span class=&quot;code-snippet__keyword&quot;&gt;max&lt;/span&gt;(c2) &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; t1 &lt;span class=&quot;code-snippet__keyword&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;by&lt;/span&gt; c1;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;10  解析和设置Window函数（Window::setup_windows1）&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SELECT id,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       release_year,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       rating,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       avg(rating) over(PARTITION BY release_year) AS year_avg&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FROM tw;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+------+--------------+--------+-------------------+&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| id   |&lt;/span&gt; release_year &lt;span class=&quot;code-snippet__params&quot;&gt;| rating |&lt;/span&gt; year_avg          &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+------+--------------+--------+-------------------+&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|         2015 |&lt;/span&gt;      &lt;span class=&quot;code-snippet__number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|               8.5 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;|    3 |&lt;/span&gt;         &lt;span class=&quot;code-snippet__number&quot;&gt;2015&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|      9 |&lt;/span&gt;               &lt;span class=&quot;code-snippet__number&quot;&gt;8.5&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|         2015 |&lt;/span&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;8.5&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|               8.5 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;|    4 |&lt;/span&gt;         &lt;span class=&quot;code-snippet__number&quot;&gt;2016&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|    8.2 |&lt;/span&gt;               &lt;span class=&quot;code-snippet__number&quot;&gt;8.3&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|         2016 |&lt;/span&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;8.4&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|               8.3 |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;|    6 |&lt;/span&gt;         &lt;span class=&quot;code-snippet__number&quot;&gt;2017&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|      7 |&lt;/span&gt;                 &lt;span class=&quot;code-snippet__number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+------+--------------+--------+-------------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;执行的过程和结果类似于下图：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.32821341956346&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z6bicxIx5naI5zpdkI0MIeDpL35cIS4qthglpl2fv2LzEmTgKMcHrWWE2Wm8XDWJcm8YWbYI9E6d7YULxVl4yIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1237&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;我们看下它在开始Query_block::prepare解析过程做了哪些事情：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;select_lex-&amp;gt;m_windows 不为空，就调用 &lt;/span&gt;&lt;span&gt;Window::setup_windows1&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;遍历window函数列表，调用resolve_window_ordering来解析m_partition_by和m_order_by&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;处理inter-window的引用关系（如WINDOW w1 AS (w2), w2 AS (), w3 AS (w1)），但必须是一个有向无环图（DAG）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;重新遍历检查是否唯一名字check_unique_name、创建window partition by和window order by的引用items&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;检查窗口函数特征（Window::check_window_functions1(THD *thd, _block *select)）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;ul ne-level=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;首先判断的是当前是静态窗口还是动态窗口；静态窗口即判断了 frame 的定义是否有定义上下边界。&lt;/span&gt;&lt;span&gt;m_static_aggregates&lt;/span&gt;&lt;span&gt; 为 true, 意味着是静态窗口，同时对每一个分区都可以进行一次评估。如果 &lt;/span&gt;&lt;span&gt;ma_static_aggregates &lt;/span&gt;&lt;span&gt;为 false, 则进一步判断其滑动窗口使用的是基于范围还是基于行。 &lt;/span&gt;&lt;span&gt;m_row_optimizable&lt;/span&gt;&lt;span&gt; 基于行 &lt;/span&gt;&lt;span&gt;m_range_optimizable&lt;/span&gt;&lt;span&gt; 基于范围 &lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;ul ne-level=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;获取聚合函数作为窗口函数时候窗口的特殊规格要求&lt;/span&gt;&lt;span&gt;wfs-&amp;gt;check_wf_semantics1(thd, select, &amp;amp;reqs)&lt;/span&gt;&lt;span&gt; 这个方法其实就是判断是不是需要row_buffer作为评估，如果我们只看当前分区的行无法进行正确的计算不需要，而需要看之后的或者之前的行，就需要使用row_buffer。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;三  综述&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;本文重点介绍了下优化器的基于规则的其中一部分优化，更多的偏重于SQL中的基本操作符，如表、列、函数、聚合、分组、排序等元素的解析和设置以及一些显而易见的结构变化。下一篇文章我们将继续介绍子查询、分区表和JOIN操作的转换部分，敬请期待。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h1&gt;&lt;strong&gt;&lt;span&gt;四  参考资料&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;《Mysql derived_MySQL · 新特性分析 · 5.7中Derived table变形记》&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;《WL#9236, WL#9603 and WL#9727 - Add SQL window functions to MySQL》&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;五  关于我们&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;PolarDB 是阿里巴巴自主研发的云原生分布式关系型数据库，于2020年进入Gartner全球数据库Leader象限，并获得了2020年中国电子学会颁发的科技进步一等奖。PolarDB 基于云原生分布式数据库架构，提供大规模在线事务处理能力，兼具对复杂查询的并行处理能力，在云原生分布式数据库领域整体达到了国际领先水平，并且得到了广泛的市场认可。在阿里巴巴集团内部的最佳实践中，PolarDB还全面支撑了2020年天猫双十一，并刷新了数据库处理峰值记录，高达1.4亿TPS。欢迎有志之士加入我们，简历请投递到daoke.wangc@alibaba-inc.com，期待与您共同打造世界一流的下一代云原生分布式关系型数据库。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2 data-spm-anchor-id=&quot;a2c6h.21258778.0.i0.3a747b80d6j217&quot;&gt;&lt;strong&gt;&lt;span&gt;数据库常见问题排查&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;开发者经常会遇到些数据库的问题，觉得无从下手，这严重影响了开发效率，也影响了开发者对数据库的热情。如何避免这样的窘境，如何降低数据库使用门槛以及运维的成本，如何在较短的时间内用云数据库的技术和理念来武装自己，提升自己。本课程通过实际的场景以及最佳实践出发，带给大家一些数据库问题的通用解决思路和方法，大家会发现数据库不再是一个黑盒，相反它看得见，摸得着，也能够轻松玩得转。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;点击阅读原文查看课程～&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4fc70c89ba63d660d3d44601f1375be1</guid>
<title>五分钟搞懂 MySQL 索引下推</title>
<link>https://toutiao.io/k/xdg9kw7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是老三，今天分享一个小知识点——索引下推。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你在面试中遇到，听到“MySQL5.6”、“索引优化” 之类的词语，你就要立马get到，这个问的是“索引下推”。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;什么是索引下推&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;索引下推(Index Condition Pushdown，简称ICP)，是MySQL5.6版本的新特性，它能减少回表查询次数，提高查询效率。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;索引下推优化的原理&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们先简单了解一下MySQL大概的架构：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7560581583198708&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfFLS6kgn6pWsjqicaaUsf554JIlCYaCu8IG8zib5SxHfeIOtKiaO6icjiawnbVl10FZDfDLCAOXoQtmJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;619&quot;/&gt;&lt;figcaption&gt;MySQL大概架构&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL服务层负责SQL语法解析、生成执行计划等，并调用存储引擎层去执行数据的存储和检索。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;索引下推&lt;/code&gt;的&lt;strong&gt;下推&lt;/strong&gt;其实就是指将部分上层（服务层）负责的事情，交给了下层（引擎层）去处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们来具体看一下，在没有使用ICP的情况下，MySQL的查询：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;存储引擎读取索引记录；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;根据索引中的主键值，定位并读取完整的行记录；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;存储引擎把记录交给&lt;code&gt;Server&lt;/code&gt;层去检测该记录是否满足&lt;code&gt;WHERE&lt;/code&gt;条件。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用ICP的情况下，查询过程：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;存储引擎读取索引记录（不是完整的行记录）；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断&lt;code&gt;WHERE&lt;/code&gt;条件部分能否用索引中的列来做检查，条件不满足，则处理下一行索引记录；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;条件满足，使用索引中的主键去定位并读取完整的行记录（就是所谓的回表）；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;存储引擎把记录交给&lt;code&gt;Server&lt;/code&gt;层，&lt;code&gt;Server&lt;/code&gt;层检测该记录是否满足&lt;code&gt;WHERE&lt;/code&gt;条件的其余部分。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;索引下推的具体实践&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;理论比较抽象，我们来上一个实践。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用一张用户表&lt;code&gt;tuser&lt;/code&gt;，表里创建联合索引（name, age）。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3863013698630137&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfFLS6kgn6pWsjqicaaUsf55DIPBtYzS5qxzmY6Uvx3Bk1P8aRzz92RiaJwmYXbWvq8GLRWpF2f3ibYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;365&quot;/&gt;&lt;figcaption&gt;用户表&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果现在有一个需求：检索出表中&lt;code&gt;名字第一个字是张，而且年龄是10岁的所有用户&lt;/code&gt;。那么，SQL语句是这么写的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; tuser &lt;span&gt;where&lt;/span&gt; &lt;span&gt;name&lt;/span&gt; &lt;span&gt;like&lt;/span&gt; &lt;span&gt;&#x27;张%&#x27;&lt;/span&gt; &lt;span&gt;and&lt;/span&gt; age=&lt;span&gt;10&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如你了解索引最左匹配原则，那么就知道这个语句在搜索索引树的时候，只能用 &lt;code&gt;张&lt;/code&gt;，找到的第一个满足条件的记录id为1。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5740498034076016&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfFLS6kgn6pWsjqicaaUsf55drJJGMYu2glNRzIkjbZpTOtGxx50NLVXUPXLIlAVysHT7wmY3Ym82Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;763&quot;/&gt;&lt;figcaption&gt;B+树联合索引&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那接下来的步骤是什么呢？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;没有使用ICP&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在MySQL 5.6之前，存储引擎根据通过联合索引找到&lt;code&gt;name likelike &#x27;张%&#x27;&lt;/code&gt; 的主键id（1、4），逐一进行回表扫描，去聚簇索引找到完整的行记录，server层再对数据根据&lt;code&gt;age=10进行筛选&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们看一下示意图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6641883519206939&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfFLS6kgn6pWsjqicaaUsf55vfXibX1yBJQwPdGrSDd9tRf8GfJvzZKaj5aIic3RmlWl8IGOzrJ0iaA7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1614&quot;/&gt;&lt;figcaption&gt;未使用ICP&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到需要回表两次，把我们联合索引的另一个字段&lt;code&gt;age&lt;/code&gt;浪费了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;使用ICP&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而MySQL 5.6 以后， 存储引擎根据（name，age）联合索引，找到&lt;code&gt;name likelike &#x27;张%&#x27;&lt;/code&gt;，由于联合索引中包含&lt;code&gt;age&lt;/code&gt;列，所以存储引擎直接再联合索引里按照&lt;code&gt;age=10&lt;/code&gt;过滤。按照过滤后的数据再一一进行回表扫描。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们看一下示意图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6641883519206939&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWfFLS6kgn6pWsjqicaaUsf55Zr6PzoS6mdAicNVjMqJl9nE0VEdXahnJVpVmFhk7fBxiate8z2AatFiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1614&quot;/&gt;&lt;figcaption&gt;使用ICP的示意图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到只回表了一次。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除此之外我们还可以看一下执行计划，看到&lt;code&gt;Extra&lt;/code&gt;一列里&lt;code&gt;Using index condition&lt;/code&gt;，这就是用到了索引下推。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;+&lt;span&gt;----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-----------------------+&lt;/span&gt;&lt;br/&gt;| id | select_type | table | partitions | type  | possible_keys | key      | key_len | ref  | rows | filtered | Extra                 |&lt;br/&gt;+&lt;span&gt;----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-----------------------+&lt;/span&gt;&lt;br/&gt;|  1 | SIMPLE      | tuser | NULL       | range | na_index      | na_index | 102     | NULL |    2 |    25.00 | Using index condition |&lt;br/&gt;+&lt;span&gt;----+-------------+-------+------------+-------+---------------+----------+---------+------+------+----------+-----------------------+&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;索引下推使用条件&lt;/span&gt;&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;只能用于&lt;code&gt;range&lt;/code&gt;、 &lt;code&gt;ref&lt;/code&gt;、 &lt;code&gt;eq_ref&lt;/code&gt;、&lt;code&gt;ref_or_null&lt;/code&gt;访问方法；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;只能用于&lt;code&gt;InnoDB&lt;/code&gt;和 &lt;code&gt;MyISAM&lt;/code&gt;存储引擎及其分区表；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对&lt;code&gt;InnoDB&lt;/code&gt;存储引擎来说，索引下推只适用于二级索引（也叫辅助索引）;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;索引下推的目的是为了减少回表次数，也就是要减少IO操作。对于&lt;code&gt;InnoDB&lt;/code&gt;的&lt;strong&gt;聚簇索引&lt;/strong&gt;来说，数据和索引是在一起的，不存在回表这一说。&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;引用了子查询的条件不能下推；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;引用了存储函数的条件不能下推，因为存储引擎无法调用存储函数。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;相关系统参数&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;索引条件下推默认是开启的，可以使用系统参数&lt;code&gt;optimizer_switch&lt;/code&gt;来控制器是否开启。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看默认状态：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;mysql&amp;gt; select @@optimizer_switch\G;&lt;br/&gt;*************************** 1. row ***************************&lt;br/&gt;@@optimizer_switch: index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,engine_condition_pushdown=on,index_condition_pushdown=on,mrr=on,mrr_cost_based=on,block_nested_loop=on,batched_key_access=off,materialization=on,semijoin=on,loosescan=on,firstmatch=on,duplicateweedout=on,subquery_materialization_cost_based=on,use_index_extensions=on,condition_fanout_filter=on,derived_merge=on&lt;br/&gt;1 row &lt;span&gt;in&lt;/span&gt; &lt;span&gt;set&lt;/span&gt; (0.00 sec)&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;切换状态：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;set&lt;/span&gt; optimizer_switch=&lt;span&gt;&quot;index_condition_pushdown=off&quot;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;set&lt;/span&gt; optimizer_switch=&lt;span&gt;&quot;index_condition_pushdown=on&quot;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[1].《 MySQL技术内幕  InnoDB存储引擎》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[2]. 《MySQL实战45讲》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[3]. [MySQL索引下推（ICP）简单理解及例子](https://maoyingdong.com/mysql_icp/)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[4]. [一文读懂什么是MySQL索引下推（ICP）](https://www.jianshu.com/p/31ceadace535)&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwODE5ODM0Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWeFt08hV3N1706WTzfhoTNoXm5LXRV0XibppmeNR4zSNMa3QOJJ7ib4O21P5yohibwuD26Tp9ETWZAqA/0?wx_fmt=png&quot; data-nickname=&quot;三分恶&quot; data-alias=&quot;Fighter3FullStack&quot; data-signature=&quot;一个全栈开发。分享Java后端、Web前端、计算机基础知识。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;br data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c48d0adf18b18b023ed26cc4fd31b4f2</guid>
<title>模型搜索简介：一个用于寻找最佳机器学习模型的开源平台</title>
<link>https://toutiao.io/k/v8xvo08</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;神经网络(NN) 的成功通常取决于它对各种任务的泛化能力。然而，设计可以很好泛化的神经网络具有挑战性，因为研究界目前对神经网络如何泛化的理解有些有限：对于给定的问题，合适的神经网络是什么样的？应该多深？应该使用哪些类型的层？将LSTMs足够或将在变压器层是更好吗？或者也许是两者的结合？是合奏还是蒸馏提高性能？在考虑机器学习 (ML) 领域时，这些棘手的问题变得更具挑战性，因为在这些领域中，可能存在比其他领域更好的直觉和更深入的理解。&lt;/p&gt;&lt;p&gt;近年来，出现了AutoML算法 [例如1 , 2 , 3 ] 以帮助研究人员自动找到正确的神经网络，而无需手动实验。技术，如神经结构搜索（NAS），使用算法，如强化学习（RL），进化算法，和组合搜索，从给定的搜索空间构建神经网络。通过适当的设置，这些技术已经证明它们能够提供比手动设计的同类产品更好的结果。但通常情况下，这些算法计算量很大，在收敛之前需要训练数千个模型。此外，他们探索了特定领域的搜索空间，并结合了大量的先验人类知识，这些知识不能很好地跨领域转移。例如，在图像分类中，传统 NAS 搜索两个好的构建块（卷积块和下采样块），它按照传统约定排列以创建完整的网络。&lt;/p&gt;&lt;p&gt;为了克服这些缺点并将 AutoML 解决方案的访问范围扩展到更广泛的研究社区，我们很高兴地宣布模型搜索的开源版本，这是一个帮助研究人员高效、自动地开发最佳 ML 模型的平台。模型搜索不是专注于特定领域，而是领域不可知、灵活并且能够找到最适合给定数据集和问题的适当架构，同时最大限度地减少编码时间、工作量和计算资源。它建立在 Tensorflow 之上，可以在单台机器上运行，也可以在分布式环境中运行。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;&lt;em&gt;概述&lt;/em&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;模型搜索系统由多个训练器、搜索算法、迁移学习算法和用于存储各种评估模型的数据库组成。该系统以自适应但异步的方式为各种 ML 模型（不同的架构和训练技术）运行训练和评估实验。虽然每位培训师独立进行实验，但所有培训师都分享从他们的实验中获得的知识。在每个循环开始时，搜索算法会查找所有已完成的试验，并使用波束搜索来决定下一步尝试什么。然后它调用迄今为止发现的最佳架构之一的变异，并将生成的模型分配回训练器。&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHlcgZGrqJlDDvggr1ROOa3YB6Q27lfPYIPA7LkDlriaVwfYxvXHJT8CGR4VoLib4wPYQ5eGLysyuxA/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;该系统从一组预定义块构建神经网络模型，每个块代表一个已知的微架构，如 LSTM、ResNet或 Transformer 层。通过使用预先存在的架构组件块，模型搜索能够利用来自跨领域的 NAS 研究的现有最佳知识。这种方法也更有效，因为它探索结构，而不是它们更基本和更详细的组件，因此减少了搜索空间的规模。&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHlcgZGrqJlDDvggr1ROOa3jIcZPiafHybMlUY7XzSn1E7OEXqzgOFFQmYv8r0fvOdrN9EUsLXuUjw/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;因为模型搜索框架是基于Tensorflow构建的，所以块可以实现任何以张量作为输入的函数。例如，假设有人想要引入一个由一系列微架构构建的新搜索空间。该框架将采用新定义的块并将它们合并到搜索过程中，以便算法可以从提供的组件构建最佳的神经网络。提供的块甚至可以是完全定义的神经网络，这些神经网络已知可用于解决感兴趣的问题。在这种情况下，模型搜索可以配置为简单地充当强大的集成机器。&lt;/p&gt;&lt;p&gt;模型搜索中实现的搜索算法是自适应的、贪婪的和增量的，这使得它们比 RL 算法收敛得更快。然而，他们通过分离对好的候选者的搜索（探索步骤），并通过集成发现的好的候选者（利用步骤）来提高准确性，从而模仿了RL 算法的“探索和利用”性质。在对架构或训练技术应用随机更改（例如，使架构更深）之后，主搜索算法自适应地修改前k 个执行实验（其中k可以由用户指定）之一。&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHlcgZGrqJlDDvggr1ROOa3lZqSNS95nS0K02bexIdWeHEkBLn5WezvOicXzwxo1YM6U790gn6osFA/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;为了进一步提高效率和准确性，在各种内部实验之间启用了迁移学习。模型搜索以两种方式实现这一点——通过知识蒸馏或权重共享。知识蒸馏允许通过添加一个与高性能模型的预测相匹配的损失项来提高候选人的准确性。另一方面，权重共享通过从先前训练的模型中复制合适的权重并随机初始化剩余的权重，从先前训练的候选者中引导网络中的一些参数（在应用变异之后）。这可以实现更快的训练，从而有机会发现更多（更好）的架构。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;&lt;em&gt;实验结果&lt;/em&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;模型搜索以最少的迭代改进了生产模型。在最近的一篇论文中，我们通过发现用于关键字识别和语言识别的模型来展示模型搜索在语音领域的能力。在不到 200 次迭代中，生成的模型比专家设计的内部最先进的生产模型在准确性方面略有改进，使用的可训练参数减少了约 130K（184K 与 315K 参数相比）。&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHlcgZGrqJlDDvggr1ROOa3126mNuqiczWpickUkKqUIQIicbZLaWkX9qLIWUJvVrdrSwIq1oqfOj6Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们还应用模型搜索来找到适合在大量探索的CIFAR-10成像数据集上进行图像分类的架构。使用一组已知的卷积块，包括卷积、resnet 块（即两个卷积和一个跳跃连接）、NAS-A 单元、全连接层等，我们观察到我们能够快速达到基准准确率 91.83 209 次试验（即仅探索 209 个模型）。相比之下，之前表现最好的算法在NasNet 算法 (RL) 的5807 次试验中达到了相同的阈值准确率，PNAS (RL + Progressive)达到了1160 次。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;&lt;em&gt;结论&lt;/em&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;我们希望模型搜索代码能够为研究人员提供一个灵活的、与领域无关的 ML 模型发现框架。通过建立给定领域的先前知识，我们相信这个框架足够强大，当提供由标准构建块组成的搜索空间时，该框架足以在经过充分研究的问题上构建具有最先进性能的模型。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_weapp_entry&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eG1jA7faiceHlcgZGrqJlDDvggr1ROOa38AHS5tUNE1jzPfjNPYSibRGKCzicr9H4FSmjZD7d2nEBBzWIEzvVFFTQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>