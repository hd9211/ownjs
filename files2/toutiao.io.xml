<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>e1c6de6d49b1d27ac3cd8c73013a27ae</guid>
<title>Golang 和 xtem.js 实现的 WEBSSH</title>
<link>https://toutiao.io/k/2263s6b</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;container app-preview post-body&quot;&gt;
  &lt;div class=&quot;preview&quot;&gt;

&lt;h1&gt;WEBSSH&lt;/h1&gt;

&lt;p&gt;基于vue、xterm、golang实现的web ssh客户端程序&lt;/p&gt;

&lt;h2&gt;特性&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;前后端分离，前端使用xterm、vue，后端使用golang写的服务&lt;/li&gt;
&lt;li&gt;支持录像审计，支持录像回看&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;run demo&lt;/h2&gt;



&lt;pre lang=&quot;bash&quot;&gt;&lt;code&gt;$ cd front
$ npm -i
$ npm run build # 可以看到在front生成一个dist目录，里头就是编译后的前端文件
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;修改&lt;code&gt;main.go&lt;/code&gt;文件中目标主机和登录方式&lt;/p&gt;

&lt;pre lang=&quot;go&quot;&gt;&lt;code&gt;confing := &amp;amp;webssh.WebSSHConfig{
        Record:     true,
        RecPath:    &quot;./rec/cast/&quot;,
        RemoteAddr: &quot;localhost:22&quot;,
        User:       &quot;wida&quot;,
        Password:   &quot;wida&quot;,
        AuthModel:  webssh.PASSWORD,
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;pre lang=&quot;bash&quot;&gt;&lt;code&gt;$ go build -o webssh main.go
$ ./webssh
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;用浏览器打开&lt;code&gt;http://localhost:8080/#/term&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;查看录像&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;用浏览器打开&lt;code&gt;http://localhost:8080/#/rec&lt;/code&gt;，顶部有选择器，选择生成的文件播放（手动点击播放）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>15f642b0545f332493a7529770c548a2</guid>
<title>康威定律</title>
<link>https://toutiao.io/k/nfsw3d7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;blockquote&gt;&lt;p&gt;&lt;em&gt;康威定律告诉我们：软件架构反映了组织架构。因此通过调整组织架构，反过来也能推动软件架构的演进。原文：Conway’s Law&lt;span&gt;[1]&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;通过改变组织架构来改变软件架构。&lt;/p&gt;&lt;p&gt;马尔文·康威（Melvin Conway）在他发表的论文《How Do Committees Invent?》中，将45段观点总结成了一句话：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;任何组织所设计的系统（此处的定义比信息系统宽泛得多）架构，都不可避免的反映为该组织沟通结构的副本。——康威定律&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;康威定律认为，软件架构最终会是沟通（组织）结构的映射。&lt;/p&gt;&lt;p&gt;下面是一个前后端团队的常见例子。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000540&quot; data-ratio=&quot;0.6684073107049608&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rAgicPQgUicBq1qcuDPekViaNutiaU0KkbHgzIJQwn5ibLjiasuwud9phBAmrw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;383&quot;/&gt;&lt;/p&gt;&lt;p&gt;下面是我们想要的架构。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000542&quot; data-ratio=&quot;0.6692307692307692&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rAzOHGniaZic56TgWuu7eV9gy3icf1VSPQIj6pvEtLrsnIzf5UcficUkv6yQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;390&quot;/&gt;&lt;/p&gt;&lt;p&gt;然后我们根据经验，组织前端和后端团队。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000544&quot; data-ratio=&quot;0.3963730569948187&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rAXkdc6TnAcagriaRkiaqa1HOUiazgFyJdyhoYCmsFJJbVxJQysMN83DQHA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;386&quot;/&gt;&lt;/p&gt;&lt;p&gt;最终后端团队将在同一个应用程序代码中处理API和后端工作，并将其作为单个应用程序部署。&lt;/p&gt;&lt;p&gt;这也证明了Ruth Malan的话：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果系统的体系架构和组织的体系架构不一致，组织的体系架构将会获胜。——Ruth Malan&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;不过，它适用于单一代码库（monorepo）吗?&lt;/p&gt;&lt;h1&gt;康威定律与软件模块化&lt;/h1&gt;&lt;p&gt;假设我们有一个单体应用，有许多团队在一个单一代码库（monorepo）里提交代码，康威定律适用这种情况吗？&lt;/p&gt;&lt;p&gt;2008年，艾伦·D·麦科马克（Alan D. MacCormack）、约翰·鲁斯纳克（John Rusnak）和卡莉斯·Y·鲍德温（Cariss Y. Baldwin）对“镜像”假设进行了测试&lt;span&gt;[2]&lt;/span&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;与紧密耦合的组织相比，松散耦合的组织倾向于开发更为模块化的产品。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;他们在研究中分析了功能相同但由两种相反的组织模式构建的软件，商业（紧耦合）和开源（松耦合）。他们使用一种称为设计结构矩阵（DSMs，Design Structure Matrices）的技术来可视化不同软件的架构，通过计算度量来比较它们的模块化级别。&lt;/p&gt;&lt;p&gt;结果显示在模块化方面两者表现出显著的差异。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000541&quot; data-ratio=&quot;0.46409807355516636&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rAdOtMryJZiasPAj9nsggqeAZaJOd525gwwCRoV4xGrNPBPBYEUcKmgXg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;571&quot;/&gt;&lt;/p&gt;&lt;p&gt;在商业组织中，开发团队在一起工作，通过面对面的交互来解决问题，由于可以很方便的找到其他模块的开发人员，他们可以实现性能的最优化。因此自然而然的，生产出了紧密耦合（如左图）的软件。&lt;/p&gt;&lt;p&gt;在开源组织中，大多数开发人员很少或从不见面。由于通信有限，因此模块化的好处更大。软件需要模块化（如图所示），这样贡献者才能很容易的理解设计，以便开发新特性或修复缺陷，而不会影响系统的其他部分。&lt;/p&gt;&lt;h1&gt;康威定律与团队设计&lt;/h1&gt;&lt;p&gt;当组织从一个小型跨职能团队成长为许多大型专业团队时，通常我们会围绕技术组织团队，因此我们将拥有几个前端团队（Web和移动）和一个后端团队。&lt;/p&gt;&lt;p&gt;团队每天都要紧密合作，在所有平台上发布功能。沟通路径可能是这样的：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000543&quot; data-ratio=&quot;0.89&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rApcsmsWEQVaQLUgJFVHuTfXgD9mvRskbdA6XV4hckc77LH4Bk3RboWg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p&gt;很自然的，最终软件体系架构将反映沟通的路径。&lt;/p&gt;&lt;p&gt;另一方面，如果我们将团队组织为跨功能团队，并且每个团队都独立工作，那么我们将生成一个面向服务的或微服务的体系架构。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000545&quot; data-ratio=&quot;1.0277777777777777&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rAYF7j74ictyWNGyQfLAicNDDsmweAeibm1I6kTQicHBS7xvPLlToUVqUagg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;360&quot;/&gt;&lt;/p&gt;&lt;p&gt;这是否意味着设计软件架构是毫无意义的？简单来说答案是否定的。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;“逆康威模式（Inverse Conway Maneuver）”建议我们演进团队和组织架构，以促进实现想要的架构。——逆康威模式&lt;span&gt;[3]&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;软件架构对于构建快速、安全的软件至关重要。通过优化我们的团队架构，以实现所需的架构，并支持团队获得更快、更安全的完成工作的能力。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;References:&lt;/span&gt;&lt;br/&gt;[1] https://just4sky.medium.com/conways-law-99fbbff9ccf0&lt;br/&gt;[2] https://hbswk.hbs.edu/item/exploring-the-duality-between-product-and-organizational-architectures-a-test-of-the-mirroring-hypothesis&lt;br/&gt;[3] https://www.thoughtworks.com/radar/techniques/inverse-conway-maneuver&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;你好，我是俞凡，在Motorola做过研发，现在在Mavenir做技术工作，对通信、网络、后端架构、云原生、DevOps、CICD、区块链、AI等技术始终保持着浓厚的兴趣，平时喜欢阅读、思考，相信持续学习、终身成长，欢迎一起交流学习。&lt;br/&gt;微信公众号：DeepNoMind&lt;/p&gt;&lt;/blockquote&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a9ede846798bf7178e109e6ed6610e5b</guid>
<title>Redis 也会算距离</title>
<link>https://toutiao.io/k/maudif9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI0MzA2OTc4MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Bfv9smoHwth5nBzNr9kZshQ25yhLz08JicGiaeuWY5k8z6JHS4KYxQ2zp2lU9mjSC6PsvBlib658u3CnrSQsuCzAg/0?wx_fmt=png&quot; data-nickname=&quot;码农UP2U&quot; data-alias=&quot;&quot; data-signature=&quot;关于 Java、PHP、其他编程语言……或安全、或码农、或技术、或总结！学习交流，共同进步！码农 up to you，码农UP2U!&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100001015&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.39064856711915535&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfv9smoHwtiab31mY6ZvDVMfTXmejLtoR59eRvurypVJxo5Ig6FY91Xc6nhCicGlFSxp4icKulA92E2KHKyVf5u0A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1326&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        之前整理的关于 Redis 的文章：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484043&amp;amp;idx=1&amp;amp;sn=bdc040d4568d60b7c0e5c6b9e2464f72&amp;amp;chksm=e973e4b1de046da75e54d799bdbaf6e74323218c4d1983804bbb96e5ae13b1c6d7dd3cd80d50&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 的安装&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484049&amp;amp;idx=1&amp;amp;sn=1459569baaec7666a22c50339c7b22c0&amp;amp;chksm=e973e4abde046dbd968ea23ce5a633a3ade1a53a3edd3a0fe52d9a64d350b7ffa7aace8ae2c7&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 的帮助命令&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484059&amp;amp;idx=1&amp;amp;sn=1d86daa51437dc3420ff25cd4b77f3e0&amp;amp;chksm=e973e4a1de046db72fa7b1a673447d8a1f2aec18d5086a9905ab459e2af1b89650256e24797f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 命令分类&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484093&amp;amp;idx=1&amp;amp;sn=ae41b5834187a7768154ef1d4946e06b&amp;amp;chksm=e973e487de046d91c380c5d75cf8ccbe97968dff924474ce1893663d58d1de640d1c00f04084&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 通用命令&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484112&amp;amp;idx=1&amp;amp;sn=8d5d8dbce45ca2c892f1ef08f2ce2b52&amp;amp;chksm=e973e4eade046dfc12a9a2709aaf61f2a7dd3c7c073e80646d391a690eff75283709556f9c9d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 字符串相关命令&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484146&amp;amp;idx=1&amp;amp;sn=6a4f28894e15e8881fbdd55b79f2077e&amp;amp;chksm=e973e4c8de046dde6ca4478c8e566529718338ebcaf0b683f3f3cafcea7f21769ce4c8df1048&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 列表相关命令&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484157&amp;amp;idx=1&amp;amp;sn=08f87e9e9a88f0481272f77b1aff276a&amp;amp;chksm=e973e4c7de046dd1487e25d631becf85c8865057bed51d0fe593378ddcdf8f72be3554fa381a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 集合相关命令&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484200&amp;amp;idx=1&amp;amp;sn=753e7c54b4a2d5662dcaf20e4c32f9ba&amp;amp;chksm=e973e512de046c045df156663260874ed14d2256bbcffed995fccc8039fc566dd2cff65d064a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 有序集合相关命令&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484209&amp;amp;idx=1&amp;amp;sn=8fe9b2fbdf5e6dbf75a1796476c30586&amp;amp;chksm=e973e50bde046c1da276dd7012bee0b2c707431dbf94ff890364e3ec57d01c175cb5fe631828&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 哈希相关命令&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484218&amp;amp;idx=1&amp;amp;sn=552333e96731c54df4bc0fba138d6959&amp;amp;chksm=e973e500de046c16d61f3cef0e545669066ed474ee0773c514a425583a6002a5a65359c10a2f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | 源码阅读 —— 字符串&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484240&amp;amp;idx=1&amp;amp;sn=fd2c862cc17c4c9b29fec9e9cc9284a8&amp;amp;chksm=e973e56ade046c7cc5e275a7c07b7aa17574593131fa8e51ba2cd631b14ad09d88b56cccc5ee&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | 源码阅读 —— 链表&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484247&amp;amp;idx=1&amp;amp;sn=318957159f7f8e52dfb09e458b9561e5&amp;amp;chksm=e973e56dde046c7ba605148c8d28921df3c4de4b44ac76298c8a4515068df9a348cb68cf6649&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis Pub/Sub相关命令&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484270&amp;amp;idx=2&amp;amp;sn=ac89039c56903bf6349a65955f802254&amp;amp;chksm=e973e554de046c42e5f1f208f1a3901ff4905ff64a7b991bceca52cc6c12436075bc004143cc&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | 管道 —— PipeLine&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484283&amp;amp;idx=1&amp;amp;sn=97cf2fcf827539145245df1d02e0d425&amp;amp;chksm=e973e541de046c5775477939fda934f896df3ab7022992a96767247b713382b7f5b572ba87bd&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | SpringBoot整合Redis&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484316&amp;amp;idx=1&amp;amp;sn=e41060ca2f7cfb8ccd75132aed1f8c14&amp;amp;chksm=e973e5a6de046cb007f5308505393d4ab33337cea14d19dcb22300539540b622ec3ca2d3136c&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 的事务一&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484328&amp;amp;idx=1&amp;amp;sn=0efd2b2285f47232385066a5327bd222&amp;amp;chksm=e973e592de046c849e16bfc2b497c6a8aea4b81f6e3d77ac456a7eea65025c93f138afa17a7f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | Redis 的事务二&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484340&amp;amp;idx=1&amp;amp;sn=d9ff89f710199856334f8aef777c1abc&amp;amp;chksm=e973e58ede046c981575d89da2457dc4b889dfd6b5dafc19577cbdfd7c72371d64545bfdfff7&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | 基础数据类型应用场景&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484360&amp;amp;idx=1&amp;amp;sn=0a228a23234f9fa1b80954c6f741c330&amp;amp;chksm=e973e5f2de046ce4956c50d01dec192bd1ff9212412d6985532133847becf4926e24b3774b6c&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | 事务源码阅读&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484372&amp;amp;idx=1&amp;amp;sn=e65dfafe60d2614ed76e4c6648857879&amp;amp;chksm=e973e5eede046cf8a3115dfc70b93002747a531ef68901753006eda06a2e4bfd92b04bc0f214&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | 事物源码阅读 —— watch&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484382&amp;amp;idx=1&amp;amp;sn=6dd53c32824a0f29e46414a19a243a96&amp;amp;chksm=e973e5e4de046cf2a59433a9800ca374fbf21d51dad3670c54015000df29deef87ea491750b7&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | 慢查询&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484656&amp;amp;idx=1&amp;amp;sn=15b1c480ae8e856ad8c12cf7070f1374&amp;amp;chksm=e973e2cade046bdc086d15da81da0588e61834f6d7cb666b331efee56f5a739055f51edf3fb8&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MzA2OTc4MQ==&amp;amp;mid=2247484656&amp;amp;idx=1&amp;amp;sn=15b1c480ae8e856ad8c12cf7070f1374&amp;amp;chksm=e973e2cade046bdc086d15da81da0588e61834f6d7cb666b331efee56f5a739055f51edf3fb8&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;Redis | 给接口添加缓存&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        之前整理的关于 Redis 的思维导图如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100001018&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7269303201506592&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfv9smoHwthSpicbKAtAlCpXNGUAic1RI6UF9vwz3fBEy0nDuNRRkzTZBfttdvkAORZRexR33P0KiahVx1hozLZMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1062&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        本次接着整理 Redis 关于 Geo 命令相关的内容。&lt;/span&gt;&lt;span&gt;先来看下关于这部分的思维导图，如下图所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100001012&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.45757071547420963&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Bfv9smoHwthSpicbKAtAlCpXNGUAic1RI6Yeof2Vz5nLSgt0ia76kwwLVKkdAyNP6WcIWU3y7mDkqdR7gXdiajZEww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;601&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        从上图可以看出，关于 Geo 的命令只有 6 条，下面分别来演示一下上面的命令。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;一、添加信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        使用 geoadd 命令可以轻松的添加经纬度坐标信息，并且可以给经纬度坐标进行命名。本次我使用 Windows 下的 Redis 来进行演示。命令如下：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; geoadd pos 112.617168 37.796849 nanzhan&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(integer) 1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; geoadd pos 112.552309 37.80035 qingchuang&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(integer) 1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; geoadd pos 112.566988 37.860711 yingzepark&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(integer) 1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; geoadd pos 112.453582 38.02132 zhongbeiedu&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(integer) 1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        从上面的命令中，每行命令添加了一个坐标，看一下 geoadd 命令的用法，用法如下：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;apache&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;GEOADD key longitude latitude member [longitude latitude member ...]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        对应上面的命令可以看出，pos 是 geoadd 的 key，在 pos 后是经纬度坐标，在经纬度坐标后面是该经纬度坐标自定义的名称。这里，可以通过一条 geoadd 命令添加多个经纬度坐标进去。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        注：经纬度坐标我是直接从百度拾取坐标系统中获取的，百度拾取坐标系统的 url 如下：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;http://api.map.baidu.com/lbsapi/getpoint/index.html&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        geoadd 添加的坐标，实际使用的是 zset 结构。使用 zrange 进行查看。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; zrange pos 0 100&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;1) &quot;zhongbeiedu&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2) &quot;qingchuang&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;3) &quot;yingzepark&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;4) &quot;nanzhan&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;二、获取坐标信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        通过 geopos 可以获取 geoadd 添加的坐标信息，geopos 可以获取一个坐标，也可以获取多条坐标，命令如下：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; geopos pos nanzhan&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;1) 1) &quot;112.61716693639755&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;37.796848161084498&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; geopos pos zhongbeiedu qingchuang&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;1) 1) &quot;112.45358437299728&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;38.021320532234391&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2) 1) &quot;112.55231112241745&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;37.800351145726701&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        通过 geopos 获得到了相应的坐标，但是仔细观察，获取到的坐标和 geoadd 时的坐标稍有不同。这是因为坐标存储时是有损的，通过有损的存储再读取就稍有差别。但是，对于细小的差别来说，对业务的使用影响并不大，毕竟这点误差用户是可以接受的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;三、计算距离&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        接下来这个命令可以在业务场景中使用，geodist 用来计算两个元素之间的距离。在计算距离的时候，可以指定距离的单位，比如 米 或 千米。命令如下：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; geodist pos zhongbeiedu nanzhan m&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;28799.9702&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; geodist pos zhongbeiedu nanzhan km&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;28.8000&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        在上面的命令中 m 和 km 分别用来表示 米 和 千米。通过 geodist 就可以方便的得出两点之间的距离了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;四、获取附近的信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        获取附近的信息有两个命令，分别是 georadiusbymember 和 georadius 命令。georadiusbymember 通过指定的元素可以获得指定半径范围内的其他元素，georadiu 通过指定一个经纬度坐标来获得指定半径范围内的元素。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        先来查看 georadiusbymember 命令的使用，命令如下：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; georadiusbymember pos nanzhan 10 km&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;1) &quot;qingchuang&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2) &quot;yingzepark&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;3) &quot;nanzhan&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; georadiusbymember pos nanzhan 10 km asc&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;1) &quot;nanzhan&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2) &quot;qingchuang&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;3) &quot;yingzepark&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        上面的命令用来查询 nanzhan 半径 10 千米范围内的元素，命令默认使用 由远到近 的顺序输出，如果需要 由近到远 的顺序输出，可以增加 asc 的参数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        如果想要知道它们之间的具体距离是多远，可以增加参数 withdist，命令如下：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; georadiusbymember pos nanzhan 10 km withdist asc&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;1) 1) &quot;nanzhan&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;0.0000&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2) 1) &quot;qingchuang&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;5.7133&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;3) 1) &quot;yingzepark&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;8.3599&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        这样可以看到距离每个元素之间的具体距离。如果想要知道每个元素的坐标，可以增加参数 withcoord，命令如下：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; georadiusbymember pos nanzhan 10 km withcoord asc&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;1) 1) &quot;nanzhan&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) 1) &quot;112.61716693639755&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      2) &quot;37.796848161084498&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2) 1) &quot;qingchuang&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) 1) &quot;112.55231112241745&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      2) &quot;37.800351145726701&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;3) 1) &quot;yingzepark&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) 1) &quot;112.56698817014694&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      2) &quot;37.860710460694044&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        withcoord 和 withdist 两个参数也可以同时使用，命令如下：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; georadiusbymember pos nanzhan 10 km withcoord withdist asc&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;1) 1) &quot;nanzhan&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;0.0000&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   3) 1) &quot;112.61716693639755&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      2) &quot;37.796848161084498&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2) 1) &quot;qingchuang&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;5.7133&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   3) 1) &quot;112.55231112241745&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      2) &quot;37.800351145726701&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;3) 1) &quot;yingzepark&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;8.3599&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   3) 1) &quot;112.56698817014694&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      2) &quot;37.860710460694044&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        接着再来介绍 georadius 命令，它可以通过经纬度坐标来查询指定半径范围内的元素，这样在业务中获取当前用户的经纬度坐标，就可以搜索附近的 XXX 了。命令如下：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; georadius pos 112.593887 37.866154 20 km withdist asc&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;1) 1) &quot;yingzepark&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;2.4384&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2) 1) &quot;nanzhan&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;7.9753&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;3) 1) &quot;qingchuang&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   2) &quot;8.1797&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;        在 georadiusbymember 命令中可以使用的 withdist 和 withcoord 两个参数，在 georadius 命令中同样可以使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;五、总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;        上面介绍了关于 Geo 的 5 条命令，剩下的一条命令返回一个 Hash 值，这里具体不再进行介绍。那么可以通过 geoadd 添加经纬度坐标信息，那么如何删除呢？通过 zrem 即可删除，因为它是一个 zset 集合，命令如下：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; zrem pos zhongbeiedu&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;(integer) 1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;127.0.0.1:6379&amp;gt; zrange pos 0 100&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;1) &quot;qingchuang&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;2) &quot;yingzepark&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;3) &quot;nanzhan&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;早期文章&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img data-fileid=&quot;100001013&quot; data-ratio=&quot;0.365625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/Bfv9smoHwtiad97Av4ibYh0nialo6NGGgTibF5o603r7C44eOJlatuF6gwsCiawAB5abXVcJBMiaNPpGBk8IuaibCeuEw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;640&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>bd80debf8f5787b18090446fc0adebbf</guid>
<title>京东面试题：ElasticSearch 深度分页解决方案</title>
<link>https://toutiao.io/k/x747to4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一道之前的面试题：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;来自：&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUyOTg1OTkyMA==&amp;amp;mid=2247484910&amp;amp;idx=1&amp;amp;sn=c686a382915e18bfc7bca152aa8590de&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;社招一年半面经分享(含阿里美团头条京东滴滴)&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「文章较长，可以点赞在看」&lt;/strong&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Elasticsearch 是一个实时的分布式搜索与分析引擎，在使用过程中，有一些典型的使用场景，比如分页、遍历等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在使用关系型数据库中，我们被告知要注意甚至被明确禁止使用深度分页，同理，在 Elasticsearch 中，也应该尽量避免使用深度分页。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这篇文章主要介绍 Elasticsearch 中分页相关内容！&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;From/Size参数&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在ES中，分页查询默认返回最顶端的10条匹配hits。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果需要分页，需要使用from和size参数。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;from参数定义了需要跳过的hits数，默认为0；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;size参数定义了需要返回的hits数目的最大值。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个基本的ES查询语句是这样的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;POST /my_index/my_type/_search&lt;br/&gt;{&lt;br/&gt;    &lt;span&gt;&quot;query&quot;&lt;/span&gt;: { &lt;span&gt;&quot;match_all&quot;&lt;/span&gt;: {}},&lt;br/&gt;    &lt;span&gt;&quot;from&quot;&lt;/span&gt;: &lt;span&gt;100&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;size&quot;&lt;/span&gt;:  &lt;span&gt;10&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的查询表示从搜索结果中取第100条开始的10条数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「那么，这个查询语句在ES集群内部是怎么执行的呢？」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在ES中，搜索一般包括两个阶段，query 和 fetch 阶段，可以简单的理解，query 阶段确定要取哪些doc，fetch 阶段取出具体的 doc。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;Query阶段&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6985294117647058&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hC3oNAJqSRzMvicLV72PrCribCrBZuVEjhLKQzBK6cAlaVv4PKj108ov4NPTMxbodd1aY3jdCibnCAldBWLb38ia7A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;544&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上图所示，描述了一次搜索请求的 query 阶段：·&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Client 发送一次搜索请求，node1 接收到请求，然后，node1 创建一个大小为&lt;code&gt;from + size&lt;/code&gt;的优先级队列用来存结果，我们管 node1 叫 coordinating node。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;coordinating node将请求广播到涉及到的 shards，每个 shard 在内部执行搜索请求，然后，将结果存到内部的大小同样为&lt;code&gt;from + size&lt;/code&gt; 的优先级队列里，可以把优先级队列理解为一个包含&lt;code&gt;top N&lt;/code&gt;结果的列表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;每个 shard 把暂存在自身优先级队列里的数据返回给 coordinating node，coordinating node 拿到各个 shards 返回的结果后对结果进行一次合并，产生一个全局的优先级队列，存到自身的优先级队列里。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在上面的例子中，coordinating node 拿到&lt;code&gt;(from + size) * 6&lt;/code&gt;条数据，然后合并并排序后选择前面的&lt;code&gt;from + size&lt;/code&gt;条数据存到优先级队列，以便 fetch 阶段使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，各个分片返回给 coordinating node 的数据用于选出前&lt;code&gt;from + size&lt;/code&gt;条数据，所以，只需要返回唯一标记 doc 的&lt;code&gt;_id&lt;/code&gt;以及用于排序的&lt;code&gt;_score&lt;/code&gt;即可，这样也可以保证返回的数据量足够小。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;coordinating node 计算好自己的优先级队列后，query 阶段结束，进入 fetch 阶段。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;Fetch阶段&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;query 阶段知道了要取哪些数据，但是并没有取具体的数据，这就是 fetch 阶段要做的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7016574585635359&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hC3oNAJqSRzMvicLV72PrCribCrBZuVEjha6qyuuNhWFjBHVaKDfzBR97Gw30qSEUIlmkT7z9Gauc86VC9Gp2Ejw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;543&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图展示了 fetch 过程：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;coordinating node 发送 GET 请求到相关shards。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;shard 根据 doc 的&lt;code&gt;_id&lt;/code&gt;取到数据详情，然后返回给 coordinating node。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;coordinating node 返回数据给 Client。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;coordinating node 的优先级队列里有&lt;code&gt;from + size&lt;/code&gt; 个&lt;code&gt;_doc _id&lt;/code&gt;，但是，在 fetch 阶段，并不需要取回所有数据，在上面的例子中，前100条数据是不需要取的，只需要取优先级队列里的第101到110条数据即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要取的数据可能在不同分片，也可能在同一分片，coordinating node 使用 &lt;strong&gt;「multi-get」&lt;/strong&gt; 来避免多次去同一分片取数据，从而提高性能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「这种方式请求深度分页是有问题的：」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以假设在一个有 5 个主分片的索引中搜索。当我们请求结果的第一页（结果从 1 到 10 ），每一个分片产生前 10 的结果，并且返回给 &lt;span&gt;协调节点&lt;/span&gt; ，协调节点对 50 个结果排序得到全部结果的前 10 个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在假设我们请求第 1000 页—结果从 10001 到 10010 。所有都以相同的方式工作除了每个分片不得不产生前10010个结果以外。然后协调节点对全部 50050 个结果排序最后丢弃掉这些结果中的 50040 个结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「对结果排序的成本随分页的深度成指数上升。」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「注意1：」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;size的大小不能超过&lt;code&gt;index.max_result_window&lt;/code&gt;这个参数的设置，默认为10000。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果搜索size大于10000，需要设置&lt;code&gt;index.max_result_window&lt;/code&gt;参数&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;PUT _settings&lt;br/&gt;{&lt;br/&gt;    &lt;span&gt;&quot;index&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;max_result_window&quot;&lt;/span&gt;: &lt;span&gt;&quot;10000000&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;}  &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「注意2：」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;_doc&lt;/code&gt;将在未来的版本移除，详见：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;https://www.elastic.co/cn/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;https://elasticsearch.cn/article/158&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.18484383000512034&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hC3oNAJqSRzMvicLV72PrCribCrBZuVEjh5Y96vLOE2L8I5BT7xNW6ljGQFwMD4NrY65cvcmByE73tyzqFW742Vg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1953&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;深度分页问题&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Elasticsearch 的From/Size方式提供了分页的功能，同时，也有相应的限制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子，一个索引，有10亿数据，分10个 shards，然后，一个搜索请求，from=1000000，size=100，这时候，会带来严重的性能问题：CPU，内存，IO，网络带宽。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 query 阶段，每个shards需要返回 1000100 条数据给 coordinating node，而 coordinating node 需要接收&lt;code&gt;10 * 1000&lt;/code&gt;，100 条数据，即使每条数据只有 &lt;code&gt;_doc _id&lt;/code&gt; 和 &lt;code&gt;_score&lt;/code&gt;，这数据量也很大了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「在另一方面，我们意识到，这种深度分页的请求并不合理，因为我们是很少人为的看很后面的请求的，在很多的业务场景中，都直接限制分页，比如只能看前100页。」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，有1千万粉丝的微信大V，要给所有粉丝群发消息，或者给某省粉丝群发，这时候就需要取得所有符合条件的粉丝，而最容易想到的就是利用 from + size 来实现，不过，这个是不现实的，这时，可以采用 Elasticsearch 提供的其他方式来实现遍历。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;深度分页问题大致可以分为两类：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;「随机深度分页：随机跳转页面」&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;「滚动深度分页：只能一页一页往下查询」&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「下面介绍几个官方提供的深度分页方法」&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Scroll&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;Scroll遍历数据&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以把scroll理解为关系型数据库里的cursor，因此，scroll并不适合用来做实时搜索，而更适合用于后台批处理任务，比如群发。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个分页的用法，&lt;strong&gt;「不是为了实时查询数据」&lt;/strong&gt;，而是为了&lt;strong&gt;「一次性查询大量的数据（甚至是全部的数据」&lt;/strong&gt;）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为这个scroll相当于维护了一份当前索引段的快照信息，这个快照信息是你执行这个scroll查询时的快照。在这个查询后的任何新索引进来的数据，都不会在这个快照中查询到。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是它相对于from和size，不是查询所有数据然后剔除不要的部分，而是记录一个读取的位置，保证下一次快速继续读取。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不考虑排序的时候，可以结合&lt;code&gt;SearchType.SCAN&lt;/code&gt;使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;scroll可以分为初始化和遍历两部，初始化时将&lt;strong&gt;「所有符合搜索条件的搜索结果缓存起来（注意，这里只是缓存的doc_id，而并不是真的缓存了所有的文档数据，取数据是在fetch阶段完成的）」&lt;/strong&gt;，可以想象成快照。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在遍历时，从这个快照里取数据，也就是说，在初始化后，对索引插入、删除、更新数据都不会影响遍历结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「基本使用」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;POST /twitter/tweet/_search?scroll=&lt;span&gt;1&lt;/span&gt;m&lt;br/&gt;{&lt;br/&gt;    &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;100&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;query&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;match&quot;&lt;/span&gt; : {&lt;br/&gt;            &lt;span&gt;&quot;title&quot;&lt;/span&gt; : &lt;span&gt;&quot;elasticsearch&quot;&lt;/span&gt;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;初始化指明 index 和 type，然后，加上参数 scroll，表示暂存搜索结果的时间，其它就像一个普通的search请求一样。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;会返回一个&lt;code&gt;_scroll_id&lt;/code&gt;，&lt;code&gt;_scroll_id&lt;/code&gt;用来下次取数据用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「遍历」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;POST /_search?scroll=&lt;span&gt;1&lt;/span&gt;m&lt;br/&gt;{&lt;br/&gt;    &lt;span&gt;&quot;scroll_id&quot;&lt;/span&gt;:&lt;span&gt;&quot;XXXXXXXXXXXXXXXXXXXXXXX I am scroll id XXXXXXXXXXXXXXX&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的&lt;code&gt;scroll_id&lt;/code&gt;即 上一次遍历取回的&lt;code&gt;_scroll_id&lt;/code&gt;或者是初始化返回的&lt;code&gt;_scroll_id&lt;/code&gt;，同样的，需要带 scroll 参数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重复这一步骤，直到返回的数据为空，即遍历完成。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「注意，每次都要传参数 scroll，刷新搜索结果的缓存时间」&lt;/strong&gt;。另外，&lt;strong&gt;「不需要指定 index 和 type」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设置scroll的时候，需要使搜索结果缓存到下一次遍历完成，&lt;strong&gt;「同时，也不能太长，毕竟空间有限。」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「优缺点」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;缺点：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;「scroll_id会占用大量的资源（特别是排序的请求）」&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;同样的，scroll后接超时时间，频繁的发起scroll请求，会出现一些列问题。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;「是生成的历史快照，对于数据的变更不会反映到快照上。」&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「优点：」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;适用于非实时处理大量数据的情况，比如要进行数据迁移或者索引变更之类的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Scroll Scan&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ES提供了scroll scan方式进一步提高遍历性能，但是scroll scan不支持排序，因此scroll scan适合不需要排序的场景&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「基本使用」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Scroll Scan 的遍历与普通 Scroll 一样，初始化存在一点差别。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;POST /my_index/my_type/_search?search_type=scan&amp;amp;scroll=&lt;span&gt;1&lt;/span&gt;m&amp;amp;size=&lt;span&gt;50&lt;/span&gt;&lt;br/&gt;{&lt;br/&gt; &lt;span&gt;&quot;query&quot;&lt;/span&gt;: { &lt;span&gt;&quot;match_all&quot;&lt;/span&gt;: {}}&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要指明参数：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;search_type&lt;/code&gt;：赋值为scan，表示采用 Scroll Scan 的方式遍历，同时告诉 Elasticsearch 搜索结果不需要排序。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;scroll：同上，传时间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;size：与普通的 size 不同，这个 size 表示的是每个 shard 返回的 size 数，最终结果最大为 &lt;code&gt;number_of_shards * size&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Scroll Scan与Scroll的区别」&lt;/strong&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Scroll-Scan结果&lt;strong&gt;「没有排序」&lt;/strong&gt;，按index顺序返回，没有排序，可以提高取数据性能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;初始化时只返回 &lt;code&gt;_scroll_id&lt;/code&gt;，没有具体的hits结果&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;size控制的是每个分片的返回的数据量，而不是整个请求返回的数据量。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Sliced Scroll&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你数据量很大，用Scroll遍历数据那确实是接受不了，现在Scroll接口可以并发来进行数据遍历了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个Scroll请求，可以分成多个Slice请求，可以理解为切片，各Slice独立并行，比用Scroll遍历要快很多倍。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;POST /index/type/_search?scroll=&lt;span&gt;1&lt;/span&gt;m&lt;br/&gt;{&lt;br/&gt;    &lt;span&gt;&quot;query&quot;&lt;/span&gt;: { &lt;span&gt;&quot;match_all&quot;&lt;/span&gt;: {}},&lt;br/&gt;    &lt;span&gt;&quot;slice&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;id&quot;&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;max&quot;&lt;/span&gt;: &lt;span&gt;5&lt;/span&gt;&lt;br/&gt;    }   &lt;br/&gt;}&lt;br/&gt; &lt;br/&gt;POST ip:port/index/type/_search?scroll=&lt;span&gt;1&lt;/span&gt;m&lt;br/&gt;{&lt;br/&gt;    &lt;span&gt;&quot;query&quot;&lt;/span&gt;: { &lt;span&gt;&quot;match_all&quot;&lt;/span&gt;: {}},&lt;br/&gt;    &lt;span&gt;&quot;slice&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;id&quot;&lt;/span&gt;: &lt;span&gt;1&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;max&quot;&lt;/span&gt;: &lt;span&gt;5&lt;/span&gt;&lt;br/&gt;    }   &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上边的示例可以单独请求两块数据，最终五块数据合并的结果与直接scroll scan相同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中max是分块数，id是第几块。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;官方文档中建议max的值不要超过shard的数量，否则可能会导致内存爆炸。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Search After&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Search_after&lt;/code&gt;是 ES 5 新引入的一种分页查询机制，其原理几乎就是和scroll一样，因此代码也几乎是一样的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「基本使用：」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一步：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;POST twitter/_search&lt;br/&gt;{&lt;br/&gt;    &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;10&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;query&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;match&quot;&lt;/span&gt; : {&lt;br/&gt;            &lt;span&gt;&quot;title&quot;&lt;/span&gt; : &lt;span&gt;&quot;es&quot;&lt;/span&gt;&lt;br/&gt;        }&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&quot;sort&quot;&lt;/span&gt;: [&lt;br/&gt;        {&lt;span&gt;&quot;date&quot;&lt;/span&gt;: &lt;span&gt;&quot;asc&quot;&lt;/span&gt;},&lt;br/&gt;        {&lt;span&gt;&quot;_id&quot;&lt;/span&gt;: &lt;span&gt;&quot;desc&quot;&lt;/span&gt;}&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;返回出的结果信息 ：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;      &lt;span&gt;&quot;took&quot;&lt;/span&gt; : &lt;span&gt;29&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;timed_out&quot;&lt;/span&gt; : &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;_shards&quot;&lt;/span&gt; : {&lt;br/&gt;        &lt;span&gt;&quot;total&quot;&lt;/span&gt; : &lt;span&gt;1&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;successful&quot;&lt;/span&gt; : &lt;span&gt;1&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;skipped&quot;&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;failed&quot;&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;      },&lt;br/&gt;      &lt;span&gt;&quot;hits&quot;&lt;/span&gt; : {&lt;br/&gt;        &lt;span&gt;&quot;total&quot;&lt;/span&gt; : {&lt;br/&gt;          &lt;span&gt;&quot;value&quot;&lt;/span&gt; : &lt;span&gt;5&lt;/span&gt;,&lt;br/&gt;          &lt;span&gt;&quot;relation&quot;&lt;/span&gt; : &lt;span&gt;&quot;eq&quot;&lt;/span&gt;&lt;br/&gt;        },&lt;br/&gt;        &lt;span&gt;&quot;max_score&quot;&lt;/span&gt; : &lt;span&gt;null&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;hits&quot;&lt;/span&gt; : [&lt;br/&gt;          {&lt;br/&gt;            ...&lt;br/&gt;            },&lt;br/&gt;            &lt;span&gt;&quot;sort&quot;&lt;/span&gt; : [&lt;br/&gt;              ...&lt;br/&gt;            ]&lt;br/&gt;          },&lt;br/&gt;          {&lt;br/&gt;            ...&lt;br/&gt;            },&lt;br/&gt;            &lt;span&gt;&quot;sort&quot;&lt;/span&gt; : [&lt;br/&gt;              &lt;span&gt;124648691&lt;/span&gt;,&lt;br/&gt;              &lt;span&gt;&quot;624812&quot;&lt;/span&gt;&lt;br/&gt;            ]&lt;br/&gt;          }&lt;br/&gt;        ]&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的请求会为每一个文档返回一个包含sort排序值的数组。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些sort排序值可以被用于&lt;code&gt;search_after&lt;/code&gt;参数里以便抓取下一页的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，我们可以使用最后的一个文档的sort排序值，将它传递给&lt;code&gt;search_after&lt;/code&gt;参数：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;GET twitter/_search&lt;br/&gt;{&lt;br/&gt;    &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;10&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;query&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;match&quot;&lt;/span&gt; : {&lt;br/&gt;            &lt;span&gt;&quot;title&quot;&lt;/span&gt; : &lt;span&gt;&quot;es&quot;&lt;/span&gt;&lt;br/&gt;        }&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&quot;search_after&quot;&lt;/span&gt;: [&lt;span&gt;124648691&lt;/span&gt;, &lt;span&gt;&quot;624812&quot;&lt;/span&gt;],&lt;br/&gt;    &lt;span&gt;&quot;sort&quot;&lt;/span&gt;: [&lt;br/&gt;        {&lt;span&gt;&quot;date&quot;&lt;/span&gt;: &lt;span&gt;&quot;asc&quot;&lt;/span&gt;},&lt;br/&gt;        {&lt;span&gt;&quot;_id&quot;&lt;/span&gt;: &lt;span&gt;&quot;desc&quot;&lt;/span&gt;}&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;若我们想接着上次读取的结果进行读取下一页数据，第二次查询在第一次查询时的语句基础上添加&lt;code&gt;search_after&lt;/code&gt;，并指明从哪个数据后开始读取。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「基本原理」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;es维护一个实时游标，它以上一次查询的最后一条记录为游标，方便对下一页的查询，它是一个无状态的查询，因此每次查询的都是最新的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于它采用记录作为游标，因此&lt;strong&gt;「SearchAfter要求doc中至少有一条全局唯一变量（每个文档具有一个唯一值的字段应该用作排序规范）」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「优缺点」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「优点：」&lt;/strong&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;无状态查询，可以防止在查询过程中，数据的变更无法及时反映到查询中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不需要维护&lt;code&gt;scroll_id&lt;/code&gt;，不需要维护快照，因此可以避免消耗大量的资源。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「缺点：」&lt;/strong&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;由于无状态查询，因此在查询期间的变更可能会导致跨页面的不一值。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;排序顺序可能会在执行期间发生变化，具体取决于索引的更新和删除。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;至少需要制定一个唯一的不重复字段来排序。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;它不适用于大幅度跳页查询，或者全量导出，对第N页的跳转查询相当于对es不断重复的执行N次search after，而全量导出则是在短时间内执行大量的重复查询。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;SEARCH_AFTER&lt;/code&gt;不是自由跳转到任意页面的解决方案，而是并行滚动多个查询的解决方案。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;分页方式&lt;/th&gt;&lt;th&gt;性能&lt;/th&gt;&lt;th&gt;优点&lt;/th&gt;&lt;th&gt;缺点&lt;/th&gt;&lt;th&gt;场景&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;from + size&lt;/td&gt;&lt;td&gt;低&lt;/td&gt;&lt;td&gt;灵活性好，实现简单&lt;/td&gt;&lt;td&gt;深度分页问题&lt;/td&gt;&lt;td&gt;数据量比较小，能容忍深度分页问题&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;scroll&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;解决了深度分页问题&lt;/td&gt;&lt;td&gt;无法反应数据的实时性（快照版本）维护成本高，需要维护一个 scroll_id&lt;/td&gt;&lt;td&gt;海量数据的导出需要查询海量结果集的数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;search_after&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;性能最好不存在深度分页问题能够反映数据的实时变更&lt;/td&gt;&lt;td&gt;实现复杂，需要有一个全局唯一的字段连续分页的实现会比较复杂，因为每一次查询都需要上次查询的结果，它不适用于大幅度跳页查询&lt;/td&gt;&lt;td&gt;海量数据的分页&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;ES7版本变更&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;参照：https://www.elastic.co/guide/en/elasticsearch/reference/master/paginate-search-results.html#scroll-search-results&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在&lt;code&gt;7.*&lt;/code&gt;版本中，ES官方不再推荐使用Scroll方法来进行深分页，而是推荐使用带PIT的&lt;code&gt;search_after&lt;/code&gt;来进行查询；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从&lt;code&gt;7.*&lt;/code&gt;版本开始，您可以使用&lt;code&gt;SEARCH_AFTER&lt;/code&gt;参数通过上一页中的一组排序值检索下一页命中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用&lt;code&gt;SEARCH_AFTER&lt;/code&gt;需要多个具有相同查询和排序值的搜索请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果这些请求之间发生刷新，则结果的顺序可能会更改，从而导致页面之间的结果不一致。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为防止出现这种情况，您可以创建一个时间点(PIT)来在搜索过程中保留当前索引状态。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;POST /my-index&lt;span&gt;-000001&lt;/span&gt;/_pit?keep_alive=&lt;span&gt;1&lt;/span&gt;m&lt;br/&gt;&lt;br/&gt;返回一个PIT ID：&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;id&quot;&lt;/span&gt;: &lt;span&gt;&quot;46ToAwMDaWR5BXV1aWQyKwZub2RlXzMAAAAAAAAAACoBYwADaWR4BXV1aWQxAgZub2RlXzEAAAAAAAAAAAEBYQADaWR5BXV1aWQyKgZub2RlXzIAAAAAAAAAAAwBYgACBXV1aWQyAAAFdXVpZDEAAQltYXRjaF9hbGw_gAAAAA==&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在搜索请求中指定PIT：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;GET /_search&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;10000&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;query&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;match&quot;&lt;/span&gt; : {&lt;br/&gt;      &lt;span&gt;&quot;user.id&quot;&lt;/span&gt; : &lt;span&gt;&quot;elkbee&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;pit&quot;&lt;/span&gt;: {&lt;br/&gt;     &lt;span&gt;&quot;id&quot;&lt;/span&gt;:  &lt;span&gt;&quot;46ToAwMDaWR5BXV1aWQyKwZub2RlXzMAAAAAAAAAACoBYwADaWR4BXV1aWQxAgZub2RlXzEAAAAAAAAAAAEBYQADaWR5BXV1aWQyKgZub2RlXzIAAAAAAAAAAAwBYgACBXV1aWQyAAAFdXVpZDEAAQltYXRjaF9hbGw_gAAAAA==&quot;&lt;/span&gt;, &lt;br/&gt;     &lt;span&gt;&quot;keep_alive&quot;&lt;/span&gt;: &lt;span&gt;&quot;1m&quot;&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;sort&quot;&lt;/span&gt;: [ &lt;br/&gt;    {&lt;span&gt;&quot;@timestamp&quot;&lt;/span&gt;: {&lt;span&gt;&quot;order&quot;&lt;/span&gt;: &lt;span&gt;&quot;asc&quot;&lt;/span&gt;, &lt;span&gt;&quot;format&quot;&lt;/span&gt;: &lt;span&gt;&quot;strict_date_optional_time_nanos&quot;&lt;/span&gt;, &lt;span&gt;&quot;numeric_type&quot;&lt;/span&gt; : &lt;span&gt;&quot;date_nanos&quot;&lt;/span&gt; }}&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;性能对比&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分别分页获取&lt;code&gt;1 - 10&lt;/code&gt;，&lt;code&gt;49000 - 49010&lt;/code&gt;，&lt;code&gt;99000 - 99010&lt;/code&gt;范围各10条数据（前提10w条），性能大致是这样：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.37222222222222223&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hC3oNAJqSRzMvicLV72PrCribCrBZuVEjhjwia6bTGT7GRDNsjyrcBsp0fwakJU18gmw7ZEgZ6GYaicPfBEaHfHYKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;向前翻页&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于向前翻页，ES中没有相应API，但是根据官方说法（https://github.com/elastic/elasticsearch/issues/29449），ES中的向前翻页问题可以通过翻转排序方式来实现即：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;对于某一页，正序&lt;code&gt;search_after&lt;/code&gt;该页的最后一条数据id为下一页，则逆序&lt;code&gt;search_after&lt;/code&gt;该页的第一条数据id则为上一页。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;国内论坛上，有人使用缓存来解决上一页的问题：https://elasticsearch.cn/question/7711&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.32&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hC3oNAJqSRzMvicLV72PrCribCrBZuVEjh345LicOmJMlz07oQ4KtEQSwkicziapjj7JrvkekdzZv6WAgEEURT0vibbg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1700&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果数据量小（from+size在10000条内），或者只关注结果集的TopN数据，可以使用from/size 分页，简单粗暴&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据量大，深度翻页，后台批处理任务（数据迁移）之类的任务，使用 scroll 方式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据量大，深度翻页，用户实时、高并发查询需求，使用 search after 方式&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;个人思考&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Scroll和&lt;code&gt;search_after&lt;/code&gt;原理基本相同，他们都采用了游标的方式来进行深分页。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式虽然能够一定程度上解决深分页问题。但是，它们并不是深分页问题的终极解决方案，深分页问题&lt;strong&gt;「必须避免！!」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于Scroll，无可避免的要维护&lt;code&gt;scroll_id&lt;/code&gt;和历史快照，并且，还必须保证&lt;code&gt;scroll_id&lt;/code&gt;的存活时间，这对服务器是一个巨大的负荷。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于&lt;code&gt;Search_After&lt;/code&gt;，如果允许用户大幅度跳转页面，会导致短时间内频繁的搜索动作，这样的效率非常低下，这也会增加服务器的负荷，同时，在查询过程中，索引的增删改会导致查询数据不一致或者排序变化，造成结果不准确。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Search_After&lt;/code&gt;本身就是一种业务折中方案，它不允许指定跳转到页面，而只提供下一页的功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Scroll默认你会在后续将所有符合条件的数据都取出来，所以，它只是搜索到了所有的符合条件的&lt;code&gt;doc_id&lt;/code&gt;(这也是为什么官方推荐用&lt;code&gt;doc_id&lt;/code&gt;进行排序，因为本身缓存的就是&lt;code&gt;doc_id&lt;/code&gt;，如果用其他字段排序会增加查询量)，并将它们排序后保存在协调节点(coordinate node)，但是并没有将所有数据进行fetch，而是每次scroll，读取size个文档，并返回此次读取的最后一个文档以及上下文状态，用以告知下一次需要从哪个shard的哪个文档之后开始读取。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这也是为什么官方不推荐scroll用来给用户进行实时的分页查询，而是适合于大批量的拉取数据，因为它从设计上就不是为了实时读取数据而设计的。&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>621d305343058841c91bdd86d920a3d6</guid>
<title>深入详解 APK 编译打包流程</title>
<link>https://toutiao.io/k/6sc6q4o</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;身为一个Android开发，一定要了解apk编译打包流程；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那么今天我们就来学习下；&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;apk的编译流程&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、apk文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;apk是Android Package的缩写；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;解压apk文件后包含AndroidManifest.xml、assets目录、classes.dex(还可能有 classes2.dex,classes3.dex...classesN.dex)、lib目录、META-INF目录、res目录和resources.arsc；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;classes.dex 是.dex文件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;resources.arsc是resources resources文件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;AndroidManifest.xml是AndroidManifest.xml文件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;res是uncompiled resources；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;META-INF是签名文件夹；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、打包流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img data-fileid=&quot;100001531&quot; data-ratio=&quot;1.6455223880597014&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/kyDL16ViavhGicOdiccAkVWpHHYZfFCWQPOYDYRZSOWOr3LhJwyicaGpPC3fMn6GHQkfGegsrL3v30hKWKPUFkXOoQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;536&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;打包中需要的工具&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;aapt：Android资源打包工具，${ANDROID_SDK_HOME}/platform-tools/appt&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;aidl：Android接口描述语言转化为.java文件的工具，${ANDROID_SDK_HOME}/platform-tools/aidl&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;javac：Java Compiler，${JDK_HOME}/javac或/usr/bin/javac&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;dex：转化.class文件为Davik VM能识别的.dex文件，${ANDROID_SDK_HOME}/platform-tools/dx&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;apkbuilder：生成apk包，${ANDROID_SDK_HOME}/tools/opkbuilder&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;jarsigner：.jar文件的签名工具，${JDK_HOME}/jarsigner或/usr/bin/jarsigner&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;zipalign：字节码对齐工具，${ANDROID_SDK_HOME}/tools/zipalign&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.1打包资源文件，生成R.java文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用aapt来打包res资源文件，生成R.java、resources.arsc和res文件（二进制 &amp;amp; 非二进制如res/raw和pic保持原样）；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;res目录&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;animator：这类资源以XML文件保存在res/animator目录下，用来描述属性动画；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;anim：这类资源以XML文件保存在res/anim目录下，用来描述补间动画；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;color：这类资源以XML文件保存在res/color目录下，用描述对象颜色状态选择子；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;drawable：这类资源以XML或者Bitmap文件保存在res/drawable目录下，用来描述可绘制对象。例如，我们可以在里面放置一些图片（.png, .9.png, .jpg, .gif），来作为程序界面视图的背景图；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;layout：这类资源以XML文件保存在res/layout目录下，用来描述应用程序界面布局；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;menu：这类资源以XML文件保存在res/menu目录下，用来描述应用程序菜单；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;raw：这类资源以任意格式的文件保存在res/raw目录下，它们和assets类资源一样，都是原装不动地打包在apk文件中的，不过它们会被赋予资源ID，这样我们就可以在程序中通过ID来访问它们。例如，假设在res/raw目录下有一个名称为filename的文件，并且它在编译的过程，被赋予的资源ID为R.raw.filename，那么就可以使用以下代码来访问它：&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;Resources&lt;/span&gt; res = getResources();  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;InputStream&lt;/span&gt; is = res .openRawResource(R.raw.filename);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;values：这类资源以XML文件保存在res/values目录下，用来描述一些简单值，例如，数组、颜色、尺寸、字符串和样式值等，一般来说，这六种不同的值分别保存在名称为arrays.xml、colors.xml、dimens.xml、strings.xml和styles.xml文件中；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;xml：这类资源以XML文件保存在res/xml目录下，一般就是用来描述应用程序的配置信息；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;resources.arsc文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;R.java文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.2处理AIDL文件，生成对应的.java文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.3编译Java文件，生成对应的.class文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.4把.class文件转化成Davik VM支持的.dex文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;转换所有的class文件，生成classes.dex文件。处理文件就是上一步生成的 .class 文件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用dx工具将java字节码转换为dalvik字节码、压缩常量池、消除冗余信息等；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通过dex命令，将.class文件和第三方库中的.class文件处理生成classes.dex；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.5打包生成未签名的.apk文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;将classes.dex、resources.arsc、res文件夹(res/raw资源被原装不动地打包进APK之外，其它的资源都会被编译或者处理)、Other Resources(assets文件夹)、AndroidManifest.xml打包成apk文件；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;注意：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;res/raw和assets的相同点：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;两者目录下的文件在打包后会原封不动的保存在apk包中，不会被编译成二进制；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;res/raw和assets的不同点：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.6对未签名.apk文件进行签名&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;android的应用程序需要签名才能在android设备上安装，签名apk文件有两种情况:&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在调试应用程序时，也就是我们通常称为的debug模式的签名，平时开发的时候，在编译调试程序时会自己使用一个debug.keystore对apk进行签名；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;正式发布时对应用程序打包进行签名，这种情况下需要提供一个符合android开发文档中要求的签名文件。这种签名也是分两种：JDK中提供的jarsigner工具签名 、android源码中提供的signapk工具；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.7对签名后的.apk文件进行对齐处理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;release mode 下使用 aipalign进行align，即对签名后的apk进行对齐处理；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Zipalign是一个android平台上整理APK文件的工具，它对apk中未压缩的数据进行4字节对齐，对齐后就可以使用mmap函数读取文件，可以像读取内存一样对普通文件进行操作。如果没有4字节对齐，就必须显式的读取，这样比较缓慢并且会耗费额外的内存；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在 Android SDK 中包含一个名为 “zipalign” 的工具，它能够对打包后的 app 进行优化。其位于 SDK 的 build-tools 目录下；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img data-fileid=&quot;100001530&quot; data-ratio=&quot;1.9498910675381265&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/kyDL16ViavhGicOdiccAkVWpHHYZfFCWQPOezA5Lic2tNeCUDViczQib9AfoINEKpozdticuOZzJxu6YjwrVuPvoRrcpg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;459&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;人生很有意思，就像升级打怪，打了一怪又一怪，虽然过程有辛苦有困难，有失败的危险，也有后退的风险，但是打一怪很有感觉；加油打工人！！！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>