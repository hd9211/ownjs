<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>67446a5d410767d92071bc0e2a2a95b3</guid>
<title>俞敏洪：我的退与进；架构师必须了解的5种最佳软件架构模式；Redis夺命52连问｜码农周刊VIP会员专属邮件周报 Vol.096</title>
<link>https://toutiao.io/k/au2ts9v</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;
            &lt;p&gt;&lt;span&gt;本文内容节选自&lt;strong&gt;「码农周刊VIP会员专属邮件周报 Vol.096」&lt;/strong&gt;，感谢阅读。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MzA0ODkyMA==&amp;amp;mid=2655078432&amp;amp;idx=2&amp;amp;sn=f1ba1fa5fbfbcf98a3e6f610b258cf05&amp;amp;chksm=bd2918178a5e9101b993d9e84d783562c995577cec855adf32ccb5946ff4da21fd6e89ba078e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;想邮件订阅周报？扫码即刻订阅！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;↓↓↓&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;307&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNavich3VaNkKeiaAwUhz7TQbQmic4fFsr58X9PAYleYzxqc1K1vZjeBoZDMUsmia0xH67EQYINGRvNOtLmA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;俞敏洪：我的退与进&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;em&gt;https://mp.weixin.qq.com/s/EEuSCgUX-ngOj6akUreuhQ&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;在未来的岁月中，对自身生命要有什么样的交代。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;AOL：Web1.0时代的一件往事&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://mp.weixin.qq.com/s/Ay4VXw5pOsBEKaEP-qPxsg&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;进化永远不会停止，这是互联网的本质。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;架构师必须了解的 5 种最佳软件架构模式&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/knun5wy&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;架构模式是针对特定环境中常见软件架构问题的通用且可重用的解决方案&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;哈啰推荐引擎搭建实战&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/fnlspfp&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;推荐引擎本质上是一种信息过滤系统，特点是用户无明确意图。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Java、Go 和 Python 的多线程性能对比&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/qac29q3&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;供参考&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Golang中泛型的使用&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/68j23an&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;全面解读&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;3000帧动画图解MySQL为什么需要binlog、redo log和undo log&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/b0g4460&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;图文并茂&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Redis夺命52连问&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/he3fzao&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;供参考&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Kubernetes网络难懂？快来看这篇文章&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/cgk9ym2&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;图文并茂&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;如何做好CodeReview&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/v5nrj6u&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;经验总结&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MzA0ODkyMA==&amp;amp;mid=2655078432&amp;amp;idx=2&amp;amp;sn=f1ba1fa5fbfbcf98a3e6f610b258cf05&amp;amp;chksm=bd2918178a5e9101b993d9e84d783562c995577cec855adf32ccb5946ff4da21fd6e89ba078e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;想邮件订阅周报？扫码即刻订阅！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;↓↓↓&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;307&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNavich3VaNkKeiaAwUhz7TQbQmic4fFsr58X9PAYleYzxqc1K1vZjeBoZDMUsmia0xH67EQYINGRvNOtLmA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ddb81c4be68e99635e4cc7a16885c883</guid>
<title>Software Engineering at Google 中文版</title>
<link>https://toutiao.io/k/db5se4r</link>
<content:encoded>&lt;div&gt;&lt;body id=&quot;readabilityBody&quot;&gt;
&lt;p id=&quot;app&quot;/&gt;



















&lt;/body&gt;
&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>009e24a2b9665f0015274a754efdada6</guid>
<title>如何提升数据质量？（附实战文档）</title>
<link>https://toutiao.io/k/jtxuq2m</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;h2 data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一、前言&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;数据质量保障的关键的步骤是&lt;/span&gt;&lt;span&gt;数据质量规则、&lt;span&gt;数据质量&lt;/span&gt;指标，数据探查，&lt;/span&gt;&lt;span&gt;数据保障机制和数据清洗，不管是在做数据质量或者打算做数据质量工作的朋友都可以详细研究下，应该会有帮助。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;本篇包含数质量基础，&lt;/span&gt;&lt;span&gt;数据质量规则、指标（附模板下载），数据探查（附模板下载），&lt;/span&gt;&lt;span&gt;数据保障机制，数据清洗（附模板下载），常见质量问题（附下载文档）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5830324909747292&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hXibVSNciaXhyQp01d0dqbAMKauInmSIbzshtVdO28C7oqDiaIV4OiaG9H85oialsWmcnAAw2oiaib3s6sVkmqSUCxpcg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;二、数据质量基础&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;数据质量管理（Data Quality Management），是指对&lt;/span&gt;&lt;span&gt;数据&lt;/span&gt;&lt;span&gt;从计划、获取、存储、共享、维护、应用、消亡生命周期的每个阶段里可能引发的各类数据质量问题，进行识别、度量、监控、预警等一系列管理活动，并通过改善和提高组织的管理水平使得&lt;/span&gt;&lt;span&gt;数据质量&lt;/span&gt;&lt;span&gt;获得进一步提高。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据质量最关键的6个维度：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1）完整性：指数据在录入、传递过程中无缺失和遗漏，包括实体完整、属性完整、记录完整和字段值完整四个方面。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2）及时性：指及时记录和传递相关数据，满足业务对信息获取的时间要求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3）有效性：指数据的值、格式和展现形式符合数据定义和业务定义的要求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4）一致性：指遵循统一的数据标准记录和传递数据和信息，主要体现在数据&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;记录是否规范、数据是否符合逻辑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5）唯一性：指同一数据只能有唯一的标识符。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;6）准确性：指真实地、准确地记录原始数据，无虚假数据及信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;三、数据质量规则，数据质量指标&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;数据质量规则是数据质量最核心的内容，数据质量规则和指标设计的全与不全，是否合理，决定了数据的质量的好坏。下面是我根据华为数据之道和工业企业数字化转型之道加上我的经验综合出来的一个版本，如果这些规则都用到位，数据质量应该是有保障的，由于列比较多，完整版请在公众号获取。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;对象&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;质量特性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;规则类型&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;指标&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;6&quot;&gt;&lt;span&gt;单列&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;完整性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;不可为空类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;空值率&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;有效性 &lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;语法约束类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1-样本记录异常值比率&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;有效性 &lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;格式规范类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;有效性 &lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;长度约束类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;有效性 &lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;值域约束类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;准确性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;事实参照标准类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;样本记录中真实记录的比率&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;4&quot;&gt;&lt;span&gt;跨列&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;完整性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;应为空值类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;及时性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;入库及时类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;满足时间要求的样本记录的比率&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;一致性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;单表等值一致约束类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;一致性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;单表逻辑一致约束类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot;&gt;&lt;span&gt;跨行&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;唯一性 &lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;记录唯一类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;一致性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;层级结构一致约束&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;3&quot;&gt;&lt;span&gt;跨表&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;一致性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;外关联约束类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;外键无对应主键的样本记录比率&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;一致性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;跨表等值一致约束类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;一致性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;跨表逻辑一致约束类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot;&gt;&lt;span&gt;跨系统&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;一致性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;跨系统记录一致约束类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;样本记录与其它系统的匹配率&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;及时性&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;入库及时类&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;满足时间要求的样本记录的比率&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;四、数据探查&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;数据探查是数据质量保障非常重要要的一步，他是设计的基础，排除客观原因，好的效率和质量是可以通过设计来提升的，如果没有数据探查，一般情况下数据类项目都会反复多次，有可能影响人员变动，交接困难，维护困难，项目完成周期长等问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面只是其中几个方面的数据探查，供参考，具体案例，请在公众号获取。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;探查出的常见问题和分类请在公众号获取。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;探查项&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分析意义&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分析点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分析点解释&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot; rowspan=&quot;5&quot;&gt;&lt;p&gt;&lt;span&gt;完整性分析&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot; rowspan=&quot;5&quot;&gt;&lt;p&gt;&lt;span&gt;保证分析的可靠性&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;空值记录数&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;探查字段在探查时间点没有值的记录条数&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;总记录数&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;探查字段在探查时间点总记录数&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;缺失率&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;探查字段在探查时间点缺失信息记录数占总记录数的比重&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;空值预警&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;探查字段在探查时间点缺失率高于10%则提出预警&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;主键唯一性&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;探查主键字段在探查时间点是否有重复记录&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot; rowspan=&quot;2&quot;&gt;&lt;p&gt;&lt;span&gt;值域分析&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot; rowspan=&quot;2&quot;&gt;&lt;p&gt;&lt;span&gt;分析是否有异常数据&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;最大值&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;数值型，日期型字段在探查时间点的最大值&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;最小值&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;数值型，日期型字段在探查时间点的最小值&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot; rowspan=&quot;3&quot;&gt;&lt;p&gt;&lt;span&gt;枚举值分析&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot; rowspan=&quot;3&quot;&gt;&lt;p&gt;&lt;span&gt;列出检测字段所有的枚举值&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;枚举范围&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;属性字段的枚举值定义&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;枚举实际范围值&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;属性字段在探查时间点实际的枚举值及其分布&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;异常比例&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;探查时间点，不在枚举定义范围的枚举值占总记录数的比重&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;逻辑性探查&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;业务逻辑点&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;center&quot; nowrap=&quot;&quot;&gt;&lt;p&gt;&lt;span&gt;根据业务逻辑探查字段是否遵循业务逻辑&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;五&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;、&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;数据质量保障&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;机制&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;数据质量持续提升就要靠保障机制了，只有自动化，常态化，持续监控数据质量，才能不断提升数据的质量，数据质量保障主要有如下几个关键步骤：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;设计量化指标—&amp;gt;设计质量打分细则-&amp;gt;设计分值考核-&amp;gt;异常数据监控-&amp;gt;指标展现-&amp;gt;按规则推送提醒相关负责人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.2509025270758123&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hXibVSNciaXhyQp01d0dqbAMKauInmSIbzQpnMzzicfI0Vcurz6ZwcCsLg9mo7vMabezdRKSV3lnU9yUrSYHm0edg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;例：空值率&amp;gt;5%,记1分，每日空值率指标预警，每日全部门通报，影响年底考核。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;此部分需要根据公司实际情况详细设计。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;六&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;、数据清洗&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;数据清洗&lt;/span&gt;(Data cleaning)– &lt;span&gt;对数据进行重新审查和校验的过程，目的在于删除重复信息、纠正存在的错误，并提供&lt;/span&gt;&lt;/span&gt;&lt;span&gt;数据一致性&lt;/span&gt;&lt;span&gt;。主要有不完整的数据、错误的数据、重复的数据三大类；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;如果前端控制不到位，又想有高质量的数据，只能靠数据清洗，数据清洗是存量数据质量提升的关键步骤，&lt;/span&gt;&lt;span&gt;数据清洗后的数据可以更好的支持数据分析，数据洞见。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;参考模板在公众号获取。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;七、结语&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;上面是我对数据质量的一些理解和实战经验，如果对您有帮助，烦请关注、转发，如有任何问题，&lt;strong&gt;请留言或加我微信入群&lt;/strong&gt;，我们一起探讨，一起持续构建数据治理体系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如需获取资料，请在公众号后台回复&lt;/span&gt;“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;数据质量&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”获取。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.90625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hXibVSNciaXhyb9HtzmokrkXjGd49TDeENz5elOyeibKQye5N2xghN16PLUOdk0mQ2fzkLA4Mw1OZyCicqFllcurfQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;256&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA3NjIzNjMwOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hXibVSNciaXhxlunJcIB7XwcoZdQjlycAgmmqXdiaW6JsRV7W2podcyyiaiapoP7k8kIJJBO31iaY6F2X04rCUZ4ObLg/0?wx_fmt=png&quot; data-nickname=&quot;数据治理体系&quot; data-alias=&quot;huitaiji&quot; data-signature=&quot;持续完善数据治理实战体系，数字体系，实现业务数字化，数字资产化，资产业务化，资产资本化；回归业务场景的数字化案例才最具参考价值，最容易理解和借鉴的。&quot; data-from=&quot;1&quot;/&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>224b4527764afcd323af8177d3c1377e</guid>
<title>基于 qiankun 的微前端实践</title>
<link>https://toutiao.io/k/7x7sy7b</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;前言&lt;/h1&gt;&lt;p&gt;微前端（Micro-Frontends）是一种类似于微服务的架构，它将微服务的理念应用于浏览器端，即将 Web 应用由单一的单体应用转变为多个小型前端应用聚合为一的应用。&lt;/p&gt;&lt;p&gt;微前端并不是前端领域的新概念。早期希望前端工程能够像后台的微服务一样，项目分开自治，核心的诉求是：&lt;/p&gt;&lt;p&gt;1、兼容不同技术栈&lt;/p&gt;&lt;p&gt;2、将项目看作页面、组件，能够复用到不同的系统中&lt;/p&gt;&lt;p&gt;早期比较成熟的 single-spa，从早期 React 的现代框架组件生命周期中获得灵感，将生命周期应用于这个应用程序，即将整个页面作为组件。&lt;/p&gt;&lt;p&gt;后来蚂蚁金融团队孵化了基于 single-spa 的 qiankun 架构，将微前端进一步的深耕，目标直指巨石应用业务难题，旨在解决单体应用在一个相对长的时间跨度下，由于参与的人员、团队的增多、变迁，从一个普通应用演变成一个巨石应用 (&lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DpU1gXA0rfwc&amp;amp;title=Frontend%20Monolith&quot; href=&quot;&quot;&gt;Frontend Monolith&lt;/a&gt;) 后，随之而来的应用不可维护的问题。这类问题在企业级 Web 应用中尤其常见。&lt;/p&gt;&lt;p&gt;本人在深入实践微前端之后，深感 qiankun 受制于前端架构的定位，无法使用 Nodejs 等能力快速解决快速发布，构建，管理的困境，因此在此基础上做了一定程度的 APAAS 探索，将本文的项目作为 APAAS 应用快速集成到其他业务系统。&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI2MjcxNTQ0Nw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/jQmwTIFl1V0dLQzNJW15CVaCoNjposvTpccciaj05o5nPiaqfLRRfTQiaYFYPN41Etrrqt8jPOWukPmJWt3lYxwuA/0?wx_fmt=png&quot; data-nickname=&quot;全栈修仙之路&quot; data-alias=&quot;FerRoad&quot; data-signature=&quot;专注分享 TS、Vue3、前端架构和源码解析等技术干货。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h1&gt;qiankun 介绍&lt;/h1&gt;&lt;p&gt;首先基于作者自己的思考，给大家梳理下 qiankun 微前端的渲染流程，方便不了解微前端的同学有个大体的认识。&lt;/p&gt;&lt;p&gt;假如你不了解微前端的话，对于这个新事物的学习和探索，一般是按照 5Ws 的学习规律来学习：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;Who is it about?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;What happened?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;When did it take place?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Where did it take place?&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Why did it happen?&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;本文也按照类似的方式一个具体的案例去梳理 qiankun 的核心概念。&lt;/p&gt;&lt;p&gt;本文有一个业务系统 A，希望集成业务系统 B 的&lt;em&gt;&lt;strong&gt;欢迎卡片配置&lt;/strong&gt;&lt;/em&gt;功能页面。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2416666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCt8pDve5VGBXX2z9X1nYX5qJETRZczMuooVWUGiaWfMLQ8KicXK0ibBZKG9JkXRicDJFKG8G1aTNice6lw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;480&quot;/&gt;&lt;/p&gt;&lt;p&gt;那么 who 包含 qiankun 客户端、主应用 A、微应用 B 三部分，三者协作完成了微前端的设计。从产品使用的角度来看，第一步则是注册路由，确定微前端启动的时机和启动渲染的内容（when 和 where）。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { registerMicroApps, start } &lt;span&gt;from&lt;/span&gt;&lt;span&gt;&#x27;qiankun&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;registerMicroApps([&lt;br/&gt;  {&lt;br/&gt;    &lt;span&gt;name&lt;/span&gt;: &lt;span&gt;&#x27;smart-contact-cms-index&#x27;&lt;/span&gt;, &lt;span&gt;// app name registered&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;entry&lt;/span&gt;: &lt;span&gt;&#x27;//localhost:7100&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;container&lt;/span&gt;: &lt;span&gt;&#x27;#yourContainer&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;activeRule&lt;/span&gt;: &lt;span&gt;&#x27;/yourActiveRule&#x27;&lt;/span&gt;,&lt;br/&gt;  },&lt;br/&gt;]);&lt;br/&gt;&lt;br/&gt;start();&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的实例十分简单，通过 name 来作为微应用 B 的唯一标识， entry 作为微应用 B 的资源加载地址。当路由映射到 &#x27;/yourActiveRule&#x27; 时，则请求微应用 B 的页面资源地址，解析其中的 JS 和 CSS 资源，将微应用 B 的页面渲染到 id 为 #yourContainer 的 DOM 节点。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; packageName = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;./package.json&#x27;&lt;/span&gt;).name;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;module&lt;/span&gt;.exports = {&lt;br/&gt;  &lt;span&gt;output&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;library&lt;/span&gt;: &lt;span&gt;`&lt;span&gt;${packageName}&lt;/span&gt;-[name]`&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;libraryTarget&lt;/span&gt;: &lt;span&gt;&#x27;umd&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;jsonpFunction&lt;/span&gt;: &lt;span&gt;`webpackJsonp_&lt;span&gt;${packageName}&lt;/span&gt;`&lt;/span&gt;,&lt;br/&gt;  },&lt;br/&gt;};&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面是一段微应用 webpack 的配置，library 就是注册路由时的唯一标识 name 了。这里也十分好理解为啥 qiankun 要在构建资源时给 js 增加标识。&lt;/p&gt;&lt;p&gt;qiankun 客户端 entry 配置的 HTML 页面资源的地址，拉取到页面资源之后劫持 HTML 解析，自行构建 Http 请求去加载 JS 文件。很明显页面中肯定不止一段 JS 代码，就需要标识来标识那一段的入口 JS 代码了。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3446054750402576&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCt8pDve5VGBXX2z9X1nYX5qFCdvVT3AQiaicfCkc5ShmXymcWwo6w7P7qJwqRjPDWYfxmAOEjfaCicEw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3726&quot;/&gt;&lt;/p&gt;&lt;p&gt;下面截取了 index.js 头部代码&lt;/p&gt;&lt;pre&gt;&lt;code&gt;!&lt;span&gt;&lt;span&gt;function&lt;/span&gt;(&lt;span&gt;e,t&lt;/span&gt;)&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;&quot;object&quot;&lt;/span&gt;==&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;exports&lt;/span&gt;&amp;amp;&amp;amp;&lt;span&gt;&quot;object&quot;&lt;/span&gt;==&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;module&lt;/span&gt;?&lt;span&gt;module&lt;/span&gt;.exports=t():&lt;span&gt;&quot;function&quot;&lt;/span&gt;==&lt;span&gt;typeof&lt;/span&gt; define&amp;amp;&amp;amp;define.amd?define([],t):&lt;span&gt;&quot;object&quot;&lt;/span&gt;==&lt;span&gt;typeof&lt;/span&gt;&lt;span&gt;exports&lt;/span&gt;?&lt;span&gt;exports&lt;/span&gt;[&lt;span&gt;&quot;smart-contact-cms-index&quot;&lt;/span&gt;]=t():e[&lt;span&gt;&quot;smart-contact-cms-index&quot;&lt;/span&gt;]=t()&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;仅仅修改微应用 B 的 webpack 是远远不够的，常规前端页面工程会在 index.js 文件中直接调用类似 ReactDOM.render API，直接去渲染到特定节点。那 qiankun 根本无法干预渲染过程，因此需要将渲染的实际交给 qiankun 客户端来控制，qiankun 受前端组件化的影响，也希望将页面做成一个暴露生命周期的组件，导出相关的生命周期钩子。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;// 单独 App 运行&lt;/span&gt;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (!isMicroApp) {&lt;br/&gt;  &lt;span&gt;// 非微前端渲染&lt;/span&gt;&lt;br/&gt;  renderApp({});&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 导出 qiankun 生命周期&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; bootstrap = &lt;span&gt;async&lt;/span&gt; () =&amp;gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&#x27;[smart-contact-cms] bootstrap&#x27;&lt;/span&gt;);&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; mount = &lt;span&gt;async&lt;/span&gt; (props: any) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&#x27;[smart-contact-cms] mount&#x27;&lt;/span&gt;, props);&lt;br/&gt;  normalizeObject(props.mainAppState);&lt;br/&gt;  &lt;span&gt;// 作为微应用运行&lt;/span&gt;&lt;br/&gt;  renderApp(props);&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export &lt;/span&gt;&lt;span&gt;const&lt;/span&gt; unmount = &lt;span&gt;async&lt;/span&gt; (props: any) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { container } = props;&lt;br/&gt;  ReactDOM.unmountComponentAtNode(container ? container.querySelector(&lt;span&gt;&#x27;#root&#x27;&lt;/span&gt;) : &lt;span&gt;document&lt;/span&gt;.querySelector(&lt;span&gt;&#x27;#root&#x27;&lt;/span&gt;));&lt;br/&gt;};&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;细心的同学会发现有个 isMicroApp 的变量可以控制启动微前端渲染还是独立 APP 渲染，这个实际是 qiankun 客户端启动后，会在 window 上挂在 &lt;em&gt;&lt;strong&gt;__POWERED_BY_QIANKUN__&lt;/strong&gt;&lt;/em&gt; 变量标识运行时环境。&lt;/p&gt;&lt;p&gt;这里还有个小细节就是微应用的 JS CSS 文件请求是属于 &lt;strong&gt;Ftech/XHR&lt;/strong&gt; 类型，说明 js 文件的请求是 qiankun 客户端自行构造的。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3445378151260504&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCt8pDve5VGBXX2z9X1nYX5q9VGFJR3ZJpy4EmVMKxhWU2wDje2VVhSJH1ib2vg1th5bOwD3Km124bQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3332&quot;/&gt;&lt;/p&gt;&lt;p&gt;至于为何要这么做？我的理解是为了实现微前端的沙箱功能。&lt;/p&gt;&lt;p&gt;qiankun 客户端干预 script 标签和 link 标签的加载过程的难度，和上面的方式相比明显是更简单的，但是这种方式很明显是缺乏安全性，特别是在面临第三方 SDK 加载的时候，例如微信 web SDK 的引入，就无法通过其安全校验，具体可以详细看下 &lt;strong&gt;FAQ 1&lt;/strong&gt; 的案例介绍。&lt;/p&gt;&lt;p&gt;一句话总结上述过程：&lt;/p&gt;&lt;p&gt;在 qiankun 的框架下，一个页面集成到另外一个页面系统中，最关键的核心点就是将微应用封装成具有生命周期的页面组件，使得 qiankun 可以调用 React 或者 Vue 的 render 能力，将页面渲染到对应的 DOM 节点。&lt;/p&gt;&lt;h1&gt;APAAS 架构介绍&lt;/h1&gt;&lt;p&gt;本文由于篇幅限制，只介绍 Client 端、Server 端的接口协议代理、微应用改造，其他部分更多是偏向于自动工程化和项目管理的方面，之后有时间给大家详细介绍下。&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5331230283911672&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCt8pDve5VGBXX2z9X1nYX5qSHz0kBAWNZichLLvokBKLVTQZySZ2JVq1whoqeonetQN2bnnHHGlojA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2853&quot;/&gt;&lt;/p&gt;&lt;h2&gt;Client 端&lt;/h2&gt;&lt;p&gt;Client 端是经过业务封装后的 qiankun SDK，内部集成了经过 qiankun 改造的各自子应用系统，对外暴露以下接口：&lt;/p&gt;&lt;h3&gt;1、initial(appInfo)&lt;/h3&gt;&lt;p&gt;appInfo 参数&lt;/p&gt;&lt;pre&gt;&lt;code&gt;{&lt;br/&gt;    &lt;span&gt;&quot;app_id&quot;&lt;/span&gt;: &lt;span&gt;&quot;xxx&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;prefetch&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;signUrl&quot;&lt;/span&gt;: &lt;span&gt;&quot;remote-url&quot;&lt;/span&gt;&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个接口主要是为了初始化部分信息，包括微应用的鉴权配置、是否启动预加载、微应用的标识。其中鉴权配置可能会让大家感到疑惑。&lt;/p&gt;&lt;p&gt;在介绍 qiankun 的渲染过程中提到&lt;/p&gt;&lt;p&gt;这里还有个小细节就是微应用的 JS CSS 文件请求是属于 &lt;strong&gt;Ftech/XHR&lt;/strong&gt; 类型，说明 js 文件的请求是 qiankun 客户端自行构造的。&lt;/p&gt;&lt;p&gt;这里必然要涉及前端的跨域问题，尤其是当主应用和微应用的域名不一致时，qiankun 客户端如何能够在跨域的限制之下获取到微应用的页面资源？本文的解决方案是主应用提供一个鉴权秘钥下发的接口 signUrl，这个接口由微应用提供也可以，将秘钥信息下发到 cookie 中，通过配置 qiankin 自定义 fetch 方法，带上这些鉴权信息。&lt;/p&gt;&lt;p&gt;本文只是其中一个解决方案，官方也提供了一些通用方案以供参考《&lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fqiankun.umijs.org%2Fzh%2Ffaq%23%25E5%25BE%25AE%25E5%25BA%2594%25E7%2594%25A8%25E9%259D%2599%25E6%2580%2581%25E8%25B5%2584%25E6%25BA%2590%25E4%25B8%2580%25E5%25AE%259A%25E8%25A6%2581%25E6%2594%25AF%25E6%258C%2581%25E8%25B7%25A8%25E5%259F%259F%25E5%2590%2597&amp;amp;title=%E5%BE%AE%E5%BA%94%E7%94%A8%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E4%B8%80%E5%AE%9A%E8%A6%81%E6%94%AF%E6%8C%81%E8%B7%A8%E5%9F%9F%E5%90%97&quot; href=&quot;&quot;&gt;微应用静态资源一定要支持跨域吗&lt;/a&gt;》。&lt;/p&gt;&lt;h3&gt;2、load (FloadConfig) 接口&lt;/h3&gt;&lt;p&gt;动态加载微应用，其 FloadConfig 参数如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;interface FLoadConfig {&lt;br/&gt;  &lt;span&gt;container&lt;/span&gt;: string;&lt;br/&gt;  pageId: string;&lt;br/&gt;  props?: FMicroProps; &lt;span&gt;// 传入对应微应用所需要的参数&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;interface FMicroProps {&lt;br/&gt;  loginUrl?: string, &lt;span&gt;// 登录的重定向地址&lt;/span&gt;&lt;br/&gt;  baseApiUrl?: string,&lt;br/&gt;  dispatch?: &lt;span&gt;(&lt;span&gt;value: { type: string; data: any }&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;span&gt;void&lt;/span&gt;,&lt;br/&gt;  pageInfo?: FPageConfig,&lt;br/&gt;  useNativeRoute?: number;&lt;br/&gt;  extra?: any,&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;loginUrl 是鉴权失败跳转的登录地址；baseApiUrl 是后台请求的地址；useNativeRoute 决定微前端采用何种路由方式加载。&lt;/p&gt;&lt;p&gt;本文在这个阶段主要做两方面的突破：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;解决了后台请求的跨域和鉴权&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;解决了主应用和子应用的 path 冲突问题&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;baseApiUrl 这里默认提供了基于腾讯云的鉴权下发能力，各个业务系统只需要按照规范去对接腾讯云 API 即可，比较远离前端，在这里不做过多解读。&lt;/p&gt;&lt;p&gt;在实际的业务场景中，主应用和微应用互相无法感知到对方，因此其路由有可能会互相冲突，这里通过 useNativeRoute 参数来控制微应用的路由模式。&lt;/p&gt;&lt;p&gt;1、useNativeRoute = 0 采用配置端数据返回的路由路径&lt;br/&gt;2、useNativeRoute = 1 采用当前页面 hash 前缀 + 配置端数据返回的路由路径作为新路由&lt;br/&gt;3、useNativeRoute = 3 采用当前的页面路由不做任何改动， 默认 0&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;底层的实现逻辑则是在 &lt;strong&gt;renderApp&lt;/strong&gt; 传入主应用的路由前缀，改造相对比较简单，但是很实用。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;export&lt;/span&gt;&lt;span&gt;const&lt;/span&gt; mount = &lt;span&gt;async&lt;/span&gt; (props: any) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&#x27;[smart-contact-cms] mount&#x27;&lt;/span&gt;, props);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// 删除不能序列化的内容&lt;/span&gt;&lt;br/&gt;  normalizeObject(props.mainAppState);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// 作为微应用运行&lt;/span&gt;&lt;br/&gt;  renderApp(props);&lt;br/&gt;};&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回 MicroApp 实例：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;mount(): Promise;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;unmount(): Promise;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;update(customProps: object): Promise;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;getStatus(): | &quot;NOT_LOADED&quot; | &quot;LOADING_SOURCE_CODE&quot; | &quot;NOT_BOOTSTRAPPED&quot; | &quot;BOOTSTRAPPING&quot; | &quot;NOT_MOUNTED&quot; | &quot;MOUNTING&quot; | &quot;MOUNTED&quot; | &quot;UPDATING&quot; | &quot;UNMOUNTING&quot; | &quot;UNLOADING&quot; | &quot;SKIP_BECAUSE_BROKEN&quot; | &quot;LOAD_ERROR&quot;;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;loadPromise: Promise;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;bootstrapPromise: Promise;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;mountPromise: Promise;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;unmountPromise: Promise;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;详情参考参考 &lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fqiankun.umijs.org%2Fzh%2Fapi&amp;amp;title=qiankun%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3&quot; href=&quot;&quot;&gt;qiankun 官方文档&lt;/a&gt;。&lt;/p&gt;&lt;h3&gt;3、subscribe(callback: (value: FMicroEvent) =&amp;gt; void): Unsubscribe&lt;/h3&gt;&lt;p&gt;监听主子应用的事件和数据，callback 函数 ({type: string; data: any}) =&amp;gt; { &lt;em&gt;处理程序&lt;/em&gt; }，目前通用返回加载完成事件 type: load，其他自定义事件由主子应用自行定义。&lt;/p&gt;&lt;p&gt;返回值：返回取消订阅的句柄。&lt;/p&gt;&lt;p&gt;其他接口在这里不做赘述了。&lt;/p&gt;&lt;h2&gt;Server 端的接口协议代理&lt;/h2&gt;&lt;p&gt;实现页面低成本接入是微前端的重要愿景之一，也是吸引大家持续探索的核心原因。&lt;br/&gt;理想业务场景下，一个被微应用改造之后的微应用集成到其他业务系统，应该无需关心后台接口，开箱即用。但是后台业务系统具有各自独立的鉴权、账户、业务逻辑，相互之间差异性极大，完全无法做到开箱即用。&lt;/p&gt;&lt;p&gt;传统的方式是主应用去主动接入微应用的后台系统，缺点很明显，主应用要了解微应用系统的后台逻辑，且每接入一个系统就要重复上述的工作，成本高且低效。&lt;/p&gt;&lt;p&gt;微前端脱胎于微应用，我们也希望微应用自己也实现微服务级别的逻辑自治，依托于腾讯云 API 托管，对外提供微应用自身的服务。这样的好处是主应用只需要要对接腾讯云生态，即可实现鉴权、账号转化、监控等能力。主应用和子应用只需要做一次，无需重复，缺点就是必须要依托于腾讯云生态。假如你的业务本身就是依托于微信、企业微信、腾讯云发展起来的，上述方式值得引入。&lt;/p&gt;&lt;h2&gt;微应用改造&lt;/h2&gt;&lt;p&gt;一个业务系统并不是一开始就有被集成的价值的，往往是在业务发展到一定程度，经过市场验证其价值之后，大家才会明确这个业务系统具有微应用改造的价值，这就导致一个窘迫的境地：你需要改造已经成型的项目，使其成为可快速接入的微应用。&lt;/p&gt;&lt;p&gt;qiankun 的微应用改造相对比较简单，一般在开启严格沙箱模式之后，微应用和主应用之间建立比较好的环境隔离，你并不需要太多的工作。&lt;/p&gt;&lt;p&gt;首先样式隔离，参考下面 &lt;strong&gt;FAQ 2、css 隔离&lt;/strong&gt; 章节的介绍。其核心的麻烦在于 qiankun 启动严格沙箱木事之后，会导致 dialog、Modal 等组件无法找到 body 节点，进而无法挂在到 DOM 中。&lt;/p&gt;&lt;p&gt;其次 JS 作用域隔离，这里主要是一些第三方库会在 window 上挂在单例实例，导致主应用和微应用之间单例配置相互覆盖，常见于日志上报、微信 SDK、QQ SDK 等第三方应用。解决方案分为两个方向:&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;假如主应用存在则沿用主应用的配置&lt;br/&gt;这种方式对主应用比较有利。以日志上报的配置为例，微应用的日志会上报到主应用空间下，那么主应用的日志监控会很完整。缺点则是微应用本身失去了这些监控信息。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;微应用对自身使用的单例进行隔离&lt;br/&gt;这种方式对微应用比较有利。以 Axios 的配置为例，子应用可以实现类似中台应用的效果，可以探知到微应用在不同的主应用中的实际使用场景和数据统计。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;本文采用的是第二种方式，假如主应用需要进行数据共享或者配置共享，可以通过主应用和微应用之间的参数和数据传递的方式来实现共享，微应用提供丰富的监听 hooks。&lt;/p&gt;&lt;h1&gt;FAQ&lt;/h1&gt;&lt;h2&gt;1、如何解决 第三方 SDK JS 文件加载失败问题&lt;/h2&gt;&lt;p&gt;微信和企业微信的 SDK 是不可以自行构建 Http 请求加载的，这是由于其安全策略导致的，且每次返回的内容有安全限制的改动，无法复用。&lt;br/&gt;因此必须要在 html 的 header 中引入，但 qiankun 会对 html header 所有 script link 资源构造请求链接，进而导致获取第三方 SD K 的请求报错，整个 qiankun 客户端加载微应用进程报错，无法加载出对应页面。&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3358108108108108&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCt8pDve5VGBXX2z9X1nYX5qHdOpAOV1icMaAt8hGt7A5g1SlViafRBQZ7T3xrQFWdLZ1RGnQDZw7Y6A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2960&quot;/&gt;&lt;/p&gt;&lt;p&gt;官网在常见问题给了三个解决方案：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;使用 getTemolate 过滤异常脚本；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用自定义 fetch 阻断 script 脚本；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;终极方案 - 修改 html 的 content-type&lt;span&gt;；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;前两种方案需要在乾坤渲染函数中增加一个对应的参数，这里面有个坑点，则是 &lt;strong&gt;prefetchApps&lt;/strong&gt; 不支持这些参数，因此一旦启用预加载函数，则会导致渲染函数的传入配置失效，因此需要关闭使用预加载函数。&lt;/p&gt;&lt;h2&gt;2、css 隔离&lt;/h2&gt;&lt;p&gt;微前端核心理念：解耦 / 技术栈无关，简单来说就是希望微应用之间，基站应用和微应用之间的技术栈可以互相隔离，从而各种定制自己的技术体系来实现开发效率和产品质量的最优化配置，这也是微前端的核心价值体现。&lt;/p&gt;&lt;p&gt;然而理想是丰满的，现实是骨感的。主流的沙箱模式是通过创建一个独立的作用域隔离作用域链，同时克隆全局变量来实现的，但是这种隔离 + 克隆方案并不完美，在复杂运行场景中，无论性能还是安全性都是难以保证的，特别是 CSS 的隔离。&lt;/p&gt;&lt;p&gt;本文基于乾坤的微前端架构，在此基础上做了一些查漏补缺的补充。&lt;/p&gt;&lt;p&gt;首先是基础页面的 CSS，采用的是成熟的 CSS module 方案，简单来说就是将 CSS 变成局部生效，每个 class 生成一个独一无二的名字。从最早的 Less、SASS，到后来的 PostCSS，再到最近的 CSS in JS，都是为了解决 CSS 全局生效带来的副作用。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;css: {&lt;br/&gt;  &lt;span&gt;loaderOptions&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;less&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;javascriptEnabled&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;modifyVars&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&#x27;@ant-prefix&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;industryAnt&#x27;&lt;/span&gt;, &lt;span&gt;// 前缀&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&#x27;primary-color&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;#0052d9&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&#x27;link-color&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;#0052d9&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&#x27;btn-primary-color&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;#ffffff&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&#x27;btn-danger-bg&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;#e34d59&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&#x27;disabled-color&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;rgba(15, 24, 41, .3);&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&#x27;btn-disable-bg&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;#eaedf2&#x27;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&#x27;text-color&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;#0F1829&#x27;&lt;/span&gt;,&lt;br/&gt;      },&lt;br/&gt;      &lt;span&gt;module&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;postcss&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;plugins&lt;/span&gt;: [&lt;br/&gt;        AddAntClass({ &lt;span&gt;prefix&lt;/span&gt;: &lt;span&gt;&#x27;industryAnt&#x27;&lt;/span&gt; })&lt;br/&gt;      ],&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考上面的配置，直接开启即可。&lt;/p&gt;&lt;p&gt;在前端开发过程中，我不可避免的会使用到各种前端的组件库，例如 antd、echarts，且都支持自定义主题配置，假如基站应用和微应用之间主题配置冲突了，就需要我们采用类似 CSS module 的方案，将各自应用的 CSS 应用范围控制在各自的组件控件内。&lt;/p&gt;&lt;p&gt;细心的同学已经发现，我上面的代码就包含了 antd 的类名定制的配置 - &lt;strong&gt;&#x27;@ant-prefix&#x27;: &#x27;xxxAnt&#x27;&lt;/strong&gt; ，给所有 antd 组件增加类名前缀。&lt;/p&gt;&lt;p&gt;你以为到这里就完美解决了吗？不，这才刚开始。回到我们的业务场景中去，很多页面的复用并不是一开始就设计好的，往往是产品中后期发现业务体系之间存在高度的复用性，你需要对老的项目进行改造使它支持微应用架构模式。经验丰富的你发现已有项目中，存在很多全局 class 样式，甚至全局地方类库的组件 class 样式，如果手动去调整，那绝对 boom 。&lt;/p&gt;&lt;p&gt;这里给大家提供一些工程化的方法。第三方类库的样式类名往往都是有通用类名前缀，这是我们能够解决这个问题的基本前提条件，我们在在 CSS 构建阶段对 css class 进行替换和调整。有兴趣的同学可以看下 less、 postcss 提供的插件机制，以下代码仅供参考。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; postcss = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;postcss&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;module&lt;/span&gt;.exports = postcss.plugin(&lt;span&gt;&#x27;postcss-add-css-prefix&#x27;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;function&lt;/span&gt;(&lt;span&gt;opts = {}&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; {&lt;br/&gt;    prefix = &lt;span&gt;&#x27;xxxAnt&#x27;&lt;/span&gt;&lt;br/&gt;  } = opts&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// 接收两个参数，第一个是每个css文件的ast，第二个参数中可获取转换结果相关信息(包括当前css文件相关信息)&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;plugin&lt;/span&gt;(&lt;span&gt;css, result&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (!prefix) &lt;span&gt;return&lt;/span&gt;; &lt;span&gt;// 没传入prefix，不执行下面的逻辑&lt;/span&gt;&lt;br/&gt;    css.walkRules(&lt;span&gt;&lt;span&gt;rule&lt;/span&gt; =&amp;gt;&lt;/span&gt; { &lt;span&gt;// 遍历当前ast所有rule节点&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;const&lt;/span&gt; {&lt;br/&gt;        selector&lt;br/&gt;      } = rule;&lt;br/&gt;      &lt;span&gt;// 只有当节点是ast根节点直属子节点时才添加前缀&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;// 简单做了容错处理，只要带有根选择器的都不添加前缀，本身带有前缀了也不添加&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;// 加了个flag，防止节点更新后重复执行该逻辑进入死循环&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (rule.parent.type === &lt;span&gt;&#x27;root&#x27;&lt;/span&gt; &amp;amp;&amp;amp; selector.indexOf(&lt;span&gt;&#x27;.ant-&#x27;&lt;/span&gt;) &amp;gt;= &lt;span&gt;0&lt;/span&gt; &amp;amp;&amp;amp; selector.indexOf(&lt;span&gt;`&lt;span&gt;${prefix}&lt;/span&gt;-`&lt;/span&gt;) &amp;lt; &lt;span&gt;0&lt;/span&gt; &amp;amp;&amp;amp; !rule.flag) {&lt;br/&gt;        rule.flag = &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;const&lt;/span&gt; clone = rule.clone();&lt;br/&gt;        clone.selector = selector.split(&lt;span&gt;&#x27; &#x27;&lt;/span&gt;).map(&lt;span&gt;&lt;span&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; item.replace(&lt;span&gt;&#x27;.ant-&#x27;&lt;/span&gt;, &lt;span&gt;`.&lt;span&gt;${prefix}&lt;/span&gt;-`&lt;/span&gt;)).join(&lt;span&gt;&#x27; &#x27;&lt;/span&gt;);&lt;br/&gt;        rule.replaceWith(clone)&lt;br/&gt;      }&lt;br/&gt;    })&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; plugin&lt;br/&gt;})&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;经过以上调整，样式终于隔离成功，微前端接入后展示完美，此时测试的反馈打破了你的幻想：confirm 的弹窗提示不显示了。经过排查发现 ant-prefix + css 插件的方案，无法对动态生成的组件样式进行调整，因此它的样式会丢失。&lt;br/&gt;最终在 Ant Design of React 官方的 FAQ 中找到了线索，&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2107168718320058&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCt8pDve5VGBXX2z9X1nYX5qJb8Z05zrt4VDWdEv01Smrh4Oc2l2B7h34pjF1HibdAXOrxylVhKyq2Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2762&quot;/&gt;&lt;/p&gt;&lt;p&gt;但是这个方案并不适用于本文使用 antdv 1.x 版本的微应用项目，不支持这些 API。在 3.x 版本 FAQ 中给了一个推荐方案。&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.32096635030198445&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCt8pDve5VGBXX2z9X1nYX5qgxelBjBbGibNXICLQsnXwVuBH2ofgaCIJdG7fGKmNXiaFzS3UiapeckpA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2318&quot;/&gt;&lt;br/&gt;这种方案是适用于 vue 3.x，对于 vue 2.x 的项目则需要使用 &quot;@vue/composition-api&quot; 来兼容 getCurrentInstance 等 API。经过实践发现本文的项目的 antv 的版本是 1.x 的，无法支持 appContext 参数，最终探索了最终的解决方案。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;this&lt;/span&gt;.$confirm({&lt;br/&gt;  &lt;span&gt;prefixCls&lt;/span&gt;: &lt;span&gt;`&lt;span&gt;${ANT_PREFIX}&lt;/span&gt;-modal`&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;title&lt;/span&gt;: &lt;span&gt;&#x27;正在上传，确定要停止吗？&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;cancelText&lt;/span&gt;: &lt;span&gt;&#x27;取消&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;cancelButtonProps&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;props&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;prefixCls&lt;/span&gt;: &lt;span&gt;`&lt;span&gt;${ANT_PREFIX}&lt;/span&gt;-btn`&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;okText&lt;/span&gt;: &lt;span&gt;&#x27;停止&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;centered&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;okButtonProps&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;props&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;type&lt;/span&gt;: &lt;span&gt;&#x27;danger&#x27;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;prefixCls&lt;/span&gt;: &lt;span&gt;`&lt;span&gt;${ANT_PREFIX}&lt;/span&gt;-btn`&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;  } &lt;span&gt;as&lt;/span&gt;&lt;span&gt;any&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;onOk&lt;/span&gt;: &lt;span&gt;() =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  },&lt;br/&gt;} &lt;span&gt;as&lt;/span&gt;&lt;span&gt;any&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;confirm 类型定义中并不包含 prefixCls，因此需要使用 as any 忽略其类型校验，实际会透传到底层 rc-dialog 组件中。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6385681293302541&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCt8pDve5VGBXX2z9X1nYX5qic0P08x1JHRRpMutDh8tIVVibhNXPmeWzS7aoxT839jEbmib3G5cOx5fA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1732&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;扫码查看 &lt;span&gt;&lt;strong&gt;轻松学 TypeScript&lt;/strong&gt;&lt;/span&gt; 系列视频教程&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jQmwTIFl1V0DdhYZrspnt0P0Y9lRYywOiaibuq2KGSGGeM20BkcxZ6XCY2HpkoTRf6UdwNdfl7SzZAcD6jy4ntUg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p&gt;（目前已更新&lt;strong&gt; 19 &lt;/strong&gt;期）&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>bb3eddf93f45640f0179d17201e7cdba</guid>
<title>揭秘得物客服IM全链路通信过程｜得物技术</title>
<link>https://toutiao.io/k/vxrqz27</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;blockquote&gt;&lt;span&gt;导读： 从用户角度我们看到的咨询客服的过程，是&lt;strong&gt;机器人&lt;/strong&gt;&lt;strong&gt; -&amp;gt; 转人工 -&amp;gt; 评价&lt;/strong&gt;。整个过程中&lt;strong&gt;人工会话是&lt;/strong&gt;&lt;strong&gt;IM&lt;/strong&gt;&lt;strong&gt;通信的核心&lt;/strong&gt;。对于整个客服体系在用户端触达人工会话前会经历哪些过程呢？客服人员又是怎样保证&lt;strong&gt;精准又快速地&lt;/strong&gt;匹配到用户解答用户的疑惑诉求，接下来一探究竟吧。&lt;/span&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;先来看下客服会话和对接系统的整体架构图，如下所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;435&quot; data-ratio=&quot;0.42110358180058083&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AAQtmjCc74DN4XWfPOib4o7RatB1WYqiaLbcHVTrNVMhL27lefyauETWB8SYJEdXicavichQqGrRjsNL3FUibFJ6L2Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1033&quot; data-width=&quot;1033&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;想要客服能够接线到用户，并且能准确的分配给指定的客服，我们开发了在线客服工作台，经过了服务时间设置，人机交互，进线分配，排队溢出会话流程设置一系列规则。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;1. 先从服务时间设置说起&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;1.1 得物客服服务时间&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;首先有：得物常规服务时间，只有在限制的服务区间内，可以进行人工会话咨询，超出常规服务时间的咨询可以进行机器人问答或者留言，人工客服上线后可以进行响应的解答。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;常规服务时间：&lt;/strong&gt;工作日和周末早上八点到次日凌晨&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;非常规服务时间：&lt;/strong&gt;当然除了常规时间还有特殊服务时间设置，比如双十一、618等大促期间的用户流量增加，订单量增加在某一个时间段内服务时间需要提前或者延长时进行特殊设置。符合特殊时间进线时间的情况也可以正常进线到人工客服。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;2. 分流规则&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;正如有网购经验进行过客服咨询的大家所知道的，想要咨询的问题有&lt;strong&gt;下单前&lt;/strong&gt;的疑问，&lt;strong&gt;下单后&lt;/strong&gt;的疑问，对&lt;strong&gt;物流进度&lt;/strong&gt;的疑问，对&lt;strong&gt;到货商品&lt;/strong&gt;尺码颜色等问题的咨询。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不仅这些，还有买不同的商品时候产生的针对性的问题比如：&lt;strong&gt;鞋类，化妆品，服装，包包手表，&lt;/strong&gt;&lt;strong&gt;3C&lt;/strong&gt;类等等。这些问题都需要专业的客服进行解答，那就不能随便分配一个客服去接线，所以&lt;strong&gt;在用户进线咨询之前要先进线分流规则的匹配&lt;/strong&gt;，这是一个复杂的逻辑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户有从不同渠道来的，从配置维度先按渠道做一个区分：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前得物的进线渠道有多个，包括得物App和小程序等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;举例说明：比如从得物App的商品详情页进线客服&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据&lt;strong&gt;渠道&lt;/strong&gt;（得物App）+&lt;strong&gt;来源&lt;/strong&gt;（商品详情）+&lt;strong&gt;分流维度&lt;/strong&gt; +&lt;strong&gt;分配方式&lt;/strong&gt; 可以分配到指定的客服组。（分流维度可以设置机器人优先规则）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;946&quot; data-ratio=&quot;0.6158854166666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AAQtmjCc74DN4XWfPOib4o7RatB1WYqiaLwZI6KTMlic3GH4bP6YpJ8AMI7SgM0pRPH0lAH3ZANX5iaAibKomicLYe0Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1536&quot; data-width=&quot;1536&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;3. 排队溢出规则&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如上所说符合了进线时间，又满足了渠道来源分配终于要进线到人工聊天了，但是来的稍微晚了一步，假设只有10个客服，每个客服的同时接线量是10，刚好你是第101个怎么办了。一不小心就触发了排队规则。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;3.1 排队流程&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;为了避免客服接线到已经离开等待的排队用户，首先要判断用户是否在客服页面，不在线的情况给用户push 排队即将结束的提示，在线的情况正常进入排队进线流程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;421&quot; data-ratio=&quot;0.3938260056127222&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AAQtmjCc74DN4XWfPOib4o7RatB1WYqiaLic3mOLLBNg57NI5aicjlBoxnVicibxpqjhuNn6jhfumWJU1WmuWrS9EPZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1069&quot; data-width=&quot;1069&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;App端排队进线示意图：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;760&quot; data-ratio=&quot;0.3721841332027424&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AAQtmjCc74DN4XWfPOib4o7RatB1WYqiaLvspKzB5iaQWRyRVjRVW584qCwE1IUxyeHicfEQLKYglXFlXzFQjlhIOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2042&quot; data-width=&quot;2042&quot;/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;3.2 溢出留言&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;客服业务高峰大量咨询排队的时候，会出现排队量不均衡，无法调控。为了确保各组排队量、用户等待时长均衡，通过溢出规则，合理调配人工客服资源。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;326&quot; data-ratio=&quot;0.3221343873517787&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AAQtmjCc74DN4XWfPOib4o7RatB1WYqiaLt6gFkgKM8taWBnx1fDPDyIa1lxGh8A2IFvzicKUoGiaKcL8gGqcD0ddw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1012&quot; data-width=&quot;1012&quot;/&gt;&lt;/p&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;3.3实时数据监控&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在监控大屏有监控数据保留排队人次，来回进出保留队列只计算一次，但是如果用户多次进线发生多次排队，则计算多次。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;实时数据：&lt;/strong&gt;为当日数据。根据所选客服组查看不同队列的保留排队人次&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据监控正在&lt;strong&gt;排队人数&lt;/strong&gt;和&lt;strong&gt;排队时长&lt;/strong&gt;判断用户行为和客服接线能力是否符合当前用户数量&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;612&quot; data-ratio=&quot;0.2608695652173913&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AAQtmjCc74DN4XWfPOib4o7RatB1WYqiaLF4DPaoJmg3vqpMJ1X7pa5UZnian3kBTVc2p3gs2lKgtrEcRRg2XOFww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2346&quot; data-width=&quot;2346&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;4. 进线人工客服&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;经过前面一系列的规则匹配进线分配，终于来到了人工会话，到了人工客服聊天的阶段，客户和我们的客服是怎么进行聊天交互的呢？用过得物App的且咨询过人工客服的同学应该都知道客户端的使用情况那么客服是怎么接线怎么跟用户沟通的呢？&lt;/span&gt;&lt;span&gt;前后我们开发了两代系统。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;4.1 在线客服系统&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个系统是IM客服系统的第一代系统，功能不仅包括在线聊天，聊天相关的配置用户管理都这里统一管理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;4.2 章鱼一站式工作台&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;也就是现在客服使用的一站式工作台。因为客服聊天不仅要准确快速，还有复杂的会话切换信息缓存等等 和配置相关放在一起会影响客服的使用，进而开发了章鱼一站式工作台，专供客服接线相关的功能使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;三栏布局的形式：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;左侧区域：&lt;/strong&gt;在线、离线、留言用户列表&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;4.2.1 数据的触达双端的过程&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据主要包括了普通文本消息、富文本、图片、视频、文件等等。&lt;strong&gt;保证消息能准确的实时的送达到客服和客户端长链接是一个不错的选择&lt;/strong&gt;&lt;strong&gt;，&lt;/strong&gt;这些数据&lt;strong&gt;先到后端-后端推给&lt;/strong&gt;&lt;strong&gt;网关&lt;/strong&gt;&lt;strong&gt;-网关通过长链推送到&lt;/strong&gt;&lt;strong&gt;章鱼工作台&lt;/strong&gt;，当前长链接可用的情况下，每一次请求都只是简单的数据发送和接受。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说到这里，大家可能会有疑问，&lt;strong&gt;如果发送消息过程中出现了&lt;/strong&gt;&lt;strong&gt;网络&lt;/strong&gt;&lt;strong&gt;抖动等问题导致问题无法触达怎么办？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前客服系统用的&lt;strong&gt;ACK三次重连&lt;/strong&gt;机制，在一定时间内如果没有收到网关的返回会进行重试，进行三次重连确保在有偶发的意外网络等状况时消息能够发送成功。同时为了避免持续重试，大面积重试造成网络堵塞三次尝试之后依然失败的会显示发送失败。消息不落库。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;4.2.2 &lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;坐席辅助能力SOP&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;SOP，是 &quot;Standard Operating Procedure&quot; 三个单词中首字母的大写 ，即标准作业程序，指将某一事件的标准操作步骤和要求以统一的格式描述出来，用于指导和规范日常的工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;针对聊天的过程，有很多重复的问题，客服是如何更快地去解决用户的问题？早期得物沉淀和完善了很多客服须知的知识文档，其中900+个问题是需要掌握的。为了提高客服侧服务效率，继而延伸出坐席辅助工具。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据聊天中信息内容自动匹配相应的知识内容，再由客服根据匹配内容决定否符合当前聊天场景，符合则发送给用户即可。把尽可能多的流程化、客服频繁关注的业务逻辑收纳到以sop为基础的“智能客服坐席助手”，提&lt;/span&gt;&lt;span&gt;供一个统一的一站式查询、决策、操作入口（工具），简化客服操作提高客服接待效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;5. 结束会话&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;5.1 会话过程有几个阶段&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-height=&quot;135&quot; data-ratio=&quot;0.17088607594936708&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AAQtmjCc74DN4XWfPOib4o7RatB1WYqiaLl1rkKY7pt7ra99K1R3c3dCYMJlw1KhXu8ALKduufN9p1C72vVBfsrQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;790&quot; data-width=&quot;790&quot;/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;5.2 会话关闭&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;会话关闭有几种途径&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;5.3 邀评&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结束会话前，客服可以发送邀评调研&lt;strong&gt;用户&lt;/strong&gt;&lt;strong&gt;满意度&lt;/strong&gt;，会话结束后如果没有进行过邀评的情况下，系统会自动推送邀评。在会话的阶段用户也可以主动发起评价对此次会话的满意度做一个反馈。&lt;strong&gt;为了不过度邀评，让用户&lt;/strong&gt;&lt;strong&gt;体验&lt;/strong&gt;&lt;strong&gt;降低，一个会话只有一次邀评机会&lt;/strong&gt;，不管用户有没有评价都不再推送邀评信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;6. 总结&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;客服的演进从开始的初始的平台到现在的成熟系统，在整个得物客服组成员的共同努力下，一步步的不断完善优化才有了在巨多会话量压力下，仍然稳定好用的系统。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上所述的是得物IM通信链路中的一些主要内容的概览，读到这里已经对客服的运作环境和流程有一个初步的了解。&lt;/span&gt;&lt;span&gt;除了这些内容以外还有很多细节的技术性的内容，欢迎留言交流讨论。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;*文&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;/Jun&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;span&gt; 关注得物技术，每周一三五晚18:30更新技术干货&lt;br/&gt;要是觉得文章对你有帮助的话，欢迎评论转发点赞～&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkxNTE3ODU0NA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/AAQtmjCc74DWvZPADM5XknnTibzgrxuvzvLtcjycF3pIbYqpsXSWwxz9QLfqbWCufybUH4agABGQlhkqfdI0pNw/0?wx_fmt=png&quot; data-nickname=&quot;得物技术&quot; data-alias=&quot;&quot; data-signature=&quot;技术知识分享交流平台，与你一同走向技术的云端。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;限时活动：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;即日起至6月30日&lt;/span&gt;&lt;span&gt;，公开转发得物技术任意一篇文章到朋友圈，就可以在「得物技术」公众号后台回复「得物」，参与得物文化衫抽奖。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AAQtmjCc74CP5Qgbpkw028FGeezjZeINpIg2VJ5O4VjdicnuO9dxvyxWmyM0jFaRO0FnskGCBvrmHicjvoQVQB7A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>