<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>44674d31ba7ba7e8ebbb67a5a40eadc6</guid>
<title>为什么程序员要学会作图？</title>
<link>https://toutiao.io/k/lr48ibz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;post-content yue&quot;&gt;
          &lt;p&gt;古语道，一图胜千言。如今则有，无图无真相。&lt;/p&gt;

&lt;p&gt;操作系统最开始是命令行，现在则是各种图形视窗。&lt;/p&gt;
&lt;p&gt;人们在2G时代聊天，到3G时代看图，到4G时代看视频。随着网速和带宽的不断提升，应用从文字进化到图片，再从单张图片进化到一连串图片组成的视频。&lt;/p&gt;
&lt;p&gt;随着技术的进步，种种应用的演化轨迹似乎印证着「一图胜千言」这个古老格言。为什么一图胜千言？图能给我们带来哪些好处？以下是我的一些思考。&lt;/p&gt;
&lt;h2 id=&quot;信息&quot;&gt;信息&lt;/h2&gt;
&lt;p&gt;先让我们来比一比图片和文字在电脑中的大小吧。&lt;/p&gt;
&lt;p&gt;关于图片，我们选择最简单的黑白图。图中每个像素只需要表达两种意义：黑与白。假设我们用0表示黑色，用1表示白色，这样我们只需要一个二进制位（比特）就能表示一个像素。&lt;/p&gt;
&lt;p&gt;一张256x256的黑白图大小就是256x256个比特，那么在相同大小下可以容纳多少文字呢？&lt;/p&gt;
&lt;p&gt;文字的编码有许多种，比如只针对英文的ASCII码只需要7个比特就能表达所有英文字母和数字。&lt;/p&gt;
&lt;p&gt;世界上还有汉字，日语，阿拉伯语等复杂文字。为了给世界上所有的文字编码，Unicode字符集被提出。&lt;/p&gt;
&lt;p&gt;然而Unicode并没有规定每个字符的编码格式，不同的编码格式对应着不同的大小。这里我们特意选一个最大的编码格式UTF-32来表示文字，UTF-32编码使用固定32个比特来表示单个字符。&lt;/p&gt;
&lt;p&gt;那么一张256x256的黑白图大约等于多少文字呢？&lt;/p&gt;
&lt;p class=&quot;katex-block&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mn&gt;256&lt;/mn&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mn&gt;256&lt;/mn&gt;&lt;/mrow&gt;&lt;mn&gt;32&lt;/mn&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;2048&lt;/mn&gt;&lt;mo&gt;&amp;gt;&lt;/mo&gt;&lt;mn&gt;1000&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\frac {256 \times 256} {32} = 2048 &amp;gt; 1000
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;/&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;/&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot;&gt;&lt;span&gt;&lt;span class=&quot;pstrut&quot;/&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;pstrut&quot;/&gt;&lt;span class=&quot;frac-line&quot;/&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;pstrut&quot;/&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;mspace&quot;/&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot;/&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot;/&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;/&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;mspace&quot;/&gt;&lt;span class=&quot;mrel&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot;/&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;可以看到，即便刻意缩小差距，在&lt;strong&gt;信息量的绝对大小&lt;/strong&gt;上，一张黑白小图也抵得过两千言。&lt;/p&gt;
&lt;h2 id=&quot;理解成本&quot;&gt;理解成本&lt;/h2&gt;
&lt;p&gt;既然图比文字的信息量要大，是不是意味着图片需要花更多时间才能理解呢？&lt;/p&gt;
&lt;p&gt;恰恰相反。&lt;/p&gt;
&lt;p&gt;你也许花了2分钟才阅读到这里（约700字）。然而只需要10秒，你就能看完下面那张图：空闲内存在7点左右达到顶峰，随后一直呈下降趋势。&lt;/p&gt;
&lt;figure data-type=&quot;image&quot; tabindex=&quot;1&quot;&gt;&lt;img src=&quot;https://wzw.pub/post-images/1624113748562.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/figure&gt;
&lt;p&gt;当然，缺乏了背景知识，你还是无法推断出这张图所表达的具体含义。&lt;/p&gt;
&lt;p&gt;这是我们游戏某台战斗服最近的空闲内存曲线图。&lt;/p&gt;
&lt;p&gt;在某天早晨7点，我们发布了一次战斗服更新，重启了十余个战斗进程，释放了一定内存，使空闲内存达到了顶峰。然而之后，空闲内存却不断变低，说明此次更新的战斗版本存在内存泄露。&lt;/p&gt;
&lt;p&gt;最终，在几天前的下午5点，我们又发布了一次战斗服更新。通过对空闲内存的曲线监控，我们一眼就可以看出，更新后的空闲内存非常平稳，没有出现剧烈的下降，这极大的增强了我们已成功解决内存泄露的信心。&lt;/p&gt;
&lt;figure data-type=&quot;image&quot; tabindex=&quot;2&quot;&gt;&lt;img src=&quot;https://wzw.pub/post-images/1624113760403.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/figure&gt;
&lt;p&gt;试想如果没有曲线，从数以万计的离散的空闲内存数据中，我们将很难发现它的变化轨迹。这样不仅会导致难以定位问题发生的时刻；另一方面，也难以确定问题是否真正得到解决。&lt;/p&gt;
&lt;h2 id=&quot;具象思考&quot;&gt;具象思考&lt;/h2&gt;
&lt;p&gt;为什么相对于文字来说，人更容易理解图片呢？&lt;/p&gt;
&lt;p&gt;也许这与进化有关。&lt;/p&gt;
&lt;p&gt;文字是人类的发明，语言需要通过后天习得，也需要通过后天不断的努力来建立和巩固连接。很久不用笔写字，你再下笔时就会忘记某个字该怎么写。&lt;/p&gt;
&lt;p&gt;跟动物一样，人天生就有视神经。在还不会说话的时候，我们通过眼睛观察一幅幅图片来感知这个世界，在头脑中形成具象。人脑的视神经系统非常发达，经过百万年的不断进化，处理图像的速度自然也变得飞快。&lt;/p&gt;
&lt;p&gt;另一方面，通过将行动&lt;strong&gt;具象化的思考&lt;/strong&gt;，有时候也能获得不亚于实际行动的锻炼效果。&lt;/p&gt;
&lt;p&gt;我在中学时听说过一个实验叫「脑内投篮」：一个心理学家将投篮水平差不多的学生随机分成以下三组：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A组为对照组，每天什么都不做；&lt;/li&gt;
&lt;li&gt;B组为实战组，坚持每天投篮；&lt;/li&gt;
&lt;li&gt;C组为脑内组，每天在脑海中想象投篮；如果投篮不中，则在想象中做出修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;20天后，进行投篮比赛；发现A组成绩最差，而B组和C组则在伯仲之间。&lt;/p&gt;
&lt;p&gt;我还想讲一个自己的小故事。&lt;/p&gt;
&lt;p&gt;在4年前，我还不会骑自行车。小学都是接送，中学一直住在教职工宿舍，加之我沉迷电子游戏，很宅。所以每次父亲想教我骑车，都被我拒绝了。因为我认为骑车对我来说毫无必要，而且我很怕摔跤。&lt;/p&gt;
&lt;p&gt;工作后，一般短距离我就走路，长距离就打车。随着时间推移，我始终觉得不会骑车是一种遗憾。每每走在大都市的街头，看着一辆辆自行车从身旁飞过，我都会想到在这个城市我居然还没骑过车，遗憾的情绪便油然而生。&lt;/p&gt;
&lt;p&gt;2016年，共享单车的浪潮开始在北京扩散开来。我觉得学习自行车的时机已到，必须要解决这个遗憾了。由于几乎什么东西都是自学，所以我也决定自学自行车。&lt;/p&gt;
&lt;p&gt;首先我进行了一次不成功的尝试，因为个头比小时候高，在即将摔跤前我用脚刹住了车。旁人的侧目，让我有点不自在。为了避免当众出丑，我决定后续先在脑海中练习找感觉。&lt;/p&gt;
&lt;p&gt;每天入睡前，我都会去想象自己在骑车，然后努力调节平衡。有一天做梦，我梦见了自己在骑自行车，找到了那种平衡的微妙感觉。&lt;/p&gt;
&lt;p&gt;于是，我再次鼓起勇气解锁了一辆摩拜。骑出数米，我便知道，我学会了骑车。&lt;/p&gt;
&lt;p&gt;相信热爱竞技游戏的人应该有过这种经历，就是看完高手的第一人称视角的比赛视频后，往往会发现在实战中自己也变强了。&lt;/p&gt;
&lt;p&gt;我想这可能是因为大脑通过想象，建立了图形化的，具象的连接，符合某种潜意识的工作机制。使得信息更容易被理解，也更容易被吸收，潜意识层面的消化最终将涌现出来，使得意识层面受益。&lt;/p&gt;
&lt;h2 id=&quot;抽象与教育&quot;&gt;抽象与教育&lt;/h2&gt;
&lt;p&gt;既然图形比文字好这么多，为什么文字还有存在的必要呢？&lt;/p&gt;
&lt;p&gt;首先，文字是一种符号，其本身也是一种图形。从广义的角度来说，文字也是图形的一个子集。&lt;/p&gt;
&lt;p&gt;其次，图形的信息量太大，往往需要一些文字的辅助说明，标出重点，才能便于人们理解。&lt;/p&gt;
&lt;p&gt;另外，除了视觉系统外，人类还有听觉系统。嘴巴说话也能传递信息，而且是一种1对N的广播模式。&lt;/p&gt;
&lt;p&gt;文字可以通过说者的声带振动进行编码，听者通过耳朵接收，并通过听觉神经解码。这种方式，不需要额外的媒介，只需要空气声音便能传播，它很方便传递信息。&lt;/p&gt;
&lt;p&gt;所以在我看来，无论是图形还是文字，都只是信息的一种抽象的封装。两者不可对立起来，而是应该统一起来，各取所长。在图文混合的情况下，往往更利于信息的传达和理解。&lt;/p&gt;
&lt;p&gt;抽象便于计算，便于协作，便于规模化，便于封装细节，但是不便于学习和理解。对于没有启蒙的小孩来说，直接教他们公式1+1=2，是不便于理解的；而教一个苹果加上另一个苹果等于两个苹果则有助于他们理解加法。&lt;/p&gt;
&lt;p&gt;遗憾的是，如今还是有很多书籍充斥着长篇的文字和公式，读起来味同嚼蜡。很多老师也只是照本宣科，有时候一张图就能说清楚的事情，非要啰嗦一大堆。这样的书本和课堂又怎么能让学生提起兴趣？&lt;/p&gt;
&lt;p&gt;本周的技术分享会上，出现了类似的场景。当有同学问到什么是锯齿，怎么抗锯齿时。主题分享者试图通过语言来解释，结果同学的疑惑便更多了。我随后在白板上画了一张图，一切就清晰了很多。&lt;/p&gt;
&lt;figure data-type=&quot;image&quot; tabindex=&quot;3&quot;&gt;&lt;img src=&quot;https://wzw.pub/post-images/1624113794209.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/figure&gt;
&lt;p&gt;想象在屏幕上画一条直线。&lt;/p&gt;
&lt;p&gt;屏幕是由一个像素矩阵组成的，最后绘制到屏幕上的直线，必然出现类似黑色区域的不平滑，而这个不平滑给人的感觉就是锯齿。&lt;/p&gt;
&lt;p&gt;至于怎么抗锯齿，最简单的做法就是增加采样的像素（拉高分辨率或采样率），使得锯齿看起来足够小，小到人眼识别不出来就行了。类似于正十七边形看起来跟圆一样，实际上不平滑，但是边多了，看起来就平滑了。&lt;/p&gt;
&lt;figure data-type=&quot;image&quot; tabindex=&quot;4&quot;&gt;&lt;img src=&quot;https://wzw.pub/post-images/1624113799859.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/figure&gt;
&lt;p&gt;3B1B是一个YouTube的数学视频播客，在B站也有同步。播客作者认为学习数学，建立起直观的印象是重要的。&lt;/p&gt;
&lt;p&gt;通过3B1B的几何图形演示，我加深了对线性代数和概率论的理解，这些知识又反哺到游戏算法中。比如旋转矩阵可以帮助计算碰撞，概率分布用于设计和验证抽奖的伪随机算法等等。&lt;/p&gt;
&lt;p&gt;我向很多人推荐过3B1B，在此我还要向你们推荐一次。如果中国的老师和科普作者能像3B1B那样，帮助人们建立起对复杂知识背后的直观感知，将会大大激发学生的学习兴趣和热情，教和学的过程也会变得非常有趣。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;p&gt;一图胜千言，胜在信息量，胜在容易理解，也胜在能记得更加牢靠。&lt;/p&gt;
&lt;p&gt;在信息爆炸的今天，数据如同海洋一般庞大，人们必须要借助图表来整合和理解数据。也只有通过可视化的方式，人们才能更好的理解数据。&lt;/p&gt;
&lt;p&gt;另一方面，将新知识具象化，以图形的方式理解和记忆能使知识更加巩固，甚至替代部分实战训练的效果。&lt;/p&gt;
&lt;p&gt;思维导图是一种工具，而我更喜欢用纸和笔，这些只是工具上的个人偏好选择而已，无关大局。最重要的事情还是要养成具象化的思考方式，以图形化的方式去展开，这对培养想象力也有很大的作用。&lt;/p&gt;
&lt;p&gt;一图胜千言，当你无法解释一件事情的时候，考虑用图；当你无法理解一件事情的时候，尝试把它画出来。&lt;/p&gt;

        &lt;/div&gt;

        
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6217b22243b6fb131e0f5defe4b370a5</guid>
<title>一文理解 Kafka 如何做到高吞吐</title>
<link>https://toutiao.io/k/hkxf0uy</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-source-line=&quot;1&quot;&gt;如果对Kafka不了解的话，可以先看这篇博客《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUyNzgyNzAwNg==&amp;amp;mid=2247484251&amp;amp;idx=1&amp;amp;sn=92d6b50c5987f4f80316313db05b56ff&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;一文快速了解Kafka&lt;/a&gt;》。&lt;/p&gt;&lt;p data-source-line=&quot;1&quot;&gt;其余有关Kakfa的文章如下：&lt;/p&gt;&lt;h2 data-source-line=&quot;3&quot;&gt;Kafka高吞吐量的原因&lt;/h2&gt;&lt;h3 data-source-line=&quot;5&quot;&gt;kafka高效文件存储设计特点&lt;/h3&gt;&lt;ol data-source-line=&quot;7&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;Kafka把topic中一个Parition大文件分成多个小文件segment，通过多个小文件segment，就容易定期清除或删除已经消费完的文件，减少磁盘占用。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;为了进一步的查询优化，Kafka默认为分段后的数据文件建立了索引文件，就是文件系统上的.index文件。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;索引文件通过稀疏存储，降低index文件元数据占用的空间大小。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-source-line=&quot;11&quot;&gt;&lt;img data-ratio=&quot;0.3501577287066246&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OqTAl3WTC7EjDBsFgO6g9eLIicPKQ4WyhpibPZtlnfBkXMEDFAPlo38WSwK9VPoiaXQHCYIGMODrYIgX8y9bMDJkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;634&quot;/&gt;&lt;/p&gt;&lt;blockquote data-source-line=&quot;13&quot;&gt;&lt;p&gt;每个Partition分为多个Segment，每个Segment有.log和.index两个文件。每个log文件记录具体的数据，每条消息都有一个递增的offset；Index文件是对log文件的索引。Consumer查找offset时使用的是二分法根据文件名去定位到Segment，然后解析msg，匹配到对应的offset的msg。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-source-line=&quot;15&quot;&gt;顺序写入&lt;/h3&gt;&lt;p data-source-line=&quot;17&quot;&gt;因为硬盘每次读写都会寻址和写入，其中寻址是一个耗时的操作。所以为了提高读写硬盘的速度，Kafka使用顺序I/O，来减少了寻址时间：收到消息后Kafka会把数据插入到文件末尾，每个消费者（Consumer）对每个Topic都有一个offset用来表示读取的进度。&lt;/p&gt;&lt;blockquote data-source-line=&quot;19&quot;&gt;&lt;p&gt;因为顺序写入的特性，所以Kafka是无法删除数据的，它会将所有数据都保留下来。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-source-line=&quot;21&quot;&gt;Page Cache&lt;/h3&gt;&lt;p data-source-line=&quot;23&quot;&gt;为了优化读写性能，Kafka使用操作系统缓存——Page Cache，而不是JVM空间内存。&lt;/p&gt;&lt;p data-source-line=&quot;25&quot;&gt;这样做的优势：&lt;/p&gt;&lt;ol data-source-line=&quot;27&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;避免Broker内存消耗。如果使用Java堆，Java对象的内存消耗会比较大；操作系统层面的缓存利用率会更高，因为存储的都是紧凑的字节结构而不是独立的对象。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;避免GC问题。随着JVM中数据不断增多，垃圾回收将会变得复杂与缓慢，使用Page Cache就不会存在GC问题。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;应用重启，系统缓存不会消失。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;通过操作系统的Page Cache，Kafka的读写操作基本上是基于内存的，读写速度得到了极大的提升。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-source-line=&quot;32&quot;&gt;&lt;p&gt;Page Cache配合mmap技术(直接内存映射)，实现了用户态和内核态对指定内存区域的共享。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7251131221719457&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OqTAl3WTC7EjDBsFgO6g9eLIicPKQ4Wyhzcldc27bjMyjL3dFDCcceAxOHHrzAJGfOlk1MpCtQ45DlN2EyzibqAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;884&quot;/&gt;&lt;/p&gt;&lt;h3 data-source-line=&quot;36&quot;&gt;零拷贝&lt;/h3&gt;&lt;p data-source-line=&quot;38&quot;&gt;kafka基于sendfile实现零拷贝，数据不需要在应用程序做业务处理，仅仅是从一个DMA设备传输到另一个DMA设备。此时数据只需要复制到内核态，用户态不需要复制数据，然后发送网卡。&lt;/p&gt;&lt;p data-source-line=&quot;40&quot;&gt;&lt;img data-ratio=&quot;0.7270668176670442&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OqTAl3WTC7EjDBsFgO6g9eLIicPKQ4WyhPwX956fFwE3053icuJqRxv5sgS8g3vGOCFZ5iaH1mwHB3U0VFTu9I1yQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;883&quot;/&gt;&lt;/p&gt;&lt;p data-source-line=&quot;42&quot;&gt;sendfile是Linux 2.1开始引入的，在Linux 2.4又做了一些优化：上图中磁盘页缓存中的数据，不需要复制到Socket缓冲区，而将数据的位置和长度信息存储到Socket缓冲区。实际数据是由DMA设备直接发送给对应的协议引擎，从而又减少了一次数据复制。&lt;/p&gt;&lt;blockquote data-source-line=&quot;44&quot;&gt;&lt;p&gt;零拷贝并不是Kafka特有的机制，而是一种操作系统的底层支持，在NIO和Netty中都有应用，可以查看博客《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUyNzgyNzAwNg==&amp;amp;mid=2247483933&amp;amp;idx=1&amp;amp;sn=d9776b9efe054b30523adbe60cb7524a&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;NIO效率高的原理之零拷贝与直接内存映射&lt;/a&gt;》与《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUyNzgyNzAwNg==&amp;amp;mid=2247483937&amp;amp;idx=1&amp;amp;sn=6edaa496d79c06c029720996f2c150eb&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;彻底搞懂Netty高性能之零拷贝&lt;/a&gt;》&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-source-line=&quot;46&quot;&gt;批量压缩&lt;/h3&gt;&lt;p data-source-line=&quot;48&quot;&gt;Kafka支持多种压缩协议(包括Gzip和Snappy压缩协议)，将消息进行批量压缩。&lt;/p&gt;&lt;blockquote data-source-line=&quot;50&quot;&gt;&lt;p&gt;效果与Nginx压缩类似，都是牺牲部分CPU性能换取IO吞吐量的提升。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-source-line=&quot;52&quot;&gt;批量发送&lt;/h3&gt;&lt;p data-source-line=&quot;54&quot;&gt;生产者发送多个消息到同一个分区的时候，为了减少网络带来的系能开销，kafka会对消息进行批量发送：&lt;/p&gt;&lt;blockquote data-source-line=&quot;59&quot;&gt;&lt;p&gt;上面两个参数条件，只要满足一个就会发送消息。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-source-line=&quot;61&quot;&gt;补充&lt;/h2&gt;&lt;h3 data-source-line=&quot;63&quot;&gt;消息写的过程&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.884393063583815&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OqTAl3WTC7EjDBsFgO6g9eLIicPKQ4WyhLG2AWzn2bcxJR3CbPoxXxfYrPSiaTW2hlA284SHy4SmtjLthcvsbbtw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;692&quot;/&gt;&lt;/p&gt;&lt;ol data-source-line=&quot;67&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;生产者发送批量压缩的数据到broker。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;broker通过直接内存映射，直接将数据写入Page Cache中。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;过一段时间之后，由os的线程异步将Page Cache数据刷入磁盘中。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-source-line=&quot;71&quot;&gt;消息读的过程&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.507411630558723&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OqTAl3WTC7EjDBsFgO6g9eLIicPKQ4WyhGKavqUaGBwE7wpC4OLIm2GfatYYvQ9BZ0NUcgM9IdQQ7j5KTIjZ9QQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;877&quot;/&gt;&lt;/p&gt;&lt;ol data-source-line=&quot;75&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;读取数据的时候，broker会先判断Page Cache中是否存在数据：存在就可以直接从Page Cache中消费，所以消费实时数据就会速度快很多。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;消费历史数据就需要将历史数据从磁盘重新加载到Page Cache。Page Cache在加载历史数据的时候，会将加载的数据块临近的其他数据块一起加载到Page Cache里去，这是一个预读过程，对于需要连续读取历史数据的，也是不小的性能优化。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9d02bc0d6981c8e07e53f60a52547094</guid>
<title>其实 Linux IO 模型没那么难</title>
<link>https://toutiao.io/k/ihp2ujh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6023138105567607&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AVWicyZuuClHia5fsicGvYC6pMQ1Mib3SZMniaNA7HUaoVdIqMRU4s1OsqlBhqtMpcHAd3UMcias4F8n8apxzq8sw1KQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1383&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;IO 其实就是 Input 和 Output，在操作系统中就对应数据流的输入与输出。这个数据流的两端，可以是文件，也可以是网络的一台主机。但无论是文件，还是网络主机，其传输都是类似的，我们今天就以源头为文件进行说明。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个文件要从磁盘到我们的内存，需要经过很复杂的操作。首先，需要将数据从硬件读取出来，然后放入操作系统内核缓冲区，之后再将数据拷贝到程序缓冲区，最后应用程序才能读取到这个文件。简单地说，无论什么 IO 模型，其读取过程总会经历下面两个阶段：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;等待数据到达内核缓冲区&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;从内核缓冲区拷贝数据到程序缓冲区&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而我们 Linux 根据这两个阶段的是否阻塞，分成了 5 个经典的 IO 的模型，分别是：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;阻塞 IO 模型&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;非阻塞 IO 模型&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;IO 复用模型&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;信号驱动 IO 模型&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;异步 IO 模型&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;阻塞 IO 模型&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阻塞 IO 称为 Blocking IO，简称 BIO。在阻塞 IO 模型中，当进程发起一个读取文件请求（recvfrom 系统调用）时，如果内核缓存区没有对应的数据，那么它不会立刻恢复，而是去读取磁盘数据，当数据读取完毕后，再返回给进程。此时，第一个阶段完成。在这个阶段进程是阻塞的，因为它要等待内核将数据读取到内核缓冲区。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而当进程收到内核的响应之后，进程再把数据从内核缓冲区复制到程序缓冲区，最后完成文件读取操作。此时，第二个阶段完成。在这个阶段进程也是阻塞的，因为它要将数据从内核缓冲区拷贝到程序缓冲区。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.55&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AVWicyZuuClHia5fsicGvYC6pMQ1Mib3SZMn864V6bXI7vdMH1Eyl4cHrrWj3IeOWUluG8BfAVmYsgRI9ib7jzZJGcw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简单地说：在阻塞 IO 模型里，从硬件到系统内核、从系统内核到程序空间，都是阻塞的。&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;非阻塞 IO 模型&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在非阻塞 IO 模型下，当一个请求发起读取文件请求（recvfrom）时，如果内核缓冲区没有数据，那么内核会读取文件数据。但此时请求并不会阻塞，而是返回一个错误信息（EWOULDBLOCK）告诉进程：数据暂时还没准备好，你待会儿再试试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是进程就不断地向内核重试，问：数据准备好了没有，数据准备好了没有……当内核准备好数据，进程就会收到对应消息，于是第一阶段就结束了。非阻塞 IO 中的非阻塞说的就是进程不会阻塞在这里，而是会不断重试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然说这样并没有太大用处，反而会使得 CPU 空转，但总比之前有了一点进步。在这个阶段进程并不是阻塞的。当进程得知内核准备好数据之后，其便会将数据从内核缓冲区拷贝到程序缓冲区。这个阶段与阻塞 I/O 模型是完全一样的，同样是会导致进程阻塞。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.546&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AVWicyZuuClHia5fsicGvYC6pMQ1Mib3SZMniaT8xR7o3CxjsNiaIaxObzSPKicrn0YX5XeV9C2Pl2tIpPJL5nnkoRRXg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简单地说：在非阻塞 IO 模型里，从硬件到系统内核、从系统内核到程序空间，同样都是阻塞的。但是其比阻塞 IO 争气了一点，并不是站在那里不动，好歹还跑了一下。虽然是在做无用功，但是好歹提高了一丢丢效率。&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;IO 复用模型&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;IO 复用之所以叫复用，是因为其能同时操作多个数据流。而前面的 阻塞 IO、非阻塞 IO 同一时间只能操作一个数据流。在 IO 复用模型中，进程监听多个数据流并阻塞，当任何一个数据流有数据之后，其便会收到内核的响应。此时，第一个阶段完成，在这个阶段进程其实是阻塞的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而当收到内核的响应后，进程便会将数据从内核缓冲区复制到程序缓冲区。这个阶段与上面两个模型一模一样，进程同样阻塞。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.526&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AVWicyZuuClHia5fsicGvYC6pMQ1Mib3SZMnLIeznfn97jLGnPz3J2hgfPx161QzibUlwnk5dGrPloTuUMTz60A8PVw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;简单地说：IO 复用模型在第二阶段与阻塞 IO 和非阻塞 IO 是完全一致的。但是在第一阶段上，其有效率上的巨大提升，其能同时轮询多个数据流，提高了效率。&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;信号驱动 IO 模型&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;信号驱动与前面几个模型的不同之处就在于信号这个词。信号驱动 IO 在第一阶段，即数据到达内核缓冲区之前，进程是不阻塞的，而是设置一个信号回调。当数据到达内核缓冲区之后，内核调用程序的回调。通过这种方式，信号驱动 IO 下的进程就可以不阻塞，可以去做其他事情了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而当进程收到信号，进程再将数据从内核缓冲区复制到程序缓冲区。这个过程与上面几个是完全一样的，同样也是阻塞的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.536&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AVWicyZuuClHia5fsicGvYC6pMQ1Mib3SZMnYT4Dxt0YFxHLwwsCFAia4eg4OiaWic45PaGOuwrmkicOdvciaHJbqlOn4cg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;信号驱动 IO 可以说是 IO 读取的一个里程碑，其真正实现了异步读取数据。信号驱动 IO 其二个阶段，与上面几个是一样的。但是其在第一个阶段做到了真正的异步。信号驱动 IO 在第一阶段，其去请求内核读取数据，这时候其不会阻塞，也不会去寻轮，而是设置一个信号回调。&lt;/strong&gt; 当数据完全拷贝到系统内核时，系统发出 SIGIO 信号，通知进程去进行第二阶段，将数据拷贝到程序缓冲区。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;异步 IO 模型&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;异步 IO 相比前面几个流程，真正做到了完全非阻塞。无论是在第一阶段，还是在第二阶段都是非阻塞。与信号驱动 IO 类似，异步 IO 模型通过信号回调的方式，在第一个阶段实现了进程的非阻塞。而当数据到达内核缓冲区之后，进程便会收到通知。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而当进程收到通知之后，进程再次将数据从内核缓冲区复制到进程缓冲区，但这时进程并不等待，而是同样设置一个信号回调。当复制完成后，进程收到通知，再进行相应的处理。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.536&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AVWicyZuuClHia5fsicGvYC6pMQ1Mib3SZMnO9qD6TvhgCHXr5o44kxRqBKZBMqzNQAWP9gCDAjOfJbNxAMkDYEbSg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;异步 IO 与信号驱动 IO 相比，做得更加彻底了！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;异步 IO 不仅仅是在第一阶段实现了信号回调，其也在第二阶段实现了信号回调，从而完全实现了异步 IO 操作。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们回顾一下这 5 种 IO 模型，按照其在两个阶段的特点区分：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;阻塞 IO 模型：硬件到系统内核，阻塞。系统内核到程序空间，阻塞。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;非阻塞 IO 模型：硬件到系统内核，轮询阻塞。系统内核到程序空间，阻塞。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;复用 IO 模型：硬件到系统内核，多流轮询阻塞。系统内核到程序空间，阻塞。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;信号驱动 IO 模型：硬件到系统内核，信号回调不阻塞。系统内核到程序空间，阻塞。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;异步 IO 模型：硬件到系统内核，信号回调不阻塞。系统内核到程序空间，信号回调不阻塞。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上面的 5 种 IO 模型，我们可以看出，真正实现异步非阻塞的只有异步 IO 这种模型，而其他四种都是同步性 IO。因为在第二阶段：从内核缓冲区复制到进程缓冲区的时候，不可能干其他事情。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，关于 Linux IO 模型的分享，今天就聊到这儿。&lt;span&gt;谢谢大家的阅读。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;em&gt;&lt;span&gt;如果文章对你有帮助，欢迎评论转发点赞三连，我们下次见~&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1b724a34ecda55c269680c410db10a93</guid>
<title>对勒索病毒的逆向分析</title>
<link>https://toutiao.io/k/xsna4uo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section mpa-paragraph-type=&quot;ignored&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxODkyODE0Mg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7UTRRQFR4CwawI4l5emtHzyT9ib2NUPksicjXcnRdko2mbaFwDBKMPg3k5YNzvpxgbOlJT7oOdMxvg/0?wx_fmt=png&quot; data-nickname=&quot;小道安全&quot; data-alias=&quot;kdsafety&quot; data-signature=&quot;以安全开发、逆向破解、黑客技术、病毒技术、灰黑产攻防为基础，兼论程序研发相关的技术点滴分享。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;&lt;span&gt;样本分析准备&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2222222222222223&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;基础知识：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;1.需要具备一定的开发能力&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;2.熟悉汇编语言&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;3.PE文件结构的掌握&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;工具使用：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;熟练掌握以下常用工具的功能，基于以下工具展开详细分析，可以对病毒样本进行一个详细流程和功能分析，从而分析还原出关键的病毒功能，及研究对应的对抗方案。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.3447368421052632&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9ib0nr3JbDOqTHibRicwQTZjmkNAV8XmVA0icVlSuxCmdFkDrBghxkexCeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;760&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;&lt;span&gt;样本分析流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.6133942161339422&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9XBBxiaMnFD1ZCuvp0xSdjtNToAZtXRAAgniciaWSCfQjay1yt26D8DOvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;657&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;对一个病毒样本或者软件详细分析，一般可以通过五个步骤进行分析样本功能：样本基本属性、样本结构、样本静态分析、样本功能行为监控、样本动态分析。基于以上的五个步骤基本上可以分析出详细的样本功能实现。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;&lt;span&gt;样本基本信息&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;通过&lt;/span&gt;&lt;span&gt;PEID、ExeInfoPE&lt;/span&gt;&lt;span&gt;工具分析出样本的几个基本属性。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;通过&lt;/span&gt;&lt;span&gt;Hasher&lt;/span&gt;&lt;span&gt;工具可以分析出样本的MD5、sha1、CRC32的属性值。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;PEID、ExeInfoPE两个工具原理：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;通过解析PE文件结构解析出样本的区段信息、通过&lt;/span&gt;&lt;span&gt;匹配征码方式&lt;/span&gt;&lt;span&gt;匹配出样本是否加壳、加什么壳，样本开发语言和开发工具。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.49554140127388535&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9iabtfJ8gaV7Ir5RHdV6XrVWfM5WzzTibnayWlEYAPuNhTsYpQngzn6rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;785&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.6492146596858639&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9ZFRmSSJeEGoxqxsDbeudYgB5icpRW5jVHiaqgaMvFZCGt9ib56S3LkIKg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;573&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;&lt;span&gt;样本功能分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;病毒样本功能可以从几个维度分析：自启动(服务器，注册表)、释放文件、网络通信、加密解密&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;主要通过&lt;/span&gt;&lt;span&gt;静态IDA分析和动态ollydbg分析&lt;/span&gt;&lt;span&gt;相结合，通过IDA分析出样本中的流程结构（也重点关注下导入表信息，字符串信息），然后再针对每个函数进行分析，函数中的参数传递和返回值信息通过ollydbg工具附加下断点进行动态调试分析。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;以下流程图是整个病毒样本的功能流程，主要就是进行系统服务操作，利用微软的&lt;/span&gt;&lt;span&gt;SMB漏洞进行445端口&lt;/span&gt;&lt;span&gt;漏洞的尝试、释放真正的勒索病毒样本。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.915129151291513&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9kgdbFSG3WRqY9Ddj2qzo2djJgNRMovYVibkrNyBzBN5KnOXCDfch7YA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;542&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;样本在IDA工具中的main函数的流程结构&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.390595009596929&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9bnJXfHibpQQdMzL4WhVibI09Hl6hrrbPvCia1nDl6YhSgicecVRezXZBBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1042&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;样本入口函数的关键功能函数实现的解析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.5775147928994083&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9SFXOUXbdHUnTsEiaXBpkM6MRO2Xs5ZjqbPhQVeUAKq4Vz8jbNeaaw0Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;845&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;恶意代码功能解析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.6097560975609756&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9WfuDtKJInYIHynGfL1dOiao4s0yNhKQoaA7f6edDBpCxoGl4FpgmdXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;779&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;开始对445端口漏洞尝试功能解析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.5597014925373134&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9nNicnVTZjO2LnBlCh3wVKETkMOyiayWc25cdEfFC3uf8CVUKX3aayTfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;804&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;进行内网445端口漏洞尝试功能实现解析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.6857562408223201&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9sRmVIia88746lSmkZzflxpibTE0VVTUibqscOIO6w6kv2URPtZTYjPDqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;681&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;进行外网445端口漏洞尝试功能实现解析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.8132295719844358&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9Aw8Xen0MicQTdX7JEbRUiaAicr5PJpLibv1qGoSWClxibpJhGbsog6Dl3vw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;771&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;漏洞尝试的效果展示&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.3185437997724687&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9lfzpxiboIr8FqZVCN7FqGAfj3wPYS3adiakWwKFU4ZngBRrljgg92OOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;879&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;释放真正的勒索病毒文件&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;通过从应用程序的资源部分进行释放出病毒样本exe和dll模块，并将样本的exe和dll模块释放到C盘的windows目录下，以伪装成为系统程序。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.8604651162790697&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9XYefticPMypKErZtLCgGHjryMzeRcGz69V4gUU56iam3aMtDlf1EP92g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;774&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;释放样本文件效果展示&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;通过&lt;/span&gt;&lt;span&gt;procmon&lt;/span&gt;&lt;span&gt;工具，并进行针对病毒样本进程进行监控，可以实际监控到样本释放文件的操作。&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.45050761421319796&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9YIkCibSh6bMY3Y2KCmNqg36vTwja8WnYmuoSNiaPE2dD5I4n1Bv8bfZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;788&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;span&gt;&lt;strong&gt;释放勒索病毒功能梳理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.5623529411764706&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9sRr3XjXxxlyWENHZHQWS36fT2MEKmsQyqiagQudDVb0OoMBuVeQxLibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;850&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;释放出来的样本在IDA中展示main函数的流程结构（直接用拖入方式即可）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.4532488114104596&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9RuIH6cadoKshxmVUnEsgUDPvVwl2yibtX86DibOVS1lvKRja6V2F6GHA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;631&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;样本main函数流程中的关键函数进行解析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.7502799552071668&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9SWuS6wemM0X4QpLq8d9QMFnrZ0wmY0Pe3ibiakR7gsicGibiaZ9sW6LY1XQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;893&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;样本中将比特币账号采用硬编码方式直接写在代码中&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.4932975871313673&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9ia1blJFng5YXvuBDmElJM04nEGDxwrWe5yPDUEl6YIZmjPRdn8t95kw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;746&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;采用微软的加解密算法，通过调用系统CryptDecrypt和CryptDecrypt函数用于进行加解密ZIP文件。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.42071611253196933&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g92f9kwgy11iaVicorzKnPGVibvw6L5bibuNibiaOpfuic23f609tgaMEePSG6Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;782&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;动态释放模块进行判断释放出来的文件是否是标准PE文件（判断PE文件的DOS头部分“MZ”，在进行判断NT头的PE签名信息“PE”）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.7410256410256411&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9CTTRGNzABxOzZ99kD1ClXu8VibpAV093KD2c5ZP5UicvFstiazOuDo9nA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;780&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;&lt;strong&gt;勒索病毒对以下所有后缀文件进行加密，这些后缀文件基本覆盖所有类型的文件。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;image&quot;&gt;&lt;img data-ratio=&quot;0.18704156479217604&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jVCRndy8Lr7YjoOpg10aibIIibC6KhY1g9XL5okPXodAVsicIw6rOib7Jn94ozicw7famQlib2e6Y3icFMD89mg5mxD8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;818&quot;/&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;span&gt;（仅分享样本大概功能流程，还有如核心的加解密算法相关的功能没有进行分析）&lt;/span&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;title&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/My1Gumia3SKLeW5YKmZRUj1DicOJWicDUhqMc122V9S8icg9o3WlJxW962Q63Qp26ickjDaDMCCvFZgCc5Gvt1DibBLA/640&quot; data-ratio=&quot;1.375&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;&lt;span&gt;对勒索病毒的一点思考&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/N5gGFPMEm3B6B4eKDcfNt5VFLvBOq8S7oicKicuouHJxltjKNXAiaZs9SYym7mgmx7gkBnKyD2eibkaRJYwoBHwKDw/640&quot; data-ratio=&quot;1.2222222222222223&quot; data-w=&quot;18&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hMjlYNLvPyRpUl2m3A1sdiawdLBktzcYbRjdeeXvJtOWbehuJxMOEUK9zxqK8c0PkoxZAVxv4B7PicGMo6sC3OcQ/640&quot; data-w=&quot;16&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xicQVVic8TfFvDuZ1oRzgNicaicaRIsA1tE7Csu27FgSnBGgnbZNKdMLVbIwayvdMTA1Is6V3kp0SK7EDGjznOibzeQ/640&quot; data-ratio=&quot;1&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;1.预防中病毒通用方案&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;section mpa-paragraph-type=&quot;body&quot;&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在系统上安装病毒查杀软件并及时更新病毒特征库并定时查杀（建议安装火绒）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;从互联网上下载的文件、程序进行查看数字签名有效性，并手动扫描查询文件。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用移动存储介质时，进行查杀病毒后再进行打开。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;不随意打开、安装陌生或来路不明的软件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;2.分析勒索病毒&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;section mpa-paragraph-type=&quot;body&quot;&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;断网的虚拟机环境&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;PE文件解析工具进行静态PE文件分析。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;IDA静态流程和ollydbg动态流程分析。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;strong&gt;&lt;span&gt;3.勒索病毒预防解决方案&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;section mpa-paragraph-type=&quot;body&quot;&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;主动关闭系统中135、137、139、445端口。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;创建一个互斥体名称为Global\\MsWinZonesCacheCounterMutexA,让勒索病毒程序 启动不起来（仅功能的对抗思路）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;及时更新系统补丁程序。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;定期备份重要的数据在不同位置（网盘、移动硬盘）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;/p&gt;&lt;p mpa-paragraph-type=&quot;body&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.8115942028985508&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lnFIXIfFsT6oH2yzXuiby1ZZX9rtqKHpSwct1EwMpJ5P8tIJFWR2Lwg08BicSWoyJIdBibs23tSPAicLg0zt7hrkibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;138&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;End&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.9&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D1XGIISrRhKQksamIGXRxFbSQuNUWamJYEUwU8KjhNprqa8STuc02vIUak808dBS7Fiao4hg6FS876bicD3uJPgQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;40&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.9&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hib5mZ2t0cdTmGAgkySPqAr20oBpFicUtQaleTGbgBdnvlIjH1SRficZ0YseibXwjTN5qd6npxn5QvTVN35MV9v86w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;40&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;点个&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.0625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/t3ZJ9oCd1YcJavCa7NoYkIDPhAtHQg5pOlFhHYic59ia9ic2gQGkZFHurrA63iaQeCbCHjial8ZW4XEd1HhOLZj3btQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;32&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;在看&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;你最好看&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>dea776080c96b9604ff0993413e56b4c</guid>
<title>ClickHouse 安装与部署</title>
<link>https://toutiao.io/k/xti66el</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.562962962962963&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6LrrYenhZVnA3upAl8steFSDBYfSb2urVOEIccowts0MfpyvDibF0Yb5ylwfNDX5VwWmQp0ZtOPnXmIQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;CentOS 8.3 64位 &lt;br/&gt;ClickHouse 21.6.5.37&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;1. 系统要求&lt;/h3&gt;&lt;p&gt;ClickHouse 可以在任何具有 x86_64、AArch64 或 PowerPC64LE CPU 架构的 Linux、FreeBSD 或 Mac OS X 上运行。官方预构建的二进制文件通常针对 x86_64 进行编译并利用 SSE 4.2 指令集。如下命令检查当前 CPU 是否支持 SSE 4.2：&lt;/p&gt;&lt;pre&gt;&lt;span&gt;grep -q sse4_2 /proc/cpuinfo &amp;amp;&amp;amp; echo &quot;SSE 4.2 supported&quot; || echo &quot;SSE 4.2 not supported&quot;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果支持会输出 SSE 4.2 supported 信息。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;要在不支持 SSE 4.2 或不具有 AArch64、PowerPC64LE 架构的处理器上运行 ClickHouse，需要编译源代码构建 ClickHouse。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;2. 安装&lt;/h3&gt;&lt;h4&gt;2.1 使用 RPM 包&lt;/h4&gt;&lt;blockquote&gt;&lt;p&gt;我们的系统是 CentOS，所以在这使用 RPM 包方式安装 ClickHouse&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;对于 CentOS、RedHat 和所有其他基于 rpm 的 Linux 发行版，建议使用官方预编译的 rpm 包。首先，您需要添加官方存储库：&lt;/p&gt;&lt;pre&gt;&lt;span&gt;sudo yum install yum-utils&lt;/span&gt;&lt;br/&gt;&lt;span&gt;sudo rpm --import https://repo.clickhouse.tech/CLICKHOUSE-KEY.GPG&lt;/span&gt;&lt;br/&gt;&lt;span&gt;sudo yum-config-manager --add-repo https://repo.clickhouse.tech/rpm/stable/x86_64&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;然后运行如下命令来安装软件包：&lt;/p&gt;&lt;figure&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;&lt;span&gt;sudo yum install clickhouse-server clickhouse-client&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4078125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6LrrYenhZVnA3upAl8steFSDBHRteiasuFNcVaFYVF0fJsMfoUbgoIcpia6E90BjEO0osL6fIcNhaul8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们还可以从这里手动下载和安装软件包。&lt;/p&gt;&lt;p&gt;除此之外，还可以通过使用DEB包、Tgz包以及Docker镜像的方式安装。下面还会简单介绍如何使用DEB包、Tgz包进行安装。&lt;/p&gt;&lt;h4&gt;2.2 使用DEB包&lt;/h4&gt;&lt;p&gt;Debian 或 Ubuntu 系统建议使用官方预编译的 deb 包进行安装。运行这些命令来安装软件包：&lt;/p&gt;&lt;pre&gt;&lt;span&gt;sudo apt-get install apt-transport-https ca-certificates dirmngr&lt;/span&gt;&lt;br/&gt;&lt;span&gt;sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E0C56BD4&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;echo &quot;deb https://repo.clickhouse.tech/deb/stable/ main/&quot; | sudo tee \&lt;/span&gt;&lt;br/&gt;&lt;span&gt;    /etc/apt/sources.list.d/clickhouse.list&lt;/span&gt;&lt;br/&gt;&lt;span&gt;sudo apt-get update&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;sudo apt-get install -y clickhouse-server clickhouse-client&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;sudo service clickhouse-server start&lt;/span&gt;&lt;br/&gt;&lt;span&gt;clickhouse-client&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果您想使用最新版本，请将 stable 替换为 testing（适合测试环境）。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;我们还可以从这里手动下载和安装软件包。&lt;/p&gt;&lt;h4&gt;2.3 使用Tgz包&lt;/h4&gt;&lt;p&gt;对于无法安装 deb 或 rpm 软件包的所有 Linux 发行版，建议使用官方预编译的 tgz 包。可以使用 curl 或 wget 从存储仓库下载所需的版本。最新版本示例：&lt;/p&gt;&lt;pre&gt;&lt;span&gt;export LATEST_VERSION=`curl https://api.github.com/repos/ClickHouse/ClickHouse/tags 2&amp;gt;/dev/null | grep -Eo &#x27;[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+&#x27; | head -n 1`&lt;/span&gt;&lt;br/&gt;&lt;span&gt;curl -O https://repo.clickhouse.tech/tgz/clickhouse-common-static-$LATEST_VERSION.tgz&lt;/span&gt;&lt;br/&gt;&lt;span&gt;curl -O https://repo.clickhouse.tech/tgz/clickhouse-common-static-dbg-$LATEST_VERSION.tgz&lt;/span&gt;&lt;br/&gt;&lt;span&gt;curl -O https://repo.clickhouse.tech/tgz/clickhouse-server-$LATEST_VERSION.tgz&lt;/span&gt;&lt;br/&gt;&lt;span&gt;curl -O https://repo.clickhouse.tech/tgz/clickhouse-client-$LATEST_VERSION.tgz&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;tar -xzvf clickhouse-common-static-$LATEST_VERSION.tgz&lt;/span&gt;&lt;br/&gt;&lt;span&gt;sudo clickhouse-common-static-$LATEST_VERSION/install/doinst.sh&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;tar -xzvf clickhouse-common-static-dbg-$LATEST_VERSION.tgz&lt;/span&gt;&lt;br/&gt;&lt;span&gt;sudo clickhouse-common-static-dbg-$LATEST_VERSION/install/doinst.sh&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;tar -xzvf clickhouse-server-$LATEST_VERSION.tgz&lt;/span&gt;&lt;br/&gt;&lt;span&gt;sudo clickhouse-server-$LATEST_VERSION/install/doinst.sh&lt;/span&gt;&lt;br/&gt;&lt;span&gt;sudo /etc/init.d/clickhouse-server start&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;br/&gt;&lt;span&gt;tar -xzvf clickhouse-client-$LATEST_VERSION.tgz&lt;/span&gt;&lt;br/&gt;&lt;span&gt;sudo clickhouse-client-$LATEST_VERSION/install/doinst.sh&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;3. 启动&lt;/h3&gt;&lt;p&gt;有两种方式可以启动 ClickHouse，一种使用 service 方式启动，一种使用 systemctl 方式启动。如下使用 service 方式以守护进程方式启动：&lt;/p&gt;&lt;figure&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;&lt;span&gt;sudo service clickhouse-server start&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;&lt;p&gt;如果您没有 service 命令，可以运行 sudo /etc/init.d/clickhouse-server start 命令。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.23920265780730898&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6LrrYenhZVnA3upAl8steFSDBZ8x39uHrm4tMYZlSlMfTOiaKoBuicw1VnK49Bny1xv6dH9p5WGgVP2RA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;602&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;若 service 启动过程报 Init script is already running 错误，运行 clickhouse-client 命令报 Connection refused 错误，则使用 systemctl 方式启动：&lt;/p&gt;&lt;figure&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;&lt;span&gt;sudo systemctl start clickhouse-server&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.24522292993630573&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6LrrYenhZVnA3upAl8steFSDBTqxwt2ghxBmkTQ1vQ7ibaTHVciajRs5rMVacoImb3ofIXKokmSnLdsWw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1256&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;可以使用 sudo systemctl stop clickhouse-server 命令停止服务。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;通过上图我们可以看出在 /var/log/clickhouse-server/ 目录下查看日志。&lt;/p&gt;&lt;p&gt;此外，我们还可以从控制台手动启动服务器：&lt;/p&gt;&lt;pre&gt;&lt;span&gt;sudo -u clickhouse  clickhouse-server --config-file=/etc/clickhouse-server/config.xml&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在这种情况下，日志会打印到控制台，方便开发时使用：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.33359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6LrrYenhZVnA3upAl8steFSDBzVdpNKIZBibmN76QjbwmqwO2EbmUPnoPdibTJZ5qguic5yrmZgG1c8zrA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果配置文件在当前目录下，则不需要指定 –config-file 参数。默认情况下，使用 ./config.xml。ClickHouse 支持访问限制设置，可以修改 users.xml 文件。默认情况下，允许默认用户从任何地方访问，无需密码。&lt;/p&gt;&lt;h3&gt;4. 运行&lt;/h3&gt;&lt;p&gt;启动服务器后，我们可以使用命令行客户端连接到它：&lt;/p&gt;&lt;figure/&gt;&lt;p&gt;默认情况下，表示用户默认连接到 localhost:9000，无需密码。还可用于使用 –host 参数连接到远程服务器。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.44869565217391305&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6LrrYenhZVnA3upAl8steFSDBHJJbH0oe5AtZAppTncmGJaoUHI1eicica6ia4mnnVAkKVGyYdpLp33BsQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;575&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;欢迎关注我的公众号和博客：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.595&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nKovjAe6LrqPP36RWGmwXAHAUPcg48ibQzRb82UubkaEj0K8CANwdefia4cJZK3B0jiavicU35I08Z8lbgeFzibJofw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;原文:Installation&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>