<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>37310a8bdeb7366d21062ea487fb508d</guid>
<title>工作中沟通的 4 点感悟</title>
<link>https://toutiao.io/k/tsqw03z</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;在技术领域，大家在致力于从具体的技术中跳出来，升维为模式。而模式是解决方案，满足锤子定律，只有遇到特定问题时才被需要。而沟通则是基本功，在工作中时时刻刻都需要。一个人的沟通能力本质上体现的是人的认知能力。&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;调整切入问题的角度&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;看《庆余年》的时候，有个场景是有现代人思维的范闲身处另外一个古代世界。他与人斗诗，就写出了诗圣杜甫的《登高》。这也是目前他唯一的诗作。大文豪庄墨韩诬陷范闲抄袭自己老师的作品。并把他老师的作品拿了出来。范闲问了他老师是否姓杜，&lt;span&gt;庄墨韩&lt;/span&gt;说不是。我看到这里的时候就在想：看电视的都知道&lt;span&gt;庄墨韩&lt;/span&gt;老师不是杜甫，那他就是诬陷了。单他老师死了很久了，庄墨韩自己临摹他老师的笔迹死无对证啊。人家&lt;span&gt;庄墨韩&lt;/span&gt;名声在那里，人家信啊。这可怎么自证清白。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;范闲当时的做法是没有就此事论此事，而是一下子吟诵了一百多首千古绝唱。结果诬陷不攻自破。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里面的逻辑可以这么来理解：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Q&lt;span&gt;：&lt;/span&gt;范闲可否直接证明自己没有抄袭？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A：证明难度太大，没有时间收集证据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Q&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;那换个角度，为什么庄墨韩诬陷范闲有很大的说服力？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;因为庄墨韩才德名声在外，而范闲只有一首作品，自己的能力证明不足。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Q&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;怎么来证明范闲的能力？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;A&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;多出几个绝世的作品，体现出与诬陷抄袭的作品同样的水准。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;通过这种转换切入问题角度的方式，范闲自证了清白。而在工作中，这个方法也是经常需要用的。在回答别人的问题，没有办法正面回答的时候就要想想问题背后的本质是什么问题。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;举个例子，比如一个小组长，下面有个员工进度跟不上。这时候直接针对进度跟员工讲倒排期等方法不解决问题时，可采用“三寻法”：寻方案、寻问题、寻支持。就是说可试着问问员工对目前的项目自己的方案是什么，遇到了什么问题，有没有什么需要上级来支持的。这样可以把根本原因聊出来，达到根本上解决问题的目的。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;一针见血&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;如果去一家公司面试高阶职位，说话一针见血是一个重要指标。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;我不是想要一个回答，而是想要一个正确的解决方案&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;当别人问到一个问题，自己不十分确认的时候，有时候会出于条件反射。自己推测一个自己认为合理的答案。回答的人本身心是好的，但是这并不是对方想要的。&lt;/section&gt;&lt;section&gt;对方自己心里大概率也是有猜测的。但是他想要的是一个正确的解决方案。这时候不确认应该及时说明自己不确认，找了解的人再确认或者调查之后再回答。&lt;br/&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;不是要自己说明白，而是要让别人听明白&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;spring中有个很重要的概念：上下文。请求的处理都是基于上下文。自己和别人的上下文是不同的。所以在表述一件事情的事情要考虑别人与自己的信息有哪些没有对齐的，基于此先介绍一下背景。&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;技术是为了解决问题，当解决问题能力足够。这时候，决定个人发展的是看问题的视角，也就是认知能力。希望本文能对大家的认知能力提升有所帮助。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;相关阅读&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6faa136b0291903bad2d32648552f5f0</guid>
<title>分布式配置中心选型，为什么选择 Apollo？</title>
<link>https://toutiao.io/k/2do7cy9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Spring Boot 作为主流微服务框架，拥有成熟的社区生态。市场应用广泛，为了方便大家，整理了一个基于spring boot的常用中间件快速集成入门系列手册，涉及RPC、缓存、消息队列、分库分表、注册中心、分布式配置等常用开源组件，大概有几十篇文章，陆续会开放出来，感兴趣同学请提前关注&amp;amp;收藏&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于配置的常规方案是将配置信息抽离写入 &lt;code&gt;xml&lt;/code&gt;、&lt;code&gt;properties&lt;/code&gt;文件中，然后随着应用一块打包发布。如果有开发、测试、预发、生产等多套环境，则通过配置各自独立的文件以区分不同的环境。&lt;strong&gt;具备一定的扩展性，但每次配置参数变更都要重新发布应用，灵活性较差。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：淘宝每年都要举办双十一活动，带来上千亿的GMV，流量非常大。为了系统的稳定性，通常会做各种演练演习、压测，制定上千个降级预案。如果遇到突发情况，要打开哪个开关，启动对应的紧急处理措施。如果按上面的玩法，每次都要走一次发布流程，一个集群上千台服务器，发布完了，半个小时也没了，这的损失多少钱。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.8112449799196787&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/3Ohm6WHibeXK4p76DKrThTwVIln4eQGGv4KEicCq8K0pgU8pPuNKZscBtcWn7gFy3jaNWY2mcnQD3FX6gOp95GRw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;249&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;资损先不算了，但是你的年度考核 3.25 肯定是没得跑，年终奖泡汤，赢取白富美，走上人生巅峰。。。。兄弟醒醒。。。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5566801619433198&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/3Ohm6WHibeXK4p76DKrThTwVIln4eQGGvYsf8BQHIXGKvv8IGhHyE3pib2KFQFXV6eJCcxbINtLAxvGDbXKAI6fg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;494&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;学学人家德芙，能不能搞个丝滑般的Features，不用走发布流程，也能动态感知配置变更。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;此时我们需要一个中间件框架，分布式配置中心。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工作这么多年，大大小小，各种开源的分布式配置框架有下面几个：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、Apollo&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;2016年5月，携程开源的配置管理中心，具备规范的权限、流程治理等特性。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、spring cloud config&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;2014年9月开源，Spring Cloud 生态组件，可以和Spring Cloud体系无缝整合。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、disconf&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;2014年7月百度开源的配置管理中心，同样具备配置的管理能力，不过目前已经不维护了，最近的一次提交是两年前了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4、Nacos&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;2018年6月，阿里开源的配置中心，也可以做DNS和RPC的服务发现。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5、Diamond&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Diamond 出自淘宝，开源地址 【https://github.com/takeseem/diamond】 目前已经维护了，这里就不展开了。&lt;/p&gt;&lt;/blockquote&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;其他四个框架的功能特性做下比较，表格较大，可左右滑动&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;功能特性&lt;/th&gt;&lt;th&gt;重要性&lt;/th&gt;&lt;th&gt;spring-cloud-config&lt;/th&gt;&lt;th&gt;Apollo&lt;/th&gt;&lt;th&gt;disconf&lt;/th&gt;&lt;th&gt;Nacos&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;静态配置管理&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;基于file&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;动态配置管理&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;统一管理&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;无，需要github&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;多环境&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;无，需要github&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;本地配置缓存&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;配置锁&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;不支持&lt;/td&gt;&lt;td&gt;不支持&lt;/td&gt;&lt;td&gt;不支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;配置校验&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;配置生效时间&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;重启生效，或手动refresh生效&lt;/td&gt;&lt;td&gt;实时&lt;/td&gt;&lt;td&gt;实时&lt;/td&gt;&lt;td&gt;实时&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;配置更新推送&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;需要手工触发&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;配置定时拉取&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;配置更新目前依赖事件驱动， client重启或者server端推送操&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;用户权限管理&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;无，需要github&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;授权、审核、审计&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;无，需要github&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;无&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;配置版本管理&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;Git做版本管理&lt;/td&gt;&lt;td&gt;界面上直接提供发布历史和回滚按钮&lt;/td&gt;&lt;td&gt;操作记录有落数据库，但无查询接口&lt;/td&gt;&lt;td&gt;界面操作，支持回滚&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;配置合规检测&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;不支持&lt;/td&gt;&lt;td&gt;支持（但还需完善）&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;实例配置监控&lt;/td&gt;&lt;td&gt;高&lt;/td&gt;&lt;td&gt;需要结合spring admin&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;支持，可以查看每个配置在哪些机器上加载&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;灰度发布&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;不支持&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;不支持部分更新&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;告警通知&lt;/td&gt;&lt;td&gt;中&lt;/td&gt;&lt;td&gt;不支持&lt;/td&gt;&lt;td&gt;支持，邮件方式告警&lt;/td&gt;&lt;td&gt;支持，邮件方式告警&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nacos配置文件支持比较多的格式，支持yaml、text、json、xml、html、Properties，apollo只支持xml、text、Properties的格式，没有兼容spring boot中比较通用的yaml配置。虽然 Nacos支持多格式的配置文件，但是解析上没有Apollo做的好，Apollo虽然支持的配置格式较少，不过会进行解析，使每个配置看起来比较直观，修改的时候比较直观，可以对单个进行修改。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Apollo用户管理以及权限管理做的比较好和全面，适合做部门或者公司级的配置中心。Nacos比较简洁，权限这块偏弱。Apollo 的社区生态活跃，github最近一次提交是在2021年4月11日，另外使用的公司特别多，常见的坑基本都被踩完了。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6987253765932793&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/3Ohm6WHibeXK4p76DKrThTwVIln4eQGGvobrMsbibvLpmGCy5siaJxE23Ufcac22QAzF9uDrVjFMYvicT7apE4QkicA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;863&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然Nacos作为后起之秀，又有阿里做背书，目前市场活跃度也非常高，大家可以结合自家情况选择，如果稳妥可以选择Apollo&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Apollo 介绍&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Apollo包括服务端和客户端两部分：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务端基于&lt;code&gt;Spring Boot&lt;/code&gt;和&lt;code&gt;Spring Cloud&lt;/code&gt;开发，打包后可以直接运行，不需要额外安装&lt;code&gt;Tomcat&lt;/code&gt;等应用容器。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java客户端不依赖任何框架，能够运行于所有Java运行时环境，同时对&lt;code&gt;Spring&lt;/code&gt;、&lt;code&gt;Spring Boot&lt;/code&gt;环境也有较好的支持。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;开源地址：https://github.com/ctripcorp/apollo&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;特性&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于配置的特殊性，Apollo在设计之初就立志于成为一个有治理能力的配置发布平台，目前提供了以下的特性：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;统一管理不同环境、不同集群的配置&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;配置修改实时生效（热发布）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;版本发布管理&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;灰度发布&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;权限管理、发布审核、操作审计&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;客户端配置信息监控&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;提供Java和.Net原生客户端&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;提供开放平台API&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;部署简单&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Show me the code&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;外部依赖：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 pom.xml 文件中添加 Apollo 依赖：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&lt;br/&gt;    &amp;lt;groupId&amp;gt;com.ctrip.framework.apollo&amp;lt;/groupId&amp;gt;&lt;br/&gt;    &amp;lt;artifactId&amp;gt;apollo-client&amp;lt;/artifactId&amp;gt;&lt;br/&gt;    &amp;lt;version&amp;gt;1.4.0&amp;lt;/version&amp;gt;&lt;br/&gt;&amp;lt;/dependency&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;配置文件：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在配置文件 application.yaml 中配置 Pulsar 的相关参数，具体内容如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;apollo:&lt;br/&gt;  meta: http://127.0.0.1:8080&lt;br/&gt;  bootstrap:&lt;br/&gt;    enabled: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;app:&lt;br/&gt;  id: spring-boot-bulking-apollo&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;实时动态感知配置变更：&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@Component&lt;br/&gt;public class ApolloConfig {&lt;br/&gt;&lt;br/&gt;    private static final String USER_TIMEOUT = &lt;span&gt;&quot;user.timeout&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    @PostConstruct&lt;br/&gt;    public void &lt;span&gt;&lt;span&gt;init&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;        Config config = ConfigService.getAppConfig();&lt;br/&gt;        config.addChangeListener(changeEvent -&amp;gt; {&lt;br/&gt;            ConfigChange configChange = changeEvent.getChange(USER_TIMEOUT);&lt;br/&gt;            PropertyChangeType changeType = configChange.getChangeType();&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (PropertyChangeType.ADDED.equals(changeType) || PropertyChangeType.MODIFIED&lt;br/&gt;                    .equals(changeType)) {&lt;br/&gt;                System.out.println(String.format(&lt;span&gt;&quot;动态刷新的新值。key:%s  ， 值：%s&quot;&lt;/span&gt;, USER_TIMEOUT, configChange.getNewValue()));&lt;br/&gt;            }&lt;br/&gt;        }, Sets.newHashSet(USER_TIMEOUT));&lt;br/&gt;&lt;br/&gt;        String userTimeoutValue = config.getProperty(USER_TIMEOUT, null);&lt;br/&gt;        System.out.println(String.format(&lt;span&gt;&quot;首次拉取。key:%s  ， 值：%s&quot;&lt;/span&gt;, USER_TIMEOUT, userTimeoutValue));&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;管理后台&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;控制台地址：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;http://localhost:8070/config.html?#/appid=spring-boot-bulking-apollo&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.2609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/3Ohm6WHibeXK4p76DKrThTwVIln4eQGGvRriaOLvJFvz9zLlsld4VSp1Vczr2NXBsNeGgMzGgFbPzxl0PlmgEt5w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;控制台多次修改&lt;code&gt;user.timeout&lt;/code&gt;的值，客户端系统能实时接收到配置变更。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;首次拉取。key:user.timeout  ， 值：1000&lt;br/&gt;动态刷新的新值。key:user.timeout  ， 值：500&lt;br/&gt;动态刷新的新值。key:user.timeout  ， 值：1000&lt;br/&gt;动态刷新的新值。key:user.timeout  ， 值：500&lt;br/&gt;动态刷新的新值。key:user.timeout  ， 值：1000&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;演示代码地址&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;https://github.com/aalansehaiyang/spring-boot-bulking  &lt;br/&gt;&lt;br/&gt;模块：spring-boot-bulking-apollo&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;关于我：计算机专业出&lt;/span&gt;&lt;span&gt;身，前阿里架构师，出&lt;/span&gt;&lt;span&gt;过专利，竞赛拿过奖，CSDN博客专家，&lt;/span&gt;&lt;span&gt;负责过电商交易、社区、营销、金融等业务，&lt;/span&gt;&lt;span&gt;多年团队管理经验，爱思考，喜欢结交朋友&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;欢迎大家扫描 &lt;/span&gt;&lt;span&gt;↓&lt;span&gt;↓&lt;/span&gt;&lt;span&gt;↓ 二维码，加个&lt;/span&gt;&lt;/span&gt;&lt;span&gt;微&lt;/span&gt;&lt;span&gt;信好友，多多交流&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.9575757575757575&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/3Ohm6WHibeXK4p76DKrThTwVIln4eQGGvEDFSmuTU13NOAz4QvnmDQ4mmcZyicNWfkGmNKLF30uWWic6rTLmHiaVng/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;330&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;推荐阅读&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5NDAwMzM0MA==&amp;amp;mid=2247485101&amp;amp;idx=1&amp;amp;sn=40ecbfba914173c99bba7acedba6478a&amp;amp;chksm=ec68314edb1fb8581b3389a8e47407cccf44b958f9411d1d2e7ca9610e6e2bba2ac0aebfe4b0&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;淘宝双11千亿交易额的系统架构演变&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5NDAwMzM0MA==&amp;amp;mid=2247484438&amp;amp;idx=1&amp;amp;sn=686afd68b34579d0c38b7de67ce2b64b&amp;amp;chksm=ec6833f5db1fbae3897f2261e270e745182996f95b2fe7c3d4d57e2000607e6bf2c6ead2b446&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;淘宝订单自动确认收货的N种实现，秒杀面试官&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI5NDAwMzM0MA==&amp;amp;mid=2247484307&amp;amp;idx=1&amp;amp;sn=37351d4934ee92c05f6f1beb76462cf4&amp;amp;chksm=ec683470db1fbd6625e46acc6d1e6813b072c8358dc1d7a98cc6bedd7636a182c2b09d0e8ef8&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;如何设计一个高性能的秒杀系统&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;码字不易，请不要白嫖。如果对您的工作有帮助，请转发分享，点个 “赞”&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>52e39c32fa3f8b736891005641c36cfd</guid>
<title>VSCode 插件推荐</title>
<link>https://toutiao.io/k/wlggoto</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwNzIyMTYzNA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/mEakJnD74m965xnGDuRc9yHa3d69a3nXZZO0qiaXjklno7xJqiaZ1tqotAEKOEBLNnbN3XB7zBpjNK5SzoqHyZibQ/0?wx_fmt=png&quot; data-nickname=&quot;前端GoGoGo&quot; data-alias=&quot;fegogogo&quot; data-signature=&quot;提供前沿前端资讯，助力前端成长。&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;点击关注前端GoGoGo &lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;推荐一些我觉得好用的 VSCode 插件。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Indent Rainbow&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;给不同的缩进加不同颜色的背景。区分代码的缩进变得容易。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.2290076335877862&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mEakJnD74mibljm5aHHZLJibsRNhiaa9oicrrDxnhJfwsiceaRqkOJ0KLT92p5kUqHtTLVDLUG6fm6cVrZGbM28otgg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;262&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;Indent Rainbow&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件地址：https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;TODO Highlight&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;高亮代码中的 TODO, FIXME 等。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.634375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mEakJnD74mibljm5aHHZLJibsRNhiaa9oicrZZfwWHJgNs0REZcfiboKNIokglGniblHOGibm4icxTrK4ibwl6Yz81icGOkw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;TODO Highlight&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件地址：https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Auto Rename Tag&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;改标签的时候，自动改匹配的闭合标签。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6513888888888889&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/mEakJnD74mibljm5aHHZLJibsRNhiaa9oicr27u47rA7YR8icSTzIc0WjTjF25ibGicKHEcAic9JqrKEBf2QVUKnWiaSokQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1440&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;Auto Rename Tag&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件地址：https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;npm Intellisense&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;引入 npm 包时的智能提示。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.30182599355531686&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/mEakJnD74mibljm5aHHZLJibsRNhiaa9oicrxD2V5cEntoKfAoDhgln4pCAGEvTqLG0sTtbtMUlBgTcRicAUjRRLRSA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;931&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;npm Intellisense&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件地址：https://marketplace.visualstudio.com/items?itemName=christian-kohler.npm-intellisense&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Path Intellisense&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文件路径的智能提示。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/mEakJnD74mibljm5aHHZLJibsRNhiaa9oicr66icsxqhU8LmURJtk5PkWicS2DfzrwhUBvcrpqCHYLlYYYXDMMI8uUaA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;480&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;Path Intellisense&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件地址：https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Code Spell Checker&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单词拼写检查及正确拼写提示。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7432065217391305&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/mEakJnD74mibljm5aHHZLJibsRNhiaa9oicr1QN2SAyAsnERzWCQQxaVSWR9IK5IkHedIxKAWudrPOboeicsxaeHJ2g/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;736&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;Code Spell Checker&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件地址：https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Project Manager&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;快速在项目间切换。工作中，经常要在项目间切换者的福音。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.23&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mEakJnD74mibljm5aHHZLJibsRNhiaa9oicrnSyaKms3Ha3Aibib1EmXPDB8UYSw413S9elic4b2DDo8r43zChf4RICDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;project-manager&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件地址：https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;GitLens&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 VSCode 中集成部分 git 的功能。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;GitLens simply helps you better understand code. Quickly glimpse into whom, why, and when a line or code block was changed. Jump back through history to gain further insights as to how and why the code evolved. Effortlessly explore the history and evolution of a codebase.&lt;/p&gt;&lt;span/&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3540983606557377&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mEakJnD74mibljm5aHHZLJibsRNhiaa9oicreYkmhddak3gdxACtl4SdQCmVkReibm6icb4ojS8XaU0Ztb5IiaZqJrjzQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;610&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3540983606557377&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mEakJnD74mibljm5aHHZLJibsRNhiaa9oicr4fic1zFYQAqCljYWDhXLGxzqI7KZicmDZMxiajcRVH92QSnmdBZTLw8ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;610&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件地址：https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.49865229110512127&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mEakJnD74m9PcCxRD3yp2XKR8RlrsRJalYl2OiaDibZVKoWyibbmCzk0NQYQ2W2KH23Gu6dQ4H5vxXb9sE7jRfTuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2226&quot;/&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;97821&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;点击原文查看掘金文章哦 ❤&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>40e12c0f0c5fdbd2647b0a3021807878</guid>
<title>写给开发人员的实用密码学：CA</title>
<link>https://toutiao.io/k/vwhpln3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在上一篇文章《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI3NTQyMzEzNQ==&amp;amp;mid=2247486345&amp;amp;idx=1&amp;amp;sn=a3070320d29fe787ec2bdcc60f210a0d&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;写给开发人员的实用密码学 - 数字证书&lt;/a&gt;》中介绍了数字证书，但要让用户信任颁发的数字证书，这里就需要引入 CA 中心。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所谓CA（Certificate Authority）认证中心，即采用PKI（Public Key Infrastructure）公开密钥基础架构技术，专门提供网络身份认证服务的机构。CA可以是民间团体，也可以是政府机构。CA负责签发和管理数字证书，且具有权威性和公正性，它的作用就像我们现实生活中颁发证件的公司，如护照办理机构。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;根CA信任模型&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面对全球这么广泛的用户，仅仅一个CA显然不够。PKI引入“信任模型”，用于描述和分析同一CA管理域内部或不同CA管理域之间信任关系的建立和传递过程。PKI信任模型主要采用根CA信任模型，也称作严格层次信任模型。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.595&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibQ4mtgHYXv5f5yTQrRjyGjgYg1CuIx9Tvk2ibhOOYjJHia5BH9jFqAFlaobk4gbpBk73UQ7tTnnR82OkL92GMWQA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该信任模型下，CA中心可以分为多级，各级CA中心之间呈现严格的层级关系，最上级CA中心只有一个，称作根CA，其它CA称作子CA。根CA的数字证书由自己签发，属于自签名证书，子CA的数字证书由上级CA签发。信任锚可以是根CA，也可以是子CA。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图中，用户X的信任锚为根CA，因此它可以信任子CA1，从而信任用户A证书，信任链为 &lt;strong&gt;根CA -&amp;gt; 子CA1 -&amp;gt; 用户A证书&lt;/strong&gt;。用户Y的信任锚为子CA2，因此它可信任子CA4，从而信任用户D证书，信任链为 &lt;strong&gt;子CA2 -&amp;gt; 子CA4 -&amp;gt; 用户D证书&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意，不要被上图误导，全球的根CA不止一个，应该说现实世界的CA是&lt;strong&gt;多根CA信任模型&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要建立信任锚，就需要获得CA的证书（根据前面的描述，可以是根证书，也可以是二级、三级证书，也可以是用户证书），那这个证书怎么获得呢？会不会获得假冒的证书？其实这个问题的答案非常简单，也可能出乎我们的意料，那就是预置根证书。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;预置根证书&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据前面的CA模型，应用程序并不需要预置所有的CA证书，而只需要预置最顶层CA的证书（通常称作根证书）即可，而全球顶层CA中心数量有限，大概十来个，所以不会存在存储上的问题。当然，如果我们去查看系统预置的根证书，发现数量好像远远不止，那是因为为了程序处理的方便，我们也可能预置一些二级CA证书。比如中国的CA中心在全球可能只是二级CA中心，而我们经常会验证中国CA中心颁发的证书，这个时候预置这些二级CA证书，可以避免证书验证时验证链过长，提高效率。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根证书存为怎样的格式，存放在什么位置，与应用程序的实现有关。就拿浏览器来说，Chrome Windows版本采用的Windows的系统证书存储区，关于证书的处理也是调用Windows的 CryptoAPI。而Chrome Linux版本的根证书则是存储在 NSS 数据库中。到了Android 版本的Chrome浏览器，又使用了Android系统的预置证书。而且随着版本的升级，这些策略还可能调整。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;预置根证书的方式也存在一定的不足，那就是假定全球的顶级CA中心是不变的。实际上，随着互联网对数字证书的需求越来越大，顶层CA中心也在扩容，这就导致新CA中心签发的证书，可能在现有系统得不到承认。此外，有时候虽然证书虽然不是这些权威的CA中心签发的，但你也信任它。比如早年的12306网站，就采用了自签名证书，而没有采用CA中心签发的证书。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此，大部分软件都提供了证书管理功能，你可以导入证书，下图就是chrome浏览器的证书管理界面：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.1525&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibQ4mtgHYXv5f5yTQrRjyGjgYg1CuIx9Tiajw9sKmPdBH3qiaUEawuo08tANeQ731kJJgFjGhC08gedn1MaIO5xqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有些软件更加灵活方便，比如 chrome 浏览器，还在遇到可疑的证书时，让你选择是否信任。如果你选择信任，就可以继续访问。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以证书本质上还是一个信任问题，浏览器和操作系统为什么预置证书，是因为开发者信任这些CA中心，信任他们颁发的证书。其它情况下，有些软件可能会让用户做选择，比如浏览器，而有些软件则不会给用户选择，比如播放器，会直接拒绝不信任的证书。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;搭建国密CA中心&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CA中心听起来名字就很高大上，其实个人也可以整个CA中心，并签发证书，当然这些作为测试用途是没问题的，至于在实际中能否行得通，就要看忽悠能力了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现实世界的CA是分级管理的，层级可以有多层。本文简单起见，只模拟到三级CA管理，具体来说：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Root CA -&amp;gt; Server CA -&amp;gt; Server&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Root CA为一级CA，拥有根CA证书，Server CA为二级CA，其CA证书由Root CA签发，Server为最终的用户，其证书由Server CA签发。当然，Root CA也可以直接给Server签发证书，这里是为了演示CA层级需要而做的这样的假定。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;制作根CA证书&lt;span/&gt;&lt;/h5&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;生成SM2私钥：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ gmssl ecparam -genkey -name sm2p256v1 -text -out rootkey.pem&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根证书的私钥保存在rootkey.pem中，请妥善保存。&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;创建证书请求：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ gmssl req -new -key rootkey.pem -out rootreq.pem&lt;br/&gt;You are about to be asked to enter information that will be incorporated&lt;br/&gt;into your certificate request.&lt;br/&gt;What you are about to enter is what is called a Distinguished Name or a DN.&lt;br/&gt;There are quite a few fields but you can leave some blank&lt;br/&gt;For some fields there will be a default value,&lt;br/&gt;If you enter &#x27;.&#x27;, the field will be left blank.&lt;br/&gt;-----&lt;br/&gt;Country Name (2 letter code) [CN]:&lt;br/&gt;State or Province Name (full name) [Some-State]:Hubei&lt;br/&gt;Locality Name (eg, city) []:Wuhan&lt;br/&gt;Organization Name (eg, company) [Internet Widgits Pty Ltd]:China LianTong      &lt;br/&gt;Organizational Unit Name (eg, section) []:&lt;br/&gt;Common Name (e.g. server FQDN or YOUR name) []:www.china_liantong.com&lt;br/&gt;Email Address []:&lt;br/&gt;Please enter the following &#x27;extra&#x27; attributes&lt;br/&gt;to be sent with your certificate request&lt;br/&gt;A challenge password []:&lt;br/&gt;An optional company name []:&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的命令会要求提供一些信息，因为证书是自签名证书，只用于开发测试，所以填写什么内容无关紧要。&lt;/p&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;创建一个 certext.ext 文本文件，内容为：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[ v3_ca ]&lt;br/&gt;basicConstraints = CA:true&lt;br/&gt;[ usr_cert ]&lt;br/&gt;subjectAltName = DNS:localhost&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&quot;CA:true&quot; 这个扩展，用于指定所签发的证书是否CA证书。&lt;/p&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;生成证书：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ gmssl x509 -req -days 365 -in rootreq.pem -signkey rootkey.pem -extfile certext.ext -extensions v3_ca -out rootcert.pem&lt;br/&gt;Signature ok&lt;br/&gt;subject=C = CN, ST = Hubei, L = Wuhan, O = China LianTong, CN = www.china_liantong.com&lt;br/&gt;Getting Private key&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生成的根证书文件为 rootcert.pem。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意：上面的命令行参数多了一个 -extensions v3_ca 参数，指定使用上面 certext.ext 文件 v3_ca 节的扩展项。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;签发 Server CA 证书&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和上面的步骤一样，这里直接把命令总结一下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ gmssl ecparam -genkey -name sm2p256v1 -text -out serverCAkey.pem&lt;br/&gt;$ gmssl req -new -key serverCAkey.pem -out serverCAreq.pem&lt;br/&gt;$ gmssl x509 -req -days 365 -in serverCAreq.pem -extfile certext.ext -extensions v3_ca -CA rootcert.pem -CAkey rootkey.pem -CAcreateserial -out serverCAcert.pem&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要注意第三个命令多了 -CA 和 -CAkey 参数，表示使用根证书以及CA的私钥。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样我们就可以使用 Server CA证书和私钥签发用户证书。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;签发 Server 证书&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和上面的步骤一样，这里直接把命令总结一下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ gmssl ecparam -genkey -name sm2p256v1 -text -out serverkey.pem&lt;br/&gt;$ gmssl req -new -key serverkey.pem -out serverreq.pem&lt;br/&gt;$ gmssl x509 -req -days 365 -in serverreq.pem -extfile certext.ext -extensions usr_cert -CA serverCAcert.pem -CAkey serverCAkey.pem -CAcreateserial -out servercert.pem&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意：第三个命令的 -extensions 给的参数值为 usr_cert ，对应的是 certext.ext 文件 usr_cert 节的扩展项，通常需要给定服务器的DNS名。由此也可以看出，叶子节点的证书和CA证书还是有些属性不同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样，生成的 server.pem 包含了根证书、Server CA证书和Server证书，包含了完整的证书链，可以投入测试使用了。你可以尝试在 chrome 浏览器中导入根证书：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.99&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibQ4mtgHYXv5f5yTQrRjyGjgYg1CuIx9TTBIeMZrnJG9JVbwKGcqiaZbhFfmy8vt0jGibvpCDoicvNSm3lWhTLgunQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;证书链&lt;span/&gt;&lt;br/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在浏览器中，我们可以查看证书信息，一般来说，证书通常是呈现出多级的状态。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.23&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibQ4mtgHYXv5f5yTQrRjyGjgYg1CuIx9T1Jibia9IK96S2yySg4jibFn9ACwibiaDtaQyYdzkzS8blvjVIHD3icMxkvew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务器配置的是CA颁发的服务器实体证书，而客户端（浏览器或操作系统）预置的是根证书，现在的问题是，中间证书怎么获取？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据X.509标准，服务器应该发送完整的证书链（不包含根证书）。如果服务器端发送的证书不完整，某些客户端可以去尝试构建完整的证书链，但有些浏览器可能不会执行该操作，这样整个HTTPS协议握手就会失败。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4075&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibQ4mtgHYXv5f5yTQrRjyGjgYg1CuIx9TpMkUsnaythmONer18690e8zOAnDgp1RyeG35S0OzibQMg6LkPcibial6A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据服务器实体证书寻找完整证书链的方法很简单，浏览器从服务器实体证书中获取CA密钥标识符（Authority Key Identifier），进而获取上一级中间证书文件，然后通过中间证书中的CA密钥标识符不断迭代直到获取根证书。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务器发送完整证书链的好处在于提高握手速度，浏览器无须额外再去寻找其他中间证书，能够加速HTTPS握手过程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;校验过程：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;浏览器从服务器实体证书的上一级证书（比如B证书）获取公钥，用来校验服务器实体证书的签名，校验成功则继续，否则证书校验失败。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;浏览器从B证书的上一级证书（比如C证书）获取公钥，用来校验B证书的签名，校验成功则继续，否则证书校验失败。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;该校验过程不断迭代，直到浏览器发现某张证书的签发者和使用者是同一个人，代表找到了根证书。校验根证书的签名和校验非根证书的签名不太一样，校验根证书签名使用的公钥就在根证书中，而校验其他非根证书签名使用的公钥来自上一级证书，根证书使用自己的公钥验证签名，如果校验成功就代表完整的证书链校验成功。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;证书完整校验&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;X.509标准没有规定校验证书的标准，不同浏览器校验证书的规则也不一样，一般来说，校验主要包含四个方面：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;证书链的校验。主要是迭代校验每张证书的签名，最后会找到自签名的根证书，由于浏览器已经集成了根证书，可以充分信任根证书的公钥，完成最后的签名校验。但签名验证成功只能代表某张服务器证书确实是由某个根证书签发的，并不能表示身份验证成功。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;服务器实体证书的校验。主要校验如下内容：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（1）浏览器访问的域名是不是与证书使用者可选名称（SAN）扩展包含的域名匹配，如果不匹配，校验失败。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（2）日期校验，证书包含有效期，生效时间位于{notBefore, notAfter}区间，如果证书过期，校验失败。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（3）证书扩展校验（可选）。比如，如果扩展Critical被标识为True，客户端必须正确处理该扩展，否则校验失败。再比如，浏览器通常会校验密钥用法（Key Usage）扩展，该扩展对应的值如果不包含数字签名（Digital Signature）和密钥协商（Key Encipherment），校验失败。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（1）日期校验，校验证书有效期。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（2）证书扩展Critical如果标识为True，必须校验。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（3）中间证书也包含一个公钥，需要校验该公钥的用途，校验方法就是判断密钥用法（Key Usage）扩展，该扩展对应的值如果不包含Digital Signature（数字签名）、Certificate Sign（签名证书）、CRL Sign（签署CRL），校验失败。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（4）校验基础约束（basic constraints）扩展，校验中间证书是否能够签发证书，如果不允许签发，校验失败。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;吊销状态校验。校验的逻辑非常复杂，有些浏览器可能会放弃吊销状态的检查。需要注意的是，服务器实体证书和中间证书都需要校验吊销状态，但具体如何校验取决于浏览器，这些并不是TLS/SSL协议的标准。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;小结&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;《写给开发人员的实用密码学》系列文章到这就告一段落，实际上有关网络安全、系统安全远不止加密解密、签名、证书等内容，只是密码学是网络安全的基础。在补充密码学知识的同时，我也对网络安全有了更多的认识，后面我还会围绕国密、网络安全、HTTPS、HTTP/2等内容进行研究，欢迎大家讨论交流。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibQ4mtgHYXv50C2zJtfH5icNbOicm63Mwia4EaZdIJtQDz9rJLxS6LBsVgWJXtbJIFBaAH2nzu7tBEic76fFUEphPjw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>40dccb3f670b86be80ef4dbdcba6681a</guid>
<title>重构项目</title>
<link>https://toutiao.io/k/2hs8quz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section class=&quot;post&quot;&gt;
&lt;p&gt;最近这段时间工作重点是技术优化，包含代码圈复杂度、代码缺陷优化，项目重构等。重构的项目包括获取机构配置服务、离线对账脚本。获取机构配置每天 4000W+ 访问，对账脚本又涉及到大量资金。重构这些项目困难重重。&lt;/p&gt;

&lt;hr/&gt;

&lt;h2 id=&quot;重构原因&quot;&gt;重构原因&lt;/h2&gt;

&lt;p&gt;既然服务这么重要，出错容忍性这么低，为什么要进行重构？&lt;/p&gt;

&lt;p&gt;以获取机构配置服务为例，之前存储使用 MySQL， 保存了 5K+ 机构、1W+ 个性化配置信息。在业务高峰期 DB 物理机 CPU 接近满载。为了满足后续业务增长，需要将配置信息迁移到 KV 服务。KV 相比 MySQL 性能更好，同时支持多地容灾。重构之后收益较高。&lt;/p&gt;

&lt;p&gt;再比如历史对账脚本使用了 Python、Shell，代码中硬编码了 MySQL 的 IP 端口。从安全和质量的角度来看存在很大问题。在部门的推进下，对这部分代码也需要做改造。&lt;/p&gt;

&lt;p&gt;一般项目重构有这些原因：&lt;/p&gt;

&lt;p&gt;1、系统容量无法满足业务增长，需要优化服务性能。系统不支持横向扩展，不能通过扩容解决。比如 MySQL 配置库读的是一组 DB，但 DB 的内存、CPU 会有上限。&lt;/p&gt;

&lt;p&gt;2、系统架构满足不了新产品需求，需要重新设计增强扩展性。比如之前的业务逻辑是 hardcore，后面又需要针对不同的场景进行个性化，这样整个系统可能需要重新设计。&lt;/p&gt;

&lt;p&gt;3、安全和质量原因，需要使用更规范的实现。很多项目在上线之初快速迭代，忽略了代码质量、安全风险。项目里大到架构设计，小到使用组件的方式、编码原则都可能都存在安全和质量问题。&lt;/p&gt;

&lt;p&gt;4、旧组件下线和迁移，不可抗力，各种组织里反复造轮子屡见不鲜，旧轮子不维护，新轮子强制上线替换。&lt;/p&gt;

&lt;hr/&gt;

&lt;h2 id=&quot;重构原则&quot;&gt;重构原则&lt;/h2&gt;

&lt;p&gt;在重构时，我们应该遵循什么原则来变更？下面对实践中遇到的问题和经验进行总结。&lt;/p&gt;

&lt;p&gt;一、可验证性&lt;/p&gt;

&lt;p&gt;a. 变动逻辑的关键日志、监控，执行流应符合预期。比如新增一个逻辑分支，上报的监控变化一定和改动一致。&lt;/p&gt;

&lt;p&gt;b. 新旧逻辑的结果对比，结果应完全一致。&lt;/p&gt;

&lt;p&gt;业务代码里需要针对这种验证场景写对比逻辑，第一步双读加入监控进行对比，第二步等线上跑一段时间数据完全一致，再切换为新的读分支上线。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20200810-1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;二、最小改动原则&lt;/p&gt;

&lt;p&gt;如果改动过大，在排查问题时都无法用控制变量法筛选。&lt;/p&gt;

&lt;p&gt;a. 另起炉灶，使用新的函数、文件重构。比如重构获取实名的函数 GetRealName，有多处地方调用。可以新写一个 GetRealNameV2 放到 GetRealName 函数中进行替换。&lt;/p&gt;

&lt;p&gt;b. 现在的方案是否是最好的，能否废弃掉用更简单的方案。当项目越来越臃肿，可能背离了之前的初衷。回顾一下也许已经有了更简单的方案，使用这种方案也许是更小的改动方案。比如之前使用脚本和机构进行对账、退款，现在已经有了 API 的方式，机构直接使用 API 退款即可。&lt;/p&gt;

&lt;p&gt;三、可回退原则&lt;/p&gt;

&lt;p&gt;a. 重构服务上线后出现异常，应能较快切换到之前的版本。这种机制由变更工具/框架/业务幂等逻辑保证&lt;/p&gt;

&lt;p&gt;b. 回退期间的异常脏数据修复。重构服务上线回退时可能出现脏数据，需要提前想好回退后的修复方案。修复方案设计不合理也可能出现问题，需要针对修复方案再修复，套娃开始…&lt;/p&gt;

&lt;hr/&gt;

&lt;h2 id=&quot;上线-check-事项&quot;&gt;上线 check 事项&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;机器负载（CPU、内存、IO）性能变化&lt;/li&gt;
  &lt;li&gt;现网服务监控曲线变化&lt;/li&gt;
  &lt;li&gt;热更新 or 冷更新，能否直接替换（执行中的脚本不能直接替换）&lt;/li&gt;
  &lt;li&gt;脚本文件替换后，是否有执行权限&lt;/li&gt;
&lt;/ul&gt;
                          
&lt;/section&gt;



&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>