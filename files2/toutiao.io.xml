<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>c1037b1c92165ba26a74541dc6d48023</guid>
<title>[推荐] 项目管理标准模板</title>
<link>https://toutiao.io/k/aud21gw</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;post-content&quot;&gt;&lt;p&gt;之前写了一篇&lt;a href=&quot;https://www.rowkey.cn/blog/2020/04/25/tech-leader-manage/&quot;&gt;《技术管理标准模板》&lt;/a&gt;，其中项目管理部分并没有具体深入，而这一技能不仅仅是对于技术Leader的要求，从我的经验看来，只要是程序员，具有项目管理能力都是如虎添翼的，即使你走的是专业路线。本文即基于自己的经验，从项目的启动和迭代阶段总结了敏捷项目管理的一些标准动作。&lt;/p&gt;




&lt;h2&gt;启动阶段&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;相关干系人沟通，同步项目背景、业务价值等&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动会议：召集相关干系人，明确业务相关信息，确定相关流程制度等&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需求收集和分析-&amp;gt;&lt;strong&gt;总体需求文档&lt;/strong&gt;，概括性的功能与非功能需求列表&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;初步的产品规划-&amp;gt;&lt;strong&gt;每一轮迭代的需求列表、发布时间&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建项目基础设施-&amp;gt;&lt;strong&gt;可持续交付到测试环境的基础项目&lt;/strong&gt;，包括各个端的代码库、到测试环境的流水线等。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;迭代阶段&lt;/h2&gt;

&lt;p&gt;两周为一迭代，包括需求、设计、开发、测试、发布。关键点在于需求的拆分、优先级以及并行化。&lt;/p&gt;

&lt;h3&gt;1. 需求评审&lt;/h3&gt;

&lt;p&gt;对本轮迭代的需求尽心评审确认。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;前置条件&lt;/strong&gt;：产品经理对此轮迭代进行需求确认，产出需求条目，按&lt;strong&gt;优先级&lt;/strong&gt;排列；需求需要拆的足够小，把大需求拆成一个个&lt;strong&gt;能够独立开发测试发布&lt;/strong&gt;的小需求&lt;/p&gt;

&lt;h3&gt;2. 工作规划&lt;/h3&gt;

&lt;p&gt;根据本轮迭代需求做WBS任务分解&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;WBS工作项分解: 甘特图&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;里程碑结点: 表格或者里程碑图&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;风险管理：风险点预估、严重程度、可能性、应对措施&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;3. 设计/技术评审&lt;/h3&gt;

&lt;p&gt;分别对交互设计和技术设计进行评审&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;前置条件&lt;/strong&gt;：设计师需要输出设计图；技术部分做概要设计和系统设计，随着每一轮迭代进行更新维护&lt;/p&gt;

&lt;h3&gt;4. 测试用例评审&lt;/h3&gt;

&lt;p&gt;由QA安排，会前需要提前将测试用例文档发给产品经理与研发，提前标注有疑问的用例。&lt;/p&gt;

&lt;h3&gt;5. 开发、测试过程的监控&lt;/h3&gt;

&lt;p&gt;持续交付：开发和迭代测试，需求开发完成后即测试并进行缺陷跟踪。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;会议&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;项目周报&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;汇总项目总体状况，回答三个问题&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;项目的整体进展状态到底如何？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;风险可控吗？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;目标达成有没有问题？&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;6. 版本全量测试&lt;/h3&gt;

&lt;p&gt;对所有已经开发完的功能进行交叉测试、全量测试、埋点测试、回归测试、第三方云测。&lt;/p&gt;

&lt;h3&gt;7. 验包发布&lt;/h3&gt;

&lt;p&gt;此迭代所有功能开发测试完成后，提交审核流程，各流程审核人验收通过后发布。&lt;/p&gt;

&lt;h3&gt;8. 复盘&lt;/h3&gt;

&lt;p&gt;项目复盘会：有意识地向过去的行为经验学习&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;团队做对了哪些事？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;做错了哪些事？&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;再来一次，如何做得更好？&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;



  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>69d1fc6f21d0417a1b67131594ae99df</guid>
<title>[推荐] 谈谈 MySQL 的 JSON 数据类型</title>
<link>https://toutiao.io/k/x25pdur</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot;&gt;&lt;p&gt;MySQL 5.7 增加了 JSON 数据类型的支持，在之前如果要存储 JSON 类型的数据的话我们只能自己做 &lt;code&gt;JSON.stringify()&lt;/code&gt; 和 &lt;code&gt;JSON.parse()&lt;/code&gt; 的操作，而且没办法针对 JSON 内的数据进行查询操作，所有的操作必须读取出来 parse 之后进行，非常的麻烦。原生的 JSON 数据类型支持之后，我们就可以直接对 JSON 进行数据查询和修改等操作了，较之前会方便非常多。&lt;/p&gt;&lt;p&gt;为了方便演示我先创建一个 &lt;code&gt;user&lt;/code&gt; 表，其中 &lt;code&gt;info&lt;/code&gt; 字段用来存储用户的基础信息。要将字段定义成 JSON 类型数据非常简单，直接字段名后接 &lt;code&gt;JSON&lt;/code&gt; 即可。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNSIGNED&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;AUTO_INCREMENT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JSON&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;表创建成功之后我们就按照经典的 CRUD 数据操作来讲讲怎么进行 JSON 数据类型的操作。&lt;/p&gt;&lt;h2&gt;添加数据&lt;/h2&gt;&lt;p&gt;添加数据这块是比较简单，不过需要理解 MySQL 对 JSON 的存储本质上还是字符串的存储操作。只是当定义为 JSON 类型之后内部会对数据再进行一些索引的创建方便后续的操作而已。所以添加 JSON 数据的时候需要使用字符串包装。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; INSERT INTO user (`name`, `info`) VALUES(&#x27;lilei&#x27;, &#x27;{&quot;sex&quot;: &quot;male&quot;, &quot;age&quot;: 18, &quot;hobby&quot;: [&quot;basketball&quot;, &quot;football&quot;], &quot;score&quot;: [85, 90, 100]}&#x27;);
Query OK, 1 row affected (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;除了自己拼 JSON 之外，你还可以调用 MySQL 的 JSON 创建函数进行创建。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;JSON_OBJECT&lt;/code&gt;：快速创建 JSON 对象，奇数列为 key，偶数列为 value，使用方法 &lt;code&gt;JSON_OBJECT(key,value,key1,value1)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;JSON_ARRAY&lt;/code&gt;：快速创建 JSON 数组，使用方法 &lt;code&gt;JSON_ARRAY(item0, item1, item2)&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; INSERT INTO user (`name`, `info`) VALUES(&#x27;hanmeimei&#x27;, JSON_OBJECT(
    -&amp;gt;   &#x27;sex&#x27;, &#x27;female&#x27;, 
    -&amp;gt;   &#x27;age&#x27;, 18, 
    -&amp;gt;   &#x27;hobby&#x27;, JSON_ARRAY(&#x27;badminton&#x27;, &#x27;sing&#x27;), 
    -&amp;gt;   &#x27;score&#x27;, JSON_ARRAY(90, 95, 100)
    -&amp;gt; ));
Query OK, 1 row affected (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不过对于 JavaScript 工程师来说不管是使用字符串来写还是使用自带函数来创建 JSON 都是非常麻烦的一件事，远没有 JS 原生对象来的好用。所以在 &lt;code&gt;think-model&lt;/code&gt; 模块中我们增加了 JSON 数据类型的数据自动进行 &lt;code&gt;JSON.stringify()&lt;/code&gt; 的支持，所以直接传入 JS 对象数据即可。&lt;/p&gt;&lt;p&gt;由于数据的自动序列化和解析是根据字段类型来做的，为了不影响已运行的项目，需要在模块中配置 &lt;code&gt;jsonFormat: true&lt;/code&gt; 才能开启这项功能。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//adapter.js
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MySQL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;think-model-mysql&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;mysql&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MySQL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;jsonFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//user.js
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;think&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;user&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;lilei&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;sex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;male&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;hobby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;basketball&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;football&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;85&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面让我们来看看最终存储到数据库中的数据是什么样的&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; SELECT * FROM `user`;
+----+-----------+-----------------------------------------------------------------------------------------+
| id | name      | info                                                                                    |
+----+-----------+-----------------------------------------------------------------------------------------+
|  1 | lilei     | {&quot;age&quot;: 18, &quot;sex&quot;: &quot;male&quot;, &quot;hobby&quot;: [&quot;basketball&quot;, &quot;football&quot;], &quot;score&quot;: [85, 90, 100]} |
|  2 | hanmeimei | {&quot;age&quot;: 18, &quot;sex&quot;: &quot;female&quot;, &quot;hobby&quot;: [&quot;badminton&quot;, &quot;sing&quot;], &quot;score&quot;: [90, 95, 100]}    |
+----+-----------+-----------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;查询数据&lt;/h2&gt;&lt;p&gt;为了更好的支持 JSON 数据的操作，MySQL 提供了一些 JSON 数据操作类的方法。和查询操作相关的方法主要如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;JSON_EXTRACT()&lt;/code&gt;：根据 Path 获取部分 JSON 数据，使用方法 &lt;code&gt;JSON_EXTRACT(json_doc, path[, path] ...)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt;：&lt;code&gt;JSON_EXTRACT()&lt;/code&gt; 的等价写法&lt;/li&gt;&lt;li&gt;&lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt;：&lt;code&gt;JSON_EXTRACT()&lt;/code&gt; 和 &lt;code&gt;JSON_UNQUOTE()&lt;/code&gt; 的等价写法&lt;/li&gt;&lt;li&gt;&lt;code&gt;JSON_CONTAINS()&lt;/code&gt;：查询 JSON 数据是否在指定 Path 包含指定的数据，包含则返回1，否则返回0。使用方法 &lt;code&gt;JSON_CONTAINS(json_doc, val[, path])&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;JSON_CONTAINS_PATH()&lt;/code&gt;：查询是否存在指定路径，存在则返回1，否则返回0。&lt;code&gt;one_or_all&lt;/code&gt; 只能取值 &quot;one&quot; 或 &quot;all&quot;，one 表示只要有一个存在即可，all 表示所有的都存在才行。使用方法 &lt;code&gt;JSON_CONTAINS_PATH(json_doc, one_or_all, path[, path] ...)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;JSON_KEYS()&lt;/code&gt;：获取 JSON 数据在指定路径下的所有键值。使用方法 &lt;code&gt;JSON_KEYS(json_doc[, path])&lt;/code&gt;，类似 JavaScript 中的 &lt;code&gt;Object.keys()&lt;/code&gt; 方法。&lt;/li&gt;&lt;li&gt;&lt;code&gt;JSON_SEARCH()&lt;/code&gt;：查询包含指定字符串的 Paths，并作为一个 JSON Array 返回。查询的字符串可以用 LIKE 里的 &#x27;%&#x27; 或 &#x27;_&#x27; 匹配。使用方法 &lt;code&gt;JSON_SEARCH(json_doc, one_or_all, search_str[, escape_char[, path] ...])&lt;/code&gt;，类似 JavaScript 中的 &lt;code&gt;findIndex()&lt;/code&gt; 操作。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我们在这里不对每个方法进行逐个的举例描述，仅提出一些场景举例应该怎么操作。&lt;/p&gt;&lt;h3&gt;返回用户的年龄和性别&lt;/h3&gt;&lt;p&gt;举这个例子就是想告诉下大家怎么获取 JSON 数据中的部分内容，并按照正常的表字段进行返回。这块可以使用 &lt;code&gt;JSON_EXTRACT&lt;/code&gt; 或者等价的 &lt;code&gt;-&amp;gt;&lt;/code&gt; 操作都可以。其中根据例子可以看到 &lt;code&gt;sex&lt;/code&gt; 返回的数据都带有引号，这个时候可以使用 &lt;code&gt;JSON_UNQUOTE()&lt;/code&gt; 或者直接使用 &lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt; 就可以把引号去掉了。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; SELECT `name`, JSON_EXTRACT(`info`, &#x27;$.age&#x27;) as `age`, `info`-&amp;gt;&#x27;$.sex&#x27; as sex FROM `user`;
+-----------+------+----------+
| name      | age  | sex      |
+-----------+------+----------+
| lilei     | 18   | &quot;male&quot;   |
| hanmeimei | 16   | &quot;female&quot; |
+-----------+------+----------+
2 rows in set (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里我们第一次接触到了 Path 的写法，MySQL 通过这种字符串的 Path 描述帮助我们映射到对应的数据。和 JavaScript 中对象的操作比较类似，通过 &lt;code&gt;.&lt;/code&gt; 获取下一级的属性，通过 &lt;code&gt;[]&lt;/code&gt; 获取数组元素。&lt;/p&gt;&lt;p&gt;不一样的地方在于需要通过 &lt;code&gt;$&lt;/code&gt; 表示本身，这个也比较好理解。另外就是可以使用 &lt;code&gt;*&lt;/code&gt; 和 &lt;code&gt;**&lt;/code&gt; 两个通配符，比如 &lt;code&gt;.*&lt;/code&gt; 表示当前层级的所有成员的值，&lt;code&gt;[*]&lt;/code&gt; 则表示当前数组中所有成员值。&lt;code&gt;**&lt;/code&gt; 类似 LIKE 一样可以接前缀和后缀，比如 &lt;code&gt;a**b&lt;/code&gt; 表示的是以 a 开头，b结尾的路径。&lt;/p&gt;&lt;p&gt;路径的写法非常简单，后面的内容里也会出现。上面的这个查询对应在 &lt;code&gt;think-model&lt;/code&gt; 的写法为&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//user.js
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;think&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;user&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name, JSON_EXTRACT(info, &#x27;$.age&#x27;) AS age, info-&amp;gt;&#x27;$.sex&#x27; as sex&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;1=1&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;返回喜欢篮球的男性用户&lt;/h3&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; SELECT `name` FROM `user` WHERE JSON_CONTAINS(`info`, &#x27;&quot;male&quot;&#x27;, &#x27;$.sex&#x27;) AND JSON_SEARCH(`info`, &#x27;one&#x27;, &#x27;basketball&#x27;, null, &#x27;$.hobby&#x27;);
+-------+
| name  |
+-------+
| lilei |
+-------+
1 row in set, 1 warning (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个例子就是简单的告诉大家怎么对属性和数组进行查询搜索。其中需要注意的是 &lt;code&gt;JSON_CONTAINS()&lt;/code&gt; 查询字符串由于不带类型转换的问题字符串需要使用加上 &lt;code&gt;&quot;&quot;&lt;/code&gt; 包裹查询，或者使用 &lt;code&gt;JSON_QUOTE(&#x27;male&#x27;)&lt;/code&gt; 也可以。&lt;/p&gt;&lt;p&gt;如果你使用的是 MySQL 8 的话，也可以使用新增的 &lt;code&gt;JSON_VALUE()&lt;/code&gt; 来代替 &lt;code&gt;JSON_CONTAINS()&lt;/code&gt;，新方法的好处是会带类型转换，避免刚才双引号的尴尬问题。不需要返回的路径的话，&lt;code&gt;JSON_SEARCH()&lt;/code&gt; 在这里也可以使用新增的 &lt;code&gt;MEMBER OF&lt;/code&gt; 或者 &lt;code&gt;JSON_OVERLAPS()&lt;/code&gt; 方法替换。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; SELECT `name` FROM `user` WHERE JSON_VALUE(`info`, &#x27;$.sex&#x27;) = &#x27;male&#x27; AND &#x27;basketball&#x27; MEMBER OF(JSON_VALUE(`info`, &#x27;$.hobby&#x27;));
+-------+
| name  |
+-------+
| lilei |
+-------+
1 row in set (0.00 sec)

mysql&amp;gt; SELECT `name` FROM `user` WHERE JSON_VALUE(`info`, &#x27;$.sex&#x27;) = &#x27;male&#x27; AND JSON_OVERLAPS(JSON_VALUE(`info`, &#x27;$.hobby&#x27;), JSON_QUOTE(&#x27;basketball&#x27;));
+-------+
| name  |
+-------+
| lilei |
+-------+
1 row in set (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的这个查询对应在 &lt;code&gt;think-model&lt;/code&gt; 的写法为&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//user.js
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;think&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;user&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;_string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;JSON_CONTAINS(info, &#x27;\&quot;male\&quot;&#x27;, &#x27;$.sex&#x27;)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;JSON_SEARCH(info, &#x27;one&#x27;, &#x27;basketball&#x27;, null, &#x27;$.hobby&#x27;)&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;_string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;JSON_VALUE(`info`, &#x27;$.sex&#x27;) = &#x27;male&#x27;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;&#x27;basketball&#x27; MEMBER OF (JSON_VALUE(`info`, &#x27;$.hobby&#x27;))&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;where2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;_string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;JSON_VALUE(`info`, &#x27;$.sex&#x27;) = &#x27;male&#x27;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;JSON_OVERLAPS(JSON_VALUE(`info`, &#x27;$.hobby&#x27;), JSON_QUOTE(&#x27;basketball&#x27;))&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;name&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;修改数据&lt;/h2&gt;&lt;p&gt;MySQL 提供的 JSON 操作函数中，和修改操作相关的方法主要如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;JSON_APPEND/JSON_ARRAY_APPEND&lt;/code&gt;：这两个名字是同一个功能的两种叫法，MySQL 5.7 的时候为 &lt;code&gt;JSON_APPEND&lt;/code&gt;，MySQL 8 更新为 &lt;code&gt;JSON_ARRAY_APPEND&lt;/code&gt;，并且之前的名字被废弃。该方法如同字面意思，给数组添加值。使用方法 &lt;code&gt;JSON_ARRAY_APPEND(json_doc, path, val[, path, val] ...)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;JSON_ARRAY_INSERT&lt;/code&gt;：给数组添加值，区别于 &lt;code&gt;JSON_ARRAY_APPEND()&lt;/code&gt; 它可以在指定位置插值。使用方法 &lt;code&gt;JSON_ARRAY_INSERT(json_doc, path, val[, path, val] ...)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;JSON_INSERT/JSON_REPLACE/JSON_SET&lt;/code&gt;：以上三个方法都是对 JSON 插入数据的，他们的使用方法都为 &lt;code&gt;JSON_[INSERT|REPLACE|SET](json_doc, path, val[, path, val] ...)&lt;/code&gt;，不过在插入原则上存在一些差别。&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;JSON_INSERT&lt;/code&gt;：当路径不存在才插入&lt;/li&gt;&lt;li&gt;&lt;code&gt;JSON_REPLACE&lt;/code&gt;：当路径存在才替换&lt;/li&gt;&lt;li&gt;&lt;code&gt;JSON_SET&lt;/code&gt;：不管路径是否存在&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;JSON_REMOVE&lt;/code&gt;：移除指定路径的数据。使用方法 &lt;code&gt;JSON_REMOVE(json_doc, path[, path] ...)&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;由于 &lt;code&gt;JSON_INSERT&lt;/code&gt;, &lt;code&gt;JSON_REPLACE&lt;/code&gt;, &lt;code&gt;JSON_SET&lt;/code&gt; 和 &lt;code&gt;JSON_REMOVE&lt;/code&gt; 几个方法支持属性和数组的操作，所以前两个 &lt;code&gt;JSON_ARRAY&lt;/code&gt; 方法用的会稍微少一点。下面我们根据之前的数据继续举几个实例看看。&lt;/p&gt;&lt;h3&gt;修改用户的年龄&lt;/h3&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; UPDATE `user` SET `info` = JSON_REPLACE(`info`, &#x27;$.age&#x27;, 20) WHERE `name` = &#x27;lilei&#x27;;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql&amp;gt; SELECT JSON_VALUE(`info`, &#x27;$.age&#x27;) as age FROM `user` WHERE `name` = &#x27;lilei&#x27;;
+------+
| age  |
+------+
| 20   |
+------+
1 row in set (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;JSON_INSERT&lt;/code&gt; 和 &lt;code&gt;JSON_SET&lt;/code&gt; 的例子也是类似，这里就不多做演示了。对应到 &lt;code&gt;think-model&lt;/code&gt; 中的话，需要使用 EXP 条件表达式处理，对应的写法为&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//user.js
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;think&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;user&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;lilei&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;exp&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;JSON_REPLACE(info, &#x27;$.age&#x27;, 20)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;修改用户的爱好&lt;/h3&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; UPDATE `user` SET `info` = JSON_ARRAY_APPEND(`info`, &#x27;$.hobby&#x27;, &#x27;badminton&#x27;) WHERE `name` = &#x27;lilei&#x27;;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql&amp;gt; SELECT JSON_VALUE(`info`, &#x27;$.hobby&#x27;) as hobby FROM `user` WHERE `name` = &#x27;lilei&#x27;;
+-----------------------------------------+
| hobby                                   |
+-----------------------------------------+
| [&quot;basketball&quot;, &quot;football&quot;, &quot;badminton&quot;] |
+-----------------------------------------+
1 row in set (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;JSON_ARRAY_APPEND&lt;/code&gt; 在对数组进行操作的时候还是要比 &lt;code&gt;JSON_INSERT&lt;/code&gt; 之类的方便的，起码你不需要知道数组的长度。对应到 &lt;code&gt;think-model&lt;/code&gt; 的写法为&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//user.js
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;think&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;user&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;lilei&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;exp&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;JSON_ARRAY_APPEND(info, &#x27;$.hobby&#x27;, &#x27;badminton&#x27;)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3&gt;删除用户的分数&lt;/h3&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; UPDATE `user` SET `info` = JSON_REMOVE(`info`, &#x27;$.score[0]&#x27;) WHERE `name` = &#x27;lilei&#x27;;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql&amp;gt; SELECT `name`, JSON_VALUE(`info`, &#x27;$.score&#x27;) as score FROM `user` WHERE `name` = &#x27;lilei&#x27;;
+-------+-----------+
| name  | score     |
+-------+-----------+
| lilei | [90, 100] |
+-------+-----------+
1 row in set (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;删除这块和之前修改操作类似，没有什么太多需要说的。但是对数组进行操作很多时候我们可能就是想删值，但是却不知道这个值的 Path 是什么。这个时候就需要利用之前讲到的 &lt;code&gt;JSON_SEARCH()&lt;/code&gt; 方法，它是根据值去查找路径的。比如说我们要删除 lilei 兴趣中的 badminton 选项可以这么写。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; UPDATE `user` SET `info` = JSON_REMOVE(`info`, JSON_UNQUOTE(JSON_SEARCH(`info`, &#x27;one&#x27;, &#x27;badminton&#x27;))) WHERE `name` = &#x27;lilei&#x27;;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql&amp;gt; SELECT JSON_VALUE(`info`, &#x27;$.hobby&#x27;) as hobby FROM `user` WHERE `name` = &#x27;lilei&#x27;;
+----------------------------+
| hobby                      |
+----------------------------+
| [&quot;basketball&quot;, &quot;football&quot;] |
+----------------------------+
1 row in set (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里需要注意由于 &lt;code&gt;JSON_SEARCH&lt;/code&gt; 不会做类型转换，所以匹配出来的路径字符串需要进行 &lt;code&gt;JSON_UNQUOTE()&lt;/code&gt; 操作。另外还有非常重要的一点是 &lt;code&gt;JSON_SEARCH&lt;/code&gt; &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/44056978/how-do-i-use-json-search-to-find-the-path-of-a-number-in-a-mysql-json-array&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;无法对数值类型数据进行查找&lt;/a&gt;，也不知道这个是 Bug 还是 Feature。这也是为什么我没有使用 &lt;code&gt;score&lt;/code&gt; 来进行举例而是换成了 &lt;code&gt;hobby&lt;/code&gt; 的原因。如果数值类型的话目前只能取出来在代码中处理了。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mysql&amp;gt; SELECT JSON_VALUE(`info`, &#x27;$.score&#x27;) FROM `user` WHERE `name` = &#x27;lilei&#x27;;
+-------------------------------+
| JSON_VALUE(`info`, &#x27;$.score&#x27;) |
+-------------------------------+
| [90, 100]                     |
+-------------------------------+
1 row in set (0.00 sec)

mysql&amp;gt; SELECT JSON_SEARCH(`info`, &#x27;one&#x27;, 90, null, &#x27;$.score&#x27;) FROM `user` WHERE `name` = &#x27;lilei&#x27;;
+-------------------------------------------------+
| JSON_SEARCH(`info`, &#x27;one&#x27;, 90, null, &#x27;$.score&#x27;) |
+-------------------------------------------------+
| NULL                                            |
+-------------------------------------------------+
1 row in set (0.00 sec)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以上对应到 &lt;code&gt;think-model&lt;/code&gt; 的写法为&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//user.js
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;think&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;user&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 删除分数
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;lilei&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;exp&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;JSON_REMOVE(info, &#x27;$.score[0]&#x27;)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 删除兴趣
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;    &lt;span class=&quot;nx&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;lilei&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;exp&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;JSON_REMOVE(`info`, JSON_UNQUOTE(JSON_SEARCH(`info`, &#x27;one&#x27;, &#x27;badminton&#x27;)))&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;后记&lt;/h2&gt;&lt;p&gt;由于最近有一个需求，有一堆数据，要记录这堆数据的排序情况，方便根据排序进行输出。一般情况下肯定是给每条数据增加一个 &lt;code&gt;order&lt;/code&gt; 字段来记录该条数据的排序情况。但是由于有着批量操作，在这种时候使用单字段去存储会显得特别麻烦。在服务端同事的建议下，我采取了使用 JSON 字段存储数组的情况来解决这个问题。&lt;/p&gt;&lt;p&gt;也因为这样了解了一下 MySQL 对 JSON 的支持情况，同时将 &lt;code&gt;think-model&lt;/code&gt; 做了一些优化，对 JSON 数据类型增加了支持。由于大部分 JSON 操作需要通过内置的函数来操作，这个本身是可以通过 EXP 条件表达式来完成的。所以只需要对 JSON 数据的添加和查询做好优化就可以了。&lt;/p&gt;&lt;p&gt;整体来看，配合提供的 JSON 操作函数，MySQL 对 JSON 的支持完成一些日常的需求还是没有问题的。除了作为 WHERE 条件以及查询字段之外，其它的 &lt;code&gt;ORDER&lt;/code&gt;, &lt;code&gt;GROUP&lt;/code&gt;, &lt;code&gt;JOIN&lt;/code&gt; 等操作也都是支持 &lt;code&gt;JSON&lt;/code&gt; 数据的。&lt;/p&gt;&lt;p&gt;不过对比 MongoDB 这种天生支持 JSON 的话，在操作性上还是要麻烦许多。特别是在类型转换这块，使用一段时间后发现非常容易掉坑。什么时候会带引号，什么时候会不带引号，什么时候需要引号，什么时候不需要引号，这些都容易让新手发憷。另外 &lt;code&gt;JSON_SEARCH()&lt;/code&gt; 不支持数字查找这个也是一个不小的坑了。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c1cea57d3bc63458d658fbefb8cc3865</guid>
<title>[推荐] 广告系统架构解密</title>
<link>https://toutiao.io/k/47r3fu1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img data-ratio=&quot;0.563725471496582&quot; data-type=&quot;jpeg&quot; data-w=&quot;408&quot; data-backw=&quot;578&quot; data-backh=&quot;325&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AaabKZjib2kbg4zuIEDFjUSR9O7Q7ZVMXmdjb8ib6icBL8BfbK2WdIswiaDib85gSMweYBNqficFE0WdpqDkM3TEdqNA/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;广告、增值服务、佣金，是互联网企业最常见的三种盈利手段。在这3大经典中，又以广告所占的市场份额最大，几乎是绝大部分互联网平台最主要的营收途径，业务的重要性不言而喻。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;从技术角度来说，广告业务涉及到 &lt;/span&gt;&lt;span&gt;AI算法、大数据处理、检索引擎、高性能和高可用的工程架构 &lt;/span&gt;&lt;span&gt;等多个方向，同样有着不错的技术吸引力。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我从去年开始接触广告业务，到现在差不多一年时间了。这篇文章将结合我的个人经验，同时参考业界的优秀案例，阐述下广告系统的&lt;span&gt;架构&lt;/span&gt;实践方案，希望让大家有所收获。&lt;/span&gt;&lt;span&gt;内容包括以下3部分&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;01 广告业务简介&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;广告，&lt;span&gt;可以说无处不在。&lt;/span&gt;微信、&lt;span&gt;抖&lt;/span&gt;&lt;span&gt;音&lt;/span&gt;、B站、&lt;span&gt;百度、&lt;/span&gt;淘宝等等&lt;span&gt;，这些占据用户时间最长的 APP， 到处都能看到广告的影子。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我们每天随处可见的广告，它背后的业务逻辑到底是什么样的呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;在分享广告系统的架构之前，先给大家&lt;span&gt;快速&lt;/span&gt;普及下业务知识。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1. 广告业务的核心点是平衡&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为什么说广告业务的核心点是&lt;span&gt;「&lt;/span&gt;&lt;/span&gt;&lt;span&gt;平衡&lt;/span&gt;&lt;span&gt;&lt;span&gt;」&lt;/span&gt;？可以从广告的标准定义来理解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;广告被定义为：&lt;/span&gt;&lt;span&gt;广告主以付费方式通过互联网平台向用户传播商品或者服务信息的手段&lt;/span&gt;&lt;span&gt;。这个定义中涉及到 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;广告主、平台、用户&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;3个主体，但是这3个主体的利益关注点各不相同。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5833333333333334&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;504&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbzcFiaxB4bdlqYY4icsLGmwc6dib6ATqjCjr0Fibwq2SWiaic49j95GZse1cAet8ouT3RiciaxrABC2LXLBw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图1：&lt;/span&gt;&lt;span&gt;广告业务的三角平衡&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;有时候&lt;/span&gt;这三者的利益是冲突的，比如平台增加了广告位数量，收益肯定增加，但用户体验可能变差，因此广告业务最终要寻找的是三方的平衡&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;站在平台的角度来看广告业务，它在&lt;/span&gt;&lt;span&gt;保证用户体验的同时，要兼顾绝大部分广告主的ROI（确保他们是可以赚到钱的），在此基础上再考虑将平台的收入最大化，这样才是一个健康的广告生态。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;2. 从收入的分解公式认清广告的本质&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;p&gt;广告业务发展了几十年，广告费用的结算方式也诞生了很多种，我们最常见的有以下几种：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;CPT&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;：&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;按时间计费，独占性包时段包位置&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;CPM：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;按照每千次曝光计费&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;CPC：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;按照点击计费&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;CPA：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;按照行为计费（比如下载、注册等）&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6308186195826645&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;623&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbg4zuIEDFjUSR9O7Q7ZVMXl2o6YibrWHckSWpeicibltosFibU8XrrtzEYUW797mGzJff71zLt2PbL3g/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2：&lt;/span&gt;&lt;span&gt;广告费用的结算方式演进&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;之所以有不同的结算方式，其实也是随着广告市场的发展逐渐衍生出来的，最开始流量稀缺，平台占优势，再到今天逐渐成了买方市场，广告主作为需求方的谈判权变大。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;上面这个图可以看出，由于CPA代表了广告主最终想要的转化效果，因此按CPA结算时对广告主最有利，但是对平台最不利。结算方式演进到今天，其实也是一种平衡，所以处于平衡点附近的CPM和CPC是最常见的结算方式。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以CPC为例，收入可分解成下面这个公式：&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1674074074074074&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;675&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbg4zuIEDFjUSR9O7Q7ZVMXyS1s2v518qvSBic2AsTpOqAxS7qcVbibdczOSibrXLr0Kg3K0EZNWX3tw/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其中，PV表示系统的访问量，PVR和ASN表示广告的填充率，CTR表示广告的点击率，ACP表示广告的平均点击价格。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;上述各个指标都可以通过一系列的广告策略来提升。&lt;/span&gt;&lt;span&gt;比如填充率可通过开发更多的广告主来实现，&lt;/span&gt;&lt;span&gt;CTR可通过AI算法做到精准投放来提升，&lt;/span&gt;&lt;span&gt;ACP可通过精准流量溢价或者提升广告主ROI来完成。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;掌握上面这个收入分解公式，对于理解广告业务至关重要，任何业务上的动作几乎都能关联到这个公式的某个指标上。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;3. 广告的核心业务流程&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;广告业务发展到今天，随着广告主对投放效果的诉求不断加强，精准定向以及实时竞价是目前最主流的业务形态。&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对互联网平台来说，初期一般都是采用&lt;span&gt;「&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;自营的竞价广告网络&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;」&lt;/span&gt;来实现商业变现，简单理解：就是利用平台自有的流量以及自主开发的广告主来实现业务闭环。&lt;/span&gt;&lt;span&gt;本文所分享的广告架构主要针对这种业务形态&lt;/span&gt;&lt;span&gt;，它的核心业务流程如下图所示。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.6225489974021912&quot; data-type=&quot;jpeg&quot; data-w=&quot;408&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AaabKZjib2kaFibAspYXvmgJZic0c9KBdTnciaykibBnVuRiaIjdldljOXbSCSgSLRVbGL4u28ttERyvnaI1Pdkcoiaicg/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图3：&lt;/span&gt;&lt;span&gt;广告的核心业务流程&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;广告主先通过投放平台发布广告，可设置一系列的定向条件，比如投放城市、投放时间段、人群标签、出价等。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;投放动作完成后，广告会被存放到广告库、同时进入索引库，以便能被广告检索引擎召回&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;C端请求过来后，广告引擎会完成召回、算法策略、竞价排序等一系列的逻辑，最终筛选出Top N个广告，实现广告的千人千面。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;用户点击广告后，会触发广告扣费流程，这时候平台才算真正获得收益。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;上面是广告业务的核心流程，随着平台流量以及广告主规模进一步增大，往往会从&lt;span&gt;「&lt;/span&gt;&lt;strong&gt;自营型竞价网络&lt;/strong&gt;&lt;span&gt;」&lt;/span&gt;逐渐向&lt;span&gt;「&lt;/span&gt;&lt;strong&gt;联盟广告以及RTB实时竞价&lt;/strong&gt;&lt;span&gt;」&lt;/span&gt;方向发展，类似于&lt;span&gt;阿里妈妈&lt;/span&gt;、&lt;/span&gt;&lt;span&gt;腾讯广点通、头条巨量引擎，此时业务复杂度和技术架构&lt;span&gt;会再上一个台阶&lt;/span&gt;，本文不作展开，后续再跟大家详细分享&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;02 面临的技术挑战&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对广告业务有了初步了解后，再来看下广告系统面临的技术挑战：&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;高并发&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：广告引擎和C端流量对接，请求量大（平峰往往有上万QPS），要求&lt;span&gt;实时&lt;span&gt;响应&lt;/span&gt;&lt;/span&gt;，必须在几十毫秒内返回结果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;业务逻辑复杂&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：一次广告请求，涉及到多路召回、算法模型打分、竞价排序等复杂的业务流程，策略多，执行链路长。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3、&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;稳定性要求高&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：广告系统直接跟收入挂钩，广告引擎以及计费平台等核心系统的稳定性要求很高，可用性至少要做到3个9。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4、&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;大数据存储和计算&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：随业务发展，推广数量以及扣费订单数量很容易达到千万甚至上亿规模，另外收入报表的聚合维度多，单报表可能达到百亿级别的记录数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;5、&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;账务的准确性&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：广告扣费属于金融性质的操作，需要做到不丢失、不重复，否则会损害某一方的利益。另外，如果收入数据不准确，还可能影响到业务决策。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;03 广告系统架构详解&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;了解了广告业务的目标和技术挑战后，接下来详细介绍下广告系统的整体架构和技术方案。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;346&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5990338164251208&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1035&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbzcFiaxB4bdlqYY4icsLGmwctPemBL4dpqZoxHXnCc92SSAvtSJkqhuSDKC2YjFIv4RwSLYWGqP7iaQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图4：广告系统的整体架构&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面是我们公司&lt;span&gt;目&lt;/span&gt;&lt;span&gt;前&lt;/span&gt;的广告系统架构图，&lt;span&gt;这个架构适用于广告业务初期，&lt;/span&gt;&lt;span&gt;针对的是&lt;/span&gt;&lt;span/&gt;&lt;span&gt;「&lt;/span&gt;&lt;strong&gt;&lt;span&gt;自营型的竞价网络和站内流量&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;」，不涉及联盟广告。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;下面针对各个子系统做下说明：&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;广告投放系统&lt;/strong&gt;&lt;/span&gt;：供广告主使用，核心功能包括会员续费、广告库管理、设定推广条件、设置广告出价、查看投放效果等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;广告运营后台&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：供平台的产品运营使用，核心功能包括广告位管理、广告策略管理、以及各种运营工具。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;广告检索平台&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：承接C端的高并发请求，负责从海量广告库中筛选出几个或者几十个广告，实时性要求高，这个平台通常由多个微服务组成。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;AB实验平台&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：广告业务的稳定器，任何广告策略上的调整均可以通过此平台进行灰度实验，观察收入指标的变化。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;广告计费平台&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：面向C端，负责实时扣费，和收入直接挂钩，&lt;span&gt;可用性要求高。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;账务管理中心&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：广告业务中的财务系统，统管金额相关的业务，包括充值、冻结、扣费等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;大数据平台&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：整个广告系统的底盘，需要聚合各种异构数据源，完成离线和实时数据分析和统计，产出业务报表，生产模型特征等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;下面再针对架构中的技术难点展开做下介绍。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;1. 广告数据的存储&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;广告系统要存储的数据多种多样，特点各不相同，采用的&lt;span&gt;是&lt;/span&gt;&lt;span&gt;多模的数据存储方式。&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;393&quot; data-backw=&quot;552&quot; data-ratio=&quot;0.7119565217391305&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;552&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbzcFiaxB4bdlqYY4icsLGmwczqqNQgCezYouibQnvFX3axIPUj4SNFpzTSwdm5KUvYTwhYicicgoS6DPg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图5：广告数据的多模存储&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;存储上还需要解决的一个问题是：广告的同步问题。广告投放完成后，首先会存储在MySQL数据库中，接下来需要把广告实时传输到检索系统中，完成正排索引以及倒排索引的更新。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;330&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5709969788519638&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;662&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbzcFiaxB4bdlqYY4icsLGmwcHAiaWa7KPvHZo78cgplGOPhT4Gyns5skz3UKu8TKG2kjqLicXuvT7jGw/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;图6：广告索引的&lt;span&gt;更新&lt;/span&gt;&lt;/span&gt;&lt;span&gt;流程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;索引更新服务，有几个要点说明下：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;各个业务系统在推广、余额等信息变更时，发MQ消息，索引更新服务订阅MQ来感知变化，完成增量同步。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;变更的消息体中，不传递实际变更的字段，仅通知有变化的广告ID，索引更新服务实时读取最新数据完成更新，这样可以有效的解决消息乱序引起的数据不一致问题。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;当更新索引的并发达到一定量级后，可通过合并相同广告的变更、或者将倒排和正排更新分离的方式来&lt;span&gt;提&lt;/span&gt;&lt;span&gt;升整体的更新速度&lt;/span&gt;。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;2. 广告检索平台的整体流程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;广告检索平台负责承接C端的流量请求，从海量广告库中筛选出最合适的前N个广告，并在几十毫秒内返回结果，它是一个多级筛选和排序的过程。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;437&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.7564766839378239&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;772&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbg4zuIEDFjUSR9O7Q7ZVMXkaibrkAasMmmymvDxyoBcUFXtesryqZxDgICY3mwIQM8U0cwRLcSdVA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图7：广告检索平台的整体&lt;/span&gt;&lt;span&gt;流程&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Recall层侧重算法模型，Search层侧重业务。从下到上，计算复杂度逐层增加，候选集逐层减少。（说明：&lt;span&gt;搜索广告场景和推荐广告场景在某些子模块上存在差异，但整体流程基本一致，这里不作展开）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;性能设计是检索平台的重点，通常有以下手段：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;做好服务分层，各层均可水平扩展。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;采用Redis缓存，避免高并发请求直接打到数据库，缓存可按业务规划多套，进行分流。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;采用多线程并行化某些子流程，比如多路召回逻辑、多模型打分逻辑。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;热点数据进行本地缓存，比如广告位的配置信息以及策略配置信息，在&lt;span&gt;服务启动时就可以预加载到本地，然后定时进行同步。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;非核心流程&lt;/span&gt;设置超时熔断走降级逻辑，比如溢价策略（不溢价只是少赚了，不影响广告召回）。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;和&lt;span&gt;主流程无关的逻辑异步执行&lt;/span&gt;，&lt;span&gt;比如扣费信息&lt;span&gt;缓&lt;/span&gt;&lt;span&gt;存&lt;/span&gt;、召回结果缓存等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;精简RPC返回结果或者Redis缓存对象的结构，去掉不必要的字段，减少IO数据包大小。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;GC优化，包括JVM堆内存的&lt;span&gt;设置&lt;/span&gt;、垃圾收集器的选择、GC频次优化和GC耗时优化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;3. 计费平台的技术方案&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;计费平台也是一个核心系统，主要完成实时扣费功能。比如CPC结算方式下，广告主设置的预算是50元，每次点击扣1元，当扣费金额达到预算时，需要将广告及时下线。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;除此之外，计费平台还需要支持CPM、CPT等多种结算方式，以及支持反作弊、余额撞线处理、扣费订单的摊销和对账等功能。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;计费平台的特点是：并发高、数据量大、同时可用性要求高，需要做到不少扣，不重复扣。下面以CPC实时点击扣费为例，详细说下技术方案。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;521&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.9013452914798207&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;669&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbzcFiaxB4bdlqYY4icsLGmwcYhRXGvaTJg3icM4yn8MJ1ia3Xn7LVBkWukvXdLxdOM6S9XPGXT2V8ZibA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;图8：CPC实时扣费流程&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;首先，整个扣费流程做了异步化处理，当收到实时扣费请求后，系统先将扣费时用到的信息缓存到Redis，然后发送MQ消息，这两步完成后扣费动作就算结束了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这样做的好处是：能确保扣费接口的性能，同时利用MQ的可靠性投递和重试机制确保整个扣费流程的最终一致性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了提高可用性，针对Redis和MQ不可用的情况均采用了降级方案。Redis不可用时，切换到TiKV进行持久化；MQ投递失败时，改成线程池异步处理。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外，每次有效点击都需要生成1条扣费订单，面临大数据量的存储问题。目前我们采用的是MySQL分库分表，后期会考虑使用HBase等分布式存储。另外，订单和账务系统之间的数据一致性，采用大数据平台做天级别的增量抽取，通过Hive任务完成对账和监控。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;4. OLAP海量数据报表的技术方案&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据报表是也是广告平台的核心业务，它是广告主、平台运营人员进行投放优化、业务决策的依据。&lt;/span&gt;&lt;span&gt;先来看下广告数据仓库的分层结构：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;353&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.6103151862464183&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;698&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AaabKZjib2kbzcFiaxB4bdlqYY4icsLGmwcUUdgq9DmJPyXHEM8OL33aRFr9TcfClXeibzcJg1sMrKoCibE8oDrluyQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图9：广告数据仓库的分层结构&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;源数据层&lt;/strong&gt;&lt;/span&gt;：对应各种源数据，包括&lt;span&gt;HDFS中实时采集的&lt;/span&gt;前后端日志，增量或者全量同步的MySQL业务数据表。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据仓库层&lt;/strong&gt;&lt;/span&gt;：包含维度表和事实表，通常是对源数据进行清洗后的数据宽表，比如行为日志表、推广宽表、用户宽表等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据集市层&lt;/strong&gt;&lt;/span&gt;：对数据进行轻粒度的汇总表，比如广告效果表、用户行为的全链路表、用户群分析表等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据应用层&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：上层应用场景直接使用的数据表，包括多维分析生成的各种收入报表、Spark任务产出的算法模型特征和画像数据等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;采用这样的分层结构，和软件分层思想类似，提高了数据的维护性和复用性&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;再来看应用层报表部分面临的挑战：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;聚合维度多，&lt;/span&gt;&lt;span&gt;需要分时、分广告位、分推广等几十个维度；&lt;/span&gt;&lt;span&gt;&lt;span&gt;单表最大达到百亿级别；支持时间范围的实时查询。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这部分由公司的大数据部门维护，采用了开源的技术方案，离线部分使用Kylin，数据存储在HBase中；实时部分使用Flink和Spark Streaming，数据存储在Druid中。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;写在最后&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;本文详细介绍了广告系统的初期架构和核心技术方案。随着业务演进，架构也会随之变得更加复杂，但是&lt;/span&gt;&lt;span&gt;大数据存储、&lt;span&gt;高&lt;/span&gt;&lt;span&gt;并发、&lt;/span&gt;高可用，始终是广告业务的技术难点&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;关于广告系统的稳定性保障、广告策略的可扩展性设计、RTB实时竞价的系统架构等有价值的内容，后续再分享给大家，欢迎关注我的公号。&lt;/span&gt;&lt;span&gt;针对本篇文章，如果有任何疑问或者建议，可以留言讨论&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt; 往期推荐：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;技术琐话 &lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;以分布式设计、架构、体系思想为基础，兼论研发相关的点点滴滴，不限于代码、质量体系和研发管理。本号由坐馆老司机技术团队维护。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-copyright=&quot;0&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;188&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;188&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;860&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nhlGsolibOWEup6pcFSoqDWX2CnKtr2ibick4zKc3GbnGwOU6OfRibTYDbP4ueZgYDVIQX96Wic9KibEX710j1jsqWicg/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4df88e9d7742e6aadbce9e47f50f77de</guid>
<title>[推荐] 研发效能杂谈</title>
<link>https://toutiao.io/k/zacmqw3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;post-content&quot;&gt;&lt;p&gt;研发效能是什么？为什么现在都在谈如何提高研发效能？研发效能对于一个企业到底有多重要？本文按照Why、What、How三步走沉淀梳理了研发效能相关的知识点。&lt;/p&gt;




&lt;h2&gt;一. 为什么要提升研发效能&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;传统的职能部门组织架构带来的效率竖井问题&lt;/li&gt;
&lt;li&gt;人力的增加没有让项目进度加快&lt;/li&gt;
&lt;li&gt;长久加班导致团队士气低落，后续的效率降低&lt;/li&gt;
&lt;li&gt;上线前加班、熬夜，压力大&lt;/li&gt;
&lt;li&gt;上线后Bug、事故频发，实现效果与需求不匹配&lt;/li&gt;
&lt;li&gt;各种重复低效工作，疲于应付业务&lt;/li&gt;
&lt;li&gt;想要有限的人力做更多的产出&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;二. 什么是研发效能&lt;/h2&gt;

&lt;p&gt;对于一个企业来说，追求的是企业效能的最大化，包括：利润、用户规模、客户满意度、运营效率等。而对于需要研发自有产品的互联网公司来说，研发效能则是服务于企业效能的至关重要的因素。&lt;/p&gt;

&lt;p&gt;一个软件研发的完整流程如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_images/dev/devprocess.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;此流程交付期望产品的效率和能力，即研发效能。更进一步的《研发效率破局之道》中将研发效能定义为团队能够持续地为用户产生有效价值的效率，包括 &lt;strong&gt;有效性（Effectiveness）、效率（Efficiency）和可持续性（Sustainability）&lt;/strong&gt; 三个方面。其增加的可持续性指出研发效能应该着眼于长期效果。&lt;/p&gt;

&lt;p&gt;一句话来讲，研发效能就是持续快速交付价值的能力。&lt;/p&gt;

&lt;h2&gt;三. 如何提升研发效能&lt;/h2&gt;

&lt;p&gt;对应于第一部分中讲述的软件开发流程，如果想要提升研发效能，那么需要落实到研发流程（组织结构、项目管理、持续交付）、工程方法、个人效能以管理和文化的实践上。本文重点从研发流程、工程方法两方面来讲。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_images/dev/whole.png&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;3.1 衡量指标&lt;/h3&gt;

&lt;p&gt;评估一个组织持续快速交付价值的能力，需要一组可量化的数据或参数，用来跟踪和评估开发过程的“健康”状况。&lt;/p&gt;

&lt;h4&gt;3.1.1 指标分类&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;持续发布能力

&lt;ul&gt;
&lt;li&gt;发布频率：单位时间内的有效发布次数&lt;/li&gt;
&lt;li&gt;发布前置时间：从代码提交到功能上线花费的时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;需求响应周期

&lt;ul&gt;
&lt;li&gt;交付周期时间：从确认用户提出的需求开始，到需求上线经历的平均时长。&lt;/li&gt;
&lt;li&gt;开发周期时间：从开发团队理解需求开始，到需求可以上线所经历的平均时长。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;交付吞吐率


&lt;/li&gt;
&lt;li&gt;交付过程质量：质量内建

&lt;ul&gt;
&lt;li&gt;缺陷创建和修复时间分布：缺陷能够持续和及时地被发现，并在发现后尽快修复。&lt;/li&gt;
&lt;li&gt;缺陷库存：开发过程控制缺陷库存量，让产品始终处于接近可发布状态，是持续交付的基础&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;交付质量：系统的可用性


&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;3.1.2 通用目标&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;2：2周交付周期。从想法提出并确认到上线的时间。【跨职能、组织的协调一致和紧密协作】&lt;/li&gt;
&lt;li&gt;1：1周开发周期。从需求设计完成（对开发就绪）到达到可上线的时间。【需求的拆分和管理，开发团队的分工协作模式，持续交付实践】&lt;/li&gt;
&lt;li&gt;1：1小时的发布前置时间。代码提交后可以在1小时内完成发布。【持续交付流水线】&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;3.1.3 选择优化指标&lt;/h4&gt;

&lt;p&gt;流程中总是有一个核心瓶颈。分析关键路径、定位瓶颈，针对优化&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用指标来发现问题而不是做绩效考核&lt;/li&gt;
&lt;li&gt;使用指标来检验优化效果&lt;/li&gt;
&lt;li&gt;使用价值流图/累积流程图发现全局瓶颈，从而确定需要提升的度量指标&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;3.2 组织结构&amp;amp;&amp;amp;项目管理&lt;/h3&gt;

&lt;h4&gt;3.2.1 组织结构&lt;/h4&gt;

&lt;p&gt;避免“效率竖井”： 采用以业务为单位的组织架构，保证业务线全栈配齐，目标一致。并从全局定位瓶颈进而进行优化工作。&lt;/p&gt;

&lt;h4&gt;3.2.2 项目管理&lt;/h4&gt;

&lt;p&gt;使用敏捷开发来提升研发效率&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;敏捷 = 价值观 + 原则 + 一系列符合价值观和原则的方法。

&lt;ul&gt;
&lt;li&gt;软件应该一直处于可工作状态&lt;/li&gt;
&lt;li&gt;每个迭代都能将软件部署到一个类生产环境中，并向用户演示&lt;/li&gt;
&lt;li&gt;迭代长度不超过两周&lt;/li&gt;
&lt;li&gt;透明性、协作性、纪律性和持续改进&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用MVP，度量驱动开发&lt;/li&gt;
&lt;li&gt;流程尽快流动：工程方法支撑&lt;/li&gt;
&lt;li&gt;发现整个流程中的瓶颈，并解决：可视化工作流、事故复盘&lt;/li&gt;
&lt;li&gt;避免“小瀑布”

&lt;ul&gt;
&lt;li&gt;价值排序&lt;/li&gt;
&lt;li&gt;满足客户需要&lt;/li&gt;
&lt;li&gt;需求拆分成能够独立测试的需求！！！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;看板

&lt;ul&gt;
&lt;li&gt;从个人转变到关注价值流动：待开发-&amp;gt;设计-&amp;gt;开发-&amp;gt;开发自测-&amp;gt;代码评审-&amp;gt;测试-&amp;gt;完成&lt;/li&gt;
&lt;li&gt;明确的“完成的定义”DoD，明确了状态迁移必须完成的活动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从实际出发、以终为始：以实用主义的态度，从原则出发，灵活优化流程&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;一个可供参考的项目管理标准动作可见：&lt;a href=&quot;https://www.rowkey.cn/blog/2020/07/31/project-manage/&quot;&gt;项目管理标准模板&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;3.3 持续交付&lt;/h3&gt;

&lt;p&gt;持续交付指的是在短周期内完成软件产品，以保证软件保持在随时可以发布的状态。让每一个变更都经过一条自动化的检验流水线，来检查每一个变更的质量，通过就进入下一个阶段。&lt;strong&gt;其不是一种工具，而是一种实践！&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;不要阻塞开发人员&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;每个团队指定构建负责人或者发布工程师：优化交付流水线，提升交付效率&lt;/li&gt;
&lt;li&gt;项目状态，应该对参与整个过程（包括构建、部署、测试和发布）的所有人都是可见的&lt;/li&gt;
&lt;li&gt;风险管理

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;迭代增量式交付&lt;/strong&gt;是有效风险管理的关键&lt;/li&gt;
&lt;li&gt;手工测试环境、试运行环境和生产环境总是需要严格的访问控制&lt;/li&gt;
&lt;li&gt;让风险识别成为每日立会的一部分&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;审计

&lt;ul&gt;
&lt;li&gt;手工测试环境、试运行环境和生产环境总是需要严格的访问控制：指定谁能够访问“特权”环境。&lt;/li&gt;
&lt;li&gt;要求每次部署都要进行审计，以确切知道到底修改了哪些内容。&lt;/li&gt;
&lt;li&gt;文档自动化、自文档&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;具体可见：&lt;a href=&quot;https://www.rowkey.cn/blog/2020/06/15/cd/&quot;&gt;持续交付这点事&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;3.3 工程方法&lt;/h3&gt;

&lt;h4&gt;3.3.1 技术债&lt;/h4&gt;

&lt;p&gt;在开发产品或者功能的过程中，没有使用最佳的实现方法而引入的技术问题。需要持续关注业务和技术债。对业务机会敏感，敢放手一搏大量借贷，也知道什么时候必须偿还技术债。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;利用技术债的好处，必要时要大胆“举债前行”&lt;/li&gt;
&lt;li&gt;控制技术债，在适当的时候偿还适当部分的技术债。&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;3.4.2 云计算&lt;/h4&gt;

&lt;p&gt;利用好云计算带来的&lt;strong&gt;服务化、自助化和弹性伸缩&lt;/strong&gt;三大优势。初创公司在业务刚起步时，使用 SaaS 或者 PaaS 快速开发业务；业务成长到一定规模之后，再逐步转到 IaaS 以及私有云降低成本。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;细节抽象得越多，云服务商负责的部分就越多，我们就越能够聚焦自己的业务，从而提高研发效能&lt;/li&gt;
&lt;li&gt;使用云资源时，通过工具或者 API 调用来完成工作，减少人工参与，达到自动化&lt;/li&gt;
&lt;li&gt;资源共享、弹性伸缩&lt;/li&gt;
&lt;li&gt;容器：不可变基础设施；基于K8S建设PaaS&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;在使用云计算时，要妥善处理它带来的挑战，比如分布式系统带来的安全和控制方面的问题。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自治和集中管理相结合：信息可视化（系统整体的质量看板、调用链追踪）&lt;/li&gt;
&lt;li&gt;错误处理&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;3.4.3 测试机制&lt;/h4&gt;

&lt;p&gt;上文持续交付一部分中最关键的其实就是测试部分，只有具有完善、可靠的测试机制，才能保证研发质量和交付效果，才能从根本上提高研发效能。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;测试左移：质量内建，即持续交付中的测试机制。

&lt;ul&gt;
&lt;li&gt;按照功能的维度管理团队，让整个功能团队对产品负责；改变团队成员对测试工作的认知&lt;/li&gt;
&lt;li&gt;把测试添加到开发和产品需求步骤中&lt;/li&gt;
&lt;li&gt;频繁测试，快速测试：提升测试运行的速度，并行运行、提高构建速度、精准测试、分层测试、减少不必要的用例&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;测试右移

&lt;ul&gt;
&lt;li&gt;利用线上的真实环境测试：需要有完备的数据隔离机制&lt;/li&gt;
&lt;li&gt;测试人员介入线上监控和预警，及时发现问题并跟进解决&lt;/li&gt;
&lt;li&gt;混沌工程：即在真实环境中通过模拟各种不可预期的故障来验证系统稳定性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;3.4.4 平台化&lt;/h4&gt;

&lt;p&gt;通过抽象共性组件、功能，达到代码、功能复用，从而减少重复开发，提高研发效能。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;技术平台：技术设施的复用&lt;/li&gt;
&lt;li&gt;数据中台：数据沉淀和输出能力&lt;/li&gt;
&lt;li&gt;移动中台：前端组件、跨平台开发、插件化、热加载&lt;/li&gt;
&lt;li&gt;业务中台


&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;相关资料可见：&lt;a href=&quot;https://www.rowkey.cn/blog/2019/11/23/middle-talk/&quot;&gt;中台简谈&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;3.5 个人效能&lt;/h3&gt;

&lt;p&gt;如何提高开发人员自身的开发效率，除了每个人自身的天赋能力外，也有一些可以刻意使用的高效工具和方法。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;高效工作方法


&lt;/li&gt;
&lt;li&gt;高效开发工具

&lt;ul&gt;
&lt;li&gt;好的IDE&lt;/li&gt;
&lt;li&gt;操作系统快捷键&lt;/li&gt;
&lt;li&gt;思维导图软件&lt;/li&gt;
&lt;li&gt;学习笔记软件&lt;/li&gt;
&lt;li&gt;文档撰写工具&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;持续学习：不断地学习新的开发技能，从而提升自己的开发效率&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;此外，还可以通过技术管理从外部驱动个人效能的提升，这在下面的技术管理部分会讲。&lt;/p&gt;

&lt;h3&gt;3.6 管理和文化&lt;/h3&gt;

&lt;h4&gt;3.6.1 技术管理&lt;/h4&gt;

&lt;p&gt;管理包括：看方向、管人、管事。做好技术管理是提高研发效能的关键部分。其中，3.4节个人效能部分的数字驱动也是技术管理的一部分。主要步骤包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;制定目标：兼顾业务目标和技术目标&lt;/li&gt;
&lt;li&gt;目标管理：使用OKR等目标管理方案&lt;/li&gt;
&lt;li&gt;计划并执行去实现目标&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;此外，技术管理中一个很难的问题是如何进行考核。这里可以使用数字化的方式，以驱动个人效能的提升。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;选择个人效能度量指标&lt;/li&gt;
&lt;li&gt;根据代码提交日志自动生成工作日报和周报、个人贡献值&lt;/li&gt;
&lt;li&gt;综合多维数据构建个人的数据画像

&lt;ul&gt;
&lt;li&gt;社会地位：用排名、榜单来实现；&lt;/li&gt;
&lt;li&gt;工作本身：用复合型报告去综合评价，告知员工究竟做得好不好&lt;/li&gt;
&lt;li&gt;自我改变：通过雷达图，进行多维度的数据分析，精准提炼员工的优点与不足，员工可以有针对性的取长补短。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;需要说明的是，如果指标不能全方面的衡量，就不要做为考核指标，仅仅用于发现问题，解决问题！&lt;/p&gt;

&lt;p&gt;一个可参考的技术管理标准动作模板见：&lt;a href=&quot;https://www.rowkey.cn/blog/2020/04/25/tech-leader-manage/&quot;&gt;技术管理标准模板&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;3.6.2 团队文化&lt;/h4&gt;

&lt;p&gt;团队文化是团队成员共同认可的价值观和行为准则，良好且有效的文化是保障团队高效产出的关键部分。很多互联网公司都是工程师文化主导的，包括Facebook、Google、百度等。他们也都具有自己独特的企业文化价值观，如百度的简单可依赖、谷歌的不作恶、Netflix的自由和责任。建立团队文化的步骤如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;定义：总结、明确自己团队的文化，提炼出简单易记的文字。&lt;/li&gt;
&lt;li&gt;主张：各种形式的传播。从我自己的经历来看，不断地念经是其中最有效的方式。&lt;/li&gt;
&lt;li&gt;追求：在奖惩中体现出文化价值观的作用。如对于文化价值观贯彻优秀的同学给与公开的肯定与奖励。&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;四. 参考资料&lt;/h2&gt;



&lt;/div&gt;



  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>732d27627d8c5bc6375f0b7cc61cbd82</guid>
<title>[推荐] HDFS + Clickhouse + Spark：从 0 到 1 实现一款轻量级大数据分析系统</title>
<link>https://toutiao.io/k/tyygn3e</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe977Xa5zfy5iaV3agpS11Cqm4psjPOibic6BZSicnBFh6uWzCFp3uqN5R114Fq85DmuCzdL3eESlQ37bFA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;导语 | &lt;/span&gt;&lt;span&gt;在产品精细化运营时代，经常会遇到产品增长问题：比如指标涨跌原因分析、版本迭代效果分析、运营活动效果分析等。这一类分析问题高频且具有较高时效性要求，然而在人力资源紧张情况，传统的数据分析模式难以满足。本文尝试从0到1实现一款轻量级大数据分析系统——MVP，以解决上述痛点问题。文章作者：数据熊（笔名），腾讯云大数据分析工程师。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;一、背景及问题&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在产品矩阵业务中，通过仪表盘可以快速发现增长中遇到的问题。然而，如何快速洞悉问题背后的原因，是一个高频且复杂的数据分析诉求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果数据分析师通过人工计算分析，往往会占用0.5-1天时间才能找到原因。因此，人工计算分析方式，占用人力大，且数据分析效率低。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.2839090143218197&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHIbqe3n0Kzs701uoJfv9yOujghcWwQVgWsufMlPvk0QibYlyZicNUVWiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1187&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另外，产品版本迭代与业务运营活动，也需要对新版本、新功能、新活动进行快速数据分析，已验证效果。&lt;/span&gt;&lt;span&gt;因此，在产品矩阵业务精细化运营中，存在大量的数据分析诉求，且需要快速完成。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在传统的数据分析模式下，对于每个需求，一般需要经历3-5天才能解决问题。除此之外，该模式还需要大量数据分析师对接需求。因此，在数据分析师人力紧缺情况下，该模式无法满足产品增长的数据分析诉求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.15467328370554176&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHicawErN4QpRWdMj18mVxykbHK3kcDzibCLclxxdYZ4ZbFd89dkcXGlUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1209&quot;/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;二、解决办法&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在传统数据分析模式失效情况下，急需开拓新的数据分析模式，以快速满足产品增长的数据分析诉求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为此，笔者和项目小团队从0到1实现一款轻量级大数据分析系统——MVP，希望通过MVP数据分析，驱动产品从&quot;Minimum Viable Product&quot; to &quot;Most Valuable Product&quot;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;除此之外，通过MVP数据分析系统，一方面希望提升数据分析效率；另一方面希望节省数据分析人力。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.3684654300168634&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHicFEj0l9RnW8U3iaaoj0icicxLsqe2naXCHicPojlAB8eSoIuFS0xzkN3Xg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1186&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;MVP数据分析系统分为四个模块，在产品业务-经营指标模块，基于AARRR模型对产品增长指标分析，分析产品增长北极星指标；在指标异常-根因预警模块，对增长指标异动进行监控，并提供根因线索；在分析工具-增长分析模块，对用户行为进行深入分析，洞悉用户行为；在AB-Test实验评估模块，对业务决策方案进行实验，评估业务决策的合理性。通过四个模块，实现数据分析驱动产品精细化运营。&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;三、技术实现&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;一款轻量级大数据分析系统，至少需要从数据建模、技术选型、页面交互三方面实现。数据建模如水流，贯穿整个数据分析系统；技术选型是基础设施，支撑整个系统高效运转；页面交互是面向用户，用数据说话，对业务增长进行数据赋能。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 数据建模&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在开发MVP之前，由于历史原因，现有的产品矩阵中产品与产品之间，存在数据建设分散、数据开发重复、数据隔离等问题，一个用户会存在多条信息记录。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这种数据格局，不仅会导致计算、存储、人力资源的浪费，更严重的是会很大程度影响上层数据应用的效率。因此，旧的数据模式行不通，需要开拓新的数据模式。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.6029593094944513&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHFkCoMX2jbhgn0lFhEw6iaic7vyoDNbiajZlFdOhj4Pqp7mzCXF6E4eichQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;811&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;MVP数据分析系统底层数据建设，一方面基于“用户(User)+事件ID(Event)+配置(Config)”思路，对产品数据信息进行高度抽象整合，收敛产品矩阵业务数据；另一方面，基于Key-Value模型，生成用户大宽表，一个User_Id仅有一条记录信息。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.36502820306204675&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHopnRJLxibLyIojTD8wvuTuBov6ETWtFaG0bxYibrLEcpCzCYo9eicddnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1241&quot;/&gt;&lt;span&gt;
 &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 技术选型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在日常产品数据可视化中，通常会想到使用MySQL进行页面交互式数据分析，但是MySQL数据库承载数据能力在百万级，适合对结果型数据进行分析，对于上亿级数据是无能为力。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在复杂的数据分析场景中，通常需要基于用户画像与用户行为，对用户进行OLAP多维自由交叉组合分析。因此，对于百万级以上的产品业务，使用MySQL是无法满足OLAP实时分析，需要尝试新的技术选型。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为了实现实时OLAP分析，对业界的大数据分析平台的技术方案我们进行了调研比较。业界存储引擎主要是HDFS与HBASE，计算引擎使用比较多的是Impala，Druid，Clickhouse，Spark。Druid系统维护成本高，无Join能力，且语法应用相对复杂。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt; 从计算速度角度，Clickhouse比Presto快2倍+，比Impala快3倍+，比SparkSql快约4倍，计算性能比较如下。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.604133545310016&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHmXG0uhIEaNUVTZkPtwncnlznYpdG6oprhwYBmnico6sLjAO7qicwibGmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;629&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.2418831168831169&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHFKaPD0ERibiasCyaYq15BLKCVG2I7pvAbO6xLWaESouUXkvKD7f3hiamA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1232&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;实测数据，对2.2亿+条1.79GB记录数据，进行单表聚合0.095s，分析速度18.95GB/s。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.2583479789103691&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHZMAUPvGyf25Nfcnic903svdKMnviaMECo1yn8OHOC8NIjjTcTYQqXwSg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1138&quot;/&gt;&lt;span&gt;
 &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;和Impala相比，Clickhouse可以通过JDBC直接导入，数据导入成本低，Clickhouse系统维护成本相对低。另外，Clickhouse语法简单，易用性很强，对页面开发友好，可以快速开发出可视化页面。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基于上面这些因素，我们采用HDFS+Clickhouse+Spark技术方案。在这里，使用Spark补齐Clickhouse无法进行大规模Join操作短板，比如处理大规模复杂的关联分析任务。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另外，Spark可以无缝访问HDFS中Hive表数据，无需重新导数据，应用效率高。使用HDFS存储历史全量用户标签与用户行为数据（占比约80%），使用Clickhouse存储近期用户标签与用户行为数据（占比20%）。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.0333863275039745&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHrvQZU73FiaxFXJNERtSxf31hwpbicwCLoCntibHpg8lpiaEh7IwvalMqMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;629&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;3. 页面交互&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;MVP页面交互形式，80%数据分析诉求是可以直接通过页面实时分析完成，剩下约20%复杂分析任务，是通过提交任务式分析完成。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;页面实时分析秒级返回分析结果，提交任务式分析需要5-15分钟返回结果。经营指标体系、事件模型分析、漏斗模型分析、留存模型分析等，是通过页面实时分析完成，用户人群画像洞察、用户兴趣偏好洞察是通过提交任务式分析完成。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5562556255625563&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHqvPhTAEyI7eRxQ2Hm3Y5vnDs0IaccmwfEqRNs330tLnPCp7JehxjyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1111&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5584532374100719&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHjwPzVtbZhlCuq9rkQ8EcxnnNJKHg48oJVPr6mDuQiclg9G7icIvicB6Tg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1112&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4. 应用效果&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;按照传统数据分析模式，根据“提出需求-&amp;gt;需求评审-&amp;gt;写需求单-&amp;gt;数据分析-&amp;gt;输出结果”的规范流程，数据诉求需要经历3-5天才能解决问题，通过MVP系统可以快速完成数据分析诉求，大大缩短工期，对分析效率提升明显。目前MVP数据分析系统已经在内部使用，近期，使用MVP进行数据分析任务数达到1500+，高峰突破两千次。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.4750337381916329&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHRFWvoBlX54p4icrlXNRLcgU9N8JYjh2XeIwK6aRaOSYNWsab7Q9HsAg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;741&quot;/&gt;&lt;span&gt;
 &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;从“人工数据分析 -&amp;gt; 工具化数据分析”的转变，对数据分析效率提升明显，更有利于数据驱动产品精细化运营。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;5. 总结&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;本文尝试介绍从0到1实现一款轻量级大数据分析系统——MVP。目前MVP数据分析系统已经在内部使用，对于提升数据分析效率明显，为数据驱动产品业务增长赋能。同时，节省了数据分析师的人力投入。后期，基于产品矩阵业务，在完善现有模块情况下，还将对各个增长工具进行进一步打磨，提升MVP使用体验。&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;MVP乘风出海，结合先悉数据平台服务产业端&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;MVP作为内部系统，目前为部门在移动数据分析中节约了大量的时间成本，并沉淀了丰富的互联网分析模板与工具。在部门服务行业客户过程中，我们发现MVP所代表的移动数据分析解决方案，是目前传统产业数字化转型同样需要的必备工具。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为此，后续我们利用轻量级数据平台——&lt;/span&gt;&lt;span&gt;&lt;strong&gt;先悉&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;作为数据底座，解决了MVP对外部署的底层平台问题，开发了可单独私有化交付给行业客户使用的MVP toB版本，帮助行业客户通过实时用户行为分析、画像洞察为驱动，优化运营策略。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.4342379958246347&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHwWhPXIwpCUSmYlXhM09blVEtCD0heaibyibSiatVPCpNuia3Kh1hj0fVbg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;479&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;先悉数据平台是一款轻量级的大数据平台产品，&lt;/span&gt;&lt;strong&gt;有部署性价比高、运维便利、可私有化等特点，能够以“小而美”的方式满足中小规模项目的大数据应用落地&lt;/strong&gt;&lt;span&gt;。在具体项目实践中，先悉数据平台+MVP形成了一套优势互补的组合，目前已经开始为行业客户提供“开箱即用”的移动分析服务。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;先悉功能简介：&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;先悉数据平台咨询/商务合作：&lt;/span&gt;&lt;em&gt;&lt;span&gt;Xdata_Suite@tencent.com&lt;/span&gt;&lt;/em&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;参考文章：&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[1] https://zhuanlan.zhihu.com/p/54907288&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;[2] https://clickhouse.tech/docs/en/sql-reference/&lt;/span&gt;&lt;span&gt;statements/create/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;文章推荐&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247499280&amp;amp;idx=1&amp;amp;sn=c17047f75f53c82aec4640480b827721&amp;amp;chksm=eaa8e440dddf6d56c157e4bb2149fdfa89350bfa1509dca7f5eadf2bbc0efc8e326578c1a6bc&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;540&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;300&quot; data-ratio=&quot;0.49901574803149606&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94OJZj2de7JQW9iaJb2lkoLHhSptLKEbHaTu6Mr6n6XAXDmicnb10MR1BZaTgS5HGUh3kAmCrqPLmeg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1016&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages __bg_gif&quot; data-ratio=&quot;0.59375&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/VY8SELNGe977Xa5zfy5iaV3agpS11Cqm4xV7ckfbmtFLyUjFID2k7yO4q8hvB4OqYoNkARZ2xuvzKvMtnmVN2BQ/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>