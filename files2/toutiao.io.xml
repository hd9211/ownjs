<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>2701f876cab9e67826818234d4f16e4e</guid>
<title>工具 | 一款功能强大，开源免费的 H5 可视化页面配置解决方案</title>
<link>https://toutiao.io/k/6phg7i3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;开发者头条&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;kaifazhetoutiao&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;程序员分享平台 | 官方应用下载地址：http://toutiao.io/download&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>da722aaabcdc6b40e6a359f38ea28496</guid>
<title>你还在用 Swagger？试试这个神器</title>
<link>https://toutiao.io/k/k9tsk1j</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天给大家安利一款接口文档生成器——JApiDocs。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Swagger想必大家都用过吧，非常方便，功能也十分强大。如果非要说Swaager有什么缺点，想必就是注解写起来比较麻烦。如果我说有一款不用写注解，就可以生成文档的工具，你心动了吗？他就是我们今天的主角——JApiDocs。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面我们一起来看看如何使用！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一、添加依赖&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.github.yedaxia&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;japidocs&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.3&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二、配置生成参数&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们新建一个项目，然后随便写一个main方法，增加生成文档的配置，然后运行main方法。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;DocsConfig config = &lt;span&gt;new&lt;/span&gt; DocsConfig();&lt;br/&gt;config.setProjectPath(&lt;span&gt;&quot;F:\\Java旅途\\japi-docs&quot;&lt;/span&gt;); &lt;span&gt;// 项目根目录&lt;/span&gt;&lt;br/&gt;config.setProjectName(&lt;span&gt;&quot;japi-docs&quot;&lt;/span&gt;); &lt;span&gt;// 项目名称&lt;/span&gt;&lt;br/&gt;config.setApiVersion(&lt;span&gt;&quot;V1.0&quot;&lt;/span&gt;);       &lt;span&gt;// 声明该API的版本&lt;/span&gt;&lt;br/&gt;config.setDocsPath(&lt;span&gt;&quot;F:\\test&quot;&lt;/span&gt;); &lt;span&gt;// 生成API 文档所在目录&lt;/span&gt;&lt;br/&gt;config.setAutoGenerate(Boolean.TRUE);  &lt;span&gt;// 配置自动生成&lt;/span&gt;&lt;br/&gt;Docs.buildHtmlDocs(config); &lt;span&gt;// 执行生成文档&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;三、编码规范&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于JApiDocs是通过解析Java源码来实现的，因此如果要想实现想要的文档，还是需要遵循一定的规范。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;3.1 类注释、方法注释和属性注释&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我们想生成类的注释，我们可以直接在类上加注释，也可以通过加@description来生成。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 用户接口类&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@RequestMapping&lt;/span&gt;(&lt;span&gt;&quot;/api/user&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;@RestController&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;UserController&lt;/span&gt; &lt;/span&gt;{}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt; * &lt;span&gt;@author&lt;/span&gt; Java旅途&lt;br/&gt; * &lt;span&gt;@Description&lt;/span&gt; 用户接口类&lt;br/&gt; * &lt;span&gt;@Date&lt;/span&gt; 2020-06-15 21:46&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@RequestMapping&lt;/span&gt;(&lt;span&gt;&quot;/api/user&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;@RestController&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;UserController&lt;/span&gt; &lt;/span&gt;{}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我们想生成方法的注释，只能直接加注释，不能通过加@description来生成。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 查询用户&lt;br/&gt; * &lt;span&gt;@param&lt;/span&gt; age 年龄&lt;br/&gt; * &lt;span&gt;@return&lt;/span&gt; R&amp;lt;User&amp;gt;&lt;br/&gt;*/&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@GetMapping&lt;/span&gt;(&lt;span&gt;&quot;/list&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; R&amp;lt;User&amp;gt; &lt;span&gt;list&lt;/span&gt;&lt;span&gt;(@RequestParam &lt;span&gt;int&lt;/span&gt; age)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    User user = &lt;span&gt;new&lt;/span&gt; User(&lt;span&gt;&quot;Java旅途&quot;&lt;/span&gt;, &lt;span&gt;18&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; R.ok(user);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JApiDocs可以自动生成实体类，关于实体类属性的注释有三种方式，生成的效果都是一样的，如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 用户名称&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; String name;&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt; * 用户年龄&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; age;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 用户名称&lt;/span&gt;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; String name;&lt;br/&gt;&lt;span&gt;// 用户年龄&lt;/span&gt;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; age;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;private&lt;/span&gt; String name;&lt;span&gt;// 用户名称&lt;/span&gt;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; age;&lt;span&gt;// 用户年龄&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他除了支持咱们常用的model外，还支持IOS的model生成效果如下：&lt;/p&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lgiaG5BicLkVfmPrsb9MqYQCVtCjB2IUZXjSBEsDhr4zicfGSNQ47u2xqkcK42zaOMNuvbicGEYwWspxAnTG4NFK5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.65406162464986&quot; data-w=&quot;714&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lgiaG5BicLkVfmPrsb9MqYQCVtCjB2IUZXSuJCnaojdk5YZ7LnuH0sR5zibDdTGKibJ5BzYYKTdDDLddAIAnT6icocQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.438375350140056&quot; data-w=&quot;714&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;3.2 请求参数&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果提交的表单是 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 类型的&lt;code&gt;key/value&lt;/code&gt;格式，则我们通过@param注解来获取参数，在参数后面添加注释，示例如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt;  * &lt;span&gt;@param&lt;/span&gt; age 年龄&lt;br/&gt;  */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@GetMapping&lt;/span&gt;(&lt;span&gt;&quot;/list&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; R&amp;lt;User&amp;gt; &lt;span&gt;list&lt;/span&gt;&lt;span&gt;(@RequestParam &lt;span&gt;int&lt;/span&gt; age)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    User user = &lt;span&gt;new&lt;/span&gt; User(&lt;span&gt;&quot;Java旅途&quot;&lt;/span&gt;, &lt;span&gt;18&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; R.ok(user);&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生成的文档效果如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;请求参数&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果提交的表单是 &lt;code&gt;application/json&lt;/code&gt; 类型的&lt;code&gt;json&lt;/code&gt;数据格式，如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt;  * &lt;span&gt;@param&lt;/span&gt; user&lt;br/&gt;  * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt;  */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@PostMapping&lt;/span&gt;(&lt;span&gt;&quot;/add&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; R&amp;lt;User&amp;gt; &lt;span&gt;add&lt;/span&gt;&lt;span&gt;(@RequestBody User user)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; R.ok(user);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生成的文档效果如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;请求参数&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;  &lt;span&gt;&quot;name&quot;&lt;/span&gt;: &lt;span&gt;&quot;string //用户名称&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;age&quot;&lt;/span&gt;: &lt;span&gt;&quot;int //用户年龄&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;3.3 响应结果&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;我们知道，如果&lt;code&gt;Controller&lt;/code&gt;声明了&lt;code&gt;@RestController&lt;/code&gt;，SpringBoot会把返回的对象直接序列成Json数据格式返回给前端。JApiDocs也利用了这一特性来解析接口返回的结果，但由于JApiDocs是静态解析源码的，因此你要明确指出返回对象的类型信息，JApiDocs支持继承、泛型、循环嵌套等复杂的类解析。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此我们不需要再写注释，它会根据我们的返回结果进行解析，效果如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;返回结果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;  &lt;span&gt;&quot;code&quot;&lt;/span&gt;: &lt;span&gt;&quot;int&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;msg&quot;&lt;/span&gt;: &lt;span&gt;&quot;string&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;data&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;name&quot;&lt;/span&gt;: &lt;span&gt;&quot;string //用户名称&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;age&quot;&lt;/span&gt;: &lt;span&gt;&quot;int //用户年龄&quot;&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终，我们生成的接口文档，如下：&lt;/p&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lgiaG5BicLkVfmPrsb9MqYQCVtCjB2IUZXatmESj3XfnydX7G69LicicTE8Gyb9piaduK1F2TjoXeXo67KttcrC2JdQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.44537037037037036&quot; data-w=&quot;1080&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;四、高级配置&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;4.1 @ApiDoc&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你不希望把所有的接口都导出，我们可以在配置中设置config.setAutoGenerate(Boolean.FALSE);然后在想要生成的接口上添加@ApiDoc。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;@ApiDoc有以下三个属性：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;result: 这个可以直接声明返回的对象类型，如果你声明了，将会覆盖SpringBoot的返回对象&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;url: 请求URL，扩展字段，用于支持非SpringBoot项目&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;method: 请求方法，扩展字段，用于支持非SpringBoot项目&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@ApiDoc&lt;/span&gt;(result = User.class, url = &lt;span&gt;&quot;/api/user/view&quot;&lt;/span&gt;, method = &lt;span&gt;&quot;post&quot;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;4.2 @Ignore&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你不想导出对象里面的某个字段，可以给这个字段加上&lt;code&gt;@Ignore&lt;/code&gt;注解，这样JApiDocs导出文档的时候就会自动忽略掉了。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;User&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Ignore&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; age;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;五、总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JApiDocs就介绍到这里了，优势劣势大家很容易就看出来了。几乎不需要注释即可生成接口文档，仅有的几个注释我们也可以通过ide来自动生成。但是JApiDocs不具备Swagger在线调试功能。如果有一天JApiDocs支持在线调试后，那时候肯定会有一大波追随者，毕竟写代码的谁喜欢写多余的注解！&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c9d56d90f4c623633fed7fb1c4ffa119</guid>
<title>MyBatis 面试题源码分析前言：MyBatis 架构以及核心内容</title>
<link>https://toutiao.io/k/gai949t</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;h1 cid=&quot;n0&quot; mdtype=&quot;heading&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;欢迎关注公众号【&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;Ccww技术博客&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;】，原创技术文章第一时间推出&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/h1&gt;&lt;hr/&gt;&lt;h3 cid=&quot;n3&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p cid=&quot;n4&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;MyBatis&lt;/code&gt;不管在是平时的使用还是在面试中都必须掌握一个知识点，&lt;code&gt;MyBatis&lt;/code&gt; 是支持自定义 SQL、存储过程和高级映射的类持久框架，跟数据库打交道的一个开源持久化框架&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n5&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;我们来看看&lt;code&gt;MyBatis&lt;/code&gt;架构：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n6&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.6463620981387479&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EvicK4z5ZDrj639hjfDI2Y8jnKNYRXvdicD4BJyYVGAcWUxTx8sSibe4oJFb1v4MU9kDDibh75DY4fBkExN8YUNmlw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1182&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n7&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;MyBatis&lt;/code&gt;的整体架构分为三层：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot; start=&quot;&quot; cid=&quot;n8&quot; mdtype=&quot;list&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n10&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;基础支持层&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n12&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;核心处理层&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n14&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;接口层&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p cid=&quot;n15&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;我们这边主要讲解一下核心处理层组件&lt;/span&gt;&lt;/p&gt;&lt;h3 cid=&quot;n16&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;核心处理层&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n17&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;在核心处理层中，实现了 &lt;code&gt;MyBatis&lt;/code&gt;的核心处理流程：&lt;code&gt;MyBatis&lt;/code&gt;的&lt;strong&gt;初始化&lt;/strong&gt;以及完成一次&lt;strong&gt;数据库操作&lt;/strong&gt;的涉及的全部流程 ,主要模块分为：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n18&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n20&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;配置解析&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n22&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;SQL 解析与参数映射&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n24&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;SQL 执行与结果集映射&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n26&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;插件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 cid=&quot;n27&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;配置解析&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n28&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;配置解析对应模块: &lt;code&gt;builder&lt;/code&gt; 和 &lt;code&gt;mapping&lt;/code&gt; ，主要组件为:&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n29&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n31&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;XMLConfigBuilder&lt;/code&gt;: 解析&lt;code&gt;mybatis-config.xml&lt;/code&gt; 配置文件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n33&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;XMLMapperBuilder&lt;/code&gt;:解析映射配置文件&lt;code&gt;Mapper.xml&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n35&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;XMLStatementBuilder&lt;/code&gt;:主要负责解析 Statement 配置，即 &lt;code&gt;&amp;lt;select /&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;insert /&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;update /&amp;gt;&lt;/code&gt;、&lt;code&gt;&amp;lt;delete /&amp;gt;&lt;/code&gt; 标签&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n37&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;MapperAnnotationBuilder&lt;/code&gt;:负责解析 Mapper 接口上的注解&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n38&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;在 Mybatis 初始化过程中，会加载 &lt;code&gt;mybatis-config.xml&lt;/code&gt; 配置文件、加载映射配置文件以及 Mapper 接口中的注解&lt;code&gt;@Mapper&lt;/code&gt;信息,&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n39&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;经&lt;code&gt;XML解析properties配置ConfigBuilder::parse&lt;/code&gt;解析的配置信息会形成相应的对象并保存到 &lt;code&gt;Configration&lt;/code&gt; 对象中。之后，根据基于&lt;code&gt;Configration&lt;/code&gt; 创建SqlSessionFactory 对象,待 &lt;code&gt;Mybatis&lt;/code&gt; 初始化完成后，可以通过 &lt;code&gt;SqlSessionFactory&lt;/code&gt; 创建 &lt;code&gt;SqlSession&lt;/code&gt; 对象并开始数据库操作。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n40&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;Configuration&lt;/code&gt;: MyBatis 所有的配置信息都维持在 Configuration 对象之中。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n41&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;SQL 解析与参数映射&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n42&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;SQL 解析模块：&lt;code&gt;scripting&lt;/code&gt; ，&lt;code&gt;XMLLanguageDriver,XMLScriptBuilder&lt;/code&gt;实现了动态 SQL 语句，其提供了多种动态 SQL语句对应的节点。比如：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n43&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n45&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt; 节点、&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n47&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;&amp;lt;set&amp;gt;&lt;/code&gt; 节点、&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n49&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;&amp;lt;foreach&amp;gt;&lt;/code&gt; 节点等 。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n50&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;通过这些节点的组合使用， 几乎可以编写出所有满足需要的 SQL。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n51&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;先解析映射文件中定义的动态 SQL 节点，然后可以根据用户传入的参数，将已解析的SQL 语句中的占位符，绑定用户传入的实参，形成数据库能执行的SQL 语句&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n53&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;SQL 执行与结果集映射&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n54&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;SQL 执行与结果集映射对应的模块：&lt;code&gt;executor&lt;/code&gt;（执行器） 和 &lt;code&gt;cursor&lt;/code&gt;（结果游标） 模块等。提供操作接口到数据处理后返回的一系列操作，主要模块有：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n55&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n57&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;SqlSession&lt;/code&gt;：MyBatis 核心 API，主要用来执行命令，获取映射，管理事务。接收开发人员提供 &lt;code&gt;Statement Id&lt;/code&gt; 和参数，并返回操作结果。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n59&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;Executor&lt;/code&gt; ：执行器，是 &lt;code&gt;MyBatis&lt;/code&gt; 调度的核心，负责 SQL 语句的生成以及查询缓存（一级/二级缓存）的维护，它会将数据库相关操作委托给 &lt;code&gt;StatementHandler&lt;/code&gt;完成。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n61&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;StatementHandler&lt;/code&gt; : 封装了&lt;code&gt;JDBC Statement&lt;/code&gt; 操作，负责对 &lt;code&gt;JDBC Statement&lt;/code&gt; 的操作，如设置参数、将Statement 结果集转换成 List 集合。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n63&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;ParameterHandler&lt;/code&gt; : 负责对用户传递的参数转换成 &lt;code&gt;JDBC Statement&lt;/code&gt; 所需要的参数。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n65&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;ResultSetHandler&lt;/code&gt; : 负责将 JDBC 返回的 &lt;code&gt;ResultSet&lt;/code&gt; 结果集对象转换成 List 类型的集合。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n67&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;TypeHandler&lt;/code&gt; : 用于 Java 类型和 JDBC 类型之间的转换。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n69&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;MappedStatement&lt;/code&gt; : 动态 SQL 的封装&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n71&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;code&gt;SqlSource&lt;/code&gt; : 表示从 XML 文件或注释读取的映射语句的内容，它创建将从用户接收的输入参数传递给数据库的 SQL。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n72&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.784471218206158&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EvicK4z5ZDrj639hjfDI2Y8jnKNYRXvdicgcGC2N3po6rTgFjBWa3gOicveKEia9sI9cibqIia09I4adTL4SichADg7WQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1494&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n73&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;插件层&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n74&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;插件层对应 模块：&lt;code&gt;plugin&lt;/code&gt; 模块主要拦截器实现&lt;code&gt;Interceptor&lt;/code&gt;的，用户可以通过自定义插件来改变 &lt;code&gt;Mybatis&lt;/code&gt; 的默认行为。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n75&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;虽然Mybatis 自身的功能非常强大，但并不能完美符合所有的应用场景，因此 &lt;code&gt;MyBatis&lt;/code&gt; 提供了插件接口，我们可以通过添加用户自定义插件的方式对 &lt;code&gt;MyBatis&lt;/code&gt; 进行扩展，例如，我们可以拦截 SQL 语句并对其进行重写。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n76&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;但MyBatis只允许使用插件来拦截的这些方法调用：&lt;strong&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/strong&gt;&lt;strong&gt;、&lt;code&gt;ParameterHandler&lt;/code&gt;&lt;/strong&gt;&lt;strong&gt;、&lt;code&gt;ResultSetHandler&lt;/code&gt;&lt;/strong&gt;&lt;strong&gt;、&lt;code&gt;StatementHandler&lt;/code&gt;&lt;/strong&gt; 接口&lt;/span&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n77&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n78&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;由于用户自定义插件会影响 MyBatis 的核心行为，因此在使用自定义插件之前，开发人员需要了解 MyBatis 内部的原理，这样才能编写出安全、高效的插件。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 cid=&quot;n79&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;接口层&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n80&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;接口层对应 &lt;code&gt;session&lt;/code&gt; 模块，其主要包括:&lt;/span&gt;&lt;/p&gt;&lt;h3 cid=&quot;n86&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;基础支持层&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n87&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;基础支持层，包含整个&lt;code&gt;MyBatis&lt;/code&gt; 的基础模块，这些模块为核心处理层的功能提供了良好的支撑。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n88&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;反射模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n89&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;反射模块对应：&lt;code&gt;reflection&lt;/code&gt; 模块，Mybatis 中的反射模块，对 Java 反射进行了很好的封装，提供了简易的 API，方便上层调用，并且对反射操作进行了一系列的优化，例如缓存了类的元数据，提高了反射操作的性能&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n90&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;类型模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n91&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;类型转换模块对应：&lt;code&gt;type&lt;/code&gt; 模块，&lt;code&gt;MyBatis&lt;/code&gt; 为简化配置文件提供了&lt;strong&gt;别名机制&lt;/strong&gt;，该机制是类型转换模块的主要功能之一。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n92&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;类型转换模块的另一个功能是&lt;strong&gt;实现 JDBC 类型与 Java 类型之间&lt;/strong&gt;的转换，该功能在为 SQL 语句绑定实参以及映射查询结果集时都会涉及：&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n98&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;日志模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n99&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;日志模块对应：&lt;code&gt;logging&lt;/code&gt; 包，MyBatis 作为一个设计优良的框架，除了提供详细的日志输出信息，还要能够集成多种日志框架，其日志模块的一个主要功能就是&lt;strong&gt;集成第三方日志框架&lt;/strong&gt;，方便开发人员和测试人员快速定位 Bug 代码&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n100&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;资源加载模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n101&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;对应 &lt;code&gt;io&lt;/code&gt; 包，资源加载模块，主要是对类加载器进行封装，确定类加载器的使用顺序，并提供了加载类文件以及其他资源文件的功能 。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n102&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;解析器模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n103&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;解析器模块对应：&lt;code&gt;parsing&lt;/code&gt; 包，解析器模块，主要提供了两个功能:&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n109&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;数据源模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n110&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;数据源模块对应：&lt;code&gt;datasource&lt;/code&gt; 包，&lt;code&gt;MyBatis&lt;/code&gt; 自身提供了相应的数据源实现，当然 MyBatis 也提供了与第三方数据源集成的接口，这些功能都位于数据源模块之中。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n111&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;数据源是实际开发中常用的组件之一。现在开源的数据源都提供了比较丰富的功能，例如，连接池功能、检测连接状态等，选择性能优秀的数据源组件对于提升 ORM 框架乃至整个应用的性能都是非常重要的。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n112&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;事务模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n113&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;事务模块对应：&lt;code&gt;transaction&lt;/code&gt; 包，MyBatis 对数据库中的事务进行了抽象，其自身提供了&lt;strong&gt;相应的事务接口和简单实现&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n114&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;在很多场景中，&lt;code&gt;MyBatis&lt;/code&gt; 会与 &lt;code&gt;Spring&lt;/code&gt; 框架集成，并由 &lt;strong&gt;Spring 框架管理事务&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n115&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;缓存模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n116&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;缓存模块对应：&lt;code&gt;cache&lt;/code&gt; 包，&lt;code&gt;MyBatis&lt;/code&gt; 中提供了&lt;strong&gt;一级缓存和二级缓存&lt;/strong&gt;，其都是依赖于基础支持层中的缓存模块实现的。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n117&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;而且在优化系统性能时，优化数据库性能是一个比较可行的，而增加缓存则是优化数据库时最有效的手段之一，正确、合理地使用缓存可以将一部分数据库请求拦截在缓存这一层。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n118&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;这里需要注意的是，由于MyBatis 自带的缓存与MyBatis以及整个应用是运行在同一个 JVM 中的，共享同一块堆内存。如果这两级缓存中的数据量较大， 则可能影响系统中其他功能的运行，所以当需要缓存大量数据时，优先考虑使用 Redis、Memcache 等缓存产品&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n119&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;Binding 模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n120&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;对应 &lt;code&gt;binding&lt;/code&gt; 包，MyBatis 通过 &lt;code&gt;Binding&lt;/code&gt; 模块，将用户自定义的 &lt;code&gt;Mapper&lt;/code&gt; 接口与映射配置文件联系起来，系统可以通过调用自定义 Mapper 接口中的方法执行相应的 SQL 语句完成数据库操作，并且会在运行期间进行校验映射文件是否出现语法拼写错误，可以尽早避免这种错误，提供程序的可用性。&lt;/span&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n121&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n122&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;值得注意的是，开发人员无须编写自定义 &lt;code&gt;Mapper&lt;/code&gt; 接口的实现，MyBatis 会自动为其创建动态代理对象。在有些场景中，自定义 &lt;code&gt;Mapper&lt;/code&gt; 接口可以完全代替映射配置文件，但有的映射规则和 SQL 语句的定义还是写在映射配置文件中比较方便，例如动态 SQL 语句的定义。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 cid=&quot;n123&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;注解模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n124&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;对应 &lt;code&gt;annotations&lt;/code&gt; 包，&lt;code&gt;MyBatis&lt;/code&gt; 提供了&lt;strong&gt;注解&lt;/strong&gt;的方式，使得我们方便的在 &lt;code&gt;Mapper&lt;/code&gt; 接口上编写简单的数据库 SQL 操作代码，而无需像之前一样，必须编写 SQL 在 XML 格式的 Mapper 文件中。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n125&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;异常模块&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n126&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;对应 &lt;code&gt;exceptions&lt;/code&gt; 包。定义了 MyBatis 专有的&lt;code&gt;PersistenceException&lt;/code&gt;和 &lt;code&gt;TooManyResultsException&lt;/code&gt; 异常。&lt;/span&gt;&lt;/p&gt;&lt;h2 cid=&quot;n127&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p cid=&quot;n128&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;经过以上模块大概了解&lt;code&gt;Mybatis&lt;/code&gt;后，这样可以更好为我们后续研读&lt;code&gt;MyBatis&lt;/code&gt;源码有着很大帮助，后续将研读一下SQL 执行的流程，提供Mybatis自动化能力。在最后我们在来看看模块的架构图：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7072243346007605&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EvicK4z5ZDrj639hjfDI2Y8jnKNYRXvdiceV57g4Mrn3Pib0ia8hNBIIKoqAfSJiasQBuaQWia3LxD1uIpwrKN3Ff0Eg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;789&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n158&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p cid=&quot;n158&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;各位看官还可以吗？喜欢的话，动动手指点个再看💗呗！！谢谢支持！&lt;span md-inline=&quot;linebreak&quot;&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n158&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;欢迎扫码关注，原创技术文章第一时间推出&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.36857142857142855&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;350&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EvicK4z5ZDrgfBz2Ve78FylxcGWmXaueSuqPguurBCWEkeY1ibeLl1wlxUyibdesc4YeuiaJJjSt6HTiab2iaHyXyyicA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2a2e410ccdc12979d8b6665946b5d15d</guid>
<title>爬虫自我修养：有哪些屡试不爽的反反爬技巧</title>
<link>https://toutiao.io/k/wkvs6ot</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section class=&quot;xmteditor&quot; data-tools=&quot;新媒体管家&quot; data-label=&quot;powered by xmt.cn&quot; data-mpa-powered-by=&quot;yiban.io&quot;/&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.25555555555555554&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JJbONXXaqJyeTxLiccs0Pxj3R51nEdr4XgrHHBicznBVDNGAtAx6mLNPv1IBm47ibq6yYicGJ5QnoVic9YyXb6NGWHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;随着大数据的火热，谁能第一时间掌握数据就等于掌握了先机，网页数据成了大家争相掠夺的资源，大量的网页抓取工具&lt;/span&gt;&lt;strong&gt;&lt;span&gt;（爬虫）&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;蜂拥而来。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;网站运营者则需要&lt;/span&gt;&lt;strong&gt;&lt;span&gt;反爬虫系统&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span/&gt;来保护自己的数据资源，以达到&lt;strong&gt;&lt;span&gt;系统稳定性保障、竞争优势保持的目的。&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;爬虫与反爬虫，这相爱相杀的一对，简直可以写出一部壮观的斗争史。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;爬虫与反爬虫斗争史&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第一回合：&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;逗汁儿对某个网站的内容很感兴趣，于是想要写一个爬虫把信息全部抓取下来。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;然后逗汁写了一个标准的python爬虫，&lt;span&gt;不断地遍历某站的信息列表页面，根据 Html 分析内容存进自己的数据库&lt;/span&gt;。&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;网站运维X监控发现&lt;/span&gt;&lt;span&gt;&lt;strong&gt;某个时段访问量陡增，ip相同，user-agent都是python&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，判断为非人类行为，封杀。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第二回合：&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;爬虫爬到一半就停了，这可不行，这批信息我势在必得啊，于是逗汁儿针对性的变换了一下策略：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;1)user-agent 模拟firefox，获取ip代理；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2)每爬半个小时就换一个IP代理。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;span&gt;运维X发现了ip变化，直接要求登陆才能访问。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第三回合：&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;逗汁儿：注册账号，每次请求带cookie或者token，还多注册了几个账号联合爬取。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;运维X：加剧ip访问频率限制。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第四回合：&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;逗汁儿：模拟人的请求，限制请求速度。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;运维X：&lt;/span&gt;&lt;span/&gt;&lt;span&gt;弹出验证码进行识别。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第五回合：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;逗汁儿：通过学习&lt;span&gt;图像识别（关键词PIL，tesseract），再对验证码进行了二值化，分词，模式训练之后&lt;/span&gt;识别了网站验证码。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;运维X：增加动态网站，数据通过js动态加载，增加网络分析复杂度。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;第六回合：&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;逗汁儿：通过selenium和phantomjs完全模拟浏览器操作。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;运维X：成本太高！放弃，猝......&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img class=&quot;mpa-image&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/JJbONXXaqJye1dpJLMr7ibpibhDPkq4iaUalfQxbrUdMP3leQvFuR9nicdRyHHDnPYZUFMvaib8Vf7oicKI4TiaibpJQRg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;240&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;爬虫和反爬虫作为相生相克的死对头，无论爬虫多厉害，都能被复杂的反爬虫机制发现，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;同样的，无&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;论反爬虫机制多么缜密，都能被高级的网络爬虫所攻破，而&lt;span&gt;胜负的关键就看双方的资源投入多少&lt;/span&gt;&lt;/span&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;为什么反爬虫？&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;为了更好的理解爬虫和反爬虫，我们来看一些定义：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;爬虫：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;使用任何技术手段，批量获取网站信息的一种方式。关键在于批量。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;反爬虫&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：使用任何技术手段，阻止别人批量获取自己网站信息的一种方式。关键也在于批量。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;误伤：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;在反爬虫的过程中，错误的将普通用户识别为爬虫。误伤率高的反爬虫策略，效果再好也不能用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;拦截：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;成功地阻止爬虫访问。这里会有拦截率的概念。通常来说，拦截率越高的反爬虫策略，误伤的可能性就越高。因此需要做个权衡。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;资源：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;机器成本与人力成本的总和。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;关于网站&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;为什么反爬虫&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;以及&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;反什么样的爬虫&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;，我们可以看看携程酒店技术部总结的关于&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000005840672&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;反爬虫的心得体会&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;对于公司来说，为什么反爬虫？&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;·爬虫占总PV比例较高。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;有大量的硕士在写论文的时候会选择爬取OTA数据，并进行舆情分析。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因为五月份交论文，到了三月份了，来不及了，赶紧抓数据，四月份分析一下，五月份交论文。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;·公司可免费查询的资源被批量抓走，丧失竞争力。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;OTA的价格可以在非登录状态下直接被查询，这个是底线。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果强制登陆，那么可以通过封杀账号的方式让对方付出代价，这也是很多网站的做法。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但是我们不能强制对方登录。那么如果没有反爬虫，对方就可以批量复制我们的信息，我们的竞争力就会大大减少。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;·爬虫是否涉嫌违法？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;爬虫在国内还是擦边球，还是需要用技术手段来做最后的保障。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;反什么样的爬虫？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;·十分低级的应届毕业生&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;应届毕业生的爬虫通常简单粗暴，根本不管服务器压力，加上人数不可预测，很容易把站点弄挂。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;·十分低级的创业小公司&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;不计其数的小爬虫，出于公司生死存亡的考虑，不断爬取数据。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;·不小心写错了没人去停止的失控小爬虫&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;托管在某些服务器上的小爬虫，已经无人认领了，依然在辛勤地工作着。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;·成型的商业对手&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;商业对手有钱、有技术，如果和你死磕，你就只能硬着头皮和他死磕。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;·抽风的搜索引擎&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;搜索引擎有时也会抽风，可能导致服务器性能下降，请求量跟网络攻击没什么区别。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;也就是说，其实公司反爬虫的对象，都是一些会给网站本身带来困扰甚至伤害的爬虫，在爬虫与反爬虫的战役当中，最后获胜的一定是爬虫，因为网站不可能不要用户查询。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;换言之，只要你的爬虫&lt;/span&gt;&lt;span&gt;&lt;strong&gt;足够规范&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，尽可能的&lt;/span&gt;&lt;span&gt;&lt;strong&gt;模拟正常用户行为&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，在不影响网站正常运作的情况下爬取信息，网站根本不会花大力气与你死磕。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;反反爬技巧&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;网络爬虫一般通过设置HTTP请求头信息的字段来模拟正常浏览器访问网站。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt; &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;所以，通常网络管理员会通过检查头信息中的&lt;/span&gt;&lt;span&gt;User Agent字段、分析access_log统计访问，根据IP、请求时间、频率、访问的路径来确认黑名单。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;一般网站从三个方面反爬虫&lt;/span&gt;，请求网站访问时的请求头Headers，用户行为，目标网站的目录和数据加载方式。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;前两个方面可以说是反爬虫策略中最为常见的，而第三个则是应用ajax（异步加载）的方式加载页面目录或者内容，增大爬虫在对目标网站形成访问之后获取数据的难度。&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;反反爬的主要思路就是：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;尽可能的去模拟浏览器，浏览器在如何操作，代码中就如何去实现。&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.Headers限制&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;这应该是最常见的，最基本的反爬虫手段，主要是初步判断你是否是真实的浏览器在操作。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;遇到这类反爬机制，可以直接在自己写的爬虫中添加Headers，将浏览器的User-Agent复制到爬虫的Headers中。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;以edge浏览器为例，浏览器中打开页面；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一步：点击上图中“网络”标签，然后刷新或载入页面&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二步：在右侧“标头”下方的“请求标头”中的所有信息都是headers内容，添加到请求中即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9277620396600567&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JJbONXXaqJzJb6vpQ2CmsOkfChnia0uLYnAu1qtEwkE980aLUUdiaFXFyZQhU52CC88icyeVB4eUzjEFu6UW6VKtw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;706&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;代码示例如下：&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; class=&quot;mpa-template&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;section&gt;headers = {&lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;Accept&#x27;&lt;/span&gt;: &lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;image/png, image/svg+xml, image/*; q=0.8, */*; q=0.5&#x27;&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;               &lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;Accept - Encoding&#x27;&lt;/span&gt;:&lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;gzip, deflate, br&#x27;&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;               &lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;Accept-Language&#x27;&lt;/span&gt;:&lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;zh-Hans-CN, zh-Hans; q=0.5&#x27;&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;               &lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;Connection&#x27;&lt;/span&gt;:&lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;Keep-Alive&#x27;&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;               &lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;Host&#x27;&lt;/span&gt;:&lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;pb.sogou.com&#x27;&lt;/span&gt;,&lt;br mpa-from-tpl=&quot;t&quot;/&gt;               &lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;User-Agent&#x27;&lt;/span&gt;:&lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362&#x27;&lt;/span&gt;}&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;值得注意的是，很多网站只需要userAgent信息就可以通过，但是有的网站还需要验证一些其他的信息，比如知乎，有一些页面还需要 authorization 的信息。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section/&gt;&lt;section&gt;&lt;span&gt;所以需要加哪些Headers，还需要尝试，可能还需要Referer、Accept-encoding等信息。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.IP限制&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;限制IP也是很多网站反爬虫的初衷，有些人随便写一个循环，就开始暴力爬取 ，确实会给网站服务器带来很大的负担。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;而这种频繁的访问，显然也不会是真实用户行为，索性果断把你封掉。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;这种情况，你可以遵守规则，把你爬取的速度变慢，每次爬取停个几秒就行了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果爬取的数据量不大，其实也浪费不了多少时间，反正你也可以利用这段时间做做其他事情，或者好好思考一下人生。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; class=&quot;mpa-template&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;section&gt;time.&lt;span class=&quot;hljs-default-keyword&quot;&gt;sleep&lt;/span&gt;(&lt;span class=&quot;hljs-default-number&quot;&gt;5&lt;/span&gt;)&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;当然，你也可以通过不断换IP的形式来绕过这种限制，网上很多免费的IP资源，你可以自己搭一个IP池，爬到一定的量就切换IP。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.动态加载&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;通过异步加载，一方面是为了反爬虫，一方面也可以给网页浏览带来不同的体验，实现更多的功能。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;很多动态网站都是通过ajax或者JavaScript来加载请求的网页。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在遇到动态加载的网页的时候就需要去分析ajax请求，一般情况都能直接找到包含我们想要数据的json文件。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7385057471264368&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JJbONXXaqJzJb6vpQ2CmsOkfChnia0uLYVdKYtxDuUx1qjXTibfuia0uF34IaYzmtQIibXLyHb11skUyb3kbiaicIeGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;696&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果网站给文件加密，那么可以通过selenium+phantomJS框架，调用浏览器内核，并利用phantomJS执行js来模拟人为操作以及触发页面中的js脚本。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;理论上selenium是比较全能的爬虫方案，因为这个确实算是真实的用户行为。除非网站的反爬虫严苛到宁愿误杀的地步。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; class=&quot;mpa-template&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;p&gt;&lt;span class=&quot;hljs-default-keyword&quot;&gt;from&lt;/span&gt; selenium &lt;span class=&quot;hljs-default-keyword&quot;&gt;import&lt;/span&gt; webdriver&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;span class=&quot;hljs-default-keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.common.by &lt;span class=&quot;hljs-default-keyword&quot;&gt;import&lt;/span&gt; By&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;span class=&quot;hljs-default-keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.support.ui &lt;span class=&quot;hljs-default-keyword&quot;&gt;import&lt;/span&gt; WebDriverWait&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;span class=&quot;hljs-default-keyword&quot;&gt;from&lt;/span&gt; selenium.webdriver.support &lt;span class=&quot;hljs-default-keyword&quot;&gt;import&lt;/span&gt; expected_conditions &lt;span class=&quot;hljs-default-keyword&quot;&gt;as&lt;/span&gt; EC&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;span class=&quot;hljs-default-keyword&quot;&gt;from&lt;/span&gt; selenium.common.exceptions &lt;span class=&quot;hljs-default-keyword&quot;&gt;import&lt;/span&gt; TimeoutException&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;span class=&quot;hljs-default-keyword&quot;&gt;import&lt;/span&gt; re&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;span class=&quot;hljs-default-keyword&quot;&gt;from&lt;/span&gt; pyquery &lt;span class=&quot;hljs-default-keyword&quot;&gt;import&lt;/span&gt; PyQuery &lt;span class=&quot;hljs-default-keyword&quot;&gt;as&lt;/span&gt; pq&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;browser = webdriver.Chrome()&lt;br mpa-from-tpl=&quot;t&quot;/&gt;wait = WebDriverWait(browser, &lt;span class=&quot;hljs-default-number&quot;&gt;10&lt;/span&gt;)&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;span class=&quot;hljs-default-function&quot;&gt;&lt;span class=&quot;hljs-default-keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-default-title&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;hljs-default-params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;    &lt;span class=&quot;hljs-default-keyword&quot;&gt;try&lt;/span&gt;:&lt;br mpa-from-tpl=&quot;t&quot;/&gt;        browser.get(&lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;https://www.taobao.com&#x27;&lt;/span&gt;)&lt;br mpa-from-tpl=&quot;t&quot;/&gt;        input =wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,&lt;span class=&quot;hljs-default-string&quot;&gt;&quot;#q&quot;&lt;/span&gt;))&lt;br mpa-from-tpl=&quot;t&quot;/&gt;        submit = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,&lt;span class=&quot;hljs-default-string&quot;&gt;&quot;#J_TSearchForm &amp;gt; div.search-button &amp;gt; button&quot;&lt;/span&gt;))）&lt;br mpa-from-tpl=&quot;t&quot;/&gt;        input.send_keys(&lt;span class=&quot;hljs-default-string&quot;&gt;&#x27;鸡蛋&#x27;&lt;/span&gt;)&lt;br mpa-from-tpl=&quot;t&quot;/&gt;        submit.click()&lt;br mpa-from-tpl=&quot;t&quot;/&gt;        total = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, &lt;span class=&quot;hljs-default-string&quot;&gt;&quot;#mainsrp-pager &amp;gt; div &amp;gt; div &amp;gt; div &amp;gt; div.total&quot;&lt;/span&gt;)))&lt;br mpa-from-tpl=&quot;t&quot;/&gt;        get_products（）&lt;br mpa-from-tpl=&quot;t&quot;/&gt;        &lt;span class=&quot;hljs-default-keyword&quot;&gt;return&lt;/span&gt; total.text&lt;br mpa-from-tpl=&quot;t&quot;/&gt;    &lt;span class=&quot;hljs-default-keyword&quot;&gt;except&lt;/span&gt; TimeoutException:&lt;br mpa-from-tpl=&quot;t&quot;/&gt;        &lt;span class=&quot;hljs-default-keyword&quot;&gt;return&lt;/span&gt; search()&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.验证码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;我们在很多网站会遇到，如果请求量大了之后就会遇到验证码的情况。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;最让人诟病的12306，其实也是一定程度上的防止非正当请求的产生。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;对于验证码，可以通过OCR来识别图片，Github上面有很多大神分享的代码可以用，可以去看看。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;简单的&lt;span&gt;OCR识别验证码：&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; class=&quot;mpa-template&quot; mpa-preserve=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;p&gt;&lt;span class=&quot;hljs-default-keyword&quot;&gt;from&lt;/span&gt; PIL &lt;span class=&quot;hljs-default-keyword&quot;&gt;import&lt;/span&gt; Image&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;span class=&quot;hljs-default-keyword&quot;&gt;import&lt;/span&gt; tesserocr&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;img = Image.open(&lt;span class=&quot;hljs-default-string&quot;&gt;&quot;code.jpg&quot;&lt;/span&gt;)&lt;br mpa-from-tpl=&quot;t&quot;/&gt;verify_code1 = tesserocr.image_to_text(img)&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;verify_code2 = tesserocr.file_to_text(&lt;span class=&quot;hljs-default-string&quot;&gt;&quot;code.jpg&quot;&lt;/span&gt;)&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;5.减少返回的信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;最基本的隐藏真实的数据量，只有不断加载才能刷新信息。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;还有的就更变态，会只给你展示一部分信息，人都看不到，爬虫也无能为力。&lt;/span&gt;&lt;span&gt;比如CNKI，你每次搜索能够得到的内容就是非常有限的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这个貌似没有很好的解决办法，但是这么干的网站毕竟是少数，因为这种方式，其实在某种程度上是牺牲了一部分真实用户的体验。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;6.返回伪造的信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;这个真的是程序员何苦为难程序员。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;反爬虫的工程师也是煞费苦心，一方面是不让真实的数据被大规模爬取，另一方面也给你后期的数据处理增加负担。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果数据伪造的好，可能你真的不容易发现自己爬的是假数据，当然只能依靠你后期去清洗这些数据了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;常见的反爬及反爬应对措施大概就是如此了，结论的东西可以在大家在遇到问题的时候带来一些思路和参考。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;爬虫作为一门技术，意味着在真实技术场景下会发生许多变化，需要学习者在实践中去探索这些技巧并加以掌握。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;往 期 推 荐&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mpa-template&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;/&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;壹&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0NzM1MzQzNg==&amp;amp;mid=2247486344&amp;amp;idx=1&amp;amp;sn=748924cc1c682a5245dacbd7d8b22194&amp;amp;chksm=e9b012bbdec79bad8c132b6133f494d86834c313bba67a347cc6c55087f8d878fd95f959e0e4&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;python爬虫，学习路径拆解及资源推荐&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;/&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;贰&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0NzM1MzQzNg==&amp;amp;mid=2247486698&amp;amp;idx=1&amp;amp;sn=6993dfc51a347a1247443383a467eefc&amp;amp;chksm=e9b015d9dec79ccf745069a6d60cfbd2af25f5115c7207113776eedf6ef460b3df2a70cd18af&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;这些不用编程的爬虫工具，你一定要知道&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;/&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;叁&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0NzM1MzQzNg==&amp;amp;mid=2247485693&amp;amp;idx=1&amp;amp;sn=9048e519aab2de23feace427d3a84525&amp;amp;chksm=e9b011cedec798d8dbfec62b3f8a1985fcc78092b2e970a43b3e512e0237dcd63b99e494cc23&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;听说你爬回来的都是乱码？三个案例教你破解字体加密&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4666666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JJbONXXaqJwib8jRMMqAAuOEekTmhjVr6QDscGOHr1JMuy11ZsxibkJoQVRN9kX0yLBbicfpBwAB9RibwnKlkaVmXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>09387f60e24ddd6c6b1dd11b149e99ea</guid>
<title>如何产出规范、安全、高质量的代码？</title>
<link>https://toutiao.io/k/rd2k0cu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content&quot; itemprop=&quot;articleBody&quot;&gt;&amp;#13;
&lt;blockquote&gt;
&lt;p&gt;对于一个软件开发团队，可以通过哪些代码质量指标和扫描方法让团队产出规范、安全、高质量的代码？让开发团队运行的安全、透明、可靠？本文总结了其中一些实践和工具，包含常见代码质量扫描工具、代码质量指标、第三方依赖管理、安全运维等几个方面，主要适用于 Java/JavaScript 技术栈的 web 项目，希望对于想要规范化自己的项目的 Tech Lead 有所帮助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于一个软件开发团队，可以通过哪些代码质量指标和扫描方法让团队产出规范、安全、高质量的代码？让开发团队运行的安全、透明、可靠？&lt;/p&gt;
&lt;p&gt;本文总结了其中一些实践和工具，包含常见代码质量扫描工具、代码质量指标、第三方依赖管理、安全运维等几个方面，主要适用于 Java/JavaScript 技术栈的 web 项目，希望对于想要规范化自己的项目的 Tech Lead 有所帮助。&lt;/p&gt;
&lt;h3&gt;代码扫描和常见质量指标&lt;/h3&gt;
&lt;p&gt;“祸患常积于忽微”，往往一些奇怪的 bug 都是一些不规范的小问题造成的。德国飞机涡轮机的发明者帕布斯·海恩提出的一个在航空界关于飞行安全的法则，法则指出: 每一起严重事故的背后，必然有 29 次轻微事故和 300 起未遂先兆以及 1000 起事故隐患。应用于软件开发中，如果项目中代码混乱不堪，必然会在某个时候最终爆发大量的问题。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/1-security-high-quality-code.jpg&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/1-security-high-quality-code-768x383.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里整理了一些常见的扫描工具和代码质量指标，可以在搭建项目基础设施时引入，用于自动化的检查代码中潜在的问题，达到控制代码产出质量的目的。&lt;/p&gt;
&lt;h4&gt;扫描工具&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;checkstyle&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;checkstyle 是常用于 java 项目的扫描工具，检查源代码是否与代码规范相符，检查项目主要包括：Javadoc 注释、imports、过长的类和方法、空格、重复文件、圈复杂度等，默认使用 sun 的代码规则，也可以配置自定义的代码规则，例如阿里就发布了相应的检查规则。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;findbugs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过 Bug Patterns 的概念，寻找代码中可能出现的 bug，检查项目主要包括：不良编程习惯导致的问题、性能问题、安全问题、线程问题等。例如，应使用 equals 判断相等，而不是 “ =” 操作符、流需要关闭、线程资源需要释放等问题。findbugs 的模式库对编程经验也有较好的提升作用。还可以导入和编写自己的 Bug Patterns 完善检查机制。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;simian&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;simian 是一个用于检查重复和相似代码的工具，它的重复检查类似于论文查重，会提示一定的相似度。可以单独运行，也可以作为 checkstyle 插件来使用，相对来来说比较小众。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pmd&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pmd 是一款跨语言的通用静态扫描工具，具备一部分 checkstyle、findbugs 的功能，不再赘述。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ESlint/TSlint&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;前端界的 checkstyle , TSlint 设计用来做 TypeScript 类型检查，ESlint 作为代码风格检查工具。不过现在 ESlint 也提供了TypeScript 类型检查功能，基本上 ESlint 能整合这两个功能。由于性能问题， TypeScript 也采用了 ESLint 作为 TSlint替代的检查工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SonarQube&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SonarQube 是一款用于代码质量管理的开源工具，它主要用于管理源代码的质量。 SonarQube 和上面的工具不太一样，SonarQube 设计目的是提供一个平台，通过插件的方式提供对各个语言进行支持，也可以和 checkstyle、pmd、simian 等工具进行集成。SonarQube 一般需要单独部署成一个服务，提供数据库，可以记录扫描结果等信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;npm audit&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;npm audit 是 npm 6 之后的版本 自带的一个前端安全扫描工具，可以扫描 npm 依赖中的潜在的漏洞威胁。这些引入的漏洞可能威胁用户开发的机，另外也可能被带入 bundle 文件发布到线上，带来安全问题。目前 npm audit 会在 npm install 完成后自动执行，需要留意安全威胁报告。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fortify SCA&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fortify SCA(Source Code Analyzer) 是一款非常优秀的代码安全扫描工具，用于分析代码中潜在的安全问题。通过调用语言的编译器或者解释器把代码（Java、C、C++等源代码）转换成一种中间媒体文件 NST（Normal Syntax Trcc），然后通过模式匹配相关的方式抓取存在于漏洞库中的漏洞。例如，上传的文件没有做检查等 XSS 攻击。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OWASP  Dependency-Track&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;开放式 Web 应用程序安全项目（OWASP）是一个非营利组织，提供了很多安全标准、数据库、社区和培训。其中一个工具就是 OWASP  Dependency-Track，可以对第三方依赖包中的知名漏洞进行检查，扫描结果受到漏洞数据库的更新影响。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;archunit 架构规范检查&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;前面的检查是代码层面，archunit 可以用于代码架构检查，可以定义规则检查每个包中的实现是否符合规范。例如，controller 包中的类不能实现 service 的接口，repository 下的类必须实现 Repository 接口。通过 archunit 可以减少 codereview 的工作量，避免项目的结构被破坏。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/2-security-high-quality-code.jpg&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/2-security-high-quality-code-768x439.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;统计工具&lt;/h4&gt;
&lt;p&gt;sloccount、sourcemointor 这两个工具可以用于统计代码数量，包括行数、文件数、注释等。除了在项目中扫描 bug 之外，配置代码统计工具可以对项目有一个整体的认知。&lt;br/&gt;
其他的扫描工具还很多，例如 coverity、codemars、binscope、synk、appscan、retire.js 等工具，不再一一列举。&lt;/p&gt;
&lt;h4&gt;最佳搭配&lt;/h4&gt;
&lt;p&gt;这几款工具之间的功能有所重叠，在实际工作中，我们可以根据上面推荐的关注的点，重点清除这些问题。这些扫描工具全部用上除了会带来团队压力和维护成本之外，代码质量不会随着引入的插件增多。除开有质量团队的大厂提供这些扫描平台外，敏捷团队往往不会太大，团队持续关注一个精简的扫描组合更好。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java 后端&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;checkstyle&lt;/strong&gt; Java 代码风格守护，Java 项目至少应该配置一个默认的 checkstyle 规则。至少让项目干净，没有无用、重复的代码，以及超大的类和方法。建议做到每次提交代码前检查。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;findbugs&lt;/strong&gt; 常见不规范的代码检查，一些空指针、equals 检查非常有用，而且 IDE  的插件也很好用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;前端&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;eslint&lt;/strong&gt; 守护 JavaScript 代码风格，eslint 搭配一个 .editorconfig ，可以方便的让编辑器保持同 eslint 一致的代码风格。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;npm audit&lt;/strong&gt; 项目中第三方包的威胁扫描，npm 自带无需额外安装，npm 6 以后自运行，需要关注并修复报出的安全问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;安全&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;fortify&lt;/strong&gt; 扫描代码中的漏洞，用它检查出来的大部分安全问题都是注入攻击、XSS 等攻击，这些问题明显可以在开发过程中避免。可以作为 Jenkins 插件配置，和单元测试作为同一阶段运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OWASP 插件&lt;/strong&gt;  用来扫描第三方依赖漏洞，因为项目中的依赖不会像源代码一样频繁变化，推荐使用 Jekins 插件，定期执行即可。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为什么不用 SonarQube 呢，SonarQube 是一个非常优秀的代码质量开放平台，需要单独的配置安装，需要花费额外的时间维护，对于小团队来说成本较高，如果有专门的质量团队可以考虑维护一套。&lt;/p&gt;
&lt;h4&gt;常用代码质量指标参考&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;编译告警数，大部分程序员基本上忽略 warning，但是编译器出现了告警是一种不好的体现，意味着软件可能工作，但是存在不好的实践，而这种不确定性，会带来不确定的 bug 最终让人一头雾水。编译过程中的告警，尽量消除掉，编译告警的值推荐消除到 0。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平均函数代码行数，过大的函数会导致阅读困难，而且往往过大的函数职责不够单一，一般将一个方法代码行数控制到 30 - 50 行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平均文件代码行，和平均函数代码行一样，过长的文件一样难以维护，一般一个文件10多个方法，因此文件的代码行数一般控制到 300 - 500 行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;冗余代码，有时候我们代码中可能存在未使用的方法、变量等代码，这让维护者一头雾水，通常需要清零。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;总文件重复率，出现重复文件的次数。除了编写单元测试的情况下，业务代码不应该出现重复代码，推荐值为 0。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;总代码重复度，代码的重复度检查，限于扫描工具的识别模式，需要有一定的容忍度，推荐值在 5% - 10%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平均函数圈复杂度，圈复杂度用来衡量一个模块判定结构的复杂程度。如果一个方法内部有大量的 if 语句嵌套，意味着这个方法的实现质量低下，且程序复杂度高不利于维护，推荐值小于 5%。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全告警，如果配置了安全扫描工具，例如 Fortify，安全威胁应该被清零。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码缺陷，如果配置了缺陷扫描工具，例如 Findbugs，需要清零。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&quot;attachment_12941&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/4-security-high-quality-code.png&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-12941&quot; src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/4-security-high-quality-code-768x798.png&quot; alt=&quot;常用代码质量指标参考&quot; class=&quot;size-medium_large wp-image-12941&quot; srcset=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/4-security-high-quality-code-768x798.png 768w, https://insights.thoughtworks.cn/wp-content/uploads/2020/09/4-security-high-quality-code-289x300.png 289w, https://insights.thoughtworks.cn/wp-content/uploads/2020/09/4-security-high-quality-code-986x1024.png 986w, https://insights.thoughtworks.cn/wp-content/uploads/2020/09/4-security-high-quality-code.png 1090w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/a&gt;&lt;p id=&quot;caption-attachment-12941&quot; class=&quot;wp-caption-text&quot;&gt;常用代码质量指标参考&lt;/p&gt;&lt;/div&gt;
&lt;h3&gt;第三方依赖规范化&lt;/h3&gt;
&lt;p&gt;软件开发过程中，不可避免的需要引入第三方或者开源软件包作为库或者框架引入。“第三方” 其实不是一个软件工程术语，现今在软件行业里面的理解是：第一方为自研的软件，第二方为内部发布的软件，第三方为从社区或者外部商业途径引入的软件包。&lt;/p&gt;
&lt;p&gt;对于个人开发者而言，面向“搜索引擎”编程往往将来源不明的代码片段和程序包引入到项目中。对于企业来说，考虑到的不仅仅是功能是否能实现，还要考虑引入时带来的成本和问题，例如是否需要授权、开源协议是否合理、是否会带来安全威胁。&lt;/p&gt;
&lt;p&gt;企业对于第三方依赖的引入分为几种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;作为开发工具引入&lt;/strong&gt;，例如 gcc、Jenkins，基本没有开源协议问题，但是需要注意开发机、CI 会有安全风险。Jenkins 曾出现过漏洞，CI 服务器被当做远程矿机使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;作为服务部署使用（SaaS&lt;/strong&gt;），部分开源协议会限制这种使用方式，第三方依赖的安全问题会威胁服务器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通过软件包再发布&lt;/strong&gt;，大部分开源软件对这种使用方式有较多要求，例如 GPL 开源协议具有传染性，要求使用了 GPL 的项目也要开源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;拷贝源代码引入项目&lt;/strong&gt;，非常不推荐这种方式，尽量通过包管理的方式引入。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;引入第三方依赖需要充分考虑，尽可能最小成本的引入。在一个 React 的前端项目中，有不熟悉的工程师，为了使用一个简单的手风琴效果，引入了整套 bootstrap。不仅破坏了使用 React 的最佳实践，而且让输出的 bundle 文件大小激增数倍，造成首屏加载的性能问题。&lt;/p&gt;
&lt;h3&gt;常见商业友好的开源协议&lt;/h3&gt;
&lt;p&gt;商业用户常用的开源协议实际上只有6种左右，即 LGPL、Mozilla、GPL、BSD、MIT、Apache，另外还有极其宽松的 The Unlicense，但采用的开源软件不多。&lt;/p&gt;
&lt;p&gt;GitHub 提供了一个 license 清单的列表 &lt;a href=&quot;https://choosealicense.com/licenses/&quot;&gt;https://choosealicense.com/licenses/&lt;/a&gt;，&lt;br/&gt;
我根据开源协议的宽松程度，整理了一个列表，方便查看：&lt;/p&gt;
&lt;div id=&quot;attachment_12942&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/5-security-high-quality-code.png&quot;&gt;&lt;img aria-describedby=&quot;caption-attachment-12942&quot; src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/5-security-high-quality-code-768x872.png&quot; alt=&quot;开源协议&quot; class=&quot;size-medium_large wp-image-12942&quot; srcset=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/5-security-high-quality-code-768x872.png 768w, https://insights.thoughtworks.cn/wp-content/uploads/2020/09/5-security-high-quality-code-264x300.png 264w, https://insights.thoughtworks.cn/wp-content/uploads/2020/09/5-security-high-quality-code-902x1024.png 902w, https://insights.thoughtworks.cn/wp-content/uploads/2020/09/5-security-high-quality-code.png 988w&quot; sizes=&quot;(max-width: 700px) 100vw, 700px&quot;/&gt;&lt;/a&gt;&lt;p id=&quot;caption-attachment-12942&quot; class=&quot;wp-caption-text&quot;&gt;开源协议&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;几乎所有的开源协议有一个共同的注意事项：&lt;strong&gt;采用该开源协议的软件项目，不提供任何责任转移和质量保证&lt;/strong&gt;。也就是说采用开源软件造成的法律问题和开源项目无关，另外需要使用者承担因质量问题造成的所有后果。另外，除了引入的程序包之外，字体、图片、特效音、手册等媒体资源也算广义上的“软件”需要考虑开源协议和使用场景。&lt;/p&gt;
&lt;h3&gt;第三方依赖管理&lt;/h3&gt;
&lt;p&gt;对项目中出现的任何第三方依赖有效的管理有非常重要的意义，通过扫描工具，识别出项目中是否有源码、jar包、二进制文件是否来源于某个开源项目。&lt;/p&gt;
&lt;p&gt;任何的第三方软件需要申请入库管理（内部其他团队申请通过可以直接使用），质量团队对申请的软件进行评估：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;是否有开源义务需要履行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引入的第三方依赖是否有 CVEs等漏洞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第三方开源软件是否仍然在维护&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;质量团队根据上面的一些条件，决定出申请的软件能否在项目中使用，允许被采用的软件会定义出优选级别，优先推荐团队使用较为优选的软件，并对项目整体的优选率有一定要求。如果项目中出现了无法识别的二进制文件、非约定目录下的代码片段，需要报备。通过良好的依赖管理和规范化，能减少不良第三方依赖的引入，让软件项目透明、可信。&lt;/p&gt;
&lt;p&gt;一些商业公司提供这些完整的服务，例如 fossid、blackduck、code-climate 等。&lt;/p&gt;
&lt;h3&gt;运维安全&lt;/h3&gt;
&lt;p&gt;大的软件公司，往往有一堆流程和要求。虽然一线开发对堡垒机、防火墙、各种安全规范显得不耐烦，但这些安全措施也在保护开发者。&lt;/p&gt;
&lt;h4&gt;防火墙用于环境隔离&lt;/h4&gt;
&lt;p&gt;往往开发者理解的防火墙用于防止网络入侵、审计、入侵检测等功能，除此之外，防火墙还可以用于各个环境的隔离。一般来说，企业对于生产环境的数据控制比较严格，不会将生产环境的权限交给团队所有开发者，但网络连接有可能疏漏。&lt;/p&gt;
&lt;p&gt;曾经出现过一次线上事故，由于配置文件错误，将原本应该连接到测试的数据库连接到了生产环境，造成大量脏数据写入。如果通过防火墙规则对各个环境进行隔离，这类问题将不会出现。&lt;/p&gt;
&lt;p&gt;另外也可以设计 DMZ 区，将面向用户侧的网关部署到 DMZ 区，仅仅开放必要的端口给网关，实现内外网的物理隔离。同时，对整个系统的防火墙策略应该清晰地记录，否则在做大的基础设施更新时，梳理出所有的防火墙策略，是一件比较困难的事情。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/6-security-high-quality-code.jpg&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2020/09/6-security-high-quality-code-768x363.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;凭据管理&lt;/h4&gt;
&lt;p&gt;项目中会用到大量的凭据，例如数据库、第三方系统对接的 key，使用明文不是一件好事。理想的情况下，对项目中所有的密码信息进行掩盖(mask)，避免 CI、日志中敏感信息的泄露。&lt;/p&gt;
&lt;p&gt;有很多种方法可以掩盖项目中的密码信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用环境变量对密码信息进行覆盖。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用Spring boot 的项目可以配置 jasypt，使用 jasypt 将密码加密，将生成的加密串配置 ENC(加密串) 到工程的配置文件中。加密过程可以加盐作为解密的凭据，“盐” 可以不存放到工程中，在工程部署的时候注入即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果使用 Jenkins 等 CI/CD 工具，可以使用构建平台提供的凭证管理工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果使用 Spring cloud，可以使用 spring cloud vault 组件部署一个凭证管理服务&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另外，建议不要用任何个人凭据用作系统对接，应该使用一个公共的应用凭据。&lt;/p&gt;
&lt;h4&gt;堡垒机&lt;/h4&gt;
&lt;p&gt;一般来说我们管理服务器，所有的运维操作需要通过堡垒机进行操作。开放 22 等高危端口，允许开发者直接登录到服务器是一种不安全的做法。&lt;/p&gt;
&lt;p&gt;堡垒机，通俗的来说是跳板机 + 监控。最初使用的跳板机配置了两张网卡，用于连接开发环境和生产环境，并没有监控功能。在此基础上，堡垒机增加了统一运维管理的功能，往往需要两步验证（SMS 或 Email），并对所有的操作进行记录和监控。&lt;/p&gt;
&lt;p&gt;在需要团队参与运维工作的场景中，非常有必要部署一套堡垒机服务，并使用 LDAP 对接到团队成员的 ID 上，便于集中运维管理。&lt;/p&gt;
&lt;h4&gt;定期对系统软件扫描&lt;/h4&gt;
&lt;p&gt;Linux 系统往往有云厂商推送安全补丁和风险提示，但是安装到服务器上的软件，例如 JDK、nodejs，需要自己检查安全问题。因此需要在系统中安装并定期运行 CVEs 检查并及时更新。有一款 cvechecker 可以帮助运维人员，编写一个脚本定期运行 cvechecker  检查系统中已知的软件是否存在 CVEs 漏洞，并提醒开发者及时更新。&lt;/p&gt;
&lt;h3&gt;写在后面&lt;/h3&gt;
&lt;p&gt;刚开始工作时候，喜欢动态的、灵活的编程语言，讨厌的死板的、套路化的编程语言，然而需要很长一段时间，才能意识到 “约束是程序员的朋友”。对一些安全知识了解的来源大多来自修复 SonarQube 的经历，使用 findbugs 也让我对 Java 基础认识的更加深刻。&lt;/p&gt;
&lt;p&gt;类似的，在使用一些框架、平台的时候往往存在大量的限制，有时候开发者难以意识到 “限制” 正是框架、平台的作者 “保护” 应用开发者的一种方式。有一些开发者以 Hack 框架、平台为乐，但是这样会带来潜在的隐患，在用户量上来之后负面效应表现的尤为明显。&lt;/p&gt;
&lt;p&gt;项目的规范化对于 Tech Lead来说可以减少程序的运行事故和 codereview 时间，对于团队来说也许可以少加班吧。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;更多精彩洞见，请关注微信公众号：ThoughtWorks洞见&lt;/strong&gt;&lt;/p&gt;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>