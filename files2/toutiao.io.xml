<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>f3f75930da44c39f920c85ca128bfb96</guid>
<title>求你了，别再随便打日志了，教你动态修改日志级别</title>
<link>https://toutiao.io/k/8bity1f</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;article class=&quot;article-content&quot;&gt;
&lt;p&gt;之前写过一篇文章《&lt;a href=&quot;https://www.hollischuang.com/archives/5894&quot;&gt;明明有自动清理，日志还是把我的服务干爆了！&lt;/a&gt;》，介绍过一次大促故障，是因为日志量激增，导致服务器差点挂掉。&lt;/p&gt;
&lt;p&gt;在那次问题发生之后，我开发了一个简单的日志降级的小工具，通过配置的方式，动态推送日志级别，动态修改线上的日志输出级别。并且把这份配置的修改配置到我们的预案平台上，大促期间进行定时或者紧急预案处理。&lt;/p&gt;
&lt;p&gt;那么，这篇文章就来简单介绍下思路以及代码实现。&lt;/p&gt;
&lt;h3&gt;日志级别&lt;/h3&gt;
&lt;p&gt;在开始正文前简单介绍下日志级别，不同的日志框架支持不同的日志级别，其中比较常见的就是Log4j和Logback。&lt;/p&gt;
&lt;p&gt;在Log4j中支持8种日志级别，优先级从高到低依次为：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、 ALL。&lt;/p&gt;
&lt;p&gt;Logback中支持7种日志级别，优先级从高到低分别是：OFF、ERROR、WARN、INFO、DEBUG、TRACE、ALL。&lt;/p&gt;
&lt;p&gt;可以看到常见的ERROR、WARN、INFO、DEBUG，这两者都是支持的。&lt;/p&gt;
&lt;p&gt;所谓设置日志的输出级别表示的是&lt;strong&gt;输出的日志的最低级别&lt;/strong&gt;，也就是说，如果我们把级别设置成INFO，那么包括INFO在内以及比INFO优先级高的级别的日志都可以输出。&lt;/p&gt;
&lt;p&gt;无论是Log4j还是Logback，都是通过日志的配置文件来控制日志输出级别的。这里就不详述了。&lt;/p&gt;
&lt;h3&gt;日志框架&lt;/h3&gt;
&lt;p&gt;上面我们提到了Log4j和Logback，这两种都是比较常用的日志框架。&lt;/p&gt;
&lt;p&gt;但是很多时候，我们在代码中打印日志并不是直接使用这种日志框架来进行的，而是依赖了一个日志门面来进行的，如slf4j、commons-logging等。&lt;/p&gt;
&lt;p&gt;一般最最常用的方法就是通过slf4j提供的LoggerFactory的getLogger来获取Logger，然后进行日志打印。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;private static final Logger LOGGER = LoggerFactory.getLogger(LoggerService.class);

public void test(){
    LOGGER.info(&quot;hollis log test&quot;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当我们使用LoggerFactory.getLogger方法创建一个Logger对象的时候，会给他传入一个loggerName，通过这个loggerName来唯一识别一个Logger，如上面的方式就是使用LoggerService这个类的全路径名作为其loggerName。&lt;/p&gt;
&lt;p&gt;loggerName是每一个Logger的配置信息一部分，除此之外还有日志输出级别等信息。&lt;/p&gt;
&lt;p&gt;关于为什么不直接使用log4j和logback打印日志，我在《&lt;a href=&quot;https://www.hollischuang.com/archives/3000&quot;&gt;为什么阿里巴巴禁止工程师直接使用日志系统(Log4j、Logback)中的 API&lt;/a&gt;》中分析过。&lt;/p&gt;
&lt;h3&gt;Arthas改变日志级别&lt;/h3&gt;
&lt;p&gt;在开始介绍代码实现之前，先介绍一个工具，也可以帮助我们的动态修改日志级别。&lt;/p&gt;
&lt;p&gt;那就是阿里开源的神器——Arthas （https://arthas.aliyun.com/doc/ ）。&lt;/p&gt;
&lt;p&gt;Arthas提供了一个logger命令，这个命令可以查看和更新logger信息，包括日志级别。&lt;/p&gt;
&lt;p&gt;查看指定名字的logger信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[arthas@2062]$ logger -n org.springframework.web
 name                                   org.springframework.web
 class                                  ch.qos.logback.classic.Logger
 classLoader                            sun.misc.Launcher$AppClassLoader@2a139a55
 classLoaderHash                        2a139a55
 level                                  null
 effectiveLevel                         INFO
 additivity                             true
 codeSource                             file:/Users/hengyunabc/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更新logger level&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[arthas@2062]$ logger --name ROOT --level debug
update logger level success.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;简单吧，使用一个命令就可以修改机日志级别了。&lt;/p&gt;
&lt;p&gt;但是Arthas目前对于集群的支持并不是特别的友好，虽然他支持了通过Arthas Tunnel Server/Client 来远程管理/连接多个Agent，但是使用起来还不是很方便，并且对于命令的使用要求比较高。&lt;/p&gt;
&lt;p&gt;还有就是我们系统通过一个工具，方便我们在大促期间通过预案方式动态调整日志级别，这方面使用arthas就不是很方便了。&lt;/p&gt;
&lt;h3&gt;代码实现&lt;/h3&gt;
&lt;p&gt;我写的这个工具功能很简单，就是提供动态修改日志级别的入口，方便用户动态修改级别。&lt;/p&gt;
&lt;p&gt;并且为了方便使用，我将他封装在一个Spring Boot Starter里面了，还有就是将他直接对接到公司内部的配置中心中，可以方便的通过配置中心一键修改日志级别。&lt;/p&gt;
&lt;p&gt;首先看下其中最核心的功能，那就是动态修改日志级别的部分，代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.logging.LogLevel;
import org.springframework.boot.logging.LoggerConfiguration;
import org.springframework.boot.logging.LoggingSystem;

import java.util.Collections;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import static org.springframework.boot.logging.LoggingSystem.ROOT_LOGGER_NAME;

/**
 * 日志级别设置服务类
 *
 * @author Hollis
 */
public class LoggerLevelSettingService {

    @Autowired
    private LoggingSystem loggingSystem;

    private static final Logger LOGGER = LoggerFactory.getLogger(LoggerLevelSettingService.class);

    public void setRootLoggerLevel(String level) {

        LoggerConfiguration loggerConfiguration = loggingSystem.getLoggerConfiguration(ROOT_LOGGER_NAME);

        if (loggerConfiguration == null) {
            if (LOGGER.isErrorEnabled()) {
                LOGGER.error(&quot;no loggerConfiguration with loggerName &quot; + level);
            }
            return;
        }

        if (!supportLevels().contains(level)) {
            if (LOGGER.isErrorEnabled()) {
                LOGGER.error(&quot;current Level is not support : &quot; + level);
            }
            return;
        }

        if (!loggerConfiguration.getEffectiveLevel().equals(LogLevel.valueOf(level))) {
            if (LOGGER.isInfoEnabled()) {
                LOGGER.info(&quot;setRootLoggerLevel success,old level is  &#x27;&quot; + loggerConfiguration.getEffectiveLevel()
                    + &quot;&#x27; , new level is &#x27;&quot; + level + &quot;&#x27;&quot;);
            }
            loggingSystem.setLogLevel(ROOT_LOGGER_NAME, LogLevel.valueOf(level));
        }
    }

    private List&amp;lt;String&amp;gt; supportLevels() {
        return loggingSystem.getSupportedLogLevels().stream().map(Enum::name).collect(Collectors.toList());
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上代码，就是根据用户传入的level的级别，将应用的ROOT日志输出级别修改掉。&lt;/p&gt;
&lt;p&gt;这里面用到了一个关键的服务：&lt;code&gt;org.springframework.boot.logging.LoggingSystem&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个服务是SpringBoot对日志系统的抽象，是一个顶层的抽象类。他有很多具体的实现：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16090525095099.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;通过上图，我们可以发现目前SpringBoot目前支持4种类型的日志，分别是JDK内置的Log(JavaLoggingSystem)以及Log4j(Log4JLoggingSystem)、Log4j2(Log4J2LoggingSystem)以及Logback(LogbackLoggingSystem)。&lt;/p&gt;
&lt;p&gt;LoggingSystem是个抽象类，内部有这几个方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;beforeInitialize方法：日志系统初始化之前需要处理的事情。抽象方法，不同的日志架构进行不同的处理&lt;/li&gt;
&lt;li&gt;initialize方法：初始化日志系统。默认不进行任何处理，需子类进行初始化工作&lt;/li&gt;
&lt;li&gt;cleanUp方法：日志系统的清除工作。默认不进行任何处理，需子类进行清除工作&lt;/li&gt;
&lt;li&gt;getShutdownHandler方法：返回一个Runnable用于当jvm退出的时候处理日志系统关闭后需要进行的操作，默认返回null，也就是什么都不做&lt;/li&gt;
&lt;li&gt;setLogLevel方法：抽象方法，用于设置对应logger的级别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SpringBoot在启动时，会完成LoggingSystem的初始化，这部分代码是在LoggingApplicationListener中实现的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/**
 * 执行LoggingSystem初始化的前置操作
 */
private void onApplicationStartingEvent(ApplicationStartingEvent event) {
    //获取LoggingSystem的真实实现，
    // 此处会根据不同的日志框架获取不同的实现，
    // logback ： LogbackLoggingSystem
    // log4j2： Log4J2LoggingSystem
    // javalog： JavaLoggingSystem
    this.loggingSystem = LoggingSystem
        .get(event.getSpringApplication().getClassLoader());
    //执行beforeInitialize方法完成初始化前置操作
    this.loggingSystem.beforeInitialize();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有了LoggingSystem以后，我们就可以通过他来动态的修改日志级别。他帮我们屏蔽掉了底层的具体日志框架。&lt;/p&gt;
&lt;p&gt;除了支持修改ROOT级别的日志以外，还可以支持用户自定义的日志的级别修改。&lt;/p&gt;
&lt;p&gt;先定义一个LoggerConfig，用来封装日志的配置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/**
 * the config of logger
 *
 * @author Hollis
 */
public class LoggerConfig {

    /**
     * the name of the logger
     */
    private String loggerName;

    /**
     * the log level
     *
     * @see LogLevel
     */
    private String level;

    public String getLoggerName() {
        return loggerName;
    }

    public void setLoggerName(String loggerName) {
        this.loggerName = loggerName;
    }

    public String getLevel() {
        return level;
    }

    public void setLevel(String level) {
        this.level = level;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接着提供方法动态修改日志级别，代码实现如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public void setLoggerLevel(List&amp;lt;LoggerConfig&amp;gt; configList) {

    Optional.ofNullable(configList).orElse(Collections.emptyList()).forEach(
        config -&amp;gt; {
            LoggerConfiguration loggerConfiguration = loggingSystem.getLoggerConfiguration(config.getLoggerName());

            if (loggerConfiguration == null) {
                if (LOGGER.isErrorEnabled()) {
                    LOGGER.error(&quot;no loggerConfiguration with loggerName &quot; + config.getLoggerName());
                }
                return;
            }

            if (!supportLevels().contains(config.getLevel())) {
                if (LOGGER.isErrorEnabled()) {
                    LOGGER.error(&quot;current Level is not support : &quot; + config.getLevel());
                }
                return;
            }

            if (LOGGER.isInfoEnabled()) {
                LOGGER.info(&quot;setLoggerLevel success for logger &#x27;&quot; + config.getLoggerName() + &quot;&#x27; ,old level is  &#x27;&quot;
                    + loggerConfiguration.getEffectiveLevel()
                    + &quot;&#x27; , new level is &#x27;&quot; + config.getLevel() + &quot;&#x27;&quot;);
            }
            loggingSystem.setLogLevel(config.getLoggerName(), LogLevel.valueOf(config.getLevel()));
        }
    );
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上，根据用户传入的LoggerConfig，修改指定的loggerName对应的loggerLevel。至于LoggerLevel是怎么来的，就可以通过配置的方式传入，比如解析JSON格式的配置或者YML文件等。&lt;/p&gt;
&lt;p&gt;如我们可以在配置中心中采用以下配置来控制日志级别，并推送：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[{&#x27;loggerName&#x27;:&#x27;com.hollis.degradation.core.logger.LoggerLevelSettingService&#x27;,&#x27;level&#x27;:&#x27;WARN&#x27;}]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上配置，会使得loggerName为&lt;code&gt;com.hollis.degradation.core.logger.LoggerLevelSettingService&lt;/code&gt;的日志的级别动态修改为WARN，另外，如果配置信息如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[{&#x27;loggerName&#x27;:&#x27;com.hollis.degradation.core.logger&#x27;,&#x27;level&#x27;:&#x27;WARN&#x27;}]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;那么，就会将以&lt;code&gt;com.hollis.degradation.core.logger&lt;/code&gt;这个包路径下面的所有的类为LoggerName的日志输出的级别全都动态修改为WARN。&lt;/p&gt;
&lt;p&gt;当然，这个配置也支持配置多个Logger的级别，如果是以下配置内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[
  {&#x27;loggerName&#x27;:&#x27;com.hollis.degradation.core.logger&#x27;,&#x27;level&#x27;:&#x27;WARN&#x27;}
  ,{&#x27;loggerName&#x27;:&#x27;com.hollis.degradation.core.logger.LoggerLevelSettingService&#x27;,&#x27;level&#x27;:&#x27;INFO&#x27;}
]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;加入代码中有多个日志，他们的定义方法分别为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;private static final Logger LOGGER1 = LoggerFactory.getLogger(LoggerLevelSettingService.class);
private static final Logger LOGGER2 = LoggerFactory.getLogger(TestService.class);
private static final Logger LOGGER3 = LoggerFactory.getLogger(DebugService.class);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;那么，配置生效后，会使得以上的LOGGER1的输出级别为INFO，而LOGGER2和LOGGER3的级别为WARN。&lt;/p&gt;
&lt;p&gt;除此以外，上面的日志级别修改，可能会影响到我们自己这个工具本身的日志输出，所以，我们提供了一个方法，可以直接修改我们自己这个日志服务的日志级别：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public void setDegradationLoggerLevel(String level) {

    LoggerConfiguration loggerConfiguration = loggingSystem.getLoggerConfiguration(
        this.getClass().getName());

    if (loggerConfiguration == null) {
        if (LOGGER.isWarnEnabled()) {
            LOGGER.warn(&quot;no loggerConfiguration with loggerName &quot; + level);
        }
        return;
    }

    if (!supportLevels().contains(level)) {
        if (LOGGER.isErrorEnabled()) {
            LOGGER.error(&quot;current Level is not support : &quot; + level);
        }
        return;
    }

    if (!loggerConfiguration.getEffectiveLevel().equals(LogLevel.valueOf(level))) {
        loggingSystem.setLogLevel(this.getClass().getName(), LogLevel.valueOf(level));
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有了以上的LoggerLevelSettingService类以后，基本具备了动态修改日志的能力，接下来就是想办法通过配置中心动态修改日志级别了。&lt;/p&gt;
&lt;p&gt;这里面因为不同的配置中心用法不同，我只是拿我们自己的配置中心简单举例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/**
 * 降级开关注册器
 *
 * @author Hollis
 */
public class DegradationSwitchInitializer implements Listener, InitializingBean {

    //从配置项中读取应用名，方便注册到配置中心
    @Value(&quot;${project.name}&quot;)
    private String appName;

    @Autowired
    private LoggerLevelSettingService loggerLevelSettingService;

    //配置中心值发生变化会自动回调该方法
    @Override
    public void valueChange(String appName, String nameSpace, String name,
                            String value) {

        if (name.equals(rootLogLevel.name())) {
            loggerLevelSettingService.setRootLoggerLevel(value);
        }

        if (name.equals(logLevelConfig.name())) {
            List&amp;lt;LoggerConfig&amp;gt; loggerConfigs = JSON.parseArray(value, LoggerConfig.class);
            loggerLevelSettingService.setLoggerLevel(loggerConfigs);
        }

        //将降级工具的日志输出级别设置成INFO，保证其日志可以正常输出
        loggerLevelSettingService.setDegradationLoggerLevel(&quot;INFO&quot;);
    }

    @Override
    public void afterPropertiesSet() {
        //将服务配置到配置中心
        ConfigCenterManager.addListener(this);
        ConfigCenterManager.init(appName, DegradationConfig.class);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上，我们实现了监听配置中心的值的变化，动态修改日志级别。&lt;/p&gt;
&lt;p&gt;基本功能就都完成了，接下来可以考虑如何让其他应用快速接入，那就是定义一个Starter，可以方便快速接入。主要代码如下：&lt;/p&gt;
&lt;p&gt;先定义一个Configuration类：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/**
 * @author Hollis
 */
@Configuration
@ConditionalOnProperty(prefix = &quot;hollis.degradation&quot;, name = &quot;enable&quot;, havingValue = &quot;true&quot;)
public class HollisDegradationAutoConfiguration {

    @Bean
    @ConditionalOnMissingBean
    @ConditionalOnProperty(name = &quot;project.name&quot;)
    public LoggerLevelSettingService loggerLevelSettingService() {
        return new LoggerLevelSettingService();
    }

    @Bean
    @ConditionalOnMissingBean
    @ConditionalOnBean(value = LoggerLevelSettingService.class)
    public DegradationSwitchInitializer degradationSwitchInitializer() {
        return new DegradationSwitchInitializer();
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在这个类里面定义两个bean，并且bean定义的前提是应用中配置了以下两个配置项：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hollis.degradation.enable = true
project.name = test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来就是定一个spring.factories文件，定义内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;org.springframework.boot.autoconfigure.EnableAutoConfiguration=com.hollis.degradation.starter.autoconfiguration.HollisDegradationAutoConfiguration
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上，只需要在需要引入降级工具的应用中，引入我们的这个starter，并且配置两个配置项即可。&lt;/p&gt;
&lt;p&gt;接入后，可以方便的在配置中心中动态修改单机或者集群的日志输出级别，并且可以在大促期间配置到预案平台上，通过紧急预案快速执行。&lt;/p&gt;
&lt;h3&gt;总结&lt;/h3&gt;
&lt;p&gt;以上，基本实现了很多基本的功能，实现时考虑的因素主要有以下几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、通用。要同时可以支持不同的日志框架，客户端使用的日志框架不影响我们的功能，并且客户端不需要关心自己的日志框架的区别。&lt;/li&gt;
&lt;li&gt;2、可配置。可以将配置信息通过外部配置中心推送，可以快速进行调整。&lt;/li&gt;
&lt;li&gt;3、易用。通过封装到SpringBoot Starter中，方便客户端快速接入。&lt;/li&gt;
&lt;li&gt;4、无侵入性。框架的使用不应该影响到应用的正常运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，这个工具只是我花了几个小时撸出来的，其中还有很多不足，其实还有很多事情可以优化，比如配置的格式可以支持多种、支持通过EndPoint查看日志配置情况等，这些都还没有实现。&lt;/p&gt;
&lt;p&gt;本文只是提供一个思路，希望大家都能学会用工具化的方式解决日常工作中遇到的问题，学会造轮子。&lt;/p&gt;
&lt;center&gt;&lt;b&gt;(全文完)&lt;/b&gt;&lt;/center&gt;&lt;hr/&gt;&lt;center&gt;&lt;b&gt;扫描二维码，关注作者微信公众号&lt;/b&gt;&lt;/center&gt;&lt;img src=&quot;http://www.hollischuang.com/wp-content/uploads/2019/04/二维码.png&quot;/&gt;
&lt;/article&gt;
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>12ed6eb753b8dc09c28857a7ac209ab1</guid>
<title>程序员经常看的开源月刊《HelloGitHub》第 57 期</title>
<link>https://toutiao.io/k/p8j4rr7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;兴趣是最好的老师，&lt;strong&gt;HelloGitHub&lt;/strong&gt; 就是帮你找到兴趣！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.42567567567567566&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2iaYiaGWicicRY38nJK83thRzTVhZojX2pHbxWYicbsLwhAlRbCFiaHgAOlhg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;888&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;简介&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分享 GitHub 上有趣、入门级的开源项目。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个面向&lt;strong&gt;编程新手&lt;/strong&gt;、&lt;strong&gt;热爱编程&lt;/strong&gt;、&lt;strong&gt;对开源社区感兴趣&lt;/strong&gt; 人群的月刊，月刊的内容包括：&lt;strong&gt;各种编程语言的项目&lt;/strong&gt;、&lt;strong&gt;让生活变得更美好的工具&lt;/strong&gt;、&lt;strong&gt;书籍、学习笔记、教程等&lt;/strong&gt;，这些开源项目大多都是非常容易上手，而且非常 Cool。主要是希望大家能动手用起来，加入到&lt;strong&gt;开源社区&lt;/strong&gt;中。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;会编程的可以贡献代码&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不会编程的可以反馈使用这些工具中的 Bug&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;帮着宣传你觉得优秀的项目&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Star 项目⭐️&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在浏览、参与这些项目的过程中，你将学习到&lt;strong&gt;更多编程知识&lt;/strong&gt;、&lt;strong&gt;提高编程技巧&lt;/strong&gt;、&lt;strong&gt;找到编程的乐趣&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;🎉 最后 HelloGitHub 这个项目就诞生了 🎉&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;以下为本期内容&lt;/strong&gt;｜每个月 &lt;strong&gt;28&lt;/strong&gt; 号发刊&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;C 项目&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、ngx_waf：一个 Nginx 防火墙模块。我差点就错过了的宝藏项目，它使用简单不需要复杂的配置，支持的功能直戳我的痛点。你看：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;支持 IPV4、IPV6 和 IP 段黑白名单&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;CC 防御即自动拉黑 IP 一段时间&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持 GET、POST、URL、Cookie 等黑名单（正则）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4796875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m22E3sYGibIFmUItFkJVBrVKEEosKbbaYcWHozYEnV8CObQPCOeYK3asw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m23ZicekSXKE5c4cicHslcr4I5ictsBmE5WA3HhChT1FCPAv1dK3G09Sl2Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;C++ 项目&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、fast-cpp-csv-parser：读取 CSV 文件的 C++ 库（仅头文件）。示例代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# &lt;span&gt;include&lt;/span&gt; &lt;span&gt;&quot;csv.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;int&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;io::CSVReader&amp;lt;3&amp;gt; &lt;span&gt;in&lt;/span&gt;&lt;span&gt;(&lt;span&gt;&quot;ram.csv&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;  in.read_header(io::ignore_extra_column, &lt;span&gt;&quot;vendor&quot;&lt;/span&gt;, &lt;span&gt;&quot;size&quot;&lt;/span&gt;, &lt;span&gt;&quot;speed&quot;&lt;/span&gt;);&lt;br/&gt;  &lt;span&gt;std&lt;/span&gt;::&lt;span&gt;string&lt;/span&gt; vendor; &lt;span&gt;int&lt;/span&gt; size; &lt;span&gt;double&lt;/span&gt; speed;&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt;(in.read_row(vendor, size, speed)){&lt;br/&gt;    &lt;span&gt;// 对 ram.csv 文件中的数据，做你想做的事情吧！&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2ITgWiaLz2csZeOJpNOr8d5409Yu22BFbcP0WewIpZ8micGXhianqCRc5g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、UNO：使用 C++ 编写的命令行 UNO 纸牌游戏。操作方便支持人机或联机对战，游戏基于 Asio 网络库和现代 C++ 开发，也有对 C++17 的尝试。分别实现了服务端、客户端，代码简单对 C++ 新手友好，UNO 的爱好者快来玩一玩吧！&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.27341389728096677&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2XG42Uia5VnPvAjCTKiaPLcvbgQVhJHT7ib9uUsII6aKOtzAXdP4IAia9kA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1324&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m22qClf4gslCkZ0gggjmT6sE3ca35jc9VhyHFtOA4kGO5ppfy614eZEw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4、godot：一款功能丰富的开源游戏引擎。最初它只是一款 2D 引擎，近期拓展了 3D 部分的能力。相较于 UE4 或者 Unity 这样的成熟商业引擎来说，Godot 还很年轻不够成熟，尤其 3D 方面的能力。但它拥有简易的开发方式，上手简单。而且社区活跃、文档覆盖全面、有较为丰富的示例代码，对于刚入门的游戏开发者友好。同时开源引擎底层代码完全开源，开发者可以阅读和贡献代码，而不是只停留在游戏逻辑开发层面。总而言之 Godot 是一个极有潜力的游戏引擎，推荐给想学习游戏开发的同学&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2WPTYBAWG2jSMiavianmTMDnicDLapqqnLNLMS2B4YuibzyFVINAKGbzs2Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2DNPnwhwib4EJdtuxUQtfic3COhy2hQoLGZI2dib5uSaQUBlgpxk9dXkrA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;CSS 项目&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5、water.css：一个专门为简单页面和示例网页准备的 CSS 框架&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3796875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2U53zPYlm9dcHsC2zdYCbj0Boq0ht4SY7acQY9RYa1zcqqMmWJicDiaGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2Z4EeFVmrm8ibOK8lzrYzg0YF4kBe5mhkb7NrA7MB56fcnDicwU78vASQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Go 项目&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;6、fyne：一款 Go 语言跨平台 UI 库。想用 Go 写图形界面应用的小伙伴，快速上手：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;安装&lt;br/&gt;$ go get fyne.io/fyne&lt;br/&gt;运行一个 demo&lt;br/&gt;$ go get fyne.io/fyne/cmd/fyne_demo/&lt;br/&gt;$ fyne_demo&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.78984375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2byr4PqTG0mJJm2ySUOdCXicOhxuj4HnwLfXfyg1FcuyCHEBWIAEtMXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2nPnG9tiaVImCcZTsfqoibX64AvxZtRXmTuLuO0k1zhNeRxlcmgNg4WBQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;7、golearn：Go 写的机器学习框架。来，跑个模型试试吧：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;cd&lt;/span&gt; &lt;span&gt;$GOPATH&lt;/span&gt;/src/github.com/sjwhitworth/golearn/examples/knnclassifier&lt;br/&gt;go run knnclassifier_iris.go&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2wOBe9PYTibXhIoETLp8ggPicRVKlattHib15DibAdgKdWllcE69qak392Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;Java 项目&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;8、keepass2android：一个开源的 Android 密码管理器。下载地址，功能：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;仅需输入一次安全性很强的密码（很长或随机的密码）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持几乎可与所有的 Android 的浏览器&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持 .kdbx 文件的读写&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;能够编辑条目包括附加字符串字段、文件附件、标签等&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;等等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.54296875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m23icBmWSnVmxnMLBIdiaYJFUT0gRoFiadJPGgAZDqBFON6y6wgLUicXW6Hg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2ONx0StzPeVjESN2CpT5h7FyG5aLVIxSECSa7mUYsRBhTEiaibG9T5h6Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;9、PrettyZoo：一款 Java 写的高颜值 ZooKeeper 客户端桌面应用。该项目使用了 JDK11 以及 JavaFX 编写的 GUI 客户端，代码量适中适合想学习 JavaFX 编写应用的朋友。需要连接 ZK 服务端查看数据的话，手边有这么个工具还是挺方便的。实用和颜值集一身的项目&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5859375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2gwcun7CHAhaGPibricORL2yszE14BnHB7z6DWiax810leHibeCRicpfTuWg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2xQtM5iaGpEh4gto3skoPl2C7OCyOqiavnzkibib5nZQKBSczr6oRcM7vKQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;10、vueblog：一款轻量级 Java 博客项目。基于 SpringBoot+Vue 实现并附有详细开发文档和讲解视频，让刚学会 Java 的同学也能搞定。每个体面的技术人员可能都有一个自己说了算的博客吧&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7765625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2wicicibDQhXARbKb3VdfoiayYmqO2w1bH7gKALNA1bjMprAvjl3BaiaicLibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m28psFsH3QibhjYhqKhwsxCH574E9fU1Z3Ca3D8eeR7R7MUalgtibrmn7Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;JavaScript 项目&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;11、x-spreadsheet：基于 JavaScript 实现的轻量级 Web 电子表格库。它功能齐全，包含表格的基本操作和函数等，还有详细的中文文档，在线尝试&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.371875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2A0jsTjfZaroibmOk6dq6YcAgon6ZImpseerW4Tg8apgOxVoNebsa1hA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m27QibFTJ5zsUEzKvpfKQiaY8icSMksvb9ouKMWbyUwXsT6pnQkWVFKEfPA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;12、h5-Dooring：一款功能齐全的 H5 页面可视化配置平台。让你通过可视化的方式制作出 H5 页面，技术栈以 React 为主，后台采用 Node.js 实现。虽然网上有很多这种工具，但本项目免费开源、功能齐全值得一试&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.45390625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2Z8Wlnj1ghbodbgvkBjnFoYPic6EH1F8joLSwSWrOib3okLSrEF8vdIhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2A4j27gMV5L3DcRl404MjWola4NiaXgKgnBDOL2wDjicGjxPhkvuGW3qA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;13、Ant-Forest：基于 Auto.js 的蚂蚁森林能量自动收获脚本。它是个“绿色环保”的项目，我能从中感受到满满的爱和想把它做好的决心！来看看作者开发 Ant-Forest 时解决了哪些难题：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;能量球识别无法使用控件信息（使用基于霍夫变换的图像识别）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;脚本执行逻辑易被打断（使用事件监听及扩展模块增强鲁棒性）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;每次只能运行一次（完善的复查及定时循环功能）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不同设备分辨率及屏幕比例不同（使用等比缩放/定宽缩放等进行适配）&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.4417910447761193&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2VzSsALEGkXX1OcAK625ibpvuVhKIXUWicuDwyFqXicib1Cbzu8jN7Aia8wA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;670&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2qdDuEicwXnGhvnFnZYQpxC486Rp17vey1FJpe4SuzgdahI6ykz0WxuQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;14、tui.image-editor：功能齐全的图片编辑器。支持图片剪裁、旋转、涂鸦等功能，实现了 Vue 和 React 封装的组件，便于整合进你的项目&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.83203125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m264FOYDz8Pm5icuAgJl1OadyURNTaCMnBjqBhXDVrhLsPSZicLktlQT2A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m21ibrb7oavVDrFewefASsbpa0SxtdNqH1aXaF2D2P24ntWU1eL1V9e2A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;15、windows95：基于 Electron 实现的 Windows 95 操作系统。它实现了该操作系统下的所有东西，对！所有！想体验下 Windows 95 版的扫雷吗？下载安装即可&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.67265625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m25bcZRfwsAULobMdWicqQ4rzoseicP9xkiajqDMJ1yLYQHJnlKXhEG3DGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2F8QdnnIOAkNuiacibGkibIub4NIicic2ialZbfYyxMdYobiaZ2j3V0oZt3E0A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Objective-C 项目&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;16、LuLu：免费开源的 macOS 防火墙软件&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7921875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2bYTXssed96HCrAicaOKibFIFicmXtfL1Kxg8jicwntqr19SYcFtaUiaJOaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2DSuxD5mfubzb9VEZCpsdJKhQrgnjL3icGnkmia37Q9trDZsSJndZEICQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;PHP 项目&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;17、humhub：用 PHP 写的开源社交平台。看过《社交网络》的小伙伴，都知道大名鼎鼎的 Facebook 最早就是扎克伯格用 PHP 语言写出来的，humhub 能够让不会编程的小伙伴也可以用创建出一个社交平台啦。跟着提示一步步操作，不到 1 分钟我的社交平台就建好了&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4921875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2dchzA2DrXF7pZesfzI2n8aTiaAS7AhAIOunvkicADk6VjuPO13EQcnwA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2LmnI07B6fI1e5TCaXTibCPspOePMwcIsK3tROD5vTYbJIanMocgudWg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;18、phpbrew：一个编译、安装、管理多版本 PHP 的工具。有了它就可以方便地在不同 PHP 版本之间自由切换啦，特性：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;配置选项简化为 Variants 无需担心路径问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;集成至 bash/zsh 等，易于切换版本&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;易于安装、启用 PHP 扩展&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2jeGXlIGbEcBtYuGuh1bmmzdAsgEoYYzDtqL4EUibHQibKFVKlonotELw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;Python 项目&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;19、python-patterns：Python 设计模式和使用场景的集合&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.38828125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2FD5IQMXRkTxm19BybOSMcWyRXBYpQViaGpkgxZsycOMicODkwpdjus4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2icqI00Vt5N1e7ez8icnyYe6Z7u6SPobJnOQntGFmx4kGqCq2Na4ltThQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;20、pgcli：支持语法高亮和自动补全的 Postgres 数据库客户端命令行工具。它安装简单上手快速，如果你用过 Postgres 数据库自带的命令行工具，就一定能感受到 pgcli 的迷人之处&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6023054755043228&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2z0DGGe0MWecsd2HQE8hg9sMlRxP1mv44z1Jmpqz1x6h9VDiaHRBr9YA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1041&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2R5BSwjXRP8M2oDBFXAv6sXUXRTUribYhbMUUuTicuck1jt5xABPcy38A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;21、15-minute-apps：基于 PyQt 框架写的小型桌面应用程序的集合。想用 Python 写桌面应用的小伙伴，这个项目应该可以帮到你。比如写个扫雷游戏：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.1287284144427001&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2wdFGKGVhzbk1xThSicz7Q5FSGNdNuO2hMOScbNcSNxYaVXZqewJgzSQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;637&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2hjX2u8j3Qumy23BpxsNhBLbPXzQ3g0KQ7uKxJCQlL9DnK5mdae9XYA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Swift 项目&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;22、Pine：一个免费、轻量、简洁的 macOS Markdown 编辑器。功能：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;主题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;LaTex 公式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;自动保存&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;自定义字体&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;字数统计等写作分析&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;等等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2NWDiapnERJvDmHTCRWxX3gVibibPYibT6JXShe1icQ5CW9ia7npdcsOdZpcg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2JeyUF0F4Udkj2s5KW9mkaKnpbulIZ2MwDxL3VPpc4u6s1T59wmy5Mg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;23、Publish：专为 Swift 开发人员准备的静态网站生成器。让你实现整个网站都是用 Swift 构建的工具，支持多种主题、插件以及更多强大的自定义选项。示例网站，安装和快速开始：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ git &lt;span&gt;clone&lt;/span&gt; https://github.com/JohnSundell/Publish.git&lt;br/&gt;$ &lt;span&gt;cd&lt;/span&gt; Publish&lt;br/&gt;$ make&lt;br/&gt;$ mkdir MyWebsite&lt;br/&gt;$ &lt;span&gt;cd&lt;/span&gt; MyWebsite&lt;br/&gt;$ publish new&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.62109375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m23LqqrFLMTrd1A8ItkEpiaBSAYl84ibQy2XghkuiadNC2ZcuIG6zKIj5Rg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2LiaCUUMENLWEBuiaQOHicEpauWdz0uss8yXEx5YdvOMnIicHVm2R88QJsg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;其它&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;24、open-source-rover：NASA 面向科技爱好者开源的火星漫游车设计方案和代码。通过该项目你可以使用便宜的树莓派做出自己的火星漫游车，所需的零件很容易就可以买到，遥控部分是使用现成的 Xbox 手柄或者手机，减少花销。喜欢动手和硬件的小伙伴们，这个东西够酷吗？&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.9953125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2ErXC75AP2LCF4Zia8hDW9WkaCyTXVoOjH2cAYXl6rp7Tm7pxb4ANRwg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2Ka6leI6Q1L2Y5358OuuCL6vquohh5VDBEic9jmibL0spicJvH04Ch9kpQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;25、bat：替代 cat 的命令行工具。你还在命令行用 cat 查看文件吗？那你就 out 啦！今天推荐的 bat 它不仅支持语法高亮，还能展示 Git 的改动。macOS 下安装命令：&lt;code&gt;brew install bat&lt;/code&gt; 相信你用过 bat 后就不会再想用回 cat 了&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.49847560975609756&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2uFiaKABtgeFmONqWddic6ahYsJI2elDnZKKusX8643AqmVbP0HJT6LXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;656&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m27cJqsViakAk2GjQUp0EeKvAd2HVeZicVBLZMkWwEcibjOcTU1X2ZcgvEw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;26、Web-Dev-For-Beginners：微软开源的 Web 开发教程。该教程共有 24 节课，但目前只有英文版&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.56328125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2aBA8QYF0jfic0fiaV7PeDT0TS7J2U0JwDLwjoUGJmqTyWJytht0D77ug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2EDK51rkZey5C51JEKvhZ6YiaQat7suAduib5wwVZBwEGkxm6gGbANIXg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;27、neofetch：展示操作系统信息的命令行工具，支持将近 150 种操作系统&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6392294220665499&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2b4wD3lCvrkNMUPgE98qUVVOxSktdDwa7hRUaS0NkzXvVicUIAwo3jOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1142&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2u6kk9EFoibQ9A4ricYLOOBy01xk1EEQCPjTEjW5CbqLeSKv97yhtdOPw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;28、jpeg_tutorial：教你编写 JPEG 解码器的教程，示例为 Rust 代码&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2XjibzxwvMMe8iban7UKlBVtGQbzicqTMUUD2ticv8cVzsEtzMiceLF2xicicw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;29、sql-style-guide：一份 SQL 语句编写风格建议。比如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-- Good&lt;br/&gt;select *&lt;br/&gt;from users&lt;br/&gt;&lt;span&gt;where&lt;/span&gt; email = &lt;span&gt;&#x27;example@domain.com&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;-- Bad&lt;br/&gt;select *&lt;br/&gt;from users&lt;br/&gt;&lt;span&gt;where&lt;/span&gt; email = &lt;span&gt;&quot;example@domain.com&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2QtwLcePTOerlHmyQNGbW7sNl5kAY9DrXF2a2hT9tDIl5qSOfGOqPQg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;开源书籍&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;30、pure-bash-bible：该书有好多复制就能用的 bash 函数，我愿称其为 bash 的“奇技淫巧”。比如把字母转为大写的函数：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;upper&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;# Usage: upper &quot;string&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;printf&lt;/span&gt; &lt;span&gt;&#x27;%s\n&#x27;&lt;/span&gt; &lt;span&gt;&quot;&lt;span&gt;${1^^}&lt;/span&gt;&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;$ upper &lt;span&gt;&quot;hello&quot;&lt;/span&gt;&lt;br/&gt;HELLO&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.295&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2FgT7UGRKgDoMu426m21MKLCyJ8xib1M4unh8lt0LUCFrVMib3fazcyyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2Gc21fLTGQyHMBxOoOjkEHsgFSiaO5ZJ05FkV6Bnmib4xFbe9bevsSf6g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;机器学习&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;31、pulse：根据包含马赛克的人脸图像，生成一张相似容貌的结果。注意不是复原哦，仅可用于人脸&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2LRRxfKfickW309goNBw9PibbqOIia7sY6yOMt1hOgs1vC4kgS8uCErEiaw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;512&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2fqiagoy067wcNJ25Fljlhic2gaxeEzdAH4HJoKzYruA4XWUuNJGz4rMg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;32、Surface-Defect-Detection：该项目整理了目前大量靠谱的表面缺陷检测数据集，还有最新的顶会论文以及作者的解读笔记。从事视觉方向的小伙伴，心动了吗？&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4120762711864407&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m2ia0XP9YsNDstAj4GIN4gU4Z6k5cs7jG9vR2ic6S8iacIdiaGwLNE2Crbyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;944&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5619047619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNWbEYaYIUR5ShemricFb0m26W3tUTp2vxQEREET87dRYCSY8kYOqS0EVLpBnYLiciawqaqm1PdPn8OQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;945&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按识别二维码，可直达项目&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;每月一期的《HelloGitHub》月刊到这里就结束啦！如果觉得本文还不错，欢迎提交&lt;strong&gt;点赞、留言、分享&lt;/strong&gt;，我在留言区等你～&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1dc6ca870e9e2577019cfc53a8e69f96</guid>
<title>vivo 全球商城：订单中心架构设计与实践</title>
<link>https://toutiao.io/k/lcopypw</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;一、背景&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;随着用户量级的快速增长，vivo 官方商城 v1.0 的单体架构逐渐暴露出弊端：模块愈发臃肿、开发效率低下、性能出现瓶颈、系统维护困难。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;从2017年开始启动的 v2.0 架构升级，基于业务模块进行垂直的系统物理拆分，拆分出来业务线各司其职，提供服务化的能力，共同支撑主站业务。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;订单模块是电商系统的交易核心，不断累积的数据即将达到单表存储瓶颈，系统难以支撑新品发布和大促活动期间的流量，服务化改造势在必行。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;本文将介绍 vivo 商城 订单系统建设的过程中遇到的问题和解决方案，分享架构设计经验。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;二、系统架构&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;将订单模块从商城拆分出来，独立为订单系统，使用独立的数据库，为商城相关系统提供订单、支付、物流、售后等标准化服务。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;系统架构如下图所示：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.575859178541492&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY1CoZgD6Vxapl8dWE0UsaiasktBUZQIGQ74Tn0CVDMcQzUmapKwu8etyg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1193&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;三、技术挑战&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;3.1 数据量和高并发问题&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;首先面对的挑战来自存储系统：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;/&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;/&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;下面对这些方案进行简单描述：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7768762677484787&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY11hmthbJbQDOmHu0BzE1X9Q9948xRic2R5KaiccHZgRWiaFOQfO4JjusZg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;493&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;读写分离&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;主库负责执行数据更新请求，然后将数据变更实时同步到所有从库，用多个从库来分担查询请求。&lt;/p&gt;&lt;p&gt;但订单数据的更新操作较多，下单高峰时主库的压力依然没有得到解决。且存在主从同步延迟，正常情况下延迟非常小，不超过1ms，但也会导致在某一个时刻的主从数据不一致。&lt;/p&gt;&lt;p&gt;那就需要对所有受影响的业务场景进行兼容处理，可能会做一些妥协，比如下单成功后先跳转到一个下单成功页，用户手动点击查看订单后才能看到这笔订单。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7393939393939394&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY1iaw0EsH2ia5jEicvsLaVOmlT2d23tEgjwcfcoh8HyFmyZmI3LGO2qichpA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;495&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;/&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;/&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们综合考虑了改造成本、效果和对现有业务的影响，决定直接使用最后一招：&lt;strong&gt;分库分表&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;3.2 分库分表技术选型&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;分库分表的技术选型主要从这几个方向考虑：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;客户端sdk开源方案&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;中间件proxy开源方案&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;公司中间件团队提供的自研框架&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;自己动手造轮子&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;参考之前项目经验，并与公司中间件团队沟通后，采用了开源的 &lt;strong&gt;Sharding-JDBC &lt;/strong&gt;方案。现已更名为Sharding-Sphere。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;/&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY1ibXRKtMYdic4UPwDVhEhRO4Amrhj2W8yTOfjtU19yDoaGJ3ia0xNhMuLA/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1005.0000000000001&quot; data-cropy1=&quot;17.387543252595158&quot; data-cropy2=&quot;815.4757785467128&quot; data-ratio=&quot;0.7940298507462686&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY1pjFwEtN04LTevEYlTRYZDfqzKOXuicictqFX3MUalXwibjdhKCl53QTJg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1005&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;3.2.1 分库分表策略&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;结合业务特性，选取用户标识作为分片键，通过计算用户标识的哈希值再取模来得到用户订单数据的库表编号.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;假设共有n个库，每个库有m张表，&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;则库表编号的计算方式为：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;- 库序号：Hash(userId) / m % n&lt;/p&gt;&lt;p&gt;- 表序号：Hash(userId) % m&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;路由过程如下图所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.071301247771836&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY1ibUKPzPpqblQUYwqx73ibRUOBGaSu3QRu1fYjAgS21ic2kH0L2dkyufHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;561&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;3.2.2 分库分表的局限性和应对方案&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;分库分表解决了数据量和并发问题，但它会极大限制数据库的查询能力，有一些之前很简单的关联查询，在分库分表之后可能就没法实现了，那就需要单独对这些Sharding-JDBC不支持的SQL进行改写。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;除此之外，还遇到了这些挑战：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;（1）全局唯一ID设计&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;分库分表后，数据库自增主键不再全局唯一，不能作为订单号来使用，但很多内部系统间的交互接口只有订单号，没有用户标识这个分片键，如何用订单号来找到对应的库表呢？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;原来，我们在生成订单号时，就将库表编号隐含在其中了。这样就能在没有用户标识的场景下，从订单号中获取库表编号。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;（2）历史订单号没有隐含库表信息&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;用一张表单独存储历史订单号和用户标识的映射关系，随着时间推移，这些订单逐渐不在系统间交互，就慢慢不再被用到。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;（3）管理后台需要根据各种筛选条件，分页查询所有满足条件的订单&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;将订单数据冗余存储在搜索引擎Elasticsearch中，仅用于后台查询。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;3.3 怎么做 MySQL 到 ES 的数据同步&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;上面说到为了便于管理后台的查询，我们将订单数据冗余存储在Elasticsearch中，那么，如何在MySQL的订单数据变更后，同步到ES中呢？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里要考虑的是数据同步的时效性和一致性、对业务代码侵入小、不影响服务本身的性能等。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;/&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4986225895316804&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY1ayCo401tFN99S4rIEA3stmYWktpx3xOlcVtH78pcI7Hf4N6uCuzQ1w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;726&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;/&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5787172011661808&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY15ia7kMfZUQicmycyESeP5XwQF1wf27oygRsvxLcnxT3mxRKl2l3yHuFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;686&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;其中BinLog方案比较通用，但实现起来也较为复杂，我们最终选用的是MQ方案。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;因为ES数据只在管理后台使用，对数据可靠性和同步实时性的要求不是特别高。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;考虑到宕机和消息丢失等极端情况，在后台增加了按某些条件手动同步ES数据的功能来进行补偿。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;3.4 如何安全地更换数据库&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;如何将数据从原来的单实例数据库迁移到新的数据库集群，也是一大技术挑战&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;不但要确保数据的正确性，还要保证每执行一个步骤后，一旦出现问题，能快速地回滚到上一个步骤。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们考虑了停机迁移和不停机迁移的两种方案：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;（1）不停机迁移方案：&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;把旧库的数据复制到新库中，上线一个同步程序，使用 Binlog等方案实时同步旧库数据到新库。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;上线双写订单新旧库服务，只读写旧库。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;开启双写，同时停止同步程序，开启对比补偿程序，确保新库数据和旧库一致。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;逐步将读请求切到新库上。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;读写都切换到新库上，对比补偿程序确保旧库数据和新库一致。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;下线旧库，下线订单双写功能，下线同步程序和对比补偿程序。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.4760956175298805&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY1dvic2nJV7K2CQBdBMtPmBavbibuwWdqbIptPwu8k310ytTTicAW7dk8Jw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;502&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;（2）停机迁移方案：&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;上线新订单系统，执行迁移程序将两个月之前的订单同步到新库，并对数据进行稽核。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;将商城V1应用停机，确保旧库数据不再变化。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;执行迁移程序，将第一步未迁移的订单同步到新库并进行稽核。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;上线商城V2应用，开始测试验证，如果失败则回退到商城V1应用（新订单系统有双写旧库的开关）。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.8896848137535817&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY1x9EEsvjZSe69Cs8FR3wYZUWWcjaRSNrzwC8nX8m9kQqvpmrSUT7Qeg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;698&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;考虑到不停机方案的改造成本较高，而夜间停机方案的业务损失并不大，最终选用的是停机迁移方案。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;3.5 分布式事务问题&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;电商的交易流程中，分布式事务是一个经典问题，比如：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;/&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们是如何保证微服务架构下数据的一致性呢？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;不同业务场景对数据一致性的要求不同，业界的主流方案中，用于解决强一致性的有两阶段提交(2PC)、三阶段提交(3PC)，解决最终一致性的有TCC、本地消息、事务消息和最大努力通知等。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里不对上述方案进行详细的描述，介绍一下我们正在使用的本地消息表方案：在本地事务中将要执行的异步操作记录在消息表中，如果执行失败，可以通过定时任务来补偿。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;下图以订单完成后通知积分系统赠送积分为例。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4189497716894977&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY1NVX7wcb37XQC6gGxIqcFUJPYqwKanADGbMHNMNjiaSND449xYHm0z3w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;876&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;3.6 系统安全和稳定性&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;网络隔离&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;只有极少数第三方接口可通过外网访问，且都会验证签名，内部系统交互使用内网域名和RPC接口。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;并发锁&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;任何订单更新操作之前，会通过数据库行级锁加以限制，防止出现并发更新。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;幂等性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;所有接口均具备幂等性，不用担心对方网络超时重试所造成的影响。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;熔断&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;使用Hystrix组件，对外部系统的实时调用添加熔断保护，防止某个系统故障的影响扩大到整个分布式系统中。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;监控和告警&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;通过配置日志平台的错误日志报警、调用链的服务分析告警，再加上公司各中间件和基础组件的监控告警功能，让我们能够能够第一时间发现系统异常。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;3.7  踩过的坑&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;采用MQ消费的方式同步数据库的订单相关数据到ES中，遇到的写入数据不是订单最新数据问题&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;下图左边是原方案：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在消费订单数据同步的MQ时，如果线程A在先执行，查出数据，这时候订单数据被更新了，线程B开始执行同步操作，查出订单数据后先于线程A一步写入ES中，线程A执行写入时就会将线程B写入的数据覆盖，导致ES中的订单数据不是最新的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;解决方案是在查询订单数据时加行锁，整个业务执行在事务中，执行完成后再执行下一个线程。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6141450313339302&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt7orIXpEkiaO1lkDqhgnCyY1nQawSEsRicwcPwTgWZfBMDJp6KRCwQWxibJJO1pBFJKsrmmibVzWxsDHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1117&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;sharding-jdbc 分组后排序分页查询出所有数据问题&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;示例：select a  from  temp group by a，b order by a  desc limit 1,10。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;执行是Sharding-jdbc里group by 和 order by 字段和顺序不一致是将10置为Integer.MAX_VALUE, 导致分页查询失效。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;php&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; void processLimit(&lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;List&lt;/span&gt;&amp;lt;Object&amp;gt; parameters, &lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; SelectStatement selectStatement, &lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; boolean isSingleRouting) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     boolean isNeedFetchAll = (!selectStatement.getGroupByItems().isEmpty() || !selectStatement.getAggregationSelectItems().isEmpty()) &amp;amp;&amp;amp; !selectStatement.isSameGroupByAndOrderByItems();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    selectStatement.getLimit().processParameters(parameters, isNeedFetchAll, databaseType, isSingleRouting);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;io.shardingsphere.core.parsing.parser.context.limit.Limit&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;* &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; isFetchAll is fetch all data or not&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;* &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; databaseType database type&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;* &lt;span class=&quot;code-snippet__doctag&quot;&gt;@param&lt;/span&gt; isSingleRouting is single routing or not&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; void processParameters(&lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;List&lt;/span&gt;&amp;lt;Object&amp;gt; parameters, &lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; boolean isFetchAll, &lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; DatabaseType databaseType, &lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; boolean isSingleRouting) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    fill(parameters);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    rewrite(parameters, isFetchAll, databaseType, isSingleRouting);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; void rewrite(&lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;List&lt;/span&gt;&amp;lt;Object&amp;gt; parameters, &lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; boolean isFetchAll, &lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; DatabaseType databaseType, &lt;span class=&quot;code-snippet__keyword&quot;&gt;final&lt;/span&gt; boolean isSingleRouting) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    int rewriteOffset = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    int rewriteRowCount;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (isFetchAll) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        rewriteRowCount = Integer.MAX_VALUE;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    } &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (isNeedRewriteRowCount(databaseType) &amp;amp;&amp;amp; !isSingleRouting) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         rewriteRowCount = &lt;span class=&quot;code-snippet__keyword&quot;&gt;null&lt;/span&gt; == rowCount ? &lt;span class=&quot;code-snippet__number&quot;&gt;-1&lt;/span&gt; : getOffsetValue() + rowCount.getValue();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    } &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       rewriteRowCount = rowCount.getValue();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;null&lt;/span&gt; != offset &amp;amp;&amp;amp; offset.getIndex() &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;-1&lt;/span&gt; &amp;amp;&amp;amp; !isSingleRouting) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       parameters.set(offset.getIndex(), rewriteOffset);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;null&lt;/span&gt; != rowCount &amp;amp;&amp;amp; rowCount.getIndex() &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;-1&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        parameters.set(rowCount.getIndex(), rewriteRowCount);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;正确的写法应该是  select a  from  temp group by a desc ，b limit 1,10 ；  使用的版本是sharing-jdbc的3.1.1。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;ES分页查询如果排序字段存在重复的值，最好加一个唯一的字段作为第二排序条件，避免分页查询时漏掉数据、查出重复数据，比如用的是订单创建时间作为唯一排序条件，同一时间如果存在很多数据，就会导致查询的订单存在遗漏或重复，需要增加一个唯一值作为第二排序条件或者直接使用唯一值作为排序条件。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;四、成果&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;一次性上线成功，稳定运行了一年多&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;核心服务性能提升十倍以上&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;系统解耦，迭代效率大幅提升&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;能够支撑商城至少五年的高速发展&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;五、结语&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们在系统设计时并没有一味追求前沿技术和思想，面对问题时也不是直接采用主流电商的解决方案，而是根据业务实际状况来选取最合适的办法。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;个人觉得，一个好的系统不是在一开始就被大牛设计出来的，一定是随着业务的发展和演进逐渐被迭代出来的，持续预判业务发展方向，提前制定架构演进方案，简单来说就是：走到业务的前面去！&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3b42f808caeae7fbb713ca2a75d41f0a</guid>
<title>老黑客的圣诞节</title>
<link>https://toutiao.io/k/zx2bksv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;每年圣诞节大家都有各种温馨浪漫的过节方式。其实我们黑客也有黑客的浪漫，只是一般人不容易感受到。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2014，xmas.futile.net&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2014 年圣诞节的时候，如果你对 xmas.futile.net 这个域名执行  traceroute 操作，首先会看到一棵圣诞树，然后还有《Let It Snow! Let It Snow! Let It Snow!》《Jingle Bells》等几首圣诞歌曲的歌词：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.8672922252010724&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/iceZAzI9Y5nsaqUtl2hqicWjqEuQ63WjoHlicKMv71ibkA3ET16kDVN1ZRoLlNv2BAnEe1xsXmW9rff5Gmf0spz4GQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;746&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;要实现控制多行 traceroute 返回结果其实并不需要真有这么多路由，用一台配置了多个 IP 地址的服务器就可以。只要在服务器上根据收到的 traceroute 请求中的 TTL 值以相应的 IP 返回 ICMP Time Exceeded Message 报文即可。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;至于控制 traceroute 返回结果中的文本内容，大家首先想到的可能是 Reverse DNS。但如果你仔细看上面图中的内容就会发现这里用的一定不是 Reverse DNS。具体是什么，留给你们琢磨。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当然，现在 xmas.futile.net 已经失效了，再去 traceroute 也看不到上面的效果。毕竟在 IPv4 下玩这个游戏需要用接近一百个 IP 地址，还是有点费钱的。不过以后想玩的话可以用 IPv6，物美价廉。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1997，nmap -sX&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1997 年，nmap 发布了第一个版本。这个扫描器一诞生，就在网络上掀起了不小的风浪。因为 nmap 可以说把 TCP/IP 协议用到了极致，实现了各种奇特的扫描方式。有些方式速度非常快，有些方式可以躲过入侵检测系统，还有些方式甚至可以穿透防火墙。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这些扫描方式中有一种叫 Xmas 扫描，即“圣诞扫描”。为什么叫这个名字呢？这个问题甚至绝大部分黑客也都不知道答案。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在 RFC 1025 中，把同时设置了 SYN、FIN、PSH、URG 四个标志位的 TCP 数据包称作 Christmas Tree Packet。因为当所有标志位都设置上，就像同时点亮圣诞树上所有的灯一样。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;不过 nmap 在执行圣诞扫描时只会发出设置了 FIN、PSH、URG 三个标志位的数据包，并不会加上 SYN。因为圣诞扫描的目的是为了探测端口是否开放。当请求发出，如果收到 RST 报文，该端口就被认为是关闭的；没有响应则意味着端口是开放或被过滤的。而根据 RFC 793，只有不包含 SYN，RST，或者 ACK 位的报文会导致一个 RST 返回。所以圣诞扫描的报文肯定不能加上 SYN。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;圣诞扫描所发出的报文不会出现在正常通信中，所以很容易被网络安全设备检测到。而且在当前的网络环境下，这种扫描方式也很难在互联网上得到有效返回结果。所以这种技术已经基本没有实用价值。不过如果你在圣诞节这天使用圣诞扫描同时又加了 -v 参数，nmap 还是会祝你圣诞快乐：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;tk@Debian:~$ sudo nmap -sX -v 192.168.0.1&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-25 11:05 CST&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;Nmap wishes you a merry Christmas!&lt;/span&gt;&lt;span&gt; Specify -sX for Xmas Scan (https://nmap.org/book/man-port-scanning-techniques.html).&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Initiating Ping Scan at 11:05&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Scanning 192.168.0.1 [4 ports]&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Completed Ping Scan at 11:05, 0.00s elapsed (1 total hosts)&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Initiating Parallel DNS resolution of 1 host. at 11:05&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Completed Parallel DNS resolution of 1 host. at 11:05, 0.01s elapsed&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Initiating XMAS Scan at 11:05&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Scanning router (192.168.0.1) [1000 ports]&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Completed XMAS Scan at 11:06, 1.23s elapsed (1000 total ports)&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Nmap scan report for router (192.168.0.1)&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Host is up (0.0090s latency).&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Not shown: 997 closed ports&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;PORT    STATE         SERVICE&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;53/tcp  open|filtered domain&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;80/tcp  open|filtered http&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;443/tcp open|filtered https&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Read data files from: /usr/bin/../share/nmap&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Nmap done: 1 IP address (1 host up) scanned in 1.29 seconds&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;           Raw packets sent: 1007 (40.272KB) | Rcvd: 998 (39.908KB)&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1988，phillipps.c&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;各种编程比赛中，有一个资格很老又很另类的，叫“国际C语言混乱代码大赛 ”，International Obfuscated C Code Contest，简称 IOCCC。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;IOCCC 创办于 1984 年，目标是选出最有创意且最让人难以理解的 C 语言代码。所以 IOCCC 的获奖作品大多不长，甚至只有一两行。但都非常难以阅读，源码比编译出来的二进制还难懂。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1988 年，英国的 Ian Phillipps 凭借下面这段代码获得了 IOCCC 的“最不可能成功编译奖”：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;main(t,_,a )&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;char&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;*&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;{&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;return!&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;0&amp;lt;t?&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;t&amp;lt;3?&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main(-79,-13,a+&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main(-87,1-_,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main(-86, 0, a+1 )&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;+a)):&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;t&amp;lt;_?&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main( t+1, _, a )&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;:3,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main ( -94, -27+t, a )&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&amp;amp;&amp;amp;t == 2 ?_&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&amp;lt;13 ?&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main ( 2, _+1, &quot;%s %d %d\n&quot; )&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;:9:16:&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;t&amp;lt;0?&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;t&amp;lt;-72?&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main( _, t,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&quot;@n&#x27;+,#&#x27;/*{}w+/w#cdnr/+,{}r/*de}+,/*{*+,/w{%+,/w#q#n+,/#{l,+,/n{n+,/+#n+,/#;#q#n+,/+k#;*+,/&#x27;r :&#x27;d*&#x27;3,}{w+K w&#x27;K:&#x27;+}e#&#x27;;dq#&#x27;l q#&#x27;+d&#x27;K#!/+k#;q#&#x27;r}eKK#}w&#x27;r}eKK{nl]&#x27;/#;#q#n&#x27;){)#}w&#x27;){){nl]&#x27;/+#n&#x27;;d}rw&#x27; i;# ){nl]!/n{n#&#x27;; r{#w&#x27;r nc{nl]&#x27;/#{l,+&#x27;K {rw&#x27; iK{;[{nl]&#x27;/w#q#n&#x27;wk nw&#x27; iwk{KK{nl]!/w{%&#x27;l##w#&#x27; i; :{nl]&#x27;/*{q#&#x27;ld;r&#x27;}{nlwb!/*de}&#x27;c ;;{nl&#x27;-{}rw]&#x27;/+,}##&#x27;*}#nc,&#x27;,#nw]&#x27;/+kd&#x27;+e}+;#&#x27;rdq#w! nr&#x27;/ &#x27;) }+}{rl#&#x27;{n&#x27; &#x27;)# }&#x27;+}##(!!/&quot;)&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;:&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;t&amp;lt;-50?&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;_==*a ?&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;putchar(31[a]):&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main(-65,_,a+1)&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;:&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main((*a == &#x27;/&#x27;) + t, _, a + 1 )&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;:&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;0&amp;lt;t?&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main ( 2, 2 , &quot;%s&quot;)&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;:*a==&#x27;/&#x27;||&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main(0,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;main(-61,*a, &quot;!ek;dc i@bK&#x27;(q)-[w]*%n+r3#l,{}:\nuwloca-O;m .vpbks,fxntdCeghiry&quot;)&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;,a+1);}&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这个“最不可能成功编译奖”真的实至名归，怎么看也不像是能编译通过的样子。但偏偏就可以编译。不但能编译，而且编译出来的程序执行后会打印出《圣诞节的十二天（The Twelve Days of Christmas）》 这首歌的完整歌词：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;tk@Debian:~$ ./a.out&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;On the first day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the second day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the third day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;three french hens, two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the fourth day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;four calling birds, three french hens, two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the fifth day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;five gold rings;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;four calling birds, three french hens, two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the sixth day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;six geese a-laying, five gold rings;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;four calling birds, three french hens, two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the seventh day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;seven swans a-swimming,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;six geese a-laying, five gold rings;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;four calling birds, three french hens, two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the eighth day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;eight maids a-milking, seven swans a-swimming,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;six geese a-laying, five gold rings;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;four calling birds, three french hens, two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the ninth day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;nine ladies dancing, eight maids a-milking, seven swans a-swimming,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;six geese a-laying, five gold rings;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;four calling birds, three french hens, two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the tenth day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;ten lords a-leaping,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;nine ladies dancing, eight maids a-milking, seven swans a-swimming,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;six geese a-laying, five gold rings;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;four calling birds, three french hens, two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the eleventh day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;eleven pipers piping, ten lords a-leaping,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;nine ladies dancing, eight maids a-milking, seven swans a-swimming,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;six geese a-laying, five gold rings;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;four calling birds, three french hens, two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;On the twelfth day of Christmas my true love gave to me&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;twelve drummers drumming, eleven pipers piping, ten lords a-leaping,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;nine ladies dancing, eight maids a-milking, seven swans a-swimming,&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;six geese a-laying, five gold rings;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;four calling birds, three french hens, two turtle doves&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;and a partridge in a pear tree.&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;《圣诞节的十二天》 歌词本来就有大量重复内容，所以代码可以比打印出来的歌词还短并不奇怪。而通过简单的位移加密也很容易做到让源码里没有任何歌词的痕迹。但能够如此善于利用 C 语言的各种特性，把嵌套递归用到极致，让看起来一片混乱的代码可以正常工作，就真当得起“精妙”两个字了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;看了这段代码你应该也能想明白一个问题：为了自证清白而开放源代码只是一种姿态，因为想通过源码审计来找后门，是没那么容易的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;顺便说一句：《圣诞节的十二天》是一首非常古老的歌曲，诞生时间以追溯到 1780 年。所以歌词内容看起来非常古朴。其实念一下就明白了，这就是外国贯口。不信和西河大鼓《玲珑塔》的词对照看看：&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;em&gt;twelve drummers drumming, &lt;/em&gt;&lt;em&gt;eleven pipers piping, &lt;/em&gt;&lt;em&gt;ten lords a-leaping, nine ladies dancing, &lt;/em&gt;&lt;em&gt;eight maids a-milking, seven swans a-swimming, &lt;/em&gt;&lt;/section&gt;&lt;section&gt;&lt;em&gt;six geese a-laying, five gold rings; &lt;/em&gt;&lt;/section&gt;&lt;section&gt;&lt;em&gt;four calling birds, three french hens, &lt;/em&gt;&lt;em&gt;two turtle doves and a partridge in a pear tree.&lt;/em&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;em&gt;玲珑塔，塔玲珑，玲珑宝塔十二层。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;十二张高桌四十八条腿，十二个和尚十二本经，&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;十二个铙钹十二口磬，十二个木鱼十二盏灯。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;十二个金铃，四十八两，风儿一刮响哗愣。&lt;/em&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>01a066d0975b354a2ea22fd32319b574</guid>
<title>跨系统数据一致性方案的思考（上）</title>
<link>https://toutiao.io/k/u6n8etu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;92839&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;欢迎将文章分享到朋友圈&lt;br/&gt;如需转载，请在后台回复“转载”获取授权&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;t36&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-markdown=&quot;&quot;&gt;1、导读&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;本文主要意在总结沉淀现有问题解决经验过程，整理解决跨系统数据不一致问题的经验方法。&lt;/p&gt;&lt;p&gt;跨系统数据一致性，比较优秀的解决方案就是微服务化，不同应用系统采用统一数据源方式，这样可以有效避免数据一致性问题。&lt;/p&gt;&lt;p&gt;但是我们很多系统由于历史原因或者业务缘由，导致非服务化情况下，又要采取数据一致性方案。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;t36&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-markdown=&quot;&quot;&gt;2、背景&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;业务场景简单描述如下：&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;92839&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;上游系统（生成订单数据）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;→ 业务端系统A（进行订单流程作业管理）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;→ 用户端系统B（将订单作业流程映射成用户流程，供用户查看）&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;业务端系统A进行任何订单流程作业相关的管理操作，都需要周知到用户端B系统。示意图如下所示：&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3673469387755102&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgRraVn8u9lrW3N45VO8eiaPtDzT0oJVtDibNAJVAaelma4o6qGuxtvV8wBN6HZaCdDTCl4xSSDx57IA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;637&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;t36&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-markdown=&quot;&quot;&gt;3、问题&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;Q：&lt;span&gt;那如何实现业务端系统A-用户端系统B的跨系统数据同步呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;t36&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-markdown=&quot;&quot;&gt;4、分析及解决&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;阶段1：业务试点一个城市，快速上线应用&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现有技术方案对比分析：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1、对于订单数据，共用业务端系统A-数据库&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.648936170212766&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgRraVn8u9lrW3N45VO8eiaPto9JiaO1JpOjXHUCrrlZeMj2UDo91QicYo3QpP7d5hPiaNLAvmqp69Ruhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;282&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;存在的弊端：&lt;/p&gt;&lt;p&gt;    1）对DB-A数据库造成查询压力；&lt;/p&gt;&lt;p&gt;    2）对DB-A数据库强依赖，用户端系统B处理逻辑需要配合业务端A数据结构变更随时做调整；&lt;/p&gt;&lt;p&gt;    3）系统间强耦合，DB-A数据库问题会直接影响业务端系统A服务可用性（SLA）及性能。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2、利用Redis Set实现简单数据同步方案&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5260586319218241&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgRraVn8u9lrW3N45VO8eiaPtEHhTbz8JHdfTA1dXu7bVBVgBTNJuagsaib76kmrR43QQ2bfIau8umkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;614&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;此方案主要解决：&lt;/p&gt;&lt;p&gt;    1）业务端A数据变动，异步通知用户端B知晓；&lt;/p&gt;&lt;p&gt;    2）Redis Set方式以1min为单位同步数据，过滤短时间内频繁操作订单造成的数据请求压力。&lt;/p&gt;&lt;p&gt;存在的弊端：&lt;/p&gt;&lt;p&gt;    1）Redis异常，数据丢失无恢复方案，只能针对时间等条件筛选后批量拉取修复；&lt;/p&gt;&lt;p&gt;    2）业务端A 直接SQL刷DB数据时，用户端B无感知。&lt;/p&gt;&lt;p&gt;其他工具的准备：&lt;/p&gt;&lt;p&gt;    对于业务端A刷数据或同步丢失造成未同步交易单情况，开发数据工具来手动恢复：&lt;span&gt;可以指定订单ID，手动同步业务端A数据到用户端B，灵活快速，便于问题数据的修复。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;阶段2：业务发展较快，复杂度上升，多城市落地&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;为了应对业务快速发展，业务订单类型和流程操作复杂度急剧上升，同时还存在拓城需求（一城一策）&lt;/p&gt;&lt;p&gt;原同步方式无论从性能上还是稳定性方面，都不足以应对当前的需求。&lt;/p&gt;&lt;p&gt;计划改造为Kafka方式进行数据同步，示例图如下：&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4589905362776025&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgRraVn8u9lrW3N45VO8eiaPtnX8mbfHicuBHv5j4jqevwgEOzALImaJ5dApYy4DlRHAOZcbVU1earMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;634&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;此方案主要优势：&lt;/p&gt;&lt;p&gt;    1）使用kafka解耦两端系统为生产、消费端，对于高并发情况有效削峰，同时保障队列数据不丢失；&lt;/p&gt;&lt;p&gt;    2）消息处理效率提升&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Kafka方式传递消息体，处理性能及数据保障增强。&lt;/p&gt;&lt;p&gt;在实际业务中，消息量可能会随着业务量增长，由于系统消费能力有限，消息可能产生堆积，而消费端对消息有保留时长，可能会导致消息丢失，所以对核心数据消费以及消息大数据量消费需要配置kafka消息堆积监控。当出现监控报警时能及时考虑当前业务是否收到影响，并且从代码的角度是否有优化的空间，例如及时抛弃无效消息，kafka参数是否配置合理等。&lt;/p&gt;&lt;p&gt;&lt;span&gt;假如消息生产端（业务端系统A）出现消息的阻塞，同样会影响跨系统的数据一致性，如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3408450704225352&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgRraVn8u9lrW3N45VO8eiaPt0emkCQFiaiaxHT3s083RHKBBSEUBFTnYia8Q8XyK9O53VEFljAyj1UibYQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;710&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;上述问题主要的解决方案：&lt;/p&gt;&lt;p&gt;    1）监控完善（将触发kafka生产端的异步消息队列和kafka堆积消息进行监控）&lt;/p&gt;&lt;p&gt;    2）系统B直接监听上游数据，与系统A数据做融合（前提是确定好数据的唯一性标识）&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;阶段3：统一数据服务&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;从系统改进里程碑来看，目前仍属于冗余式存储实现，那如何从根本上解决跨系统交易单数据一致性问题呢？&lt;/p&gt;&lt;p&gt;消除数据不一致问题，归根结底就是要将&lt;strong&gt;数据源进行统一&lt;/strong&gt;。&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.8933333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgRraVn8u9lrW3N45VO8eiaPtQzPd2wgxXNV5h58FhSQELEvqKPhnVLRRTzdiayP3COLsZuwbGmMnH3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;225&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;目前我们正计划从平台层面推进DDD领域服务划分及服务化的建设落地，后续的问题及解决经验后期再同大家进行分享。&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;23&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;23&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;“&lt;/section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;关于为什么使用DDD领域服务划分？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;主要是考虑DDD的Bounded context概念特别有利于识别微服务，可以作为划分服务的一种依据。&lt;/span&gt;&lt;span&gt;正好与微服务的设计思想关键点相契合：&lt;/span&gt;&lt;span&gt;边界和粒度。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;t36&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-markdown=&quot;&quot;&gt;5、总结&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;1、任何架构方案都是不断演进的&lt;/p&gt;&lt;p&gt;2、架构的目的是解决业务问题&lt;/p&gt;&lt;p&gt;     能够解决当前问题的架构方案，同时兼具易于扩展及维护，那就是一个优秀的架构。&lt;/p&gt;&lt;p&gt;3、软件设计过程中，不需要刻意去应用消息队列使用场景&lt;/p&gt;&lt;p&gt;     而当需要引入时，要同时考虑开发、维护成本以及对应性能的提升的性价比，否则得不偿失。&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>