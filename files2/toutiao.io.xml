<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>639f065578fea23133d6e992b70c0267</guid>
<title>Redis 集群搭建采坑总结</title>
<link>https://toutiao.io/k/b60qswo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;span&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;    先澄清一下，整个过程问题都不是我解决的，我在里面就是起了个打酱油的角色。因为实际上我负责这个项目，整个过程也比较清楚。之前也跟具体负责的同事说过，等过段时间带他做做项目复盘。结果一直忙，之前做的事情都快忘了也没带他做复盘。所以趁着还记得，总结一下这个问题，也算一起做个复盘总结了。&lt;/p&gt;&lt;p&gt;    本周一的时候，我们测试环境遇到一个问题：启动一个服务就会导致后端调用耗时增加。当时咨询了对这个问题之前有了解的同事得到的答复是因为一笔请求发到两套测试环境(一个请求需要在两套环境下运行结果做对比)，因为这两套环境共用同一套redis集群。收到第二个相同请求的时候，会将这笔请求标记为重复请求。下游接收到这笔请求是重复的，需要重新查询数据库验证请求是否重复，不是的话做一个纠正。所以这时候会造成请求延迟升高。&lt;/p&gt;&lt;p&gt;    负责解决这个问题的同事小A就问我：那是不是再搭建一套将两套Redis集群分开就解决了。我说不一定，还有解释不通的地方：一个环境服务不启动不写redis，另一个环境服务启动写redis的时候也会遇到这个问题。&lt;/p&gt;&lt;p&gt;    于是小A找了这个服务相关负责的同事了解业务。因为测试环境的总责任人是我，所以了解业务的时候，小A也把我拉了一起了解。通过同事的讲述了解到一个环境中服务要写两个机房。如果两个机房的Redis是同一套也会被标记成重复请求。&lt;/p&gt;&lt;p&gt;    至此，解决环境问题的方法有了答案：每套环境要搭建两套Redis集群，两个环境4套Redis集群来解决问题。&lt;/p&gt;&lt;p&gt;    往往，一个答案只是一系列问题的开始。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;时间线&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;    我们的搭建方案是直接在使用Redis的服务上搭建连接它的两套Redis集群，只改下端口，多跑两个进程。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;问题1：服务器退出登录Redis服务会停止&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;     小A告诉我遇到问题的现象：按照网上经典的安装启动教程，启动成功了。但是当干会儿别的，ssh自动退出登录之后再看Redis服务就停止了。&lt;/p&gt;&lt;p&gt;     我听到这里首先想到的是这个现象基本可以断定是以非daemon进程在运行，于是我上网上找了以deamon方式运行的命令发给小A：&lt;/p&gt;&lt;p&gt;redis-server ./redis.conf --daemonize yes&lt;/p&gt;&lt;p&gt;     小A看了解决方法补充到那一定也可以在配置文件里直接配置daemon方式运行。我表示赞同，他也是这么做的。我当时没有点破，相信刚毕业的他不久也自己会发现配置文件和显示命令实际上是一回事。只是一个是永久生效，一个是每次运行时生效。而直接用这条命令只是为了说明本质问题。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;问题2：服务连接Redis报错Not Auth&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;     小A又向我反馈报了一个错，说他在网上查的是Redis版本问题，估计需要重新搭建Redis。我过去看了一下：Redis集群是3.X的版本，jedis客户端用的是2.9的版本。没有听说过Redis3.X的版本有不向下兼容的问题，同时因为这个Redis是从负责Redis的团队要过来的安装包，应该和现在跑着的是一个版本。如果怀疑Redis的团队发的安装包与之前不一样的话，我也确信之前肯定版本不会低于3.0，因为Redis是从3.0之后才支持集群的。所以我判定不是Redis版本问题。让他再查查。实际上我的意思是让他换关键词来查。比如可以按照报错的提示原因来查，也可以按照异常来查，不同的关键词搜索可以获得不同的信息。&lt;/p&gt;&lt;p&gt;    然后我看了报的错：其他的没细看，只见赫然写着：Not Auth。我就问：Redis服务有没有设置密码。他说没有，还演示了一下，我在旁边确认了没有。就查看客户端配置有没有配置密码。果然客户端里有密码配置。这就与服务端不匹配了。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;问题3：报错cluster support disabled&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;    小A将客户端密码去掉重新打包部署之后，Not Auth的错不报了，但是其实报了两个错，还有一个错没解决：就是提示cluster support disabled。&lt;/p&gt;&lt;p&gt;    我说集群方式启动应该就是一个配置，应该有个cluster-enabled什么的从no改成yes。我还出了个馊主意(注意这里用到的馊主意，想想《红楼梦》里每句话都是剧透，这里也不例外)：我说理论上一台集群也可以算一个集群。应该可以直接改个配置就以集群方式启动了。&lt;/p&gt;&lt;p&gt;    小A按照我说的思路用直接改配置为集群的方法，客户端再启动果然没有报错了。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;问题4：请求延迟没有好转，Redis服务端没有写入成功数据&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;    客户端没有报错之后，小A重试原问题现场，请求延迟没有好转。另外，还发现Redis服务端没有写入成功的数据。&lt;/p&gt;&lt;p&gt;    这次我和小A首先一起排查配置有没有配置对。发现配置没有问题，我就跟小A说：让他多打日志。客户端连接的地方打一些，读写数据的地方打一些。&lt;/p&gt;&lt;p&gt;    通过这个方法，小A定位到客户端连接的连接池为空。最终自己排查到是一台机器的集群的哈希槽在一台机器情况下哈希槽分配有问题，数据写入失败。最后每个集群多起了2个Redis进程做成3个节点的集群解决了问题。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;可优化的排查思路分析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;    在问题4排查的时候，我和小A一起检查了配置是否正确来确认Redis请求是请求到了正确的服务端。其实，有个更为直接和说明问题的方法：抓包。可以tcpdump端口查请求流量是不是正确从客户端发出来了，被转发到了哪里。&lt;/p&gt;&lt;p&gt;    在&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247485553&amp;amp;idx=1&amp;amp;sn=945e46d81bef62f35ac447895d99cdd2&amp;amp;chksm=fafde2dfcd8a6bc905cd0e9e50a9e51247a6d53f614a948b89209341a55877893a3fcba295dd&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《技术方案设计的方法》&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《技术方案设计的方法》&lt;/a&gt;里我也提到，很多时候搜索不到自己想要的信息很可能是关键词的问题。排查问题的时候也可以试着换换关键词来搜索。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;根本原因分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;    这里面有个问题没有彻底搞清楚：为什么一台机器的Redis集群会有问题。&lt;/p&gt;&lt;p&gt;    问了小A，当时异常时getSlots方法时返回了空。就是说问题实际上可能是slot没有被分配。&lt;span/&gt;&lt;/p&gt;&lt;p&gt;    我就问他单台机器的时候有没有在redis-cli客户端上运行cluster info命令。他给我发了下面的运行情况截图。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6090750436300174&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRl89y3phMeqKp0zqjUPXAouo4xPAUDrcwSPreZt9xV0gMHgeZVXh3dwkcVXbOcbJXOUsbuShHoXXCw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;573&quot;/&gt;&lt;/p&gt;&lt;p&gt;    这张截图验证了我的猜想，slot没有被分配，集群状态为失败，所以连接不上。&lt;/p&gt;&lt;p&gt;    那需要连接上的条件并非是集群里有几个节点，而是slots分配，集群状态成功。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2623688155922039&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRl89y3phMeqKp0zqjUPXAouoK0n5ZK12F4Ge6qV0G5f0trZBftHpC3x5ekDMoApRstA6ejgyxE0xKw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1334&quot;/&gt;&lt;/p&gt;&lt;p&gt;    为了验证这个猜想，我搭建了一个一个节点的集群，手动cluster addslots了0到16383个slot。集群判断16384个slot都分配完毕，自动状态改成OK。&lt;/p&gt;&lt;p&gt;    &lt;/p&gt;&lt;p&gt;    这整个过程说明了：网上都是说Redis集群必须是3个节点以上的最好是单数个节点来启动。单数个节点是为了投票的时候可以三局两胜得出结论：一半以上的节点挂掉整个集群不可用。而对于Redis根本上判断集群是否可用是根据slot有没有完整的16384个slot在提供服务决定的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;    我觉得在整个过程中小A的表现我觉得很OK的。有4点：&lt;/p&gt;&lt;p&gt;1&amp;gt;主观能动性&lt;/p&gt;&lt;p&gt;    在过程中，他自己通过网上搜素找资源，自己解决了很多问题。整个问题处理过程中其实没花费我多少时间，花时间的事情他都自己解决了。&lt;/p&gt;&lt;p&gt;2&amp;gt;合理的利用了各种资源&lt;/p&gt;&lt;p&gt;    对于业务不理解，他找了理解业务的同事。技术问题搞不定他找了我。因为我对项目负责，所以找我是很合情合理的。同时，我是很希望他遇到这种事情来找我的。因为他找我证明他是信任我的，相信我能一定程度帮到他。第二，他找我是把我当成一种资源。作为资源我被需要，是有价值的。被需要让人觉得很踏实。&lt;/p&gt;&lt;p&gt;    我在有搞不定的事情的时候也向上寻求帮助。比如之前需要其他组协作的时候人家有排期遇到困难，领导出面帮忙搞定了。还有申请资源由于暂时性资源紧张，申请不到，也是更上级出面帮忙搞定了。一个称职的上级一定可以成为一种资源，也愿意让自己成为资源。但是成为资源的形式不同，有的可能提供的是战略，有的提供的是精神支持等。&lt;/p&gt;&lt;p&gt;3&amp;gt;事后总结&lt;/p&gt;&lt;p&gt;    问题解决后，小A有自己写wiki总结事情经过，避免后人采坑，同时自身也有总结收获。&lt;/p&gt;&lt;p&gt;4&amp;gt;及时沟通&lt;/p&gt;&lt;p&gt;    中间过程中，他每个关键步骤都有及时跟我沟通。因为解决完后他反馈给我：他自己觉得对于redis原理还没有理解，所以不清楚为什么3个节点就OK的原因。我因为了解他的想法，所以才自己又实验给出一个根本原因分析。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;    关于Redis，就一句话：那些很多人说只有面试的时候才能用到的东西，我总是发现实际工作中很有用。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;相关阅读&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d41a4e7a01121d242de7a4a1fbb203d0</guid>
<title>傻白甜，约不约？</title>
<link>https://toutiao.io/k/s60lax4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7228915662650602&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAagibV9Gt9FiajCT4ibbTnw2UIcXqPr2t9UZRuojd2ibQibVdcgrflLuTQaBL30Y1thfqgXCYApzNjND6y4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;581&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先来介绍下，今天的主角“傻白甜”（SBT:Simple Build Tools）， 其功能与 Maven 和 Gradle 类似。其是由 Scala 编写，对于新手入门不是太友好，如果只是写纯 Java 的 Bug ，大可不必和自己过不去，但是如果你经常使用 Spark 等大数据工具，还是有点必要学学使用的。而且 Sbt 默认会从一些奇奇怪怪的地方下载依赖，相信大家的第一次，都不会很美好（ Sbt 的项目构建异常缓慢，而且还经常会失败），笔者也不例外，所以有了这篇文章，希望对你有些帮助。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;提要：本文首先会介绍如果要使用sbt，需要完成那些配置，然后使用sbt，构建2个helloworld，一个基于akka的，一个是基于delta的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;配置全局仓库&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在用户目录下，修改文件 &lt;/span&gt;&lt;code&gt;&lt;span&gt;C:\Users\dafei\.sbt\repositories&lt;/span&gt;&lt;/code&gt;&lt;span&gt; ， 如果没有，可以自行创建目录及文件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;添加内容：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[repositories]&lt;br/&gt;&lt;span&gt;local&lt;/span&gt;&lt;br/&gt;ali: https://maven.aliyun.com/repository/central/&lt;br/&gt;huaweicloud-maven: https://repo.huaweicloud.com/repository/maven/&lt;br/&gt;maven-central: https://repo1.maven.org/maven2/&lt;br/&gt;sbt-plugin-repo: https://repo.scala-sbt.org/scalasbt/sbt-plugin-releases, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[&lt;span&gt;type&lt;/span&gt;]s/[artifact](-[classifier]).[ext]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;IDEA 配置&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;File -&amp;gt; Settings -&amp;gt; Build,Execution,Deployment -&amp;gt; Build Tools -&amp;gt; sbt&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6824378508420208&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAagibV9Gt9FiajCT4ibbTnw2UIcXsIFKtic3Mt3ibUWhQswHpycibfmaJQcibqQD3KotOQyB95Yp6dK8aSm23A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1247&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;添加Vm参数 &lt;/span&gt;&lt;code&gt;&lt;span&gt;-Dsbt.override.build.repos=true&lt;/span&gt;&lt;/code&gt;&lt;span&gt; ， 也可以通过设置环境变量 &lt;/span&gt;&lt;code&gt;&lt;span&gt;SBT_OPTS=&quot;-Dsbt.override.build.repos=true&quot;&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 实现。这里需要说明，如果需要指定自己的 sbt ，并不能像其他软件，设置倒跟目录就行，这里需要指定倒 bin 目录下的 sbt-launch.jar&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.47958115183246075&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAagibV9Gt9FiajCT4ibbTnw2UIcXg6LVUQLec8sHh6ZEA2Vgh8RErYVH06Iu7HiaOOFKL5biarfjQqIFn6hw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;955&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编译一下，会发现舒爽很多了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;sbt 项目依赖&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在使用 scala 的时候，大家一定要注意自己的sdk版本以及配置的依赖包的版本要一致，如果不符，就会出现各种奇怪的问题&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;libraryDependencies += &lt;span&gt;&quot;org.apache.spark&quot;&lt;/span&gt; %% &lt;span&gt;&quot;spark-core&quot;&lt;/span&gt; % &lt;span&gt;&quot;3.0.1&quot;&lt;/span&gt;&lt;br/&gt;libraryDependencies += &lt;span&gt;&quot;org.apache.spark&quot;&lt;/span&gt; %% &lt;span&gt;&quot;spark-sql&quot;&lt;/span&gt; % &lt;span&gt;&quot;3.0.1&quot;&lt;/span&gt;&lt;br/&gt;libraryDependencies += &lt;span&gt;&quot;org.apache.spark&quot;&lt;/span&gt; %% &lt;span&gt;&quot;spark-catalyst&quot;&lt;/span&gt; % &lt;span&gt;&quot;3.0.1&quot;&lt;/span&gt;&lt;br/&gt;libraryDependencies += &lt;span&gt;&quot;org.apache.spark&quot;&lt;/span&gt; %% &lt;span&gt;&quot;spark-streaming&quot;&lt;/span&gt; % &lt;span&gt;&quot;3.0.1&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;libraryDependencies += &lt;span&gt;&quot;io.delta&quot;&lt;/span&gt; %% &lt;span&gt;&quot;delta-core&quot;&lt;/span&gt; % &lt;span&gt;&quot;0.7.0&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;libraryDependencies += &lt;span&gt;&quot;com.typesafe.akka&quot;&lt;/span&gt; %% &lt;span&gt;&quot;akka-actor&quot;&lt;/span&gt; % &lt;span&gt;&quot;2.6.10&quot;&lt;/span&gt;&lt;br/&gt;libraryDependencies += &lt;span&gt;&quot;com.typesafe.akka&quot;&lt;/span&gt; %% &lt;span&gt;&quot;akka-remote&quot;&lt;/span&gt; % &lt;span&gt;&quot;2.6.10&quot;&lt;/span&gt;&lt;br/&gt;libraryDependencies += &lt;span&gt;&quot;com.typesafe.akka&quot;&lt;/span&gt; %% &lt;span&gt;&quot;akka-stream&quot;&lt;/span&gt; % &lt;span&gt;&quot;2.6.10&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;akka&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Akka是JAVA虚拟机平台上构建高并发、分布式和容错应用的工具包和运行时。Akka用Scala语言编写，同时提供了Scala和Java的开发接口。Akka处理并发的方法基于Actor模型，Actor之间通信的唯一机制就是消息传递。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Akka特点：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;对并发模型进行了更高的抽象&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;是异步、非阻塞、高性能的事件驱动编程模型&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;是轻量级事件处理（1GB内存可容纳百万级别个Actor）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;它提供了一种称为Actor的并发模型，其粒度比线程更小，你可以在系统中启用大量的Actor。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;它提供了一套容错机制，允许在Actor出现异常时进行一些恢复或重置操作。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Akka既可以在单机上构建高并发程序，也可以在网络中构建分布式程序，并提供位置透明的Actor定位服务。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;代码案例：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;package cn.datahub&lt;br/&gt;&lt;br/&gt;import akka.actor.{Actor, ActorSystem, Props}&lt;br/&gt;&lt;br/&gt;import scala.io.StdIn&lt;br/&gt;&lt;br/&gt;class HelloActor extends Actor{&lt;br/&gt;  // 重写接受消息的偏函数，其功能是接受消息并处理&lt;br/&gt;  override def receive: Receive = {&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;你好帅&quot;&lt;/span&gt; =&amp;gt; println(&lt;span&gt;&quot;竟说实话，我喜欢你这种人!&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;丑八怪&quot;&lt;/span&gt; =&amp;gt; println(&lt;span&gt;&quot;滚犊子 ！&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;stop&quot;&lt;/span&gt; =&amp;gt; {&lt;br/&gt;      context.stop(self) // 停止自己的actorRef&lt;br/&gt;      context.system.terminate() // 关闭ActorSystem，即关闭其内部的线程池（ExcutorService）&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;object HelloActor {&lt;br/&gt;  /**&lt;br/&gt;   * 创建线程池对象MyFactory，用来创建actor的对象的&lt;br/&gt;   */&lt;br/&gt;  private val MyFactory = ActorSystem(&lt;span&gt;&quot;myFactory&quot;&lt;/span&gt;)    //里面的&lt;span&gt;&quot;myFactory&quot;&lt;/span&gt;参数为线程池的名称&lt;br/&gt;  /**&lt;br/&gt;   *     通过MyFactory.actorOf方法来创建一个actor，注意，Props方法的第一个参数需要传递我们自定义的HelloActor类，&lt;br/&gt;   * 第二个参数是给actor起个名字&lt;br/&gt;   */&lt;br/&gt;  private val helloActorRef = MyFactory.actorOf(Props[HelloActor], &lt;span&gt;&quot;helloActor&quot;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;  def main(args: Array[String]): Unit = {&lt;br/&gt;    var flag = &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt;(flag){&lt;br/&gt;      /**&lt;br/&gt;       * 接受用户输入的字符串&lt;br/&gt;       */&lt;br/&gt;      &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;请输入您想发送的消息:&quot;&lt;/span&gt;)&lt;br/&gt;      val consoleLine:String = StdIn.readLine()&lt;br/&gt;      /**&lt;br/&gt;       * 使用helloActorRef来给自己发送消息，helloActorRef有一个叫做感叹号(&lt;span&gt;&quot;!&quot;&lt;/span&gt;)的方法来发送消息&lt;br/&gt;       */&lt;br/&gt;      helloActorRef ! consoleLine&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (consoleLine.equals(&lt;span&gt;&quot;stop&quot;&lt;/span&gt;)){&lt;br/&gt;        flag = &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;        println(&lt;span&gt;&quot;程序即将结束！&quot;&lt;/span&gt;)&lt;br/&gt;      }&lt;br/&gt;      /**&lt;br/&gt;       * 为了不让&lt;span&gt;while&lt;/span&gt;的运行速度在receive方法之上，我们可以让他休眠0.1秒&lt;br/&gt;       */&lt;br/&gt;      Thread.sleep(100)&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;执行效果：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.25410733844468786&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAagibV9Gt9FiajCT4ibbTnw2UIcXEjTa3OAUsEXkktq0yVmicjpMlZbsqNyYXtVCUdRuGlh51f1Ovl20vlQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;913&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Delta Lake&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Delta Lake 是一个存储层，为 Apache Spark 和大数据 workloads 提供 ACID 事务能力，其通过写和快照隔离之间的乐观并发控制（optimistic concurrency control），在写入数据期间提供一致性的读取，从而为构建在 HDFS 和云存储上的数据湖（data lakes）带来可靠性。Delta Lake 还提供内置数据版本控制，以便轻松回滚。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码案例：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;package cn.datahub&lt;br/&gt;&lt;br/&gt;import io.delta.tables.DeltaTable&lt;br/&gt;import org.apache.spark.sql.SparkSession&lt;br/&gt;import org.apache.spark.sql.functions.expr&lt;br/&gt;&lt;br/&gt;object Delta {&lt;br/&gt;  def main(args: Array[String]): Unit = {&lt;br/&gt;&lt;br/&gt;    System.setProperty(&lt;span&gt;&quot;hadoop.home.dir&quot;&lt;/span&gt;, &lt;span&gt;&quot;E:\\devlop\\workspace\\wanwansbt3&quot;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;    val spark = SparkSession.builder.appName(&lt;span&gt;&quot;MyApp&quot;&lt;/span&gt;).master(&lt;span&gt;&quot;local&quot;&lt;/span&gt;)&lt;br/&gt;      //      .config(&lt;span&gt;&quot;spark.jars.packages&quot;&lt;/span&gt;, &lt;span&gt;&quot;io.delta:delta-core_2.12:0.7.0&quot;&lt;/span&gt;)&lt;br/&gt;      .config(&lt;span&gt;&quot;spark.sql.extensions&quot;&lt;/span&gt;, &lt;span&gt;&quot;io.delta.sql.DeltaSparkSessionExtension&quot;&lt;/span&gt;)&lt;br/&gt;      .config(&lt;span&gt;&quot;spark.sql.catalog.spark_catalog&quot;&lt;/span&gt;, &lt;span&gt;&quot;org.apache.spark.sql.delta.catalog.DeltaCatalog&quot;&lt;/span&gt;)&lt;br/&gt;      .getOrCreate()&lt;br/&gt;&lt;br/&gt;    // create table&lt;br/&gt;//    val data = spark.range(0, 50)&lt;br/&gt;//    data.write.format(&lt;span&gt;&quot;delta&quot;&lt;/span&gt;).save(&lt;span&gt;&quot;./data/delta-table&quot;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;    // load table&lt;br/&gt;    val deltaTable = DeltaTable.forPath(spark, &lt;span&gt;&quot;./data/delta-table&quot;&lt;/span&gt;)&lt;br/&gt;    deltaTable.toDF.show();&lt;br/&gt;&lt;br/&gt;    // update&lt;br/&gt;    deltaTable.update(&lt;br/&gt;      condition = expr(&lt;span&gt;&quot;id % 2 == 0&quot;&lt;/span&gt;),&lt;br/&gt;      &lt;span&gt;set&lt;/span&gt; = Map(&lt;span&gt;&quot;id&quot;&lt;/span&gt; -&amp;gt; expr(&lt;span&gt;&quot;id + 100&quot;&lt;/span&gt;))&lt;br/&gt;    )&lt;br/&gt;    deltaTable.toDF.show()&lt;br/&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;执行效果：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.4705882352941178&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAagibV9Gt9FiajCT4ibbTnw2UIcXficRpRO77l3icTr0xma6ubcybWtuOU3KKATjLsToOJ0ungp7W2zo5nLA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;425&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码仓库 &lt;/span&gt;&lt;code&gt;&lt;span&gt;https://github.com/dafei1288/wanwansbt3&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;参考链接&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;https://zhuanlan.zhihu.com/p/82727108&lt;/p&gt;&lt;p&gt;https://www.cnblogs.com/yinzhengjie/p/9376296.html&lt;/p&gt;&lt;p&gt;https://www.jianshu.com/p/7d941a3b0ccb&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;关注 【&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;麒思妙想&lt;/span&gt;&lt;span&gt;】解锁更多硬核。&lt;/span&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;历史文章导读&lt;/strong&gt;：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果文章对您有那么一点点帮助，我将倍感荣幸&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;欢迎  &lt;span&gt;&lt;strong&gt;关注、在看、点赞、转发 &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/8uJ0ic6nAag8EItgzqIEhe3GbK3ibibrSC3kGNLaCYoEXEEEV8vatdHqibkazrs7oLJERAG1cldW9pbVmcTKvXL3fA/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>19539e0bd21c8f08c382564234f31818</guid>
<title>DDDplus 中台开发框架（痛点分析）</title>
<link>https://toutiao.io/k/pbiudrp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;wiki-body&quot; class=&quot;gollum-markdown-content&quot;&gt;
            &lt;div class=&quot;markdown-body&quot;&gt;
              &lt;h2&gt;
&lt;a id=&quot;user-content-时代特征&quot; class=&quot;anchor&quot; href=&quot;#%E6%97%B6%E4%BB%A3%E7%89%B9%E5%BE%81&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;时代特征&lt;/h2&gt;
&lt;p&gt;不确定性和变化是这个时代的主旋律。&lt;/p&gt;
&lt;p&gt;业务需要快速上线，并根据用户的反馈不停地调整和升级，有生命力的业务主动寻求变化，不变则亡是很多行业目前的共识，企业应对变化的响应力成了成败的关键。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;鸡蛋，从里面破开，结果是生命；从外面破开，是食物。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-业务开发的痛点&quot; class=&quot;anchor&quot; href=&quot;#%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E7%9A%84%E7%97%9B%E7%82%B9&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;业务开发的痛点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;如何更好地构建软件？
&lt;ul&gt;
&lt;li&gt;现有的代码我不满意，我知道它乱，但不知如何入手解决&lt;/li&gt;
&lt;li&gt;听说过业务架构整体优雅，允许局部腐化，但没见过&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如何管理代码的复杂度？
&lt;ul&gt;
&lt;li&gt;系统越来越不可控&lt;/li&gt;
&lt;li&gt;尤其是，倒排期现象不止，新PRD不断涌入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如何让代码成为领域知识？
&lt;ul&gt;
&lt;li&gt;如何让代码反映业务？&lt;/li&gt;
&lt;li&gt;系统是否支持我以不同粒度不同视角从不同维度低成本地梳理出业务？&lt;/li&gt;
&lt;li&gt;代码如何能反应PRD的内容？&lt;/li&gt;
&lt;li&gt;如何让产品和技术间形成一致性产出物？&lt;/li&gt;
&lt;li&gt;听说过&lt;code&gt;code is documentation&lt;/code&gt;，但什么是&lt;code&gt;code is domain knowledge&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;代码的结构化，是什么意思？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如何让业务代码和技术代码解耦？
&lt;ul&gt;
&lt;li&gt;业务是业务，技术是技术&lt;/li&gt;
&lt;li&gt;有的技术底座，我想用外包实现，可我是一个代码库，我也不敢相信外包质量，如何解决？&lt;/li&gt;
&lt;li&gt;我的团队，有的人明显适合业务领域开发，有的适合技术性系统开发，如何人员分层管理？&lt;/li&gt;
&lt;li&gt;想从代码里捋业务，就会变成这样：Q：“晚饭吃了啥？”。  A：“我用勺子一口一口地吃了鸡生下的蛋和番茄再加上油一起炒的菜。”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;业务不确定，尤其是2B业务，如果有KA更惨
&lt;ul&gt;
&lt;li&gt;如何优雅地解决：业务逻辑的扩展，业务模型的扩展，业务流程的扩展&lt;/li&gt;
&lt;li&gt;有些if条件，场景已经不存在了，可不敢删，因为它的逻辑散落各处&lt;/li&gt;
&lt;li&gt;某个特殊业务，我们开发了好几个月，我们如何统计这个业务特有的代码？&lt;/li&gt;
&lt;li&gt;经常有特殊创建要我加字段，甚至加表&lt;/li&gt;
&lt;li&gt;又来个新场景，流程跟之前不同。我已经使用模板方法固化流程了，这可怎么办？&lt;/li&gt;
&lt;li&gt;如何快速响应千奇百怪的个性化需求，同时保持自身不腐化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;研发痛点
&lt;ul&gt;
&lt;li&gt;如何让研发拿到需求立刻就知道代码写在哪里，不各显神通地造轮子造概念&lt;/li&gt;
&lt;li&gt;不要跟我讲各种方法论，架构思想，我只想知道这个PRD怎么好地实现：donot make me think!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-业务开发的复杂性来源&quot; class=&quot;anchor&quot; href=&quot;#%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E7%9A%84%E5%A4%8D%E6%9D%82%E6%80%A7%E6%9D%A5%E6%BA%90&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;业务开发的复杂性来源&lt;/h2&gt;
&lt;p&gt;业务开发，不同于技术开发：&lt;/p&gt;

&lt;h3&gt;
&lt;a id=&quot;user-content-根本来源&quot; class=&quot;anchor&quot; href=&quot;#%E6%A0%B9%E6%9C%AC%E6%9D%A5%E6%BA%90&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;根本来源&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;业务场景多，差异大&lt;/li&gt;
&lt;li&gt;个性化需求多&lt;/li&gt;
&lt;li&gt;业务术语多，每个术语可能都对应一大堆字段、逻辑和流程&lt;/li&gt;
&lt;li&gt;业务流程长，任何一个节点错误都会造成整体bug&lt;/li&gt;
&lt;li&gt;2B业务更严重，每个行业每个企业都有不同的业务诉求&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a id=&quot;user-content-附属来源&quot; class=&quot;anchor&quot; href=&quot;#%E9%99%84%E5%B1%9E%E6%9D%A5%E6%BA%90&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;附属来源&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;缺乏顶层设计，造成的代码随意

&lt;/li&gt;
&lt;li&gt;业务和技术的耦合，代码本身无法透析业务本质&lt;/li&gt;
&lt;li&gt;代码质量差&lt;/li&gt;
&lt;li&gt;代码自身的可解释性差&lt;/li&gt;
&lt;li&gt;团队规模&lt;/li&gt;
&lt;li&gt;人员流动&lt;/li&gt;
&lt;li&gt;项目流动&lt;/li&gt;
&lt;li&gt;交付周期&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-业务中台的痛点&quot; class=&quot;anchor&quot; href=&quot;#%E4%B8%9A%E5%8A%A1%E4%B8%AD%E5%8F%B0%E7%9A%84%E7%97%9B%E7%82%B9&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;业务中台的痛点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;中台，是&lt;code&gt;企业级能力复用平台&lt;/code&gt;，到底什么意思
&lt;ul&gt;
&lt;li&gt;什么是能力&lt;/li&gt;
&lt;li&gt;业务资产是什么，与数据资产什么关系？此外，还有哪些软资产？如何落地？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如何支持前台、中台协同开发，破除中台单点瓶颈，各司其职，人员解耦，开发解耦&lt;/li&gt;
&lt;li&gt;到处都在讲中台，中台的代码应该长什么样？&lt;/li&gt;
&lt;li&gt;前台、中台组织到底该如何分工
&lt;ul&gt;
&lt;li&gt;前台做什么，中台做什么&lt;/li&gt;
&lt;li&gt;业务演化如何进行&lt;/li&gt;
&lt;li&gt;前台业务如何下沉到中台，风险如何控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如何解决前、中台速率匹配问题，让中台不阻塞前台业务发展&lt;/li&gt;
&lt;li&gt;中台如何实现各个前台的业务隔离，防止相互干扰？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id=&quot;user-content-业务开发的本源&quot; class=&quot;anchor&quot; href=&quot;#%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E7%9A%84%E6%9C%AC%E6%BA%90&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;业务开发的本源&lt;/h2&gt;
&lt;p&gt;如果能做到如下几点，业务代码质量就不会太差：&lt;/p&gt;

&lt;h2&gt;
&lt;a id=&quot;user-content-业务开发框架现状&quot; class=&quot;anchor&quot; href=&quot;#%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E7%8E%B0%E7%8A%B6&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;业务开发框架现状&lt;/h2&gt;
&lt;p&gt;市场上有很多技术框架，也有一些&lt;code&gt;low code&lt;/code&gt;甚至&lt;code&gt;codeless&lt;/code&gt;框架来满足简单业务场景，但开源的解决复杂业务场景问题的业务开发框架，目前是空白。&lt;/p&gt;
&lt;p&gt;中台架构，更多停留在思想和方法论上，具体在代码层面如何落地，目前是空白。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/funkygao/cp-ddd-framework&quot;&gt;DDDplus&lt;/a&gt;，一套轻量级业务中台开发框架，解决了这些空白。&lt;/p&gt;

            &lt;/div&gt;

            
        &lt;/div&gt;

&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>03fedcbc8792dfc458686f1c29f0a9dc</guid>
<title>疫情下的线上会议和社交</title>
<link>https://toutiao.io/k/ojgvqdo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;elementor-widget-container&quot;&gt;

&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://webrtc.ventures/wp-content/uploads/2020/09/Virtual-Conferences-in-the-Pandemic-1.png&quot; alt=&quot;&quot;/&gt;&lt;/figure&gt;



&lt;p&gt;作为一名技术专家兼商人，我负责自研软件的销售和推广，所以我大部分时间都在参加各种会议。作为演讲者、供应商或只是与会者，我都会带着以下三个目标去参加这些会议：学习交流、结识新客户并拓展业务。&lt;/p&gt;



&lt;p&gt;这些目标不光督促我前行，也是商务会议成为行业一大基石的主要因素。但是在2020年3月疫情肆虐全球后，商务会议首当其冲被取消了。&lt;/p&gt;



&lt;p&gt;当时距离团队在某大型医疗会议上展示我们的远程医疗产品&lt;a href=&quot;https://simplydoc.com/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;SimplyDoc&lt;/a&gt;只有不到一周的时间，但是该会议在最后一刻取消了，因为新冠疫情正在美国迅速传播，对各行各业冲击都很大。&lt;/p&gt;



&lt;p&gt;即使六个月后的现在我们还是不能举办大型会议。但进行学习交流、推广销售对于许多企业（包括我自己的公司）来说仍至关重要，在非常时期，这些目标更显关键。就我个人而言，即使我不能亲自参会，我也要想方设法达成我的目的。&lt;/p&gt;



&lt;p&gt;当然我们都希望有可能在线下会议见面，再去吃个饭就把合同签了。但现在条件不允许，所以我们必须试着接受线上会议这种模式。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;疫情期间开会的两种方式&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;疫情期间，开展线上会议有两种主要方式：&lt;/p&gt;



&lt;p&gt;1. 提前录制的线上会议；&lt;/p&gt;



&lt;p&gt;2. 实时线上会议&lt;/p&gt;



&lt;p&gt;下面我们来分析这两种方式，对比其优缺点，以及疫情期间，是否有其他方式来举办会议。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;提前录制的线上会议&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;开展线上会议的第一种方法是把会议变为一个交互式YouTube播放列表。&lt;a href=&quot;https://commcon.xyz/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;CommCon&lt;/a&gt;，nimbleApe的&lt;a href=&quot;https://twitter.com/dan_jenkins&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;Dan Jenkins&lt;/a&gt;主持的开源线上实时会议就采取了这种方式。&lt;/p&gt;



&lt;p&gt;疫情之前，Dan会在英国出席并主持该会议。尽管我没有亲自参加过，但大家都认可这是一场开源爱好者和有识之士蜂拥而至的盛大活动，他们很快适应了线上会议，在讨论结束后还参与各类网络社交活动，例如射箭比赛。&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;https://webrtc.ventures/2020/04/webrtc-live-episode-42-asterisk-webrtc-dialogflow/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;疫情刚爆发时&lt;/a&gt;，我同Dan在网络研讨会系列节目&lt;a href=&quot;https://webrtc.ventures/webrtc-live/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;WebRTC Live&lt;/a&gt;中有过交谈。他不确定他是否可以在线上达成像线下一样的用户体验。尽管我们对支持线上会议的WebRTC等技术都很感兴趣，但他还是坚持今年不会举办会议了。最终他改变了主意，因为会议内容值得大家深刻讨论。他希望尽其所能，使大家像以前在CommCon一样，既能社交，又能进行高质量对话。&lt;/p&gt;



&lt;p&gt;他主持了&lt;a href=&quot;https://2020.commcon.xyz/#venue&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;2020CommCon大会&lt;/a&gt;，我认为办的非常成功，很多演讲都发人深省。大体上，会议由以下两部分组成：&lt;/p&gt;



&lt;p&gt;1.每个讲者预先录制的演讲，按时间表&lt;a href=&quot;https://www.youtube.com/playlist?list=PLvNS4EBAxmJLCLMNqvfe6eTQIWVDAPcP4&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;发布在YouTube上&lt;/a&gt;；&lt;/p&gt;



&lt;p&gt;2.演讲结束后，每位讲者会参加在&lt;a href=&quot;https://riot.im/app/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;Riot&lt;/a&gt;（基于开源去中心化交流平台&lt;a href=&quot;https://matrix.org/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;Matrix&lt;/a&gt;的聊天应用）上的实时答疑，讲者会回答听众的一些问题。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/cBc5syBbbUVfPGUe05ONk_93NOPKfxnkkh-rdcCE2c02x7WCx2Kbi2zC540bH5x5bOXtwMfPNiJMQoak3ubhG6JvgB-5UIi5d8UNWDGEBm3IE2rwcbgj0gWBIF11oeuuMqKZS2Dh&quot; alt=&quot;&quot;/&gt;&lt;figcaption&gt;Lorenzo Miniero 的 MeetEcho&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;这是个很有趣的方法。这样做的好处是通过预先录制演讲，Dan可以稍微加以润色，然后发布各演讲的高质量视频。 这样就不会出现讲者网不好或会议软件卡顿的情况。另外，Dan可以在视频中添加内容，例如他家庭办公室的介绍，或在会议结束时添加闭幕词。这样一来，他就可以制作&lt;a href=&quot;https://www.youtube.com/playlist?list=PLvNS4EBAxmJLCLMNqvfe6eTQIWVDAPcP4&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;非常专业的，存档到YouTube的&lt;/a&gt;视频，也能提供高质量的内容。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/bICUEn0KEi9DjzQhbQQw4I6qMNXz-lcFqp3SUSi2NUT7t9TpmVCEv5SYJkGaAaaFRZL74mBR9wQV1HN5MWLegaGWvhoo34aI25fmkGByimnMTigqPwI8q0efla9p2FwlEvrAudxF&quot; alt=&quot;&quot;/&gt;&lt;/figure&gt;



&lt;p&gt;但是，如果你只是录制视频，将其发布到YouTube，能算是一次会议吗？为什么不把视频添加到播放列表里，想看就看？确实存在这样的问题。坦白讲，由于当时不能参加直播会议，我在闲暇时看了YouTube上的许多CommCon视频。&lt;/p&gt;



&lt;p&gt;但我错过的，同时也是使CommCon仍然是一次会议而不是YouTube播放列表的原因是：每次会议后听众都可以和发言人实时聊天。他们可以提问并立即得到反馈。与会者还可以通过聊天来社交。但我还是觉得这种方式少了点儿什么，这和会议茶歇时碰到某人然后对话的经历还是不太一样。&lt;/p&gt;



&lt;p&gt;不管怎么说，实时聊天都比单纯观看播放列表更好。聊天内容的增加使其区别于播放列表。你可以试着回复视频下的实时评论，我认为这样的对话确实可以提供更好的体验。&lt;/p&gt;



&lt;p&gt;瑕不掩瑜，我仍对Dan举办2020 CommCon大会表示赞赏。他的工作做得非常出色，大会中有很多&lt;a href=&quot;https://www.youtube.com/playlist?list=PLvNS4EBAxmJLCLMNqvfe6eTQIWVDAPcP4&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;不错的演讲&lt;/a&gt;，大家可以看看。&lt;/p&gt;



&lt;p&gt;我在最近的Vonage 伙伴会议上见到了另一种用于预先录制会议（但仍具有实时交互性）的方法。该会议为Vonage的开发和产品合作伙伴而设立，如同我们与&lt;a href=&quot;https://www.webrtc.ventures/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;WebRTC.ventures&lt;/a&gt;的关系。我们基于WebRTC视频标准构建自定义网络和手机应用程序，并使用Vonage API帮助客户进行应用程序中的视频电话、短信来往、信息传递等。&lt;/p&gt;



&lt;p&gt;Vonage 伙伴会议通常在旧金山举行，有著名讲者、及其高层工程和管理团队出席，更新的产品也会在此发布。会后还有很多有趣派对，可以极大拓展自己的社交网络。但很遗憾我今年不能出席会议了。&lt;/p&gt;



&lt;p&gt;但今年的线上会议也办的很出色。主办方效仿Dan and CommCon的方法，按已发布时间表整合录制的PPT。与会者和讲者也进行了实时聊天。他们没有用YouTube，而是用商用产品&lt;a href=&quot;https://www.6connex.com/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;6Connex&lt;/a&gt;完成聊天。&lt;/p&gt;



&lt;p&gt;6Connex的好处是它能给人一种置身会议厅的感觉。虽然它不比现实会议厅外车水马龙或厅里冷气大开，但它的确可以把与会者带入一个可以比YouTube更有真实感的环境。下图是我第一次参加此会议时的体验。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/kHCDLWNCOpScgsSspnaiNOr7jHzDwy2DqdhB-Sz1cPqkfSdc-Sn7gMavKvE22hXUdx3AX-e-tzF5Oi6vKZDsE1BSZGGVhw9Cm2BC774bwgmBFfYF4efm6lmrxltQlHpmIdKLjEdB&quot; alt=&quot;&quot;/&gt;&lt;figcaption&gt;欢迎参加Vonage Transform线上合作伙伴峰会！&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;与会人员可以点击链接，访问开放的聊天区与他人社交，或访问列出了当天流程和讲者的日程表（“ Auditorium”），也可以访问“合作伙伴产品展示”的线上展台。&lt;/p&gt;



&lt;p&gt;我公司产品搭载的就是Vonage API，所以我们的远程医疗产品&lt;a href=&quot;http://www.simplydoc.com/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;SimplyDoc&lt;/a&gt;展示在该线上展台中。当与会者单击伙伴目录中我们的LOGO时，页面会跳转到我公司的线上展位，如下图所示。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/8r5dXUNLP3V7ewjZBDHJhC2JBdmsVaR9RIDcBp7-fY_6RT9WzEY9e8MDBuNUbM6REs0BNV90Ni2X2UCDtmP_F0SueJ9buo9KmqD8k_zVh6ZSA7birgqk3_Cufpa37CQnAQbm41bJ&quot; alt=&quot;&quot;/&gt;&lt;figcaption&gt;SimplyDoc在合作伙伴展台中的位置&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;在线上展位中，访客可以单击我为大会录制的演示视频，并浏览我上传到展位资产清单的销售材料。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/hkwrE4TzwBuQzmGIDRTj6G85VSPZKBbef52CdYJILONuA3Su0hQAhJbi6REBb7PSQtbuNFAKM1PvCoy6aHQ8Ynm_1h4sIVm-H9i3qPAqamst8ZJGJMIEMjChsj86u6KWt7hbsXUX&quot; alt=&quot;&quot;/&gt;&lt;figcaption&gt;我在线上展台中预先录制的SimplyDoc演示&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;参加Vonage合作伙伴大会的实时线上活动时，我观看了讲者录制的视频，参加了实时聊天。在发布下一个PPT前，6Connex工具会提示所有与会者。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/sScBH0pCEC4lVSiol8z0Gd65fSPcBx-xwoQCT6dURu49daq2s3pRm3tkxJOCnuc0D_OQCp8-AWj1Nciqy920FRxdqwRfKVFtGC1OYbqoLZrslS6_kSgNTYh-csXnQPmxzlI9vxxb&quot; alt=&quot;&quot;/&gt;&lt;figcaption&gt;开幕主题演讲–抱歉截的马克的这张图显得他好像没睡醒。实际他是个魅力十足的讲者，真人比线上更帅！&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;尽管线上会议不能制造美丽邂逅，但你可以看到记录所有与会者的名单，并且我能和里面的许多人交流。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/9Y65DBDa8WeQKCAgM7cvSu6IdS-PADAV6V0kr5rIFxb09sw9goP9VEAvurGOGWLfzbcQ2UvJX9O6DIQroaN3zOpoKNg6XRxcmds_jj3s-KadReH1jgSAyNEbq1R8uwfttukBvMhJ&quot; alt=&quot;&quot;/&gt;&lt;figcaption&gt;给其他与会者发消息很容易&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;该工具内置了寻宝游戏，与会者可以玩游戏挣积分，赢取线上奖品。主持人让我们点击页面上看到的火箭，之后他们会计算谁点了最多的火箭，然后给奖励。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/FxMu0XdC2uUoWGALzhq5YqCzYuozpKQmQswG8pkugJDspGcNtQabQGl6kGxOXc7V6l3XhpbXvRq0sDUhMru3gsoV-lghdweErDUi8IjuZjoLMV7qF3S25h8r9U3xVdAFVNBnrMIM&quot; alt=&quot;&quot;/&gt;&lt;figcaption&gt;寻宝游戏提供了赢得线上奖励的机会。&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;即使我没能获奖，但我也承认这次大会非常成功，这是另一个充分彰显预先录制线上会议好处的示例。会上演讲的质量都很高。会议进行的同时可以在线聊天，所以我仍能与讲者和其他与会者交流联系。&lt;/p&gt;



&lt;p&gt;但是这种会议仍然有些缺憾，就是视频并非实时产生的。预先录制的视频很棒，但是如果不进行实时视频，我们很难获得真正的互动。所以接下来我们就讲讲线上实时会议。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;线上实时会议&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;“实时”线上会议就是演讲者进行实时演示的会议，没有任何预先录制的内容。上文我们讨论的会议也具有一定实时性，因为发言人在播放视频时会在实时聊天框中答疑。但这与讲者在实时演讲过程中答疑，观众获得的对话体验和对话深度还是没法比的。&lt;/p&gt;



&lt;p&gt;我们可能会用到会议工具&lt;a href=&quot;https://hopin.to/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;HopIn&lt;/a&gt;，它具备与6Connex相同的线上会议功能。我们能够按需选择每个会话是采用预录制的视频，还是实时视频的方式进行。此外，所有对话也可以由一位主持负责放映，一组发言人进行演示。问答环节可以通过主持和观众之间的群组视频聊天来进行。我们采用的是由一位主持实时放映的方式。但是希望有会有单独的问答环节，发言人可以实时回答观众的问题。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/2Cgt0qMWcz0BW-4O4VQH6Vrd8vTb_wZUU-hnDZ1JGBKL7A4ZSnX7I7d7CiGZFD0khI2tjLenfz_dSPd8ZF6IO6pQruQXqiMVQZrBt6oDuC7-DBLLCjRZVUS2bTO-9xVNQagduYmi&quot; alt=&quot;&quot;/&gt;&lt;/figure&gt;



&lt;p&gt;这种方法最大的风险是网络连通。如果发言人的互联网或电源在实时会话期间或之前中断，怎么办呢？我们或HopIn都无能为力。其实我们可以向发言人要一份预先录制的视频，作为备份，但要让演讲者准备实时演讲的同时，还要给我们提前录制一遍，这个要求就有点过分了。&lt;/p&gt;



&lt;p&gt;观众的网络联通也是大家关心的一个问题。如果观众的网络质量不佳，或他们浏览器选错了，该怎么办？HopIn官方仅支持Chrome和Firefox，Safari仅支持其部分功能的使用。肯定会有观众连接不上或使用不受支持的浏览器，这时他们就会怪罪HopIn或者IIT使他们体验不佳。我们的后备计划就是：录制所有会话，会后将其发到YouTube上。&lt;/p&gt;



&lt;p&gt;但是，我们这样做的最大好处（也是值得我们冒险的地方）就是实时互动。你随时能够提问发言人。在演讲过程中，他们就可以回答你的问题了。&lt;/p&gt;



&lt;p&gt;为证明实时互动的价值，我给大家举个例子——最近参加了一场大会。会议使用了一个 WebRTC 通用会议工具。除了典型的单人演讲的总会场之外，还有各种分会场。如图，我们在分会场里进行了很多群组活动。分会场是参会者认识了解彼此的绝佳机会。考虑到语言不通的问题，他们甚至设定了讲西班牙语或英语的分会场。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/8Z8G1r_h9co_Uf41shHXq8ZyU1V1eEufs2SvWUHvS_pLdoyKscqc8Iatron3-3BZ1K3ZkPQwhE8dRVA6Kn1UP_C7MLk22DqAe27wNiwOCvaVtozuRvRdcnkfzv-n0RvGqapLSjTI&quot; alt=&quot;&quot;/&gt;&lt;figcaption&gt;本次大会的某个分会场&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;总之，线上实时会议有机遇也有挑战。网络连接不畅使会议的风险更大，但也提供了与演讲者进行更好互动、分组讨论、实时问答的机会。&lt;/p&gt;



&lt;p&gt;现在，我们已经了解了线上会议的两种主要模式，现在我们来讲讲布置线上会议要注意的其他方面。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;社交工具&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;在我介绍的所有方法中，线上会议最常见的社交方式是文字聊天，方法确实可行，但仍不及面对面的交流。&lt;/p&gt;



&lt;p&gt;你可以考虑其他方法来改善线上网络的体验。某些工具（例如HopIn）允许通过挑选特定的与会者，或通过随机配对的方式进行一对一视频聊天。&lt;/p&gt;



&lt;p&gt;还有一种方法是预定会场，与会者可以通过预定，和各发言人见面并进行15分钟的简短对话。之前我曾在&lt;a href=&quot;https://twitter.com/ericries&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;Eric Ries&lt;/a&gt;主持的Lean创业大会上担任演讲嘉宾，在这里，观众可以通过预约，和我还有其他发言人进行面对面的简短交流。线下面基很有趣，线上当然也可以拥有相同的体验！&lt;/p&gt;



&lt;p&gt;那么有没有方便社交的其他方法呢？今年我发现了一款有趣应用——&lt;a href=&quot;https://theonline.town/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;TheOnlineTown&lt;/a&gt;。 主持人可以给网络会场选择不同的页面背景，与会者可以操纵自己的虚拟人物在里面来回走动。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/HSEKo0hgXUfoN338rvyV8vikq2-4t0ul0x60G_WHUblzmX7nD1FgnChmY0bUk9v6WgCyw5PXLZK6Ogqka3WDKUexum8xUL4yIxUgZSqOuexSzPolkyJV-MnE9Ogtf3oaqraQmCqD&quot; alt=&quot;&quot;/&gt;&lt;figcaption&gt;Online Town是一种可在多人间并列开展小对话的视频通话服务。&lt;/figcaption&gt;&lt;/figure&gt;



&lt;p&gt;这个服务有个新颖之处。在你操纵自己的小人路过附近的与会者时，他们的视频和音频会逐渐淡入或淡出。这样，你“路过”时就能听到他们的对话。如果你对他们的谈话感兴趣，就可以像现实中开展社交一样，操纵你的小人走过去，然后加入对话。&lt;/p&gt;



&lt;p&gt;假以时日，我们会看到更多类似Online Town的服务，他们会模拟线下会议中最有价值的部分——自发对话。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;非技术考量&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;要开一场虚拟会议，除了要考虑使用哪种会议工具之外，还有很多需要考虑的事项。在这里我无法面面俱到，只能挑一些重要的讲。&lt;/p&gt;



&lt;p&gt;1. &lt;strong&gt;演讲长度&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;对于网络会议，与会者的注意力集中不了多长时间。所以我们尝试把IIT RTC大会的各演讲控制在20分钟以内，讲者需要在有限时间内传达中心思想。本来线下一个多小时的演讲就很难保持互动了，再加上观众有大堆等着处理的电子邮件和slack消息，线上会议就更加困难了。&lt;/p&gt;



&lt;p&gt;2. &lt;strong&gt;大会餐饮&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;难以置信，疫情期间很多人非常想去旅行，有公司就把飞机餐邮寄给他们了。我也想去旅行，但我并不想念蔫了吧唧的沙拉，也不想念缩着肩膀为我中间座位的乘客腾地方的感觉。同样，商务会议上的松饼也不是我的菜。但考虑到看重这种小福利的人，一些开展了线上会议的公司确实给与会者寄去了盒饭。&lt;/p&gt;



&lt;p&gt;3. &lt;strong&gt;提前赠送会议周边&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;&lt;a href=&quot;https://www.twilio.com/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;Twilio&lt;/a&gt;的年会就采取了这种做法，非常聪明的营销手段。对于在截止日期之前注册的人，主办方给他们寄送了那些以前通常在开会时才会给的免费T恤和贴纸。&lt;/p&gt;



&lt;p&gt;4. &lt;strong&gt;演讲人培训&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;这一点其实涉及到了技术知识。但确实要考虑提前对演讲人就将要使用的会议工具进行培训。也可以给演讲人录个详述会议流程的视频。&lt;/p&gt;



&lt;p&gt;5. &lt;strong&gt;会议费用&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;是否应该向线上会议的与会者收费呢？大部分情况下，答案是否定的。但是参展商和赞助商仍然愿意交冠名费。因此，找赞助商资助你的会议，向观众免费开放会议。这会给你带来更大流量。并且由于是线上会议，各项开支都会少很多。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;多种会议形式&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;在我写这篇文章时，疫情仍然肆虐全球，疫苗还没有研制出来。而美国的疫情管控一团乱。所以在疫苗普及之前，我们恢复正常生活的希望渺茫，这太难受了，因为我们很多业务都是在会展厅和纪念品店这种人群密集的地方谈成的。&lt;/p&gt;



&lt;p&gt;但总有一天，我们会重返奥兰多或拉斯维加斯大道，参加在五星级酒店里举办的会议。不用担心，你也会有机会再次与供应商一起在酒吧闲逛，或者在展位上签下新客户。&lt;/p&gt;



&lt;p&gt;但我敢肯定，商务会议的今时不同往日。每次全球疫情都会导致社会变革，那些我们习以为常的事情可能都不复存在了。&lt;/p&gt;



&lt;p&gt;显然，在1918流感爆发后，在公共场所随地扔烟的行为被唾弃，各大厦也撤走了大堂供客人使用的&lt;a href=&quot;https://en.wikipedia.org/wiki/Spittoon#:~:text=Use%20of%20spittoons%20was%20considered,floors%2C%20streets%2C%20and%20sidewalks.&amp;amp;text=After%20the%201918%20flu%20epidemic,and%20use%20began%20to%20decline.&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;痰盂&lt;/a&gt;。这是一个非常正向的社会变化，但1915年的时候，大家都不会想到这样的变化。&lt;/p&gt;



&lt;p&gt;这次疫情也会带来类似的社会变化，我觉得线上会议肯定会继续存在。即使到时候可以在线下举办会议，并不是每个人都可以参加亲自参加商务或技术会议。&lt;/p&gt;



&lt;p&gt;线上线下相结合的会议模式会成为新的主流。参加线下会议的观众可以拿到小礼品，但因故无法出席的另一部分观众仍可以远程加入。线上社交必不可少，且WebRTC视频会在未来会议中扮演重要角色。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;是时候建立你自己的线上会议了！&lt;/strong&gt;&lt;/p&gt;



&lt;p&gt;这篇文章中我介绍了很多市场中的线上会议工具，如果你谷歌会发现更多。如果你看中了哪一款，一定要试着用用它。&lt;/p&gt;



&lt;p&gt;若是你现在在市场上找不到你想要的，或者你对如何改善线上会议中的演讲人、与会者、参展商和赞助商的体验有自己的想法，现在是时候付诸实践了！&lt;/p&gt;



&lt;p&gt;文章地址：&lt;a href=&quot;https://webrtc.ventures/2020/09/virtual-conferences-and-networking-in-the-pandemic/&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;https://webrtc.ventures/2020/09/virtual-conferences-and-networking-in-the-pandemic/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>48c196e88e782b8190a87e503e585c4c</guid>
<title>Synchronized 的锁升级之路</title>
<link>https://toutiao.io/k/x6l8ntx</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;385&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;386&quot; data-ratio=&quot;0.66640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jOD3PUUxTibP6gxkLTKM839yBqKcpjBr81fcDO3neWwCMrB0RAm4ubGg4K8p7w5PiaOLItW55trkicriavySpJDwng/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;读完本文，可以知道Java Synchronized锁都有哪几种状态，以及这几种状态的锁升级流程细节，这很有可能就解决了下次面试中的问题呦 :)&lt;/p&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;p&gt;关于Java中Synchronized，几乎是最简单常用的并发同步基础组件了，但是计算机程序的并发可不是简单的问题，那么Synchronized是如何解决并发及其性能问题的呢？&lt;/p&gt;&lt;p&gt;Synchronized在Java JVM里的实现是基于进入和退出Monitor对象来实现方法同步和代码块同步的。monitor enter指令是在编译后插入到同步代码块的开始位置，而monitor exit是插入到方法结束处和异常处，JVM要保证每个monitor enter必须有对应的monitor exit与之配对。任何对象都有一个monitor与之关联，当且一个monitor被持有后，它将处于锁定状态。线程执行到monitor enter指令时，将会尝试获取对象所对应的monitor的所有权，即尝试获得对象的锁。&lt;/p&gt;&lt;p&gt;synchronized用的锁是存在Java对象头里的。如果对象是数组类型，则虚拟机用3个字宽（Word）存储对象头，如果对象是非数组类型，则用2字宽存储对象头。在32位虚拟机中，1字宽等于4字节，即32bit。数组类多一个字节用于存储数组长度，也就是说程序获取数组长度的时间复杂度为O(1)。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.15625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jOD3PUUxTibP6gxkLTKM839yBqKcpjBr8wabicRIoKFmDaCn391kWwsicHL95vAYexjH9GGdOU04xXCNvJuW1J0FQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;在运行期间，Mark Word里存储的数据会随着锁标志位的变化而变化。Mark Word可能变化为存储以下4种数据：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.26802507836990597&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jOD3PUUxTibP6gxkLTKM839yBqKcpjBr8AWybuVriblCXsYEGak4NdnNdyu2jaBI4TfIZxc3PPgrqvYzHFFg8wNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1276&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;锁的升级之路&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;Java 1.6为了减少获得锁和释放锁带来的性能消耗，引入了“偏向锁”和“轻量级锁”，在Java SE 1.6中，锁一共有4种状态，级别从低到高依次是：&lt;strong&gt;无锁状态&lt;/strong&gt;、&lt;strong&gt;偏向锁状态&lt;/strong&gt;、&lt;strong&gt;轻量级锁状态&lt;/strong&gt;和&lt;strong&gt;重量级锁状态&lt;/strong&gt;，这几个状态会随着竞争情况逐渐升级。锁可以升级但不能降级，意味着偏向锁升级成轻量级锁后不能降级成偏向锁。这种锁升级却不能降级的策略，目的是为了提高获得锁和释放锁的效率。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;偏向锁&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;在锁不存在多线程竞争情况下，为了减小线程获取锁的代价而引入了偏向锁。当一个线程访问同步块并获取锁时，会在对象头和栈帧中的锁记录里存储锁偏向的线程ID，以后该线程再进入同步块时只需简单判断下对象头的Mark Word里是否存储着指向当前线程的偏向锁。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果本身是无锁状态（初始状态），只需CAS设置偏向锁指向自己即可；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;判断当前对象是否是偏向锁，判断拥有该偏向锁的线程是否还存在，不存在时直接CAS设置偏向锁指向自己线程（拥有偏向锁的线程使用完毕后不会主动释放）；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果拥有该偏向锁的线程还存在，则会暂停拥有偏向锁的线程，这一步操作是在全局安全点进行的。设置锁标志位为00（ps: 忘记00是什么状态的同学可以往前翻翻看下mark word的状态变化），偏向锁标志位为0，从拥有偏向锁线程A的空闲monitor record中读取一条，放至线程A的当前monitor record中，然后更新mark word，将mark word指向线程A中monitor record的指针，这样就完成了偏向锁升级轻量级锁。之后持有锁的线程会继续执行，竞争该轻量级锁的线程自旋获取该对象。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote&gt;&lt;p&gt;注意：轻量级锁的获取释放需要多次CAS操作，而偏向锁只是在置换ThreadID时进行一次CAS操作。&lt;/p&gt;&lt;p&gt;偏向锁获取后线程不会主动释放，偏向锁只有在其他线程尝试竞争偏向锁时，持有偏向锁的线程才会释放锁（被动释放，此时会发生锁升级）。&lt;/p&gt;&lt;p&gt;偏向锁在JDK 6及以后的JVM里是默认启用的。可以通过JVM参数关闭偏向锁：&lt;code&gt;-XX:-UseBiasedLocking=false&lt;/code&gt;，关闭之后程序默认会进入轻量级锁状态。&lt;/p&gt;&lt;p&gt;偏向锁的撤销需要在全局安全点上进行，它会暂停所有持有偏向锁的线程，判断锁对象是否处于锁定状态。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;可以发现偏向锁适用于从始至终都只有一个线程在运行的情况，省略掉了自旋获取锁，以及重量级锁互斥的开销，这种锁的开销最低，性能最好接近于无锁状态，但是如果线程之间存在竞争的话，就需要频繁的去暂停拥有偏向锁的线程然后检查状态，决定是否重新偏向还是升级为轻量级别锁，性能就会大打折扣了，如果事先能够知道可能会存在竞争那么可以选择关掉偏向锁。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;轻量级锁&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;线程在执行同步块之前，JVM会先在当前线程的栈桢中创建用于存储锁记录的空间，并将对象头中的Mark Word复制到锁记录中，官方称为&lt;strong&gt;Displaced Mark Word&lt;/strong&gt;。然后线程尝试使用CAS将对象头中的Mark Word替换为指向锁记录的指针。如果成功，当前线程获得锁，如果失败，表示其他线程竞争锁，当前线程便尝试使用自旋来获取锁。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;轻量级锁在加锁失败进行CAS达到一定次数后（自旋锁默认的次数为 10 次可以通过 -XX:PreBlockSpin 来更改），就会升级为重量级锁；在解锁失败，锁也会升级为重量级锁。&lt;/p&gt;&lt;p&gt;一旦锁升级成重量级锁（就不会再恢复到轻量级锁状态），当锁处于这个状态下，其他线程试图获取锁时，都会被阻塞住，当持有锁的线程释放锁之后会唤醒这些线程，被唤醒的线程就会进行新一轮的夺锁之争。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;轻量级锁什么时候会解锁失败呢？在发生锁竞争时并且占用锁的线程未释放，这时（自旋默认了10次还是未获取到锁）竞争锁的线程就会 将Mark Word 修改为重量级锁，并且将自己阻塞在该锁的monitor对象上。之后占用锁的线程将栈帧中的 Mark Word进行CAS替换回对象头的 Mark Word 的时候，发现有其它线程竞争该锁（已经由竞争锁的线程更改了锁状态），然后它释放锁并且唤醒在等待的线程，后续的线程操作就全部都是重量级锁了。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;重量级锁&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;重量级锁也就是普通的悲观锁了，也就是竞争锁失败会阻塞等待唤醒再次竞争那种，关于这几种锁的对比如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.2484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jOD3PUUxTibP6gxkLTKM839yBqKcpjBr8OhIssZOicEpWEZEmiaHZEDZ8kic0ichGWdgxQmZXMBVEXiaJADCtiaSeRDtQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Java实现了那么多种类的锁机制，各自有不同的适用场景，目的都是为了提高获得锁和释放锁的效率&lt;/strong&gt;。&lt;/p&gt;&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;往期推荐 &lt;strong data-darkmode-color-16000919271293=&quot;rgb(146, 146, 146)&quot; data-darkmode-original-color-16000919271293=&quot;rgb(84, 84, 84)&quot; data-darkmode-bgcolor-16000919271293=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16000919271293=&quot;rgb(255, 255, 255)&quot; data-style=&quot;color: rgb(84, 84, 84); font-size: 12px; letter-spacing: 1px;&quot; class=&quot;js_darkmode__47&quot; data-darkmode-bgcolor-16004478030742=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16004478030742=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16004478030742=&quot;rgb(146, 146, 146)&quot; data-darkmode-original-color-16004478030742=&quot;rgb(84, 84, 84)&quot; data-darkmode-bgcolor-16008733898329=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008733898329=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16008733898329=&quot;rgb(146, 146, 146)&quot; data-darkmode-original-color-16008733898329=&quot;rgb(84, 84, 84)&quot; data-darkmode-color-16013155144842=&quot;rgb(146, 146, 146)&quot; data-darkmode-original-color-16013155144842=&quot;rgb(84, 84, 84)&quot; data-darkmode-bgcolor-16013155144842=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16013155144842=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16016614011295=&quot;rgb(146, 146, 146)&quot; data-darkmode-original-color-16016614011295=&quot;rgb(84, 84, 84)&quot; data-darkmode-bgcolor-16016614011295=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16016614011295=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-16025220655769=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16025220655769=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16025220655769=&quot;rgb(146, 146, 146)&quot; data-darkmode-original-color-16025220655769=&quot;rgb(84, 84, 84)&quot; data-darkmode-bgcolor-16026984547259=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16026984547259=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16026984547259=&quot;rgb(146, 146, 146)&quot; data-darkmode-original-color-16026984547259=&quot;rgb(84, 84, 84)&quot;&gt;&lt;span data-darkmode-color-16000919271293=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16000919271293=&quot;rgb(62, 62, 62)&quot; data-darkmode-bgcolor-16000919271293=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16000919271293=&quot;rgb(255, 255, 255)&quot; data-style=&quot;color: rgb(62, 62, 62); font-variant-numeric: normal; font-variant-east-asian: normal; letter-spacing: 0.544px; line-height: 34px; widows: 1;&quot; class=&quot;js_darkmode__48&quot; data-darkmode-bgcolor-16004478030742=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16004478030742=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16004478030742=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16004478030742=&quot;rgb(62, 62, 62)&quot; data-darkmode-bgcolor-16008733898329=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008733898329=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16008733898329=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16008733898329=&quot;rgb(62, 62, 62)&quot; data-darkmode-color-16013155144842=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16013155144842=&quot;rgb(62, 62, 62)&quot; data-darkmode-bgcolor-16013155144842=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16013155144842=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16016614011295=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16016614011295=&quot;rgb(62, 62, 62)&quot; data-darkmode-bgcolor-16016614011295=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16016614011295=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-16025220655769=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16025220655769=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16025220655769=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16025220655769=&quot;rgb(62, 62, 62)&quot; data-darkmode-bgcolor-16026984547259=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16026984547259=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16026984547259=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16026984547259=&quot;rgb(62, 62, 62)&quot;&gt;🔗&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIwNTI2ODY5OA==&amp;amp;mid=2649939072&amp;amp;idx=1&amp;amp;sn=ee4877cbb1a6497aaed56eed6b57c5ad&amp;amp;chksm=8f350f35b8428623da18c7dda694b65cbdb7c3aff01ef8472430ad7431f36e7a3101124c92dc&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;阿里数据库内核月报导航&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIwNTI2ODY5OA==&amp;amp;mid=2649939063&amp;amp;idx=1&amp;amp;sn=9386aacb16249279003f418f70bcdf9f&amp;amp;chksm=8f350fc2b84286d4672f7b0519894849b6f0958b6d7820be15bc6604a34fdddc5b7803ebcdbe&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;toString如何转json&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIwNTI2ODY5OA==&amp;amp;mid=2649939011&amp;amp;idx=1&amp;amp;sn=bbd68eab1cf280701ddb275289a23a46&amp;amp;chksm=8f350ff6b84286e05702904f5cdd7f2ff9f5c3c3f85d1de2c9062b419a515e4cefc9ab87e6e4&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;关于dubbo连通性的一些思考&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-copyright=&quot;0&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;516&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;258&quot; data-ratio=&quot;0.5&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jOD3PUUxTibP4TMsUhZhl8N3f7mphlhYMhnu8RbooMP7Ab6UbHF4BITSCe6D8hPy3VyzTu2Yp23vRRRTzJj8AQg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;516&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>