<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>439d191b0f2b207cf79e985d5458f4ce</guid>
<title>什么是真正的程序员？| 码农周刊第 323 期</title>
<link>https://toutiao.io/k/v08ikpz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;什么是真正的程序员？| 码农周刊第 323 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第323期（2020-10-28）&lt;/h2&gt;
        &lt;p&gt;☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=323&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3230&quot; target=&quot;_blank&quot;&gt;薪资翻番如何实现？程序员的涨薪秘诀&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;a href=&quot;https://weekly.manong.io/bounce?nid=323&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3230&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_321.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=323&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;业界实战&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;工作地点：成都 | 薪资：15-30K | 简历投递邮箱：xiexiaofang@huobi.com&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;适合入门&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;该框架由阿里云机器学习 PAI 团队研发，让自然语言处理场景的模型预训练和迁移学习开发与部署更加简单和高效。&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;硬核&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;论文笔记&lt;/p&gt;
        
        &lt;p&gt;系列文章&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;因子分解机算法&lt;/p&gt;
        
        &lt;p&gt;深入讲解&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;Yahoo 开源的 Kafka 集群管理平台&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;更多可能&lt;/p&gt;
        
        &lt;p&gt;实战经验&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;源码分析&lt;/p&gt;
        
        &lt;p&gt;一个 Android Jetpack 扩展库&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;一步步教你&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;倾向于使用 Less 或 Stylus&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;这里有最接地气的架构师一线实战经验、核心技能的分享。运营和产品的总结。以及一些个人的深度思考。&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 268968 即可&lt;/p&gt;
        
        &lt;p&gt;GO PHP JS 一网打尽&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 146415 即可&lt;/p&gt;
        
        &lt;p&gt;分享技术，专注程序员成长&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 137785 即可&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;Coding虽易，debug不易....&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 98777 即可&lt;/p&gt;
        
        &lt;p&gt;专注分享Java实战技术、Java基础原理、微服务实战技术、分布式系统架构&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 22887 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;本书为对基本概率论感兴趣的读者以及之前未接触过此方向的人提供了一个坚实的基础。通过对话的方式和详细的数学推导，在迷人的风格和信息丰富的讨论上取得了平衡。欢迎到&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;兑换阅读。&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;真实&lt;/p&gt;
        
        &lt;p&gt;值得思考&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>857293b1ec60cf59690b60063f374e29</guid>
<title>爱了！一个现代化的 Git CLI 客户端，一堆命令不用记了</title>
<link>https://toutiao.io/k/s3pgs9r</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;span&gt;&lt;span&gt;关注公众号 “&lt;/span&gt;&lt;span&gt;&lt;span&gt;转角遇到GitHub&lt;/span&gt;&lt;/span&gt;&lt;span&gt;” ，每天推荐给你优秀开源项目&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是欧盆索思（opensource），每天为你带来优秀的开源项目！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先看一张动图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.290625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/lkYNiaZsfpqbfTtJ24frNJpobbiczdSTj9oD67Zl7o7Jk1yKia0KoosN5fe77camiatzBGX10WR5lR4IMErePVoWtQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天推荐的这个工具是：bit，它是构建在 git 之上的实验性现代化 git CLI，可提供令人满意的默认值和其他优点。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;命令和 flag 建议，以帮助你浏览 git 为您提供的众多选项；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;bit add、bit checkout 能自动完成分支名和文件名；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;自动获取（fetch）和分支快速转发（fast-forwarding），减少合并冲突的可能性；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;建议与 git 别名一起使用；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一些新命令，如 bit sync 等，能极大地简化了工作流程；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;来自 git-extras 的命令，例如 bit release &amp;amp; bit info；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;与 git 完全兼容，允许您在需要时回退到 git。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目地址：https://github.com/chriswalz/bit，Star 数：2.7k+。这是一个 Go 项目。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;安装&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）最简单的安装方式&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ curl -sf https://gobinaries.com/chriswalz/bit | sh; curl -sf https://gobinaries.com/chriswalz/bit/bitcomplete | sh &amp;amp;&amp;amp; &lt;span&gt;echo&lt;/span&gt; y | COMP_INSTALL=1 bitcomplete&lt;br/&gt;$ bit&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）也可以直接从这里下载&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/chriswalz/bit/releases&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）如果安装了 Go，则可以从源码编译&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;确保使用了 go module。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ go get github.com/chriswalz/bit&lt;br/&gt;$ bit&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意，bit 依赖 git。所以你本地需要安装 git。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前支持如下平台：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;iTerm2 (macOS)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Terminal.app (macOS)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Command Prompt (Windows)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;WSL/Windows Subsystem for Linux (Windows)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;gnome-terminal (Ubuntu)&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;bit 特有的命令&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、bit save [commit message]&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建一个新的提交。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、bit sync&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同步对 origin 分支的更改。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大部分时候，bit sync 相当于 &lt;code&gt;bit commit -m &quot;I can still use git commands&quot;&lt;/code&gt;, &lt;code&gt;bit pull -r origin master&lt;/code&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;bit 常见工作流&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过例子演示 bit 常见工作流。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、切换分支&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ bit&lt;br/&gt;&amp;gt; bit switch example-branch&lt;br/&gt;? Branch does not exist. Do you want to create it? Yes&lt;br/&gt;Switched to a new branch &lt;span&gt;&#x27;example-branch&#x27;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、做一些改动&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ bit add *&lt;br/&gt;$ bit save &lt;span&gt;&quot;add important feature&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、做其他改动&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ bit save&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4、push 改变到 origin&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ bit sync&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5、一段时间后，可以再同步别人的修改&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;$ bit sync&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般都直接输入 bit，然后回车。接着输入会自动提示，如开始的动图。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;文末&lt;strong&gt;「阅读原文」&lt;/strong&gt;可直达项目首页。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;今天的项目大家觉得怎么样吗？如果你喜欢，请在文章底部留言、点赞或关注转发，你的支持就是我持续更新的最大动力！&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;推荐阅读&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;转角遇到GitHub - 送给爱开源的你&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;258&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;258&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/lkYNiaZsfpqYm0bG0MRgJIZRoicricTQsNEEbzuja1veleica9PFicSiayqmibQZzSRZBNufMjJIq2tKXpb4VK0DjbibZQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;344&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Git · GitHub · GitLab · Gitee&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>779cf9dbc6c46cbfee80d1a0ab0865f5</guid>
<title>Pigeon：Flutter 多端接口一致性以及规范化管理实践</title>
<link>https://toutiao.io/k/yeyymvu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.559375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/6GYDCe0a26982L0Ot2BhKbpx7oeAlEicnIBAwakXf6qvuzxNN9JibcK30j9IKeRM2I5toBDfWYiaXPRdYWj1AR1CQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;导语： 跨端开发中，经常会遇到插件，接口管理上的问题。了解完本文，你将会了解Flutter是如何通过Pigeon去解决plugin中多端开发难以管理的问题。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;8&quot; data-source-title=&quot;https://github.com/linpenghui958/flutterPigeonDemo&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;&lt;span&gt;demo&lt;span&gt;源码地址&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section class=&quot;blockquote_info js_blockquote_source&quot; data-json=&quot;%7B%22type%22%3A%22out%22%2C%22source%22%3A%22url%22%2C%22digest%22%3A%22%3Cp%3Edemo%3C%2Fp%3E%22%2C%22digestLen%22%3A4%2C%22text%22%3A%22%22%2C%22article%22%3A%7B%7D%2C%22hasReportOverSize%22%3Afalse%2C%22editorReportData%22%3A%5B%7B%22id%22%3A%22122333%22%2C%22key%22%3A%2276%22%2C%22len%22%3A1%7D%5D%2C%22from%22%3A%22https%3A%2F%2Fgithub.com%2Flinpenghui958%2FflutterPigeonDemo%22%7D&quot;&gt;&lt;span class=&quot;blockquote_other&quot;&gt;https://github.com/linpenghui958/flutterPigeonDemo&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;warning&lt;/span&gt;：目前Pigeon还是prerelease版本，所以可能会有breaking change。下文以0.1.7版本为例。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;为何需要Pigeon&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在hybird开发中，前端需要native能力，需要native双端开发提供接口。这种情况下就如何规范命名，参数等就成了一个问题，如果单独维护一份协议文件，三端依照协议文件进行开发，很容易出现协议更改后，没有及时同步，又或者在实际开发过程没有按照规范，可能导致各种意外情况。在Flutter插件包的开发中，因为涉及到native双端代码实现能力，dart侧暴露统一的接口给使用者，也会出现同样的问题，这里Flutter官方推荐使用Pigeon进行插件管理。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Pigeon的作用&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Flutter官方提供的Pigeon插件，通过dart入口，生成双端通用的模板代码，Native部分只需通过重写模板内的接口，无需关心methodChannel部分的具体实现，入参，出参也均通过生成的模板代码进行约束。假设接口新增，或者参数修改，只需要在dart侧更新协议文件，生成双端模板，即可达到同步更新。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以Flutter官方plugin中的video_player为例，接入pigeon后最终效果如下&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.493167701863354&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6GYDCe0a26982L0Ot2BhKbpx7oeAlEicnkusU172AJsCibwr9atCFHWCpILXUQuy5OWcupaWuHxluGNf5fBZfzIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;805&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到接入pigeon后整体代码简洁了不少，而且规范了类型定义。接下来我们看一下如何从零接入Pigeon。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;接入Pigeon&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先看一下pub.dev上Pigeon的介绍，Pigeon只会生成Flutter与native平台通信所需的模板代码，没有其他运行时的要求，所以也不用担心Pigeon版本不同而导致的冲突。（这里的确不同版本使用起来差异较大，笔者这里接入的时候0.1.7与0.1.10，pigeon默认导出和使用都不相同）&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;创建package&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ps：如果接入已有plugin库，可以跳过此部分，直接看接入部分。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行生成插件包命令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;flutter create --org com.exmple --template plugin flutterPigeonDemo&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要创建插件包，使用&lt;code&gt;--template=plugin&lt;/code&gt;参数执行&lt;code&gt;flutter create&lt;/code&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;lib/flutter_pigeon_demo.dart&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;android/src/main/kotlin/com/example/flutter_pigeon_demo/FlutterPigeonPlugin.kt&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ios/Classes/FlutterPigeonDemoPlugin.m&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;example/&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里常规通过methodChannel实现plugin的部分省略，主要讲解一下如何接入pigeon插件。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;添加依赖&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先在&lt;code&gt;pubspec.yaml&lt;/code&gt;中添加依赖&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;dev_dependencies:&lt;br/&gt;  flutter_test:&lt;br/&gt;    sdk: flutter&lt;br/&gt;  pigeon:&lt;br/&gt;    version: 0.1.7&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后按照官方的要求添加一个pigeons目录，这里我们放dart侧的入口文件，内容为接口、参数、返回值的定义，后面通过pigeon的命令，生产native端代码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里以&lt;code&gt;pigeons/pigeonDemoMessage.dart&lt;/code&gt;为例&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;import &lt;span&gt;&#x27;package:pigeon/pigeon.dart&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;class DemoReply {&lt;br/&gt;  String result;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;class DemoRequest {&lt;br/&gt;  String methodName;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;// 需要实现的api&lt;br/&gt;@HostApi()&lt;br/&gt;abstract class PigeonDemoApi {&lt;br/&gt;  DemoReply getMessage(DemoRequest params);&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;// 输出配置&lt;br/&gt;void configurePigeon(PigeonOptions opts) {&lt;br/&gt;  opts.dartOut = &lt;span&gt;&#x27;./lib/PigeonDemoMessage.dart&#x27;&lt;/span&gt;;&lt;br/&gt;  opts.objcHeaderOut = &lt;span&gt;&#x27;ios/Classes/PigeonDemoMessage.h&#x27;&lt;/span&gt;;&lt;br/&gt;  opts.objcSourceOut = &lt;span&gt;&#x27;ios/Classes/PigeonDemoMessage.m&#x27;&lt;/span&gt;;&lt;br/&gt;  opts.objcOptions.prefix = &lt;span&gt;&#x27;FLT&#x27;&lt;/span&gt;;&lt;br/&gt;  opts.javaOut =&lt;br/&gt;  &lt;span&gt;&#x27;android/src/main/kotlin/com/example/flutter_pigeon_demo/PigeonDemoMessage.java&#x27;&lt;/span&gt;;&lt;br/&gt;  opts.javaOptions.package = &lt;span&gt;&#x27;package com.example.flutter_pigeon_demo&#x27;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;pigeonDemoMessage.dart&lt;/code&gt;文件中定义了请求参数类型、返回值类型、通信的接口以及pigeon输出的配置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里&lt;code&gt;@HostApi()&lt;/code&gt;标注了通信对象和接口的定义，后续需要在native侧注册该对象，在Dart侧通过该对象的实例来调用接口。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;configurePigeon&lt;/code&gt;为执行pigeon生产双端模板代码的输出配置。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;dartOut&lt;/code&gt;为dart侧输出位置&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;objcHeaderOut、objcSourceOut&lt;/code&gt;为iOS侧输出位置&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;prefix&lt;/code&gt;为插件默认的前缀&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;javaOut、javaOptions.package&lt;/code&gt;为Android侧输出位置和包名&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之后我们只需要执行如下命令，就可以生成对应的代码到指定目录中。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;flutter pub run pigeon --input pigeons/pigeonDemoMessage.dart&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生成模板代码后的项目目录如下&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.8198433420365536&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6GYDCe0a26982L0Ot2BhKbpx7oeAlEicnyibzelSZPVyFhcPCURbfcyK0WE0AgicLpBPbRrxQrpd3IHpR1H5Ibjaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;766&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;项目目录&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们在Plugin库中只需要管理标红的dart文件，其余标绿的则为通过Pigeon自动生成的模板代码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们接下来看一下双端如何使用Pigeon生成的模板文件。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Android端接入&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里Pigeon生产的&lt;code&gt;PigeonDemoMessage.java&lt;/code&gt;文件中，可以看到入参和出参的定义&lt;code&gt;DemoRequest、DemoReply&lt;/code&gt;，而&lt;code&gt;PigeonDemoApi&lt;/code&gt;接口，后面需要在plugin中继承PigeonDemoApi并实现对应的方法，其中setup函数用来注册对应方法所需的methodChannel。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;ps: 这里生成的PigeonDemoApi部分，setup使用了接口中静态方法的默认实现，这里需要api level 24才能支持，这里需要注意一下。&lt;/p&gt;&lt;p&gt;考虑到兼容性问题，可以将setup的定义转移到plugin中。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先需要在plugin文件中引入生成的PigeonDemoMessage中的接口和类。FlutterPigeonDemoPlugin先要继承PigeonDemoApi。然后在onAttachedToEngine中进行PigeonDemoApi的setup注册。并在plugin中重写PigeonDemoApi中定义的getMessage方法&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪代码部分&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;// ... 省略其他引入&lt;br/&gt;import com.example.flutter_pigeon_demo.PigeonDemoMessage.*&lt;br/&gt;&lt;br/&gt;// 继承PigeonDemoApi&lt;br/&gt;public class FlutterPigeonDemoPlugin: FlutterPlugin, MethodCallHandler, PigeonDemoApi {&lt;br/&gt;&lt;br/&gt; //...&lt;br/&gt; override fun onAttachedToEngine(@NonNull flutterPluginBinding: FlutterPlugin.FlutterPluginBinding) {&lt;br/&gt;     channel = MethodChannel(flutterPluginBinding.getFlutterEngine().getDartExecutor(), &lt;span&gt;&quot;flutter_pigeon_demo&quot;&lt;/span&gt;)&lt;br/&gt;     channel.setMethodCallHandler(this);&lt;br/&gt;     // pigeon生成的api进行初始化&lt;br/&gt;     PigeonDemoApi.setup(flutterPluginBinding.binaryMessenger, this);&lt;br/&gt;   }&lt;br/&gt;   &lt;br/&gt;   // 重写PigeonDemoApi中的getMessage方法&lt;br/&gt;   override fun getMessage(arg: DemoRequest): DemoReply {&lt;br/&gt;      var reply = DemoReply();&lt;br/&gt;      reply.result = &lt;span&gt;&quot;pigeon demo result&quot;&lt;/span&gt;;&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; reply;&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;iOS接入&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ios相关目录下的&lt;code&gt;PigeonDemoMessage.m&lt;/code&gt;也有&lt;code&gt;FLTDemoReply、FLTDemoRequest、FLTPigeonDemoApiSetup&lt;/code&gt;的实现。首先需要在plugin中引入头文件&lt;code&gt;PigeonDemoMessage.h&lt;/code&gt;，需要在registerWithRegistrar中注册setup函数，并实现getMessage方法。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;#import &quot;FlutterPigeonDemoPlugin.h&quot;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;#import &quot;PigeonDemoMessage.h&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;@implementation FlutterPigeonDemoPlugin&lt;br/&gt;+ (void)registerWithRegistrar:(NSObject&amp;lt;FlutterPluginRegistrar&amp;gt;*)registrar {&lt;br/&gt;    FlutterPigeonDemoPlugin* instance = [[FlutterPigeonDemoPlugin alloc] init];&lt;br/&gt;    // 注册api&lt;br/&gt;    FLTPigeonDemoApiSetup(registrar.messenger, instance);&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;// 重写getMessage方法&lt;br/&gt;- (FLTDemoReply*)getMessage:(FLTDemoRequest*)input error:(FlutterError**)error {&lt;br/&gt;    FLTDemoReply* reply = [[FLTDemoReply alloc] init];&lt;br/&gt;    reply.result = @&lt;span&gt;&quot;pigeon demo result&quot;&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; reply;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;@end&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Dart侧使用&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终在dart侧如何调用呢
首先看一下lib下Pigeon生成的dart文件&lt;code&gt;PigeonDemoMessage.dart&lt;/code&gt;&lt;code&gt;DemoReply、DemoRequest&lt;/code&gt;用来实例化入参和出参
然后通过&lt;code&gt;PigeonDemoApi&lt;/code&gt;的实例去调用方法。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;import &lt;span&gt;&#x27;dart:async&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;import &lt;span&gt;&#x27;package:flutter/services.dart&#x27;&lt;/span&gt;;&lt;br/&gt;import &lt;span&gt;&#x27;PigeonDemoMessage.dart&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;class FlutterPigeonDemo {&lt;br/&gt;  static const MethodChannel _channel =&lt;br/&gt;      const MethodChannel(&lt;span&gt;&#x27;flutter_pigeon_demo&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;  static Future&amp;lt;String&amp;gt; get platformVersion async {&lt;br/&gt;    final String version = await _channel.invokeMethod(&lt;span&gt;&#x27;getPlatformVersion&#x27;&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; version;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  static Future&amp;lt;DemoReply&amp;gt; testPigeon() async {&lt;br/&gt;    // 初始化请求参数&lt;br/&gt;    DemoRequest requestParams = DemoRequest()..methodName = &lt;span&gt;&#x27;requestMessage&#x27;&lt;/span&gt;;&lt;br/&gt;    // 通过PigeonDemoApi实例去调用方法&lt;br/&gt;    PigeonDemoApi api = PigeonDemoApi();&lt;br/&gt;    DemoReply reply = await api.getMessage(requestParams);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; reply;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至此，Pigeon的接入就已经完成了。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;接入Pigeon后的效果&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文demo代码较为简单，接入Pigeon前后的差异并不明显，我们可以看下一Flutter官方plugin中的video_player接入前后的对比。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;左侧为接入Pigeon前，处理逻辑都在onMethodCall中，不同的方法通过传入的call.method来区分，代码复杂后很容易变成面条式代码，而且返回的参数也没有约定，有较多不确定因素。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;右侧接入Pigeon后，只需要重写对应的方法，逻辑分离，直接通过函数名区分，只需要关心具体的业务逻辑即可。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/figure&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4296875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6GYDCe0a26982L0Ot2BhKbpx7oeAlEicnMbXODFr4ekmE2tYSKqmfrdbHqvicENVORUTlQRMb6bk8DsEoBOghEHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而在dart的调用侧，接入前都是通过invokeMethod调用，传入的参数map内也是dynamic类型的值。接入后直接调用api的实例对象上的方法，并且通过Pigeon生成的模板代码，直接实例化参数对象。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5203125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6GYDCe0a26982L0Ot2BhKbpx7oeAlEicnA9C63TPUAxpGFx8GL1xaL8HYw4bNlNqmvIRtgkSaiajMwbHLZnRx2kw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总结：通过Pigeon来管理Flutter的plugin库，只需要在dart侧维护一份协议即可，即使在多端协同开发的情况下，也能达到约束和规范的作用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在实现原生插件时我们可以省去很多重复代码，并且不需要关心具体methodchannel的name，也避免了常规情况下，可能出现的面条式代码，只需通过重写pigeon暴露的方法就可以完成双端的通信。而dart侧也只需要通过模板暴露的实例对象来调用接口方法。&lt;/p&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h4&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h4&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h4&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;源码分析&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用的时候，我们只知道运行命令&lt;code&gt;flutter pub run pigeon --input xxx&lt;/code&gt;就可以生成双端模板代码，接下来我们深入了解一下，这其中Pigeon到底做了什么。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，看一下plugin库默认导出的pigeon_lib.dart入口文件，这里主要有几个定义PigeonOptions、ParseResults、Pigeon。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;PigeonOptions，是执行命令生成模板时的选项。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;ParseResults，表示解析的结果集合包含了AST对象root，和解析过程产生的错误信息集合erros。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Pigeon，是实际进行代码生成的类。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中Pigeon的入口为run方法，这里进行了模板代码的生成。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;run函数的入参是一个String类型的List，这里对应的是通过命令行输入的，PigeonOptions的选项。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;函数开始先实例化了pigeon对象，并对传入的options进行解析生成编译所需的PigeonOptions。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里提供了两种方式，一种是通过命令直接传入，一种是通过入口文件内configurePigeon的定义传入。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// Pigeon实例初始化&lt;/span&gt;&lt;br/&gt;&lt;span&gt;final&lt;/span&gt; Pigeon pigeon = Pigeon.setup();&lt;br/&gt;&lt;span&gt;// 解析命令行穿传入的参数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;final&lt;/span&gt; PigeonOptions options = Pigeon.parseArgs(args);&lt;br/&gt;&lt;span&gt;// 解析入口文件内的参数&lt;/span&gt;&lt;br/&gt;_executeConfigurePigeon(options);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;//校验input(输入文件)或者dartOut(dart输出路径)是否为空&lt;/span&gt;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (options.input == &lt;span&gt;null&lt;/span&gt; || options.dartOut == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;  &lt;span&gt;print&lt;/span&gt;(usage);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来会对objcHeaderOut、javaOut为空的情况取默认值处理。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// 解析apis&lt;/span&gt;&lt;br/&gt;&lt;span&gt;final&lt;/span&gt; ParseResults parseResults = pigeon.parse(apis);&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; (Error err &lt;span&gt;in&lt;/span&gt; parseResults.errors) {&lt;br/&gt;  errors.add(Error(message: err.message, filename: options.input));&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里parse解析生成的parseResults对象，最终用parseResults中的ast对象root来生成多端模板代码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里首先将需要实现的api类和参数类进行了区分。（ps：这里_isApi中便是通过dart入口中@HostApi注解进行区分）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;for&lt;/span&gt; (&lt;span&gt;Type&lt;/span&gt; type &lt;span&gt;in&lt;/span&gt; types) {&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; ClassMirror classMirror = reflectClass(type);&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (_isApi(classMirror)) {&lt;br/&gt;    apis.add(classMirror);&lt;br/&gt;  } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;    classes.add(classMirror);&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后对参数类型进行区分，并给root对象添加了classes和apis属性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里classes对应模板中参数的类。而apis则对应模板中含有函数的方法类。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;root.classes =&lt;br/&gt;      _unique(_parseClassMirrors(classes), (Class x) =&amp;gt; x.name).toList();&lt;br/&gt;&lt;br/&gt;  root.apis = &amp;lt;Api&amp;gt;[];&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; (ClassMirror apiMirror &lt;span&gt;in&lt;/span&gt; apis) {&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;Method&amp;gt; functions = &amp;lt;Method&amp;gt;[];&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (DeclarationMirror declaration &lt;span&gt;in&lt;/span&gt; apiMirror.declarations.values) {&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (declaration &lt;span&gt;is&lt;/span&gt; MethodMirror &amp;amp;&amp;amp; !declaration.isConstructor) { &lt;br/&gt;        &lt;span&gt;// 省略处理过程&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; HostApi hostApi = _getHostApi(apiMirror);&lt;br/&gt;    root.apis.add(Api(&lt;br/&gt;        name: MirrorSystem.getName(apiMirror.simpleName),&lt;br/&gt;        location: hostApi != &lt;span&gt;null&lt;/span&gt; ? ApiLocation.host : ApiLocation.flutter,&lt;br/&gt;        methods: functions,&lt;br/&gt;        dartHostTestHandler: hostApi?.dartHostTestHandler));&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后根据解析后的root对象，来生成对应各端的代码。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt; (options.dartOut != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;  &lt;span&gt;await&lt;/span&gt; _runGenerator(&lt;br/&gt;    options.dartOut,&lt;br/&gt;    (&lt;span&gt;StringSink&lt;/span&gt; sink) =&amp;gt;&lt;br/&gt;    generateDart(options.dartOptions, parseResults.root, sink));&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (options.objcHeaderOut != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;  &lt;span&gt;await&lt;/span&gt; _runGenerator(&lt;br/&gt;    options.objcHeaderOut,&lt;br/&gt;    (&lt;span&gt;StringSink&lt;/span&gt; sink) =&amp;gt; generateObjcHeader(&lt;br/&gt;      options.objcOptions, parseResults.root, sink));&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (options.objcSourceOut != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;  &lt;span&gt;await&lt;/span&gt; _runGenerator(&lt;br/&gt;    options.objcSourceOut,&lt;br/&gt;    (&lt;span&gt;StringSink&lt;/span&gt; sink) =&amp;gt; generateObjcSource(&lt;br/&gt;      options.objcOptions, parseResults.root, sink));&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (options.javaOut != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;  &lt;span&gt;await&lt;/span&gt; _runGenerator(&lt;br/&gt;    options.javaOut,&lt;br/&gt;    (&lt;span&gt;StringSink&lt;/span&gt; sink) =&amp;gt;&lt;br/&gt;    generateJava(options.javaOptions, parseResults.root, sink));&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里每个具体生成输出的函数就比较简单，这里以dart端的generateDart函数为例，通过root对象，遍历其中的class和api来生成对应的模板代码，这里模板都是已经预先定义好的。如果项目本身有定制化输出模板的需求，只需要修改对应的部分就好了。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;void&lt;/span&gt; generateDart(DartOptions opt, Root root, &lt;span&gt;StringSink&lt;/span&gt; sink) {&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt; customClassNames =&lt;br/&gt;      root.classes.map((Class x) =&amp;gt; x.name).toList();&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; Indent indent = Indent(sink);&lt;br/&gt;  indent.writeln(&lt;span&gt;&#x27;// &lt;span&gt;$generatedCodeWarning&lt;/span&gt;&#x27;&lt;/span&gt;);&lt;br/&gt;  indent.writeln(&lt;span&gt;&#x27;// &lt;span&gt;$seeAlsoWarning&lt;/span&gt;&#x27;&lt;/span&gt;);&lt;br/&gt;  indent.writeln(&lt;br/&gt;      &lt;span&gt;&#x27;// ignore_for_file: public_member_api_docs, non_constant_identifier_names, avoid_as, unused_import&#x27;&lt;/span&gt;);&lt;br/&gt;  indent.writeln(&lt;span&gt;&#x27;// @dart = &lt;span&gt;${opt.isNullSafe ? &lt;span&gt;&#x27;2.10&#x27;&lt;/span&gt; : &lt;span&gt;&#x27;2.8&#x27;&lt;/span&gt;}&lt;/span&gt;&#x27;&lt;/span&gt;);&lt;br/&gt;  indent.writeln(&lt;span&gt;&#x27;import \&#x27;dart:async\&#x27;;&#x27;&lt;/span&gt;);&lt;br/&gt;  indent.writeln(&lt;span&gt;&#x27;import \&#x27;package:flutter/services.dart\&#x27;;&#x27;&lt;/span&gt;);&lt;br/&gt;  indent.writeln(&lt;br/&gt;      &lt;span&gt;&#x27;import \&#x27;dart:typed_data\&#x27; show Uint8List, Int32List, Int64List, Float64List;&#x27;&lt;/span&gt;);&lt;br/&gt;  indent.writeln(&lt;span&gt;&#x27;&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;final&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; nullBang = opt.isNullSafe ? &lt;span&gt;&#x27;!&#x27;&lt;/span&gt; : &lt;span&gt;&#x27;&#x27;&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;// 遍历输出参数类&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; (Class klass &lt;span&gt;in&lt;/span&gt; root.classes) {&lt;br/&gt;    sink.write(&lt;span&gt;&#x27;class &lt;span&gt;${klass.name}&lt;/span&gt; &#x27;&lt;/span&gt;);&lt;br/&gt;    indent.scoped(&lt;span&gt;&#x27;{&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;}&#x27;&lt;/span&gt;, () {&lt;br/&gt;      &lt;span&gt;for&lt;/span&gt; (Field field &lt;span&gt;in&lt;/span&gt; klass.fields) {&lt;br/&gt;        &lt;span&gt;final&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; datatype =&lt;br/&gt;            opt.isNullSafe ? &lt;span&gt;&#x27;&lt;span&gt;${field.dataType}&lt;/span&gt;?&#x27;&lt;/span&gt; : field.dataType;&lt;br/&gt;        indent.writeln(&lt;span&gt;&#x27;&lt;span&gt;$datatype&lt;/span&gt; &lt;span&gt;${field.name}&lt;/span&gt;;&#x27;&lt;/span&gt;);&lt;br/&gt;      }&lt;br/&gt;      indent.writeln(&lt;span&gt;&#x27;// ignore: unused_element&#x27;&lt;/span&gt;);&lt;br/&gt;      indent.write(&lt;span&gt;&#x27;Map&amp;lt;dynamic, dynamic&amp;gt; _toMap() &#x27;&lt;/span&gt;);&lt;br/&gt;      indent.scoped(&lt;span&gt;&#x27;{&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;}&#x27;&lt;/span&gt;, () {&lt;br/&gt;        indent.writeln(&lt;br/&gt;            &lt;span&gt;&#x27;final Map&amp;lt;dynamic, dynamic&amp;gt; pigeonMap = &amp;lt;dynamic, dynamic&amp;gt;{};&#x27;&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (Field field &lt;span&gt;in&lt;/span&gt; klass.fields) {&lt;br/&gt;          indent.write(&lt;span&gt;&#x27;pigeonMap[\&#x27;&lt;span&gt;${field.name}&lt;/span&gt;\&#x27;] = &#x27;&lt;/span&gt;);&lt;br/&gt;          &lt;span&gt;if&lt;/span&gt; (customClassNames.contains(field.dataType)) {&lt;br/&gt;            indent.addln(&lt;br/&gt;                &lt;span&gt;&#x27;&lt;span&gt;${field.name}&lt;/span&gt; == null ? null : &lt;span&gt;${field.name}&lt;/span&gt;&lt;span&gt;$nullBang&lt;/span&gt;._toMap();&#x27;&lt;/span&gt;);&lt;br/&gt;          } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;            indent.addln(&lt;span&gt;&#x27;&lt;span&gt;${field.name}&lt;/span&gt;;&#x27;&lt;/span&gt;);&lt;br/&gt;          }&lt;br/&gt;        }&lt;br/&gt;        indent.writeln(&lt;span&gt;&#x27;return pigeonMap;&#x27;&lt;/span&gt;);&lt;br/&gt;      });&lt;br/&gt;      indent.writeln(&lt;span&gt;&#x27;// ignore: unused_element&#x27;&lt;/span&gt;);&lt;br/&gt;      indent.write(&lt;br/&gt;          &lt;span&gt;&#x27;static &lt;span&gt;${klass.name}&lt;/span&gt; _fromMap(Map&amp;lt;dynamic, dynamic&amp;gt; pigeonMap) &#x27;&lt;/span&gt;);&lt;br/&gt;      indent.scoped(&lt;span&gt;&#x27;{&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;}&#x27;&lt;/span&gt;, () {&lt;br/&gt;        indent.writeln(&lt;span&gt;&#x27;final &lt;span&gt;${klass.name}&lt;/span&gt; result = &lt;span&gt;${klass.name}&lt;/span&gt;();&#x27;&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (Field field &lt;span&gt;in&lt;/span&gt; klass.fields) {&lt;br/&gt;          indent.write(&lt;span&gt;&#x27;result.&lt;span&gt;${field.name}&lt;/span&gt; = &#x27;&lt;/span&gt;);&lt;br/&gt;          &lt;span&gt;if&lt;/span&gt; (customClassNames.contains(field.dataType)) {&lt;br/&gt;            indent.addln(&lt;br/&gt;                &lt;span&gt;&#x27;pigeonMap[\&#x27;&lt;span&gt;${field.name}&lt;/span&gt;\&#x27;] != null ? &lt;span&gt;${field.dataType}&lt;/span&gt;._fromMap(pigeonMap[\&#x27;&lt;span&gt;${field.name}&lt;/span&gt;\&#x27;]) : null;&#x27;&lt;/span&gt;);&lt;br/&gt;          } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;            indent.addln(&lt;span&gt;&#x27;pigeonMap[\&#x27;&lt;span&gt;${field.name}&lt;/span&gt;\&#x27;];&#x27;&lt;/span&gt;);&lt;br/&gt;          }&lt;br/&gt;        }&lt;br/&gt;        indent.writeln(&lt;span&gt;&#x27;return result;&#x27;&lt;/span&gt;);&lt;br/&gt;      });&lt;br/&gt;    });&lt;br/&gt;    indent.writeln(&lt;span&gt;&#x27;&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;// 省略apis接口部分的输出&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;span&gt;腾讯音乐QQ音乐/全民K歌招聘客户端、web前端、后台开发，点击查看原文投递简历！&lt;/span&gt;&lt;span&gt;或邮箱联系: godjliu@tencent.com&lt;/span&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>44656c491ac6654668755f7e78f1967e</guid>
<title>滴滴翻译技术探索与实践</title>
<link>https://toutiao.io/k/5i8cg0x</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;amp;album_id=1568984114098176003&amp;amp;__biz=MzU1ODEzNjI2NA==#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;90&quot; data-backw=&quot;562&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;562&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;90&quot; data-ratio=&quot;0.16&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBH3NicuyQQ8Dia3g8PYjzzicvNsyKIENSgUfnU5WTuuHW2SwZD3CwZUE6icPGqic4XsEJ0b3xuuyA0wznw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;562&quot; data-backw=&quot;562&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;562&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;593&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLxU4Byo2n0ZXalENhjTwjwJEmiakcRjomXoUMEVc4z7bUCaKAfaN7RZOw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-darkmode-bgcolor-15906711670635=&quot;rgb(52, 52, 52)&quot; data-darkmode-original-bgcolor-15906711670635=&quot;rgb(239, 239, 239)&quot; data-style=&quot;padding: 10px; display: inline-block; width: 558px; border-width: 1px; border-style: solid; border-color: transparent; background-color: rgb(239, 239, 239); border-radius: 0px;&quot; class=&quot;js_darkmode__0&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; data-darkmode-bgcolor-15906711670635=&quot;rgb(52, 52, 52)&quot; data-darkmode-original-bgcolor-15906711670635=&quot;rgb(239, 239, 239)&quot;&gt;&lt;section data-darkmode-bgcolor-15906711670635=&quot;rgb(52, 52, 52)&quot; data-darkmode-original-bgcolor-15906711670635=&quot;rgb(239, 239, 239)&quot;&gt;&lt;p data-darkmode-bgcolor-15906711670635=&quot;rgb(52, 52, 52)&quot; data-darkmode-original-bgcolor-15906711670635=&quot;rgb(239, 239, 239)&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;桔妹导读：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;机器翻译系统是使用深度学习技术从其支持的语言中翻译大量文本的服务。服务将 &quot;源&quot; 文本从一种语言转换为不同的 &quot;目标&quot; 语言。滴滴作为一家国际化的公司，无论是在国际化网约车中还是司乘沟通都有着丰富的落地场景。本文详细的介绍了滴滴翻译的整体框架、原理以及方法，同时还会简单介绍滴滴NLP在今年参加的机器翻译大赛（WMT2020）的一些技术。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;1. &lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;‍‍‍‍&lt;/span&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.0734375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jE5bOw22iaBtFvdK9icOj3ibAXa8W3tqZ2lQDEaA5XcCDJ5cVIic2221PzXcw0oo69kvia8ojgPZnEV4jPxZURBln4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-backw=&quot;562&quot; data-backh=&quot;41&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;机器翻译系统是使用深度学习技术从其支持的语言中翻译大量文本的服务。服务将 &quot;源&quot; 文本从一种语言转换为不同的 &quot;目标&quot; 语言。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;机器翻译技术背后的概念和使用它的接口相对简单，但背后的技术是极其复杂的，并汇集了一些前沿技术，特别是深度机器学习、大数据、语言学、GPU加速计算等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大规模商业化使用的机器翻译主要经历了SMT与NMT阶段：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;▍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;1.1 统计机器翻译（SMT）&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;机器翻译行业使用的比较早的技术是统计机器翻译 (SMT)。SMT采用统计分析方法，根据源语言的语境，利用已有的双语语料学习到的短语翻译知识，将源语言的分隔片段短语转化为对应的目标短语，最后利用语言模型估计出一个句子的最佳可能译文。SMT也是最早商用的机器翻译系统。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;258&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.4469320066334992&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLxf9FygRia58xkQ6MWJsWE9rojU3SruCzSTOWFoEP0spicLxFvGSw9yIfA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1206&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;统计机器翻译结构&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;▍&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;1.2 神经机器翻译（NMT)&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;神经机器翻译是利用深度神经网络将源句子进行编码，再进行解码翻译为目标语言。2016年，Google发表GNMT[1]，改变了SMT的地位，使翻译技术发生了根本性的转变，自此进入NMT时代，并且有了现在更高的翻译质量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;385&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.66626936829559&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLxcib5yTLzwUd7yZEZTzHSWWSkbhJreHdicvp4SHVT6wu0QuMhmUnVIFmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;839&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;神经机器翻译结构&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;▍&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;1.&lt;/span&gt;3 SMT与NMT的相同点&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;2. &lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;评价指标 （BLEU）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.0734375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jE5bOw22iaBtFvdK9icOj3ibAXa8W3tqZ2lQDEaA5XcCDJ5cVIic2221PzXcw0oo69kvia8ojgPZnEV4jPxZURBln4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-backw=&quot;562&quot; data-backh=&quot;41&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;对于机器翻译的结果，可以采用人工评估的方法，但是比较受限。首先是人工评估具有一定的主观性，其次每次训练结果需要人工评估成本较高。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此诞生了一些使用机器进行评估的方法，评测关键就在于如何定义翻译译文与参考译文 (Reference) 之间的相似度。目前比较常用的方法为BLEU[2] (Bilingual Evaluation Understudy)，该方法由IBM提出，BLEU采用的方式是比较并统计共现的n-gram词的个数，即统计同时出现在翻译译文和参考译文中的n元词的个数，&lt;/span&gt;&lt;span&gt;最后把匹配到的n元词的数目除以翻译译文的单词数目，经过几何平均以及短句惩罚得到评测结果。&lt;/span&gt;&lt;span&gt;这种方法的打分越高，则认为翻译系统的译文越接近人工翻译结果，即机器翻译系统的翻译质量越高。&lt;/span&gt;&lt;span&gt;以下为标准的BLEU score的计算公式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5809248554913294&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLxv46OKHrIssgyXXfhpOxeh61LicEibOkMZicXSGhejWJLn6GymuvVw17Mg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;692&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;3. &lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Transformer&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.0734375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jE5bOw22iaBtFvdK9icOj3ibAXa8W3tqZ2lQDEaA5XcCDJ5cVIic2221PzXcw0oo69kvia8ojgPZnEV4jPxZURBln4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-backw=&quot;562&quot; data-backh=&quot;41&quot;/&gt;&lt;/section&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;▍&lt;/span&gt;&lt;span&gt;3.1 简介&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前NMT的基本上都是Encoder（源端语言编码）- Decoder（目标语言解码）框架，应用广泛的是transformer[3]模型。Transformer的编码器 Encoder由6个相同的编码叠加而成，Encoder中的每层包含2个子层：multi-head self-attention 和 FFN（Feed-Forward Network）。解码器 Decoder 也是由6个相同的编码叠加而成，每层包含3个子层：masked multi-head attention、multi-head attention 和 FFN。Transformer结构参考下图：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;833&quot; data-backw=&quot;562&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;562&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;297&quot; data-ratio=&quot;1.4823008849557522&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLxaVQemyzfwmb0dKMTEH95XbYEkrDf0g0NxpvUSNdukI7TkIUDfmSYAg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;452&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;▍&lt;/span&gt;&lt;span&gt;3.2 &lt;/span&gt;Transformer With Relative Position Representations&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;传统的Transformer通过将绝对位置嵌入作为输入的方式利用位置信息，这种方式并未在其结构中明确捕获信息。Shaw[4] 等人提出了将Transformer中的注意力机制和相对位置表达结合起来，并且在两个翻译任务上取得了比较好的翻译效果。我们进行了消融研究，发现具有相对位置嵌入的模型比传统的模型具有更快的收敛性和更好的性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;▍&lt;/span&gt;&lt;span&gt;3.3 &lt;/span&gt;Transformer with Larger FFN Size&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在实际翻译模型中，采用了更大的FFN size (8,192 or 15,000)。并且在实验中发现，在可控的网络大小的同时，模型的性能有了合理的提升。由于更大的FFN size容易过拟合，我们将dropout rate设置为0.3。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;4. &lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;滴滴翻译实践&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.0734375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jE5bOw22iaBtFvdK9icOj3ibAXa8W3tqZ2lQDEaA5XcCDJ5cVIic2221PzXcw0oo69kvia8ojgPZnEV4jPxZURBln4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-backw=&quot;562&quot; data-backh=&quot;41&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;滴滴翻译主要以 Transformer-big (6 layers encoder &amp;amp; decoder, hidden size: 1,024, FFN size: 4,096, number of heads: 16) 结构作为基础模型，在此模型之上进行一系列的优化。以下为滴滴翻译整体框架图：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;523&quot; data-backw=&quot;562&quot; data-ratio=&quot;0.9297520661157025&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLxQ2GfMlcrekibPy8LhYQW8oDhdk72cAU24Hibe2a7SkS8OYvyH3LCy00Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1210&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;span&gt;滴滴翻译整体框架图&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt; &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;▍&lt;/span&gt;&lt;span&gt;4.1 &lt;/span&gt;数据准备&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在机器翻译任务中，最重要部分就是对齐的双语语料，即需要原文与参考译文这种成对的双语数据。通常情况下，网络上存在的大都是单语语料。所以在任务开始之前，最主要的工作就是准备平行语料。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在滴滴翻译任务中，数据采集框架示意图如下图所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;195&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.33791208791208793&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLx1xicxhtlMVCwUr66QxicslBwCd4dTPq3v41MsHu40xvNbeiaKwYJOokAg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2184&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;数据采集框架示意&lt;/span&gt;&lt;span&gt;图[5]&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据准备工作主要分两大部分：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h5&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.1.1 数据过滤&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;滴滴翻译会通过数据预处理pipeline在网络上收集原始的平行语料。对语言对使用 language model, alignment model[5] 进行打分，对于分数较低的语言对直接过滤，不参与后续的训练&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h5&gt;&lt;strong&gt;&lt;span&gt;4.1.2 数据增强&lt;/span&gt;&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;训练 NMT 模型需要大量的平行语料。但是，平行语料相对于网络上常见的大量单语数据要有限地多。Edunov[6] 等人在相关研究中展示了如何通过仅利用目标语言来提升模型的翻译性能，并且表明利用大量的相关数据可以大幅提升模型准确度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过单语语料提升模型效果的最有效的方法就是back translation，假设目标是训练一个中译英模型，要利用back translation，需要先训练一个英译中的模型，利用该模型将所有的单语目标语言（英语）翻译为中文获得新的平行语料，然后将该语料应用到中译英模型上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在实际应用中，滴滴翻译采用了迭代式回译技术，以提高平行语料的质量。具体而言，在每次迭代中，目标语言到源语言模型负责使用目标语言单语数据为源语言到目标语言模型生成平行训练数据。同时，使用源语言到目标语言模型来使用源语言单语言数据为目标语言到源语言模型生成平行训练数据。目标语言到源语言模型和源语言到目标语言模型的性能都可以迭代地进一步提高。当无法实现进一步的改进时将停止迭代。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5616666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLx93wc85fclLKaRz6R031iaYE1NYszOibbDMcGPoxIcTQsSA5Th6URAVgA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;span&gt;回译技术示意图&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;▍&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;4.2 模型训练&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;h4&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h5&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.2.1 交替知识蒸馏&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;滴滴翻译采用了交替知识蒸馏和迭代集成，以进一步提高单个模型的性能。滴滴翻译使用集成模型作为教师模型，并通过数据增强来提升单学生模型的效果。考虑到较差的老师模型会降低学生模型的效果，所以我们采用的是集成模型的方式训练学生模型。假设训练好三个单模型 (A, B, C) 之后，使用单模型A&amp;amp;B ensemble生成平行语料指导C模型的训练，同理使用迭代方式对三个学生模型进行蒸馏学习以达到最好的单模型效果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h5&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.2.2 Fine-tuning&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在滴滴国际化消息翻译场景中，获得相关的翻译平行语料，利用fine-tuning的方式可以将base model快速的迁移到新领域，并且可以达到较高的模型效果。&lt;/span&gt;&lt;/p&gt;&lt;h5&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.2.3 Ensemble&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;模型集成是常见的提高模型效果的方案，该方案可以利用各个单模型的优势已达到最好的效果。在机器翻译的实践中，模型集成在序列预测的每个步骤中，将不同模型的目标词表的全部概率分布组合在一起进行投票。在初始模型较多的情况下，滴滴翻译使用greedy search的方式选择最优的单模型组合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于模型和数据的多样性是集成模型的重要因素，我们采用了不同的初始化种子，不同的参数，不同的Transformer变种和不同的训练数据集来训练各个单模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;▍&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;4.3 模型预测&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;h5&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.3.1 模型训练与模型部署的区别&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;部署阶段的网络权值已经固定，无需反向传播过程&lt;/span&gt;&lt;/p&gt;&lt;h5&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.3.2 模型预测加速&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;TensorRT是NVIDIA推出的深度学习优化加速工具，采用的原理如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;290&quot; data-backw=&quot;562&quot; data-ratio=&quot;0.5158333333333334&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLx1Y24XH95PfURicS9BvAqNN4ibIopiaf0E2qUQn7849sEu6KiajFtQsxaaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TensorRT示意图&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;针对网络复杂，推理速度慢的问题，滴滴翻译将Transformer模型改造成支持TensorRT加速推理的框架。在实践中基于TensorRT框架的推理速度相较于原生TensorFlow模型提升了9倍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;5. &lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;WMT2020 机器翻译比赛&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.0734375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jE5bOw22iaBtFvdK9icOj3ibAXa8W3tqZ2lQDEaA5XcCDJ5cVIic2221PzXcw0oo69kvia8ojgPZnEV4jPxZURBln4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-backw=&quot;562&quot; data-backh=&quot;41&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;WMT (Workshop on Machine Translation) 是机器翻译领域认可度最高的国际顶级评测比赛，是由国际计算语言学协会ACL（The Association for Computational Linguistics）举办的世界最具影响力的机器翻译大赛。从2006年创办至今，每年都会吸引包括微软、Facebook、DeepMind、百度、华为、腾讯、清华大学、上海交通大学、约翰霍普金斯大学、剑桥大学、爱丁堡大学等全球企业、科研机构以及顶级高校的参与。每次比赛都是各家机器翻译实力的大比拼，也见证了行业机器翻译技术的不断进步。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;滴滴NLP团队参与的是&lt;/span&gt;&lt;span&gt;WMT2020&lt;/span&gt;&lt;span&gt;新闻机器翻译赛道（&lt;/span&gt;&lt;span&gt;Shared Task: Machine Translation of News&lt;/span&gt;&lt;span&gt;）。该赛道共设置了22项不同语言之间的翻译任务，其中，中文到英文翻译是竞争最激烈的任务，共吸引了DeepMind、腾讯、华为、清华大学、上海交通大学等四十多支全球参赛团队参与，在6月24日至6月30日为期七天的比赛时间里，参赛团队累计共提交了近300次数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;与往年不同，今年新闻中译英比赛参赛方均为匿名提交，比赛期间只能看到自己成绩以及其他匿名参赛方成绩，并且每个参赛方最多可以提交7次翻译结果，比赛结束后各参赛方不可再次提交，各参赛方从所有提交中选择其中一个提交结果作为Primary Submission供人工评估使用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;WMT组委会为每个语言赛道提供指定的双语的训练集以及单语语料。参赛方可以根据自己的模型利用相关的训练集。比赛开始后组委会提供的单语的测试集 (Source)，参赛方利用自己的模型对测试集的语言进行预测，然后提交至&lt;/span&gt;&lt;span&gt;OCELoT系统&lt;/span&gt;&lt;span&gt;。组委会利用SacreBLEU1指标对参赛方提交的译文与组委会未公开的标准答案 (Reference) 进行计算，分数越高代表翻译效果越好。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在本次中译英赛道中，滴滴NLP团队在技术上以Transformer结构作为基础，在结构上引入Self-Attention, Relative Positional Attention, Larger FFN Size等变化，利用迭代式回译技术 (Iterative Back-translation) 和交替知识蒸馏 (Alternate Knowledge Distillation) 方法生成高质量的合成语料，结合数据清洗、数据选择、模型集成等技术提高翻译质量。考虑到翻译话题对于翻译质量的影响，滴滴翻译还采用了领域迁移、话题挖掘和个性化加权的方式，使得翻译结果更加个性化。此外，我们还通过EDA、权重剪枝等技术增强翻译模型的鲁棒性。最终滴滴翻译高效准确的进行完成WMT2020中译英赛道翻译任务，并且最先获得36.6的高分，最终获得第三名的成绩，充分彰显了滴滴在机器翻译领域的技术实力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;255&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.44123711340206184&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLxl5mUqRnAy3tP6LwTjrUB6JrDYU2MjXUTTXPanjYr9p1g1G88s9uhew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1940&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;BLEU指标评估排名前十的参赛团队&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;相关研究Paper已经提交至EMNLP2020 Workshop，具体Paper可以参考arXiv（&lt;/span&gt;&lt;span&gt;https://arxiv.org/abs/2010.08185）&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;参考链接：&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;ol start=&quot;&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Wu, Yonghui, et al. &quot;Google&#x27;s neural machine translation system: Bridging the gap between human and machine translation.&quot; arXiv preprint arXiv:1609.08144 (2016).&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Papineni, Kishore, et al. &quot;BLEU: a method for automatic evaluation of machine translation.&quot; Proceedings of the 40th annual meeting of the Association for Computational Linguistics. 2002.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Vaswani, Ashish, et al. &quot;Attention is all you need.&quot; Advances in neural information processing systems. 2017.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Shaw, Peter, Jakob Uszkoreit, and Ashish Vaswani. &quot;Self-attention with relative position representations.&quot; arXiv preprint arXiv:1803.02155 (2018).&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Zhang, Boliang, Ajay Nagesh, and Kevin Knight. &quot;Parallel Corpus Filtering via Pre-trained Language Models.&quot; arXiv preprint arXiv:2005.06166 (2020).&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Edunov, Sergey, et al. &quot;Understanding back-translation at scale.&quot; arXiv preprint arXiv:1808.09381 (2018).&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;本文作者&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;h3&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;▬&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/h3&gt;&lt;h3&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;106&quot; data-backw=&quot;562&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;562&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;106&quot; data-ratio=&quot;0.18946188340807174&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLxFHHq5Vk1PgLdx0cXChnmPlpw9oHs97vxvaOXad4wsxwtcl4WJaMHRQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;892&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span data-shimo-docs=&quot;[[20,&amp;quot;通过以上工作，滴滴Presto逐渐接入公司各大数据平台，并成为了公司首选Ad-Hoc查询引擎及Hive SQL加速引擎，下图可以看到某产品接入后的性能提升：\n&amp;quot;]]&quot;&gt;2016年2月份加入滴滴，目前担任滴滴NLP团队负责人，主要负责滴滴NLP在客服智能化、国际化网约车、内容安全、中台服务等场景的相关算法研究与落地。今年带领团队首次参加机器翻译大赛（WMT2020）并获得机器评估世界第三名的成绩。&lt;/span&gt;&lt;/section&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span data-shimo-docs=&quot;[[20,&amp;quot;通过以上工作，滴滴Presto逐渐接入公司各大数据平台，并成为了公司首选Ad-Hoc查询引擎及Hive SQL加速引擎，下图可以看到某产品接入后的性能提升：\n&amp;quot;]]&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span data-shimo-docs=&quot;[[20,&amp;quot;通过以上工作，滴滴Presto逐渐接入公司各大数据平台，并成为了公司首选Ad-Hoc查询引擎及Hive SQL加速引擎，下图可以看到某产品接入后的性能提升：\n&amp;quot;]]&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;团队招聘&lt;/strong&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;▬&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3/&gt;&lt;p&gt;&lt;span&gt;滴滴智能中台集结了中台产品技术、AI能力和体验平台技术，致力于为集团各业务线提供行业领先的专业服务，当前已沉淀了账号、支付、计价、触达、IOT、体验等核心中台能力；AI技术已深入应用于安全、智能运营、智能客服、智能驾驶等场景；持续通过搭建客服及体验平台等技术手段，提升用户体验问题的解决效率。&lt;/span&gt;&lt;span&gt;智&lt;/span&gt;&lt;span&gt;能中台是一支专&lt;/span&gt;&lt;span&gt;业、多元、高效、务实的团队，坚持用技术赋能出行领域，力争成为业内多&lt;/span&gt;&lt;span&gt;快好省的中台标杆。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3/&gt;&lt;p&gt;&lt;span data-shimo-docs=&quot;[[20,&amp;quot;通过以上工作，滴滴Presto逐渐接入公司各大数据平台，并成为了公司首选Ad-Hoc查询引擎及Hive SQL加速引擎，下图可以看到某产品接入后的性能提升：\n&amp;quot;]]&quot;&gt;滴滴NLP团队基于滴滴的海量出行场景构建模型，支持滴滴内部基础NLP服务，包括情感分析、机器翻译、情绪识别、文本分类、语义搜索等十几个基础NLP能力，目前已经为公司内数十个团队提供基础的NLP服务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span data-shimo-docs=&quot;[[20,&amp;quot;通过以上工作，滴滴Presto逐渐接入公司各大数据平台，并成为了公司首选Ad-Hoc查询引擎及Hive SQL加速引擎，下图可以看到某产品接入后的性能提升：\n&amp;quot;]]&quot;&gt;团队长期招聘高级NLP算法工程师，团队内学习氛围浓厚，可以将前沿技术快速应用到业务场景，为业务赋能。包括但不限于：小样本学习、迁移学习、对抗学习、强化学习在自然语言场景的应用。&lt;/span&gt;&lt;span&gt;欢迎感兴趣的小伙伴加入，&lt;/span&gt;&lt;span&gt;可投递简历至 diditech@didiglobal.com，邮件请邮件主题请命名为「姓名-应聘部门-应聘方向」。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;135&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;135&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBFBFcH3cDkw5qRpibVy97GUiaCUicPhRyTg6LpWp2CFHhKZSYuQnmhyZzBnnRxJ4EuWwvI3HTgqibQ7Mw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;256&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;扫码了解更多岗位&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;延伸阅读&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;▬&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1ODEzNjI2NA==&amp;amp;mid=2247514018&amp;amp;idx=1&amp;amp;sn=c4e53fbaab9aeff812841321d670ad65&amp;amp;chksm=fc29d905cb5e501319423be797a8f4e1df755540271c5a23a83a4e6030bfc999fcb42eec403a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;112&quot; data-backw=&quot;562&quot; data-ratio=&quot;0.2&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEHDqHupIqmQm2r6653CsLxY1vFAuDiboqVBj2nt9H1c4vxvvKhiazGQKYu0toBX1zSWxEgA5hwsFWA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1ODEzNjI2NA==&amp;amp;mid=2247513231&amp;amp;idx=1&amp;amp;sn=c683ef10efee37e78ba3a869e090af1d&amp;amp;chksm=fc29da28cb5e533e9ea63407c8d8326736ac152ee287e867913721143f8df506a1bd245d9c9a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;112&quot; data-backw=&quot;562&quot; data-ratio=&quot;0.2&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBEBaFMicw1wd0CpTdgjmfKR3KZktoaHw6bpZMuA5JUNbE2CAJWX4ZL8Ew8MXMMrLbOibpZwomYV9lwA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1ODEzNjI2NA==&amp;amp;mid=2247512835&amp;amp;idx=1&amp;amp;sn=12e4d4a2c6bb9f8ea66da5f13e7798b7&amp;amp;chksm=fc29dda4cb5e54b250c0e819c85361f8cfa40fd3bb3329e9d0b71f6834655c42c13c4cad87b5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;116&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.2&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBE73snZg9p7ziaA0HFoEweeUibI2dGKpLANKibASTcn4Fn38TSL1uibulwPt9Hvu9eLkiaDorr7x53ia5tg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;内容编辑&lt;/span&gt;&lt;span&gt; | Charlotte&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;联系我们 | DiDiTech@didiglobal.com&lt;/span&gt;&lt;/section&gt;&lt;pre ng-bind-html=&quot;message.MMActualContent&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;162&quot; data-backw=&quot;562&quot; data-ratio=&quot;0.28888888888888886&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1wBZCGiaYqBHCquJeOibVaFwqqC4iadSqFxSJRyP1G2V6ZB0tXzfDbHQmq5LXdiawGrVAfTs5INmjsvxOnH4dU8how/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a8c97a99595fba8cb8b42a73370af9ef</guid>
<title>分布式系统课程笔记（一）：绪论</title>
<link>https://toutiao.io/k/bq2loro</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;是的，我又开新坑了，一直想系统的学学6.824，总是有这样那样的理由就放下了，看到现在开个坑，欢迎大家监督打脸，这个系列会以视频笔记，以及实现Lab为主。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;个人非常喜欢 &lt;span&gt;Robert Morris 教授的讲课风格，深入浅出，而且很注重交流。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;视频大家可以通过科学的方法去油管看，B站上[simviso官方]会把一堂课拆分成几个小视频，对于我这种精力很难长时间集中的人来说简直不要太友好，非常推荐。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;载体所限，这里只能发截图了，公众号回复 【导论】，获取完整PPT。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U71TiaSnH0ibbicyVF9f3J8SsOicib7wYbf5PhsnQ3G8LoicwgZxeYRcmfAQBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7lUMuicpwiaPOgWiaFWgLoGUcPicWbWMqMiafbn3Umm8wHYxhAvyIC4jpvdg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7d7G4dxdTF2dKRVT0Rz4zYg8HxPz9MEmVOtZB6RHVuAsDIagU4WByXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7jGDM5pibGico5AWMOZbPOLVc3qzSjHrwYKdiaZNNPVnXyOkm67HKDQUdg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7CVMzFIsBvsxrf3icEKJD2uTnlXD5296VPDyONAia7k1NtVgKSS2M3U7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7ibsrPNY88ZZib429uBzEaBC6CpHYjht5HmicI75FDjcDzxQicGzdCEdTZg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7GAl2xibwPgOC9g53cMBsbAMOKmERpeeWH03dYibTlB6kTk8UkKN1NYEg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7p97Ofy0REAVdJBlUwVn3HyvrtEZXY4qypyHLCWRYRibNfhdLT3H79Bw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7nCFJibxyNgS1ialZSKxU5CgyLlB6ZqOS3jDkMFDLuxhhIRGpPRFJMBGw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7fWkn9x3XpKJNzPF2STbK43KYjhy2q2Ndd3SnPsicrqujH6CGv127zTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7dt5e8vhMpYFXDC3EIN1p94ewXVkbAsujpYGW8K7BWoT7had5lNkPqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7vXMxvnUyJ7tuNqlYhD4ZWrhleCrYUTSUa6Xa7sVZtmeo4bssgSgJHA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7la5ULm7HQlosiaaNlmCMibvYvTbNjWvbTfqX5TkCX7alXereIS4PkDgw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7cCYq7UVpqSwiaaW63gWicRgpmepGzz10JiaraGEn9vauNDYSLoTJSdp5g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag9ojEhgvRoWVUp4e6k0z4U7s1xdzLmeoIyzkbFnDDs5DOdiak4fK3awVXiaLxcGFEvLrEEojPgMLLibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;部分内容也参考知乎大佬,穆尼奥的文章。 &lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;关注 【&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;麒思妙想&lt;/span&gt;&lt;span&gt;】解锁更多硬核。&lt;/span&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;历史文章导读&lt;/strong&gt;：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果文章对您有那么一点点帮助，我将倍感荣幸&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;欢迎  &lt;span&gt;&lt;strong&gt;关注、在看、点赞、转发 &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/8uJ0ic6nAag8EItgzqIEhe3GbK3ibibrSC3kGNLaCYoEXEEEV8vatdHqibkazrs7oLJERAG1cldW9pbVmcTKvXL3fA/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>