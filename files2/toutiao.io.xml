<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>78f0639fe46925a9de8b082e6077358a</guid>
<title>面试官问我：你做事仔细吗？</title>
<link>https://toutiao.io/k/xhajcrg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUzNjAxODg4MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlic1g1jGjiaBS1uNgC9uX4jDFicf7wBxXh5ic9WicdiaDq0qtNYgXjqOWZtpXqnXVibuZlfn7gzrWPObnEDQ/0?wx_fmt=png&quot; data-nickname=&quot;编程一生&quot; data-alias=&quot;cloudrise1986&quot; data-signature=&quot;致力于写大家都能看懂的、有深度的技术文章&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;引子&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;2015年的时候，我去58面试。因为有前同事的介绍，面试官不用问就对我各方面能力什么的都很了解。本身那个同事级别就比较高(如果我面试通过，大概他大概是我领导的样子)。所以过程中可以看出，我去面试前级别什么的都定好了。面试就是走个过场。&lt;/p&gt;&lt;p&gt;其中一个面试官，级别应该是我那位同事的领导。就问我：“因为咱们是做金融的，需要非常仔细，你做事仔细吗？”当时我只要回答是或者否就行了。但是现在想来，是否仔细不是一道判断题，而是一道思考题。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7870813397129187&quot; data-type=&quot;jpeg&quot; data-w=&quot;418&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2tk5ianItRlibGkdkyCWQXyBjO9zkYDTGoP1MVxDibm4NO3klNTPBnLjrMB3Fp6gQfA0DSFOML5ib07pBZ8PuBNdvQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;对仔细的意识&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;领导这个问题听起来无关痛痒，谁遇到这种送分题不会回答一句：“我很仔细。”呢？而我就是因为这个问题，最后没有去58。因为这不仅是一道题，而是领导向我透露的他们团队的生存指南。不是送分题，是送命题。&lt;/p&gt;&lt;p&gt;没去58的原因之一是那时候我做事还很没有章法，这点从写的文章也可以看出来：结构是乱的。因为这道题，我打怵了。&lt;/p&gt;&lt;p&gt;个人之见：中国互联网技术人员整体而言对质量的意识要落后与传统软件技术人员、落后与国外相同领域的技术人员。这种意识的不足和中国互联网的发展历程有关系。中国互联网过去十几年发展太快。早几年讲究：唯快不破、大力出奇迹、快速试错。多数产品如昙花一现，还没有到达需要做好的阶段就完成了整个生命周期。&lt;/p&gt;&lt;p&gt;从0到1的项目，评价技术的标准是：会做、做得快。十年前这种意识还是可以找到不错工作的，可以进入互联网的下半场，这种意识是非常危险的。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.04&quot; data-type=&quot;jpeg&quot; data-w=&quot;300&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2tk5ianItRlibGkdkyCWQXyBjO9zkYDTGoP06DCA1MicsP2Ae2wMAWQLUtOkGMVkDBXAj7CddFVsvreDL4HiatbHnQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;对于意识对人的影响，举个别的例子：三观正对人的影响。&lt;br/&gt;我妈是有良心的医生。穷人来看病，几块钱能治好的病不会给他们开贵的药。贵的药，其实医生是有提成的。那么多年我妈也抱怨。说她在医院里业务能力强，但是挣钱不多。一个科室的，其他人早都从医院分的房子搬走，换更好的房子了。但是，她也很清楚骨子里的正让她赢到了最后。&lt;/p&gt;&lt;p&gt;她培养出的孩子还都不错，我哥山大毕业，现在当了个小县长。虽然我们兄妹彼此看不上，老死不相往来。但是，每次回老家看我爸，一下火车站就能看到我哥对县里规划的广告。火车站对面就是“互联网小镇”。他还是想为大家做点事情的。&lt;/p&gt;&lt;p&gt;我妈在世的时候经常欣慰的说：论培养孩子，那些早早换了更好房子的同事都不如她。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;440&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2tk5ianItRlibGkdkyCWQXyBjO9zkYDTGosK11WlO9CQrYY3g4tEILnYUZ74lvWzprdwMUcfjvZsa7JSV0eh86Ig/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;意识最难培养，除非遇到什么大事，突然顿悟了。不然，遇到思想不到位的员工，是一件很有挑战的事情。领导对下属要：正其心、立其志、用其长。正心最难，如果是别人意识上的盲区，可能说了很多人家就是不明白、没感触。说多了还可能会引起抱怨。&lt;/p&gt;&lt;p&gt;回归主题说对仔细的意识。从之前&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486115&amp;amp;idx=1&amp;amp;sn=97e04dda5480582a4c6b3a47e0f6a26b&amp;amp;chksm=fafde00dcd8a691b3581cf245e526962d4c6c7e7e57d1d7bc64a66a2a82ea8c4c632e83d060a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《进行一个sql优化需要做哪些准备？-Metadata Lock和online DDL》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《进行一个sql优化需要做哪些准备？-Metadata Lock和online DDL》&lt;/a&gt;和&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247485770&amp;amp;idx=1&amp;amp;sn=4c7513728e0de396f9826897dd48d2d2&amp;amp;chksm=fafde3e4cd8a6af2b0fc08f65d57792658ee945f3f547198c84852c3744c931dae773422a8ca&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《在别人写的代码上做修改我是这样保证正确性》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《在别人写的代码上做修改我是这样保证正确性》&lt;/a&gt;两篇文章的反馈来看，一些朋友还是没有意识到写的事情是必要的步骤。我就打算隔一段时间出篇这样的文章，耳濡目染，把这颗种子种下去。不时的浇水，说不定哪天就发芽了呢。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;对仔细的理解&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;针对仔细不同的人有不同的理解。在很多事情上，我使用“扣数字”法，来保证流程规范性和传达的有效性。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;保证流程规范性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;举个例子：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486115&amp;amp;idx=1&amp;amp;sn=97e04dda5480582a4c6b3a47e0f6a26b&amp;amp;chksm=fafde00dcd8a691b3581cf245e526962d4c6c7e7e57d1d7bc64a66a2a82ea8c4c632e83d060a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《进行一个sql优化需要做哪些准备？-Metadata Lock和online DDL》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《进行一个sql优化需要做哪些准备？-Metadata Lock和online DDL》&lt;/a&gt;里提到，我要进行生产变更，加个索引。生产变更前后都发生了什么呢？&lt;/p&gt;&lt;p&gt;从公司流程上，生产变更要提工单，层层审批和部门架构师把关，相关团队备注。之后开始操作的这一天，我拉了一个群，在群里发了一个消息：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;python&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@所有人 &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;大家好，XX工单将于今天下午&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;点&lt;span class=&quot;code-snippet__number&quot;&gt;35&lt;/span&gt;分&lt;span class=&quot;code-snippet__number&quot;&gt;30&lt;/span&gt;秒执行（只有&lt;span class=&quot;code-snippet__number&quot;&gt;14&lt;/span&gt;分钟，请务必遵守时序），&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;请大家按照下面时序进行&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@A 4点34分  在此群里扣 1(代表这段时间已经完全投入在了工单执行上)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@B 发完工单变更通知扣2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@A 执行完成扣3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@D 检查业务正常，没有问题扣4，有问题报问题&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@B 使用cloud进行查询确认，没有问题扣5，有问题报问题&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@F 使用X进行查询，没有问题扣6，有问题报问题&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;以上严格顺序执行，@G @H 以上执行完后辛苦确认业务情况，有问题及时反馈&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2tk5ianItRlibGkdkyCWQXyBjO9zkYDTGoAxHMplvsYb4bVcDv3s9TF4CC6e5VLrMSQI7C1VicGVP1ibMTCkBCRLTg/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;保证传达有效性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;举个例子，公司让我负责整个部门的一项工作，我从各个团队征集了负责人来完成工作。拉了一个群，先简单再次介绍事情背景拉齐认知，同步相关资料。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;python&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@所有人 &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;请大家于XX月XX日前完成XX工作，&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;有任何技术问题可以咨询 XX和XX 两位技术专家。收到请扣&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;有效时间内没有回复的，轻量级沟通，确保所有人都回复。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2tk5ianItRlibGkdkyCWQXyBjO9zkYDTGoa4IDLKN0dQcShibu3O1lbtrKyTtNUo7k3iakXAPe3b1FC9weWZPrBjjQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;正其心、立其志、用其长。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;往期推荐&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>585b16aa1b5bfd62a786620a6b7623f5</guid>
<title>Java 中的监控与管理原理概述</title>
<link>https://toutiao.io/k/iug5i04</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;/p&gt;&lt;p&gt;这篇文章是 &lt;strong&gt;Java 性能分析监控与优化&lt;/strong&gt;系列的第一篇文章，原本是计划系统的介绍 Java 性能分析方式和流行的监控工具，但是提笔之后意识到，只介绍分析方式和监控工具过于浅尝辄止了。如果只会使用某个工具而不知道背后的实现原理，总觉得有种陌生感，我想你们也是一样，所以多了这篇文章。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.23076923076923078&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4lfok2icUkibSgPKgQJzvBM2etEUSjveiaQicDsO8r5jW6Aia6xVyltcE6WKEWJJWZf2Gz159fW3gSB8yxsh4ic60PTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1326&quot;/&gt;&lt;figcaption&gt;文章目录&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;&lt;span&gt;Java SE 监控管理功能&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;这篇文章介绍 Java Standard Edition（Java SE）平台提供的监控和管理技术 - &lt;strong&gt;JMX&lt;/strong&gt;（Java Management Extensions） 技术。&lt;/p&gt;&lt;p&gt;Java SE 平台本身就提供了用于监控和管理服务的实用性功能模块，按功能来说主要分为下面四类：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Java 监控和管理 API&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Java 虚拟机检测&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Java 管理扩展技术（JMX）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Java 监控和管理的工具&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这篇文章会介绍这四个部分的相关知识，旨在了解 Java SE 监控与管理的相关功能，对其中的相关概念有个理解。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;Java 监控和管理 API&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;Java SE 中包含了用于监控和管理的（&lt;code&gt;java.lang.management&lt;/code&gt;）API，通过这些 API 可以实现应用程序的自我监控，此 API 主要提供了以下信息的访问：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;类加载相关。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;JVM 相关，如运行时间、系统环境变量、用户输入参数。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;线程相关，如线程状态，线程的统计信息、线程的堆栈等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;内存使用情况。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;GC 情况。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;死锁检测。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;操作系统信息。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;下图是 Java 17 中的 &lt;code&gt;java.management&lt;/code&gt; 模块。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4524793388429752&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4lfok2icUkibSgPKgQJzvBM2etEUSjveiaQc6PKDOTepFLVVVB6f2iavYhDvflBQtf4ch9XGSo6Th0Ip02VwCB5zIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1936&quot;/&gt;&lt;figcaption&gt;java.lang.management&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;JConsole 就是通过访问这些管理 API 提供的数据，绘制了监控的界面版。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;Java 虚拟机监测&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;上面说到 Java SE 中已经内置了开箱即用的监控和管理功能，通过这些功能可以实现程序的自我监测，Java 默认已经实现了对 Java 虚拟机相关信息的监测，在 Java 监控和管理 API 部分也列举了 API 可以监测的部分内容，那么怎么使用呢？&lt;/p&gt;&lt;p&gt;下面通过一个简单的示例，演示如何通过监控管理 API 获取系统信息、编译器信息、内存信息以及垃圾收集器信息。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.wdbyte;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.lang.management.CompilationMXBean;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.lang.management.GarbageCollectorMXBean;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.lang.management.ManagementFactory;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.lang.management.MemoryMXBean;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.lang.management.MemoryManagerMXBean;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.lang.management.MemoryUsage;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.lang.management.OperatingSystemMXBean;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.List;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.stream.Collectors;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;JavaManagement&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        OperatingSystemMXBean operatingSystemMXBean = ManagementFactory.getOperatingSystemMXBean();&lt;br/&gt;        String osName = operatingSystemMXBean.getName();&lt;br/&gt;        String osVersion = operatingSystemMXBean.getVersion();&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; processors = operatingSystemMXBean.getAvailableProcessors();&lt;br/&gt;        System.out.println(String.format(&lt;span&gt;&quot;操作系统：%s，版本：%s，处理器：%d 个&quot;&lt;/span&gt;, osName, osVersion, processors));&lt;br/&gt;&lt;br/&gt;        CompilationMXBean compilationMXBean = ManagementFactory.getCompilationMXBean();&lt;br/&gt;        String compilationMXBeanName = compilationMXBean.getName();&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;编译系统：&quot;&lt;/span&gt; + compilationMXBeanName);&lt;br/&gt;&lt;br/&gt;        MemoryMXBean memoryMXBean = ManagementFactory.getMemoryMXBean();&lt;br/&gt;        MemoryUsage heapMemoryUsage = memoryMXBean.getHeapMemoryUsage();&lt;br/&gt;        &lt;span&gt;long&lt;/span&gt; max = heapMemoryUsage.getMax();&lt;br/&gt;        &lt;span&gt;long&lt;/span&gt; used = heapMemoryUsage.getUsed();&lt;br/&gt;        System.out.println(String.format(&lt;span&gt;&quot;使用内存：%dMB/%dMB&quot;&lt;/span&gt;, used / &lt;span&gt;1024&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt;, max / &lt;span&gt;1024&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt;));&lt;br/&gt;&lt;br/&gt;        List&amp;lt;GarbageCollectorMXBean&amp;gt; gcMXBeans = ManagementFactory.getGarbageCollectorMXBeans();&lt;br/&gt;        String gcNames = gcMXBeans.stream()&lt;br/&gt;            .map(MemoryManagerMXBean::getName)&lt;br/&gt;            .collect(Collectors.joining(&lt;span&gt;&quot;,&quot;&lt;/span&gt;));&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;垃圾收集器：&quot;&lt;/span&gt; + gcNames);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行时指定了内存为 100MB（&lt;code&gt;-Xms100M -Xmx100M&lt;/code&gt;），得到如下结果。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;操作系统：Mac OS X，版本：11.6，处理器：12 个&lt;br/&gt;编译系统：HotSpot 64-Bit Tiered Compilers&lt;br/&gt;使用内存：2MB/100MB&lt;br/&gt;垃圾收集：G1 Young Generation,G1 Old Generation&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;:::tip 注意&lt;/p&gt;&lt;p&gt;细看代码可以发现其中很多类都是以 &lt;strong&gt;MXBean&lt;/strong&gt; 结尾，这是什么意思呢？&lt;/p&gt;&lt;p&gt;:::&lt;/p&gt;&lt;h2&gt;&lt;span&gt;Java 管理扩展技术（JMX）&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;在 Java 虚拟机监测中的代码示例中，可以看到很多命名以 &lt;strong&gt;MXBean&lt;/strong&gt; 结尾的类，这里已经涉及到了 &lt;strong&gt;JMX&lt;/strong&gt;（Java Management Extensions） 技术。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;JMX&lt;/strong&gt; 技术提供了一种简单、标准的方式来管理资源，如操作系统、虚拟机信息、内存状态、线程信息等，这些统称为被管理的资源。而且 &lt;strong&gt;JMX&lt;/strong&gt; 是可以动态的，所以可以使用 &lt;strong&gt;JMX&lt;/strong&gt; 技术来监测和管理各种资源。可以使用 JMX 技术来监测 Java 虚拟机状态，也可以使用 &lt;strong&gt;JMX&lt;/strong&gt; 技术构建自己的需要管理的资源。&lt;/p&gt;&lt;p&gt;JMX 技术只有资源定义那么简单吗？不是的。JMX 规范了 Java 中资源定义的方式、资源管理的方式、监控和管理的体系结构、具体实现的设计模式、监控和管理的相关 API 以及&lt;strong&gt;用于网络的远程监控服务&lt;/strong&gt;（RMI），这一系列功能统称为 JMX 技术。是 Java SE 平台的标准部分。&lt;/p&gt;&lt;p&gt;上面多次提到了&lt;strong&gt;管理资源&lt;/strong&gt;，那么如何定义一个资源呢？JMX 技术给出了资源定义的体系结构和设计模式，在 &lt;strong&gt;JMX&lt;/strong&gt; 中，通过定义一个被称为 &lt;strong&gt;MBean&lt;/strong&gt; 或 &lt;strong&gt;MXBean&lt;/strong&gt; 的 Java 对象来表示要管理指定的资源，资源定义的 Java 类名必须以 &lt;strong&gt;MBean&lt;/strong&gt; 或 &lt;strong&gt;MXBean&lt;/strong&gt; 结尾。&lt;/p&gt;&lt;p&gt;下图是 Java 17 中的以 MXBean 结尾的资源定义类，通过命名可以看出每个类代表了什么资源。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6984352773826458&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4lfok2icUkibSgPKgQJzvBM2etEUSjveiaQKdQ0GUC332WiaI1GicmGgicpR3JNNCbVP8eIZSpUohPyyw98622QWH5jg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1406&quot;/&gt;&lt;figcaption&gt;Java 中的 MXbean&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这篇文章主要是介绍 Java SE 中的监控与管理功能，让大家对 Java 中的监控与管理背后的原理和概念有一个具体的认识，所以 MBean 和 MXBean 的具体设计实现方式不是这篇文章的重点，这里不过多介绍，会放到下一篇独立的 JMX 技术文章中介绍。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;Java 监控和管理的工具&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;JMX 技术中提到 JMX 不仅提供了监控和管理的 API ，还提供了用于网络远程管理的服务，可以使用 JMX 相关监控管理工具，通过网络远程连接到正在运行 Java 虚拟机，监控其运行状态，Java 中集成的 &lt;code&gt;jconsole&lt;/code&gt; 就是这样一款工具。&lt;/p&gt;&lt;p&gt;本地随意启动一个可以持续运行的 Java 程序用作被监测对象，如果你已经配置好 Java 环境变量，可以直接通过 &lt;code&gt;jconsole&lt;/code&gt; 启动工具。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt; $&lt;/span&gt;&lt;span&gt; jconsole&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;启动后的 &lt;code&gt;jconsole&lt;/code&gt; 已经列出了本地正在运行的 Java 程序，选择自己想要监测的进行进行监测。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8316993464052288&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4lfok2icUkibSgPKgQJzvBM2etEUSjveiaQoa4NSoa7KMJVUeWqT9ZWV9FKRjPAarcTx83HasmFS8202CiaNicvpPFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1224&quot;/&gt;&lt;figcaption&gt;Jconsole 界面&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;连接成功后可以看到当前 Java 进程的资源占用情况。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8017031630170316&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4lfok2icUkibSgPKgQJzvBM2etEUSjveiaQoXvAGqW5JmqGyan75ofHPL0qrODAlbqcJSLtAkXaJrsHsBl0HIsAuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1644&quot;/&gt;&lt;figcaption&gt;JConsole 监控&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;在 MBean 页面中，可以看到各种已经被定义的资源的具体情况。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8017031630170316&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4lfok2icUkibSgPKgQJzvBM2etEUSjveiaQxJ3FukvO4icMK9icTTB5Wn0kJy2KtucQP4RfpA9IeBxPGql4MrZNMPicw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1644&quot;/&gt;&lt;figcaption&gt;Jconsole MBean 情况&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Jconsole 是一款强大的图形界面 JMX 管理工具，不仅可以连接本地 Java 程序，还可以通过网络监控远程的 Java 程序运行状态，不过不是此篇文章重点，不在详细描述。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;https://docs.oracle.com/en/java/javase/17/jmx/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;https://docs.oracle.com/en/java/javase/17/management/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;&lt;span&gt;---- E&lt;/span&gt;&lt;span&gt;ND ----&lt;/span&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;Hello world : ) &lt;span&gt;这篇文章就到这里了，&lt;/span&gt;我是阿朗，点赞和在看，动力无限，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;求关注&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI1MDIxNjQ1OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/4lfok2icUkibQlzFGPibM1jmICzZmtYzRGMpP7suTs20SQKjwqgFWKKPcmAwzzeDZHE3fuhodU4oZsKQ3IibqYmibhg/0?wx_fmt=png&quot; data-nickname=&quot;程序猿阿朗&quot; data-alias=&quot;wdbyte&quot; data-signature=&quot;Hello world :) 认认真真写个文章。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-fileid=&quot;100000984&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5676567656765676&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/4lfok2icUkibTKFUljxMwu3Z5GaOxz5yzbvuXh3ibOm8Iq6uMiaELDSBzvywdZMpLFl3WF8Pd0ytFzlzKTouM3ayoA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;606&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>79b49359eb2ebc495ce5fb71816bc315</guid>
<title>高性能程序设计，缓存为王</title>
<link>https://toutiao.io/k/a9j7y4a</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                                    


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section data-tools=&quot;新媒体管家&quot; data-label=&quot;powered by xmt.cn&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tools=&quot;新媒体管家&quot; data-label=&quot;powered by xmt.cn&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们在程序设计时，有一个极其重要的非功能性指标：性能，总是无时无刻不缠绕在程序员的脑海，尤其是我们开发的面向大众的Web服务，网络接口等程序。&lt;br/&gt;高性能的程序可以使用更少的服务器资源提供同样规模的用户请求（成本低），也可以更快的响应用户请求（体验好）。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;当然，高性能的程序设计也会更加复杂，开发也有更大难度。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;这次的内容，我们面向高性能程序设计方向，来讲一讲其中最核心最重要的缓存。&lt;br/&gt;希望能够帮助大家更好的理解缓存为王的含义，也能更好的利用缓存，设计出高性能的程序。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span/&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;本文作者：michaeywang，腾讯T10工程师&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;大纲：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1 高性能程序与时间、空间的关系&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2 无处不在的缓存，硬件与软件&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3 系统中的缓存设计&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4 总结，缓存为王&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;0、找找看，人体中的缓存、缓冲区&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.3432835820895523&quot; data-type=&quot;jpeg&quot; data-w=&quot;402&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7eeLAxkVcZlEqTQOoFElicAVMTX9KqbrE2ibic9kqibYVbepC6mxg7ibibXDQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;头&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;大脑的短时记忆和长期记忆，外部持久存储的书籍&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;短期、长期记忆，比临时查阅书籍更快、更灵活&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;计算机有非常强大的存储、检索和运算能力，可以作为大脑非常好的补充&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;颈椎&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;上接头部，下衔接胸椎，承上启下，多节&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;头部与胸部的衔接，保证灵活性&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;颈椎病、腰间盘突出，问题是类似的，长期保持同一个姿势造成无法修复的劳损&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;建议多做以下动作：上九天揽月，下五洋捉鳖，简化后就是“抬头，转体”&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;胸腹&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;大量的冗余空间，孕妇和胖子的潜力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更大的冗余区，更好地支持生育和度过饥荒&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;可惜，时代变了，审美变了，这倒是成了缺点&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;关节&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;软骨、关节腔，避免骨头硬碰硬和磨损&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;提供了足够的灵活性，减少冲击和磨损&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;既要硬，又要灵活，还要做杠杆运动，真是难为了关节&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;脚&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;减震&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;扁平足，失去了减震和缓冲&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;NBA球星麦迪就是扁平足，而且他的技术动作不合理，所以一直受伤病困扰&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;1、高性能程序与时间、空间的关系&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;哪种地铁闸机，占用空间小、过关快、体验好、可靠性好、安全性好？还有更多类型的闸机可以比较的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2913907284768212&quot; data-type=&quot;jpeg&quot; data-w=&quot;1812&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7GFM21bnE5UtqCJZwiaNUECf8OltXuYibX65tpx1ncLOf0PD03AvKPtGg/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;1.1 性能，速度与时间&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;吞吐率：单位时间内处理的请求数&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;吞吐量：对网络、设备、端口、虚电路或其他设施，单位时间内成功地传送数据的数量&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;TPS：每秒钟系统能够处理事务或交易的数量&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;性能=速度=数量/时间，单位时间内处理的数量越多，性能越好&lt;br/&gt;关注程序性能，首先要关注单次请求的执行时间，10ms的等待时长肯定是要比100ms的执行时间要更好。然后就是在压力测试下（并发&amp;amp;集群），我们会关注上面的吞吐率、吞吐量、TPS这些关键指标。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;1.2 系统性能预估&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;CPU密集型，如：数据排序&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;假设：单次请求耗时 Tms，服务器CPU数量 C核，集群的服务器数量S台&lt;br/&gt;QPS=1000/TCS (公式是理想状态，单机、分布式并发中无共享无状态)&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;IO密集型，如：依赖大量网络API/数据库/文件（IO耗时）&lt;/strong&gt;&lt;br/&gt;假设：单次请求耗时 Tms，服务器CPU数量 C核，集群的服务器数量S台，IO耗时1/2Tms&lt;br/&gt;QPS=1000/(T-1/2T)CS(理想状态下，API不是瓶颈)&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;服务线程数量预估&lt;/strong&gt;&lt;br/&gt;CPU密集型，线程数量与CPU数量一致（redis）&lt;br/&gt;IO密集型，要考虑IO的开销，适当放大线程数量，如：1/2时间在IO中，那么线程数量可以是CPU的2倍(Java Web的线程数，PHP-fpm的进程数)&lt;br/&gt;增加CPU数量，涉及到并发编程。&lt;br/&gt;增加服务器数量，涉及到分布式系统设计。&lt;br/&gt;所以，提高系统性能，还需要提高并发编程的能力，提高分布式系统设计的能力。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;1.3 降低单次请求执行时间&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;减少CPU运算量&lt;br/&gt;简化运算逻辑，优化算法（少循环，少编解码等）&lt;br/&gt;简化数据结构，降低时间复杂度，减少内存复制&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;减少IO耗时&lt;/strong&gt;&lt;br/&gt;减少API/数据库/文件的依赖&lt;br/&gt;优化API/数据库/文件的性能&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;利用缓存&lt;/strong&gt;&lt;br/&gt;缓存复杂运算后的结果&lt;br/&gt;缓存IO的返回值&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;最好的优化手段就是砍需求，没有代码就有最好的性能。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;1.4 缓存，空间换时间&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;增加的缓存空间&lt;/strong&gt;&lt;br/&gt;缓存IO返回值&lt;br/&gt;缓存运算结果&lt;br/&gt;缓存IO返回值以及运算结果&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;增加的处理逻辑&lt;/strong&gt;&lt;br/&gt;缓存数据的读取和验证&lt;br/&gt;数据更新到缓存&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;减少的处理时间&lt;/strong&gt;&lt;br/&gt;减少IO耗时&lt;br/&gt;减少大量的CPU运算&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;离CPU越近的数据，处理越快；减少的处理逻辑就是优化的时间。缓存就是这个法宝。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;1.5 缓存，是否多多益善&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;下面三种情况建议尽量使用缓存来做优化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;减少的处理时间显著（性能差异明显）&lt;/strong&gt;&lt;br/&gt;原来的逻辑太复杂，性能很低下，如：超过50ms&lt;br/&gt;原来的IO耗时太长，如：网络延时超过50ms，或者IO处理耗时超过50ms&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;增加空间有限（成本提高）&lt;/strong&gt;&lt;br/&gt;缓存的数据空间尽量小，如果实在很大，可以考虑把数据压缩后缓存，如：博文正文页（计算换空间）&lt;br/&gt;缓存数据的位置，可以在进程内，外部服务进程，甚至文件、数据库中（缓存后速度比缓存前的性能提高明显才有益）&lt;br/&gt;单个实例进程的容量尽量别太大（超过16G，32G），以减小迁移、重启、故障造成的影响（运维的负担也不能忽视）&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;增加的处理有限（开发难度，运算次数）&lt;/strong&gt;&lt;br/&gt;避免缓存频繁失效（命中率太低）&lt;br/&gt;避免缓存频繁更新（数据一致性复杂）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;1.6 总结，高性能程序与时间、空间的关系&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;高性能程序设计，重点关注&lt;/strong&gt;&lt;br/&gt;方法一，减少单个请求的处理时间（程序优化）&lt;br/&gt;方法二，增加CPU，线性提高系统的吞吐率（并发编程）&lt;br/&gt;方法三，增加集群的服务器，线性提高系统的吞吐率（分布式系统设计）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;空间换时间，缓存的优势&lt;/strong&gt;&lt;br/&gt;场景一，缓存前的处理速度太慢，IO耗时太长（超过50ms）&lt;br/&gt;场景二，缓存数据具有极高的命中率（超过90%，理想是100%）&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;避免缓存的陷阱&lt;/strong&gt;&lt;br/&gt;场景一，程序没有高性能需求，程序原本性能已经非常高（不要为缓存而优化）&lt;br/&gt;场景二，缓存容量爆炸性增长（成本太高）&lt;br/&gt;场景三，缓存数据更新太频繁（命中率低，数据一致性差）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2 无处不在的缓存，硬件与软件&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2587412587412588&quot; data-type=&quot;jpeg&quot; data-w=&quot;429&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7AiauC4CrGyypWHlTfglvJ4Y3UKUD3MnlcLkzibvWwxibU6BCxIZjs6etw/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;CPU与内存&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;硬盘&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;网卡&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;操作系统&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;程序设计语言&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Web服务器和数据库&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;CDN内容分发网络&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;DNS域名解析&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Web浏览器&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2.1 CPU与内存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9615384615384616&quot; data-type=&quot;jpeg&quot; data-w=&quot;390&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7L0nzszjms5JvSvFhxrbSTicEF3XGoI4JCjPfTRWYxibaywYx9eUibpmGQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;CPU内的寄存器/L1/L2/L3&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;计算机内存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2.2 硬盘内的缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;243&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia77ddcShqTaD0rYmbynrZXSZ11Uxd4kaKQvJic5CP16Bx4tOFS6NO9R0w/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8791666666666667&quot; data-type=&quot;jpeg&quot; data-w=&quot;240&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia72CukbC910ta29pCcr7wCBI7PYCOAN0aSBzfT5vibl2ibuIruP2icUBAkQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;SATA传来的数据和盘片的实际操作间加一个缓冲&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;HDD的延迟是ms级别，缓存是ns级，相差数万倍&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;缓存容量增加，提高命中率&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;突然掉电导致数据丢失的风险增大&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;固态混合硬盘，内置8G/16G固态硬盘，缓存容量更大&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;固态硬盘，随机读写速度更快&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.zhihu.com/question/27030135&quot; textvalue=&quot;为什么机械硬盘的缓存不是越大越好？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;为什么机械硬盘的缓存不是越大越好？&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;缓存容量增加，带来的成本提高，突然掉电导致数据丢失的风险增大&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2.3 网卡的发送/接收缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;发送缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;网卡有包就发，包太多了就放入缓存队列，缓存满了就丢包并且告诉系统丢包了&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;TCP协议具有流控和拥塞检测功能，防止发包太快造成丢包(UDP不可靠传输)&lt;br/&gt;接收缓存&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;网卡接收数据，放入接收缓存，一次数据接收完成后，网卡驱动程序，向CPU发送信号，提示网卡有新数据到来。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;操作系统从网卡的接收缓冲队列中读取数据，交给应用程序处理。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2.4 操作系统的缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;缓冲文件系统&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;在内存开辟一个“缓冲区”，为程序中的每一个文件使用(读写文件先操作缓冲区)&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;fopen, fclose, fread, fwrite, fgetc, fgets, fputc, fputs, freopen, fseek, ftell, rewind等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;网络相关缓存设置&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;/proc/sys/net/core/wmem_max 最大socket写buffer&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;/proc/sys/net/core/rmem_max 最大socket读buffer&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;/proc/sys/net/ipv4/tcp_wmem TCP写buffer&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;/proc/sys/net/ipv4/tcp_rmem TCP读buffer&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;/proc/sys/net/core/netdev_max_backlog 进入包的最大设备队列&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;/proc/sys/net/core/somaxconn listen()的默认参数,挂起请求的最大数量&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;/proc/sys/net/ipv4/tcp_max_syn_backlog 进入SYN包的最大请求队列&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;操作系统磁盘缓存，可以减少磁盘机械操作。&lt;br/&gt;&lt;strong&gt;更多参考：&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog.csdn.net/tanqiuwei/article/details/20641965&quot; textvalue=&quot;不带缓冲区open和带缓冲区的fopen的区别&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;不带缓冲区open和带缓冲区的fopen的区别&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.cnblogs.com/weifeng1463/p/6825532.html&quot; textvalue=&quot;linux 内核参数优化&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;linux 内核参数优化&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2.5 程序设计语言的缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5714285714285714&quot; data-type=&quot;jpeg&quot; data-w=&quot;350&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia78yxyKc5IB8xsG57GaxmKDFj3z4LNI2iaHNY7y2m3IStibscsDXdf39Jw/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;PHP的缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;opcache，省去了PHP源码到opcode的转换过程，并且保证脚本对应的opcode都保存在内存中&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;apcu，共享内存，缓存PHP程序中的用户数据&lt;br/&gt;Java的缓存&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;JIT，运行时生成机器码，比Java编译器优化后的bytecode性能更好&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;ehcache，缓存数据有两级：内存和磁盘&lt;br/&gt;编程语言的版本升级，我们最关注的除了语言特性的变化，还有就是关于性能的提升。其中有优化数据结构的，也有优化GC的，当然也有引入缓存/JIT这些技术。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2.6 Web服务器和数据库&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;nginx中的缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;减少应用服务器请求&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;proxy_cache，内容缓存在本地文件中&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;mysql中的缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;减少文件系统I/O&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;SqlSession，直接返回结果（四种失效情况：Sql不同，条件不同，增删改操作，清空了缓存）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;sort_buffer_size 排序缓冲区大小，超过的时候就用到磁盘中排序&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;join_buffer_size 每个联合查询分配的缓冲区&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;read_buffer_size 对MyISAM表进行全表扫描时分配的读缓存池的大小&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;read_rnd_buffer_size 索引缓冲区的大小&lt;br/&gt;数据库缓存，减少文件系统I/O。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2.7 CDN内容分发网络的缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5530864197530864&quot; data-type=&quot;jpeg&quot; data-w=&quot;405&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7ts8JsBNjhxOAcbtDzibu5iaFvQr8h1H4hhQcu7mDz2onGvbveC3wZzJw/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;分布式网络&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;全国/全球多地部署很多Web服务器缓存节点&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;DNS动态解析，让客户端请求就近访问到Web服务器缓存节点&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Web内容缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;缓存源服务器的内容，有缓存时就不需要回源&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;可以支持目录规则、文件扩展名等设置缓存策略&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;可以手动刷新指定目录、文件的缓存数据&lt;br/&gt;CDN,加速终端连接和请求速度，减少源站点压力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2.8 DNS域名解析&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6396551724137931&quot; data-type=&quot;jpeg&quot; data-w=&quot;580&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia75K1LgLQgmx1VicOQ4c7GgKJeZCwsL79IxgicLibq9PwSTbUBiaFszoEc1g/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;浏览器的DNS缓存，60s， chrome://net-internals/#dns&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;操作系统的DNS缓存， ipconfig /displaydns&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;本地HOSTS文件&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;C:WindowsSystem32driversetchosts&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;/etc/hosts&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;远程多级DNS服务器&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;路由器，运营商&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;根服务，顶级域名服务&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;二级域名服务，三级域名服务等&lt;br/&gt;DNS服务是典型的分布式分层缓存系统，高效可靠，当然也是非常核心的系统，大面积断网的事件就跟DNS故障有关。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;更多参考：&lt;a target=&quot;_blank&quot; href=&quot;https://www.cnblogs.com/tonykan/p/3500332.html&quot; textvalue=&quot;浏览器的DNS缓存&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;浏览器的DNS缓存&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2.9 Web浏览器&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;客户端浏览器缓存，减少对网站的访问。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6771217712177122&quot; data-type=&quot;jpeg&quot; data-w=&quot;542&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7LxGk2ibo7EINfHjkSJTeLkKkZGiaI4fXJiaA1o9Yiar9rSXeJMYKepIQ0g/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Web内容缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;客户端直接读取缓存，减少对Web服务器的请求&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;强制缓存 cache-control, expires (from memory cache, from disk cache)&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;协商缓存 etag, If-None-Match, last-modified, If-Modified-Since (304 not modify)&lt;br/&gt;&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.18017057569296374&quot; data-type=&quot;jpeg&quot; data-w=&quot;938&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7YTkB2dHGF1szebuHqvgvYQOF5H8ibGGkpFsynZ2SOPpyVDBSicoy19RQ/640?wx_fmt=jpeg&quot;/&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Cookie/LocalStorage/SessionStorage&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.321875&quot; data-type=&quot;jpeg&quot; data-w=&quot;960&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia75CESXUCiaus79EyZZXxUib1A9pN4ZvSWz8C40qiaicibiciack86g7WMWibULg/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;更多参考：&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;2.10 总结，无处不在的缓存，硬件和软件&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6902485659655831&quot; data-type=&quot;jpeg&quot; data-w=&quot;1046&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7hn1E6UESftPmiak0PuPH6pSsUheFL8jHBDpQWTib4Tzic0BMmRoQ00fUA/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;缓冲区buffer&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;避免频繁读写&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一次性分配稍大的空间&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一次性读写多一点内容&lt;br/&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;缓冲队列&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;多级缓存，分布式缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;本地更快，减少远程数据依赖&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;缓存数据使用更快，减少数据读取和运算&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;问：在浏览器中输入一个&lt;/span&gt;&lt;span&gt;网址&lt;span&gt; &lt;/span&gt;&lt;a href=&quot;http://www.qq.com/&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;http://www.qq.com/&lt;/a&gt;，接下来会&lt;/span&gt;&lt;span&gt;发生什么？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3 系统中的缓存设计&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;先来看看2个典型的常见的软件系统。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.1 社区bbs的缓存设计&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6038961038961039&quot; data-type=&quot;jpeg&quot; data-w=&quot;462&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia740D38qkM6LQv0zcygYTNwt44ReAHdenqVUP06j6U0CcXj2DR6d1NKQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;数据模型&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;页面&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;操作&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;缓存数据&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;全量永久缓存：用户(uid -&amp;gt; map)，板块(all -&amp;gt; json)，置顶帖(all -&amp;gt; json)&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;部分临时缓存：帖子列表页数据(多种排序, fid-displayorder -&amp;gt; tids), 主题浏览量(tid -&amp;gt; views)，帖子数据(tid -&amp;gt; map)，用户帖子列表页数据(uid -&amp;gt; json)&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;页面缓存：首页，帖子详情页&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.2 电商系统的缓存设计&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6921296296296297&quot; data-type=&quot;jpeg&quot; data-w=&quot;432&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7pWm8VhQXHhicnQjEWbzjicIJlYYleQzJRWN0XooP8sgRj5mE57jialFibw/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;数据模型&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;用户，分类，商品SPU,SKU，订单，支付&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;评价，收藏，购物车，联系地址&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;页面&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;首页，分类商品推荐页，搜索商品列表页&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;商品详情页，用户订单列表页&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;操作&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;缓存数据&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;全量永久缓存：用户，分类，商品，商品SKU库存，推荐&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;部分临时缓存：大量的临时推荐位，人工干预内容，相关商品，置顶评论等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;页面缓存：首页，搜索页，商品详情页&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.3 缓存设计，最佳场景，永久缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.23586744639376217&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;513&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7DibDP1Lk5UG4lu2e6riaVCgaEKCwXj4W4SdOibf0iaghgxiayRaUypXnpJQ/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.21456692913385828&quot; data-type=&quot;jpeg&quot; data-w=&quot;508&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7f4uuDowuEK4bFjtQqAfJ6YO6sqC8ZPgqnMIS6M0gqwicwAp6VOPTniaQ/640?wx_fmt=jpeg&quot;/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;数据只读，极少更新&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;配置类，全局共享数据（置顶帖）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;后台定时任务生成的数据（推荐内容）&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;数据占用空间有限&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;单个key的内容比较小（用户信息）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;总数量比较有限（商品信息）&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;数据结构简单，容易快速查找&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;key-string 直接得到完整数据&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;key-hash 易于部分数据读取和更新&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;key-list 双向队列&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;key-sortedset 有序集合，索引排序&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.44840525328330205&quot; data-type=&quot;jpeg&quot; data-w=&quot;533&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7xH0R4dB5LaXrAmUgVre3CXVLBNOyTJ7KqicLmUq54uyO4eoUWFRtNMg/640?wx_fmt=jpeg&quot;/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.4 缓存设计，较好场景，临时缓存&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.44150110375275936&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;453&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia70jw2TtIOBoFd9evLbOcmviaibUT1EVkAgsesWztAyFGX01sAYJGOMXVQ/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;数据读多写少，读取速度慢&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;用户、内容数据，如：用户信息，帖子信息等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;缓存快过数据库&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;数据占用空间较大&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;保证较高的命中率，90%以上&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;缓存容量较大，过期/失效的缓存减少，命中率提高&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更新的频率降低，命中率提高&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更新的时候主动更新缓存，命中率提高&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;合适的缓存淘汰策略，FIFO/LRU/LFU/TTL/RANDOM&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.5 缓存设计，特殊场景，性能优先&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7737226277372263&quot; data-type=&quot;jpeg&quot; data-w=&quot;411&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia71NRre8ia7161Tlc3y0Ht0IGyISnj5JsPaBQLI55xInGLkfZITRkZL8Q/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;读写过于频繁的时候&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;帖子浏览量更新，更新到缓存，定时更新到数据库，读取数据库+缓存&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;秒杀时，商品库存扣减，隔离数据库的压力&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;排序方式太多，索引效率下降的时候&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;数据表分拆太细，连表查询效率低的时候&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.6 缓存设计，不适合场景，成本超过收益&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;内容更新太频繁，命中率太低&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;用户的呼吸状态如果也缓冲起来，那么这时候的用户信息缓存命中率就太低了&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;完全散列随机的key值遍历查找，缓存无法重复利用&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;数据写入超过读取次数&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;系统自身性能很好&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;系统访问量很有限&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.7 总结，系统中的缓存设计&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;提高缓存命中率&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;缓存永不过期，缓存空间充足，数据直接写入和更新缓存&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;扩大缓存容量，减少缓存过期或者失效的概率（内存+SSD文件）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;规划缓存容量&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;优先把永久缓存的内容放进去&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;再把读多写少的内容放进去&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;再有富余容量，把实时性要求不高的内容放进去&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;大容量使用简单，风险高；多实例连接多，操作复杂，可用性好&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;缓存性能优势&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;内存缓存 &amp;gt; 数据库 &amp;gt; 硬盘文件&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;进程内数据 &amp;gt; 本地缓存 &amp;gt; 远程数据&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;缓存数据读取后运算后的复杂结果&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;4 总结，缓存为王&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;高性能程序设计与缓存的效果（连蒙带猜）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5054466230936819&quot; data-type=&quot;jpeg&quot; data-w=&quot;1836&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia73rhUdTreiaJYsC7tsg2vQbibPUPFfpZ9HuLqHBib6nfZvIzdDE3ibcicPyg/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果没有缓存的情况下，100亿的客户端请求，最后落到数据服务器上会有上万亿的IO操作。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;老司机箴言：&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;设计时，分层分级。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;执行时，少查少写少依赖，Less is more。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;别让硬盘抗性能，别让内存保持久，别让网线抗稳定。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;高性能&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;程序设计的漫漫求索之路&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;数据结构和算法（应用优化）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;数组、链表、集合、哈希表、二叉树等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;排序算法：冒泡、快速、归并等&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;并发编程的问题（增加CPU）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;共享变量的读写，线程安全性问题&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;数据存储、依赖服务等瓶颈点&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;分布式系统设计（增加服务器）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;有状态服务高可用和数据一致性问题&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;全局、中心节点的可靠性问题&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;缓存优化（空间换时间）&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;精细化分析和设计，提高命中率和可用性&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;监控工具、运维工具等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;总结，缓存为王&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;高性能程序设计，使用缓存来优化可能会是第一选择。只是，方法虽然简单，过程还是曲折的。每一次缓存设计，都还是要针对具体场景和需求，制定最合适的方案，要考虑的地方也还是有很多。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;速度、成本的平衡（开发速度、执行效率，人力成本、服务器成本）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;空间、时间的平衡&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;复杂、简单的平衡&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;设计方案，没有最优，只有最合适&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;高性能程序系统，一个动态演进的过程&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7492163009404389&quot; data-type=&quot;jpeg&quot; data-w=&quot;319&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EnqxHa2Fnx0D9iaHERnBNbEkn9iccZhdia7icsug2ypfrBCuibqptL2xH6v4jSkNgYdedaNmiakyEuIqzqmIOwwaa9Cg/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果喜欢这篇文章，欢迎评论区提问&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;# 有料程序员 # 直播&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;对谈鹅厂T10女工程师：&lt;/span&gt;&lt;span&gt;从0到1转程序员&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;2.3342592592592593&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jiboYA4jZECwRT4jVjja9MHicWO5XhD57zBYZgbS71SuTly3GRicd8UgxwfykGNg3KSbP0mib6GsmhR5hQvBuOiaafA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;点击预约，get开播提醒&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;channels_iframe_wrp&quot;&gt;&lt;mpvideosnap class=&quot;js_uneditable custom_select_card channels_live_iframe&quot; data-pluginname=&quot;videosnap&quot; data-headimgurl=&quot;https://wx.qlogo.cn/finderhead/I7awtksbibjQe7RZAy84xESOBAfIZ8xQ9ApXt4uTe8po/0&quot; data-username=&quot;v2_060000231003b20faec8c6e08e1ac1d4cf06ea31b07760a16cba92d83444bd9a5d9d55ffaede@finder&quot; data-nickname=&quot;腾讯程序员&quot; data-desc=&quot;将在12月01日 19:30 直播&quot; data-intro=&quot;对谈鹅厂T10女工程师：从0到1转程序员，兼顾技术和爱好，一直做自己喜欢的事&quot; data-noticeid=&quot;finderlivenotice-v2_060000231003b20faec8c6e08e1ac1d4cf06ea31b07760a16cba92d83444bd9a5d9d55ffaede@finder-1638242262850720-131098678&quot; data-type=&quot;live&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;往期回顾：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MTEwNTM0ODI0MQ==&amp;amp;mid=2653470195&amp;amp;idx=1&amp;amp;sn=e7fb2e237cefc95c456099799678d46c&amp;amp;chksm=7201ac0d4576251b0dc3cebebd3280021e34926cec30be5223d494ae8010a376323fb4e67d38&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;什么是产品经理？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;em&gt;&lt;span&gt;什么是产品经理？&lt;/span&gt;&lt;/em&gt;&lt;/a&gt;&lt;em&gt;&lt;span/&gt;&lt;/em&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MTEwNTM0ODI0MQ==&amp;amp;mid=2653470177&amp;amp;idx=1&amp;amp;sn=7038783ddf8e97907fd2767a1da525e1&amp;amp;chksm=7201ac1f45762509877974632d2d6227e20530ec8a9d80b523b5e24fe373855de35f637b0edc&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一个产品经理的自我修养&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;em&gt;&lt;span&gt;一个产品经理的自我修养&lt;/span&gt;&lt;/em&gt;&lt;/a&gt;&lt;em&gt;&lt;span/&gt;&lt;/em&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MTEwNTM0ODI0MQ==&amp;amp;mid=2653470150&amp;amp;idx=1&amp;amp;sn=1663976038f1174a724a8c8d9ed4df59&amp;amp;chksm=7201ac384576252e13608483410d16e222e77657fb3243acaa09a4d22747c10534c9d78ff120&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;1、程序员桌面装备大比拼&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;em&gt;&lt;span&gt;程序员桌面装备大比拼&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/a&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MTEwNTM0ODI0MQ==&amp;amp;mid=2653470135&amp;amp;idx=1&amp;amp;sn=9f36c87c4b9bf6f7ad4f686b2b70ea93&amp;amp;chksm=7201ac494576255fd79e7f080eea24d7d47ea46cb4eee9d5bc92eaad1770974c7dac16531e84&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;基于低代码平台，如何设计平台级组件开发方案？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;em&gt;&lt;span&gt;基于低代码平台，如何设计平台级组件开发方案？&lt;/span&gt;&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;点个关注，我们下期再见👋&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MTEwNTM0ODI0MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/jiboYA4jZECzSZia6ibNVnMpbXNQzgBnPgv4fdL8zXpWaX0DaUs1Dvus2QZ21MLohiaaxnFjKSoT8KN4icmh0xSibJBw/0?wx_fmt=png&quot; data-nickname=&quot;腾讯大讲堂&quot; data-alias=&quot;TX_DJT&quot; data-signature=&quot;打造互联网人的高光时刻，带你深入前沿，共同学习成长。&quot; data-from=&quot;1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6f31b3cb1d3be790fa8c10bfe7249b78</guid>
<title>透过一个编译报错，总结两个 Go 程序编译的重要知识</title>
<link>https://toutiao.io/k/iiw9cac</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;20&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;原文忘记标注原创，补发一篇，各位海涵~！&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;最近调研了一下某个做 APM 的厂商的 Go 探针程序，说是引入一个包，全程不用再修改其他代码就能在项目里引入探针。&lt;/span&gt;&lt;span&gt;没想到在刚引入包试着构建了一下就翻车了。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;main.go:10:2: build constraints exclude all Go files in /xxx/github.com/xxx/agnet/xxxx&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编译器编译的时候直接排除了某个包下的所有文件，啥意思呢？就是这个包下没有能在当前构建环境下构建的 Go 文件。猜测应该是这个包源码的构建标签上声明了不允许在Mac 环境下构建。打开源码看了看，确实是，所有文件的构建标签都是这么声明的。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// +build linux&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// +build amd64&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个叫做条件编译，或者约束编译。那想在Mac下编译linux上才能运行的执行文件该怎么办呢？Go 里边还支持一个特性叫做交叉编译，就是干跨平台编译这个事儿的。具体怎么用呢，比如这个例子里是需要在Mac环境下编译能在Linux系统amd64架构下运行的执行文件，就得酱婶进行编译：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;CGO_ENABLED=0  GOOS=linux  GOARCH=amd64  go build main.go&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过我后来想研究下为啥不让在 Mac 上编译，看了看这个包的探针是用CGO实现的调用了linux系统下的一个C语言实现的工具命令。看到这我已经不想继续研究这个包了，那么为了让此篇文章水的不那么明显：)，接下来咱们就把Go语言的交叉编译和条件编译这两个知识点再复习一遍吧。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;交叉编译&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;交叉编译是用来在一个平台上生成另一个平台的可执行程序&lt;/strong&gt;。Go 的命令集是原生支持交叉编译的，使用方法也很简单，比如上面已经演示过的&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;CGO_ENABLED=&lt;span&gt;0&lt;/span&gt;  GOOS=linux  GOARCH=amd64  &lt;span&gt;go&lt;/span&gt; build main.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;参数说明&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;CGO_ENABLED&lt;/strong&gt; : CGO 表示golang中的工具，CGO_ENABLED 表示CGO禁用，交叉编译中不能使用CGO的&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;GOOS&lt;/strong&gt;: 目标平台&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;mac 对应  &lt;strong&gt;darwin&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;linux 对应 &lt;strong&gt;linux&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;windows 对应 &lt;strong&gt;windows&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;GOARCH&lt;/strong&gt; ：目标平台的体系架构【386，amd64,arm】, 目前市面上的个人电脑一般都是amd64架构的&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;386 也称 x86 对应  32位操作系统&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;amd64 也称 x64 对应 64位操作系统&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;arm 这种架构一般用于嵌入式开发。比如 Android ， IOS ， Win mobile , TIZEN 等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解完这几个参数后，我们在看下Mac、Linux、Windows这三个平台上执行交叉编译的例子，Windows的因为家境贫寒，条件不允许我没有试过，命令网上找的，如果有错误还请同学们在评论里留言帮我改正一下。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Mac  下编译， Linux  或者 Windows 的可执行程序&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; linux可执行程序&lt;/span&gt;&lt;br/&gt;CGO_ENABLED=0  GOOS=linux  GOARCH=amd64  go build main.go&lt;br/&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; Windows 可执行程序&lt;/span&gt;&lt;br/&gt;CGO_ENABLED=0 GOOS=windows  GOARCH=amd64  go  build  main.go&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Linux 下编译 ， Mac 或者 Windows 下去执行&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# Mac 平台可执行程序&lt;/span&gt;&lt;br/&gt;CGO_ENABLED=0 GOOS=darwin  GOARCH=amd64  go build main.go&lt;br/&gt;&lt;span&gt;# Windows可执行程序&lt;/span&gt;&lt;br/&gt;CGO_ENABLED=0 GOOS=windows  GOARCH=amd64  go build main.go&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Windows 下执行 ， Mac 或  Linux 下去执行&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要写一个批处理程序，在里面去设置，因为windows 下的 terminal 不支持shell , 这跟 Mac 和 Linux下的有点不同&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; Mac 下执行&lt;/span&gt;&lt;br/&gt;SET  CGO_ENABLED=0&lt;br/&gt;SET GOOS=darwin&lt;br/&gt;SET GOARCH=amd64&lt;br/&gt;go build main.go&lt;br/&gt;&lt;span&gt;&lt;br/&gt;#&lt;/span&gt;&lt;span&gt; Linux 去执行&lt;/span&gt;&lt;br/&gt;SET CGO_ENABLED=0&lt;br/&gt;SET GOOS=linux&lt;br/&gt;SET GOARCH=amd64&lt;br/&gt;go build main.go&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;条件编译&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;交叉编译只是为了能在一个平台上编译出其他平台可运行的程序，Go 作为一个跨平台的语言，它提供的类库势必也是跨平台的，比如说程序的系统调用相关的功能，能根据所处环境选择对应的源码进行编译。让编译器只对满足条件的代码进行编译，将不满足条件的代码舍弃，这就是另外一个概念叫---条件编译。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Go 中，也称之为Build Constraints 编译约束，添加编译约束的方式有2种分别：&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;编译标签&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编译标签是一种通过在源码文件顶部添加注释，来决定文件是否参与编译的约束方式。其格式如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// +build &amp;lt;tags&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;code&gt;// +build&lt;/code&gt;的下一行必须是空行，否则会被解析为包注释。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// +build linux&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// main package comment&lt;/span&gt;&lt;br/&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;tags说明：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;以空格分开表示 AND&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;以逗号分开表示 OR&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;!表示 NOT&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;标签可以指定为以下内容：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;操作系统，环境变量中&lt;code&gt;GOOS&lt;/code&gt;的值，如：&lt;code&gt;linux&lt;/code&gt;、&lt;code&gt;darwin&lt;/code&gt;、&lt;code&gt;windows&lt;/code&gt;等等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;操作系统的架构，环境变量中&lt;code&gt;GOARCH&lt;/code&gt;的值，如：&lt;code&gt;arch64&lt;/code&gt;、&lt;code&gt;x86&lt;/code&gt;、&lt;code&gt;i386&lt;/code&gt;等等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用的编译器，&lt;code&gt;gc&lt;/code&gt;或者&lt;code&gt;gccgo&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;是否开启CGO，&lt;code&gt;cgo&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;golang版本号：比如Go Version 1.1为&lt;code&gt;go1.1&lt;/code&gt;,Go Version 1.12版本为&lt;code&gt;go1.12&lt;/code&gt;，以此类推。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其它自定义标签，通过&lt;code&gt;go build -tags&lt;/code&gt;指定的值。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如，编译条件为&lt;code&gt;(linux AND 386) OR (darwin AND (NOT cgo))&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// +build linux,386 darwin,!cgo&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外一个文件可以有多个编译约束，比如条件为&lt;code&gt;(linux OR darwin) AND amd64&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// +build linux darwin&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// +build amd64&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也可以使用&lt;code&gt;ignore&lt;/code&gt;标签将一个文件从编译中排除。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// +build ignore&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;文件后缀&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了编译标签，第二种添加编译约束的方法是通过源码文件的文件名实现的，这种方案比构造标签方案更简单。编译器也会根据文件后缀来自动选择编译文件：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;$filename_&lt;/span&gt;&lt;span&gt;$GOOS&lt;/span&gt;.go&lt;br/&gt;&lt;span&gt;$filename_&lt;/span&gt;&lt;span&gt;$GOARCH&lt;/span&gt;.go&lt;br/&gt;&lt;span&gt;$filename_&lt;/span&gt;&lt;span&gt;$GOOS_&lt;/span&gt;&lt;span&gt;$GOARCH&lt;/span&gt;.go&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;$filename&lt;/code&gt;: 源文件名称。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;$GOOS&lt;/code&gt;: 表示操作系统，从环境变量中获取。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;$GOARCH&lt;/code&gt;: 表示系统架构，从环境变量中获取。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后缀的顺序记住不要颠倒，后缀中同时出现系统和架构名时，需要保持&lt;code&gt;$filename_$GOOS_$GOARCH.go&lt;/code&gt;的顺序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Go 的每个内置库里都有很多以不同系统名结尾的文件。下面是&lt;code&gt;Go&lt;/code&gt;的&lt;strong&gt;os&lt;/strong&gt;内置库源代码的部分截图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.37962962962962965&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z4pQ0O5h0f58gZFA4VOb3ZpJqiacCTQ88TOb3MVpYa00jpU6AW1ITrH8ywib3ynIKich1Mo5Xw6XgyJkrZEvB0o6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;文件后缀添加编译约束&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;两种添加编译限制的方式该如何选择&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;构建标签和文件名后缀在功能上是重叠的。比如，一个名为&lt;code&gt;mypkg_linux.go&lt;/code&gt;的文件，再包含构建标签&lt;code&gt;// +build linux&lt;/code&gt;会显得多余。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常来说，当只有一个特定平台需要指定时，我们选择文件名后缀的方式。比如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mypkg_linux.&lt;span&gt;go&lt;/span&gt;         &lt;span&gt;// 只在 linux 系统编译&lt;/span&gt;&lt;br/&gt;mypkg_windows_amd64.&lt;span&gt;go&lt;/span&gt; &lt;span&gt;// 只在 windows amd 64位 平台编译&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相反，如果你的文件需要指定给多个平台或体系架构使用，或者你需要排除某个特定平台时，我们选择构建标签的方式。比如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 在所有类unix平台编译&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// +build darwin dragonfly freebsd linux netbsd openbsd&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 在非Windows平台编译&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// +build !windows&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个编译器报错，居然水了一篇文章....啊...（咳嗽声）引出来的交叉编译和条件编译（编译约束）这两个非常重要的知识点，其实这两个知识点在很早之前我也写过篇文章，这次相当于从实际遇到问题带出从头开始再分析一遍，希望大家能喜欢。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;参考链接&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;http://www.oskip.com/post/golang/golang-build/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;https://juejin.cn/post/6844903944808824845&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;https://mp.weixin.qq.com/s/Ys8o4arwIFYB6DPCdiGNNQ&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUzNTY5MzU2MA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/z4pQ0O5h0f4pGhLz2xEbRFHnAQon2QLYgbBibCJo1ibJHesLWshPJeRibateRtAqkaf6BgjlbhYiaxHLq6Zu07CRPw/0?wx_fmt=png&quot; data-nickname=&quot;网管叨bi叨&quot; data-alias=&quot;kevin_tech&quot; data-signature=&quot;分享软件开发和系统架构设计基础、Go 语言和Kubernetes。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;span&gt;- END -&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;扫码关注公众号「网管叨bi叨」&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0188679245283019&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z4pQ0O5h0f4icJbGAQ8RjXUUVdUZsGADuMBVWePgn7tfrWjjHyc6b8kXTQ7Sdkp0QQFFK4mel5tniczqooMna1CA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;318&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;给网管个星标，第一时间吸我的知识 👆&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;网管为大家整理了一本超实用的《Go 开发参考书》收集了70多条开发实践。去公众号回复【gocookbook】即刻领取！&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;觉得有用就点个在看&lt;/span&gt;&lt;span&gt;  👇👇👇&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e7ffd3fee112a0af368ed01461b890d1</guid>
<title>编码硬实力之外，程序员的软技能</title>
<link>https://toutiao.io/k/msvslce</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single js_wx_tap_highlight wx_tap_card&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left&quot; aria-describedby=&quot;js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA3MDg5MDkzOA==&amp;amp;action=getalbum&amp;amp;album_id=1536569434063077381#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;1536569434063077381&quot; data-tag_source=&quot;4&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#认知升级迭代&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;29个&lt;span class=&quot;weui-hidden_abs&quot;&gt;内容&lt;/span&gt;&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section class=&quot;mp_profile_iframe_wrp&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA3MDg5MDkzOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQmUQ0Aca9qSYNFn0tQEXQc5EibBkqQLYtibYBj1hXuagwXkNc3kVwplHxIl7KQfBIiagysgn9GDUUibw/0?wx_fmt=png&quot; data-nickname=&quot;架构精进之路&quot; data-alias=&quot;jiagou_jingjin&quot; data-signature=&quot;十年研发风雨路，大厂架构师，CSDN博客专家，InfoQ写作平台签约作者。专注软件架构研究，技术学习与职业成长，坚持分享接地气儿的架构技术干货文章！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4255555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z2bVaFK6CgSSeZk3o6YJMR9gXJvpYMns4SCVYACqMAzFBXrP6GthNXbDmWxYrTJnjo0GS9qpNu6X5vibFoWhWjA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;28&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;打拼，有时候拼的不仅仅是硬实力，还有很多其他因素...&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;h3 data-pm-slice=&quot;1 1 []&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-pm-slice=&quot;1 1 []&quot;&gt;&lt;span&gt;hello，大家好，我是张张，「架构精进之路」公号作者。&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;1&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;2&quot;&gt;程序员群体不应该是一直低头敲代码，更应该掌握一些软技能，改变一贯的沉闷木讷的形象，让自己在竞争中胜出，从而职业发展更顺利。&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;1&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;2&quot;&gt;在此总结整理了几个常用软技能点供大家参考~&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id-heading0=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;3&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;4&quot;&gt;1、及时复盘的习惯&lt;/span&gt;&lt;/h2&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;5&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;6&quot;&gt;所谓复盘？就是对已做过的项目、事情进行一次回顾和总结，从中发现问题，这如同刻意练习里说的那样，只有对反馈进行总结并且调整优化，我们才有可能进步，否则练习了几十年，很可能只是把一天的经验机械地重复了几十年而已。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id-heading1=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;7&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;8&quot;&gt;2、及时行动的力量&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-id-heading2=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;9&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;10&quot;&gt;2.1 唯有行动才能解决焦虑&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;11&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;12&quot;&gt;很多事情在我们没有开始做之前，总是会有很多错误的判断，会有很多疑惑、焦虑，不知道自己能否做好。其实我们在明白了一定的原理之后就可以开始去做了，因为往往只有我们行动了之后才能有更深的体会，行动了大部分焦虑就自然解决了，在行动中学习，学习中行动，即互联网思维中的：&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;13&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;13:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;小步试错，快速迭代。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading3=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;14&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;15&quot;&gt;2.2 实践最重要&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;16&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;17&quot;&gt;很多人经常说：为什么我看了这么多书，懂得了这么多道理，可为何还是过不好这一生？&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;18&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;19&quot;&gt;那你按书中的理论实践了吗？你有刻意地按照书里的道理控制自己的行为吗？这就好比一个人懂得了很多游泳的理论却从未下过一次水，却抱怨说：我为什么不能成为一个游泳高手呢？&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;20&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;21&quot;&gt;懂得道理都有用而不去行动，等于在死循环里无谓挣扎。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading3=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;14&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;15&quot;&gt;2.3 注意精力/注意力的管理&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;24&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;25&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;25:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;对我们来说最重要的财富通常说是时间，更准确些应该是我们的注意力。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;26&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;27&quot;&gt;珍惜自己的注意力和精力，把它用在最有价值的地方，去学习，工作，成长。而不是玩短视频、游戏这些时间黑洞应用里。少做高刺激低收益的事，多做高收益的事情（比如看书、学一门乐器、健身）。因为长时间做高刺激的事情后会提高了自己的阈值，可能再也不能沉下心来思考了。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id-heading4=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;28&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;29&quot;&gt;3、培养自我思考能力&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-id-heading5=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;30&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;31&quot;&gt;3.1 学会独立思考&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;32&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;33&quot;&gt;目前几乎没有课程教我们如何独立思考、培养批判性思维。那些专家说的话就一定是对的吗？有网络谣言如此荒谬，为何还有一堆人上当受骗？&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;34&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;34:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;独立思考的能力注定是一个人能有所成就的必备的能力&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;35&quot;&gt;，一个人如果不会独立思考，很大程度上被谣言所蒙骗，被传销所迷惑。甚至可能仅仅因为某些砖家推荐了几个“涨停板”，就全仓杀入股市，到头来连“底裤”都输光。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading6=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;36&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;37&quot;&gt;3.2 决策时注意机会成本和沉没成本&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;38&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;39&quot;&gt;机会成本：举个例子上班的时候很多人为了省钱，选择租离公司很远的房子，通勤就要2个小时但是租金却比较低，以为自己赚到了。但是你还忽略了时间这个成本，租金、时间哪个更重要呢？&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;40&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;41&quot;&gt;沉没成本：车站等公交车等了半小时还没来，那你是换另一种交通工具还是继续等下去呢？&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading7=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;42&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;43&quot;&gt;3.3 从过程导向转变为结果导向&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;44&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;45&quot;&gt;什么是结果导向？结果导向指的是做一件事情，以结果为最终目标，以如何完成目标为导向的思考方式，与之相对的就是过程导向：只关心做事情的过程，不在乎结果。结果导向只关心事情的结果，不在乎你用什么技巧、方法完成的。&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;46&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;47&quot;&gt;只有当你以结果为导向，对结果负责，而不是沉浸在“我已经很努力了的过程里面”你才不会遇到困难找借口，总想着逃避。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id-heading8=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;48&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;49&quot;&gt;4、自觉的自我持续优化&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-id-heading9=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;50&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;51&quot;&gt;4.1 年轻时候，尽量把数钱砸在提升自己上面&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;52&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;53&quot;&gt;如果去投资一年20%的净收益率算高了吧？50W的本金能挣10W，可是刚毕业的大学生有几个人有50W以上呢？只有2W块钱的时候与其把精力全花在炒股上，不如先拿来提升自己，等你有了10W以上再想着投资也不迟。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading10=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;54&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;55&quot;&gt;4.2 拒绝拿来主义&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;56&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;57&quot;&gt;工作中，不做伸手党，遇到问题自己先想办法，要锻炼自己思考的能力。问别人只是为了优化自己的答案。领导交代的工作，做之前先问清楚和领导确认一遍，这样做事有清晰的目标，过程中有反馈。这样才能做得更好。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading11=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;58&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;59&quot;&gt;4.3 正确对待金钱，学会理财&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;60&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;61&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;61:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;钱重要吗？的确很重要，可它不是世界上最重要的东西。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;62&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;63&quot;&gt;金钱并不是越富有就越幸福，人们会适应财富的增加，收入水平存在一个临界点，过了这个点，幸福感的增强速度远慢于收入的增长速度。所以我们应该在“视金钱如粪土”和”金钱至上”之间保持一个微妙的平衡，这个平衡点对不同的人，具体的位置也不同。&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;64&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;65&quot;&gt;很多人说：我工资才5k，用不了几下就月光了，怎么理财啊，等我有钱再说吧！现实情况是“你不理财，财不理你” 这里的理财思维指的是一种金钱的分配方式，以及一些节流的思维。和财富的绝对值没有那么相关。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id-heading12=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;66&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;67&quot;&gt;5、学会读人&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-id-heading13=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;68&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;69&quot;&gt;5.1 不要看对方说什么，而要思考他的真实需求是什么&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;70&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;71&quot;&gt;比如说你爸妈突然给你打了个电话，给你说你们那里的天气怎么样怎么样,叫你注意保暖等等。表面上看是她想和你聊天气，但其实是你好久没回家，他们想你了，这时候你不应该回答：我知道了，我会注意保暖的。而应该说我XX时候就回来了。因为时代、观念的原因，他们只好这样表达他们的想法。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading14=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;72&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;73&quot;&gt;5.2 不要成为一个没有原则的好人&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;74&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;75&quot;&gt;升米恩，斗米仇，不要成为一个没有原则的好人，否则你帮助过的人不会感谢你，你没帮助到的人会怨恨你。你天天给乞丐10块钱，有一天不给了他会质问你为啥不给钱；假如有人天天打乞丐一顿，某天忘记打他，乞丐反而会感激。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading15=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;76&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;77&quot;&gt;5.3 不背后说人坏话&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;78&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;79&quot;&gt;在群里背后讨论别人，难免会被其他人截图传到当事人那里，从而造成关系的决裂，很可能别人一辈子都不会信任你，不会跟你有深入的合作。不要在背后说人坏话，哪怕是线下（不会被截图）这不仅是为了提高修养，更是为了保护自己。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id-heading16=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;80&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;81&quot;&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;82&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;83&quot;&gt;特别认同的一句话：“&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;84&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;84:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;为自己打工，为自己的成长负责。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;85&quot;&gt;”&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;86&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;87&quot;&gt;很多人这样想：我们付出自己的工作时间，老板付我们报酬，那么老板付我多少钱，我就干多少钱的活！&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;88&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;89&quot;&gt;给老板打工，我们会总觉得老板在剥削自己，自己是那个“受害者”。不可否认，总会有不公平的老板，不会按照你做的贡献、你的工作水平给你相应的薪资。&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;90&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;90:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;可是你始终是为自己打工&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;91&quot;&gt;，你工作里面获得的成长，积累的项目经验与收获完全是自己的，别人都抢不走。&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;92&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;93&quot;&gt;不管公司环境、老板公平性如何，找到让自己技术提升的方向，不浪费自己最宝贵的时间。还是那句话：&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;94&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;94:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;记住你永远都在为自己打工。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA3MDg5MDkzOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQmUQ0Aca9qSYNFn0tQEXQc5EibBkqQLYtibYBj1hXuagwXkNc3kVwplHxIl7KQfBIiagysgn9GDUUibw/0?wx_fmt=png&quot; data-nickname=&quot;架构精进之路&quot; data-alias=&quot;jiagou_jingjin&quot; data-signature=&quot;十年研发风雨路，大厂架构师，CSDN博客专家，InfoQ写作平台签约作者。专注软件架构研究，技术学习与职业成长，坚持分享接地气儿的架构技术干货文章！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5163398692810458&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;306&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9TPn66HT930CzevNBb2yMhKjOn9yuJqsCPbyzicCBx6Zm9sNJCWibo6VzGRYbxrSfjJaaGibSRuyZFQmr3KcX07sw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>