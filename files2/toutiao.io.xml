<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>99b29f4319184389838ac64d4d21bfd3</guid>
<title>Go 源码里的这些 //go: 指令，你知道吗？</title>
<link>https://toutiao.io/k/6fs6k5s</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是煎鱼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你平时有翻看源码的习惯，你肯定会发现。咦，怎么有的方法上面总是写着 &lt;code&gt;//go:&lt;/code&gt;  这类指令呢。他们到底是干嘛用的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天和大家一同揭开他们的面纱，我将给你介绍一下他们的作用都是什么。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;go:linkname&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:linkname localname importpath.name&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该指令指示编译器使用 &lt;code&gt;importpath.name&lt;/code&gt; 作为源代码中声明为 &lt;code&gt;localname&lt;/code&gt; 的变量或函数的目标文件符号名称。但是由于这个伪指令，可以破坏类型系统和包模块化，只有引用了 unsafe 包才可以使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单来讲，就是 &lt;code&gt;importpath.name&lt;/code&gt; 是 &lt;code&gt;localname&lt;/code&gt; 的符号别名，编译器实际上会调用 &lt;code&gt;localname&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用的前提是使用了 &lt;code&gt;unsafe&lt;/code&gt; 包才能使用。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;案例&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;time/time.go&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;...&lt;br/&gt;func now() (sec int64, nsec int32, mono int64)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;runtime/timestub.go&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;import _ &lt;span&gt;&quot;unsafe&quot;&lt;/span&gt; // &lt;span&gt;for&lt;/span&gt; go:linkname&lt;br/&gt;&lt;br/&gt;//go:linkname time_now time.now&lt;br/&gt;func time_now() (sec int64, nsec int32, mono int64) {&lt;br/&gt; sec, nsec = walltime()&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; sec, nsec, nanotime() - startNano&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个案例中可以看到 &lt;code&gt;time.now&lt;/code&gt;，它并没有具体的实现。如果你初看可能会懵逼。这时候建议你全局搜索一下源码，你就会发现其实现在 &lt;code&gt;runtime.time_now&lt;/code&gt; 中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配合先前的用法解释，可得知在 runtime 包中，我们声明了 &lt;code&gt;time_now&lt;/code&gt; 方法是 &lt;code&gt;time.now&lt;/code&gt; 的符号别名。并且在文件头引入了 &lt;code&gt;unsafe&lt;/code&gt; 达成前提条件。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;go:noescape&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:noescape&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该指令指定下一个有声明但没有主体（意味着实现有可能不是 Go）的函数，不允许编译器对其做逃逸分析。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般情况下，该指令用于内存分配优化。编译器默认会进行逃逸分析，会通过规则判定一个变量是分配到堆上还是栈上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但凡事有意外，一些函数虽然逃逸分析其是存放到堆上。但是对于我们来说，它是特别的。我们就可以使用 &lt;code&gt;go:noescape&lt;/code&gt; 指令强制要求编译器将其分配到函数栈上。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;案例&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// memmove copies n bytes from &lt;span&gt;&quot;from&quot;&lt;/span&gt; to &lt;span&gt;&quot;to&quot;&lt;/span&gt;.&lt;br/&gt;// &lt;span&gt;in&lt;/span&gt; memmove_*.s&lt;br/&gt;//go:noescape&lt;br/&gt;func memmove(to, from unsafe.Pointer, n uintptr)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们观察一下这个案例，它满足了该指令的常见特性。如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;memmove_*.s：只有声明，没有主体。其主体是由底层汇编实现的&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;memmove：函数功能，在栈上处理性能会更好&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;go:nosplit&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:nosplit&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该指令指定文件中声明的下一个函数不得包含堆栈溢出检查。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单来讲，就是这个函数跳过堆栈溢出的检查。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;案例&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:nosplit&lt;br/&gt;func key32(p *uintptr) *uint32 {&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; (*uint32)(unsafe.Pointer(p))&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;go:nowritebarrierrec&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:nowritebarrierrec&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该指令表示编译器遇到写屏障时就会产生一个错误，并且允许递归。也就是这个函数调用的其他函数如果有写屏障也会报错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单来讲，就是针对写屏障的处理，防止其死循环。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;案例&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:nowritebarrierrec&lt;br/&gt;func gcFlushBgCredit(scanWork int64) {&lt;br/&gt;    ...&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;go:yeswritebarrierrec&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:yeswritebarrierrec&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该指令与 &lt;code&gt;go:nowritebarrierrec&lt;/code&gt; 相对，在标注 &lt;code&gt;go:nowritebarrierrec&lt;/code&gt; 指令的函数上，遇到写屏障会产生错误。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而当编译器遇到 &lt;code&gt;go:yeswritebarrierrec&lt;/code&gt; 指令时将会停止。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;案例&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:yeswritebarrierrec&lt;br/&gt;func &lt;span&gt;&lt;span&gt;gchelper&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt; ...&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;go:noinline&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该指令表示该函数禁止进行内联。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;案例&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:noinline&lt;br/&gt;func unexportedPanicForTesting(b []byte, i int) byte {&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; b[i]&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们观察一下这个案例，是直接通过索引取值，逻辑比较简单。如果不加上 &lt;code&gt;go:noinline&lt;/code&gt; 的话，就会出现编译器对其进行内联优化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;显然，内联有好有坏。该指令就是提供这一特殊处理。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;go:norace&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:norace&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该指令表示禁止进行竞态检测。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见的形式就是在启动时执行 &lt;code&gt;go run -race&lt;/code&gt;，能够检测应用程序中是否存在双向的数据竞争，非常有用。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;案例&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:norace&lt;br/&gt;func forkAndExecInChild(argv0 *byte, argv, envv []*byte, chroot, dir *byte, attr *ProcAttr, sys *SysProcAttr, pipe int) (pid int, err Errno) {&lt;br/&gt;    ...&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;go:notinheap&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;//go:notinheap&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该指令常用于类型声明，它表示这个类型不允许从 GC 堆上进行申请内存。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在运行时中常用其来做较低层次的内部结构，避免调度器和内存分配中的写屏障，能够提高性能。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;案例&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// notInHeap is off-heap memory allocated by a lower-level allocator&lt;br/&gt;// like sysAlloc or persistentAlloc.&lt;br/&gt;//&lt;br/&gt;// In general, it&lt;span&gt;&#x27;s better to use real types marked as go:notinheap,&lt;br/&gt;// but this serves as a generic type for situations where that isn&#x27;&lt;/span&gt;t&lt;br/&gt;// possible (like &lt;span&gt;in&lt;/span&gt; the allocators).&lt;br/&gt;//&lt;br/&gt;//go:notinheap&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; notInHeap struct{}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在本文我们简单介绍了一些常见的指令集，让大家有了整体的系统了解。这些指令平时在 Go 工程中我们是用不到的，常见的瓶颈可能更多的在自身应用上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过在了解了这些机制后，对你阅读 Go 语言底层源码和了解运行机制会很有帮助 ：）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>fe556d889b62e0b23e24f2e6eb1a1e60</guid>
<title>ClickHouse 连接 ZK 频繁超时处理案例</title>
<link>https://toutiao.io/k/5cnybes</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1、背景：&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们线上有一套clickhouse集群，5分片2副本总计10个实例，每个实例独占1台物理机，配套混布一个3节点zookeeper集群。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;软件版本：centos 7.5  + CK 19.7.3 + ZK 3.4.13&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从昨天开始应用写入日志开始堆积，并不断的报错zookeeper session timeout。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;登录机器查看clickhouse的errlog，大量的timeout信息：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;2021.09.29 05:48:19.940814 [ 32 ] {} &amp;lt;Warning&amp;gt; app.log_dev_local (ReplicatedMergeTreeRestartingThread): ZooKeeper session has expired. Switching to a new session.&lt;br/&gt;2021.09.29 05:48:19.949000 [ 25 ] {} &amp;lt;Warning&amp;gt; app.log_k8s_local (ReplicatedMergeTreeRestartingThread): ZooKeeper session has expired. Switching to a new session.&lt;br/&gt;2021.09.29 05:48:19.952341 [ 30 ] {} &amp;lt;Error&amp;gt; app.log_dev_local (ReplicatedMergeTreeRestartingThread): void DB::ReplicatedMergeTreeRestartingThread::run(): Code: 999, e.displayText() = Coordination::Exception: All con&lt;br/&gt;nection tries failed &lt;span&gt;while&lt;/span&gt; connecting to ZooKeeper. Addresses: 10.1.1.1:2181, 10.1.1.1.2:2181, 10.1.1.3:2181&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2、诊断&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看zookeeper状态，3个实例都执行&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;stat&lt;/span&gt;|nc 127.0.0.1 2181&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-fileid=&quot;100001388&quot; data-ratio=&quot;0.5103734439834025&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qaWuZTGK0vzCow8qNgibPJQA1tdZjicRVehMpCKj8jia87aL7kXuhh3yNsusBjyZic68sPJHkl5h6cnHAsnzrgFdTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;241&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;返回1个leader 2个follower，集群状态是正常的，但是该命令执行很慢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尝试登录zk实例&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;sh /usr/lib/zookeeper/bin/zkCli.sh -server 127.0.0.1:2181&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进入登录界面后执行 ls /卡顿半天，然后返回timeout。应该是ZK集群通信出了问题，先对其进行滚动重启，重启后问题依然存在。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尝试调优zk参数，当前参数为&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;tickTime= 2000 &lt;br/&gt;syncLimit = 10&lt;br/&gt;minSessionTimeout = 4000&lt;br/&gt;maxSessionTimeout = 120000&lt;br/&gt;forceSync=yes&lt;br/&gt;leaderServes = yes&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;调整成&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;tickTime= 2000 &lt;br/&gt;syncLimit = 100&lt;br/&gt;minSessionTimeout = 40000&lt;br/&gt;maxSessionTimeout = 600000&lt;br/&gt;forceSync= no&lt;br/&gt;leaderServes = no&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重启集群后问题依然存在。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们线上有4套CK集群，每套都独占一套zk，其余3套集群的zookeeper的内存只有几十K，Node count只有几万，而出问题的这套Node count有2千多万，zookeeper进程内存30G左右。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在怀疑是Node count过多，导致节点通信拥堵，于是想办法降低Node数量：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;该环境有一套kafka混用了ZK集群，为其搭建了一套专属ZK集群并将ZK元数据目录删除，node count和物理内存依然很高，问题没有解决。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;清理无用表，找出600多个表，执行drop后，node count和物理内存依然很高，问题没有解决。降低Node count的尝试失败。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;排查到现在，基本能想到的招数都已用到，再整理一下思路：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;ZK节点响应很慢，但是集群状态是正常的；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;CK的insert经常超时，但是偶尔能执行成功；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;增大ZK的超时参数，没有丝毫改善&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;ZK的node count非常多，当前的3个ZK实例占用内存很高(RSS一直在30G上下浮动)&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;zookeeper实例本质是1个java进程，有没有可能是达到内存上限频繁的触发full gc，进而导致ZK服务响应经常性卡顿？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;搜索半天没有在机器上发现full gc的日志记录，只能直接验证一下猜想。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在/usr/lib/zookeeper/conf目录下新建1个文件java.env，内容如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;export&lt;/span&gt; JVMFLAGS=&lt;span&gt;&quot;-Xms16384m -Xmx32768m &lt;span&gt;$JVMFLAGS&lt;/span&gt;&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;滚动重启ZK集群，启动完毕后问题依然存在，但是ZK实例的RSS从原来的30G上升到了33G，超出了Xmx上限。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应该是没吃饱，修改一下文件参数&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;export&lt;/span&gt; JVMFLAGS=&lt;span&gt;&quot;-Xms16384m -Xmx65536m &lt;span&gt;$JVMFLAGS&lt;/span&gt;&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再次重启ZK集群，ZK实例的RSS飙升到55G左右就不再上升，困扰多时的问题也自动消失了，看来刚刚的full gc猜想是正确的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然已经证明是JVM heap内存的问题，那么刚刚调整的ZK参数就全部回滚，然后滚动重启ZK集群。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3、溯源&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统自此稳定了，但是zk进程占用的物理内存越来越大，没几天就达到了64G，照这个消耗速度，256G内存被耗光是迟早的事情。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么这套zk的node count会这么多，zk进程的RSS这么大？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;登录zk，随意翻找一个表的副本目录，发现parts目录居然有8000多个znode，&lt;img data-fileid=&quot;100001387&quot; data-ratio=&quot;0.18625678119349007&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qaWuZTGK0vzCow8qNgibPJQA1tdZjicRVezBb2OaKvj2n4PnGWuOib6Qf6icgibHA5fUjpstV49lvH12ia8zNgMlXmvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;553&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;登录到ck实例，执行&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;use system&lt;br/&gt;select substring(name,1,6),count(*) from zookeeper &lt;span&gt;where&lt;/span&gt; path=&lt;span&gt;&#x27;/clickhouse/tables/01-01/db/table/replicas/ch1/parts&#x27;&lt;/span&gt; group by substring(name,1,6) order by substring(name,1,6);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-fileid=&quot;100001389&quot; data-ratio=&quot;0.6416382252559727&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qaWuZTGK0vzCow8qNgibPJQA1tdZjicRVe93AHsIxjIicorV5hUpvOibDXbNlM3rqlmhMW0SKzBLZsnZ5iaXmbKDPpw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;293&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该表自从7月后znode part数量就一路飙升，在9月末达到最高值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尝试执行optimize table table final，对降低part没什么用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经和开发沟通后获悉，在7月的时候部分表的insert从每10s执行1次改成了1s执行1次，对应的就是part数量的飙升。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将这些表的insert统统改回了每10s执行1次，截止目前(10月28号)，10月份的part基本回落到了一个正常值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至于如何清理已有的znode，目前有2种方法：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;将部分离线表导出后drop，然后再导入，操作后znode从2400w下降到了1700w&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;大部分表的数据都有生命周期，N个月后将不再需要的历史分区直接drop&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至少目前可以确信znode不会再暴涨，zk进程的内存也不会继续增加，可以保证clickhouse集群稳定的运行下去。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4、小结&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这次案例前后耗费了2天的时间才得以定位原因并解决，又耗费了更长的时间才找到问题根源，距离发稿截止日期已经过了整整1个月，期间没有再复发过。&lt;br/&gt;java进程对Xms和Xmx设置很敏感，线上应用要密切关注其内存占用情况。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;作者简介: 任坤，现居珠海，先后担任专职 Oracle 和 MySQL DBA，现在主要负责 MySQL、mongoDB、Redis 和 Clickhouse 维护工作。&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b48dfeb6a4a9b1ae4e6bd6c5f9f7c319</guid>
<title>浙江移动数据中台的建设和应用实践</title>
<link>https://toutiao.io/k/vj95e1k</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;最近在TD大数据论坛上我做了一次分享，题目是《浙江移动数据中台的建设和应用实践》，关于中台的文章现在网上很多了，文末我列了主流的数据中台的文章（包括我的），数据中台没有标准架构这种观点我也是认同的，因此，这里会结合片子重点谈谈我的实际感受，大多是超越数据中台本身的。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9XCkKniaS5pfKMhR1FpicuOTBYAWibw7AZgDAuNHnEmpdAwLCHuictt7iaYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1、为什么做数据的挑战特别巨大？&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;回顾自己做数据的15年，大多的结果并不乐观，有句话说得蛮有道理：&lt;/span&gt;&lt;span&gt;你要判断一个东西有没有可能继续被使用，就要看它已经被使用了多长时间。比如&lt;/span&gt;&lt;span&gt;我可以预测凳子在一千年内继续会为人所用，因为凳子已经存在了1000年以上了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这个规律套用到自己，就有点残酷，回顾10年前自己做的模型、平台或产品，似乎都没有什么东西能留存下来，因此，现在去做数据中台，也是战战兢兢，&lt;span&gt;高大上的东西，在现实面前特别容易倒掉，&lt;/span&gt;&lt;span&gt;更别提数据工作本身的一些限制。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如&lt;span&gt;IT部门&lt;/span&gt;&lt;span&gt;是业务部门的后端&lt;/span&gt;，而数据部门是IT部门的后端，决定了数据工作者往往是后端的后端，因此要直接去创造价值是很难的，当然仅仅满足于报表取数另当别说，但相信有兴趣看我文章的人，都有着自己更高的追求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;很多数据界的老人对数据中台不屑一顾，认为纯粹是炒作，我很能理解，但如果以这个理由固步自封，那也有点不合时宜，本质不变不代表手段不需要改变，无论是在业务、技术还是数据层面。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;2、数据中台从来不是一个新东西&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据中台的本质是什么，大家现在提的最多的词是业务化，服务化，后来我加了个开放化，内涵下面这页PPT讲的很清楚，业务化是在提醒你不要为了治理而治理，服务化在强调标准化和共享，开放化在讲酒香也怕巷子深。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-backh=&quot;305&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9BJariavZWm3DtO5hE58TJIjdTmsNBjffqsACJc0e7MtX10pVRicPPBDg/0?wx_fmt=png&quot; data-ratio=&quot;0.5308441558441559&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9BJariavZWm3DtO5hE58TJIjdTmsNBjffqsACJc0e7MtX10pVRicPPBDg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1232&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你说这些是新概念吗，是阿里巴巴创造了数据中台吗？&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;显然不是，阿里巴巴在数据中台上的很大贡献就是创造了一个“数据中台”的名词，降低了企业的沟通成本，让企业的领导意识到数据能发挥出更多的价值。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;应该来讲，数据中台涉及的东西，都是做数据做到一定程度后自然产生的结果，只要你希望让数据产生更多、更直接的价值，你就要演化出相应的功能，形成自己的数据中台。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其实早在阿里巴巴以前，无论是网易、OPPO等等，大多数互联网公司其实早就有了自己的数据中台。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如笔者进公司以来，凡是想提升业务支撑效率的工作全是数据中台的内容，无论是模型周期从月改为日，用可视化工具替代PL/DEV，用标签库实现客户群复用，用自助取数替代人工取数，都是如此。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们在数据变现的第一天，老板就跟我们讲：一定要标准化，API化，否则数据变现是做不大的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;3、运营商建设数据中台的时代背景&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;通信行业天生就是一个数字化程度比较好的行业，随着传统管道业务的红利到顶，技术变革不断驱动的产业升级，AICDE对运营商的价值创造方式、核心理念等提出了新的挑战，要求其加快数字化创新，拓展产业新的空间，如下页所示。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9NkJB4iatJU4M3l0sxFoMhH4ib1XFicFyIeCGo9dwPeIXuNia8NNgOL8QYw/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9NkJB4iatJU4M3l0sxFoMhH4ib1XFicFyIeCGo9dwPeIXuNia8NNgOL8QYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section class=&quot;page_image_error_loading js_loading&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;互联网企业对运营商业务的挤压是非常厉害的，但互联网的发展有一样对运营商是绝对有利的，那就是管道的线上内容会越来越丰富，线下的轨迹数据也在随着人民生活的提高变得更有价值，运营商这种天然的线上线下数据的&lt;span&gt;全面性、多维性、连续性、完整性&lt;/span&gt;等特点，使得其在新的时期有了一些新的优势&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9UmwP9QbNqGzD0hlENUtJukMGmq4f6VEulgHwGrnQiaiavwRlbUWqa6dQ/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9UmwP9QbNqGzD0hlENUtJukMGmq4f6VEulgHwGrnQiaiavwRlbUWqa6dQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9XuMaEnSLSrjAotPLASiamJ6b3dr7s1rh8L6OkhuYzYpribbT6JMKDbKg/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9XuMaEnSLSrjAotPLASiamJ6b3dr7s1rh8L6OkhuYzYpribbT6JMKDbKg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;4、数据中台需要企业战略的支持&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为实现数字化转型，浙江移动5年前就提出启动智慧运营转型的要求，即：&lt;/span&gt;&lt;span&gt;以大数据为驱动、大IT平台为支撑、流程优化和管理完善为保障、改进客户体验和价值创造为目标，推进生产运营转型提升。&lt;/span&gt;&lt;span&gt;智慧运营鼓励企业中的每一个业务单元都投入进来，倡导首创精神，实行差别化试点,“一点创新、推广全省”，智慧运营逐渐成为公司的核心竞争力之一。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;没有公司的战略，就不可能有足够的业务驱动力去创造数据中台的生存空间，以前做数据创新面临的很大问题是没有需求，靠IT人员的自嗨刚开始的时候也许是一种创新，但马上缺乏了后续继续发展的动力。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-backh=&quot;264&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu90ZKk1cdjPlbOwCyFub2bc83fNcGzRXdxrO4U9xWSoe6h5QibzP5dfEw/0?wx_fmt=png&quot; data-ratio=&quot;0.46015625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu90ZKk1cdjPlbOwCyFub2bc83fNcGzRXdxrO4U9xWSoe6h5QibzP5dfEw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;公司的战略决定了会给你时间去持续的去做一些公司认可的长期的事情，不是那么急功近利，这对于做数据的太不容易了，智慧运营贵在坚持，不断迭代。&lt;/span&gt;&lt;span&gt;我们的智慧运营项目连续做了6年，你可以看下每一年的项目名称，都是在原来基础上的反思和调整。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9KUjJQJwY83rrH8HMBcDn6J37DUJeur5ia1Aia70ZpvtcTfxSkQFq8rJg/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9KUjJQJwY83rrH8HMBcDn6J37DUJeur5ia1Aia70ZpvtcTfxSkQFq8rJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;5、智慧运营坚持的“搭台唱戏”的理念&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当初并没有数据中台这个名词，但我们早就有了“搭台唱戏”的理念，数据中台就是其中的舞台，大家的目标是一致的，如下页所示。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9N573ibYpCGo3l74ibkJtucPiaxiaAwDM6ianHicedP4fPJPwicqvKFATP7LHg/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9N573ibYpCGo3l74ibkJtucPiaxiaAwDM6ianHicedP4fPJPwicqvKFATP7LHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section class=&quot;page_image_error_loading js_loading&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们必须要打造与之适配的数据赋能框架，这就是后来的数据中台，我们的数据中台从来不是COPY别人的产物，而是采用“搭台唱戏”模式支撑企业智慧运营战略的需要。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9TrnKyKsmicibPlFYaYic7seNTQroFLzw8zYLdGDMntjb9ZeZ6E6ZqZsYQ/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9TrnKyKsmicibPlFYaYic7seNTQroFLzw8zYLdGDMntjb9ZeZ6E6ZqZsYQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section class=&quot;page_image_error_loading js_loading&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;6、数据中台的一种架构形式&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们定义的数据中台，主要是实现跨域数据整合并沉淀公共的数据能力，同时提供丰富的数据模型、标准化的数据服务、个性化的开发平台与工具，满足一线数据开放和智慧运营的需要，我们把数据管理的相关工具纳入了能效中台，因此在这里并没有体现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBupzmicvksrV74ZGiaeLbCJkibeicV73EloddfvUd71VsLEQpk2yYBssNTUmbeG7XULhcecn6saLCxdcA/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBupzmicvksrV74ZGiaeLbCJkibeicV73EloddfvUd71VsLEQpk2yYBssNTUmbeG7XULhcecn6saLCxdcA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;7、数据中台总是处于演进的过程中&lt;/span&gt;&lt;/strong&gt;&lt;section class=&quot;page_image_error_loading js_loading&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;数据中台&lt;/span&gt;是企业发展到一定阶段的产物，而当企业需要在合适的时机推送合适的服务的时，实时数据中台就成了必需品，它不是技术驱动的产物，而是业务的需要，以下示例了我们数据中台的演进历程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9GfpeOK4I8kDKgc5ZFxLo695NCHzaQtKj3sdjuD9M1KPOiaaaSQBCrEQ/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9GfpeOK4I8kDKgc5ZFxLo695NCHzaQtKj3sdjuD9M1KPOiaaaSQBCrEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;8、数据中台的核心始终是模型&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;数据中台再好的架子也需要好的内涵，这就是模型的能力，不要成了绣花枕头稻草芯，&lt;/span&gt;&lt;span&gt;这里提两类重要模型：实时模型和挖掘模型。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;一是实时模型&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，为高效支撑实时数据应用，实时数据中台在接入海量实时数据基础上，需要根据不同应用场景，将实时数据清洗、聚合，提炼成动态、事件、时序3类实时模型&lt;/span&gt;&lt;span&gt;，分别存储在Redis 、Kafka 、Hbase等技术组件中供下游应用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9ibkJQ2nZ1qs35a9lMQiaMdwL3nsmib5HQ4k2osUvgPvXFgqFcJnz0wR7Q/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9ibkJQ2nZ1qs35a9lMQiaMdwL3nsmib5HQ4k2osUvgPvXFgqFcJnz0wR7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;二是挖掘模型&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，社交网络、时间序列、时空轨迹、自然语言处理是运营商未来基于数据进行价值创造的核心算法，只有这些算法才能最大限度的挖掘出运营商数据中的价值，&lt;span&gt;笔者前期在文章《&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIwNDI0ODY1OA==&amp;amp;mid=2655930306&amp;amp;idx=1&amp;amp;sn=253bc2b592f90bc3dc853b9a5ed150ea&amp;amp;chksm=8d79e4ffba0e6de9f550205d6c3f8a247f34d48aae59482e0b363c1156b7ce1d46c4ade16954&amp;amp;token=1059178145&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;什么才是运营商数据中台最大的竞争力？&lt;/a&gt;&lt;/span&gt;&lt;span&gt;》中提到过位置和上网是运营商最核心的数据，这些数据的价值挖掘极度依赖以上的核心算法。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;互联网公司曾经走过的路，付出的代价，运营商是绕不过的，否则，就无法发挥出原生数据的更多价值。&lt;/span&gt;&lt;span&gt;现在中国移动提出要从“要素”竞争向“要素+能力”竞争转型，在这里数据是要素，算法就是能力。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9oB7vGX6r3ceLHYGbeKYvRZwsSOCWIviaR6oBVVUfVOnnw47XcTB8UpQ/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9oB7vGX6r3ceLHYGbeKYvRZwsSOCWIviaR6oBVVUfVOnnw47XcTB8UpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;举个例子，基于社交网络识别出&lt;span&gt;家庭&lt;/span&gt;、政企的各种关系&lt;span&gt;对于运营商做好家庭、政企业务非常重要&lt;/span&gt;，以下示例了某位同事的家庭关系，涉及17个人，7个物理家庭，通过这些关系的识别你才能更精准的提供服务。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;341&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9lrN2Xpcp06BshgiaJRrow5DgkMalxfBNHiavqhHfwbIaFOKzS2DNhn2Q/0?wx_fmt=png&quot; data-ratio=&quot;0.5935114503816794&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9lrN2Xpcp06BshgiaJRrow5DgkMalxfBNHiavqhHfwbIaFOKzS2DNhn2Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1048&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;9、数据中台的开放至关重要&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;授人以鱼不如授人以渔，数据中台要开放能力，不是眉毛胡子一把抓，需要&lt;/span&gt;&lt;span&gt;尊重公司的现状，为不同的角色提供不同的数据开放手段。&lt;/span&gt;&lt;span&gt;比如标签库主要为业务人员服务、DM主要面向会SQL的人员，组件服务则面向技术开发人员等等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section class=&quot;page_image_error_loading js_loading&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9h1vX52JGCncibogk1ClHRQLicPfKhXPK3lJvepHJzIVfGpgXlS6pqGicA/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9h1vX52JGCncibogk1ClHRQLicPfKhXPK3lJvepHJzIVfGpgXlS6pqGicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section class=&quot;page_image_error_loading js_loading&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9Zib9wVzVhCic1Y01Tibtsqe4x8FUwIcdicu4npc4icW1M3lcG1ngQhiaeQfA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;10、数据中台的出口在哪里？&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;有了数据中台远远不够，只有之上的数据产品才能解决数据推送的最后一公里问题，很多数据团队最大的问题是没有数据产品，根本不是数据中台本身就能解决的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;凡是数据中台做的好的，前端的数据产品生态肯定是不错的，下图示例了我们的数据产品与阿里巴巴的对标，在我的前期文章中也有详细的阐述，即要从不同的赋能角色角度去思考数据产品的方向。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img custom_select_img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9BXSrK6DVSvdzISJwCMIr4iaR3bvMFVcgkjsqM2eO7EAHn87IuVaiawIw/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9BXSrK6DVSvdzISJwCMIr4iaR3bvMFVcgkjsqM2eO7EAHn87IuVaiawIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section class=&quot;page_image_error_loading js_loading&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;js_cache js_nocatch&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;经过几年的摸索，赋能对外变现的神灯产品体系已经具备一定的规模，神灯产品以数据价值保护和信息安全为前提，进行数据、模型、标签、接口、应用产品等多层次的合作，探索合作研发、销售代理、资源互换、产品孵化、模型锤炼、大数据联邦等多种新型合作模式，如下页所示。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9LqvPEcIE38sYnPX8Og48JDlBhmQvVAOrONmz7oY8NCLwOjKhvBgCbw/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9LqvPEcIE38sYnPX8Og48JDlBhmQvVAOrONmz7oY8NCLwOjKhvBgCbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu9mMPUYZ5lEqvNGrasiboYCZGEiaFU3OAB9D02bhTOvPOZf6b7drowf4Tw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据中台不需要去比框架、比技术或比性能，只要你的企业的业务人员或外部客户利用你的平台创造了更多价值，就是对数据中台最大的褒奖。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但要达到这个目标光有个数据中台是没有用的，除了数据产品，还需要配备相应的战略、组织、机制及人员等等，比如组织中台，也即先进生产力要适配相应的生产关系。下图列出了八个方向的建议，这些能力对传统企业的挑战特别巨大。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg wxw-img&quot; data-backh=&quot;323&quot; data-backw=&quot;574&quot; data-before-oversubscription-url=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu961G7JsPTXBn3y3L69dlGYM0AibhxQPQZRqYNj0PJEjVmGpEmzzIhKuw/0?wx_fmt=png&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBvLoyW9arstsFNXqUrxpxu961G7JsPTXBn3y3L69dlGYM0AibhxQPQZRqYNj0PJEjVmGpEmzzIhKuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这次演讲基本的思想就是这些了，感谢TD公司的组织，让我们有机会让业界看到浙江移动的做法，但你没必要COPY我们的，因为数据中台没有标准架构，总是要掌握一个原则：&lt;span&gt;参考别人的做法，听取专家的意见，然后&lt;/span&gt;&lt;span&gt;自己做主。&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIwNDI0ODY1OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hFm2L5m7fBsbESO4ibFCDqef4scQ0d37tBp3meC5icozRdMAmCZgNG0NTJnMXn3pVne9cibHIqibWzmQXeCeQRkONg/0?wx_fmt=png&quot; data-nickname=&quot;与数据同行&quot; data-alias=&quot;ysjtx_fyp&quot; data-signature=&quot;傅一平博士创办的大数据公众号，分享数据相关的技术干货、思考感悟和学习体会！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5583a38b786e95247f8692220c58223c</guid>
<title>命令行解析 JSON 数据的神奇 jq</title>
<link>https://toutiao.io/k/0mmr8ag</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;343&quot; data-backw=&quot;578&quot; data-fileid=&quot;100000073&quot; data-ratio=&quot;0.5925925925925926&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/dOoqs5O3OOGvSpGBmbIicpnWiaqtd2gXBWibicdicZGOF7pswIXr6WPhTUxgkcEhUOTss0Qt3N2Z7ic1LKw5bOQHde1w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;810&quot;/&gt;&lt;/p&gt;&lt;p&gt;JSON是一种广泛使用的结构化数据格式，通常用于大多数现代API和数据服务。由于其轻量级特性和与 JavaScript 的兼容性，它在 Web 应用程序中特别受欢迎。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;不幸的是像Bash这样的shell不能直接解释和处理JSON,这意味着通过命令行使用JSON数据可能会很麻烦(又如sed,grep等工具组合进行文本操作)。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在本次讲解中，我们将看看如何使用jq（瑞士军刀般的JSON命令行处理器）解决如上的困难。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;安装jq&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;curl https://github.com/stedolan/jq/releases/download/jq-1.6/jq-osx-amd64 -o /usr/local/bin/jq &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// 增加可执行权限&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chmod a+x /usr/local/bin/jq &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// macos 安装办法&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;brew install jq&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// Linux(Ubuntu) 安装办法&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;sudo apt-get install jq&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;准备工作&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;虚拟伪数据下载：&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;https://gist.githubusercontent.com/hzbd/1b635c71552e2c1a9213ac2aaea98756/raw/dc6e69600532e8be09508c3505952dd189700dd2/fake_userinfo.json&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;jq用法解析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;闲话少说，让我们看一些例子&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;注意点：我们在jq命令中会使用到过滤器各种组合，请注意用于封装所有过滤器的单引号。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1. 只打印整个JSON内容，且美化输出:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json |jq .&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;_id&quot;: &quot;6184d939a126d6f94387cb27&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;index&quot;: 0,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;guid&quot;: &quot;a9704008-a743-49a6-8c5f-45632e564509&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;isActive&quot;: true,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;balance&quot;: &quot;$2,380.51&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;picture&quot;: &quot;http://placehold.it/32x32&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;age&quot;: 26,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;eyeColor&quot;: &quot;brown&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当我们想要从API检索数据并以清晰可读的格式查看响应时，能够美化 JSON 尤其有用&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2. 基本的过滤 .[], .a&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// 获取该数组中的所有元素，而不是数组本身&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json |jq &#x27;.[]&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;_id&quot;: &quot;6184d939a126d6f94387cb27&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;index&quot;: 0,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;guid&quot;: &quot;a9704008-a743-49a6-8c5f-45632e564509&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;isActive&quot;: true,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;balance&quot;: &quot;$2,380.51&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;picture&quot;: &quot;http://placehold.it/32x32&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;age&quot;: 26,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;eyeColor&quot;: &quot;brown&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;name&quot;: &quot;Fox Mcmahon&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// 要仅获取每个item的名字字段，只需增加.name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json |jq &#x27;.[].name&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Fox Mcmahon&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Mcfarland Baldwin&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Robyn Fernandez&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Craig Mitchell&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Tanner Figueroa&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Grace Lott&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Lula Miller&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Wade Walls&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Fitzgerald Clarke&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Fuentes Peters&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3. 数组：索引、嵌套过滤器&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;获取数组中的第一个item:&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq &#x27;.[0]&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;_id&quot;: &quot;6184d939a126d6f94387cb27&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;index&quot;: 0,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;guid&quot;: &quot;a9704008-a743-49a6-8c5f-45632e564509&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;isActive&quot;: true,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;balance&quot;: &quot;$2,380.51&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;picture&quot;: &quot;http://placehold.it/32x32&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;age&quot;: 26,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;eyeColor&quot;: &quot;brown&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;name&quot;: &quot;Fox Mcmahon&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;gender&quot;: &quot;male&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;company&quot;: &quot;PHARMACON&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;email&quot;: &quot;foxmcmahon@pharmacon.com&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;phone&quot;: &quot;+1 (934) 509-2056&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;address&quot;: &quot;192 Newkirk Placez, Grill, Northern Mariana Islands, 5877&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;about&quot;: &quot;Non eu qui nisi in culpa ad irure. Consectetur aute in adipisicing fugiat sunt fugiat ullamco fugiat. Pariatur minim non non labore.\r\n&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;registered&quot;: &quot;2020-02-19T02:32:34 -08:00&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;latitude&quot;: 46.538592,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;longitude&quot;: -123.07292,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;tags&quot;: [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;cupidatat&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;Lorem&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;in&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;tempor&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;in&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;consectetur&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;reprehenderit&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;friends&quot;: [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &quot;id&quot;: 0,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &quot;name&quot;: &quot;Maxwell Pace&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &quot;id&quot;: 1,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &quot;name&quot;: &quot;Lynda Lindsay&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &quot;id&quot;: 2,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &quot;name&quot;: &quot;Alyson Hyde&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;greeting&quot;: &quot;Hello, Fox Mcmahon! You have 7 unread messages.&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;favoriteFruit&quot;: &quot;banana&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当然，你可以附加更多过滤器，用于从第一项获取该人员的朋友栏的第一个friend的名字:&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq &#x27;.[0].friends[0].name&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;Maxwell Pace&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4. 长度：array construction, length, pipe&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq &#x27;.[].email&#x27; | wc -l&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;74&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;这里你也可以使用jq自带的length的函数来实现，首先先将email构建为一个数组，然后length计算：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq &#x27;[.[].email] | length&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;74&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;5. 过滤器：select, and, contains, ==&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果你想过滤这些电子邮件的后缀怎么办？grep当然可以使用，但是今天我们这里会有一个新的解决办法：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq &#x27;.[].email | select(. | contains(&quot;@netur.com&quot;))&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;wrightmoon@netur.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;又如我们在过滤器中再添加一个条件，从所有男性中过滤上述电子邮件：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq &#x27;.[] | select((.email | &lt;span class=&quot;code-snippet__built_in&quot;&gt;contains&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@netur&quot;&lt;/span&gt;)) and .gender == &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;male&quot;&lt;/span&gt;)&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;_id&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;6184d9397cad2b56c781d961&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;index&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;28&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;guid&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;40145e80-ff91-4efc-866b-dc974f923104&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;isActive&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;balance&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;$1,947.45&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;picture&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://placehold.it/32x32&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;35&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;eyeColor&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;brown&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Wright Moon&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;gender&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;male&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;company&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;NETUR&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;email&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;wrightmoon@netur.com&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;phone&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;+1 (923) 540-2056&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;address&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;265 Franklin Street, Martinez, Iowa, 9009&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;about&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Magna ea tempor sint occaecat laborum laboris. Anim ea labore reprehenderit officia consequat laborum ut officia consequat non magna aliqua. Cupidatat ullamco sit labore id veniam mollit aute sunt nostrud sint eu sit mollit ex.\r\n&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;registered&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;2021-03-08T08:55:08 -08:00&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;latitude&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;22.448976&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;longitude&quot;&lt;/span&gt;: -&lt;span class=&quot;code-snippet__number&quot;&gt;119.825892&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;tags&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;aute&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;do&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;laborum&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;cillum&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;consequat&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;do&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;pariatur&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;friends&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Regina Miranda&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Blackburn Harding&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Lara Dawson&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;greeting&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Hello, Wright Moon! You have 7 unread messages.&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;favoriteFruit&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;banana&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;仔细看我们发现此过滤器将返回1个item对象（不是电子邮件），因为第一个过滤器.[]返回我们使用select((.email | contains(&quot;@netur&quot;)) and .gender == &quot;male&quot;). 如果我们仔细看看这一点，我们将看到2个条件.gender == &quot;male&quot;和(.email | contains(&quot;@netur&quot;)。管道|用于应用select和contains功能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;6. 对象构造和字符串插值：{}, (.a)&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;假设我们想要一个只包含 3 个字段的对象数组：first_name,last_name和email。我们需要构造一些新对象，而且语法很直观。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq &#x27;.[] | {name: .name, company: .company, phone: .phone}&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;name&quot;: &quot;Fox Mcmahon&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;company&quot;: &quot;PHARMACON&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;phone&quot;: &quot;+1 (934) 509-2056&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;name&quot;: &quot;Mcfarland Baldwin&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;company&quot;: &quot;XUMONK&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;phone&quot;: &quot;+1 (836) 401-3549&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;7. 分组：group_by&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;jq 可以做的另一件很酷的事情是分组。我们可以通过按性别分组来证明这一点。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq group_by(.gender)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;虽然如上命令已经起作用了，但结果没什么可读性 - 它是一个包含2个子数组，其中包含分组的对象。接下来我们稍微调整一下。我们将分解 2 次（因为我们在数组中有数组）。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq &#x27;group_by(.gender) | .[] | .[] | {name: .name, gender: .gender}&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;name&quot;: &quot;Robyn Fernandez&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;gender&quot;: &quot;female&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;name&quot;: &quot;Grace Lott&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;gender&quot;: &quot;female&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;name&quot;: &quot;wuda Miller&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &quot;gender&quot;: &quot;male&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;看起来不错，但人员都放在一起。我们想保留2个不同的数组：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq &#x27;group_by(.gender) | .[] | [.[] | {name: .name, gender: .gender}]&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;name&quot;: &quot;Robyn Fernandez&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;gender&quot;: &quot;female&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;name&quot;: &quot;Fox Mcmahon&quot;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;gender&quot;: &quot;male&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;让我们看看我们的数据集中有多少男人和多少女人。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json | jq &#x27;group_by(.gender) | .[] | [.[] | {name: .name, gender: .gender}] | length&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;35&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;39&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;8. 切片&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;jq还支持数组切片，这是另一个强大的功能。这在我们需要返回数组的子数组时特别有用。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ echo &#x27;[1,2,3,4,5,6,7,8,9,10]&#x27; | jq &#x27;.[6:9]&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// 结果将是一个长度为3的新数组，包含从索引6（包括）到索引9（不包括）的item&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  7,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  8,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  9&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当然也可以这样操作：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;[1,2,3,4,5,6,7,8,9,10]&#x27;&lt;/span&gt; | jq &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;.[:6]&#x27;&lt;/span&gt; | jq &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;.[-2:]&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;9. 支持正则表达式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// 输出名字以字母“C”开头的所有人员的的email&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json|jq &#x27;.[] | select(.name|test(&quot;^C.&quot;)) | .email&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;craigmitchell@phuel.com&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;cortezdalton@emtrak.com&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;corrineburke@retrotex.com&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;cherrystewart@fleetmix.com&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;carolecote@stelaecor.com&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;caldwellschneider@futurize.com&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;10. 从JSON中删除敏感信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// 删除所有item的balance敏感信息字段&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ cat mock.json|jq &#x27;del(.[].balance)&#x27;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;差不多就到这里了，jq是一个非常强大和轻量级的工具，每个开发人员至少应该对它的工作原理有一个基本的了解。更多的用法建议查看一下jq官方手册。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;p&gt;&lt;em&gt;https://stedolan.github.io/jq/tutorial/&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;https://www.json-generator.com/     // 伪数据生成&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;https://jqplay.org/&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;br/&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>468b432f576eed936f201bddee8e088f</guid>
<title>Go 并发编程一年回顾 (2021)</title>
<link>https://toutiao.io/k/o43fzwc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;article-entry&quot; itemprop=&quot;articleBody&quot;&gt;
      
      
      
      &lt;p&gt;去年的时候我写了一篇&lt;a href=&quot;https://colobu.com/2020/07/05/the-state-of-go-sync-2020/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Go并发编程一年回顾&lt;/a&gt;,如今2021年也快结束了，Go 1.18的特性已经冻结，美国页很快进入了假期模式，趁这个节点，我们回顾一下近一年Go并发编程的进展。&lt;/p&gt;
&lt;a id=&quot;more&quot;/&gt;
&lt;h2 id=&quot;TryLock终于要发布&quot;&gt;TryLock终于要发布&lt;/h2&gt;
&lt;p&gt;很久以来(可以追溯到2013年&lt;a href=&quot;https://github.com/golang/go/issues/6123&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#6123&lt;/a&gt;),就有人提议给Mutex增加TryLock的方法，被大佬们无情的拒绝了，断断续续，断断续续的一直有人提议需要这个方法，如今到了2021年，Go team大佬们终于松口了，增加了相应的方法(&lt;a href=&quot;https://github.com/golang/go/issues/45435&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#45435&lt;/a&gt;)。&lt;/p&gt;
&lt;p&gt;一句话来说，Mutex增加了TryLock， 尝试获取锁, RWMutex 增加了 TryLock和TryRLock方法，尝试获取写锁和读锁。它们都返回bool类型。如果返回true,代表已经获取到了相应的锁，如果返回false,则表示没有获取到相应的锁。&lt;/p&gt;
&lt;p&gt;本质上，要实现这些方法并不麻烦，接下来我们看看相应的实现(去除了race代码)。&lt;/p&gt;
&lt;p&gt;首先是Mutex.TryLock:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (m *Mutex) TryLock() &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; atomic.CompareAndSwapInt32(&amp;amp;m.state,&lt;span class=&quot;number&quot;&gt; 0&lt;/span&gt;, mutexLocked) {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;true&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;false&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;也就是利用aromic.CAS操作state字段，如果当前没有被锁或者没有等待锁的情况，就可以成功获取到锁。不会尝试spin和与等待者竞争。&lt;/p&gt;
&lt;p&gt;不要吐槽上面的代码风格，可能你觉得不应该写成下面的方式吗？原因在于我删除了race代码，那些代码块中包含race代码，所以不能像下面一样简写：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (m *Mutex) TryLock() &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; atomic.CompareAndSwapInt32(&amp;amp;m.state,&lt;span class=&quot;number&quot;&gt; 0&lt;/span&gt;, mutexLocked)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;读写锁有些麻烦，因为它有读锁和写锁两种情况。&lt;/p&gt;
&lt;p&gt;首先看RWMutex.TryLock(去除了race代码):&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (rw *RWMutex) TryLock() &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; !rw.w.TryLock() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;false&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; !atomic.CompareAndSwapInt32(&amp;amp;rw.readerCount,&lt;span class=&quot;number&quot;&gt; 0&lt;/span&gt;, -rwmutexMaxReaders) {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;        rw.w.Unlock()&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;false&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;true&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;首先底层的Mutex.TryLock,尝试获取w字段的锁,如果成功，需要检查当前的Reader, 如果没有reader,则成功, 如果此时不幸还有reader没有释放读锁，那么尝试Lock也是不成功的,返回false。注意返回之前一定要把rw.w的锁释放掉。&lt;/p&gt;
&lt;p&gt;接下来看RWMutex.TryRLock(去除了race代码):&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (rw *RWMutex) TryRLock() &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;c := atomic.LoadInt32(&amp;amp;rw.readerCount)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; c &amp;lt;&lt;span class=&quot;number&quot;&gt; 0&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;false&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; atomic.CompareAndSwapInt32(&amp;amp;rw.readerCount, c, c&lt;span class=&quot;number&quot;&gt;+1&lt;/span&gt;) {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;true&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这段代码首先检查readerCount,如果为负值，说明有writer，此时直接返回false。&lt;/p&gt;
&lt;p&gt;如果没有writer, 则使用atomic.CAS把reader加1, 如果成功，返回。如果不成功，那么此时可能有其它reader加入，或者也可能有writer加入，因为不能判断是reader还是writer加入，那么就用一个for循环再重试。&lt;/p&gt;
&lt;p&gt;如果是writer加入，那么下一次循环c可能就是负数，直接返回false,如果刚才是有reader加入，那么它再尝试加1就好了。&lt;/p&gt;
&lt;p&gt;以上就是新增的代码，不是特别复杂。Go team不情愿的把这几个方法加上了, 同时有很贴心的提示(恐吓):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that while correct uses of TryLock do exist, they are rare,&lt;br/&gt;and use of TryLock is often a sign of a deeper problem&lt;br/&gt; in a particular use of mutexes. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;WaitGroup的字段变化&quot;&gt;WaitGroup的字段变化&lt;/h2&gt;
&lt;p&gt;先前，WaitGroup类型使用&lt;code&gt;[3]uint32&lt;/code&gt;作为&lt;code&gt;state1&lt;/code&gt;字段的类型，在64位和32位编译器情况下，这个字段的byte的意义是不同的，主要是为了对齐。虽然使用一个字段很&quot;睿智&quot;,但是阅读起来却很费劲，现在，Go team把它改成了两个字段，根据对齐规则，64位编译器会对齐相应字段，讲真的，我们不差那4个字节。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;18&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;19&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;20&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;21&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;22&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;23&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;24&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;25&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; WaitGroup &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;noCopy noCopy&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 64-bit value: high 32 bits are counter, low 32 bits are waiter count.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 64-bit atomic operations require 64-bit alignment, but 32-bit&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// compilers only guarantee that 64-bit fields are 32-bit aligned.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// For this reason on 32 bit architectures we need to check in state()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// if state1 is aligned or not, and dynamically &quot;swap&quot; the field order if&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// needed.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;state1 &lt;span class=&quot;typename&quot;&gt;uint64&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;state2 &lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// state returns pointers to the state and sema fields stored within wg.state*.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (wg *WaitGroup) state() (statep *&lt;span class=&quot;typename&quot;&gt;uint64&lt;/span&gt;, semap *&lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt;) {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; unsafe.Alignof(wg.state1) ==&lt;span class=&quot;number&quot;&gt; 8&lt;/span&gt; || &lt;span class=&quot;typename&quot;&gt;uintptr&lt;/span&gt;(unsafe.Pointer(&amp;amp;wg.state1))&lt;span class=&quot;number&quot;&gt;%8&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt; 0&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// state1 is 64-bit aligned: nothing to do.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;amp;wg.state1, &amp;amp;wg.state2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;} &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// state1 is 32-bit aligned but not 64-bit aligned: this means that&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// (&amp;amp;state1)+4 is 64-bit aligned.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;state := (*&lt;span class=&quot;number&quot;&gt;[3&lt;/span&gt;]&lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt;)(unsafe.Pointer(&amp;amp;wg.state1))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (*&lt;span class=&quot;typename&quot;&gt;uint64&lt;/span&gt;)(unsafe.Pointer(&amp;amp;state&lt;span class=&quot;number&quot;&gt;[1&lt;/span&gt;])), &amp;amp;state&lt;span class=&quot;number&quot;&gt;[0&lt;/span&gt;]&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;64位对齐情况下state1和state2意义很明确，如果不是64位对齐，还得巧妙的转换一下。&lt;/p&gt;
&lt;h2 id=&quot;Pool中使用fastrandn替换fastrand&quot;&gt;Pool中使用fastrandn替换fastrand&lt;/h2&gt;
&lt;p&gt;Go运行时中提供了&lt;code&gt;fastrandn&lt;/code&gt;方法，要比&lt;code&gt;fastrand() % n&lt;/code&gt;快很多，相关的文章可以看下面中的注释中的地址。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;18&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;19&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;20&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;21&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;22&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;23&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;24&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;25&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;26&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;27&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:nosplit&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; fastrand() &lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;mp := getg().m&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Implement wyrand: https://github.com/wangyi-fudan/wyhash&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; goarch.IsAmd64|goarch.IsArm64|goarch.IsPpc64|&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;goarch.IsPpc64le|goarch.IsMips64|goarch.IsMips64le|&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;goarch.IsS390x|goarch.IsRiscv64 ==&lt;span class=&quot;number&quot;&gt; 1&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;mp.fastrand +=&lt;span class=&quot;number&quot;&gt; 0&lt;/span&gt;xa0761d6478bd642f&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;hi, lo := math.Mul64(mp.fastrand, mp.fastrand&lt;span class=&quot;number&quot;&gt;^0&lt;/span&gt;xe7037ed1a0b428db)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt;(hi ^ lo)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Implement xorshift64+&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;t := (*&lt;span class=&quot;number&quot;&gt;[2&lt;/span&gt;]&lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt;)(unsafe.Pointer(&amp;amp;mp.fastrand))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;s1, s0 := t&lt;span class=&quot;number&quot;&gt;[0&lt;/span&gt;], t&lt;span class=&quot;number&quot;&gt;[1&lt;/span&gt;]&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;s1 ^= s1 &amp;lt;&amp;lt;&lt;span class=&quot;number&quot;&gt; 17&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;s1 = s1 ^ s0 ^ s1&amp;gt;&lt;span class=&quot;number&quot;&gt;&amp;gt;7&lt;/span&gt; ^ s0&amp;gt;&lt;span class=&quot;number&quot;&gt;&amp;gt;16&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;t&lt;span class=&quot;number&quot;&gt;[0&lt;/span&gt;], t&lt;span class=&quot;number&quot;&gt;[1&lt;/span&gt;] = s0, s1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s0 + s1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:nosplit&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; fastrandn(n &lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt;) &lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// This is similar to fastrand() % n, but faster.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// See https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt;(&lt;span class=&quot;typename&quot;&gt;uint64&lt;/span&gt;(fastrand()) * &lt;span class=&quot;typename&quot;&gt;uint64&lt;/span&gt;(n) &amp;gt;&amp;gt;&lt;span class=&quot;number&quot;&gt; 32&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;所以sync.Pool中使用&lt;code&gt;fastrandn&lt;/code&gt;做了一点点修改，用来提高性能。好卷啊，这一点点性能都来压榨,关键，这还是开启race才会执行的代码。&lt;/p&gt;
&lt;h2 id=&quot;sync-Value增加了Swap和CompareAndSwap两个便利方法&quot;&gt;sync.Value增加了Swap和CompareAndSwap两个便利方法&lt;/h2&gt;
&lt;p&gt;如果使用sync.Value,这两个方法的逻辑经常会用到，现在这两个方法已经添加到标准库中了。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (v *Value) Swap(&lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;{}) (old &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;{}) &lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (v *Value) CompareAndSwap(old, &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;{}) (swapped &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt;)&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Go 1.18中虽然实现了泛型，但是一些库的修改有可能在将来的版本中实现了。在泛型推出来之后，atomic对类型的支持会有大大的加强，所以将来Value这个类型有可能退出历史舞台，很少被使用了。(参考Russ Cox的文章&lt;a href=&quot;https://research.swtch.com/gomm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Updating the Go Memory Model&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;整体来说，Go的并发相关的库比较稳定，并没有大的变化。&lt;/p&gt;

      
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>