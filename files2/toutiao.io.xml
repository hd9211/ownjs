<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>4ced2b40a1876b4036e1ce644a2b2247</guid>
<title>技术专家面试实战：用数组实现一个阻塞队列？</title>
<link>https://toutiao.io/k/90ne21d</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;ArrayBlockingQueue顾名思义，是基于数组实现的阻塞队列，阻塞队列可以用于缓冲任务，实现生产者消费者模式，例如线程池中的工作队列。那么怎么才能用数组实现阻塞队列呢？&lt;/p&gt;&lt;p&gt;我们先从ArrayBlockingQueue的功能说起&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;首先它是一个队列，队列需要具备入队、出队的能力&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;由于是BlockingQueue，需要在队列已满时，对入队的请求进行阻塞，当队列有剩余空间时，释放入队请求；在队列为空时，需要对出队的请求进行阻塞，当队列中有元素时，释放出队请求；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;由于ArrayBlockingQueue是一个在多线程情况下使用的数据结构，需要保证它的操作的线程安全性&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;&lt;span&gt;拆解ArrayBlockingQueue实现步骤&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;我们先拆解一下问题，把这个问题分成&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用数组实现队列&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;给队列加上阻塞能力和保证线程安全&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;&lt;span&gt;用数组实现队列&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;如何用数组实现数据的入队出队操作呢，很多同学第一时间会想到，通过一个index字段存储当前数组下一个写入的位置。那么如何处理出队呢，很多同学会想到出队就是返回数组第一个元素，并且把后面所有的元素向前移动一位。&lt;/p&gt;&lt;p&gt;这个方案的问题在于出队时会移动大量的元素，它的时间复杂度是O(n)，那有没有更高效的方案呢？还有另一个循环数组的方案，我们通过两个int字段，分别记录下一个要入队和下一个要出队的元素的位置，当入队到数组末尾时，从0开始，同样当出队到末尾时，也从0开始。&lt;/p&gt;&lt;p&gt;另外当队列为空和队列已满的时候，takeIndex和putIndex都指向相同的位置，所以为了进行区分，我们可以用一个count字段存储队列元素数量，这样当count=0的时候说明队列为0，count=数组容量的时候说明队列已满&lt;/p&gt;&lt;p&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/bfAhkMkS9hMY3Oyx53T7SBT1bPD6XNbguWlaxkHibRwSwgrmSacNsAu3NHwlgt8ndW2OAT5LHh3SSEJUSek6jww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.543450064850843&quot; data-w=&quot;771&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;br/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;下面代码展示了用数组实现队列的具体实现。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ArrayBlockingQueue&lt;/span&gt;&amp;lt;&lt;span&gt;E&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; Object[] items;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; takeIndex;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; putIndex;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; count;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;ArrayBlockingQueue&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; capacity)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (capacity &amp;lt;= &lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;            &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; IllegalArgumentException();&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.items = &lt;span&gt;new&lt;/span&gt; Object[capacity];&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;enqueue&lt;/span&gt;&lt;span&gt;(E e)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        Object[] items = &lt;span&gt;this&lt;/span&gt;.items;&lt;br/&gt;        items[putIndex] = e;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (++putIndex == items.length) putIndex = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;        count++;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; E &lt;span&gt;dequeue&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        Object[] items = &lt;span&gt;this&lt;/span&gt;.items;&lt;br/&gt;        E e = (E) items[takeIndex];&lt;br/&gt;        items[takeIndex] = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (++takeIndex == items.length) takeIndex = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;        count--;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; e;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;实现条件阻塞和线程安全&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/bfAhkMkS9hMY3Oyx53T7SBT1bPD6XNbgxGJIWefqDG1lUBP8vTk1dCD5SxY3nJVrIqZgJpeVbvfUKD0RXZHg9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.585635359116022&quot; data-w=&quot;724&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;figcaption&gt;&lt;span&gt;「在队列已满时，对入队的请求进行阻塞，当队列有剩余空间时，释放入队请求」这个需求本质上是一个条件等待的特例，写入的条件是队列不满，不满足条件的时候需要等待，直到满足条件为止。&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在Java中，实现条件等待有synchronized+Object.wait和Lock+Condition.await两种方式，这里不用synchronized方案，是因为&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;synchronized不支持interrupt&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;synchronized无法支持多个条件&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;通过Lock和Condition的方案，还能够保证线程安全，因为上面的环形数组实现中，线程间共享的变量有items数组、takeIndex、putIndex、count，线程安全涉及到原子性可见性重排序几个方面，通过Lock类加锁可以对共享变量的读写操作进行保护。&lt;/p&gt;&lt;p&gt;定义阻塞的Lock对象和Condition，条件分为不满和不空两个条件。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ArrayBlockingQueue&lt;/span&gt;&amp;lt;&lt;span&gt;E&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; Object[] items;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; takeIndex;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; putIndex;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; count;&lt;br/&gt;    ReentrantLock lock;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Condition notEmpty;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Condition notFull;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;ArrayBlockingQueue&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; capacity)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (capacity &amp;lt;= &lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;            &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; IllegalArgumentException();&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.items = &lt;span&gt;new&lt;/span&gt; Object[capacity];&lt;br/&gt;        &lt;span&gt;// 创建lock对象&lt;/span&gt;&lt;br/&gt;        lock = &lt;span&gt;new&lt;/span&gt; ReentrantLock();&lt;br/&gt;        &lt;span&gt;// 创建非空的Condition&lt;/span&gt;&lt;br/&gt;        notEmpty = lock.newCondition();&lt;br/&gt;        &lt;span&gt;// 创建不满的Condition&lt;/span&gt;&lt;br/&gt;        notFull =  lock.newCondition();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以入队操作添加实现为例，能够入队的条件是队列不满，也就是count &amp;lt; items.length，不能入队的条件反过来就是count == items.length。当满足条件后，我们就可以入队了，入队之后，还需要唤醒等待出队的线程。&lt;/p&gt;&lt;p&gt;put方法的流程为&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;先加锁&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;在锁中while循环判断条件是否满足，不满足调用notFull.await()，await()方法会释放锁，被其他线程signal唤醒后会重新抢锁，再次获得锁后&lt;/span&gt;会&lt;span&gt;继续走到while循环判断条件的地方。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果条件已经满足，则执行入队操作&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;入队完之后调用notEmpty.signal()唤醒一个等待notFull条件的线程&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;finally中释放锁&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;put&lt;/span&gt;&lt;span&gt;(E e)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; InterruptedException &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; ReentrantLock lock = &lt;span&gt;this&lt;/span&gt;.lock;&lt;br/&gt;    lock.lockInterruptibly();&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; (count == items.length)&lt;br/&gt;            notFull.await();&lt;br/&gt;        enqueue(e);&lt;br/&gt;        notEmpty.signal();&lt;br/&gt;    } &lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;        lock.unlock();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;方法中还有一些小细节&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;put方法中，为什么要先用一个声明一个lock局部变量呢？&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;code&gt;ReentrantLock lock = this.lock;&lt;/code&gt; 这是因为如果不使用局部变量，后面所有使用实例变量的调用，在字节码指令层面需要变成先调用aload 0获取到this，再调用getField指令获取字段值，再进行其他操作。而先把lock存到局部变量中，后面所有的获取lock就可以变成一个aload xxx指令，从而节省了指令数量，也就会加快方法的执行速度。&lt;/p&gt;&lt;ol start=&quot;2&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;为什么while循环需要放在锁内呢？&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;如果不放在锁内，则可能会出现多个线程同时看到满足条件，进而去加锁入队。虽然入队还是在临界区，但是会出现队列已满，仍然在执行入队操作的情况。这个问题和单例的double check locking中少些一个check的问题类似。&lt;/p&gt;&lt;p&gt;take方法是和put相对应的出队方法，和put流程基本一致&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; E &lt;span&gt;take&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; InterruptedException &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;final&lt;/span&gt; ReentrantLock lock = &lt;span&gt;this&lt;/span&gt;.lock;&lt;br/&gt;    lock.lockInterruptibly();&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; (count == &lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;            notEmpty.await();&lt;br/&gt;        E element = dequeue();&lt;br/&gt;        notFull.signal()&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; element;&lt;br/&gt;    } &lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;        lock.unlock();&lt;br/&gt;    }&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9c6a774e69ee923b6e1f1ef3191e5415</guid>
<title>离技术很近，离生活很远</title>
<link>https://toutiao.io/k/sjodlal</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;上周跟小伙伴们在周例会复盘的时候提到了这句话，为什么这么讲，花点时间来延伸一下。&lt;/section&gt;&lt;section&gt;这是一个终日面对计算机的群体，每个人都在奋力提升自己的技能来换取更高的工资福利，甚至有时候像文人一般相轻，“这东西很简单，没什么值得炫耀的”，“如果是我做，应该用这个方案会更完美”，等等。&lt;/section&gt;&lt;section&gt;不是需求设计、存储设计、架构设计，就是缺陷跟踪、问题修复，甚至是性能提升，工作中无可厚非，工作之余花点时间再增值一下也未尝不可，遗憾的是，不少人把这些活成了自己的生活，除它之外，再没有过多额外尝试，幸运的人能力得到提升，实现五子登科，不幸运的人仿佛裹进了茧房，无法突破。&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;“当时房子那么便宜，要知道涨这么疯，我砸锅卖铁也要买几套……”&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;“要是当初拿在手里就好了，现在不知道翻了多少倍，搞不好都财务自由了……”&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;诸如此类，……&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;当然不能归因于程序员痴迷技术提升，而是放到任何人身上，都有可能存在的问题。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;你的注意力在哪里，你的未来就会往哪里去。时间有限，你把精力倾注于一件事，其他的事自然就会让路，让你更专注于此。程序员为什么离技术很近，这跟出租司机技能是一样的，这是吃饭的家伙。&lt;/p&gt;&lt;p&gt;离生活很远又怎么讲？专注于技术，活跃于技术群体，这些都脱离了实际柴米油盐酱醋茶，脱离了鸡毛蒜皮琐碎，缺少了与各色人等打交道的经历，就连打个黑的都不会讨价还价，长住一个社区都不会跟一个保安搞好关系等等，技术能力很强，但不接地气，生活能力弱反过来又逼着你躲进舒适区，时间一长，没人跟你提，你也就忘了这事，过了许久，猛然回头，发现不是那么回事。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.5&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/EwukgicNDWBvuYeL0JCrT5H9ssN8Jjtjv1ibKic1wAa5yMofNHS0iclRBR3GeW0owBbFlibvQX9iacSVehBq92gbOSHw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;题图 from unsplash&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生活需要判断、执行、修正再调整，而后坚持不懈，但入世远不是那么容易，需要磨练，愿你砥砺前行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;周末二十分钟小记。&lt;/p&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIwMjE3MDIwMA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/EwukgicNDWBswFxJHbKiad1jnJCFQiaWQrRnSdQGnrHiaicTyc2FR4CId2GQk1TABicoY87kQIeoeI1z3GnwanWMg1YQ/0?wx_fmt=png&quot; data-nickname=&quot;MavenTalk&quot; data-alias=&quot;mavenTalk&quot; data-signature=&quot;创业者，资深技术从业人员，关注技术人的认知提升和职业成长&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>169a03b3502a124564dbba360b9480fe</guid>
<title>四种引用类型在 Spring Boot 中的使用</title>
<link>https://toutiao.io/k/577hown</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;今天 &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;4ye&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 来和小伙伴们聊聊这个 &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;强引用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;软引用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;弱引用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;幻象引用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;（&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;虚引用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;）啦😝&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;嘿嘿，主要是最近读源码的时候经常看到，然后又想到自己第一次知道这个神奇的东西是在 &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;2020-8-21&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;😄&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;为啥记得这么清楚呢？主要是翻到了 杨晓峰大佬的 pdf 哈哈😄&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://img.ryzeyang.top/rdppo&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zIjiaGEEKdYGGu1JGcLyrfM0fWECBsfibFClgDtHXueLzlibLS9NNiciceBYvSVqeYGDGwXyuvojgeBiaJbIDw5Fqetw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;198&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;这次我一定得记牢不搞混了  哈哈，一起来看看叭😝&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;文章概览&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;一. &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;strong&gt;四种引用的概念&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;二. &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;strong&gt;对象可达性介绍&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;三. &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;strong&gt;Springboot源码中的引用&lt;/strong&gt;&lt;strong/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;概念介绍&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n18&quot; mdtype=&quot;blockquote&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;不同的引用类型，主要体现的是&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;对象不同的可达性（reachable）状态和对垃圾收集的影响&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;01. &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;strong&gt;强引用&lt;/strong&gt;&lt;strong/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;这个就是我们创建的普通对象了~  当该对象被显示地赋值为 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 时，或者没有被其他存活的对象继续引用时，它就会成为垃圾收集器的目标，等待被收回&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;02. &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;strong&gt;软引用&lt;/strong&gt;&lt;strong/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;软引用( &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;SoftReference&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; ) , 当&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;内存不足&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 时会被回收&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;比如&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://img.ryzeyang.top/image-20210620220531336.png&quot;&gt;&lt;img data-ratio=&quot;0.3249370277078086&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYGGu1JGcLyrfM0fWECBsfibF9iaJGlCtKVic9iaFlJj8Eug5LdiaCeTlFrCuMbNzKT3gDZc67QxbfLIGrA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;794&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;被回收后，这里会打印 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 而不是 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;Java4ye&lt;/code&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;03. &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;strong&gt;弱引用&lt;/strong&gt;&lt;strong/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;弱引用( &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;WeakReference&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; ) , 当 &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;垃圾回收器&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 进行垃圾回收时，无论内存足与否，它都会被垃圾回收器回收&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;比如&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://img.ryzeyang.top/image-20210620221353830.png&quot;&gt;&lt;img data-ratio=&quot;0.35980746089049337&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYGGu1JGcLyrfM0fWECBsfibFgrCLU2zWc3nq4YbH0VQXZFM0beicfibapBr6ia1CIovL1ttfSQyNX2oicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;831&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;被回收后，这里也是会打印 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 而不是 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;Java4ye&lt;/code&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt;04. &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;/em&gt;&lt;strong&gt;虚引用&lt;/strong&gt;&lt;strong/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;虚引用( &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;ReferenceQueue&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; ) , 这个也是随时会被回收，不过它的作用更像一个标记，当对象被回收时，它不为 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; ，但是要注意，无论什么时候去调用 虚引用的 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 方法，都只能获取到一个 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 值。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;blockquote cid=&quot;n273&quot; mdtype=&quot;blockquote&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知 —— &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;&amp;lt;&amp;lt;深入理解Java虚拟机&amp;gt;&amp;gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;这里引用 &lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;www.javashuo.com/article/p-zyvdcbhl-nb.html&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;该文章的例子&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;section&gt;User user = &lt;span&gt;new&lt;/span&gt; User(&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;&quot;Java4ye&quot;&lt;/span&gt;);&lt;br/&gt;ReferenceQueue&amp;lt;User&amp;gt; userReferenceQueue = &lt;span&gt;new&lt;/span&gt; ReferenceQueue&amp;lt;&amp;gt;();&lt;br/&gt;&lt;span&gt;// 创建User对象的虚引用&lt;/span&gt;&lt;br/&gt;PhantomReference&amp;lt;User&amp;gt; phantomReference = &lt;span&gt;new&lt;/span&gt; PhantomReference&amp;lt;&amp;gt;(user, userReferenceQueue);&lt;br/&gt;&lt;span&gt;// 去掉强引用&lt;/span&gt;&lt;br/&gt;user = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;System.out.println(phantomReference.get());&lt;br/&gt;&lt;span&gt;// 手动触发GC&lt;/span&gt;&lt;br/&gt;System.gc();&lt;br/&gt;System.out.println(&lt;span&gt;&quot;GC: &quot;&lt;/span&gt; + phantomReference.get());&lt;br/&gt;Reference&amp;lt;? extends User&amp;gt; reference = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;   reference = userReferenceQueue.remove(&lt;span&gt;1000&lt;/span&gt;);&lt;br/&gt;} &lt;span&gt;catch&lt;/span&gt; (InterruptedException e) {&lt;br/&gt;   e.printStackTrace();&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (reference != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;   System.out.println(&lt;span&gt;&quot;对象User被回收了:&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;对象可达性&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;那么 简单介绍完上面的 &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;4&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 种引用后，我们再来看看它的&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;可达性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;~&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;如图~&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://img.ryzeyang.top/image-20210621083333189.png&quot;&gt;&lt;img data-ratio=&quot;0.74235807860262&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYGGu1JGcLyrfM0fWECBsfibFVzPUetia0TlpGj3Byo8hQ39kEW2frGAibfbOkzZYRjJulm87Gcib11Uog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;687&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-2&quot; cid=&quot;n284&quot; mdtype=&quot;list&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;强可达&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：比如 创建一个对象时，创建它的线程对该对象就是强可达&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;软可达&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：只能通过软引用访问&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;弱可达&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：只能通过弱引用访问&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;虚可达&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：当对象没有 &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;强，软，弱&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 引用关联时，并且 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;finalize&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 过，就会进入该状态&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;不可达&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：意味着该对象可以被清除了。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;通过最开始的代码例子和上面的图（&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;双向箭头&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;）我们还可以发现，&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;软引用和弱引用和强引用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;这三者间可以进行转换( 通过 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;Reference&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 的 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 可获取到&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;原对象&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;)，这意味着:&lt;/span&gt;&lt;/section&gt;&lt;blockquote cid=&quot;n329&quot; mdtype=&quot;blockquote&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;对于软引用、弱引用之类，垃圾收集器可能会存在二次确认的问题，以保证处于弱引用状态的对象，没有改变为强引用。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;在 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;JDK8&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 中，还可以通过 指定参数打印引用的相关信息&lt;/span&gt;&lt;/section&gt;&lt;blockquote cid=&quot;n338&quot; mdtype=&quot;blockquote&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;-XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintReferenceGC&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;在 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;JDK8&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 中使用 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;ParrallelGC&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 收集的垃圾回收日志 （大佬 pdf 中的例子）&lt;/span&gt;&lt;/section&gt;&lt;blockquote cid=&quot;n343&quot; mdtype=&quot;blockquote&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;0.403: [GC (Allocation Failure) 0.871: [SoftReference, 0 refs, 0.0000393 secs]0.871: [WeakReference, 8 refs, 0.0000138 secs]0.871: [FinalReference, 4 refs, 0.0000094 secs]0.871:&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;[PhantomReference, 0 refs, 0 refs, 0.0000085 secs]0.871: &lt;/span&gt;&lt;span md-inline=&quot;reflink&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;JNI Weak Reference, 0.0000071 secs&lt;/span&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 128286K-&amp;gt;128422K(316928K), 0.4683919 secs] [Times:&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;user=1.17 sys=0.03, real=0.47 secs]&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;再记录下这个点👇（哈哈 不知道啥时候才会用上~）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;通过底层API来达到强引用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;👍&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://img.ryzeyang.top/image-20210621085544098.png&quot;&gt;&lt;img data-ratio=&quot;0.1564569536423841&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYGGu1JGcLyrfM0fWECBsfibFHx8L6354ahiahVVl7w5byj1KsacPy5U5QlbAvF4Kad8tPRURdwibKgbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1208&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;Springboot源码中的使用&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;嘿嘿  终于来到重点了 ，正如开头提到的~  &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;4ye&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 也是在 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;Springboot&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 源码中看到这个&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;ConcurrentReferenceHashMap&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 才想起要写一下这篇文章滴✍&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;那么这个 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;ConcurrentReferenceHashMap&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;  到底有什么作用呢？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;blockquote cid=&quot;n466&quot; mdtype=&quot;blockquote&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt; &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;ConcurrentReferenceHashMap&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;能指定所存放对象的引用级别&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;默认情况下是 &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;软引用级别&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://img.ryzeyang.top/image-20210621122940290.png&quot;&gt;&lt;img data-ratio=&quot;0.34301075268817205&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYGGu1JGcLyrfM0fWECBsfibFg6NR1Ptkx6TsfbX98luGgUzbRt8xlVRGztTOevHd9HlGpcicSaG19icA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;930&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;比如 在 &lt;/span&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;a spellcheck=&quot;false&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487780&amp;amp;idx=1&amp;amp;sn=618b88be9f5e81659a6a6ce4450972e8&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;Springboot自动装配原理探索&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 一文中提到的 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;Springboot SPI 机制&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 其中的主角：&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;SpringFactoriesLoader&lt;/code&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;源码如下：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://img.ryzeyang.top/image-20210621092032074.png&quot;&gt;&lt;img data-ratio=&quot;0.3282773564463705&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYGGu1JGcLyrfM0fWECBsfibFmS42AsEgvSrQVmqxQljZpUp5y0lpRGLc1oaDFTLdFOzVFSfNYV2r5A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;923&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;还有&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;自动配置过程中的注解扫描&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;AnnotationsScanner&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://img.ryzeyang.top/image-20210621093124042.png&quot;&gt;&lt;img data-ratio=&quot;0.3301549463647199&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYGGu1JGcLyrfM0fWECBsfibFpolv3sYqOk9oDwbPWoeumRC0chR3E5MbxK78dhMVITEniaQKNiaUsJcw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;839&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;/&gt;&lt;span md-inline=&quot;plain&quot;&gt;以及在 &lt;/span&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;a spellcheck=&quot;false&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487645&amp;amp;idx=1&amp;amp;sn=6e198d21ba7d07217535784f295b56af&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;万字长文，带你快速上手这些池化技术！&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 一文中出现的 &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;异步任务线程池&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;ThreadPoolTaskExecutor&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;  &lt;/span&gt;&lt;span md-inline=&quot;plain&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;源码如下：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; （可以看到这里指明了是 &lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;弱引用级别&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://img.ryzeyang.top/image-20210621092723147.png&quot;&gt;&lt;img data-ratio=&quot;0.4234592445328032&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYGGu1JGcLyrfM0fWECBsfibFauzOGFlG6vjJ71oiaJ6AAhqoDkNP5BdBDQglRgv6C37TjnhZT9icFHaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1006&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;总结&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-2&quot; cid=&quot;n510&quot; mdtype=&quot;list&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;看完上面的例子，觉得可以模仿下 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;Springboot&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 的 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;ConcurrentReferenceHashMap&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;  ，对对象进行一个合理的存储，间接地优化&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;jvm&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; ，提高垃圾回收的效率。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;这两个别记错啦😝：&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;软引用，内存不足时回收&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;；&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;弱引用，在进行垃圾回收时，不管内存足与否，都会被回收，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2 cid=&quot;n522&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;最后&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;欢迎小伙伴们来一起探讨问题~&lt;/span&gt;&lt;/section&gt;&lt;blockquote cid=&quot;n524&quot; mdtype=&quot;blockquote&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;如果你觉得本篇文章还不错的话，那&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;拜托再点点赞&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;支持一下呀😝&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;让我们开始这一场意外的相遇吧！~&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;欢迎留言！谢谢支持！ヾ(≧▽≦*)o 冲冲冲！！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;我是4ye 咱们下期应该……很快再见！！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 😆&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-recommend-type=&quot;list-title&quot; data-recommend-tid=&quot;6&quot; data-mpa-template=&quot;t&quot; data-mid=&quot;&quot; data-from=&quot;yb-recommend&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;往期推荐&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247487780_1&quot; data-recommend-article-time=&quot;1623893808&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zIjiaGEEKdYFJAKHwk0A4UZ6aR7icNwR53KBN4p7PQCkia1pKspJNac5hvgWFlsXfXUvAiakujW6ibhKadqEeBHvUmQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;Springboot自动装配原理探索&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487780&amp;amp;idx=1&amp;amp;sn=618b88be9f5e81659a6a6ce4450972e8&amp;amp;chksm=ce070c62f97085742a3e26a376065229be04e5527f89de599b71c33c5f9a1735c6fa74b698f7#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487780&amp;amp;idx=1&amp;amp;sn=618b88be9f5e81659a6a6ce4450972e8&amp;amp;chksm=ce070c62f97085742a3e26a376065229be04e5527f89de599b71c33c5f9a1735c6fa74b698f7&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;Springboot自动装配原理探索&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247487726_1&quot; data-recommend-article-time=&quot;1623420490&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zIjiaGEEKdYHicGhYCpJhx1lCWAZKWBvrXE8rUTZBZ8U96P7nKfZI7wKe5GnoKEpibicAfUB4nrkbiaEexOkPSHJRNw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;服务发现机制SPI居然是破坏者？！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487726&amp;amp;idx=1&amp;amp;sn=6bf3c4599c77152895d8684e842b0469&amp;amp;chksm=ce070da8f97084be2399915e747e291e088da0a91b28d4c469a3b0d358958a0393bbcafd0536#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487726&amp;amp;idx=1&amp;amp;sn=6bf3c4599c77152895d8684e842b0469&amp;amp;chksm=ce070da8f97084be2399915e747e291e088da0a91b28d4c469a3b0d358958a0393bbcafd0536&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;服务发现机制SPI居然是破坏者？！&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247487689_1&quot; data-recommend-article-time=&quot;1623163586&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zIjiaGEEKdYEUZPDhtZjdaQn036M1cgtUlXWOerFfQGqo1XgAe0SMqiazt2f50ib7pxFy4SGIObXK3xQA0jBgbPTg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;MySQL各大版本新特性一览&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487689&amp;amp;idx=1&amp;amp;sn=1c3d9fe81a771684e3ec55a84f655287&amp;amp;chksm=ce070d8ff9708499d2f5f4d8a1912ece0d915b84797917dd0f87ddc27f932c0c52e6ad3d3a71#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487689&amp;amp;idx=1&amp;amp;sn=1c3d9fe81a771684e3ec55a84f655287&amp;amp;chksm=ce070d8ff9708499d2f5f4d8a1912ece0d915b84797917dd0f87ddc27f932c0c52e6ad3d3a71&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;MySQL各大版本新特性一览&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247487670_1&quot; data-recommend-article-time=&quot;1622649064&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zIjiaGEEKdYHHyIf8Wibdzsv4a3y2c2MZ2OdGnDzXe73Nd4CdRuv36XCEF43XibpFRAHqibwusicIdsrz4FfmickgJxA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;一份Vue笔记，一个少年故事&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487670&amp;amp;idx=1&amp;amp;sn=0bef10ca5360531a9295f1819ae42a00&amp;amp;chksm=ce070df0f97084e602d651e9556abf80406900d6f4acf55f2a68a102f61c4f8243722b751288#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487670&amp;amp;idx=1&amp;amp;sn=0bef10ca5360531a9295f1819ae42a00&amp;amp;chksm=ce070df0f97084e602d651e9556abf80406900d6f4acf55f2a68a102f61c4f8243722b751288&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;一份Vue笔记，一个少年故事&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247487645_1&quot; data-recommend-article-time=&quot;1622482478&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zIjiaGEEKdYG66FkVGMP4iaeHAz4WxB9e0z3PzfwicYAtB4r8YaESuoFWf5waiaRdbh18p3ibcNnfgrIIGuNUIuIakA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;万字长文，带你快速上手这些池化技术！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487645&amp;amp;idx=1&amp;amp;sn=6e198d21ba7d07217535784f295b56af&amp;amp;chksm=ce070ddbf97084cdf80cf162c38fc18647072d2a1079c06c8289d028bd56470d311bdae23036#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487645&amp;amp;idx=1&amp;amp;sn=6e198d21ba7d07217535784f295b56af&amp;amp;chksm=ce070ddbf97084cdf80cf162c38fc18647072d2a1079c06c8289d028bd56470d311bdae23036&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;万字长文，带你快速上手这些池化技术！&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247487336_1&quot; data-recommend-article-time=&quot;1619968887&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zIjiaGEEKdYGicOvlN4usBDvvFqCWf5iakoabhdWSV34GnibYW0yswYKYDPvicltIdK6dmBOeo5iborI7LHKgqtuhISQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;站了5个小时换来的书单&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487336&amp;amp;idx=1&amp;amp;sn=2555ead60a4a965b0a1222d900b0ee86&amp;amp;chksm=ce07122ef9709b38fce40c665cdc7181920291785c19875fd5f96c0d296d2926a08f14cdcbca#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247487336&amp;amp;idx=1&amp;amp;sn=2555ead60a4a965b0a1222d900b0ee86&amp;amp;chksm=ce07122ef9709b38fce40c665cdc7181920291785c19875fd5f96c0d296d2926a08f14cdcbca&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;站了5个小时换来的书单&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247485996_1&quot; data-recommend-article-time=&quot;1615903076&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zIjiaGEEKdYGcWlu5ArFWeeiccmrvWIdYdVzhkBfh7Qia8gIGic1LbP6IEtB2XdGb9PJxKheF2xg96a2U7GpB7ag2Q/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;电子书网站和整理好的一份电子书单&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247485996&amp;amp;idx=1&amp;amp;sn=20e2728118f8e46a2d5e840da0c628fa&amp;amp;chksm=ce07176af9709e7cb593dad0446e75accd03b893f7e2bd16067e371ab735ec75870cea3881ae#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MjUzODc5Mw==&amp;amp;mid=2247485996&amp;amp;idx=1&amp;amp;sn=20e2728118f8e46a2d5e840da0c628fa&amp;amp;chksm=ce07176af9709e7cb593dad0446e75accd03b893f7e2bd16067e371ab735ec75870cea3881ae&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;电子书网站和整理好的一份电子书单&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg2MjUzODc5Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYFUAO47rDkQycV4q8RTDe4kKXORDlaNmjGLiaxZxbHdOJ32ict5W0wEejBficWOLqDYELibIe5IEdtzeA/0?wx_fmt=png&quot; data-nickname=&quot;Java4ye&quot; data-alias=&quot;Java4ye&quot; data-signature=&quot;定个小目标，写个3年先 ！！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f6b275433b48eb56f94f8dc470301d2e</guid>
<title>前端 debug 的奇技淫巧</title>
<link>https://toutiao.io/k/zeoi9mm</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么要写这个文章呢？其实发现很多同学对一些很简单又有效的 debug 手段都不太了解，找 bug 的方式都不是很高效，导致最终 bug 找不到或者走了很多弯路。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Devtools&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为前端开发，chrome 的 devtools 一定不陌生，下面讲一讲 devtools 里面 debug 的一些思路。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;breakpoint&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中断点是最最经常用到的，但很多同学都只用过默认的 breakpoint，其实还有其他两种。&lt;img data-ratio=&quot;0.43452380952380953&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lP9iauFI73z9DJ2gF7cgzibpubzawMyJ4YDyoqofgvUltU1QL5blibLARCicy7dzWNQTcunAiaicmL9UL2J9LHUdic8iaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;336&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;breakpoint&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当代码执行到该行代码时暂停&lt;img data-ratio=&quot;0.57847533632287&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lP9iauFI73z9DJ2gF7cgzibpubzawMyJ4YJgJ29MqOOLDdHJPVkfg5rQwIJuiaLGqsk3JhWu5RKROIHKqW88544pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;446&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;conditional breakpoint&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;条件断点，当表达式为 true 时才会暂停，下图是当变量&lt;code&gt;a === 1&lt;/code&gt;时才暂停。经典应用场景是当 bug 是偶现时，你需要知道入参什么的正不正常，你可以打一个你认为不正常的条件断点，看看是谁调用的。PS：值得注意的是，如果你的表达式报错，那这个断点就会不生效，需要甄别到底是报错引起的断点没进入还是真的没进入。&lt;img data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lP9iauFI73z9DJ2gF7cgzibpubzawMyJ4YTPxndeQqnzZJJwjKiaaR8Rtv8omSMOM5Zd5oS3GU2yQHic7Q5QcBCVCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;684&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;logpoint&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;日志断点，当代码执行到这里时，会在控制台输出你的表达式，不会暂停代码执行，下图是将 a 输出到控制台的例子。&lt;img data-ratio=&quot;0.4195804195804196&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lP9iauFI73z9DJ2gF7cgzibpubzawMyJ4YuABkjGic8iczWxq52iblfhn4kMVcbp8t3TPfGicuL35apbgZfs6W95ibUBQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;572&quot;/&gt;值得注意的是，当你在调试带有 sroucemap 的压缩后的代码，可能会产生你看到的变量名和实际运行时拿到的变量名不一样，此时可以在右侧 scope 找到你想要的真实变量名或者在 source 面板 disable 掉 js 的 sourcemap 后再打断点。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Performance&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当你做了一些操作，不确定到底执行了什么代码时，可以利用 performance 来捕获到底什么样的代码被执行了，结合你的具体情况，有时候也会找到线索，有意想不到的收获。&lt;img data-ratio=&quot;0.5431309904153354&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lP9iauFI73z9DJ2gF7cgzibpubzawMyJ4Y1WiaOjwMsAgMxhiaPVLv2GxXNEPLb6Pvcz0Nqk7z4nE7byUNpp7dNiaUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2504&quot;/&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;是谁动了我的代码&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经典面试题，如何找到是谁阻止了冒泡，直接在控制台输入下面的代码即可。经常用于寻找我绑定的事件为什么没有被触发。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;var tmpStopPropagation = MouseEvent.prototype.stopPropagation;&lt;br/&gt;&lt;br/&gt;MouseEvent.prototype.stopPropagation = &lt;span&gt;function&lt;/span&gt;(...args) {&lt;br/&gt;  console.trace(&lt;span&gt;&#x27;stopPropagation&#x27;&lt;/span&gt;);&lt;br/&gt;  tmpStopPropagation.call(this, ...args);&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面这个例子是找到到底是谁对容器进行了滚动，比如我们遇到一些页面跳动或者抖动的场景，寻找到底是谁滚动了容器，当然滚动还有其他方法会触发，比如&lt;code&gt;scrollIntoView&lt;/code&gt;，但思路都是一样的，代理这个方法即可。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;var tmpScrollTop = element.scrollTop;&lt;br/&gt;&lt;br/&gt;Object.defineProperty(element, &lt;span&gt;&#x27;scrollTop&#x27;&lt;/span&gt;, {&lt;br/&gt;  get: &lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; tmpScrollTop;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;set&lt;/span&gt;: &lt;span&gt;function&lt;/span&gt;(newVal) {&lt;br/&gt;    console.trace(&lt;span&gt;&#x27;scrollTop&#x27;&lt;/span&gt;);&lt;br/&gt;    tmpScrollTop = newVal;&lt;br/&gt;  }&lt;br/&gt;})&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;setTimeout&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我们在想要打断点的时候依赖鼠标或者键盘操作，如果你去 source 面板去点击暂定，那我的现场就没有了，那下面的代码会帮你解决问题。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;setTimeout(() =&amp;gt; {debugger;}, 4000);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有这样一种 case，比如我期望在我鼠标移动时看看某个变量值是多少，此时不要再傻傻的在代码里面添加 console.log，直接运行下面的代码，可以实时看到你想要的变量。这个方法比较像logpoint，不过不需要找源码去打断点，各有各的应用场景。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;setTimeout(() =&amp;gt; {console.log(yourInstance.getSomeValue());}, 100);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;SSR&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当你想要 debug 某个页面上 SSR 渲染的样式时，可以禁用掉 js 的执行，具体操作是打开 devtools 的 source 面板，然后 cmd+p，输入「&amp;gt;disable javascript」，按回车，然后刷新页面，你的页面就是纯 SSR 状态了。&lt;img data-ratio=&quot;0.23809523809523808&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lP9iauFI73z9DJ2gF7cgzibpubzawMyJ4YlHppDJibejkTWSPHYCC7xIV8RTQIZrZYlH4fax5G4l9tBLzZ6BXx0LQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;672&quot;/&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二分法&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个是终极 debug 方法，很少会用到，但也很通俗易懂，有一定应用场景。当你发现在某个版本之后你的代码出了问题，但又各种找不到思路，我只知道在 A 版本没问题，B 版本就有问题了，或者代码突然出了问题，又不知道是依赖了谁出的问题，就可以用这种方法。总的思路就是「控制变量」，你可以在代码中批量注释一些代码，然后验证问题还有没有，如果还在的话就继续注释，没有的话问题就出在被注释的代码里，比较像算法中的二分法。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何 debug 还有更多的技巧，我这里写的也只是一部分，如果有其他更好的思路欢迎留言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里分享一个号主平时记录的前端开发笔记站点，采用 Wordpress 搭建，风格有点类似维基百科，就连 Logo 也高度相似。内容主要以记录平时遇到的问题解决方法和一些感悟为主。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytpqZ32BswfPkmAJLzicoPGduFsic9lZOfT3ezF4M9Sxdn9Mz53J9diapUg4IicrzJK7RVCLb9SsRrTx3Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1058&quot;/&gt;&lt;/p&gt;&lt;p&gt;wiki.i-fanr.com&lt;/p&gt;&lt;p&gt;&lt;span&gt;- END -&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;91339&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;太空编程&lt;/section&gt;&lt;section&gt;&lt;span&gt;分享硬核的编程知识&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p hm_fix=&quot;381:638&quot;&gt;分享精彩，码上快乐。JavaScript已然上天，有朝一日实现太空编程！回复【pdf】更有海量的优质电子书供下载。&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA4NTU1OTMwMQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytp9eiaO3zQL2A6S35JlOVfxuVHias08HZc7ciaCgxP08J8sk5LbUZuHOVRHTCz0mXI6mX5nicc9bJVa2w/0?wx_fmt=png&quot; data-nickname=&quot;太空编程&quot; data-alias=&quot;spacexcode&quot; data-signature=&quot;分享精彩，码上快乐，JavaScript已然上天，有朝一日实现太空编程！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;center data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>bbfdab2215cc1a16b49a84b55206958e</guid>
<title>关于 MySQL MVCC 和面试官小战三十回合</title>
<link>https://toutiao.io/k/vni2awi</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我，小Y。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此刻，正坐在办公室里等待面试，心情xue微有点忐忑，不知道待会儿老面试官经不经得住我的折磨。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只见一抹光亮闪过，面试官推门而入，我抬头望去，强者的气息铺面而来，没错是那味儿。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8848484848484849&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBwaxuVjFzIworgbs73IiaagJEv0Bg1Fey9r94KXJhI7E1xSmPZkiaBttpg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;330&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到面试官头上那“傲然矗立”的头发，脑海中止不住幻想他在无数个凌晨于电脑前挑灯夜码的高大形象，一种敬佩感油然而生， 竟忍不住站起来给他敬了个礼。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.188118811881188&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBw4WeJYEibv2ZEnVo4Kia3DXdyq2NniauDQVWJsSXUlDr595JiaiadmoF4wEw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;303&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：有病？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：没没没，我谢顶反应综合征犯了，面试官好，我是小 Y ，请多多指教。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：哦哦，确实是有病啊，没事，记得吃药就行。我看你简历写你 MySQL 挺懂的，那我先问问你 MySQL 吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：好嘞，您请。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：你知道什么是 MySQL 的酸吗？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6890625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBwgGHAEyheKy4vgdhQZIQkmkpWpkEP4pngBdFticAt8GWmvwWa8mjD19g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一来就这么猛的吗？脑海中一顿搜索，只能想起张含韵的我喜欢酸的甜这就是真的我之《酸酸甜甜就是我》，算了蒙一个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：事务?&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：哟，最近好多谐音梗，我特意玩了个英语单词短语梗，脑子转的挺快啊小伙子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;酸，英文 acid，说的就是事务！这都蒙对了，等下就去买彩票！趁这个机会再表现一下！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：是啊，国外的人就有拼凑单词的习惯，&lt;span&gt;其实事务主要是为了实现 C ，也就是一致性，具体是通过AID，即原子性、隔离性和持久性来达到一致性的目的&lt;/span&gt;，所以这四个不应该相提并论，但是他们就想拼成单词，就把它们排好序搞在一起来念。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;嘿嘿，这个B装的我有点舒服，果然面试官有点惊讶。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：可以呀，那你知道 MVCC 吧？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：知道，Multi-Version  Concurrency Control （多版本并发控制）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：能先简短的解释下什么是 MVCC 吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：多版本并发控制，其实指的是一条记录会有多个版本，每次修改记录都会存储这条记录被修改之前的版本，多版本之间串联起来就形成了一条版本链。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样不同时刻启动的事务可以&lt;span&gt;无锁&lt;/span&gt;地获得不同版本的数据(普通读)。此时读(普通读)写操作不会阻塞，写操作可以继续写，无非就是多加了一个版本，历史版本记录可供已经启动的事务读取。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.47424242424242424&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBwkHficC7MXgWKfnhYR91Pv0g2lBumXOvIgmFCmJjo57MQibaBL2kTiaaDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;660&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（为保持简短，简化了SQL语句，下文也同样简化）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：那你知道事务四种隔离级别吧？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：读未提交、读已提交、可重复读、可串行化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：MVCC 用来实现哪几个隔离级别？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：用来&lt;span&gt;实现读已提交和可重复读&lt;/span&gt;。首先隔离级别如果是读未提交的话，直接读最新版本的数据就行了，压根就不需要保存以前的版本。可串行化隔离级别事务都串行执行了，所以也不需要多版本，因此 MVCC 是用来实现读已提交和可重复读的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：那为什么需要 MVCC ？如果没有 MVCC 会怎样？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：如果没有 MVCC 读写操作之间就会冲突。想象一下有一个事务1正在执行，此时一个事务2修改了记录A，还未提交，此时事务1要读取记录A，因为事务2还未提交，所以事务1无法读取最新的记录A，不然就是发生脏读的情况，所以应该读记录A被事务2修改之前的数据，但是记录A已经被事务2改了呀，所以事务1咋办？&lt;span&gt;只能用锁阻塞&lt;/span&gt;等待事务2的提交，这种实现叫 LBCC(Lock-Based Concurrent Control)。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9353796445880452&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBwR1TdchQiczmBfIC55Bn9kQdZ0ahvuDeOn79jfFCgtePJnPEG6gwP0Sg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;619&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果有多版本的话，就不一样了。事务2修改的记录 A，还未提交，但是记录 A 被修改之前的版本还在，此时事务1就可以读取之前的版本数据，这样&lt;span&gt;读写&lt;/span&gt;之间就不会阻塞啦，所以说 MVCC 提高了事务的并发度，提升数据库的性能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：你对这个多版本有没有什么别的理解？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：（面试官要开始操作我了吗？不过就这，我早有准备！）有点个人的小理解(假装谦虚)。其实这个多版本不是很准确，只是为了便于理解或者说展现出来像多版本的样子而已。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实际上 InnoDB 不会真的存储了多个版本的数据，只是借助 undolog 记录每次写操作的反向操作，所以索引上对应的记录只会有一个版本，即最新版本。只不过可以根据 undolog 中的记录反向操作得到数据的历史版本，所以看起来是多个版本。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8998330550918197&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBwsHFHKAicumYvibqWcMBH1uUSUTPzicNcgVL3WlrLKo6hHGWxic3qyKibI9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;599&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：那你能详细的说下 MVCC 是如何实现的吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：您听好啦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;拿上面的&lt;code&gt;insert （1，XX）&lt;/code&gt;这条语句举例，成功插入之后数据页的记录上不仅存储 ID 1，name XX，还有 trx_id 和 roll_pointer 这两个隐藏字段：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;trx_id：当前事务ID。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;roll_pointer：指向 undo log 的指针。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5794701986754967&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBwCrqYufDicwJkAgKcv6pUJqicRWlyHmGefufNBe9iaF2W0tXiaWLicXzGlsw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;604&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从图中可以得知此时插入的事务ID是1，此时插入会生成一条 undolog ，并且记录上的 roll_pointer 会指向这条 undolog ，而这条 undolog  是一个类型为&lt;code&gt;TRX_UNDO_INSERT_REC&lt;/code&gt;的 log，代表是 insert 生成的，里面存储了主键的长度和值(还有其他值，不提)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以 InnoDB 可以根据 undolog  里的主键的值，找到这条记录，然后把它删除来实现回滚(复原)的效果。因此可以简单地理解 undolog 里面存储的就是当前操作的反向操作，所以认为里面存了个&lt;code&gt;delete 1&lt;/code&gt; 就行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时&lt;span&gt;事务1提交&lt;/span&gt;，然后另一个 ID 为 5 的事务再执行 &lt;code&gt;update NO where id 1&lt;/code&gt; 这个语句，此时的记录和 undolog 就如下图所示：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6610169491525424&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBwzEUm7OnNVym2n5j0cL8Bp7SbIqTPTwmDDMKIZmagicLCUPc1LbjpMAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;649&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没错，之前 insert 产生的 undolog 没了，insert 的事务提交了之后对应的 undolog 就回收了，因为不可能有别的事务会访问比这还要早的版本了，访问插入之前的版本？访问个寂寞吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 update 产生的 undolog 不一样，它的类型为 &lt;code&gt;TRX_UNDO_UPD_EXIST_REC&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时&lt;span&gt;事务 5 提交&lt;/span&gt;，然后另一个 ID 为 11 的事务执行&lt;code&gt;update Yes where id 1&lt;/code&gt; 这个语句，此时的记录和 undolog 就如下图所示：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9973045822102425&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBw2hZ6pt4qhGjTshLicGFmsMibuCb5y0u8wVC6KoDVTUicxD5ncWvonryvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;742&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没错，update 产生的 undolog 不会马上删除，因为可能有别的事务需要访问之前的版本，所以不能删。这样就串成了一个版本链，可以看到记录本身加上两条 undolog，这条 id 为 1 的记录共有三个版本。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;版本链搞清楚了，这时候还需要知道一个概念 readView，这个 readView 就是用来判断哪个版本对当前事务可见的，这里有四个概念：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;creator_trx_id，当前事务ID。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;m_ids，生成 readView 时还活跃的事务ID集合，也就是已经启动但是还未提交的事务ID列表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;min_trx_id，当前活跃ID之中的最小值。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;max_trx_id，生成 readView 时 InnoDB 将分配给下一个事务的 ID 的值（事务 ID 是递增分配的，越后面申请的事务ID越大）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对于可见版本的判断是从最新版本开始沿着版本链逐渐寻找老的版本，如果遇到符合条件的版本就返回&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;判断条件如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果当前数据版本的 trx_id ==  creator_trx_id 说明修改这条数据的事务就是当前事务，所以可见。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果当前数据版本的 trx_id &amp;lt; min_trx_id，说明修改这条数据的事务在当前事务生成 readView 的时候已提交，所以可见。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果当前数据版本的 trx_id 在 m_ids 中，说明修改这条数据的事务此时还未提交，所以不可见。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果当前数据版本的 trx_id &amp;gt;= max_trx_id，说明修改这条数据的事务在当前事务生成 readView 的时候还未启动，所以不可见(结合事务ID递增来看)。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;来看一个简单的案例，练一练上面的规则。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;读已提交隔离级别下的MVCC&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;现在的隔离级别是读已提交&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设&lt;span&gt;此时上文的事务1已经提交，事务 5 已经执行，但还未提交&lt;/span&gt;，此时有另一个事务在执行&lt;code&gt;update YY where id 2&lt;/code&gt;，也未提交，它的事务 ID 为 6，且也是现在最大的事务 ID。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在有一个查询开启了事务，语句为&lt;code&gt;select name where id 1&lt;/code&gt;，那么这个查询语句：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;此时 creator_trx_id 为 0，因为一个事务只有当有修改操作的时候才会被分配事务 ID。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;此时 m_ids 为 [5，6]，这两个事务都未提交，为活跃的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;此时 min_trx_id，为 5。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;此时 max_trx_id，为 7，因为最新分配的事务 ID 为 6，那么下一个就是7，事务 ID 是递增分配的。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于查询的是 ID 为 1 的记录，所以先找到 ID 为 1 的这条记录，此时的版本如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6671899529042387&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBw3CvgT16f5FEddGfffRPMEysWBp81HUbJmicNECXu1rBAugooJjCRXNw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;637&quot;/&gt;&lt;figcaption&gt;和上面的图一样&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时最新版本的记录上 trx_id 为 5，不比 min_trx_id 小，在 m_ids 之中，表明还是活跃的，未提交，所以不可访问，根据 roll_pointer 找到上一个版本。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是找到了图上的那条 undolog，这条log上面记录的 trx_id 为 1，比 min_trx_id 还小，说明在生成 readView 的时候已经提交，所以可以访问，因此返回结果 name 为 XX。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;然后事务 5 提交&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时&lt;span&gt;再次查询&lt;/span&gt; &lt;code&gt;select name where id 1&lt;/code&gt;，这时候又会&lt;span&gt;生成新的 readView&lt;/span&gt;。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;此时 creator_trx_id 为 0，因为还是没有修改操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;此时 m_ids 为 [6]，因为事务5提交了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;此时 min_trx_id，为 6。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;此时 max_trx_id，为 7，此时没有新的事务申请。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同样还是查询的是 ID 为 1 的记录，所以还是先找到 ID 为 1 的这条记录，此时的版本如下(和上面一样，没变)：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6671899529042387&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBw3CvgT16f5FEddGfffRPMEysWBp81HUbJmicNECXu1rBAugooJjCRXNw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;637&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时最新版本的记录上 trx_id 为 5，比 min_trx_id 小，说明事务已经提交了，是可以访问的，因此返回结果 name 为 NO。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这就是读已提交的 MVCC 操作&lt;/span&gt;，可以看到一个事务中的两次查询得到了不同的结果，所以也叫不可重复读。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;可重复读隔离级别下的MVCC&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;现在的隔离级别是可重复读&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可重复读和读已提交的 MVCC 判断版本的过程是一模一样的，&lt;span&gt;唯一的差别在生成 readView 上&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的读已提交每次查询都会重新生成一个新的 readView ，而可重复读在第一次生成  readView 之后的所有查询都共用同一个 readView 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是说&lt;span&gt;可重复读&lt;/span&gt;只会在第一次 &lt;span&gt;select &lt;/span&gt;时候生成一个 readView ，所以一个事务里面不论有几次 select ，其实看到的都是同一个 readView 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;套用上面的情况，差别就在&lt;span&gt;第二次&lt;/span&gt;执行&lt;code&gt;select name where id 1&lt;/code&gt;，不会生成新的 readView，而是用之前的 readView，所以第二次查询时：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;m_ids 还是为 [5，6]，虽说事务 5 此时已经提交了，但是这个readView是在事务5提交之前生成的，所以当前还是认为这两个事务都未提交，为活跃的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;此时 min_trx_id，为 5。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(对于判断过程有点卡顿的同学可以再拉上去看看，判断版本的过程和读已提交一致)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以在可重复级别下，两次查询得到的 name 都为 XX，所以叫&lt;span&gt;可重复读&lt;/span&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说完之后，我对面试官挑了挑眉。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9166666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eSdk75TK4nFQRcyKribkGLAdbs84qGjBwxBciaEMDZBSu6u0cDwA4fg4A2GrNliaD0JYLyZAafzbWXezRopwrER7g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;108&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官瞥了我一眼：可以，那按你这么说其实 undolog 算是热点资源，多个事务不就会争抢 undolog 了吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：对呀，所以为了提高 undolog 的写入性能，每个事务都有属于自己的 undolog 页面链表，这样就提高了写入并发度啦，再细一点就是 insert 类型的 undolog 和 update 类型的 undolog 属于不同的链表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：还能细吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：再细一点就是普通表和临时表各有一条 insert 类型的 undolog 和 update 类型的 undolog ，所以最多一个事务可以有四条 undolog 页面链表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之所以分普通表和临时表是因为普通表的 undolog 写入是需要记录到redolog 中的需要保证崩溃恢复，而临时表则不需要记录，反正就是临时的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：对了，你上面说 insert 和 update ，那 delete 呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：delete 其实是属于 update 的，不过分了好几种情况，反正 delete 只会给记录上打个标记，表明这条记录被删除了，不会马上删除这条记录，因为记录还得存着给别的事务作为版本链访问呢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：那这条被删除的记录就永远存在了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：不会的，后台有一个 purge 线程，如果探测出当前没有事务会访问这个记录了，就会把它真正的删除。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：你这么细，应该没有女朋友的吧？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：（？？？，不对，面试官应该没有人身攻击我，只是说我天天刻苦学习，没时间找女朋友，但是我还是有点不爽）没呢，面试官您头发这么多，应该也还没找到吧？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“我在仰望，月亮之上....”，此时面试官手机响起。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：“喂，亲爱的，来了来了，马上下班了，待会老地方见哈。”那啥我有点事，你先回去吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：（？？？小丑竟是我自己)好嘞好嘞。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：对了，这一面还没结束，undolog看你挺熟的，下次详细问你，还有 MySQL 锁啊我都还没问，等通知下次再来吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我：（还给我布置家庭作业呢？）我一定回去好好准备准备，等待您的宠幸。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这老面试官可以，竟然没折磨到他，等着，下次 undolog 和  MySQL 锁我一定好好招待他！&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我的&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkxNTE3NjQ3MA==&amp;amp;mid=2247489472&amp;amp;idx=2&amp;amp;sn=20da41118ddb4208d57e16eceea677c3&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;一对一解答服务&lt;/a&gt;持续开放，不走知识星球直接私聊我。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;个人微信：yes_oba&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;推荐阅读：《从根儿上理解 MySQL》&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天的分享到此结束，等我下篇哈，如果觉得文章不错。来个点赞、在看、分享三连哟！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我是yes，从一点点到亿点点，我们下篇见。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>