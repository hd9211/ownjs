<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>ad74e7676957b46695d55c75973fcfc1</guid>
<title>2021 年快结束了！抓紧啦！</title>
<link>https://toutiao.io/k/809c4m6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;开发者头条&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;kaifazhetoutiao&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;程序员分享平台 | 官方应用下载地址：http://toutiao.io/download&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8b44d087fb6ef8e17f47039d8d0f2695</guid>
<title>插件式可扩展架构设计心得</title>
<link>https://toutiao.io/k/w43usss</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-tool=&quot;mdnice编辑器&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;大家可能不知道，鄙人之前人送外号“过度设计”。作为一个自信的研发人员，我总是希望我开发的系统可以解决之后所有的问题，用一套抽象可以覆盖之后所有的扩展场景。当然最终往往能够证明我的愚昧与思虑不足。先知曾说过“当一个东西什么都可以做时，他往往什么都做不了”。过度的抽象，过度的开放性，往往让接触他的人无所适从。讲到这里你可能以为我要开始讲过度设计这个主题了，但其实不然，我只是想以这个话题作为引子，和大家讨论一下关于设计一个插件架构我是如何思考的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;为什么需要插件&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们的软件系统往往是要面向持续性的迭代的，在开发之初很难把所有需要支持的功能都想清楚，有时候还需要借助社区的力量去持续生产新的功能点，或者优化已有的功能。这就需要我们的软件系统具备一定的可扩展性。插件模式就是我们常常选用的方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事实上，现存的大量软件系统或工具都是使用插件方式来实现可扩展性的。比如大家最熟悉的小可爱——VSCode，其插件拥有量已经超越了他的前辈 Atom，发布到市场中的数量目前是 24894 个。这些插件帮助我们定制编辑器的外观或行为，增加额外功能，支持更多语法类型，大大提升了开发效率，同时也不断拓展着自身的用户群体。又或者是我们熟知的浏览器 Chrome，其核心竞争力之一也是丰富的插件市场，使其不论是对开发者还是普通使用者都已成为了不可获取的一个工具。另外还有 Webpack、Nginx 等等各种工具，这边就不一一赘述了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据目前各个系统的插件设计，总结下来，我们创造插件主要是帮助我们解决以下两种类型的问题：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时，在解决上面这类问题的时候做到：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;插件代码与系统代码在工程上解耦，可以独立开发，并对开发者隔离框架内部逻辑的复杂度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可动态化引入与配置&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并且进一步地可以实现：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;通过对多个单一职责的插件进行组合，可以实现多种复杂逻辑，实现逻辑在复杂场景中的复用&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里提到的不管是提供新能力，还是进行能力定制，都既可以针对系统开发者本身，也可以针对三方开发者。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结合上面的特征，我们尝试简单描述一下插件是什么吧。插件一般是可独立完成某个或一系列功能的模块。一个插件是否引入一定不会影响系统原本的正常运行（除非他和另一个插件存在依赖关系）。插件在运行时被引入系统，由系统控制调度。一个系统可以存在复数个插件，这些插件可通过系统预定的方式进行组合。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;怎么实现插件模式&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件模式本质是一种设计思想，并没有一个一成不变或者是万金油的实现。但我们经过长期的代码实践，其实已经可以总结出一套方法论来指导插件体系的实现，并且其中的一些实现细节是存在社区认可度比较高的“最佳实践”的。本文在攥写过程中也参考研读了社区比较有名的一些项目的插件模式设计，包括但不仅限于 Koa、Webpack、Babel 等。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1. 解决问题前首先要定义问题&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现一套插件模式的第一步，永远都是先定义出你需要插件化来帮助你解决的问题是什么。这往往是具体问题具体分析的，并总是需要你对当前系统的能力做一定程度的抽象。比如 Babel，他的核心功能是将一种语言的代码转化为另一种语言的代码，他面临的问题就是，他无法在设计时就穷举语法类型，也不了解应该如何去转换一种新的语法，因此需要提供相应的扩展方式。为此，他将自己的整体流程抽象成了 parse、transform、generate 三个步骤，并主要面向 parse 和 transform 提供了插件方式做扩展性支持。在 parse 这层，他核心要解决的问题是怎么去做分词，怎么去做词义语法的理解。在 transform 这层要做的则是，针对特定的语法树结构，应该如何转换成已知的语法树结构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很明显，babel 他很清楚地定义了 parse 和 transform 两层的插件要完成的事情。当然也有人可能会说，为什么我一定要定义清楚问题呢，插件体系本来就是为未来的不确定性服务的。这样的说法对，也不对。计算机程序永远是面向确定性的，我们需要有明确的输入格式，明确的输出格式，明确的可以依赖的能力。解决问题一定是在已知的一个框架内的。这就引出了定义问题的一门艺术——如何赋予不确定以确定性，在不确定中寻找确定。说人话，就是“抽象”，这也是为什么最开始我会以过度设计作为引子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我在进行问题定义的时候，最常使用的是样本分析法，这种方法并非捷径，但总归是有点效的。样本分析法，就是先着眼于整理已知待解决的问题，将这些问题作为样本尝试分类和提取共性，从而形成一套抽象模式。然后再通过一些不确定但可能未来待解决的问题来测试，是否存在无法套用的情况。光说无用，下面我们还是以 babel 来举个栗子，当然 babel 的抽象设计其实本质就是有理论支撑的，在有现有理论已经为你做好抽象时，还是尽量用现成的就好啦。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2803970223325062&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsjkKMN49ZPwHNP5Y922CGvgibPq7WYWUP0L2liaRWBRKUEVdqu6eb7q7Tw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;806&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Babel 主要解决的问题是把新语法的代码在不改变逻辑的情况下如何转换成旧语法的代码，简单来说就是 code =&amp;gt; code 的一个问题。但是需要转什么，怎么转，这些是会随着语法规范不断更新变化的，因此需要使用插件模式来提升其未来可拓展性。我们当下要解决的问题也许是如何转换 es6 新语法的内容，以及 JSX 这种框架定制的 DSL。我们当然可以简单地串联一系列的正则处理，但是你会发现每一个插件都会有大量重复的识别分析类逻辑，不但加大了运行开销，同时也很难避免互相影响导致的问题。Babel 选择了把解析与转换两个动作拆开来，分别使用插件来实现。解析的插件要解决的问题是如何解析代码，把 Code 转化为 AST。这个问题对于不同的语言又可以拆解为相同的两个事情，如何分词，以及如何做词义解析。当然词义解析还能是如何构筑上下文、如何产出 AST 节点等等，就不再细分了。最终形成的就是下图这样的模式，插件专注解决这几个细分问题。转换这边的，则可分为如何查找固定 AST 节点，以及如何转换，最终形成了 Visitor 模式，这里就不再详细说了。那么我们再思考一下，如果未来 ES7、8、9（相对于设计场景的未来）等新语法出炉时，是不是依然可以使用这样的模式去解决问题呢？看起来是可行的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1182432432432432&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsjZTAYZPftFcq2fhdlphSdF3aJzgSoI79wj8acrT08grRYsJHBRaLfeg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;296&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就是前面所说的在不确定中寻找确定性，尽可能减少系统本身所面临的不确定，通过拆解问题去限定问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么定义清楚问题，我们大概就完成了 1/3 的工作了，下面就是要正式开始思考如何设计了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2. 插件架构设计绕不开的几大要素&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件模式的设计，可以简单也可以复杂，我们不能指望一套插件模式适合所有的场景，如果真的可以的话，我也不用写这篇文章了，给大家甩一个 npm 地址就完事了。这也是为什么在设计之前我们一定要先定义清楚问题。具体选择什么方式实现，一定是根据具体解决的问题权衡得出的。不过呢，这事终归还是有迹可循，有法可依的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当正式开始设计我们的插件架构时，我们所要思考的问题往往离不开以下几点。整个设计过程其实就是为每一点选择合适的方案，最后形成一套插件体系。这几点分别是：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如何注入、配置、初始化插件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;插件如何影响系统&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;插件输入输出的含义与可以使用的能力&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;复数个插件之间的关系是怎么样的&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面就针对每个点详细解释一下&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;如何注入、配置、初始化插件&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注入、配置、初始化其实是几个分开的事情。但都同属于 Before 的事情，所以就放在一起讲了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先来讲一讲&lt;strong&gt;注入&lt;/strong&gt;，其实本质上就是如何让系统感知到插件的存在。注入的方式一般可以分为 声明式 和 编程式。声明式就是通过配置信息，告诉系统应该去哪里去取什么插件，系统运行时会按照约定与配置去加载对应的插件。类似 Babel，可以通过在配置文件中填写插件名称，运行时就会去 modules 目录下去查找对应的插件并加载。编程式的就是系统提供某种注册 API，开发者通过将插件传入 API 中来完成注册。两种对比的话，声明式主要适合自己单独启动不用接入另一个软件系统的场景，这种情况一般使用编程式进行定制的话成本会比较高，但是相对的，对于插件命名和发布渠道都会有一些限制。编程式则适合于需要在开发中被引入一个外部系统的情况。当然也可以两种方式都进行支持。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后是插件&lt;strong&gt;配置&lt;/strong&gt;，配置的主要目的是实现插件的可定制，因为一个插件在不同使用场景下，可能对于其行为需要做一些微调，这时候如果每个场景都去做一个单独的插件那就有点小题大作了。配置信息一般在注入时一起传入，很少会支持注入后再进行重新配置。配置如何生效其实也和插件初始化的有点关联，初始化这事可以分为方式和时机两个细节来讲，我们先讲讲方式。常见的方式我大概列举两种。一种是工厂模式，一个插件暴露出来的是一个工厂函数，由调用者或者插件架构来将提供配置信息传入，生成插件实例。另一种是运行时传入，插件架构在调度插件时会通过约定的上下文把配置信息给到插件。工厂模式咱们继续拿 babel 来举例吧。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;declare&lt;/span&gt;&amp;lt;&lt;br/&gt;    &lt;span&gt;O&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;Record&lt;/span&gt;&amp;lt;&lt;span&gt;string&lt;/span&gt;, &lt;span&gt;any&lt;/span&gt;&amp;gt;,&lt;br/&gt;    &lt;span&gt;R&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;babel&lt;/span&gt;.&lt;span&gt;PluginObj&lt;/span&gt; = &lt;span&gt;babel&lt;/span&gt;.&lt;span&gt;PluginObj&lt;/span&gt;&lt;br/&gt;&amp;gt;(&lt;span&gt;&lt;br/&gt;    builder: (api: BabelAPI, options: O, dirname: string&lt;/span&gt;) =&amp;gt; &lt;span&gt;R&lt;/span&gt;,&lt;br/&gt;): (&lt;span&gt;api: object, options: O | null | undefined, dirname: string&lt;/span&gt;) =&amp;gt; &lt;span&gt;R&lt;/span&gt;;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面代码中的 builder 呢就是我们说到的工厂函数了，他最终将产出一个 Plugin 实例。builder 通过 options 获取到配置信息，并且这里设计上还支持通过 api 设置一些运行环境信息，不过这并不是必须的，所以不细说了。简化一下就是：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; TPluginFactory&amp;lt;OPTIONS, PLUGIN&amp;gt; = &lt;span&gt;(&lt;span&gt;options: OPTIONS&lt;/span&gt;) =&amp;gt;&lt;/span&gt; PLUGIN;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以&lt;strong&gt;初始化&lt;/strong&gt;呢，自然也可以是通过调用工厂函数初始化、初始化完成后再注入、不需要初始化三种。一般我们不选择初始化完成后再注入，因为解耦的诉求，我们尽量在插件中只做声明。是否使用工厂模式则看插件是否需要初始化这一步骤。大部分情况下，如果你决定不好，还是推荐优先选择工厂模式，可以应对后面更多复杂场景。初始化的时机也可以分为注入即初始化、统一初始化、运行时才初始化。很多情况下 注入即初始化、统一初始化 可以结合使用，具体的区分我尝试通过一张表格来对应说明：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.25625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsj7qsmibSiaicSYNBcrbnSBVmibDZ7O0HgwLFZE0pbMXEazIbIWsYRbNN1QQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1440&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外还有个问题也在这里提一下，在一些系统中，我们可能依赖许多插件组合来完成一件复杂的事情，为了屏蔽单独引入并配置插件的复杂性，我们还会提供一种 Preset 的概念，去打包多个插件及其配置。使用者只需要引入 Preset 即可，不用关心里面有哪些插件。例如 Babel 在支持 react 语法时，其实要引入 &lt;code&gt;syntax-jsx&lt;/code&gt; &lt;code&gt;transform-react-jsx&lt;/code&gt; &lt;code&gt;transform-react-display-name&lt;/code&gt; &lt;code&gt;transform-react-pure-annotationsd&lt;/code&gt; 等多个插件，最终给到的是 &lt;code&gt;preset-react&lt;/code&gt;这样一个包。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;插件如何影响系统&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件对系统的影响我们可以总结为三方面：&lt;strong&gt;行为、交互、展示&lt;/strong&gt;。单独一个插件可能只涉及其中一点。根据具体场景，有些方面也不必去影响，比如一个逻辑引擎类型的系统，就大概率不需要展示这块的东西啦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;VSCode 插件大致覆盖了这三个，所以我们可以拿一个简单的插件来看下。这里我们选择了 Clock in status bar 这个插件，这个插件的功能很简单，就是在状态栏加一个时钟，或者你可以在编辑内容内快速插入当前时间。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.05778894472361809&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsjoSZrYqJIYXdIib0GK76peVJkFYGSnyCuic31IpnryM9r0sK49FA7rObQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;796&quot;/&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4491803278688525&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsjfWFUeTUjSCHhFM66Iaz6ibTZ2QhTN7vSgF19uecrHrbWcvwgtcQzyibg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;610&quot;/&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个项目里最主要的是下面这些内容：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.3868312757201646&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsj9stPX4ic61shAfpHPCGibEaThXlra75Hf8A4evxQUn0hngI9qIXbRwxw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;243&quot;/&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 package.json 中，通过扩展的 contributes 字段为插件注册了一个命令，和一个配置菜单。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&quot;main&quot;&lt;/span&gt;: &lt;span&gt;&quot;./extension&quot;&lt;/span&gt;, &lt;span&gt;// 入口文件地址&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&quot;contributes&quot;&lt;/span&gt;: {&lt;br/&gt;  &lt;span&gt;&quot;commands&quot;&lt;/span&gt;: [{&lt;br/&gt;    &lt;span&gt;&quot;command&quot;&lt;/span&gt;: &lt;span&gt;&quot;clock.insertDateTime&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;title&quot;&lt;/span&gt;: &lt;span&gt;&quot;Clock: Insert date and time&quot;&lt;/span&gt;&lt;br/&gt;  }],&lt;br/&gt;  &lt;span&gt;&quot;configuration&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;object&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;title&quot;&lt;/span&gt;: &lt;span&gt;&quot;Clock configuration&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;properties&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;clock.dateFormat&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;string&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;default&quot;&lt;/span&gt;: &lt;span&gt;&quot;hh:MM TT&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;description&quot;&lt;/span&gt;: &lt;span&gt;&quot;Clock: Date format according to https://github.com/felixge/node-dateformat&quot;&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;},&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在入口文件 extension.js 中则通过系统暴露的 API 创建了状态栏的 UI，并注册了命令的具体行为。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&#x27;use strict&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// The module &#x27;vscode&#x27; contains the VS Code extensibility API&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// Import the module and reference it with the alias vscode in your code below&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt;&lt;br/&gt;  clockService = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;./clockservice&#x27;&lt;/span&gt;),&lt;br/&gt;  ClockStatusBarItem = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;./clockstatusbaritem&#x27;&lt;/span&gt;),&lt;br/&gt;  vscode = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;vscode&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// this method is called when your extension is activated&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// your extension is activated the very first time the command is executed&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;activate&lt;/span&gt;(&lt;span&gt;context&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;// Use the console to output diagnostic information (console.log) and errors (console.error)&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// This line of code will only be executed once when your extension is activated&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// The command has been defined in the package.json file&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// Now provide the implementation of the command with  registerCommand&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// The commandId parameter must match the command field in package.json&lt;/span&gt;&lt;br/&gt;  context.subscriptions.push(&lt;span&gt;new&lt;/span&gt; ClockStatusBarItem());&lt;br/&gt;&lt;br/&gt;  context.subscriptions.push(vscode.commands.registerTextEditorCommand(&lt;span&gt;&#x27;clock.insertDateTime&#x27;&lt;/span&gt;, (textEditor, edit) =&amp;gt; {&lt;br/&gt;    textEditor.selections.forEach(&lt;span&gt;&lt;span&gt;selection&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;const&lt;/span&gt;&lt;br/&gt;        start = selection.start,&lt;br/&gt;        end = selection.end;&lt;br/&gt;&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (start.line === end.line &amp;amp;&amp;amp; start.character === end.character) {&lt;br/&gt;        edit.insert(start, clockService());&lt;br/&gt;      } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        edit.replace(selection, clockService());&lt;br/&gt;      }&lt;br/&gt;    });&lt;br/&gt;  }));&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;exports.activate = activate;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// this method is called when your extension is deactivated&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;deactivate&lt;/span&gt;(&lt;span/&gt;) &lt;/span&gt;{&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;exports.deactivate = deactivate;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上述这个例子有点大块儿，有点稍显粗糙。那么总结下来我们看一下，在最开始我们提到的三个方面分别是如何体现的。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;UI：我们通过系统 API 创建了一个状态栏组件。我们通过配置信息构建了一个 配置页。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;交互：我们通过注册命令，增加了一项指令交互。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;逻辑：我们新增了一项插入当前时间的能力逻辑。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以我们在设计一个插件架构时呢，也主要就从这三方面是否会被影响考虑即可。那么插件又怎么去影响系统呢，这个过程的前提是插件与系统间建立一份契约，约定好对接的方式。这份契约可以包含文件结构、配置格式、API 签名。还是结合 VSCode 的例子来看看：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;文件结构：沿用了 NPM 的传统，约定了目录下 package.json 承载元信息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;配置格式：约定了 main 的配置路径作为代码入口，私有字段 contributes 声明命令与配置。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;API 签名：约定了扩展必须提供 activate 和 deactivate 两个接口。并提供了 vscode 下各项 API 来完成注册。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;UI 和 交互的定制逻辑，本质上依赖系统本身的实现方式。这里重点讲一下一般通过哪些模式，去调用插件中的逻辑。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;直接调用&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个模式很直白，就是在系统的自身逻辑中，根据需要去调用注册的插件中约定的 API，有时候插件本身就只是一个 API。比如上面例子中的 activate 和 deactivate 两个接口。这种模式很常见，但调用处可能会关注比较多的插件处理相关逻辑。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;钩子机制（事件机制）&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统定义一系列事件，插件将自己的逻辑挂载在事件监听上，系统通过触发事件进行调度。上面例子中的 clock.insertDateTime 命令也可以算是这类，是一个命令触发事件。在这个机制上，webpack 是一个比较明显的例子，我们来看一个简单的 webpack 插件：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 一个 JavaScript 命名函数。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;MyExampleWebpackPlugin&lt;/span&gt;(&lt;span/&gt;) &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 在插件函数的 prototype 上定义一个 `apply` 方法。&lt;/span&gt;&lt;br/&gt;MyExampleWebpackPlugin.prototype.apply = &lt;span&gt;&lt;span&gt;function&lt;/span&gt;(&lt;span&gt;compiler&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;// 指定一个挂载到 webpack 自身的事件钩子。&lt;/span&gt;&lt;br/&gt;  compiler.plugin(&lt;span&gt;&#x27;webpacksEventHook&#x27;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;function&lt;/span&gt;(&lt;span&gt;compilation &lt;span&gt;/* 处理 webpack 内部实例的特定数据。*/&lt;/span&gt;, callback&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&quot;This is an example plugin!!!&quot;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 功能完成后调用 webpack 提供的回调。&lt;/span&gt;&lt;br/&gt;    callback();&lt;br/&gt;  });&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的插件就将“在 console 打印 This is an example plugin!!!”这一行为注册到了 webpacksEventHook 这个钩子上，每当这个钩子被触发时，会调用一次这个逻辑。这种模式比较常见，webpack 也专门做了一份封装服务这个模式，https://github.com/webpack/tapable。通过定义了多种不同调度逻辑的钩子，你可以在任何系统中植入这款模式，并能满足你不同的调度需求（调度模式我们在下一部分中详细讲述）。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; {&lt;br/&gt;    SyncHook,&lt;br/&gt;    SyncBailHook,&lt;br/&gt;    SyncWaterfallHook,&lt;br/&gt;    SyncLoopHook,&lt;br/&gt;    AsyncParallelHook,&lt;br/&gt;    AsyncParallelBailHook,&lt;br/&gt;    AsyncSeriesHook,&lt;br/&gt;    AsyncSeriesBailHook,&lt;br/&gt;    AsyncSeriesWaterfallHook&lt;br/&gt;} = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&quot;tapable&quot;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3798611111111111&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsjhgRMrf0oN2tVdLRV1K65XuoiaDocMfiaMibpb0KAq8UAaWA2a437smsXA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1440&quot;/&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;钩子机制适合注入点多，松耦合需求高的插件场景，能够减少整个系统中插件调度的复杂度。成本就是额外引了一套钩子机制了，不算高的成本，但也不是必要的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;使用者调度机制&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种模式本质就是将插件提供的能力，统一作为系统的额外能力对外透出，最后又系统的开发使用者决定什么时候调用。例如 JQuery 的插件会注册 fn 中的额外行为，或者是 Egg 的插件可以向上下文中注册额外的接口能力等。这种模式我个人认为比较适合又需要定制更多对外能力，又需要对能力的出口做收口的场景。如果你希望用户通过统一的模式调用你的能力，那大可尝试一下。你可以尝试使用新的 Proxy 特性来实现这种模式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不管是系统对插件的调用还是插件调用系统的能力，我们都是需要一个确定的输入输出信息的，这也是我们上面 API 签名所覆盖到的信息。我们会在下一部分专门讲一讲。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;插件输入输出的含义与可以使用的能力&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;插件与系统间最重要的契约就是 API 签名，这涉及了可以使用哪些 API，以及这些 API 的输入输出是什么。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;可以使用的能力&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是指插件的逻辑可以使用的公共工具，或者可以通过一些方式获取或影响系统本身的状态。能力的注入我们常使用的方式是参数、上下文对象或者工厂函数闭包。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;提供的能力类型主要有下面四种：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;纯工具：不影响系统状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;获取当前系统状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;修改当前系统状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;API 形式注入功能：例如注册 UI，注册事件等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于需要提供哪些能力，一般的建议是根据插件需要完成的工作，提供最小够用范围内的能力，尽量减少插件破坏系统的可能性。在部分场景下，如果不能通过 API 有效控制影响范围，可以考虑为插件创造沙箱环境，比如插件内可能会调用 global 的接口等。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输入输出&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当我们的插件是处在我们系统一个特定的处理逻辑流程中的（常见于直接调用机制或钩子机制），我们的插件重点关注的就是输入与输出。此时的输入与输出一定是由逻辑流程本身所处的逻辑来决定的。输入输出的结构需要与插件的职责强关联，尽量保证可序列化能力（为了防止过度膨胀以及本身的易读性），并根据调度模式有额外的限制条件（下面会讲）。如果你的插件输入输出过于复杂，可能要反思一下抽象是否过于粗粒度了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外还需要对插件逻辑保证异常捕捉，防止对系统本身的破坏。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还是 Babel Parser 那个例子。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;  parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression;&lt;br/&gt;  getTokenFromCode(code: number): &lt;span&gt;void&lt;/span&gt;; &lt;span&gt;// 内部再调用 finishToken 来影响逻辑&lt;/span&gt;&lt;br/&gt;  updateContext(prevType: TokenType): &lt;span&gt;void&lt;/span&gt;; &lt;span&gt;// 内部通过修改 this.state 来改变上下文信息&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;*&lt;strong&gt;意料之中的输入，坚信不疑的输出*&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;复数个插件之间的关系是怎么样的&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Each plugin should only do a small amount of work, so you can connect them like building blocks. You may need to combine a bunch of them to get the desired result.&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里我们讨论的是，在同一个扩展点上注入的插件，应该以什么形式做组合。常见的形式如下：&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;覆盖式&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只执行最新注册的逻辑，跳过原始逻辑&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.23237179487179488&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsjVwYLforgOmD8gr22H9dX4979hjBOhpiaX0rGmSOhJCIib9FeW6Ig3Txw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;624&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;管道式&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输入输出相互衔接，一般输入输出是同一个数据类型。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.21621621621621623&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsjoH1IUzYr4oEzoxlQ7FIUwmZiasAkf3QWpnuPL9fOZvSq49HE50avZBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;592&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;洋葱圈式&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在管道式的基础上，如果系统核心逻辑处于中间，插件同时关注进与出的逻辑，则可以使用洋葱圈模型。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.30514096185737977&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsjANP9Fn5j4ibq8m8ryJlhRaamBsfyOf1mZPQDCiaFsmsATwWMBwwSP0yA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;603&quot;/&gt;&lt;span/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里也可以参考 koa 中的中间件调度模式 https://github.com/koajs/compose&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; middleware = &lt;span&gt;async&lt;/span&gt; (...params, next) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;// before&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;await&lt;/span&gt; next();&lt;br/&gt;  &lt;span&gt;// after&lt;/span&gt;&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;集散式&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;集散式就是每一个插件都会执行，如果有输出则最终将结果进行合并。这里的前提是存在方案，可以对执行结果进行 merge。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8588516746411483&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/aDoYvepE5x22mYbkMZxwmqUgVWGvicxsjmCHEPibOTytUjeCUDXVqk59gX5BnznBGpWkrlNLr4VNumFqCfDTU4Qw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;418&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;另外调度还可以分为 同步 和 异步 两个方式，主要看插件逻辑是否包含异步行为。同步的实现会简单一点，不过如果你不能确定，那也可以考虑先把异步的一起考虑进来。类似 https://www.npmjs.com/package/neo-async 这样的工具可以很好地帮助你。如果你使用了 tapble，那里面已经有相应的定义。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外还需要注意的细节是：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;顺序是先注册先执行，还是反过来，需要给到明确的解释或一致的认知。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;同一个插件重复注册了该怎么处理。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当你跟着这篇文章的思路，把这些问题都思考清楚之后，想必你的脑海中一定已经有了一个插件架构的雏形了。剩下的可能是结合具体问题，再通过一些设计模式去优化开发者的体验了。个人认为设计一个插件架构，是一定逃不开针对这些问题的思考的，而且只有去真正关注这些问题，才能避开炫技、过度设计等面向未来开发时时常会犯的错误。当然可能还差一些东西，一些推荐的实现方式也可能会过时，这些就欢迎大家帮忙指正啦。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;作者：ES2049 / armslave00 文章可随意转载，但请保留此原文链接（https://zhuanlan.zhihu.com/p/372381276）。非常欢迎有激情的你加入 ES2049 Studio，简历请发送至 caijun.hcj@alibaba-inc.com 。&lt;/p&gt;&lt;/blockquote&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;- END -&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;us-3913677&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.006666666666666667&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; data-width=&quot;100%&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xsw6Lt5pDCu1rRLicXibOB6jq4wpe7W4Ioibu7XTJR1ABzARKoLxyWEWeIV6HJRII2GK1ntnCkVIqjY852gntBd5Q/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;敬请关注「Nodejs技术栈」微信公众号，&lt;span&gt;期望与志同道合的你一起打造优质 “Nodejs技术栈” 交流群，一起互相学习进步！&lt;/span&gt;&lt;span&gt;可长按下方二维码&lt;/span&gt;&lt;span&gt;添加【五月君】个人微信备注 “Node” 邀请入群。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zPkNS9m6iatLmT5coKbicuqENgoc3Pz4QWwtrEoP2RU2thicCJHaKNmJ23Hh9jYvicpVgiauY6NxNaZ59D6svw1Qskg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;430&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a31b73d673ff0f4dc0cd8d5471c551e9</guid>
<title>Enrich Processor——Elasticsearch 跨索引关联数据新方式</title>
<link>https://toutiao.io/k/igeh9aw</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1、实战项目需求&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;需求1：有一个小需求&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;kafka源数据:&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;topicA:{&lt;span&gt;&quot;A_content&quot;&lt;/span&gt;:&lt;span&gt;&quot;XXX&quot;&lt;/span&gt;,&lt;span&gt;&quot;name&quot;&lt;/span&gt;:&lt;span&gt;&quot;A&quot;&lt;/span&gt;,&lt;span&gt;&quot;type&quot;&lt;/span&gt;:&lt;span&gt;&quot;XXX&quot;&lt;/span&gt;,&lt;span&gt;&quot;id&quot;&lt;/span&gt;:1}&lt;br/&gt;topicB:{&lt;span&gt;&quot;B_content&quot;&lt;/span&gt;:&lt;span&gt;&quot;XXX&quot;&lt;/span&gt;,&lt;span&gt;&quot;name&quot;&lt;/span&gt;:&lt;span&gt;&quot;B&quot;&lt;/span&gt;,&lt;span&gt;&quot;type&quot;&lt;/span&gt;:&lt;span&gt;&quot;XXX&quot;&lt;/span&gt;,&lt;span&gt;&quot;id&quot;&lt;/span&gt;:1}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;现在想将两个topic的数据写到同一个es索引中，但由于更新性能太慢，有啥思路可以加速写入性能呢(topicA和topicB的数据可能会有几天的延时)?&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;需求2：&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;在cluster1上有如a，b两索引，均有字段filed_a，索引a，b各自包含其它字段，建立新索引如c，要求c包含a索引全部文档，且在a和b索引关联字段 field_a 相同的文档中把b文档其它字段更新到索引c中。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2、需求分析&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如上两个需求都涉及两个索引数据之间的关联。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;提到&lt;/span&gt;&lt;code&gt;&lt;span&gt;数据关联&lt;/span&gt;&lt;/code&gt;&lt;span&gt;或者&lt;/span&gt;&lt;code&gt;&lt;span&gt;多表关联&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，我们都能想到的是四种多表关联核心实现：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;宽表，特点：空间换时间。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Nested 嵌套文档，特点：适合于子文档更新不频繁场景。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Join 父子文档，特点：适合于子文档频繁更新的场景。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;业务层面自己实现，特点：灵活自控。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;以上四种都无法实现上述需求涉及的问题。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;需求2的本质是：跨索引相同字段关联扩充字段实现。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在 7.5 版本的 ingest 预处理环节新增了enrich processer 字段丰富功能，能很好的实现上述需求。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2、enrich processor 解读&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.1 enrich processor 全局认知&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;全局来看：&lt;/span&gt;&lt;code&gt;&lt;span&gt;enrich processor&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 是 ingest 预处理管道中众多 processors中的一个。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;3.6463414634146343&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZknU3v6Kc1cpvibIYUXjWrwagNmzRiaLISFMgl5MM5LibKaefaOoiavZUZ4Rq3tojdyP4UrDxbXDIK6A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;246&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.2 enrich processor 最早发布版本&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如前所述，Elasticsearch 7.5 版本后新增了该项功能。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.3 enrich processor 定义&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;enrich&lt;/span&gt;&lt;/code&gt;&lt;span&gt;：中文可以翻译成丰富，本质也可以理解：“使丰富”的意思。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;借助 &lt;/span&gt;&lt;code&gt;&lt;span&gt;enrich&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 预处理管道，可以将已有索引中的数据添加到新写入的文档中。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;官方举例如下：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;根据已知 IP 添加 web 服务或供应商。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;根据产品 ID 添加零售订单。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;根据电子邮件补充添加联系信息。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;根据用户地址添加邮政编码。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.4 非 enrich processor 工作原理&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;为了对比，我们先讲一下：&lt;/span&gt;&lt;code&gt;&lt;span&gt;非 enrich processor&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的工作原理。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;非 enrich 的预处理管道&lt;/span&gt;&lt;/code&gt;&lt;span&gt;都相对“简单、直白”，如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;3.2045454545454546&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZknU3v6Kc1cpvibIYUXjWrwLwBPqVAXBGrrTs91h0xXTv5rlnZI85J5ZXKamMB4BgXKF04FUnWtCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;132&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图片来自：Elastic官方文档&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;新写入的文档中间经过预处理管道预处理实现了数据的 ETL 清洗后写入到目标索引中。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;中间的 ETL 清洗包含但不限于：trim、drop、append、foreach等管道处理方式。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.5 enrich processor 工作原理&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;区别于&lt;/span&gt;&lt;code&gt;&lt;span&gt;非 enrich processor&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的“直来直去”，enrich processor 在预处理管道中间加了“秘制配方”。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7072758037225042&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZknU3v6Kc1cpvibIYUXjWrwFAvfl5Gwib6w2qr4gJYGymKOr79gZ3NQevVKd9MyqM44sgBCq8Z95jg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;591&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图片来自：&lt;/span&gt;&lt;span&gt;Elastic官方文档&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;加了什么呢？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;多了：enrich policy。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大家可以回想一下，上一次您在 Elasticsearch 中听到 policy 是在什么时候？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247486616&amp;amp;idx=1&amp;amp;sn=c6996144a82e0e5f082935f7bce41661&amp;amp;chksm=eaa824b0dddfada6dc60a8ba0694e2e7edf1e167db08937b11c74f2ff775724cf8272717fff1&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot; ILM 索引生命周期管理&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt; ILM 索引生命周期管理&lt;/a&gt;里面 policy 实际是阶段 phrase 和动作 action 的综合体。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;而 enrich 数据预处理环节，enrich 的组成有哪些呢？&lt;/span&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.5.1 enrich policy&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对应上图中中间虚线框的圆圈部分，先上例子，建立下直观的认知。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;span&gt;PUT /_enrich/policy/data-policy&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;match&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;indices&quot;&lt;/span&gt;: &lt;span&gt;&quot;index_test_b&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;match_field&quot;&lt;/span&gt;: &lt;span&gt;&quot;field_a&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;enrich_fields&quot;&lt;/span&gt;: [&lt;br/&gt;      &lt;span&gt;&quot;author&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;publisher&quot;&lt;/span&gt;&lt;br/&gt;    ]&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;indices:一个或多个源索引的列表，存储的是待 enrich 扩展的数据。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;match：policy 类型，除了传统的match类型，还有应用于地理位置场景的：geo_match。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;match_field：源索引中用于匹配传入文档的匹配字段。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;enrich_field：源索引中的字段列表，用于添加到新传入的文档中。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.5.2 source index 源索引&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;用于丰富新写入文档 （incoming documents）的索引。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;它是目标索引中添加的待丰富数据的源头索引。没有了它，&lt;/span&gt;&lt;code&gt;&lt;span&gt;enrich&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 将无从谈起。&lt;/span&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.5.3 enrich index 丰富索引&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这是一个咱们从来没有见过的新概念，有必要详细解读一下。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.23515625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZknU3v6Kc1cpvibIYUXjWrw7WaoAoUtVDeerklplp51u1CJVr4PyUxFpiap4r2LmibWKH79dlzg2v9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;enrich index&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 是执行 enrich policy 生成的索引。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;执行命令如下：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;POST /_enrich/policy/data-policy/_execute&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;enrich index 特点如下：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;elasticsearch 内部管理的系统级索引。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;目的很“单一”——仅用于 enrich processor。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;以 .enrich-* 开头。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;只读，不支持人为修改。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5054054054054054&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZknU3v6Kc1cpvibIYUXjWrwyu6WALdhsqCklvvmVZELfZZuEgeds7z8ZLBp8cAC84yp6XxQxtVeNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1110&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;get 索引会有说明禁止修改&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.1985930735930736&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZknU3v6Kc1cpvibIYUXjWrw3d3thgSCpe5DT4zdkm90VD5vWNHrNHCvsh6aPYSVVhcicErPicwHXnqA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1848&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;更新索引报错如上&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这时候，读者可能会有疑问：直接用 source 索引不香吗？费那劲干啥？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;原因：直接将传入文档与源索引中的文档进行匹配可能会&lt;/span&gt;&lt;span&gt;很慢且需要大量资源&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;为了加快速度，enrich 索引应运而生。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果再引申的话，source 源索引可能会有大量的增删改查操作，而 enrich 一经创建，便不允许更改。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;除非进行重新执行 policy。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.6 enrich processor 适用场景&lt;/span&gt;&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.7 enrich processor 性能问题&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;enrich processor 执行多项操作，可能会影响 ingest 管道的速度。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;官方强烈建议在将 enrich process 部署到生产环境之前对其进行测试和基准测试。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;官方不建议使用 enrich 处理器来 enrich （丰富）实时数据。enrich processor 最适合不经常更改的索引数据类型。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3、enrich processor 实战解读&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;针对文章开头的需求1、需求2：传统的索引之间的关联方式都不能解决问题。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;核心实现步骤如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.9327217125382263&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZknU3v6Kc1cpvibIYUXjWrwB1dEAdhxX40J3HZLE7gta6GwbtgsicyyWOGwBBicWwGoNLgKQCqoBMTQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;327&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;借助 enrich processor 实现解读如下：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如下各个步骤和上图一一对应。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1 第一步：创建初始索引&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;DELETE index_test_a&lt;br/&gt;PUT index_test_a&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;mappings&quot;&lt;/span&gt;:{&lt;br/&gt;    &lt;span&gt;&quot;properties&quot;&lt;/span&gt;:{&lt;br/&gt;      &lt;span&gt;&quot;field_a&quot;&lt;/span&gt;:{&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;:&lt;span&gt;&quot;keyword&quot;&lt;/span&gt;&lt;br/&gt;      },&lt;br/&gt;      &lt;span&gt;&quot;title&quot;&lt;/span&gt;:{&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;:&lt;span&gt;&quot;keyword&quot;&lt;/span&gt;&lt;br/&gt;      },&lt;br/&gt;      &lt;span&gt;&quot;publish_time&quot;&lt;/span&gt;:{&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;:&lt;span&gt;&quot;date&quot;&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;POST index_test_a/_bulk&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:1}}&lt;br/&gt;{&lt;span&gt;&quot;field_a&quot;&lt;/span&gt;:&lt;span&gt;&quot;aaa&quot;&lt;/span&gt;, &lt;span&gt;&quot;title&quot;&lt;/span&gt;:&lt;span&gt;&quot;elasticsearch in action&quot;&lt;/span&gt;, &lt;span&gt;&quot;publish_time&quot;&lt;/span&gt;:&lt;span&gt;&quot;2017-07-01T00:00:00&quot;&lt;/span&gt;}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;DELETE index_test_b&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;PUT index_test_b&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;mappings&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;properties&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;field_a&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;keyword&quot;&lt;/span&gt;&lt;br/&gt;      },&lt;br/&gt;      &lt;span&gt;&quot;author&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;keyword&quot;&lt;/span&gt;&lt;br/&gt;      },&lt;br/&gt;      &lt;span&gt;&quot;publisher&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;keyword&quot;&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;POST index_test_b/_bulk&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:1}}&lt;br/&gt;{&lt;span&gt;&quot;field_a&quot;&lt;/span&gt;:&lt;span&gt;&quot;aaa&quot;&lt;/span&gt;, &lt;span&gt;&quot;author&quot;&lt;/span&gt;:&lt;span&gt;&quot;jerry&quot;&lt;/span&gt;, &lt;span&gt;&quot;publisher&quot;&lt;/span&gt;:&lt;span&gt;&quot;Tsinghua&quot;&lt;/span&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.2 第二步：创建data-policy&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;DELETE _enrich/policy/data-policy&lt;br/&gt;PUT /_enrich/policy/data-policy&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;match&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;indices&quot;&lt;/span&gt;: &lt;span&gt;&quot;index_test_b&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;match_field&quot;&lt;/span&gt;: &lt;span&gt;&quot;field_a&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;enrich_fields&quot;&lt;/span&gt;: [&lt;span&gt;&quot;author&quot;&lt;/span&gt;,&lt;span&gt;&quot;publisher&quot;&lt;/span&gt;]&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.3 第三步：执行data-policy&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;POST /_enrich/policy/data-policy/_execute&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.4 第四步：创建 pipeline&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;DELETE /_ingest/pipeline/data_lookup&lt;br/&gt;PUT /_ingest/pipeline/data_lookup&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;processors&quot;&lt;/span&gt;: [&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;enrich&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;policy_name&quot;&lt;/span&gt;: &lt;span&gt;&quot;data-policy&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;field&quot;&lt;/span&gt;: &lt;span&gt;&quot;field_a&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;target_field&quot;&lt;/span&gt;: &lt;span&gt;&quot;field_from_bindex&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;max_matches&quot;&lt;/span&gt;: &lt;span&gt;&quot;1&quot;&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;append&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;field&quot;&lt;/span&gt;: &lt;span&gt;&quot;author&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;value&quot;&lt;/span&gt;: &lt;span&gt;&quot;{{field_from_bindex.author}}&quot;&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;append&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;field&quot;&lt;/span&gt;: &lt;span&gt;&quot;publisher&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;value&quot;&lt;/span&gt;: &lt;span&gt;&quot;{{field_from_bindex.publisher}}&quot;&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;remove&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;field&quot;&lt;/span&gt;: &lt;span&gt;&quot;field_from_bindex&quot;&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.5 第5步：reindex 索引&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;DELETE index_test_c&lt;br/&gt;POST _reindex&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;source&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;index&quot;&lt;/span&gt;: &lt;span&gt;&quot;index_test_a&quot;&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;dest&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;index&quot;&lt;/span&gt;: &lt;span&gt;&quot;index_test_c&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;pipeline&quot;&lt;/span&gt;: &lt;span&gt;&quot;data_lookup&quot;&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.6 第6步：检索结果&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;GET index_test_c/_search&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;最终结果数据如下截图所示：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.8025078369905956&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZknU3v6Kc1cpvibIYUXjWrwcbhVrWQSASCgu1OjDeBMW5iaPZ4iaNtJ57qS4DPxCmiciajqAMChVc4Ypg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;638&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;索引 c 实现了索引 a 和 索引 b 的融合，索引c 变得“丰富”。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4、小结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;新的功能或者新的概念的产生是基于特定的业务需求，追根溯源 enrich processor 起源于如下的 bug 或 新需求：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;https://github.com/elastic/elasticsearch/issues/32789&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;最早版本的这张图：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6939820742637645&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZknU3v6Kc1cpvibIYUXjWrwib9ibPt2pkoR3ia2djrzbMeTfRFP6NI7FPtcwb7kcW6CurABQ45o5Wo0g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;781&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;更能够说明：enrich processor 的本质。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;一句话&lt;/span&gt;&lt;span&gt;：新写入的文档通过 enrich processor 达到了跨索引丰富数据的目的，最终写入目标索引。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;而丰富数据的实现是借助：enrich policy 将源索引 source orgin data 生成系统只读索引 enrich index 实现的。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;本文的 enrich processor 预处理可以算作跨索引处理数据的扩展。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;希望本文的解读，对于您理解 Elasticsearch 跨索引关联数据有所帮助！&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;也欢迎留言交流您对 enrich processor 的看法。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest-enriching-data.html&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;https://www.alibabacloud.com/blog/how-do-we-use-an-ingest-node-in-elasticsearch-to-enrich-logs-and-metrics_597453&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;https://www.elastic.co/cn/blog/introducing-the-enrich-processor-for-elasticsearch-ingest-nodes&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;推荐&lt;/span&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;1&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247487494&amp;amp;idx=1&amp;amp;sn=731687e8a09d2da56fa844c4e494ab62&amp;amp;chksm=eaa8382edddfb138627d276b4f60f4245d457a8a5f787daf65a0c0be95231f67b55d871b907f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;、重磅 | 死磕 Elasticsearch 方法论认知清单（2021年国庆更新版）&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247487494&amp;amp;idx=1&amp;amp;sn=731687e8a09d2da56fa844c4e494ab62&amp;amp;chksm=eaa8382edddfb138627d276b4f60f4245d457a8a5f787daf65a0c0be95231f67b55d871b907f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;2&lt;/span&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247487072&amp;amp;idx=1&amp;amp;sn=13694eb4b907ae5cffa7ac37bb1ed248&amp;amp;chksm=eaa82648dddfaf5edb55fcc5ea74021367b81f03a22d9fb5655409adcb3e400e6da19f945ed3&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;1、&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;、&lt;/span&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247487072&amp;amp;idx=1&amp;amp;sn=13694eb4b907ae5cffa7ac37bb1ed248&amp;amp;chksm=eaa82648dddfaf5edb55fcc5ea74021367b81f03a22d9fb5655409adcb3e400e6da19f945ed3&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;Elasticsearch 7.X 进阶实战私训课&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（口碑不错）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247484382&amp;amp;idx=1&amp;amp;sn=da073a257575867b8d979dac850c3f8e&amp;amp;chksm=eaa82bf6dddfa2e0bf920f0a3a63cb635277be2ae286a2a6d3fff905ad913ebf1f43051609e8&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;干货 | Elasticsearch多表关联设计指南&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;干货 | Elasticsearch多表关联设计指南&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100004130&quot; data-ratio=&quot;0.596&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZoCQGlxWp4G56gqia6ANT1Z9WB22YUEZ2Xib9YBZ90fLUQLyudxgjENibxzn9wCtBx3sQeE5CJnRE1Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;更&lt;/span&gt;短时间&lt;span&gt;更&lt;/span&gt;快习得&lt;span&gt;更&lt;/span&gt;多干货！&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;已带领&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;80&lt;span&gt;位&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;球友&lt;span&gt;通过 Elastic 官方认证！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;img class=&quot;__bg_gif rich_pages wxw-img&quot; data-fileid=&quot;100004129&quot; data-ratio=&quot;0.4592901878914405&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/mjl8GCpsL9aP1cRicwD8ibiaWicGzrrI5hFt9BVtE6mkbaIePyxJ1ic0SicaUEzTI3mhrgjNvLvJprDmf8Sqk9EphbRw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;479&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;比同事&lt;/span&gt;&lt;span&gt;抢先&lt;/span&gt;&lt;span&gt;&lt;span&gt;一步学习进阶干货&lt;/span&gt;&lt;span&gt;！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f0430af7bad4779295ae4f959f6aa3f4</guid>
<title>这些开源项目 yyds</title>
<link>https://toutiao.io/k/y4paip4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;h1 data-key=&quot;fd245a0b20464c4d835251e573a6be6f&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section&gt;&lt;span&gt;逛逛 GitHub 会定期盘点最近比较火的开源项目，本篇文章盘点的开源项目分别是：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1. &lt;span&gt;一个简单 Git 命令终端 UI&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2. &lt;span&gt;Notion 的开源替代品，使用 Flutter 和 Rust 构建&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3. &lt;span&gt;随手拍张照片，顺势转换为宫崎骏大师的手绘风格作品&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;4. &lt;span&gt;MongoDB 的开源替代品&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;5. &lt;span&gt;让你更好的了解 TS 的类型系统，编写你自己的类型工具&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;6. &lt;/span&gt;&lt;span&gt;基于 FLutter 的游戏引擎&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;7. &lt;span&gt;一个 UI 组件的开发环境&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;8. &lt;/span&gt;&lt;span&gt;分布式数据同步工具&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;9. &lt;span&gt;一款功能强大的开源群聊应用程序&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;/section&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;01 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;一个简单 Git 命令终端 UI&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一个简单 Git 命令终端 UI，使用 gocui 库用 Go 编写。&lt;/span&gt;&lt;span&gt;Lazygit 让你有一种源自 Sourcetree 的感觉，但是在以终端为中心的环境中。&lt;/span&gt;&lt;span&gt;L&lt;/span&gt;&lt;span&gt;azygit 快速且易于使用，你只需在 git 存储库中的终端中调用 lazygit 即可。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;span&gt;Lazygit可以在Linux、macOS、FreeBSD和Windows上运行。&lt;/span&gt;&lt;span&gt;Lazygit的特点：&lt;/span&gt;&lt;span&gt;轻松添加文件、&lt;/span&gt;&lt;span&gt;解决合并冲突、&lt;/span&gt;&lt;span&gt;轻松查看最近的分支机构、&lt;/span&gt;&lt;span&gt;滚动分支/提交/存储的日志/差异、&lt;/span&gt;&lt;span&gt;压缩并重命名提交。&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;地址：https:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5182119205298014&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruw62Usic0SDQRRKeUDWGCDZpvzaWEficmNwCZgDHr3qa6akAxFxdDWxwgibaop6Gkoib76E2658ia2ULTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;604&quot;/&gt;&lt;/section&gt;&lt;h1 data-key=&quot;fd245a0b20464c4d835251e573a6be6f&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;/section&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;02 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;Notion 的开源替代品&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;AppFlowy 是 Notion 的开源替代品，使用 Flutter 和 Rust 构建。即使 Notion 是 AppFlowy 团队最喜欢的项目以及知识管理工具，但是在一些企业的场景中，数据安全以及数据的100% 私有化管理是非常重要的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;408&quot; data-ratio=&quot;0.7087576374745418&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruw62Usic0SDQRRKeUDWGCDZpU1yGDJY7vpFyyMTic7KXcenfKvmTXAGRhfNlRr6sBdib9NW1DHMD5MJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1964&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;AppFlowy 团队希望通过三个最基本的价值观来实现这一使命：&lt;/span&gt;&lt;span&gt;数据隐私第一、&lt;/span&gt;&lt;span&gt;可靠的原生体验、&lt;/span&gt;&lt;span&gt;社区驱动的可扩展性&lt;/span&gt;&lt;/section&gt;&lt;h2 dir=&quot;auto&quot;&gt;&lt;span&gt;使用 brew install appflowy 命令在 macOS 上安装该开源工具。&lt;/span&gt;&lt;/h2&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;地址：https:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h1 data-key=&quot;fd245a0b20464c4d835251e573a6be6f&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;/section&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;03 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;一键生成动漫风格&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;随手拍张照片，顺势转换为宫崎骏、新海诚等日漫大师的手绘风格作品，这个专门生成动漫图像的开源项目，实测很好用。GitHub 上确实有这样的开源项目，输入一张手机拍摄的照片，立即变换为日本动漫风格。&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;地址：https:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3244206773618538&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruyGVXBHwNGyvoW6xATbic7UPzxTjIvibRKlt0iayDAOLunfaQyDxicCl0wNyXnT2nosfbApG8UqAPiakHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1122&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.32642487046632124&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruyGVXBHwNGyvoW6xATbic7UPOkWzjmPDziaPfKKmGaeibgXeO2Rkhyz5n9LN3vPhSOyZ7GysZicrkN0PQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1158&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.24880382775119617&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruyGVXBHwNGyvoW6xATbic7UP0OcS21MuyBiaILf7DVdKr42D2gegl0sKJg9ozEA6HDqVMRZVfSTJCuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1672&quot;/&gt;&lt;/section&gt;&lt;h1 data-key=&quot;fd245a0b20464c4d835251e573a6be6f&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;/section&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;04 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;MongoDB 的开源替代品&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;FerretDB（以前称为 MangoDB）的成立是为了成为 MongoDB 的事实上的开源替代品。FerretDB 是一个开源代理，将 MongoDB 有线协议查询转换为 SQL - 使用 PostgreSQL 作为数据库引擎。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为什么我们需要 FerretDB？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;MongoDB 最初是让我们许多开发人员大开眼界的技术，它使我们能够比使用关系数据库更快地构建应用程序。在早期，其易于使用且文档齐全的驱动程序使 MongoDB 成为可用的最简单的数据库解决方案之一。然而，随着时间的推移，MongoDB 放弃了它的开源根源；将许可证更改为 SSPL - 使其无法用于许多开源和早期商业项目。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;大多数 MongoDB 用户不需要 MongoDB 提供的许多高级功能；然而，他们需要一个易于使用的开源数据库解决方案。认识到这一点，FerretDB 将填补这一空白。&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;地址：https:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h1 data-key=&quot;fd245a0b20464c4d835251e573a6be6f&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;/section&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;05&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;TypeScript 类型体操姿势合集&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section dir=&quot;auto&quot;&gt;&lt;span&gt;高质量的 Type 可以提高项目的可维护性并避免一些潜在的漏洞，市面上也已经有许多优秀的 Type 工具库，像是 ts-toolbelt, utility-types, SimplyTyped 等等。我们也从这些项目中获取了许多灵感。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.45871559633027525&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruw62Usic0SDQRRKeUDWGCDZpQH3JWJdfwR3K41ibxhWPVCFpf5bfYms6mreNAU3mqw5oyicP8UoLmopw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;872&quot;/&gt;&lt;/section&gt;&lt;section dir=&quot;auto&quot;&gt;&lt;span&gt;本项目意在于让你更好的了解 TS 的类型系统，编写你自己的类型工具，或者只是单纯的享受挑战的乐趣！我们同时希望可以建立一个社区，在这里你可以提出你在实际环境中遇到的问题，或者帮助他人解答疑惑 - 这些问题也可能被选中成为题库的一部分！&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;地址：https://github.com/&lt;span class=&quot;code-snippet__built_in&quot;&gt;type&lt;/span&gt;-challenges/&lt;span class=&quot;code-snippet__built_in&quot;&gt;type&lt;/span&gt;-challenges/blob/master/README.zh-CN.md&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h1 data-key=&quot;fd245a0b20464c4d835251e573a6be6f&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;/section&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;06&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;基于 Flutter 的游戏引擎&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section dir=&quot;auto&quot;&gt;&lt;span&gt;Flame 引擎的目的是为使用 Flutter 开发的游戏会遇到的常见问题提供一套完整的解决方案。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5110663983903421&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruw62Usic0SDQRRKeUDWGCDZpY5u7t5wvdFao3vNlVibeJp4Sk8MCnghBh1vYhEwwCKrzQGic7ibFtb9yw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;994&quot;/&gt;&lt;/section&gt;&lt;section dir=&quot;auto&quot;&gt;&lt;span&gt;目前 Flame 提供了以下功能：&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;地址：https:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h1 data-key=&quot;fd245a0b20464c4d835251e573a6be6f&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;/section&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;07&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一个 UI 组件的开发环境&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Storybook 是一个 UI 组件的开发环境。它允许您浏览组件库，查看每个组件的不同状态，以及交互式开发和测试组件。在 https://storybook.js.org 上了解更多信息。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3562231759656652&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruw62Usic0SDQRRKeUDWGCDZp4Wat5EficgoxrGiaF0vrUqLA8GoMSheJXslIRox7TZyjIcFJk0fX7wCw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1398&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Storybook是一个开源工具，用于独立开发React、Vue和Angular的UI组件。它能有组织和高效地构建UI组件。本文以构建 React 组件库为例说明如何使用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.538560411311054&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruw62Usic0SDQRRKeUDWGCDZplCqfsicE2Iick5r0LjDWwQ6foAVA1wUchxUXDAKBarRqib9rGvgYUz0fA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1556&quot;/&gt;&lt;/section&gt;&lt;h1 data-key=&quot;fd245a0b20464c4d835251e573a6be6f&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;/section&gt;&lt;/h1&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;08&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一款功能强大的开源群聊应用程序&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Zulip是移动和桌面办公聊天解决方案开发商 ，一个强大的群组聊天软件 ，目前已被Dropbox 收购并完全开源&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;地址：https:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;最后，防止找不到本篇文章，可以收藏点赞，方便翻阅查找。&lt;/span&gt;&lt;span&gt;欢迎关注公众号 逛逛GitHub（ggGithub）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;hr/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;1. &lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498662&amp;amp;idx=1&amp;amp;sn=0087c4f3b79ba3420e917e9b42d45eda&amp;amp;chksm=f9a2286fced5a1794eb9a73d0be7c2e16eaceabf3a0420647c40cb4202bd116d9a15dd57c008&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;GitHub 上有什么好玩的项目？&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;2. &lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247501147&amp;amp;idx=1&amp;amp;sn=7d645733a5baaafebffc3491a45791b5&amp;amp;chksm=f9a21692ced59f84166b56683be9fef3d06c42deebecf99271b4b1d3dadacbb008700c02fdef&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;6 月份最火的 10 个 GitHub 项目&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;3. &lt;/span&gt;&lt;/em&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247500031&amp;amp;idx=1&amp;amp;sn=b4349fc85264c255bf9a22e1f25b035a&amp;amp;chksm=f9a21336ced59a20518444a3e2bddb584f6d02266e831546ee5c00935d01d5bd61ed86ab606f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;基于 Spring Boot 的百度云高仿项目&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;4. &lt;/span&gt;&lt;/em&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUxNjg4NDEzNA==&amp;amp;mid=2247498464&amp;amp;idx=1&amp;amp;sn=4f85123d6ca67578ca7bad8f7dc71453&amp;amp;chksm=f9a22929ced5a03ffded2c41fd257d3eb96be02195de3ca66a083177bf5f73e2f418728f7f06&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;盘点百度 4 个牛逼哄哄的开源项目&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;172&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;172&quot; data-ratio=&quot;1.005449591280654&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ePw3ZeGRruxW7LMX2Iz5DfjRIbFTS7UROhxibBmicicT0HpjIh1yniaJJibSnLFuicMHRx5NEdiaOh2OOACfr6MvR38ibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;734&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a7834e66ef44ef7a95e0c41715e9ba01</guid>
<title>「GoCN酷Go推荐」Golang轻量级桌面程序wails2教学</title>
<link>https://toutiao.io/k/rsx38ld</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;strong&gt;推荐理由&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不依赖cgo！不依赖cgo！不依赖cgo！真的不依赖cgo，且跨平台，原生渲染 无嵌入式浏览器，轻量级，生成的文件很小，而且只有一个可执行文件就可运行。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;功能介绍&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;后端使用标准 Go&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用任意前端技术构建 UI 界面&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;快速为您的 Go 应用生成 Vue、Vuetify、React 前端代码&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;通过简单的绑定命令将 Go 方法暴露到前端&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用原生渲染引擎 - 无嵌入式浏览器&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;共享事件系统&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;原生文件系统对话框&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;强大的命令行工具&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;跨多个平台&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;使用指南&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本次教学在windows下进行。&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;04&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;1、首先要安装三个必要的东西：&lt;br/&gt;npm: https://nodejs.org/en/download/&lt;br/&gt;webviews2: https://developer.microsoft.com/zh-cn/microsoft-edge/webview2/#download-section (下载常青版引导程序&lt;br/&gt;，记得安装是一定用管理员安装)&lt;br/&gt;*upx：https://github.com/upx/upx/releases/tag/v3.96 (下载后：upx-3.96-win64.zip，然后放入环境变量)&lt;br/&gt;&lt;br/&gt;2、golang版本必须是1.17及其以上，安装wails工具：&lt;br/&gt;go install github.com/wailsapp/wails/v2/cmd/wails@latest&lt;br/&gt;3、wails doctor (用此命令查看是否已安装完整必要依赖) 如下图：&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48214285714285715&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbAdfVYupeYcY37U77XicWa7nacaLZxyXAfibbHwCd0hRqx69fr3lDyfyLLBkezdicauX5xx8ynrF0Fjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1064&quot;/&gt;&lt;figcaption&gt;1&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;目录结构概要：&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;/main.go - 主应用&lt;br/&gt;/frontend/ - 前端项目文件&lt;br/&gt;/build/ - 项目构建目录&lt;br/&gt;    /build/appicon.png - 应用程序图标&lt;br/&gt;    /build/darwin/ - Mac 特定的项目文件&lt;br/&gt;    /build/windows/ - Windows 特定的项目文件&lt;br/&gt;/wails.json - 项目配置&lt;br/&gt;/go.mod - Go 模块文件&lt;br/&gt;/go.sum - Go 模块校验文件&lt;br/&gt;&lt;br/&gt;frontend目录没有特定于 Wails 的内容，可以是您选择的任何前端项目。&lt;br/&gt;build目录在构建过程中使用。这些文件可以修改以自定义您的构建。如果文件从构建目录中删除，将重新生成默认版本。&lt;br/&gt;go.mod中的默认模块名称是“changeme”。您应该将其更改为更合适的内容。&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;开始做我们的圣诞树&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、首先，利用wails工具创建一个项目：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;wails init -n 项目名称&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、然后，我们开始写咱们的main：（看到go:embed注解就知道为什么要用go1.17及其以上的版本了吧）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt; &lt;span&gt;&quot;embed&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&quot;log&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; &lt;span&gt;&quot;github.com/wailsapp/wails/v2/pkg/options/mac&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; &lt;span&gt;&quot;github.com/wailsapp/wails/v2&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&quot;github.com/wailsapp/wails/v2/pkg/logger&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&quot;github.com/wailsapp/wails/v2/pkg/options&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&quot;github.com/wailsapp/wails/v2/pkg/options/windows&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;//go:embed frontend/src&lt;/span&gt;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; assets embed.FS&lt;br/&gt;&lt;br/&gt;&lt;span&gt;//go:embed build/appicon.png&lt;/span&gt;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; icon []&lt;span&gt;byte&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;// 创建一个APP结构体实例&lt;/span&gt;&lt;br/&gt; app := NewApp()&lt;br/&gt;&lt;br/&gt; &lt;span&gt;// 给这个APP设置参数&lt;/span&gt;&lt;br/&gt; err := wails.Run(&amp;amp;options.App{&lt;br/&gt;  Title:             &lt;span&gt;&quot;GoCN祝天下所有的Gopher圣诞节快乐&quot;&lt;/span&gt;,&lt;br/&gt;  Width:             &lt;span&gt;720&lt;/span&gt;,&lt;br/&gt;  Height:            &lt;span&gt;570&lt;/span&gt;,&lt;br/&gt;  MinWidth:          &lt;span&gt;720&lt;/span&gt;,&lt;br/&gt;  MinHeight:         &lt;span&gt;570&lt;/span&gt;,&lt;br/&gt;  MaxWidth:          &lt;span&gt;1280&lt;/span&gt;,&lt;br/&gt;  MaxHeight:         &lt;span&gt;740&lt;/span&gt;,&lt;br/&gt;  DisableResize:     &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  Fullscreen:        &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  Frameless:         &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  StartHidden:       &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  HideWindowOnClose: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  RGBA:              &amp;amp;options.RGBA{R: &lt;span&gt;33&lt;/span&gt;, G: &lt;span&gt;37&lt;/span&gt;, B: &lt;span&gt;43&lt;/span&gt;, A: &lt;span&gt;255&lt;/span&gt;},&lt;br/&gt;  Assets:            assets,&lt;br/&gt;  LogLevel:          logger.DEBUG,&lt;br/&gt;  OnStartup:         app.startup,&lt;br/&gt;  OnDomReady:        app.domReady,&lt;br/&gt;  OnShutdown:        app.shutdown,&lt;br/&gt;  Bind: []&lt;span&gt;interface&lt;/span&gt;{}{&lt;br/&gt;   app,&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;// Windows平台特定选项&lt;/span&gt;&lt;br/&gt;  Windows: &amp;amp;windows.Options{&lt;br/&gt;   WebviewIsTransparent: &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;// 背景是否半透明&lt;/span&gt;&lt;br/&gt;   WindowIsTranslucent:  &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;// 导航条是否半透明&lt;/span&gt;&lt;br/&gt;   DisableWindowIcon:    &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;// 是否关闭窗口上的图标&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  Mac: &amp;amp;mac.Options{&lt;br/&gt;   TitleBar:             mac.TitleBarHiddenInset(),&lt;br/&gt;   WebviewIsTransparent: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;   WindowIsTranslucent:  &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;   About: &amp;amp;mac.AboutInfo{&lt;br/&gt;    Title:   &lt;span&gt;&quot;Vanilla Template&quot;&lt;/span&gt;,&lt;br/&gt;    Message: &lt;span&gt;&quot;Part of the Wails projects&quot;&lt;/span&gt;,&lt;br/&gt;    Icon:    icon,&lt;br/&gt;   },&lt;br/&gt;  },&lt;br/&gt; })&lt;br/&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; err != &lt;span&gt;nil&lt;/span&gt; {&lt;br/&gt;  log.Fatal(err)&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、写咱们的前端，在frontend/src/index.html下写入下面的代码（我也是抄h阿泉的）：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!DOCTYPE &lt;span&gt;HTML&lt;/span&gt; &lt;span&gt;PUBLIC&lt;/span&gt; &lt;span&gt;&quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot;&lt;/span&gt; &lt;span&gt;&quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;圣诞节快乐&lt;span&gt;&amp;lt;/&lt;span&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;meta&lt;/span&gt; &lt;span&gt;charset&lt;/span&gt;=&lt;span&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;        &lt;span&gt;html&lt;/span&gt;, &lt;span&gt;body&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;width&lt;/span&gt;: &lt;span&gt;100%&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;height&lt;/span&gt;: &lt;span&gt;100%&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;margin&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;padding&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;border&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;canvas&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;width&lt;/span&gt;: &lt;span&gt;100%&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;height&lt;/span&gt;: &lt;span&gt;100%&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;div&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;margin&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;padding&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;border&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;.nav&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;position&lt;/span&gt;: absolute;&lt;br/&gt;            &lt;span&gt;top&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;left&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;width&lt;/span&gt;: &lt;span&gt;100%&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;height&lt;/span&gt;: &lt;span&gt;27px&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;background-color&lt;/span&gt;: white;&lt;br/&gt;            &lt;span&gt;color&lt;/span&gt;: black;&lt;br/&gt;            &lt;span&gt;text-align&lt;/span&gt;: center;&lt;br/&gt;            &lt;span&gt;line-height&lt;/span&gt;: &lt;span&gt;25px&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;a&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;color&lt;/span&gt;: black;&lt;br/&gt;            &lt;span&gt;text-decoration&lt;/span&gt;: none;&lt;br/&gt;            &lt;span&gt;border-bottom&lt;/span&gt;: &lt;span&gt;1px&lt;/span&gt; dashed black;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;a&lt;/span&gt;&lt;span&gt;:hover&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;border-bottom&lt;/span&gt;: &lt;span&gt;1px&lt;/span&gt; solid red;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;.previous&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;float&lt;/span&gt;: left;&lt;br/&gt;            &lt;span&gt;margin-left&lt;/span&gt;: &lt;span&gt;10px&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;.next&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;float&lt;/span&gt;: right;&lt;br/&gt;            &lt;span&gt;margin-right&lt;/span&gt;: &lt;span&gt;10px&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;.green&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;color&lt;/span&gt;: green;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;.red&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;color&lt;/span&gt;: red;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;textarea&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;width&lt;/span&gt;: &lt;span&gt;100%&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;height&lt;/span&gt;: &lt;span&gt;100%&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;border&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;padding&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;margin&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;padding-bottom&lt;/span&gt;: &lt;span&gt;20px&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;.block-outer&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;float&lt;/span&gt;: left;&lt;br/&gt;            &lt;span&gt;width&lt;/span&gt;: &lt;span&gt;22%&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;height&lt;/span&gt;: &lt;span&gt;100%&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;padding&lt;/span&gt;: &lt;span&gt;5px&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;border-left&lt;/span&gt;: &lt;span&gt;1px&lt;/span&gt; solid black;&lt;br/&gt;            &lt;span&gt;margin&lt;/span&gt;: &lt;span&gt;30px&lt;/span&gt; &lt;span&gt;3px&lt;/span&gt; &lt;span&gt;3px&lt;/span&gt; &lt;span&gt;3px&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;.block-inner&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;height&lt;/span&gt;: &lt;span&gt;68%&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;.one&lt;/span&gt; {&lt;br/&gt;            &lt;span&gt;border&lt;/span&gt;: &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;body&lt;/span&gt; &lt;span&gt;marginwidth&lt;/span&gt;=&lt;span&gt;&quot;0&quot;&lt;/span&gt; &lt;span&gt;marginheight&lt;/span&gt;=&lt;span&gt;&quot;0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;canvas&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;=&lt;span&gt;&quot;c&quot;&lt;/span&gt; &lt;span&gt;height&lt;/span&gt;=&lt;span&gt;&quot;800&quot;&lt;/span&gt; &lt;span&gt;width&lt;/span&gt;=&lt;span&gt;&quot;300&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;        &lt;span&gt;var&lt;/span&gt; collapsed = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;toggle&lt;/span&gt;(&lt;span/&gt;) &lt;/span&gt;{&lt;br/&gt;            &lt;span&gt;var&lt;/span&gt; fs = top.document.getElementsByTagName(&lt;span&gt;&#x27;frameset&#x27;&lt;/span&gt;)[&lt;span&gt;0&lt;/span&gt;];&lt;br/&gt;            &lt;span&gt;var&lt;/span&gt; f = fs.getElementsByTagName(&lt;span&gt;&#x27;frame&#x27;&lt;/span&gt;);&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (collapsed) {&lt;br/&gt;                fs.rows = &lt;span&gt;&#x27;250px,*&#x27;&lt;/span&gt;;&lt;br/&gt;                &lt;span&gt;// enable resizing of frames in firefox/opera&lt;/span&gt;&lt;br/&gt;                fs.noResize = &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;                f[&lt;span&gt;0&lt;/span&gt;].noResize = &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;                f[&lt;span&gt;1&lt;/span&gt;].noResize = &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;            } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;                fs.rows = &lt;span&gt;&#x27;30px,*&#x27;&lt;/span&gt;;&lt;br/&gt;                &lt;span&gt;// disable resizing of frames in firefox/opera&lt;/span&gt;&lt;br/&gt;                fs.noResize = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;                f[&lt;span&gt;0&lt;/span&gt;].noResize = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;                f[&lt;span&gt;1&lt;/span&gt;].noResize = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;            }&lt;br/&gt;            collapsed = !collapsed;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;        &lt;span&gt;var&lt;/span&gt; b = &lt;span&gt;document&lt;/span&gt;.body;&lt;br/&gt;        &lt;span&gt;var&lt;/span&gt; c = &lt;span&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span&gt;&#x27;canvas&#x27;&lt;/span&gt;)[&lt;span&gt;0&lt;/span&gt;];&lt;br/&gt;        &lt;span&gt;var&lt;/span&gt; a = c.getContext(&lt;span&gt;&#x27;2d&#x27;&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;document&lt;/span&gt;.body.clientWidth; &lt;span&gt;// fix bug in chrome.&lt;/span&gt;&lt;br/&gt;    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;        &lt;span&gt;// start of submission //&lt;/span&gt;&lt;br/&gt;        M = &lt;span&gt;Math&lt;/span&gt;;&lt;br/&gt;        Q = M.random;&lt;br/&gt;        J = [];&lt;br/&gt;        U = &lt;span&gt;16&lt;/span&gt;;&lt;br/&gt;        T = M.sin;&lt;br/&gt;        E = M.sqrt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (O = k = &lt;span&gt;0&lt;/span&gt;; x = z = j = i = k &amp;lt; &lt;span&gt;200&lt;/span&gt;;) &lt;span&gt;with&lt;/span&gt; (M[k] = k ? c.cloneNode(&lt;span&gt;0&lt;/span&gt;) : c) {&lt;br/&gt;            width = height = k ? &lt;span&gt;32&lt;/span&gt; : W = &lt;span&gt;446&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;with&lt;/span&gt; (getContext(&lt;span&gt;&#x27;2d&#x27;&lt;/span&gt;)) &lt;span&gt;if&lt;/span&gt; (k &amp;gt; &lt;span&gt;10&lt;/span&gt; | !k) &lt;span&gt;for&lt;/span&gt; (font = &lt;span&gt;&#x27;60px Impact&#x27;&lt;/span&gt;, V = &lt;span&gt;&#x27;rgba(&#x27;&lt;/span&gt;; I = i * U, fillStyle = k ? k == &lt;span&gt;13&lt;/span&gt; ? V + &lt;span&gt;&#x27;205,205,215,.15)&#x27;&lt;/span&gt; : V + (&lt;span&gt;147&lt;/span&gt; + I) + &lt;span&gt;&#x27;,&#x27;&lt;/span&gt; + (k % &lt;span&gt;2&lt;/span&gt; ? &lt;span&gt;128&lt;/span&gt; + I : &lt;span&gt;0&lt;/span&gt;) + &lt;span&gt;&#x27;,&#x27;&lt;/span&gt; + I + &lt;span&gt;&#x27;,.5)&#x27;&lt;/span&gt; : &lt;span&gt;&#x27;#cca&#x27;&lt;/span&gt;, i &amp;lt; &lt;span&gt;7&lt;/span&gt;;) beginPath(fill(arc(U - i / &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;24&lt;/span&gt; - i / &lt;span&gt;2&lt;/span&gt;, k == &lt;span&gt;13&lt;/span&gt; ? &lt;span&gt;4&lt;/span&gt; - (i++) / &lt;span&gt;2&lt;/span&gt; : &lt;span&gt;8&lt;/span&gt; - i++, &lt;span&gt;0&lt;/span&gt;, M.PI * &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;))); &lt;span&gt;else&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; (; x = T(i), y = Q() * &lt;span&gt;2&lt;/span&gt; - &lt;span&gt;1&lt;/span&gt;, D = x * x + y * y, B = E(D - x / &lt;span&gt;.9&lt;/span&gt; - &lt;span&gt;1.5&lt;/span&gt; * y + &lt;span&gt;1&lt;/span&gt;), R = &lt;span&gt;67&lt;/span&gt; * (B + &lt;span&gt;1&lt;/span&gt;) * (L = k / &lt;span&gt;9&lt;/span&gt; + &lt;span&gt;.8&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;, i++ &amp;lt; W;) &lt;span&gt;if&lt;/span&gt; (D &amp;lt; &lt;span&gt;1&lt;/span&gt;) beginPath(strokeStyle = V + R + &lt;span&gt;&#x27;,&#x27;&lt;/span&gt; + (R + B * L &amp;gt;&amp;gt; &lt;span&gt;0&lt;/span&gt;) + &lt;span&gt;&#x27;,40,.1)&#x27;&lt;/span&gt;), moveTo(U + x * &lt;span&gt;8&lt;/span&gt;, U + y * &lt;span&gt;8&lt;/span&gt;), lineTo(U + x * U, U + y * U), stroke();&lt;br/&gt;            &lt;span&gt;for&lt;/span&gt; (y = H = k + E(k++) * &lt;span&gt;25&lt;/span&gt;, R = Q() * W; P = &lt;span&gt;3&lt;/span&gt;, j &amp;lt; H;) J[O++] = [x += T(R) * P + Q() * &lt;span&gt;6&lt;/span&gt; - &lt;span&gt;3&lt;/span&gt;, y += Q() * U - &lt;span&gt;8&lt;/span&gt;, z += T(R - &lt;span&gt;11&lt;/span&gt;) * P + Q() * &lt;span&gt;6&lt;/span&gt; - &lt;span&gt;3&lt;/span&gt;, j / H * &lt;span&gt;20&lt;/span&gt; + ((j += U) &amp;gt; H &amp;amp; Q() &amp;gt; &lt;span&gt;.8&lt;/span&gt; ? Q(P = &lt;span&gt;9&lt;/span&gt;) * &lt;span&gt;4&lt;/span&gt; : &lt;span&gt;0&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;]&lt;br/&gt;        }&lt;br/&gt;        setInterval(&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;G&lt;/span&gt;(&lt;span&gt;m, l&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;            A = T(D - &lt;span&gt;11&lt;/span&gt;);&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (l) &lt;span&gt;return&lt;/span&gt; (m[&lt;span&gt;2&lt;/span&gt;] - l[&lt;span&gt;2&lt;/span&gt;]) * A + (l[&lt;span&gt;0&lt;/span&gt;] - m[&lt;span&gt;0&lt;/span&gt;]) * T(D);&lt;br/&gt;            a.clearRect(&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, W, W);&lt;br/&gt;            J.sort(G);&lt;br/&gt;            &lt;span&gt;for&lt;/span&gt; (i = &lt;span&gt;0&lt;/span&gt;; L = J[i++]; a.drawImage(M[L[&lt;span&gt;3&lt;/span&gt;] + &lt;span&gt;1&lt;/span&gt;], &lt;span&gt;207&lt;/span&gt; + L[&lt;span&gt;0&lt;/span&gt;] * A + L[&lt;span&gt;2&lt;/span&gt;] * T(D) &amp;gt;&amp;gt; &lt;span&gt;0&lt;/span&gt;, L[&lt;span&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;)) {&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; (i == &lt;span&gt;2e3&lt;/span&gt;) a.fillText(&lt;span&gt;&#x27;Merry Christmas!&#x27;&lt;/span&gt;, U, &lt;span&gt;412&lt;/span&gt;);&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; (!(i % &lt;span&gt;7&lt;/span&gt;)) a.drawImage(M[&lt;span&gt;13&lt;/span&gt;], ((&lt;span&gt;157&lt;/span&gt; * (i * i) + T(D * &lt;span&gt;5&lt;/span&gt; + i * i) * &lt;span&gt;5&lt;/span&gt;) % W) &amp;gt;&amp;gt; &lt;span&gt;0&lt;/span&gt;, ((&lt;span&gt;113&lt;/span&gt; * i + (D * i) / &lt;span&gt;60&lt;/span&gt;) % (&lt;span&gt;290&lt;/span&gt; + i / &lt;span&gt;99&lt;/span&gt;)) &amp;gt;&amp;gt; &lt;span&gt;0&lt;/span&gt;);&lt;br/&gt;            }&lt;br/&gt;            D += &lt;span&gt;.02&lt;/span&gt;&lt;br/&gt;        }, &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;        &lt;span&gt;// end of submission //&lt;/span&gt;&lt;br/&gt;    &lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4、在当前目录下用命令行开启开发者热加载工具查看效果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;wails dev&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;效果图来啦，提前祝各位2021圣诞节快乐~：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://cdn.xinchao.com/goods/202112/6082eea0f69486dc233fecde834dd8911920x1080.gif&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5、当然我们也可以打包成自己的可执行二进制文件哟：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;wails build&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生成的文件放在了build/bin下。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;05&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实之前我也知道有不少的go桌面应用库，可要么就是效率低，要么就是生产的二进制文件太大，但wails似乎让我看到了新希望，很多简单的桌面级小应用可能会因此而诞生更多。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;06&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;wails中文文档（https://wails.io/zh-Hans/docs/reference/options）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;源码仓库（(https://github.com/wailsapp/wails）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;p&gt;各位Gopher同学，最近我们社区打算推出一个类似GoCN每日新闻的新栏目《酷Go推荐》，主要是每周推荐一个库或者好的项目，然后写一点这个库使用方法或者优点之类的，这样可以真正的帮助到大家能够学习到&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>