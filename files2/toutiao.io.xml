<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>0f2bd7c6e7536f9376510ecf54cd7c16</guid>
<title>漫画 Go 语言 Defer 机制及妙用</title>
<link>https://toutiao.io/k/9q7xgh3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span data-offset-key=&quot;dh52o-0-0&quot;&gt;赖思与甜甜，有趣有料有温度，技术学习有思路！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span data-offset-key=&quot;cir98-0-0&quot;&gt;Go语言的defer机制除了错误处理，更多的是处理资源关闭。看看赖思还给甜甜讲解了哪些Defer的妙用呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;figure data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;e56ff-0-0&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/pafDRXbWF0SeJjtgSgvsDs7DuEMBYHLAkaQFGeEHPlnic4qQhMLB54GqCur1TN1lqBia9n70WBjN7Ea4nHovAnHQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1440&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;pre data-offset-key=&quot;38e8g-0-0&quot;&gt;&lt;pre data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;38e8g-0-0&quot;&gt;&lt;div data-offset-key=&quot;38e8g-0-0&quot;&gt;&lt;span&gt;&lt;span data-offset-key=&quot;38e8g-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; mu sync.Mutex&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; fb []&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ReadFile&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(filename &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;([]&lt;span class=&quot;code-snippet__keyword&quot;&gt;byte&lt;/span&gt;, error)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    f, err := os.Open(filename)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;, err&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;defer&lt;/span&gt; f.Close()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    mu.Lock()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;defer&lt;/span&gt; mu.Unlock()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    fb = ReadAll(f)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; fb&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;span&gt;&lt;span data-offset-key=&quot;38e8g-82-0&quot;&gt;&lt;span data-text=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;figure data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;e47uj-0-0&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/pafDRXbWF0SeJjtgSgvsDs7DuEMBYHLA7r7pJKorT0ULBlTian78WYzWrbBVrO9jEibjan3MOGZyNRtPuk6ibdxEQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1440&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;figure data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;5t9vm-0-0&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/pafDRXbWF0SeJjtgSgvsDs7DuEMBYHLAXAv7uSCMD5M7sJrGf3TH3qgJqhKfukdD34mQvLPCzpAjqHBort0dog/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1440&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;pre data-offset-key=&quot;rger-0-0&quot;&gt;&lt;pre data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;rger-0-0&quot;&gt;&lt;div data-offset-key=&quot;rger-0-0&quot;&gt;&lt;span&gt;&lt;span data-offset-key=&quot;rger-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, filename := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; filenames {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    f, err := os.Open(filename)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; err&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;defer&lt;/span&gt; f.Close() &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;span&gt;&lt;span data-offset-key=&quot;rger-40-0&quot;&gt;&lt;span data-text=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;&lt;span data-offset-key=&quot;17lvp-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;&gt;关于defer使用时还需要注意的是：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span data-offset-key=&quot;em1r2-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;&gt;1. 当执行到defer语句时，其后函数的参数会被计算然后封装“压栈”，当defer被触发时，将所有“压栈”的方法“出栈”并执行;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre data-offset-key=&quot;4jdnr-0-0&quot;&gt;&lt;pre data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;4jdnr-0-0&quot;&gt;&lt;div data-offset-key=&quot;4jdnr-0-0&quot;&gt;&lt;span&gt;&lt;span data-offset-key=&quot;4jdnr-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   fmt.Println(f2())}&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(a &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(a &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      a += &lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      fmt.Println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;defer a = &quot;&lt;/span&gt;, a)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }(a)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   a += &lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;span&gt;&lt;span data-offset-key=&quot;4jdnr-64-0&quot;&gt;&lt;span data-text=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;figure data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;b9mhb-0-0&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.11566265060240964&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/pafDRXbWF0SeJjtgSgvsDs7DuEMBYHLAfqPES5MgfQjicjalSAOc72zyibQicjpFbJeCaOsu3n4SXEBl8nBbicGM2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span data-offset-key=&quot;6ofpu-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;&gt;当执行到defer时，a初始值默认是0，所以func(0)会被压栈，当defer被触发时，func(0)被执行，输出a=5。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span data-offset-key=&quot;7gv6q-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;&gt;2. 当一个方法中有多个defer时，defer的执行顺序是LIFO（先进后出）的；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre data-offset-key=&quot;5ujna-0-0&quot;&gt;&lt;pre data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;5ujna-0-0&quot;&gt;&lt;div data-offset-key=&quot;5ujna-0-0&quot;&gt;&lt;span&gt;&lt;span data-offset-key=&quot;5ujna-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;defer&lt;/span&gt; fmt.&lt;span class=&quot;code-snippet__type&quot;&gt;Println&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;one&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;defer&lt;/span&gt; fmt.&lt;span class=&quot;code-snippet__type&quot;&gt;Println&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;two&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;defer&lt;/span&gt; fmt.&lt;span class=&quot;code-snippet__type&quot;&gt;Println&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;three&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;span&gt;&lt;span data-offset-key=&quot;5ujna-32-0&quot;&gt;&lt;span data-text=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;&lt;span data-offset-key=&quot;b3r00-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;&gt;执行这段代码，输出顺序是：three-&amp;gt; two-&amp;gt; one&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span data-offset-key=&quot;ek5ga-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;&gt;另外，defer还有一个妙用，就是在调试复杂程序时，被用于记录何时进入和退出函数。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre data-offset-key=&quot;37f47-0-0&quot;&gt;&lt;pre data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;37f47-0-0&quot;&gt;&lt;div data-offset-key=&quot;37f47-0-0&quot;&gt;&lt;span&gt;&lt;span data-offset-key=&quot;37f47-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;bigSlowOperation&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;defer&lt;/span&gt; trace(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bigSlowOperation&quot;&lt;/span&gt;)()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    time.&lt;span class=&quot;code-snippet__type&quot;&gt;Sleep&lt;/span&gt;(&lt;span class=&quot;code-snippet__number&quot;&gt;10&lt;/span&gt; * time.&lt;span class=&quot;code-snippet__type&quot;&gt;Second&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(msg string)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    start := time.&lt;span class=&quot;code-snippet__type&quot;&gt;Now&lt;/span&gt;()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.&lt;span class=&quot;code-snippet__type&quot;&gt;Printf&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;enter %s&quot;&lt;/span&gt;, msg)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; { &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        log.&lt;span class=&quot;code-snippet__type&quot;&gt;Printf&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;exit %s (%s)&quot;&lt;/span&gt;, msg,time.&lt;span class=&quot;code-snippet__type&quot;&gt;Since&lt;/span&gt;(start)) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;span&gt;&lt;span data-offset-key=&quot;37f47-86-0&quot;&gt;&lt;span data-text=&quot;true&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;figure data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;cbgff-0-0&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/pafDRXbWF0SeJjtgSgvsDs7DuEMBYHLAvBvDCiaYw7MG5SESdicL9nyc3XIJKQVRqNJQyYg61mtHVx2AI1A0xSkA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1440&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;figure data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;8mpii-0-0&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/pafDRXbWF0SeJjtgSgvsDs7DuEMBYHLArx3fiaanc7Lt3ial7qZO7UicFGS4hKGDdAIvgc4ibiciaLQI4lfJwiaoZ4syg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1440&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;figure data-block=&quot;true&quot; data-editor=&quot;an97u&quot; data-offset-key=&quot;10mmv-0-0&quot;&gt;&lt;hr/&gt;&lt;/figure&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span data-offset-key=&quot;55b1a-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;&gt;有趣有料有温度，和我一起学技术！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span data-offset-key=&quot;6q25f-0-0&quot;&gt;&lt;span data-text=&quot;true&quot;&gt;欢迎关注公众号 &lt;/span&gt;&lt;/span&gt;&lt;span data-offset-key=&quot;6q25f-0-1&quot;&gt;&lt;span data-text=&quot;true&quot;&gt;来思Go&lt;/span&gt;&lt;/span&gt;&lt;span data-offset-key=&quot;6q25f-0-2&quot;&gt;&lt;span data-text=&quot;true&quot;&gt;，收看更多赖思与甜甜的技术学习日常。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/pafDRXbWF0Qm7Ziak8d3Jqg28qia9iaHibjtKQJZmM4je8fXiaJeyoxBY1icqul5nWHO06Rr3amUicfHY887r4G4R7TXQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e55b1563c88fd01209cc4b0f0ec508ab</guid>
<title>Redis 分布式锁遇到的序列化问题</title>
<link>https://toutiao.io/k/adg4qv6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;场景描述&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近使用 Redis 遇到了一个类似分布式锁的场景，跟 Redis 实现分布式锁类比一下，就是释放锁失败，也就是缓存删不掉。又踩了一个 Redis 的坑……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是什么个情况、又是怎样排查的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文主要对此做个复盘。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;问题排查&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然是释放锁有问题，那就先看看释放锁的代码吧。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;释放锁&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;释放锁使用了 Lua 脚本，代码逻辑和 Lua 脚本如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; Object &lt;span&gt;release&lt;/span&gt;&lt;span&gt;(String key, String value)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  Object existedValue = stringRedisTemplate.opsForValue().get(key);&lt;br/&gt;  log.info(&lt;span&gt;&quot;key:{}, value:{}, redis旧值：{}&quot;&lt;/span&gt;, key, value, existedValue);&lt;br/&gt;  &lt;br/&gt;  DefaultRedisScript&amp;lt;Long&amp;gt; redisScript = &lt;span&gt;new&lt;/span&gt; DefaultRedisScript&amp;lt;&amp;gt;(COMPARE_AND_DELETE, Long&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; stringRedisTemplate.execute(redisScript, Collections.singletonList(key), value);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt; redis.call(&lt;span&gt;&#x27;get&#x27;&lt;/span&gt;,KEYS[&lt;span&gt;1&lt;/span&gt;]) == ARGV[&lt;span&gt;1&lt;/span&gt;]&lt;br/&gt;&lt;span&gt;then&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; redis.call(&lt;span&gt;&#x27;del&#x27;&lt;/span&gt;,KEYS[&lt;span&gt;1&lt;/span&gt;])&lt;br/&gt;&lt;span&gt;else&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;end&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;删除脚本中，会先获取 Redis key 的旧值，并与入参 value 比较，二者相等时才会删除。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果释放成功，也就是 Redis 缓存删除成功，返回值为 1，否则失败返回为 0。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;乍一看代码似乎没啥问题，测一下试试？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过既然要释放锁，在此之前肯定要加锁，先看看加锁的逻辑吧。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;加锁&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说到加锁这里的逻辑，代码里有两种实现方式：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; Object &lt;span&gt;lock01&lt;/span&gt;&lt;span&gt;(String key, String value)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  log.info(&lt;span&gt;&quot;lock01, key={}, value={}&quot;&lt;/span&gt;, key, value);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; redisTemplate.opsForValue().setIfAbsent(key, value, LOCKED_TIME, TimeUnit.SECONDS);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; Object &lt;span&gt;lock02&lt;/span&gt;&lt;span&gt;(String key, String value)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  log.info(&lt;span&gt;&quot;lock02, key={}, value={}&quot;&lt;/span&gt;, key, value);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; stringRedisTemplate.opsForValue().setIfAbsent(key, value, LOCKED_TIME, TimeUnit.SECONDS);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实它们的区别就在于前者使用了 RedisTemplate，而后者使用的是 StringRedisTemplate。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Q: 等等……为什么会有两个 template？？&lt;/p&gt;&lt;p&gt;A: 憋说了，是我挖的坑，RedisTemplate 是我加的……现在回想都没想明白当初为什么这样搞，可能真是脑子一时抽风了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先测试一下这两个方法？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;测试一下&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用两种方式分别加锁，其中：lock01 为 k1 和 v1，lock02 为 k2 和 v2。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分别看下 k1、k2 的值（使用工具：RDM, Redis Desktop Manager）：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.32421875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCST7zGKoGN7yTrPMInbKpWE2geDT7nuHLT7ia5ZGdLVOULCibM46ic9pxTicLERYETwM7U7E6ibSblQxXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.35546875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCST7zGKoGN7yTrPMInbKpWEJnSoibMiaVqL2sbvY79pUVmJbamr63dwJuy9mN9QKEvdGbQKltqKVqwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到 v1 是有双引号的，而 v2 没有。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;猜测应该是序列化的问题，看看 Redis 配置？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;RedisTemplate 配置&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;加锁那里可以看到，k1 使用了 RedisTemplate，而 k2 是 StringRedisTemplate，它们两个的配置有什么区别呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中 RedisTemplate 的配置是自定义的，如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@AutoConfigureAfter&lt;/span&gt;(RedisAutoConfiguration&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;RedisConfig&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; RedisTemplate&amp;lt;String, Object&amp;gt; &lt;span&gt;redisTemplate&lt;/span&gt;&lt;span&gt;(RedisConnectionFactory redisConnectionFactory)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    RedisTemplate&amp;lt;String, Object&amp;gt; redisTemplate = &lt;span&gt;new&lt;/span&gt; RedisTemplate&amp;lt;&amp;gt;();&lt;br/&gt;    redisTemplate.setConnectionFactory(redisConnectionFactory);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 使用 Jackson2JsonRedisSerialize 替换默认序列化&lt;/span&gt;&lt;br/&gt;    Jackson2JsonRedisSerializer&amp;lt;Object&amp;gt; jackson2JsonRedisSerializer&lt;br/&gt;        = &lt;span&gt;new&lt;/span&gt; Jackson2JsonRedisSerializer&amp;lt;&amp;gt;(Object&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    ObjectMapper objectMapper = &lt;span&gt;new&lt;/span&gt; ObjectMapper();&lt;br/&gt;    objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);&lt;br/&gt;    objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);&lt;br/&gt;    objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, &lt;span&gt;false&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;    jackson2JsonRedisSerializer.setObjectMapper(objectMapper);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 设置 key、value 的序列化规则（尤其是 value）&lt;/span&gt;&lt;br/&gt;    redisTemplate.setKeySerializer(&lt;span&gt;new&lt;/span&gt; StringRedisSerializer());&lt;br/&gt;    redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);&lt;br/&gt;    redisTemplate.afterPropertiesSet();&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; redisTemplate;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;StringRedisTemplate 的配置是 SpringBoot 默认的，即：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@ConditionalOnClass&lt;/span&gt;({RedisOperations&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;})&lt;br/&gt;@&lt;span&gt;EnableConfigurationProperties&lt;/span&gt;(&lt;/span&gt;{RedisProperties&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;})&lt;br/&gt;@&lt;span&gt;Import&lt;/span&gt;(&lt;/span&gt;{LettuceConnectionConfiguration&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;, &lt;span&gt;JedisConnectionConfiguration&lt;/span&gt;.&lt;span&gt;class&lt;/span&gt;})&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;RedisAutoConfiguration&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;RedisAutoConfiguration&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;@ConditionalOnMissingBean&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; StringRedisTemplate &lt;span&gt;stringRedisTemplate&lt;/span&gt;&lt;span&gt;(RedisConnectionFactory redisConnectionFactory)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; UnknownHostException &lt;/span&gt;{&lt;br/&gt;    StringRedisTemplate template = &lt;span&gt;new&lt;/span&gt; StringRedisTemplate();&lt;br/&gt;    template.setConnectionFactory(redisConnectionFactory);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; template;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;PS: SpringBoot 版本为 2.1.13.RELEASE&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;点进去 StringRedisTemplate 看下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;StringRedisTemplate&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;RedisTemplate&lt;/span&gt;&amp;lt;&lt;span&gt;String&lt;/span&gt;, &lt;span&gt;String&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;    &lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;StringRedisTemplate&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// 注意这里的序列化设置&lt;/span&gt;&lt;br/&gt;    setKeySerializer(RedisSerializer.string());&lt;br/&gt;    setValueSerializer(RedisSerializer.string());&lt;br/&gt;    setHashKeySerializer(RedisSerializer.string());&lt;br/&gt;    setHashValueSerializer(RedisSerializer.string());&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意下序列化设置，继续跟进，看到底是什么方式：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;interface&lt;/span&gt; &lt;span&gt;RedisSerializer&lt;/span&gt;&amp;lt;&lt;span&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;&lt;span&gt;static&lt;/span&gt; RedisSerializer&amp;lt;String&amp;gt; &lt;span&gt;string&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; StringRedisSerializer.UTF_8;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;StringRedisSerializer&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;RedisSerializer&lt;/span&gt;&amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; StringRedisSerializer UTF_8 = &lt;span&gt;new&lt;/span&gt; StringRedisSerializer(StandardCharsets.UTF_8);&lt;br/&gt;    &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到，StringRedisTemplate 的 key 和 value 默认都是用 StringRedisSerializer(StandardCharsets.UTF_8) 进行序列化的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 RedisTemplate 的 key 使用 StringRedisSerializer，value 使用的是 Jackson2JsonRedisSerializer 序列化（至于为什么用这个，这里就不是我写的了）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到这里，基本可以定位到问题所在了：就是 RedisTemplate 的 value 序列化和 StringRedisTemplate 不一致。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果改成一致就可以了吗？验证一下试试。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;验证推论&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把 RedisTemplate 的 value 序列化方式修改为 StringRedisSerializer：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@AutoConfigureAfter&lt;/span&gt;(RedisAutoConfiguration&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;RedisConfig&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; RedisTemplate&amp;lt;String, Object&amp;gt; &lt;span&gt;redisTemplate&lt;/span&gt;&lt;span&gt;(RedisConnectionFactory redisConnectionFactory)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    RedisTemplate&amp;lt;String, Object&amp;gt; redisTemplate = &lt;span&gt;new&lt;/span&gt; RedisTemplate&amp;lt;&amp;gt;();&lt;br/&gt;      &lt;br/&gt;    &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    redisTemplate.setKeySerializer(&lt;span&gt;new&lt;/span&gt; StringRedisSerializer());&lt;br/&gt;    redisTemplate.setValueSerializer(&lt;span&gt;new&lt;/span&gt; StringRedisSerializer());&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; redisTemplate;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再调用两种加锁逻辑，看下 k1、k2 的值：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.33515625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCST7zGKoGN7yTrPMInbKpWE7paiaILVicvP7A6dWAsqQPNkibtukfMQeKywPtmTsF0xp6k5NPBvrtsTA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.35859375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCST7zGKoGN7yTrPMInbKpWEQ8EQmt2hGz62HXVuRMQDzVAMzf8ficTnic9CECJEkYIWibfhE9Age70Ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到，v1 的双引号没了，释放锁的服务也能正常删掉了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;嗯，就是这里的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至于两者序列化的源码，有兴趣的盆友们可以继续研究，这里就不再深入探讨了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;小结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文遇到的这个问题，主要是因为使用了不同的 RedisTemplate 来加锁和释放锁，而这两个 template 使用了不同的序列化方式，最终还是序列化带来的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当初真是草率了，而且一时还没测出来……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于生产环境，还是要慎之又慎：如临深渊，如履薄冰。&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4NzYyMDE4MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCQ3hdcibbKDTtUib9yUnFAicJ4RoeJPVgwzjRejhoNbVYcCzyHtcW6vn9EbxP3PpErEIRkibrms8KEYDQ/0?wx_fmt=png&quot; data-nickname=&quot;WriteOnRead&quot; data-alias=&quot;WriteOnRead&quot; data-signature=&quot;Java学习与分享。知易行难，坚持更难。加油！&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c454488277b2d6e15851cdd1ab6ad4db</guid>
<title>京东个性化推荐系统解析</title>
<link>https://toutiao.io/k/icrka3o</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;27&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;27&quot; data-custom=&quot;#1e9be8&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;点击标题下「&lt;em&gt;&lt;strong&gt;搜索与推荐Wiki&lt;/strong&gt;&lt;/em&gt;」可快速关注&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;93040&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;92886&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;▼&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;相关推荐&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;▼&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;1、&lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDU3OTgyOQ==&amp;amp;mid=2247494249&amp;amp;idx=1&amp;amp;sn=030794352316f7c728cfc0dae1fd4d04&amp;amp;chksm=ea6522f3dd12abe5e92df1eaaa1ce5fefa76515e1b64f9eb5e0ddec9e34785021dc317e33c8c&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;AUC和线上点击率指标不一致问题分析&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;span&gt;、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDU3OTgyOQ==&amp;amp;mid=2247494204&amp;amp;idx=1&amp;amp;sn=1d0535badee0361af63cddcfe9ac88fa&amp;amp;chksm=ea6522a6dd12abb0df0cf7ffeb800dad5f59d7fb03fd8b188bdb3912c3b47db479a01c7ca170&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;电商指标详细介绍和推荐系统常用评估指标&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;3、&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDU3OTgyOQ==&amp;amp;mid=2247494219&amp;amp;idx=1&amp;amp;sn=249d2d84a21877c622a19f7bfc9e3a05&amp;amp;chksm=ea6522d1dd12abc74c34413986e247e0bd66d33e17babd1bb25cf7405eb0b81f03536fb44e78&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;算法工程师的自我修养&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;作者：fisherman，Davidxiaozhi&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;京东个性化推荐系统&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在电商领域，推荐的价值在于挖掘用户潜在购买需求，缩短用户到商品的距离，提升用户的购物体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;京东推荐的演进史是绚丽多彩的。&lt;/span&gt;&lt;span&gt;京东的推荐起步于2012年，当时的推荐产品甚至是基于规则匹配做的。&lt;/span&gt;&lt;span&gt;整个推荐产品线组合就像一个个松散的原始部落一样，部落与部落之前没有任何工程、算法的交集。&lt;/span&gt;&lt;span&gt;2013年，国内大数据时代到来，一方面如果做的事情与大数据不沾边，都显得自己水平不够，另外一方面京东业务在这一年开始飞速发展，所以传统的方式已经跟不上业务的发展了，为此推荐团队专门设计了新的推荐系统。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;随着业务的快速发展以及移动互联网的到来，多屏（京东App、京东PC商城、M站、微信手Q等）互通，推荐类型从传统的商品推荐，逐步扩展到其他类型的推荐，如活动、分类、优惠券、楼层、入口图、文章、清单、好货等。个性化推荐业务需求比较强烈，基于大数据和个性化推荐算法，实现向不同用户展示不同内容的效果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为此，团队于2015年底再次升级推荐系统。2016年618期间，个性化推荐大放异彩，特别是团队开创的“智能卖场”，实现了活动会场的个性化分发，不仅带来GMV的明显提升，也大幅降低了人工成本，大大提高了流量效率和用户体验，从而达到商家和用户双赢，此产品获得了2016年度的集团优秀产品。为了更好地支撑多种个性化场景推荐业务，推荐系统一直在迭代优化升级，未来将朝着“满屏皆智能推荐”的方向发展。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/siayVELeBkzWBXV8e57JJ4OyQuuMXTfadZCia0bN2sFBfdbTRlFx0S97kyKKjic5v6eaZ8cY4WQt0UEu4dkyowHYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rl6daM2XiabyLSr7nSTyAzcoZqPAsfe5tOOrXX0aciaVAfibHeQk5NOfQTdESRsezCwstPF02LeE4RHaH6NBEB9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;推荐产品&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户从产生购买意向，到经历购买决策，直至最后下单的整个过程，在任何一个购物链路上的节点，推荐产品都能在一定程度上帮助用户决策。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/siayVELeBkzWBXV8e57JJ4OyQuuMXTfadZCia0bN2sFBfdbTRlFx0S97kyKKjic5v6eaZ8cY4WQt0UEu4dkyowHYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rl6daM2XiabyLSr7nSTyAzcoZqPAsfe5tOOrXX0aciaVAfibHeQk5NOfQTdESRsezCwstPF02LeE4RHaH6NBEB9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;推荐产品发展过程&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐产品发展历程主要经历了几个阶段（图1），由简单的关联推荐过程到个性化推荐，逐步过渡到场景智能推荐。从相关、相似的产品推荐过渡到多特征、多维度、用户实时行为、结合用户场景进行的全方位智能推荐。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5928571428571429&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PNzW2yzfW9nkia96AehLsT2Ms5icibl3IicgpjnnaLckWMbPopjVZJicaAI1k9uUve0fILJn8TA4NAP4uZBxjfD6JIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;420&quot; data-backw=&quot;578&quot; data-backh=&quot;343&quot;/&gt;&lt;span&gt;图1　推荐产品发展历程&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/siayVELeBkzWBXV8e57JJ4OyQuuMXTfadZCia0bN2sFBfdbTRlFx0S97kyKKjic5v6eaZ8cY4WQt0UEu4dkyowHYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rl6daM2XiabyLSr7nSTyAzcoZqPAsfe5tOOrXX0aciaVAfibHeQk5NOfQTdESRsezCwstPF02LeE4RHaH6NBEB9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;多屏多类型产品形态&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多类型主要指推荐类型覆盖到多种类型，如商品、活动、分类、优惠券、楼层、入口图、文章、清单、好货等。在移动互联时代，多屏场景非常普遍，整合用户在多屏的信息，能使个性化推荐更精准。多屏整合的背后技术是通过前端埋点，用户行为触发埋点事件，通过点击流系统进行多屏的行为信息收集。这些行为数据通过实时流计算平台来计算用户的兴趣偏好，从而根据用户兴趣偏好对推荐结果进行重排序，达到个性化推荐的效果。京东多屏终端如图2所示。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5036496350364964&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PNzW2yzfW9nkia96AehLsT2Ms5icibl3Iicg8vkR8Qbsbic0T2icsH3vV0jaEPhibInPeYg5EpN5SW5Z1SKUUSs1k9ibeQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;411&quot;/&gt;&lt;span&gt;图2　京东多屏终端&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;    &lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;推荐系统架构&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐系统的目标是&lt;strong&gt;通过全方位的精准数据刻画用户的购买意图，推荐用户有购买意愿的商品，给用户最好的体验，提升下单转化率，增强用户黏性&lt;/strong&gt;。推荐系统的业务架构如图3所示。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5834829443447038&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PNzW2yzfW9nkia96AehLsT2Ms5icibl3IicgXY42BQ4VPgnDbiaGofMaaDBoIicscIU5VMicv9wsIbT4HSZnZ6tIicvZ7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;557&quot; data-backw=&quot;557&quot; data-backh=&quot;325&quot;/&gt;&lt;span&gt;图3　推荐系统的业务架构&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;系统架构&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。对外提供统一的HTTP推荐服务，服务京东所有终端的推荐业务。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;模型服务&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。为了提高个性化的效果而开发的一系列公共的个性化服务，用户维度有用户行为服务和用户画像服务，商品维度有商品画像，地域维度有小区画像，特征维度有特征服务。通过这些基础服务，让个性化推荐更简单、更精准。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;机器学习&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。算法模型训练阶段，尝试多种机器学习模型，结合离线测评和在线A/B，验证不同场景下的算法模型的效果，提高推荐的转化率。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;数据平台&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。数据是推荐的源泉，包括数据收集和数据计算。数据虽然是整体推荐架构的最底层，却是非常重要的，因为数据直接关系到推荐的健康发展和效果提升。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/siayVELeBkzWBXV8e57JJ4OyQuuMXTfadZCia0bN2sFBfdbTRlFx0S97kyKKjic5v6eaZ8cY4WQt0UEu4dkyowHYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rl6daM2XiabyLSr7nSTyAzcoZqPAsfe5tOOrXX0aciaVAfibHeQk5NOfQTdESRsezCwstPF02LeE4RHaH6NBEB9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;个性化推荐架构&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在起步初期，推荐产品比较简单，每个推荐产品都是独立服务实现。新版推荐系统是一个系统性工程，其依赖数据、架构、算法、人机交互等环节的有机结合。新版推荐系统的目标，是通过个性化数据挖掘、机器学习等技术，&lt;strong&gt;将“千人一面”变为“千人千面”&lt;/strong&gt;，提高用户忠诚度和用户体验，提高用户购物决策的质量和效率；提高网站交叉销售能力，缩短用户购物路径，提高流量转化率（CVR）。目前新版推荐系统支持多类型个性化推荐，包括商品、店铺、品牌、活动、优惠券、楼层等。新版个性化推荐系统架构如图4所示。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.6173228346456693&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PNzW2yzfW9nkia96AehLsT2Ms5icibl3IicggvBPGNScvg4z0etOQTWkoeogQBHzNe5NmEkWurALusXMty7FUJXqrg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;635&quot; data-backw=&quot;578&quot; data-backh=&quot;357&quot;/&gt;&lt;span&gt;图4　新版个性化推荐系统架构&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;个性化推荐系统架构图中不同的颜色代表不同的业务处理场景：数据处理部分（最底层绿色模块），包括离线数据预处理、机器学习模型训练，以及在线实时行为的接入、实时特征计算。推荐平台（蓝色模块），主要体现响应用户请求时推荐系统的各服务模块之间的交互关系。推荐系统核心模块：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;推荐网关&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。推荐服务的入口，负责推荐请求的合法性检查、请求分发、在线Debug 以及组装请求响应的结果。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;调度引擎&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。负责推荐服务按策略调度及流量分发，主要根据配置中心的推荐产品 的实验配置策略进行分流，支持按用户分流、随机分流和按关键参数分流。支持自定义埋 点，收集实时数据；支持应急预案功能，处理紧急情况，秒级生效。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;推荐引擎&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。负责推荐在线算法逻辑实现，主要包括召回、过滤、特征计算、排序、 多样化等处理过程。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个性化基础服务&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。目前主要个性化基础服务有用户画像、商品画像、用户行为、 预测服务。用户画像包括用户的长期兴趣、短期兴趣、实时兴趣。兴趣主要有性别、品牌 偏好、品类偏好、购买力等级、自营偏好、尺码颜色偏好、促销敏感度、家庭情况等。商品画像主要包括商品的产品词、修饰词、品牌词、质量分、价格等级、性别、年龄、标签等。用户行为主要获取用户近期行为，包括用户的搜索、点击、关注、加入购车、下单等。预测服务主要是基于用户的历史行为，使用机器学习训练模型，用于调整召回候选集的权重。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;特征服务平台&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。负责为个性服务提供特征数据和特征计算，特征服务平台主要针对 特征数据，进行有效的声明、管理，进而达到特征资源的共享，快速支持针对不同的特征进行有效的声明、上线、测试以及A/B实验效果对比。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;个性化技术（橙色模块），个性化主要通过特征和算法训练模型来进行重排序，达到精准推荐的目的。&lt;/span&gt;&lt;span&gt;特征服务平台主要用于提供大量多维度的特征信息，推荐场景回放技术是指通过用户实时场景特征信息反馈到推荐排序，在线学习（Online-Learning）和深度学习都是大规模特征计算的个性化服务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;个性化推荐系统的主要优势体现为支持多类型推荐和多屏产品形态，支持算法模型A/B实验快速迭代，支持系统架构与算法解耦，支持存储资源与推荐引擎计算的解耦，支持预测召回与推荐引擎计算的解耦，支持自定义埋点功能；推荐特征数据服务平台化，支持推荐场景回放。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/siayVELeBkzWBXV8e57JJ4OyQuuMXTfadZCia0bN2sFBfdbTRlFx0S97kyKKjic5v6eaZ8cY4WQt0UEu4dkyowHYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rl6daM2XiabyLSr7nSTyAzcoZqPAsfe5tOOrXX0aciaVAfibHeQk5NOfQTdESRsezCwstPF02LeE4RHaH6NBEB9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;数据平台&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;京东拥有庞大的用户量和全品类的商品以及多种促销活动，可以根据用户在京东平台上的行为记录积累数据，如&lt;strong&gt;浏览、加购物车、关注、搜索、购买、评论&lt;/strong&gt;等行为数据，以及商品本身的&lt;strong&gt;品牌、品类、描述、价格&lt;/strong&gt;等属性数据的积累，活动、素材等资源的数据积累。这些数据是大规模机器学习的基础，也是更精确地进行个性化推荐的前提。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/siayVELeBkzWBXV8e57JJ4OyQuuMXTfadZCia0bN2sFBfdbTRlFx0S97kyKKjic5v6eaZ8cY4WQt0UEu4dkyowHYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rl6daM2XiabyLSr7nSTyAzcoZqPAsfe5tOOrXX0aciaVAfibHeQk5NOfQTdESRsezCwstPF02LeE4RHaH6NBEB9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;数据收集&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户行为数据收集流程一般是用户在京东平台（京东App、京东PC网站、微信手Q）上相关操作，都会触发埋点请求点击流系统（专门用于收集行为数据的平台系统）。点击流系统接到请求后，进行实时消息发送（用于实时计算业务消费）和落本地日志（用于离线模型计算），定时自动抽取行为日志到大数据平台中心。算法人员在数据集市上通过机器学习训练模型，这些算法模型应用于推荐服务，推荐服务辅助用户决策，进一步影响用户的购物行为，购物行为数据再发送到点击流，从而达到数据收集闭环。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/siayVELeBkzWBXV8e57JJ4OyQuuMXTfadZCia0bN2sFBfdbTRlFx0S97kyKKjic5v6eaZ8cY4WQt0UEu4dkyowHYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rl6daM2XiabyLSr7nSTyAzcoZqPAsfe5tOOrXX0aciaVAfibHeQk5NOfQTdESRsezCwstPF02LeE4RHaH6NBEB9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;离线计算&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前离线计算平台涉及的计算内容主要有离线模型、离线特征、用户画像、商品画像、用户行为，离线计算主要在Hadoop上运行MapReduce，也有部分在Spark平台上计算，计算的结果通过公共导数工具导入存储库。团队考虑到业务种类繁多、类型复杂以及存储类型多样，开发了插件化导数工具，降低离线数据开发及维护的成本。数据离线计算架构如图5所示。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.42226148409893993&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PNzW2yzfW9nkia96AehLsT2Ms5icibl3Iicgicak0FGribappJp796FhjlFMLYkoG1ia2xGDuib5hk5MJDPlOcQQs1AIrQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;566&quot; data-backw=&quot;566&quot; data-backh=&quot;239&quot;/&gt;&lt;span&gt;图5　数据离线计算架构&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/siayVELeBkzWBXV8e57JJ4OyQuuMXTfadZCia0bN2sFBfdbTRlFx0S97kyKKjic5v6eaZ8cY4WQt0UEu4dkyowHYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rl6daM2XiabyLSr7nSTyAzcoZqPAsfe5tOOrXX0aciaVAfibHeQk5NOfQTdESRsezCwstPF02LeE4RHaH6NBEB9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;在线计算&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前在线计算的范围主要有&lt;strong&gt;用户实时行为、用户实时画像、用户实时反馈、实时交互特征计算&lt;/strong&gt;等。在线计算是根据业务需求，快速捕捉用户的兴趣和场景特征，从而实时反馈 到用户的推荐结果及排序，给用户专属的个性化体验。在线计算的实现消息主要来源于Kafka集群的消息订阅和JMQ消息订阅，通过Storm集群或Spark集群实时消费，推送到Redis集群和HBase集群存储。数据在线计算框架如图6所示。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.40669856459330145&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PNzW2yzfW9nkia96AehLsT2Ms5icibl3Iicgib2BOtUScBXdNWj8lC0WJNQgFy4Iic0U6EGoLQgeFxfLdJCuxSBarn5g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;627&quot; data-backw=&quot;578&quot; data-backh=&quot;235&quot;/&gt;&lt;span&gt;图6　数据在线计算架构&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;  &lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;关键技术&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐系统涉及的技术点比较多，考虑到篇幅有限，这里重点介绍个性化推荐中比较重要的部分。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/siayVELeBkzWBXV8e57JJ4OyQuuMXTfadZCia0bN2sFBfdbTRlFx0S97kyKKjic5v6eaZ8cY4WQt0UEu4dkyowHYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rl6daM2XiabyLSr7nSTyAzcoZqPAsfe5tOOrXX0aciaVAfibHeQk5NOfQTdESRsezCwstPF02LeE4RHaH6NBEB9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;推荐&lt;/strong&gt;引擎&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;个性化推荐系统的核心是推荐引擎，推荐引擎的一般处理过程是召回候选集，进行规 则过滤，使用算法模型打分，模型融合排序，推荐结果多样化展示。主要使用的技术是机器学习模型，结合知识图谱，挖掘商品间的关系，按用户场景，通过高维特征计算和海量召回，大规模排序模型，进行个性化推荐，提升排序效果，给用户极致的购物体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐引擎处理逻辑主要包括分配任务，执行推荐器，合并召回结果。推荐器负责召回 候选集、业务规则过滤、特征计算、排序等处理。推荐引擎技术架构如图7所示。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.6025848142164781&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PNzW2yzfW9nkia96AehLsT2Ms5icibl3IicgACL4NziasiaMbCaWu2OrOeox7RA9BxDs8oWvGGscQx3KGavW3fwo3niaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;619&quot; data-backw=&quot;578&quot; data-backh=&quot;348&quot;/&gt;&lt;span&gt;图7　推荐引擎技术架构&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;分配&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：根据推荐场景，按召回源进行任务拆分，关键是让分布式任务到达负载均衡。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐器。推荐引擎的核心执行组件，获取个性化推荐结果，推荐器的实现如图8所示。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.48542274052478135&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PNzW2yzfW9nkia96AehLsT2Ms5icibl3IicgBYibBxevZmo78bich6hicFTMoqXEKF2nrQ65l0fE4iaysN50iaNqk0QEalA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;686&quot; data-backw=&quot;578&quot; data-backh=&quot;281&quot;/&gt;&lt;span&gt;图8　推荐器架构&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;召回阶段&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。获取候选集，一般从基于用户画像、用户偏好、地域等维度进行召回，如果是新用户的召回资源不够，会使用冷启动服务进行召回。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;规则过滤阶段&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。对人工规则、一品多商、子母码、邮差差价等进行过滤。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;特征计算阶段&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。结合用户实时行为、用户画像、知识图谱、特征服务，计算出召回的候选集的特征向量。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;排序阶段&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。使用算法模型对召回候选集打分，根据召回源和候选集的分值，按一定的策略对候选集进行重新排序。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;合并&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：归并多个推荐器返回的推荐结果，按业务规则进行合并，考虑一定的多样性。举例来说，京东App首页“猜你喜欢”的实现过程如图9所示。首先根据用户画像信息和用户的近期行为及相关反馈信息，选择不同的召回方式，进行业务规则过滤；对满足要求的候选商品集，提取用户特征、商品特征、用户和商品的交叉特征；使用算法模型根据这些特征计算候选商品的得分；根据每个商品的得分对商品进行排序，同时会丰富推荐理由，考虑用户体验，会对最终排好序推荐结果进行微调整，如多样性展示。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5607008760951189&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PNzW2yzfW9nkia96AehLsT2Ms5icibl3IicgwO2vJDCPrWNe1kJqetWpmE3OOHI057gWaV2cIWcAFlRm2BJL2ouqVQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;799&quot; data-backw=&quot;578&quot; data-backh=&quot;324&quot;/&gt;&lt;span&gt;图9　猜你喜欢实现过程图&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;用户画像&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;京东大数据有别于其他厂商的地方就是京东拥有最长的价值链和全流程的数据积累。京东数据的特征非常全面，数据链记录着每个用户的每一步操作：从登录到搜索、浏览、选择商品、页面停留时间、评论阅读、是否关注促销，以及加入购物车、下订单、付款、配送方式，最终是否有售后和返修，整个用户的购物行为完整数据都被记录下来。通过对这些用户行为及相关场景的分析，构建了京东用户画像，如图10所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中不仅有用户的年龄、性别、购物习惯，更有根据其购物行为分析出的大量数据， 例如是否已婚，是否有孩子，对促销是否敏感等。另外，实时用户画像可以秒级分析出用户的购买意图，以及实时兴趣偏好。京东推荐用户画像技术体系如图11所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;用户画像在京东各终端的推荐产品中都有应用，618推出的智能卖场是用户画像的典型 应用场景&lt;/strong&gt;。智能卖场的产品包括发现好货、个性化楼层、秒杀、活动、优惠券、分类、标签等。以秒杀为例，推荐结果会根据当前用户的用户画像中的画像模型（性别、年龄、促销敏感度、品类偏好、购买力）进行加权，让用户最感兴趣的商品排在前面。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;用户画像也是场景推荐的核心基础&lt;/strong&gt;。以东家小院为例，根据用户的历史行为汇聚出很多场景标签，按当前用户的画像模型，调整场景标签的排序。如用户选择“包治百病”标签，会按用户画像中的性别、年龄、品类、促销敏感度等画像模型进行推荐商品的重排序。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.6370262390670554&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PNzW2yzfW9nkia96AehLsT2Ms5icibl3IicgjA35WicqPictg3oic1VZmTyKPic77EXaPiaaevA0OWa2icZNqkWJunNT7picA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;686&quot;/&gt;&lt;span&gt;图10　用户画像示意图&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.4283746556473829&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PNzW2yzfW9nkia96AehLsT2Ms5icibl3IicgWrC9wpYOa7WL6ic9PDtEqfegmm6MK46AWukiaibsFACicdqjoSBCzfp64Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;726&quot;/&gt;&lt;span&gt;图11　京东推荐用户画像技术体系&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;特征服务平台&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;特征就是一种属性的描述，特征是个性化推荐的基础，常用的特征分为单边特征和双边特征。&lt;/strong&gt;单边特征是指对象本身的属性描述，如商品的颜色；双边特征是指两个对象交互程度的描述，如某用户最近一小时浏览的品牌与候选集中品牌的匹配程度。从特征生成的场景来说，分为离线特征和实时特征。&lt;strong&gt;离线特征&lt;/strong&gt;是通过算法模型提前生成&lt;strong&gt;，实时特征&lt;/strong&gt;是通过实时计算的方式生成的。特征的质量直接影响推荐的效果、特征计算的性能，同时影响个性化推荐的处理能力。另外，共享和复用特征可以提高算法的迭代速度并节约人力成本。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;特征服务管理平台主要针对特征数据和特征计算，进行有效声明和管理，进而达到特征资源的共享和复用。&lt;/strong&gt;特征服务平台能快速满足针对制定不同的特征进行有效的声明、上线、测试以及A/B实验效果对比的需求，做到特征的可维护、可说明、可验证。特征服务平台的主要功能如下：离线特征的定制化使用，在线特征的定制化使用，由定制化特征产生新的特征，部分特征、模型在线申明，不同特征效果快速A/B。特征服务平台架构如图12所示。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.7113702623906706&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PNzW2yzfW9nkia96AehLsT2Ms5icibl3Iicg8Ab2iaKaLrv5gJT3MteyZ3SvmkicyjxwqXkiaibVbt5eGicgaNBsLlLEWlA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;686&quot; data-backw=&quot;578&quot; data-backh=&quot;411&quot;/&gt;&lt;span&gt;图12　特征服务平台架构&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/siayVELeBkzWBXV8e57JJ4OyQuuMXTfadZCia0bN2sFBfdbTRlFx0S97kyKKjic5v6eaZ8cY4WQt0UEu4dkyowHYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.7837837837837838&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rl6daM2XiabyLSr7nSTyAzcoZqPAsfe5tOOrXX0aciaVAfibHeQk5NOfQTdESRsezCwstPF02LeE4RHaH6NBEB9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;74&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;场景特征回放技术&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐的一般处理逻辑是每次请求会召回一批商品，然后根据用户的行为数据和用户模型计算出每个商品的特征。算法模型会根据每个商品的特征计算出每个商品的得分，最后选出得分最高的几个商品推荐给用户。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;线上计算特征这种行为是一次性的，不会被记录下来。因此在线下训练模型的时候，如果想利用上述的特征，就需要在线下机器上再次计算一遍这些特征。&lt;strong&gt;遗憾的是，线下计算出来的特征往往不能和线上特征完全相同，这就导致了模型训练的效果较差&lt;/strong&gt;。场景特征回放示意图如图13所示，推荐业务调用推荐引擎，推荐引擎将场景特征通过特征回放服务记录下来，推送至大数据平台，机器学习根据场景特征数据重新训练算法模型，进而影响推荐引擎中的排序，形成一个场景闭环推荐，达到更准确的个性化推荐。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.54292343387471&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PNzW2yzfW9nkia96AehLsT2Ms5icibl3IicgVV88CED6uZLUSQvOWtRJRbotq8w8YzjgvvM9YRwQeMrzczDMwk9V0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;431&quot; data-backw=&quot;431&quot; data-backh=&quot;234&quot;/&gt;&lt;span&gt;图13　场景特征回放示意图&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;场景特征回放技术架构如图14所示，场景特征回放技术实现过程如下。线上特征一般是一系列的数值，我们将这些特征按照一定的规则组装成一个字符串，然后将特征使用HTTP的POST方法异步发送到服务端。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.4908722109533469&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PNzW2yzfW9nkia96AehLsT2Ms5icibl3Iicg6l523KWMzTdNA3Iu0x2SDRMquBdtD5icpsKsJCfB23N2x09HT12rORQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;493&quot;/&gt;&lt;span&gt;图1&lt;/span&gt;&lt;span&gt;4　场景特征回放技术架构&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;服务端使用Openresty接收这些HTTP请求，并把HTTP请求中的特征数据落地到本地磁盘文件中。Openresty是一种高性能的Web服务器，能够承受很高的QPS，并且具有很高的稳定性，它的这两点特性保障了服务的稳定。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;数据抽取系统&lt;/strong&gt;把服务器集群磁盘上的数据抽取到临时仓库。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据抽取系统对数据进行压缩和过滤处理，然后推送到Hive表中。不同类型的请求会放到不同的分区中，更加方便算法工程师使用这些数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;个性化推荐系统是一个系统工程，依赖产品、数据、架构、算法、人机交互等进行场景推荐，本节重点从这几个维度阐述了京东的个性化推荐系统&lt;/strong&gt;。推荐系统随着业务发展和社会生活方式的改变而进行不断升级，经历了从PC时代到移动互联时代，从关联推荐走向个性化推荐，从纯商品推荐到多类型推荐的转变。个性化推荐系统已经实现了千人千面。诚然，个性化的效果也有待提升，有些体验类的问题也在逐步完善。目前正在进行或有待提高的方面包括：算法方面丰富知识图谱、深度学习广泛应用；推荐系统方面会更好地支持海量召回、高维特征计算、在线学习，推荐更实时，更精准；产品方面已向“满屏皆智能推荐”方向迈进。最后，希望个性化推荐系统能让购物变得简单，变得更人性化、更丰富、更美好。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.04195804195804196&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1BiahkUNKiclteCuCXiaCW4UMxvnLW4rTb6NTKnUoGsLbztIoJUj2t9ttkcdhm6ryDTH9k9b8uyl7Tj9Rf3PaWMYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;572&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;3.8&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tfMFNHRtASpMGplp8lGIoBpqOqPXntWkl0blqQeDiaNju61zZnWKLqRUmnZUMw6YC0azozUicdscEtYhewwGRrAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;10&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;3.8&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ClJhfDaMV6OJicKyML3obA8pBS2HNSRnHUB0CdnBF79ILjSFf6rgkKv6Y72MFEpibsxkgAEp6hQZibbOs8DbR7meQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;10&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;作者简介：&lt;/p&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;fisherman，时任推荐部门推荐系统负责人，负责推荐部门的架构设计及相关研发工作。&lt;/p&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;Davidxiaozhi，时任推荐部门推荐系统架构师，负责推荐系统的架构设计和系统升级。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;点击下方传送门，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;关注我们&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;哦~&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI2MDU3OTgyOQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/02kicEWsIniciaRWJ07GCCGQZ65yrAqsUqjdJ5e37HmjZBE5JaFMGb7VmW4p3YcuYRpibEzFTabwl07IaMEqCNwzcA/0?wx_fmt=png&quot; data-nickname=&quot;搜索与推荐Wiki&quot; data-alias=&quot;SearchAndRecWiki&quot; data-signature=&quot;专注于搜索和推荐系统，以系列分享为主，持续打造精品内容！&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;pre&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;—&lt;/span&gt;&lt;/strong&gt;完&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;—&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages __bg_gif&quot; data-backh=&quot;321&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;321&quot; data-ratio=&quot;0.5555555555555556&quot; data-type=&quot;gif&quot; data-w=&quot;639&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/02kicEWsInicjLSQIJKCWcOk64en0p55eBNywfpYexwFVhjtMkEZ2cUKf0qZ2BCiaL2SBo2fPm1Zdn1LYZchqSmKA/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages __bg_gif&quot; data-backh=&quot;33&quot; data-backw=&quot;546&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;33&quot; data-ratio=&quot;0.059654631083202514&quot; data-s=&quot;300,640&quot; data-type=&quot;gif&quot; data-w=&quot;637&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/TsomEQAKP4eyMZqYnRlJaibWPMPOK9EE6SaWtprTnQ0rsZd6mTHRCD2dHLKIKicHP6cibfNSAPJndY8OicbSmZYibEw/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/pre&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3032a8003f69ae26c68e33a3e03f1738</guid>
<title>几乎刷完了力扣所有的二分题，我发现了这些东西（下）</title>
<link>https://toutiao.io/k/zgrp470</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;br/&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI4MzUxNjI3OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/liaT5dytkaTemW9Fpf8y5Cez0KhBtoEU6jfSorN0N12SMnc3AkGkLoFcY9HNl2hRK3gIYyZ7g42wk5nXvSUq0Tg/0?wx_fmt=png&quot; data-nickname=&quot;力扣加加&quot; data-alias=&quot;leetcode-pp&quot; data-signature=&quot;力求用清晰直白的方式还原解题的过程，努力做西湖区最好的算法题解。&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是 lucifer。今天给大家带来的是《二分》专题。先上下本文的提纲，这个是我用 mindmap 画的一个脑图，之后我会继续完善，将其他专题逐步完善起来。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;大家也可以使用 vscode blink-mind 打开源文件查看，里面有一些笔记可以点开查看。源文件可以去我的公众号《力扣加加》回复脑图获取，以后脑图也会持续更新更多内容。vscode 插件地址：https://marketplace.visualstudio.com/items?itemName=awehook.vscode-blink-mind&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5405092592592593&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTfEcZhle6KVpDP5hWvd4L0qaZ9g2M5xhsTgz8lNp2L2Czvn7cXP6OrS9Bp2m9RXvpnhoFWjeLtZ5A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1728&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本系列包含以下专题：&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本专题预计分两部分两进行。上一节主要讲述&lt;strong&gt;「基本概念」&lt;/strong&gt; 和 &lt;strong&gt;「一个中心」&lt;/strong&gt;。这一节我们继续学习&lt;strong&gt;「两种二分类型」&lt;/strong&gt; 和&lt;strong&gt;「四大应用」&lt;/strong&gt;。没有看过上篇的建议先看一下上篇，地址在上面。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;如果觉得文章有用，请点赞留言转发一下，让我有动力继续做下去。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;上篇回顾&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上篇主要就是带大家了解几个概念，这些概念对做题极为重要，请务必掌握。接下来讲解了二分法的中心 - 折半，这个中心需要大家做任何二分都要放到脑子中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;二分法的精髓正如开篇提到的&lt;strong&gt;「二分法是一种让未知世界无机可乘的算法」&lt;/strong&gt;。二分法无论如何我们都可以舍弃一半解，也就是无论如何都可以将解空间砍半。难点就是上面提到的两点：&lt;strong&gt;「什么条件」&lt;/strong&gt; 和 &lt;strong&gt;「舍弃哪部分」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，我们继续下篇。下篇注主要内容是两种类型和四大应用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中两种类型主要解决的的是：这道题我的解空间以及明确出来了，如何用代码找出具体的值。而四大应用主要解决的是：如何构造解空间（更多的情况则是如何构建有序序列）以及一些变体。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这两部分都是实操性很强的内容。这里我提醒大家，在理解这两部分内容的同时，请大家务必牢记一个中心&lt;strong&gt;「折半」&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;两种类型&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;问题定义&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;这里的问题定义是一个狭义的问题。而如果你理解了这个问题之后，可以将这个具体的问题进行推广以适应更复杂的问题。关于推广，我们之后再谈。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;给定一个由数字组成的有序数组 nums，并给你一个数字 target。问 nums 中是否存在 target。如果存在， 则返回其在 nums 中的索引。如果不存在，则返回 - 1。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是二分查找中最简单的一种形式。当然二分查找也有&lt;strong&gt;「很多的变形」&lt;/strong&gt;，这也是二分查找容易出错，难以掌握的原因。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见变体有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果存在多个满足条件的元素，返回最左边满足条件的索引。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果存在多个满足条件的元素，返回最右边满足条件的索引。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数组不是整体有序的。比如先升序再降序，或者先降序再升序。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将一维数组变成二维数组。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;。。。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，我们逐个进行查看。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;前提&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;数组是有序的（如果无序，我们也可以考虑排序，不过要注意排序的复杂度）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;这个有序的数组可能是题目直接给的，也可能是你自己构造的。比如求数组的逆序数就可以在自己构造的有序序列上做二分。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;术语&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了后面描述问题方便，有必要引入一些约定和术语。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;二分查找中使用的术语：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;target —— 要查找的值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;index —— 当前位置&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;l 和 r —— 左右指针&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;mid —— 左右指针的中点，用来确定我们应该向左查找还是向右查找的索引（其实就是收缩解空间）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.592057761732852&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTfEcZhle6KVpDP5hWvd4L0qIwy3uKP62aDMPLaqicJ0QhibPpD6mnLhQjJKSP1gq0KXXoCibgAnvucsw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;554&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;术语图示&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;值得注意的是，除了 target 是固定不变的，其他都是动态变化的。其中 l 和 r 指的是解空间的上下界，mid 是上下界的中间值， index 是遍历指针，用于控制遍历过程。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;查找一个数&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面我们已经对问题进行了定义。接下来，我们需要对定义的问题进行&lt;strong&gt;「分析和求解」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了更好理解接下来的内容，我们解决最简单的类型 - &lt;strong&gt;「查找某一个具体值」&lt;/strong&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法描述：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;先从数组的中间元素开始，如果中间元素正好是要查找的元素，则搜索过程结束；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果目标元素大于中间元素，那么数组中小于中间元素的值都可以排除（由于数组有序，那么相当于是可以排除数组左侧的所有值），解空间可以收缩为 [mid+1, r]。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果目标元素小于中间元素，那么数组中大于中间元素的值都可以排除（由于数组有序，那么相当于是可以排除数组右侧的所有值），解空间可以收缩为 [l, mid - 1]。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果在某一步骤解空间为空，则代表找不到。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举一个具体的例子方便大家增加代入感。假设 nums 为 &lt;code&gt;[1,3,4,6,7,8,10,13,14]&lt;/code&gt;， target 为 4·。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;刚开始数组中间的元素为 7&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;7 &amp;gt; 4 ，由于 7 右边的数字都大于 7 ，因此不可能是答案。我们将范围缩写到了 7 的左侧。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4331065759637188&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTfEcZhle6KVpDP5hWvd4L0qwcLyEe6sOicd6ebtll5NWaqKeD2xt84OwbOB3pGt2h9cA7TY4Hq6qHQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;441&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;调整解空间&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;解空间变成了 [1,3,4,6]，此时中间元素为 3。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;3 &amp;lt; 4，由于 3 左边的数字都小于 3 ，因此不可能是答案。我们将范围缩写到了 3 的右侧。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.581151832460733&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTfEcZhle6KVpDP5hWvd4L0quWA67txtlYLbv7cMXlBpVfiaUic0St7vDt9u0pjIDd1xhH5IcyYmoP4g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;191&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;再次调整解空间&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;解空间变成了 [4,6]，此时中间元素为 4，正好是我们要找的，返回其索引 2 即可。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「复杂度分析」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于这种搜索算法每一次比较都使搜索范围缩小一半，是典型的二分查找。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;后面的复杂度也是类似的，不再赘述。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;思维框架&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何将上面的算法转换为容易理解的可执行代码呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家不要小看这样的一个算法。就算是这样一个简简单单，朴实无华的二分查找， 不同的人写出来的差别也是很大的。如果没有一个&lt;strong&gt;「思维框架指导你，不同的时间你可能会写出差异很大的代码。这样的话，犯错的几率会大大增加。这里给大家介绍一个我经常使用的思维框架和代码模板。」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「首先定义解空间为 [left, right]，注意是左右都闭合，之后会用到这个点」&lt;/strong&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;你可以定义别的解空间形式，不过后面的代码也相应要调整，感兴趣的可以试试别的解空间。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;由于定义的解空间为 [left, right]，因此当 left &amp;lt;= right 的时候，解空间都不为空，此时我们都需要继续搜索。也就是说终止搜索条件应该为 left &amp;lt;= right。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;举个例子容易明白一点。比如对于区间 [4,4]，其包含了一个元素 4，因此解空间不为空，需要继续搜索（试想 4 恰好是我们要找的 target，如果不继续搜索， 会错过正确答案）。而当解空间为 [left, right) 的时候，同样对于 [4,4]，这个时候解空间却是空的，因为这样的一个区间不存在任何数字·。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;循环体内，我们不断计算 mid ，并将 nums[mid] 与 目标值比对。&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果 nums[mid] 等于目标值， 则提前返回 mid（只需要找到一个满足条件的即可）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果 nums[mid] 小于目标值， 说明目标值在 mid 右侧，这个时候解空间可缩小为 [mid + 1, right] （mid 以及 mid 左侧的数字被我们排除在外）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果 nums[mid] 大于目标值， 说明目标值在 mid 左侧，这个时候解空间可缩小为 [left, mid - 1] （mid 以及 mid 右侧的数字被我们排除在外）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;循环结束都没有找到，则说明找不到，返回 -1 表示未找到。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;代码模板&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Java&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;binarySearch&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt;[] nums, &lt;span&gt;int&lt;/span&gt; target)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// 左右都闭合的区间 [l, r]&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; left = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; right = nums.length - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt;(left &amp;lt;= right) {&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; mid = left + (right - left) / &lt;span&gt;2&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt;(nums[mid] == target)&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; mid;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (nums[mid] &amp;lt; target)&lt;br/&gt;         &lt;span&gt;// 解空间变为 [mid+1, right]&lt;/span&gt;&lt;br/&gt;            left = mid + &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (nums[mid] &amp;gt; target)&lt;br/&gt;            &lt;span&gt;// 解空间变为 [left, mid - 1]&lt;/span&gt;&lt;br/&gt;            right = mid - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; -&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Python&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;binarySearch&lt;/span&gt;&lt;span&gt;(nums, target)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;# 左右都闭合的区间 [l, r]&lt;/span&gt;&lt;br/&gt;    l, r = &lt;span&gt;0&lt;/span&gt;, len(nums) - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt; l &amp;lt;= r:&lt;br/&gt;        mid = (left + right) &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; nums[mid] == target: &lt;span&gt;return&lt;/span&gt; mid&lt;br/&gt;        &lt;span&gt;# 解空间变为 [mid+1, right]&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; nums[mid] &amp;lt; target: l = mid + &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;# 解空间变为 [left, mid - 1]&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; nums[mid] &amp;gt; target: r = mid - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;-1&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;JavaScript&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;binarySearch&lt;/span&gt;(&lt;span&gt;nums, target&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; left = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; right = nums.length - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt; (left &amp;lt;= right) {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; mid = &lt;span&gt;Math&lt;/span&gt;.floor(left + (right - left) / &lt;span&gt;2&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (nums[mid] == target) &lt;span&gt;return&lt;/span&gt; mid;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (nums[mid] &amp;lt; target)&lt;br/&gt;      &lt;span&gt;// 解空间变为 [mid+1, right]&lt;/span&gt;&lt;br/&gt;      left = mid + &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (nums[mid] &amp;gt; target)&lt;br/&gt;      &lt;span&gt;// 解空间变为 [left, mid - 1]&lt;/span&gt;&lt;br/&gt;      right = mid - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;-1&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;C++&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;int&lt;/span&gt; &lt;span&gt;binarySearch&lt;/span&gt;&lt;span&gt;(&lt;span&gt;vector&lt;/span&gt;&amp;lt;&lt;span&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums, &lt;span&gt;int&lt;/span&gt; target)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt;(nums.size() == &lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;-1&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;int&lt;/span&gt; left = &lt;span&gt;0&lt;/span&gt;, right = nums.size() - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt;(left &amp;lt;= right){&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; mid = left + ((right - left) &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(nums[mid] == target){ &lt;span&gt;return&lt;/span&gt; mid; }&lt;br/&gt;    &lt;span&gt;// 解空间变为 [mid+1, right]&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt;(nums[mid] &amp;lt; target)&lt;br/&gt; left = mid + &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;// 解空间变为 [left, mid - 1]&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;else&lt;/span&gt;&lt;br/&gt; right = mid - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;-1&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;寻找最左插入位置&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面我们讲了&lt;code&gt;寻找满足条件的值&lt;/code&gt;。如果找不到，就返回 -1。那如果不是返回 -1，而是返回应该插入的位置，使得插入之后列表仍然有序呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如一个数组 nums: [1,3,4]，target 是 2。我们应该将其插入（注意不是真的插入）的位置是索引 1 的位置，即 [1,&lt;strong&gt;「2」&lt;/strong&gt;,3,4]。因此&lt;code&gt;寻找最左插入位置&lt;/code&gt;应该返回 1，而&lt;code&gt;寻找满足条件的位置&lt;/code&gt; 应该返回-1。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外如果有多个满足条件的值，我们返回最左侧的。比如一个数组 nums: [1,2,2,2,3,4]，target 是 2，我们应该插入的位置是 1。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;思维框架&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体算法：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;首先定义解空间为 [left, right]，注意是左右都闭合，之后会用到这个点。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;你可以定义别的解空间形式，不过后面的代码也相应要调整，感兴趣的可以试试别的解空间。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;由于我们定义的解空间为 [left, right]，因此当 left &amp;lt;= right 的时候，解空间都不为空。也就是说我们的终止搜索条件为 left &amp;lt;= right。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;当 A[mid] &amp;gt;= x，说明找到一个备胎，我们令 r = mid - 1 将 mid 从解空间排除，继续看看有没有更好的备胎。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;当 A[mid] &amp;lt; x，说明 mid 根本就不是答案，直接更新 l = mid + 1，从而将 mid 从解空间排除。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;最后解空间的 l 就是最好的备胎，备胎转正。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;代码模板&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Python&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;bisect_left&lt;/span&gt;&lt;span&gt;(nums, x)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;# 内置 api&lt;/span&gt;&lt;br/&gt;    bisect.bisect_left(nums, x)&lt;br/&gt;    &lt;span&gt;# 手写&lt;/span&gt;&lt;br/&gt;    l, r = &lt;span&gt;0&lt;/span&gt;, len(A) - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt; l &amp;lt;= r:&lt;br/&gt;        mid = (l + r) // &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; A[mid] &amp;gt;= x: r = mid - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;else&lt;/span&gt;: l = mid + &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; l&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;寻找最右插入位置&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;思维框架&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体算法：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;首先定义解空间为 [left, right]，注意是左右都闭合，之后会用到这个点。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;你可以定义别的解空间形式，不过后面的代码也相应要调整，感兴趣的可以试试别的解空间。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;由于我们定义的解空间为 [left, right]，因此当 left &amp;lt;= right 的时候，解空间都不为空。也就是说我们的终止搜索条件为 left &amp;lt;= right。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;当 A[mid] &amp;gt; x，说明找到一个备胎，我们令 r = mid - 1 将 mid 从解空间排除，继续看看有没有更好的备胎。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;当 A[mid] &amp;lt;= x，说明 mid 根本就不是答案，直接更新 l = mid + 1，从而将 mid 从解空间排除。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;最后解空间的 l 就是最好的备胎，备胎转正。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;代码模板&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Python&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;bisect_right&lt;/span&gt;&lt;span&gt;(nums, x)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;# 内置 api&lt;/span&gt;&lt;br/&gt;    bisect.bisect_right(nums, x)&lt;br/&gt;    &lt;span&gt;# 手写&lt;/span&gt;&lt;br/&gt;    l, r = &lt;span&gt;0&lt;/span&gt;, len(A) - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt; l &amp;lt;= r:&lt;br/&gt;        mid = (l + r) // &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; A[mid] &amp;lt;= x: l = mid + &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;else&lt;/span&gt;: r = mid - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; l&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是两种二分的基本形式了。而在实际的写代码过程中，我不会使用&lt;strong&gt;「寻找满足条件的值」&lt;/strong&gt;模板，而是直接使用&lt;strong&gt;「最左」&lt;/strong&gt; 或者 &lt;strong&gt;「最右」&lt;/strong&gt; 插入模板。为什么呢？因为后者包含了前者，并还有前者实现不了的功能。比如我要实现&lt;strong&gt;「寻找满足条件的值」&lt;/strong&gt;，就可直接使用&lt;strong&gt;「最左插入」&lt;/strong&gt;模板找到插入索引 i，只不过最后判断一下 nums[i] 是否等于 target 即可，如果不等于则返回 -1，否则返回 i。这也是为什么我&lt;strong&gt;「将二分分为两种类型，而不是三种甚至四种的原因」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外最左插入和最右插入可以结合使用从而求出&lt;strong&gt;「有序序列」&lt;/strong&gt;中和 target 相等的数的个数，这在有些时候会是一个考点。代码表示：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;nums = [&lt;span&gt;1&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;2&lt;/span&gt;,&lt;span&gt;3&lt;/span&gt;,&lt;span&gt;4&lt;/span&gt;]&lt;br/&gt;i = bisect.bisect_left(nums, &lt;span&gt;2&lt;/span&gt;) &lt;span&gt;# get 1&lt;/span&gt;&lt;br/&gt;j = bisect.bisect_right(nums, &lt;span&gt;2&lt;/span&gt;) &lt;span&gt;# get 4&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# j - i 就是 nums 中 2 的个数&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了描述方便，以后所有的最左插入二分我都会简称&lt;strong&gt;「最左二分」&lt;/strong&gt;，代码上直接用 bisect.bisect_left 表示，而最右插入二分我都会简称&lt;strong&gt;「最右二分」&lt;/strong&gt;，代码上用 bisect.bisect_right 或者 bisect.bisect 表示。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;小结&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于二分题目首先要明确解空间，然后根据一定条件（通常是和中间值比较），舍弃其中一半的解。大家可以先从查找满足条件的值的二分入手，进而学习最左和最右二分。同时大家只需要掌握最左和最右二分即可，因为后者功能大于前者。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于最左和最右二分，简单用两句话总结一下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;最左二分不断收缩右边界，最终返回左边界&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;最右二分不断收缩左边界，最终返回右边界&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;四大应用&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基础知识铺垫了差不多了。接下来，我们开始干货技巧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来要讲的：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;能力检测和计数二分本质差不多，都是&lt;strong&gt;「普通二分」&lt;/strong&gt; 的泛化。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;前缀和二分和插入排序二分，本质都是在&lt;strong&gt;「构建有序序列」&lt;/strong&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那让我们开始吧。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;能力检测二分&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;能力检测二分一般是：定义函数 possible， 参数是 mid，返回值是布尔值。外层根据返回值调整&quot;解空间&quot;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例代码（以最左二分为例）：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;ability_test_bs&lt;/span&gt;&lt;span&gt;(nums)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;possible&lt;/span&gt;&lt;span&gt;(mid)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;pass&lt;/span&gt;&lt;br/&gt;  l, r = &lt;span&gt;0&lt;/span&gt;, len(A) - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt; l &amp;lt;= r:&lt;br/&gt;      mid = (l + r) // &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 只有这里和最左二分不一样&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; possible(mid): l = mid + &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;else&lt;/span&gt;: r = mid - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; l&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和最左最右二分这两种最最基本的类型相比，能力检测二分&lt;strong&gt;「只是将 while 内部的 if 语句调整为了一个函数罢了」&lt;/strong&gt;。因此能力检测二分也分最左和最右两种基本类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基本上大家都可以用这个模式来套。明确了解题的框架，我们最后来看下能力检测二分可以解决哪些问题。这里通过三道题目带大家感受一下，类似的题目还有很多，大家课后自行体会。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;875. 爱吃香蕉的珂珂（中等）&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;题目地址&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://leetcode-cn.com/problems/koko-eating-bananas/description/&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;题目描述&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;珂珂喜欢吃香蕉。这里有 N 堆香蕉，第 i 堆中有 piles[i] 根香蕉。警卫已经离开了，将在 H 小时后回来。&lt;br/&gt;&lt;br/&gt;珂珂可以决定她吃香蕉的速度 K （单位：根/小时）。每个小时，她将会选择一堆香蕉，从中吃掉 K 根。如果这堆香蕉少于 K 根，她将吃掉这堆的所有香蕉，然后这一小时内不会再吃更多的香蕉。  &lt;br/&gt;&lt;br/&gt;珂珂喜欢慢慢吃，但仍然想在警卫回来前吃掉所有的香蕉。&lt;br/&gt;&lt;br/&gt;返回她可以在 H 小时内吃掉所有香蕉的最小速度 K（K 为整数）。&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;br/&gt;示例 1：&lt;br/&gt;&lt;br/&gt;输入: piles = [3,6,7,11], H = 8&lt;br/&gt;输出: 4&lt;br/&gt;示例 2：&lt;br/&gt;&lt;br/&gt;输入: piles = [30,11,23,4,20], H = 5&lt;br/&gt;输出: 30&lt;br/&gt;示例 3：&lt;br/&gt;&lt;br/&gt;输入: piles = [30,11,23,4,20], H = 6&lt;br/&gt;输出: 23&lt;br/&gt; &lt;br/&gt;&lt;br/&gt;提示：&lt;br/&gt;&lt;br/&gt;1 &amp;lt;= piles.length &amp;lt;= 10^4&lt;br/&gt;piles.length &amp;lt;= H &amp;lt;= 10^9&lt;br/&gt;1 &amp;lt;= piles[i] &amp;lt;= 10^9&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;前置知识&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;公司&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;思路&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;题目是让我们求&lt;strong&gt;「H 小时内吃掉所有香蕉的最小速度」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;符合直觉的做法是枚举所有可能的速度，找出所有的可以吃完香蕉的速度，接下来选择最小的速度即可。由于需要返回最小的速度，因此选择从小到大枚举会比较好，因为可以提前退出。这种解法的时间复杂度比较高，为 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O(N * M)&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 -750 4424.4 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(763, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1152, 0)&quot;&gt;&lt;path data-c=&quot;4E&quot; d=&quot;M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2262.2, 0)&quot;&gt;&lt;path data-c=&quot;2217&quot; d=&quot;M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2984.4, 0)&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4035.4, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，其中 N 为 piles 长度， M 为 Piles 中最大的数（也就是解空间的最大值）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;观察到需要检测的解空间是个&lt;strong&gt;「有序序列」&lt;/strong&gt;，应该想到可能能够使用二分来解决，而不是线性枚举。可以使用二分解决的关键和前面我们简化的二分问题并无二致，关键点在于&lt;strong&gt;「如果速度 k 吃不完所有香蕉，那么所有小于等于 k 的解都可以被排除。」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;二分解决的关键在于：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;明确解空间。对于这道题来说， 解空间就是 [1,max(piles)]。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何收缩解空间。关键点在于&lt;strong&gt;「如果速度 k 吃不完所有香蕉，那么所有小于等于 k 的解都可以被排除。」&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;综上，我们可以使用最左二分，即不断收缩右边界。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8408119658119658&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTfEcZhle6KVpDP5hWvd4L0qAib7kPBmk3Th2Hkia3bAxlYSrZr8d5hp703JfR1BLZVnLOTOpkzic7OuQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;936&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;香蕉堆的香蕉个数上限是 10^9， 珂珂这也太能吃了吧？&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;关键点解析&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;代码&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码支持：Python，JavaScript&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Python Code:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;solve&lt;/span&gt;&lt;span&gt;(self, piles, k)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;possible&lt;/span&gt;&lt;span&gt;(mid)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;            t = &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;for&lt;/span&gt; pile &lt;span&gt;in&lt;/span&gt; piles:&lt;br/&gt;                t += (pile + mid - &lt;span&gt;1&lt;/span&gt;) // mid&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; t &amp;lt;= k&lt;br/&gt;&lt;br/&gt;        l, r = &lt;span&gt;1&lt;/span&gt;, max(piles)&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; l &amp;lt;= r:&lt;br/&gt;            mid = (l + r) // &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; possible(mid):&lt;br/&gt;                r = mid - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;else&lt;/span&gt;:&lt;br/&gt;                l = mid + &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; l&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JavaScript Code:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;canEatAllBananas&lt;/span&gt;(&lt;span&gt;piles, H, mid&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; h = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;let&lt;/span&gt; pile &lt;span&gt;of&lt;/span&gt; piles) {&lt;br/&gt;    h += &lt;span&gt;Math&lt;/span&gt;.ceil(pile / mid);&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; h &amp;lt;= H;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt; * &lt;span&gt;@param &lt;span&gt;{number[]}&lt;/span&gt; &lt;span&gt;piles&lt;/span&gt;&lt;/span&gt;&lt;br/&gt; * &lt;span&gt;@param &lt;span&gt;{number}&lt;/span&gt; &lt;span&gt;H&lt;/span&gt;&lt;/span&gt;&lt;br/&gt; * &lt;span&gt;@return &lt;span&gt;{number}&lt;/span&gt;&lt;/span&gt;&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; minEatingSpeed = &lt;span&gt;&lt;span&gt;function&lt;/span&gt; (&lt;span&gt;piles, H&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; lo = &lt;span&gt;1&lt;/span&gt;,&lt;br/&gt;    hi = &lt;span&gt;Math&lt;/span&gt;.max(...piles);&lt;br/&gt;  &lt;span&gt;// [l, r) ， 左闭右开的好处是如果能找到，那么返回 l 和 r 都是一样的，因为最终 l 等于 r。&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt; (lo &amp;lt;= hi) {&lt;br/&gt;    &lt;span&gt;let&lt;/span&gt; mid = lo + ((hi - lo) &amp;gt;&amp;gt; &lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (canEatAllBananas(piles, H, mid)) {&lt;br/&gt;      hi = mid - &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;      lo = mid + &lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; lo; &lt;span&gt;//  不能选择hi&lt;/span&gt;&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「复杂度分析」&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;时间复杂度：&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O(max(N, N * logM))&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 -750 9774.1 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(763, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1152, 0)&quot;&gt;&lt;path data-c=&quot;6D&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2030, 0)&quot;&gt;&lt;path data-c=&quot;61&quot; d=&quot;M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2559, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3131, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(3520, 0)&quot;&gt;&lt;path data-c=&quot;4E&quot; d=&quot;M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4408, 0)&quot;&gt;&lt;path data-c=&quot;2C&quot; d=&quot;M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(4852.7, 0)&quot;&gt;&lt;path data-c=&quot;4E&quot; d=&quot;M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(5962.9, 0)&quot;&gt;&lt;path data-c=&quot;2217&quot; d=&quot;M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(6685.1, 0)&quot;&gt;&lt;path data-c=&quot;6C&quot; d=&quot;M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(6983.1, 0)&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(7468.1, 0)&quot;&gt;&lt;path data-c=&quot;67&quot; d=&quot;M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(7945.1, 0)&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(8996.1, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(9385.1, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，其中 N 为 piles 长度， M 为 Piles 中最大的数。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;空间复杂度：&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O(1)&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 -750 2041 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(763, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(1152, 0)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1652, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;最小灯半径（困难）&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;题目描述&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;You are given a list of integers nums representing coordinates of houses on a 1-dimensional line. You have 3 street lights that you can put anywhere on the coordinate line and a light at coordinate x lights up houses &lt;span&gt;in&lt;/span&gt; [x - r, x + r], inclusive. Return the smallest r required such that we can place the 3 lights and all the houses are lit up.&lt;br/&gt;&lt;br/&gt;Constraints&lt;br/&gt;&lt;br/&gt;n ≤ 100,000 &lt;span&gt;where&lt;/span&gt; n is the length of nums&lt;br/&gt;Example 1&lt;br/&gt;Input&lt;br/&gt;nums = [3, 4, 5, 6]&lt;br/&gt;Output&lt;br/&gt;0.5&lt;br/&gt;Explanation&lt;br/&gt;If we place the lamps on 3.5, 4.5 and 5.5 &lt;span&gt;then&lt;/span&gt; with r = 0.5 we can light up all 4 houses.&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;前置知识&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;二分法&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;思路&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本题和力扣 475. 供暖器 类似。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这道题的意思是给你一个数组 nums，让你在 [min(nums),max(nums)] 范围内放置 3 个灯，每个灯覆盖半径都是 r，让你求最小的 r。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之所以不选择小于 min(nums) 的位置和大于 max(nums) 的位置是因为没有必要。比如选取了小于 min(nums) 的位置 pos，那么选取 pos &lt;strong&gt;「一定不比选择 min(nums) 位置结果更优」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这道题的核心点还是一样的思维模型，即：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;确定解空间。这里的解空间其实就是 r。不难看出 r 的下界是 0， 上界是 max(nums) - min(nums)。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;没必要十分精准，只要不错过正确解即可，这个我们在前面讲过，这里再次强调一下。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;对于上下界之间的所有可能 x 进行枚举（不妨从小到大枚举），检查半径为 x 是否可以覆盖所有，返回第一个可以覆盖所有的 x 即可。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意到我们是在一个有序序列进行枚举，因此使用二分就应该想到。可使用二分的核心点在于：如果 x 不行，那么小于 x 的所有半径都必然不行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来的问题就是给定一个半径 x，判断其是否可覆盖所有的房子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「判断其是否可覆盖」&lt;/strong&gt;就是所谓的能力检测，我定义的函数 possible 就是能力检测。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先&lt;strong&gt;「对 nums 进行排序」&lt;/strong&gt;，这在后面会用到。然后从左开始模拟放置灯。先在 nums[0] + r 处放置一个灯，其可以覆盖 [0, 2 * r]。由于 nums 已经排好序了，那么这个等可以覆盖到的房间其实就是 nums 中坐标小于等于 2 * r 所有房间，使用二分查找即可。对于 nums 右侧的所有的房间我们需要继续放置灯，采用同样的方式即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;能力检测核心代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;possible&lt;/span&gt;&lt;span&gt;(diameter)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    start = nums[&lt;span&gt;0&lt;/span&gt;]&lt;br/&gt;    end = start + diameter&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(LIGHTS):&lt;br/&gt;        idx = bisect_right(nums, end)&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; idx &amp;gt;= N:&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;True&lt;/span&gt;&lt;br/&gt;        start = nums[idx]&lt;br/&gt;        end = start + diameter&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;False&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于我们想要找到满足条件的最小值，因此可直接套用&lt;strong&gt;「最左二分模板」&lt;/strong&gt;。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;代码&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码支持：Python3&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Python3 Code:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;solve&lt;/span&gt;&lt;span&gt;(self, nums)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        nums.sort()&lt;br/&gt;        N = len(nums)&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; N &amp;lt;= &lt;span&gt;3&lt;/span&gt;:&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;        LIGHTS = &lt;span&gt;3&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;# 这里使用的是直径，因此最终返回需要除以 2&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;possible&lt;/span&gt;&lt;span&gt;(diameter)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;            start = nums[&lt;span&gt;0&lt;/span&gt;]&lt;br/&gt;            end = start + diameter&lt;br/&gt;            &lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(LIGHTS):&lt;br/&gt;                idx = bisect_right(nums, end)&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; idx &amp;gt;= N:&lt;br/&gt;                    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;True&lt;/span&gt;&lt;br/&gt;                start = nums[idx]&lt;br/&gt;                end = start + diameter&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;False&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;        l, r = &lt;span&gt;0&lt;/span&gt;, nums[&lt;span&gt;-1&lt;/span&gt;] - nums[&lt;span&gt;0&lt;/span&gt;]&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; l &amp;lt;= r:&lt;br/&gt;            mid = (l + r) // &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; possible(mid):&lt;br/&gt;                r = mid - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;else&lt;/span&gt;:&lt;br/&gt;                l = mid + &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; l / &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「复杂度分析」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;令 n 为数组长度。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;时间复杂度：由于进行了排序， 因此时间复杂度大约是&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O(nlogn)&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 -750 4001 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(763, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1152, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1752, 0)&quot;&gt;&lt;path data-c=&quot;6C&quot; d=&quot;M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2050, 0)&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2535, 0)&quot;&gt;&lt;path data-c=&quot;67&quot; d=&quot;M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(3012, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3612, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;空间复杂度：取决于排序的空间消耗&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;778. 水位上升的泳池中游泳（困难）&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;题目地址&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://leetcode-cn.com/problems/swim-in-rising-water&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;题目描述&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;在一个 N x N 的坐标方格  grid 中，每一个方格的值 grid[i][j] 表示在位置 (i,j) 的平台高度。&lt;br/&gt;&lt;br/&gt;现在开始下雨了。当时间为  t  时，此时雨水导致水池中任意位置的水位为  t 。你可以从一个平台游向四周相邻的任意一个平台，但是前提是此时水位必须同时淹没这两个平台。假定你可以瞬间移动无限距离，也就是默认在方格内部游动是不耗时的。当然，在你游泳的时候你必须待在坐标方格里面。&lt;br/&gt;&lt;br/&gt;你从坐标方格的左上平台 (0，0) 出发。最少耗时多久你才能到达坐标方格的右下平台  (N-1, N-1)？&lt;br/&gt;&lt;br/&gt;示例 1:&lt;br/&gt;&lt;br/&gt;输入: [[0,2],[1,3]]&lt;br/&gt;输出: 3&lt;br/&gt;解释:&lt;br/&gt;时间为 0 时，你位于坐标方格的位置为 (0, 0)。&lt;br/&gt;此时你不能游向任意方向，因为四个相邻方向平台的高度都大于当前时间为 0 时的水位。&lt;br/&gt;&lt;br/&gt;等时间到达 3 时，你才可以游向平台 (1, 1). 因为此时的水位是 3，坐标方格中的平台没有比水位 3 更高的，所以你可以游向坐标方格中的任意位置&lt;br/&gt;示例 2:&lt;br/&gt;&lt;br/&gt;输入: [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]]&lt;br/&gt;输出: 16&lt;br/&gt;解释:&lt;br/&gt;0 1 2 3 4&lt;br/&gt;24 23 22 21 5&lt;br/&gt;12 13 14 15 16&lt;br/&gt;11 17 18 19 20&lt;br/&gt;10 9 8 7 6&lt;br/&gt;&lt;br/&gt;最终的路线用加粗进行了标记。&lt;br/&gt;我们必须等到时间为 16，此时才能保证平台 (0, 0) 和 (4, 4) 是连通的&lt;br/&gt;&lt;br/&gt;提示:&lt;br/&gt;&lt;br/&gt;2 &amp;lt;= N &amp;lt;= 50.&lt;br/&gt;grid[i][j] 位于区间 [0, ..., N*N - 1] 内。&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;前置知识&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;思路&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先明确一下解空间。不难得出，解空间是[0, max(grid)]，其中 max(grid) 表示 grid 中的最大值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此一个简单的思路是一个个试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「试试 x 是否可行」&lt;/strong&gt;就是能力检测。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实际上，如果 x 不可以，那么小于 x 的所有值都是不可以的，这正是本题的突破口。基于此，我们同样可使用讲义中的&lt;strong&gt;「最左二分」&lt;/strong&gt;模板解决。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪代码:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;&lt;span&gt;(x)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;pass&lt;/span&gt;&lt;br/&gt;&lt;span&gt;while&lt;/span&gt; l &amp;lt;= r:&lt;br/&gt;    mid = (l + r) // &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; test(mid, &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;):&lt;br/&gt;        r = mid - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;else&lt;/span&gt;:&lt;br/&gt;        l = mid + &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; l&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个模板会在很多二分中使用。比如典型的计数型二分，典型的就是计算小于等于 x 的有多少，然后根据答案更新解空间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;明确了这点，剩下要做的就是完成能力检测部分 （test 函数） 了。其实这个就是一个普通的二维网格 dfs，我们从 (0,0) 开始在一个二维网格中搜索，直到无法继续或达到 (N-1,N-1)，如果可以达到 (N-1,N-1)，我们返回 true，否则返回 False 即可。对二维网格的 DFS 不熟悉的同学可以看下我之前写的小岛专题&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;代码&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;swimInWater&lt;/span&gt;&lt;span&gt;(self, grid: List[List[int]])&lt;/span&gt; -&amp;gt; int:&lt;/span&gt;&lt;br/&gt;        l, r = &lt;span&gt;0&lt;/span&gt;, max([max(vec) &lt;span&gt;for&lt;/span&gt; vec &lt;span&gt;in&lt;/span&gt; grid])&lt;br/&gt;        seen = set()&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;&lt;span&gt;(mid, x, y)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; x &amp;gt; len(grid) - &lt;span&gt;1&lt;/span&gt; &lt;span&gt;or&lt;/span&gt; x &amp;lt; &lt;span&gt;0&lt;/span&gt; &lt;span&gt;or&lt;/span&gt; y &amp;gt; len(grid[&lt;span&gt;0&lt;/span&gt;]) - &lt;span&gt;1&lt;/span&gt; &lt;span&gt;or&lt;/span&gt; y &amp;lt; &lt;span&gt;0&lt;/span&gt;:&lt;br/&gt;                &lt;span&gt;return&lt;/span&gt; &lt;span&gt;False&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; grid[x][y] &amp;gt; mid:&lt;br/&gt;                &lt;span&gt;return&lt;/span&gt; &lt;span&gt;False&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (x, y) == (len(grid) - &lt;span&gt;1&lt;/span&gt;, len(grid[&lt;span&gt;0&lt;/span&gt;]) - &lt;span&gt;1&lt;/span&gt;):&lt;br/&gt;                &lt;span&gt;return&lt;/span&gt; &lt;span&gt;True&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (x, y) &lt;span&gt;in&lt;/span&gt; seen:&lt;br/&gt;                &lt;span&gt;return&lt;/span&gt; &lt;span&gt;False&lt;/span&gt;&lt;br/&gt;            seen.add((x, y))&lt;br/&gt;            ans = test(mid, x + &lt;span&gt;1&lt;/span&gt;, y) &lt;span&gt;or&lt;/span&gt; test(mid, x - &lt;span&gt;1&lt;/span&gt;,&lt;br/&gt;                                              y) &lt;span&gt;or&lt;/span&gt; test(mid, x, y + &lt;span&gt;1&lt;/span&gt;) &lt;span&gt;or&lt;/span&gt; test(mid, x, y - &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; ans&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; l &amp;lt;= r:&lt;br/&gt;            mid = (l + r) // &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; test(mid, &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;):&lt;br/&gt;                r = mid - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;else&lt;/span&gt;:&lt;br/&gt;                l = mid + &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;            seen = set()&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; l&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「复杂度分析」&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;时间复杂度：&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O(NlogM)&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 -750 4740 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(763, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1152, 0)&quot;&gt;&lt;path data-c=&quot;4E&quot; d=&quot;M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2040, 0)&quot;&gt;&lt;path data-c=&quot;6C&quot; d=&quot;M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2338, 0)&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2823, 0)&quot;&gt;&lt;path data-c=&quot;67&quot; d=&quot;M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(3300, 0)&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4351, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，其中 M 为 grid 中的最大值， N 为 grid 的总大小。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;空间复杂度：&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O(N)&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 -750 2429 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(763, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1152, 0)&quot;&gt;&lt;path data-c=&quot;4E&quot; d=&quot;M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2040, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，其中 N 为 grid 的总大小。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;计数二分&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;计数二分和上面的思路已经代码都基本一致。直接看代码会清楚一点：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;count_bs&lt;/span&gt;&lt;span&gt;(nums, k)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;count_not_greater&lt;/span&gt;&lt;span&gt;(mid)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;pass&lt;/span&gt;&lt;br/&gt;  l, r = &lt;span&gt;0&lt;/span&gt;, len(A) - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt; l &amp;lt;= r:&lt;br/&gt;      mid = (l + r) // &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;# 只有这里和最左二分不一样&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; count_not_greater(mid) &amp;gt; k: r = mid - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;else&lt;/span&gt;: l = mid + &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; l&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看出只是将 &lt;code&gt;possible&lt;/code&gt; 变成了 &lt;code&gt;count_not_greater&lt;/code&gt;，返回值变成了数字而已。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实际上，我们可以将上面的代码稍微改造一下，使得两者更像：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;count_bs&lt;/span&gt;&lt;span&gt;(nums, k)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;possible&lt;/span&gt;&lt;span&gt;(mid, k)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;# xxx&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; cnt &amp;gt; k&lt;br/&gt;  l, r = &lt;span&gt;0&lt;/span&gt;, len(A) - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;while&lt;/span&gt; l &amp;lt;= r:&lt;br/&gt;      mid = (l + r) // &lt;span&gt;2&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; possible(mid, k): r = mid - &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;else&lt;/span&gt;: l = mid + &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; l&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是不是基本一致了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于和上面基本一致， 因此这里直接推荐一个题目，大家用我的思路练习一下，看看我的技巧灵不灵。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;前缀和二分&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面说了：如果数组全是正的，那么其前缀和就是一个严格递增的数组，基于这个特性，我们可以在其之上做二分。类似的有单调栈/队列。这种题目类型很多，为了节省篇幅就不举例说明了。提出前缀和二分的核心的点在于让大家保持对&lt;strong&gt;「有序序列」&lt;/strong&gt;的敏感度。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;插入排序二分&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了上面的前缀和之外，我们还可以自行维护有序序列。一般有两种方式：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码表示：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;nums.sort()&lt;br/&gt;bisect.bisect_left(nums, x) &lt;span&gt;# 最左二分&lt;/span&gt;&lt;br/&gt;bisect.bisect_right(nums, x) &lt;span&gt;# 最右二分&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;遍历过程维护一个新的有序序列，有序序列的内容为&lt;strong&gt;「已经遍历过的值的集合」&lt;/strong&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如无序数组 [3,2,10,5]，遍历到索引为 2 的项（也就是值为 10 的项）时，我们构建的有序序列为 [2,3,10]。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;注意我描述的是有序序列，并不是指数组，链表等具体的数据结构。而实际上，这个有序序列很多情况下是平衡二叉树。后面题目会体现这一点。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码表示：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;d = SortedList()&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; a &lt;span&gt;in&lt;/span&gt; A:&lt;br/&gt;    d.add(a) &lt;span&gt;# 将 a 添加到 d，并维持 d 中数据有序&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面代码的 d 就是有序序列。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.6577540106951871&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTfEcZhle6KVpDP5hWvd4L0qiaJl5SaP7iasS1IzfDiaEs26hJuicdcaibJHg2CrFYCOkmXe0OPDwkEeCjw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;748&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;”插入排序“图示&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;理论知识到此为止，接下来通过一个例子来说明。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;327. 区间和的个数(困难)&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;题目地址&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://leetcode-cn.com/problems/count-of-range-sum&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;题目描述&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;给定一个整数数组 nums 。区间和 S(i, j) 表示在 nums 中，位置从 i 到 j 的元素之和，包含 i 和 j (i ≤ j)。&lt;br/&gt;&lt;br/&gt;请你以下标 i （0 &amp;lt;= i &amp;lt;= nums.length ）为起点，元素个数逐次递增，计算子数组内的元素和。&lt;br/&gt;&lt;br/&gt;当元素和落在范围 [lower, upper] （包含 lower 和 upper）之内时，记录子数组当前最末元素下标 j ，记作 有效 区间和 S(i, j) 。&lt;br/&gt;&lt;br/&gt;求数组中，值位于范围 [lower, upper] （包含 lower 和 upper）之内的 有效 区间和的个数。&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;br/&gt;注意：&lt;br/&gt;最直观的算法复杂度是 O(n2) ，请在此基础上优化你的算法。&lt;br/&gt;&lt;br/&gt; &lt;br/&gt;&lt;br/&gt;示例：&lt;br/&gt;&lt;br/&gt;输入：nums = [-2,5,-1], lower = -2, upper = 2,&lt;br/&gt;输出：3&lt;br/&gt;解释：&lt;br/&gt;下标 i = 0 时，子数组 [-2]、[-2,5]、[-2,5,-1]，对应元素和分别为 -2、3、2 ；其中 -2 和 2 落在范围 [lower = -2, upper = 2] 之间，因此记录有效区间和 S(0,0)，S(0,2) 。&lt;br/&gt;下标 i = 1 时，子数组 [5]、[5,-1] ，元素和 5、4 ；没有满足题意的有效区间和。&lt;br/&gt;下标 i = 2 时，子数组 [-1] ，元素和 -1 ；记录有效区间和 S(2,2) 。&lt;br/&gt;故，共有 3 个有效区间和。&lt;br/&gt; &lt;br/&gt;&lt;br/&gt;提示：&lt;br/&gt;&lt;br/&gt;0 &amp;lt;= nums.length &amp;lt;= 10^4&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;思路&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;题目很好理解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由前缀和的性质知道：区间 i 到 j（包含）的和 sum(i,j) = pre[j] - pre[i-1]，其中 pre[i] 为数组前 i 项的和 0 &amp;lt;= i &amp;lt; n。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是题目中的数字可能是负数，前缀和不一定是单调的啊？这如何是好呢？答案是手动维护前缀和的有序性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如 [-2,5,-1] 的前缀和 为 [-2,3,2]，但是我们可以将求手动维护为 [-2,2,3]，这样就有序了。但是这丧失了索引信息，因此这个技巧仅适用于&lt;strong&gt;「无需考虑索引，也就是不需要求具体的子序列，只需要知道有这么一个子序列就行了，具体是哪个，我们不关心」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如当前的前缀和是 cur，那么前缀和小于等于 cur - lower 有多少个，就说明以当前结尾的区间和大于等于 lower 的有多少个。类似地，前缀和小于等于 cur - upper 有多少个，就说明以当前结尾的区间和大于等于 upper 的有多少个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于这个想法，我们可使用二分在 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;logn&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 -694 1860 899&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6C&quot; d=&quot;M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(298, 0)&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(783, 0)&quot;&gt;&lt;path data-c=&quot;67&quot; d=&quot;M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1260, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的时间快速求出这两个数字，使用平衡二叉树代替数组可使得插入的时间复杂度降低到 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O(logn)&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 -750 3401 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(763, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1152, 0)&quot;&gt;&lt;path data-c=&quot;6C&quot; d=&quot;M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1450, 0)&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1935, 0)&quot;&gt;&lt;path data-c=&quot;67&quot; d=&quot;M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2412, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3012, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;。Python 可使用 SortedList 来实现， Java 可用 TreeMap 代替。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;代码&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;from&lt;/span&gt; sortedcontainers &lt;span&gt;import&lt;/span&gt; SortedList&lt;br/&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;countRangeSum&lt;/span&gt;&lt;span&gt;(self, A: List[int], lower: int, upper: int)&lt;/span&gt; -&amp;gt; int:&lt;/span&gt;&lt;br/&gt;        ans, pre, cur = &lt;span&gt;0&lt;/span&gt;, [&lt;span&gt;0&lt;/span&gt;], &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; a &lt;span&gt;in&lt;/span&gt; A:&lt;br/&gt;            cur += a&lt;br/&gt;            ans += pre.bisect_right(cur - lower) - pre.bisect_left(cur - upper)&lt;br/&gt;            pre.add(cur)&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; ans&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「复杂度分析」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;令 n 为数组长度。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;493. 翻转对（困难）&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;题目地址&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://leetcode-cn.com/problems/reverse-pairs/&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;题目描述&lt;span/&gt;&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;给定一个数组 nums ，如果 i &amp;lt; j 且 nums[i] &amp;gt; 2*nums[j] 我们就将 (i, j) 称作一个重要翻转对。&lt;br/&gt;&lt;br/&gt;你需要返回给定数组中的重要翻转对的数量。&lt;br/&gt;&lt;br/&gt;示例 1:&lt;br/&gt;&lt;br/&gt;输入: [1,3,2,3,1]&lt;br/&gt;输出: 2&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;示例 2:&lt;br/&gt;&lt;br/&gt;输入: [2,4,3,5,1]&lt;br/&gt;输出: 3&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;注意:&lt;br/&gt;&lt;br/&gt;给定数组的长度不会超过50000。&lt;br/&gt;输入数组中的所有数字都在32位整数的表示范围内。&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;前置知识&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;公司&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;思路&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以一边遍历一边维护一个有序序列 d，其中 d 为&lt;strong&gt;「已经遍历过的值的集合」&lt;/strong&gt;。对于每一个位置 0 &amp;lt;= i &amp;lt; n，我们统计 d 中大于 2 * A[i] 的个数，这个个数就是题目要求的翻转对。这里的关键在于 d 中的值是比当前索引小的&lt;strong&gt;「全部」&lt;/strong&gt;值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们当然可以线性遍历 d，求出个数。一个更好的方法是在遍历的同时维持 d 是&lt;strong&gt;「有序的」&lt;/strong&gt;，这样我们就可以用二分了。和上面题目一样，使用平衡二叉树代替数组可使得插入的时间复杂度降低到 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;O(logn)&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 -750 3401 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4F&quot; d=&quot;M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(763, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1152, 0)&quot;&gt;&lt;path data-c=&quot;6C&quot; d=&quot;M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1450, 0)&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1935, 0)&quot;&gt;&lt;path data-c=&quot;67&quot; d=&quot;M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2412, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3012, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6399082568807339&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTfEcZhle6KVpDP5hWvd4L0q1zt5XabGcCv7HhOorNxX1gTXRMmmKbdSjfpq6CiaRKfoRegYXqC60Hg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;436&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;平衡二叉树&lt;/figcaption&gt;&lt;/figure&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;关键点&lt;span/&gt;&lt;/h5&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;代码&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Python3 Code:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;from&lt;/span&gt; sortedcontainers &lt;span&gt;import&lt;/span&gt; SortedList&lt;br/&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Solution&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;reversePairs&lt;/span&gt;&lt;span&gt;(self, A: List[int])&lt;/span&gt; -&amp;gt; int:&lt;/span&gt;&lt;br/&gt;        d = SortedList()&lt;br/&gt;        ans = &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; a &lt;span&gt;in&lt;/span&gt; A:&lt;br/&gt;            ans += len(d) - d.bisect_right(&lt;span&gt;2&lt;/span&gt;*a)&lt;br/&gt;            d.add(a)&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; ans&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「复杂度分析」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;令 n 为数组长度。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;小结&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;四个应用讲了两种构造有序序列的方式，分别是前缀和，插入排序，插入排序的部分其实也可以看下我之前写的&lt;span&gt;最长上升子序列系列&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;，那里面的贪心解法就是&lt;strong&gt;「自己构造有序序列再二分」&lt;/strong&gt;的。另外理论上单调栈/队列也是有序的，也可是用来做二分，但是相关题目太少了，因此大家只要保持对&lt;strong&gt;「有序序列」&lt;/strong&gt;的敏感度即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;能力检测二分很常见，不过其仅仅是将普通二分的 if 部分改造成了函数而已。而对于计数二分，其实就是能力检测二分的特例，只不过其太常见了，就将其单独提取出来了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，有时候有序序列也会给你稍微变化一种形式。比如二叉搜索树，大家都知道可以在 &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;logn&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 -694 1860 899&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6C&quot; d=&quot;M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(298, 0)&quot;&gt;&lt;path data-c=&quot;6F&quot; d=&quot;M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(783, 0)&quot;&gt;&lt;path data-c=&quot;67&quot; d=&quot;M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1260, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt; 的时间完成查找，这个查找过程本质也是二分。二叉查找树有&lt;strong&gt;「有序序列」&lt;/strong&gt;么？有的！二叉查找树的中序遍历恰好就是一个有序序列。因此如果一个数比当前节点值小，一定在左子树（也就是有序序列的左侧），如果一个数比当前节点值大，一定在右子树（也就是有序序列的右侧）。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文主要讲了两种二分类型：最左和最右，模板已经给大家了，大家只需要根据题目调整解空间和判断条件即可。关于四种应用更多的还是让大家理解二分的核心&lt;strong&gt;「折半」&lt;/strong&gt;。表面上来看，二分就是对有序序列的查找。其实不然，只不过有序序列很容易做二分罢了。因此战术上大家保持对有序序列的敏感度，战略上要明确二分的本质是折半，核心在于什么时候将哪一半折半。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个问题能否用二分解决的关键在于检测一个值的时候是否可以排除解空间中的一半元素。比如我前面反复提到的&lt;strong&gt;「如果 x 不行，那么解空间中所有小于等于 x 的值都不行」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于简单题目，通常就是给你一个有序序列，让你在上面找满足条件的位置。顶多变化一点，比如数组局部有序，一维变成二维等。对于这部分可以看下我写的&lt;span&gt;91 算法 - 二分查找讲义&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;中等题目可能需要让你自己构造有序序列。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;困难题则可能是二分和其他专题的结合，比如上面的 778. 水位上升的泳池中游泳（困难），就是二分和搜索（我用的是 DFS）的结合。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是本文的全部内容了， 大家对此有何看法，欢迎给我留言，我有时间都会一一查看回答。我是 lucifer，维护西湖区最好的算法题解，Github 超 40K star 。大家也可以关注我的公众号《力扣加加》带你啃下算法这块硬骨头。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外我整理的 1000 多页的电子书已限时免费下载，大家可以去我的公众号《力扣加加》后台回复电子书获取。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a class=&quot;weapp_text_link js_weapp_entry&quot; data-miniprogram-appid=&quot;wx2edeec3cd45f0d24&quot; data-miniprogram-path=&quot;pages/detail?id=d10aa28272f397b1&quot; data-miniprogram-nickname=&quot;快言留言板&quot; href=&quot;&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-servicetype=&quot;&quot;&gt;来留言和加加互动起来吧&lt;/a&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Reference&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;最长上升子序列系列: &lt;em&gt;https://lucifer.ren/blog/2020/06/20/LIS/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;91算法 - 二分查找讲义: &lt;em&gt;https://github.com/azl397985856/leetcode/blob/master/91/binary-search.md&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>563578263e06e5fb6ab6a417c329f502</guid>
<title>不懂就问：ZooKeeper 集群如何进行数据同步？</title>
<link>https://toutiao.io/k/7sfy943</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.425531914893617&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUlZlq9Dib8demK0fzcVGoAAVGK4x3ibUWBW0iaMSR1Xn9mAWibYlbObdlFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;940&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文作者：HelloGitHub-&lt;strong&gt;老荀&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Hi，这里是 HelloGitHub 推出的 HelloZooKeeper 系列，&lt;strong&gt;免费开源、有趣、入门级的 ZooKeeper 教程&lt;/strong&gt;，面向有编程基础的新手。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;项目地址：https://github.com/HelloGitHub-Team/HelloZooKeeper&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzA5MzYyNzQ0MQ==&amp;amp;mid=2247500161&amp;amp;idx=1&amp;amp;sn=98f41cbdceb7c6ec3466c6e109b0b785&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;前一篇文章&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;前一篇文章&lt;/a&gt;我们介绍了 ZK 是如何进行持久化的，这章我们将正式学习 Follower 或 Observer 是如何在选举之后和 Leader 进行数据同步的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.22857142857142856&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jU8JbA2IODF1Y8zZ19rH3ZDIGlRrgYpaUcA3U0ACWNoRiahSibf2qV48jA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1890&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一、选举完成&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经历了选举之后，我们的&lt;strong&gt;马果果&lt;/strong&gt;荣耀当选当前办事处集群的 Leader，所以现在假设各个办事处的关系图是这样：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUicQV6ew0s0TTHCAcJveebbJTqAdGgLiaWFoLXH3W0AqnicOsKKO0zAvQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6578171091445427&quot; data-w=&quot;678&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们现在就来说说&lt;strong&gt;马小云&lt;/strong&gt;和&lt;strong&gt;马小腾&lt;/strong&gt;是如何同&lt;strong&gt;马果果&lt;/strong&gt;进行数据同步的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结束了累人的选举后，&lt;strong&gt;马小云&lt;/strong&gt;和&lt;strong&gt;马小腾&lt;/strong&gt;以微弱的优势输掉了竞争，只能委屈成为 Follower。整理完各自的情绪后，他们要做的第一件事情就是通过话务员上报自己的信息给&lt;strong&gt;马果果&lt;/strong&gt;，使用了专门的暗号 FOLLOWERINFO， 数据主要有自己的 epoch 和 myid：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUJvU7QLZsU6AeWic8JpeT22xKkFaVlQj7icicxc6YPNwYh394MQNn9zuFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.5169491525423728&quot; data-w=&quot;590&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后是&lt;strong&gt;马果果&lt;/strong&gt;这边，他收到 FOLLOWERINFO 之后也会进行统计，直到达到半数以上后，综合各个 Follower 给的信息会计算出新的 epoch，然后将这个新的 epoch 随着暗号 LEADERINFO 回发给其他 Follower&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUmuZib88lfooic8R7wRSPtnfMphicObT993Egpe74SruJP7zo1JvicUQj8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.5561497326203209&quot; data-w=&quot;561&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后再回到&lt;strong&gt;马小云&lt;/strong&gt;和&lt;strong&gt;马小腾&lt;/strong&gt;这边，收到 LEADERINFO 之后将新的 epoch 记录下来，然后回复给&lt;strong&gt;马果果&lt;/strong&gt;一个 ACKEPOCH 暗号并带上自己这边的最大 zxid，表示刚刚的 LEADERINFO 收到了&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUAyEMgQPRh0OEEm5Cdl3Ga4icmfsTSNcDibQ2J6DbHBLibwG4iaib7lbqJYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.527336860670194&quot; data-w=&quot;567&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后&lt;strong&gt;马果果&lt;/strong&gt;这边也会等待半数以上的 ACKEPOCH 的通知，收到之后会根据各个 Follower 的信息给出不同的同步策略。关于不同的同步策略，这里我先入为主的给大家介绍一下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;DIFF，如果 Follower 的记录和 Leader 的记录相差的不多，使用增量同步的方式将一个一个写请求发送给 Follower&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TRUNC，这个情况的出现代表 Follower 的 zxid 是领先于当前的 Leader 的（可能是以前的 Leader），需要 Follower 自行把多余的部分给截断，降级到和 Leader 一致&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;SNAP，如果 Follower 的记录和当前 Leader 相差太多，Leader 直接将自己的整个内存数据发送给 Follower&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至于采用哪一种策略，是如何进行判断的，接下来一一进行讲解。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1 DIFF&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每一个 ZK 节点在收到写请求后，会维护一个写请求队列（默认是 500 大小，通过 &lt;code&gt;zookeeper.commitLogCount&lt;/code&gt; 配置），将写请求记录在其中，这个队列中的最早进入的写请求当时的 zxid 就是 minZxid（以下简称 min），最后一个进入的写请求的 zxid 就是 maxZxid（以下简称 max），达到上限后，会移除最早进入的写请求，知道了这两个值之后，我们来看看 DIFF 是怎么判断的。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1.1 从内存中的写请求队列恢复&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一种情况就是如果当 Follower 通过 ACKEPOCH 上报的 zxid 是在 min 和 max 之间的话，就采用 DIFF 策略进行数据同步。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们的例子中 Leader 的 zxid 是 99，说明这个存储 500 个写请求的队列根本没有放满，所以 min 是 1 max 是 99，很显然 77 以及 88 是在这个区间内的，那马果果就会为另外两位 Follower 找到他们各自所需要的区间，先发送一个 DIFF 给 Follower，然后将一条条的写请求包装成 PROPOSAL 和 COMMIT 的顺序发给他们&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUTZCvicmwO4ib0gu8ARPysxqfAzjS3CvgQ6PgicT1NSeYUVvZ1JFztt7Gw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6601851851851852&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1.2 从磁盘文件 log 恢复&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另一种情况是如果 Follower 的 zxid 不在 min 和 max 的区间内时，但当 &lt;code&gt;zookeeper.snapshotSizeFactor&lt;/code&gt; 配置大于 0 的话（默认是 0.33），会尝试使用 log 进行 DIFF，但是需要同步的 log 文件的总大小不能超过当前最新的 snapshot 文件大小的三分之一（以默认 0.33 为例）的话，才可以通过读取 log 文件中的写请求记录进行 DIFF 同步。同步的方法也和上面一样，先发送一个 DIFF 给 Follower 然后从 log 文件中找到该 Follower 的区间，再一条条的发送 PROPOSAL 和 COMMIT。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 Follower 收到 PROPOSAL 的暗号消息后，就会像处理客户端请求那样去一条条处理，慢慢就会将数据恢复成和 Leader 是一致的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.2 SNAP&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设现在三个办事处是这样的&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jURrV8hj2d8qib19s3L1Gn2cgjgibkGibBzp5ZK4VWibHcXk4yz5SMrHxj7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6225071225071225&quot; data-w=&quot;702&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;马果果&lt;/strong&gt;的写请求队列在默认配置下记录了 277 至 777 的写请求，又假设现在的场景不满足上面 1.1.2 的情况，&lt;strong&gt;马果果&lt;/strong&gt;就知道当前需要通过 SNAP 的情况进行同步了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;马果果&lt;/strong&gt;会先发送一个 SNAP 的请求给&lt;strong&gt;马小云&lt;/strong&gt;和&lt;strong&gt;马小腾&lt;/strong&gt;让他们准备起来&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jU5pUj1Yibo6a7ZoWRt6mYnCQRcmHg5DG29D3O4KtMxATLc9dmwia5lvzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.587037037037037&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;紧接着就会当前内存中的数据整个序列化（和 snapshot 文件是一样的）然后一起发送给&lt;strong&gt;马小云&lt;/strong&gt;和&lt;strong&gt;马小腾&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而&lt;strong&gt;马小云&lt;/strong&gt;和&lt;strong&gt;马小腾&lt;/strong&gt;收到&lt;strong&gt;马果果&lt;/strong&gt;发来的整个 snapshot 之后会先清空自己当前的数据库的所有信息，接着直接将收到的 snapshot 反序列化就完成了整个内存数据的恢复。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.3 TRUNC&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后一种策略的场景假设是这样：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUsUjruEtucrtm47eapZ9uSe1OgvOQC9XHFoFapEZlScrhnIU0o7AAgA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6349206349206349&quot; data-w=&quot;693&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设&lt;strong&gt;马小腾&lt;/strong&gt;是上一个 Leader，但是经历了停电以后恢复重新以 Follower 的身份加入集群，但是他的 zxid 要比 max 还大，这个时候&lt;strong&gt;马果果&lt;/strong&gt;就会给&lt;strong&gt;马小腾&lt;/strong&gt;发送 TRUNC，（至于图中为什么&lt;strong&gt;马小云&lt;/strong&gt;不举例为 TRUNC，因为如果&lt;strong&gt;马小云&lt;/strong&gt;的 zxid 也比&lt;strong&gt;马果果&lt;/strong&gt;要大的话，&lt;strong&gt;马果果&lt;/strong&gt;在当前场景下就不可能当选 Leader 了）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;马果果&lt;/strong&gt;就会发送 TRUNC 给&lt;strong&gt;马小腾&lt;/strong&gt;（这里忽略&lt;strong&gt;马小云&lt;/strong&gt;）&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jU1e0SIaKEymOPSAZg4kH2o7kBHjwlENZ97I3xN9LL9Iia89SA3zQp59w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.8715083798882681&quot; data-w=&quot;716&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设&lt;strong&gt;马小腾&lt;/strong&gt;的本地 log 文件目录下是这样的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;/tmp&lt;br/&gt;└── zookeeper&lt;br/&gt;    └── &lt;span&gt;log&lt;/span&gt;&lt;br/&gt;      └── version-2&lt;br/&gt;        └── log.0&lt;br/&gt;        └── log.500&lt;br/&gt;        └── log.800&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而&lt;strong&gt;马小腾&lt;/strong&gt;收到 TRUNC 之后，会找到本地 log 文件中所有大于 777 的 log 文件删除，即这里的 &lt;code&gt;log.800&lt;/code&gt; ，然后会在 &lt;code&gt;log.500&lt;/code&gt; 这个文件找到 777 这个 zxid 记录并且把当前文件的读写指针修改至 777 的位置，之后针对该文件的读写操作就会从 777 开始，这样就会把之后的那些记录给覆盖了。&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而&lt;strong&gt;马果果&lt;/strong&gt;这边当判断完同步策略并发送给另外两马之后，便会发送一个 NEWLEADER 的信息给他们&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUkuflfib3t4ckZvmJfhFHLwp3u7RsDP9UUEMC2HqibibWMHSgmophjHsibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.546112115732369&quot; data-w=&quot;553&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而&lt;strong&gt;马小云&lt;/strong&gt;和&lt;strong&gt;马小腾&lt;/strong&gt;在收到 NEWLEADER 之后，若之前是通过 SNAP 方式同步数据的话，这里会强制快照一份新的 snapshot 文件在自己这里。然后会回复给&lt;strong&gt;马果果&lt;/strong&gt;一个 ACK 的消息，告诉他自己的同步数据已经完成了&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUzAxN7a93nmhyhg6UgxmDbIzxDmURzNAiafpibRVx5M5pGibJ5PzXibqZ2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.5818181818181818&quot; data-w=&quot;550&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后&lt;strong&gt;马果果&lt;/strong&gt;同样会等待半数一样的 ACK 接收完成后，再发送一个 UPTODATE 给其他两马，告诉他们现在办事处数据已经都一致了，可以开始对外提供服务了&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUqIqGREGoM30z9aiav6HMCYPtA99DGVfv3icgVG3TUiakqictkomMX8wMmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.5335820895522388&quot; data-w=&quot;536&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后&lt;strong&gt;马小云&lt;/strong&gt;和&lt;strong&gt;马果果&lt;/strong&gt;收到 UPTODATE 之后会再回复一个 ACK 给&lt;strong&gt;马果果&lt;/strong&gt;，但是这次&lt;strong&gt;马果果&lt;/strong&gt;收到这次的 ACK 之后不会做处理，所以在 UPTODATE 之后，各个办事处就已经算可以正式对外提供服务了。&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面说了这么多，但是&lt;strong&gt;马小云&lt;/strong&gt;和&lt;strong&gt;马小腾&lt;/strong&gt;都是 Follower，如果是 Observer 呢？怎么用上面的步骤同步呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;区别就在第一步，Follower 发送的是 FOLLOWERINFO，而 Observer 发送的是 OBSERVERINFO 除此之外没有任何区别，和 Follower 是一样的步骤进行数据同步。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二、继续深挖&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在把其中的一些细节再用猿话说明一下，三种不同的数据同步策略，Leader 在发送 Follower 的时候采用的具体方法是不太相同的&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1 三种策略发送方式&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果采用的是 DIFF 或者 TRUNC 的同步方法的话，Leader 其实不是在找到有差异数据的时候发送过去的，而是按照顺序先放入一个队列，最后再统一启动一个线程去一个个发送的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DIFF :&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jU2ssewTK853xF1BraXiawhwweQjicWrSQhEiaEYdqTuwpty6D6DaZlCK0Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.28174123337363965&quot; data-w=&quot;827&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;TRUNC:&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jU66bCfg94gTtQsJ1megibibEy3u3x9FxJTzibgxr2o1tox5tHGNZVO6Xew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.3383742911153119&quot; data-w=&quot;529&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是以 SNAP 方式同步的话就不会放入该队列，无论是 SNAP 消息还是之后整个序列化后的内存快照 snapshot 都会直接通过服务端间的 socket 直接写入。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2 上帝视角&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们把三种策略消息交互的全过程再看一遍，这里就以&lt;strong&gt;马小云&lt;/strong&gt;举例了&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.1 DIFF&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jU3BfQV98fiaGsiaNgj6E6P50thHLubEng4BiaqzNZt6NtwausicVx78o3Cw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.7311320754716981&quot; data-w=&quot;636&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.2 TRUNC&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUsiaWibIXAU19QbT9iaJQOGNpBJpdRTIfBictCburywU9rqAY7tz7jenqSw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.5878693623639192&quot; data-w=&quot;643&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.3 SNAP&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jU2VvwgQOC9JsTk2RUtCe6juPoRQyq69QodokuAvEvDwlLwJRCD3xFAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6202143950995406&quot; data-w=&quot;653&quot;/&gt;&lt;/figure&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到首尾是一样的，就是中间的请求根据不同的策略会有不同的请求发送。差不多到这里关于 Follower 或 Observer 是如何同 Leader 同步消息，整体的逻辑都介绍完了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3 小结&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Follower 和 Observer 同步数据的方式一共有三种：DIFF、SNAP、TRUNC&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;DIFF 需要 Follower 或 Observer 和 Leader 的数据相差在 min 和 max 范围内，或者配置了允许从 log 文件中恢复&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TRUNC 是当 Follower 或 Observer 的 zxid 比 Leader 还要大的时候，该节点需要主动删除多余 zxid 相关的数据，降级至 Leader 一致&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;SNAP 作为最后的数据同步手段，由 Leader 直接将内存数据整个序列化完并发送给 Follower 或 Observer，以达到恢复数据的目的&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我看了下文章的字数还行，决定加一点料，开一个小篇讲一下 ACL，这个我拖了很久没解释的坑。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUbZKd5A27jS0ibSLyWsaFqqtYeibLZxxfkgAGdQSRib7KaxsZS1YKaxMicA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-ratio=&quot;1.2096774193548387&quot; data-w=&quot;186&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;三、没有规矩，不成方圆&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先带大家重拾记忆，之前创建节点代码片段中的 &lt;code&gt;ZooDefs.Ids.OPEN_ACL_UNSAFE&lt;/code&gt; 就是 ACL 的参数&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;client.create(&lt;span&gt;&quot;/更新视频/跳舞/20201101&quot;&lt;/span&gt;, &lt;span&gt;&quot;这是Data，既可以记录一些业务数据也可以随便写&quot;&lt;/span&gt;.getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先如果配置了 &lt;code&gt;zookeeper.skipACL&lt;/code&gt; 该参数为 &lt;code&gt;yes&lt;/code&gt;（注意大小写），表示当前节点放弃 ACL 校验，默认是 &lt;code&gt;no&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那这个 ACL 是怎么规定的，有哪些权限，又是怎么在服务端体现的呢？首先 ACL 整体分为 Permission 和 Scheme 两部分，Permission 是针对操作的权限，而 Scheme 是指定使用哪一种鉴权模式，下面我们一起来了解下。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.1 权限 Permission 介绍&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先 ZK 将权限分为 5 种：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;READ（以下简称 R），获取节点数据或者获取子节点列表&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;WRITE（以下简称 W），设置节点数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;CREATE（以下简称 C），创建节点&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;DELETE（以下简称 D），删除节点&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;ADMIN（以下简称 A），设置节点的 ACL 权限&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后该 5 种权限在代码层面就是简单的 int 数据，而判断是否有权限只需要用 &amp;amp; 操作即可，和目标权限 &amp;amp; 完结果只要不等于 0 就说明拥有该权限，细节如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;  int  binary&lt;br/&gt;R  1   00001&lt;br/&gt;W  2   00010&lt;br/&gt;C  4   00100&lt;br/&gt;D  8   01000&lt;br/&gt;A  16  10000&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设现在的客户端权限为 RWC，对应的数值就是各个权限相加 &lt;code&gt;1 + 2 + 4 = 7&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;  int  binary&lt;br/&gt;RWC 7   00111&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对任意有 R、W、C 权限需求的节点，求 &amp;amp; 的结果都不为 0，所以就能判断该客户端是拥有 RWC 这 3 个权限的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是如果当该客户端对目标节点进行删除时，做 &amp;amp; 判断权限的话，可以得到结果为 0，表示该客户端不具备删除的权限，就会返回给客户端权限错误&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;  int  binary&lt;br/&gt;RWC 7   00111&lt;br/&gt;D  8  &amp;amp; 01000&lt;br/&gt;------------------&lt;br/&gt;结果 0   00000&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.2 Scheme 介绍&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Scheme 有 4 种，分别是 &lt;code&gt;ip&lt;/code&gt;、&lt;code&gt;world&lt;/code&gt;、&lt;code&gt;digest&lt;/code&gt;、&lt;code&gt;super&lt;/code&gt;，但是其实就是两大类，一种是针对 IP 地址的 ip，另一种是使用类似“用户名:密码”的 &lt;code&gt;world&lt;/code&gt;、&lt;code&gt;digest&lt;/code&gt;、&lt;code&gt;super&lt;/code&gt;。其实整个 ACL 是分三个部分的，&lt;code&gt;scheme:id:perms&lt;/code&gt; ，id 的取值取决于 scheme 的种类，这里是 ip 所以 id 的取值就是具体的 IP 地址，而 perms 则是我上一小节介绍的 RWCDA。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这三部分的前两部分 &lt;code&gt;scheme:id&lt;/code&gt; 相当于告诉服务端 “我是谁？”，而最后的部分 &lt;code&gt;perms&lt;/code&gt; 则是代表了 “我能做什么？”，这两个问题，任意一个问题出错都会导致服务端抛出 &lt;code&gt;NoAuthException&lt;/code&gt; 的异常，告诉客户端权限不够。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.2.1 IP&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们先来直接看一段代码，其中的 IP &lt;code&gt;10.11.12.13&lt;/code&gt; 我是随便写的&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ZooKeeper client = &lt;span&gt;new&lt;/span&gt; ZooKeeper(&lt;span&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span&gt;3000&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;List&amp;lt;ACL&amp;gt; aclList = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;aclList.add(&lt;span&gt;new&lt;/span&gt; ACL(ZooDefs.Perms.ALL, &lt;span&gt;new&lt;/span&gt; Id(&lt;span&gt;&quot;ip&quot;&lt;/span&gt;, &lt;span&gt;&quot;10.11.12.13&quot;&lt;/span&gt;)));&lt;br/&gt;String path = client.create(&lt;span&gt;&quot;/abc&quot;&lt;/span&gt;, &lt;span&gt;&quot;test&quot;&lt;/span&gt;.getBytes(), aclList, CreateMode.PERSISTENT);&lt;br/&gt;System.out.println(path); &lt;span&gt;// 输出 /abc&lt;/span&gt;&lt;br/&gt;client.close();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到 &lt;code&gt;/abc&lt;/code&gt; 是可以被正确输出的，而且通过查看 &lt;code&gt;/&lt;/code&gt; 的子节点列表是可以看到 &lt;code&gt;/abc&lt;/code&gt; 节点的&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ZooKeeper client = &lt;span&gt;new&lt;/span&gt; ZooKeeper(&lt;span&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span&gt;3000&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;List&amp;lt;String&amp;gt; children = client.getChildren(&lt;span&gt;&quot;/&quot;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;);&lt;br/&gt;System.out.println(children); &lt;span&gt;// 输出 [abc, zookeeper]&lt;/span&gt;&lt;br/&gt;client.close();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是现在如果去访问该节点的数据的话就会得到报错&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ZooKeeper client = &lt;span&gt;new&lt;/span&gt; ZooKeeper(&lt;span&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span&gt;3000&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;byte&lt;/span&gt;[] data = client.getData(&lt;span&gt;&quot;/abc&quot;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;System.out.println(&lt;span&gt;new&lt;/span&gt; String(data));&lt;br/&gt;client.close();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Exception &lt;span&gt;in&lt;/span&gt; thread &lt;span&gt;&quot;main&quot;&lt;/span&gt; org.apache.zookeeper.KeeperException&lt;span&gt;$NoAuthException&lt;/span&gt;: KeeperErrorCode = NoAuth &lt;span&gt;for&lt;/span&gt; /abc&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;读者可以试试把上面的 IP 改成 &lt;code&gt;127.0.0.1&lt;/code&gt; 重新创建节点，之后就能正常访问了，一般生产环境中 IP 模式用的不多（也可能是我用的不多），如果要用 IP 控制访问的话，通过防火墙白名单之类的手段即可，这个层面我认为不需要 ZK 去管。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.2.2 World&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个模式应该是最常用的（手动狗头）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们还是来看一段代码&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ZooKeeper client = &lt;span&gt;new&lt;/span&gt; ZooKeeper(&lt;span&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span&gt;3000&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;List&amp;lt;ACL&amp;gt; aclList = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;aclList.add(&lt;span&gt;new&lt;/span&gt; ACL(ZooDefs.Perms.READ, &lt;span&gt;new&lt;/span&gt; Id(&lt;span&gt;&quot;world&quot;&lt;/span&gt;, &lt;span&gt;&quot;anyone&quot;&lt;/span&gt;))); &lt;span&gt;// 区别是这行&lt;/span&gt;&lt;br/&gt;String path = client.create(&lt;span&gt;&quot;/abc&quot;&lt;/span&gt;, &lt;span&gt;&quot;test&quot;&lt;/span&gt;.getBytes(), aclList, CreateMode.PERSISTENT);&lt;br/&gt;System.out.println(path); &lt;span&gt;// 输出 /abc&lt;/span&gt;&lt;br/&gt;client.close();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我把 scheme 改成了 World 模式，而 World 模式的 id 取值就是固定的 anyone 不能用其他值，而且我还设置了 perms 为 R，所以这个节点只能读数据，但不能做其他操作，如果使用 &lt;code&gt;setData&lt;/code&gt; 对其进行数据修改的话也会得到权限的错误&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ZooKeeper client = &lt;span&gt;new&lt;/span&gt; ZooKeeper(&lt;span&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span&gt;3000&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;Stat stat = client.setData(&lt;span&gt;&quot;/abc&quot;&lt;/span&gt;, &lt;span&gt;&quot;newData&quot;&lt;/span&gt;.getBytes(), -&lt;span&gt;1&lt;/span&gt;); &lt;span&gt;// NoAuth for /abc&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在再回头看之前的 &lt;code&gt;ZooDefs.Ids.OPEN_ACL_UNSAFE&lt;/code&gt;，其实就是 ZK 提供的常用的静态常量，代表不校验权限&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Id ANYONE_ID_UNSAFE = &lt;span&gt;new&lt;/span&gt; Id(&lt;span&gt;&quot;world&quot;&lt;/span&gt;, &lt;span&gt;&quot;anyone&quot;&lt;/span&gt;);&lt;br/&gt;ArrayList&amp;lt;ACL&amp;gt; OPEN_ACL_UNSAFE = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;ACL&amp;gt;(Collections.singletonList(&lt;span&gt;new&lt;/span&gt; ACL(Perms.ALL, ANYONE_ID_UNSAFE)));&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.2.3 Digest&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个就是我们熟悉的用户名密码了，还是先上代码&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ZooKeeper client = &lt;span&gt;new&lt;/span&gt; ZooKeeper(&lt;span&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span&gt;3000&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;List&amp;lt;ACL&amp;gt; aclList = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;aclList.add(&lt;span&gt;new&lt;/span&gt; ACL(ZooDefs.Perms.ALL, &lt;br/&gt;  &lt;span&gt;new&lt;/span&gt; Id(&lt;span&gt;&quot;digest&quot;&lt;/span&gt;, DigestAuthenticationProvider.generateDigest(&lt;span&gt;&quot;laoxun:kaixin&quot;&lt;/span&gt;)))); &lt;span&gt;// 1&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;String path = client.create(&lt;span&gt;&quot;/abc&quot;&lt;/span&gt;, &lt;span&gt;&quot;test&quot;&lt;/span&gt;.getBytes(), aclList, CreateMode.PERSISTENT);&lt;br/&gt;System.out.println(path);&lt;br/&gt;client.close();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个写法中必须要注意的是 1 处的 &lt;code&gt;username:password&lt;/code&gt; 的字符串必须通过 &lt;code&gt;DigestAuthenticationProvider.generateDigest&lt;/code&gt; 的方法包装一下，用这个方法会对传入的字符串进行编码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;包装完后 &lt;code&gt;laoxun:kaixin&lt;/code&gt; 其实变成了 &lt;code&gt;laoxun:/xQjqfEf7WHKtjj2csJh1/aEee8=&lt;/code&gt;，这个过程如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;laoxun:kaixin&lt;/code&gt; 对整个字符串先进行 SHA1 加密&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对加密后的结果进行 Base64 编码&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将用户名和编码后的结果拼接&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的代码还有一种写法如下，使用 &lt;code&gt;addAuthInfo&lt;/code&gt; 在客户端上下文中添加权限信息&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ZooKeeper client = &lt;span&gt;new&lt;/span&gt; ZooKeeper(&lt;span&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span&gt;3000&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;client.addAuthInfo(&lt;span&gt;&quot;digest&quot;&lt;/span&gt;, &lt;span&gt;&quot;laoxun:kaixin&quot;&lt;/span&gt;.getBytes()); &lt;span&gt;// 1. &lt;/span&gt;&lt;br/&gt;List&amp;lt;ACL&amp;gt; aclList = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;aclList.add(&lt;span&gt;new&lt;/span&gt; ACL(ZooDefs.Perms.ALL, &lt;span&gt;new&lt;/span&gt; Id(&lt;span&gt;&quot;auth&quot;&lt;/span&gt;, &lt;span&gt;&quot;&quot;&lt;/span&gt;))); &lt;span&gt;// 2. 这里的 Id 是固定写法&lt;/span&gt;&lt;br/&gt;String path = client.create(&lt;span&gt;&quot;/abc&quot;&lt;/span&gt;, &lt;span&gt;&quot;test&quot;&lt;/span&gt;.getBytes(), aclList, CreateMode.PERSISTENT);&lt;br/&gt;System.out.println(path);&lt;br/&gt;client.close();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里有两个改动，在 1 处使用 &lt;code&gt;addAuthInfo&lt;/code&gt; 的方法可以在当前客户端的会话中添加 auth 信息，Digest 的 id 取值为 &lt;code&gt;username:password&lt;/code&gt; 直接用明文即可，无论是 username 还是 password 都是自定义的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后是查询代码&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ZooKeeper client = &lt;span&gt;new&lt;/span&gt; ZooKeeper(&lt;span&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span&gt;3000&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;client.addAuthInfo(&lt;span&gt;&quot;digest&quot;&lt;/span&gt;, &lt;span&gt;&quot;laoxun:kaixin&quot;&lt;/span&gt;.getBytes()); &lt;span&gt;// 这行如果注释的话就会报错&lt;/span&gt;&lt;br/&gt;&lt;span&gt;byte&lt;/span&gt;[] data = client.getData(&lt;span&gt;&quot;/abc&quot;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;System.out.println(&lt;span&gt;new&lt;/span&gt; String(data)); &lt;span&gt;// test&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不管创建的时候是何种写法，查询的时候都要使用 &lt;code&gt;addAuthInfo&lt;/code&gt; 在会话中添加权限信息，才能对该节点进行查询&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.2.4 Super&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;听名字就知道这个模式是管理员的模式了，因为之前创建的那些节点，如果设置了用户名密码，其他客户端是无法访问的，如果该客户端自己退出了，这些节点就无法去操作了，所以需要管理员这一个角色来对其进行降维打击。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUd13ibOzOD0V6SGsZdRCibZCSjn7zo9vn2EWjPyGx7ITS52KSN224dK6A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;1&quot; data-w=&quot;240&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先 Super 模式是要开启的，我这里假设管理员的用户名为 HelloZooKeeper，密码为 niubi，经过编码后就是 &lt;code&gt;HelloZooKeeper:PT8Sb6Exg9YyPCS7fYraLCsqzR8=&lt;/code&gt;， 然后需要在服务端启动的环境中指定 &lt;code&gt;zookeeper.DigestAuthenticationProvider.superDigest&lt;/code&gt; 配置，参数就是 &lt;code&gt;HelloZooKeeper:PT8Sb6Exg9YyPCS7fYraLCsqzR8=&lt;/code&gt; 即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建节点假设还是以 &lt;code&gt;laoxun:kaixin&lt;/code&gt; 的模式，然后通过管理员的密码也能进行正常的访问&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ZooKeeper client = &lt;span&gt;new&lt;/span&gt; ZooKeeper(&lt;span&gt;&quot;127.0.0.1:2181&quot;&lt;/span&gt;, &lt;span&gt;3000&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;client.addAuthInfo(&lt;span&gt;&quot;digest&quot;&lt;/span&gt;, &lt;span&gt;&quot;HelloZooKeeper:niubi&quot;&lt;/span&gt;.getBytes()); &lt;span&gt;// 1.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;byte&lt;/span&gt;[] data = client.getData(&lt;span&gt;&quot;/abc&quot;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;System.out.println(&lt;span&gt;new&lt;/span&gt; String(data)); &lt;span&gt;// test&lt;/span&gt;&lt;br/&gt;client.close();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里可以看到 1 处的 Super 模式本质上还是 Digest，指定的 scheme 为 digest，然后之后的 id 取值采用的是明文，而非编码后的格式，切记！&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.3 Permission 汇总表格&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我这里列出大部分服务端提供的操作对应的 Permission 权限：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;操作&lt;/th&gt;&lt;th&gt;所需权限&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;create&lt;/td&gt;&lt;td&gt;父节点的 CREATE&lt;/td&gt;&lt;td&gt;创建节点&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;create2&lt;/td&gt;&lt;td&gt;父节点的 CREATE&lt;/td&gt;&lt;td&gt;创建节点，同时返回节点数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;createContainer&lt;/td&gt;&lt;td&gt;父节点的 CREATE&lt;/td&gt;&lt;td&gt;创建容器节点&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;createTTL&lt;/td&gt;&lt;td&gt;父节点的 CREATE&lt;/td&gt;&lt;td&gt;创建带超时时间的节点&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;delete&lt;/td&gt;&lt;td&gt;父节点的 DELETE&lt;/td&gt;&lt;td&gt;删除节点&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;setData&lt;/td&gt;&lt;td&gt;当前节点的 WRITE&lt;/td&gt;&lt;td&gt;设置节点数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;setACL&lt;/td&gt;&lt;td&gt;当前节点的 ADMIN&lt;/td&gt;&lt;td&gt;设置节点的权限信息&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;reconfig&lt;/td&gt;&lt;td&gt;当前节点的 WRITE&lt;/td&gt;&lt;td&gt;重新设置一些配置（之后有机会介绍）&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;getData&lt;/td&gt;&lt;td&gt;当前节点的 READ&lt;/td&gt;&lt;td&gt;查询节点数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;getChildren&lt;/td&gt;&lt;td&gt;当前节点的 READ&lt;/td&gt;&lt;td&gt;获取子节点列表&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;getChildren2&lt;/td&gt;&lt;td&gt;当前节点的 READ&lt;/td&gt;&lt;td&gt;获取子节点列表&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;getAllChildrenNumber&lt;/td&gt;&lt;td&gt;当前节点的 READ&lt;/td&gt;&lt;td&gt;获取所有子节点（包含孙子节点）数量&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;getACL&lt;/td&gt;&lt;td&gt;当前节点的 ADMIN 或 READ&lt;/td&gt;&lt;td&gt;获取节点的权限信息&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到删除和创建节点看的是父节点的权限，只有读写才是看的自己本身的权限。另外如果表格中没有出现的操作可以认为不需要 ACL 权限校验，其他要么是只需要客户端是一个合法的 session 或者本身是一些比较特殊的功能，例如：createSession、closeSession 等。至于关于 session 的更多内容，留到下一篇再讲吧～哈哈&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUxjdxS29O4fmc2C4N9qzjU8MPDVFO1LriapJM8wWSGbhVwQ5J8VWJNgQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;1&quot; data-w=&quot;255&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.4 ACL 背后的原理&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们刚刚花了一点篇幅介绍了 ACL 是什么，怎么用？现在深入了解下 ACL 在 ZK 的服务端底层是怎么去实现的吧～为了节约篇幅，这次就直接进入猿话讲解了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先祭出之前的一张图，唤醒下大家的记忆&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUxgdcZeG9QKmjgsVDlWNfnKjTQaQn245HyicufVGNs0f5EgJVFUBvRFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.4935064935064935&quot; data-w=&quot;1078&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图中权限部分（蓝色字体）之前的文章直接省略跳过了，没有进行解释，今天我们就好好讲讲这个权限字段。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从图上也能看到权限这个字段是直接以数字（long 类型，64 位的整型数字）的方式保存在服务端的节点中的，而 -1 是一个特殊的值代表不进行权限的校验对应的就是之前的 &lt;code&gt;OPEN_ACL_UNSAFE&lt;/code&gt; 常量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 ACL 权限无论是创建节点时提供的（ACL 参数是一个 List），还是通过 &lt;code&gt;addAuth&lt;/code&gt; 方法提供的（这个方法可以被调用多次），这两种设计都表示一个客户端是可以拥有多种权限的，比如：多个用户名密码，多个 IP 地址等等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ACL 我之前讲过是由 3 个部分组成的，即 &lt;code&gt;scheme:id:perms&lt;/code&gt; 为了简洁的表示我会在之后使用该形式去表示一个 ACL。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务端会使用两个哈希表把目前接收到的 ACL 列表和其对应的数字双向的关系保存起来，类似这样（图中的 ACL 取值是我随意编造的）：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUk1C2GPu3dcLoBRu7SyRq5Gp76zScqr71wSxBC6dOOGslvlGR3zon8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.7423167848699763&quot; data-w=&quot;846&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ZK 服务端会维护一个从 1 开始的数字，收到一个新的 ACL 会同时放入这两个哈希表（源码中对应的就是两个 &lt;code&gt;Map&lt;/code&gt;，一个是 &lt;code&gt;Map&amp;lt;List&amp;lt;ACL&amp;gt;, Long&amp;gt;&lt;/code&gt;，一个是 &lt;code&gt;Map&amp;lt;Long, List&amp;lt;ACL&amp;gt;&amp;gt;&lt;/code&gt;），除了这两个哈希表以外，ZK 服务端还为每一个客户端都维护了一个会话中的权限信息，该权限信息就是客户端通过 &lt;code&gt;addAuth&lt;/code&gt; 添加的，但是这个客户端的权限信息只保存了 &lt;code&gt;scheme:id&lt;/code&gt; 部分，所以结合以下三个信息就可以对客户端的本次操作进行权限校验了：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;两个哈希表表示的节点的信息 &lt;code&gt;scheme:id:perms&lt;/code&gt;，可以有多个&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;客户端会话上下文中的权限信息仅 &lt;code&gt;id:perms&lt;/code&gt; ，可以有多个&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;本次操作对应的权限要求，即 3.3 表格中列出的所需权限&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;校验的流程如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUicw3UTFlfRuqiaIasstVV2ibNYCuLiayGfVbSSGAS3f4veCJIWKKHPv4mA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.2361111111111111&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里额外提一下，校验器是可以自定义的，用户可以自定义自己的 scheme 以及自己的校验逻辑，需要在服务端的环境变量中配置以 &lt;code&gt;zookeeper.authProvider.&lt;/code&gt; 开头的配置，对应的值则对应一个 class 类全路径，这个类必须实现 &lt;code&gt;org.apache.zookeeper.server.auth.AuthenticationProvider&lt;/code&gt; 接口，而且这个类必须能被 ZK 服务端加载到，这样就可以解析自定义的 scheme 控制整个校验逻辑了，这个功能比较高级，我也没用过，大家就当补充知识了解下～&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天我们了解了 Follower 和 Observer 是如何同 Leader 进行数据同步的，以及 ZK 提供的权限管理 ACL 究竟是怎么回事，下一篇我们将聊聊 ZK 的 session 管理，客户端和服务端之间是怎么保持会话的，以及服务端不同节点之间的心跳又是怎么保持的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后给文章点个赞吧～什么？你说不想点？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNNib25DXQw8iatfbZLpACr3jUDPFxpURR6Vx2etlibbvyVrqNX53icHUXLYAOs6ZRibAL1RzHggj1hh18A/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-ratio=&quot;1&quot; data-w=&quot;500&quot;/&gt;&lt;/figure&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老规矩，如果你有任何对文章中的疑问也可以是建议或者是对 ZK 原理部分的疑问，欢迎来仓库中提问，或者&lt;strong&gt;&lt;span&gt;阅读原文&lt;/span&gt;&lt;/strong&gt;来语雀话题讨论。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;地址：https://github.com/HelloGitHub-Team/HelloZooKeeper&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.08108108108108109&quot; data-type=&quot;png&quot; data-w=&quot;1258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wKOZZiacmHTc9LIKRXddrzz6MosLdiaH4EQNQgzsrSXHObdAia8yeIlLz6MbK9FxNDr44G7FNb2DBufqkjpwiczAibA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA5MzYyNzQ0MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOqkqThUJBICyFBlvLvTyOCgBpibwWotSxGExfnOYFfPiaL9yn3GMUOCEVYN2RNslGCdQwgZy6ticdyA/0?wx_fmt=png&quot; data-nickname=&quot;HelloGitHub&quot; data-alias=&quot;GitHub520&quot; data-signature=&quot;分享 GitHub 上有趣、入门级的开源项目。&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;👆「点击关注」&lt;/span&gt;&lt;/strong&gt;更多惊喜等待你！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>