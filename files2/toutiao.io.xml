<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>50440ae4663ee10a41f458d3b827ef52</guid>
<title>亚马逊首席科学家李沐博士：工作五年反思</title>
<link>https://toutiao.io/k/gc48vin</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;架构师社区&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;devabc&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;架构师社区，专注分享架构师技术干货，架构师行业秘闻，汇集各类奇妙好玩的架构师话题和流行的架构师动向！&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0cca891f528b351ce8e804b64ec25d7b</guid>
<title>前端复杂表格导出excel，一键导出 Antd Table 看这篇就够了（附源码）</title>
<link>https://toutiao.io/k/bvn9jo5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;前端导出 excel 的需求很多，但市面上好用的库并不多，讲明白复杂使用场景的文章更少。&lt;/p&gt;&lt;p&gt;本文将以文字 + demo 源码的形式，力求讲清楚满足 99% 使用场景的终极 excel 导出方案。&lt;/p&gt;&lt;p&gt;如果项目中用到了 AntD，那就更简单了，因为 Table 本身已经设置好了 column 和 dataSource，只需解析 column 和 dataSource 即可快速导出 Excel。&lt;/p&gt;&lt;p&gt;实现功能：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;简单表格导出&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为表格添加样式（更改背景色、更换字体、字号、颜色）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设置行高、列宽&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;解析 ant-design 的 Table 直接导出excel，根据 antd 页面中设置的列宽动态计算 excel 中的列宽&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;多级表头（行合并、列合并）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一个 sheet 中放多张表，并实现每张表的列宽不同&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;源码地址：&lt;span&gt;github.com/cachecats/excel-export-demo&lt;/span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;/p&gt;&lt;p&gt;第二篇文章：&lt;span&gt;js 批量导出 excel 为zip压缩包:https://juejin.cn/post/7080169896209809445/&lt;/span&gt;&lt;span&gt;[2]&lt;/span&gt;， 对导出方法进行了封装，还实现了使用 &lt;code&gt;exceljs&lt;/code&gt;、&lt;code&gt;file-saver&lt;/code&gt;、&lt;code&gt;jszip&lt;/code&gt;实现下载包含多层级文件夹、多个 excel、每个 excel 支持多个 sheet 的 zip 压缩包。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;一、技术选型&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;xlsx&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;呼声最高的是 &lt;span&gt;xlsx&lt;/span&gt;&lt;span&gt;[3]&lt;/span&gt;，又叫 &lt;code&gt;SheetJS&lt;/code&gt;，也是下载量最高和 &lt;code&gt;star&lt;/code&gt;最多的库。试用了一下很强大，但是！默认不支持改变样式，想要支持改变样式，需要使用它的收费版本。&lt;/p&gt;&lt;p&gt;本着勤俭节约的原则，很多人使用了另一个第三方库：&lt;span&gt;xlsx-style&lt;/span&gt;&lt;span&gt;[4]&lt;/span&gt;，但是使用起来极其复杂，还需要改 node_modules 源码，这个库最后更新时间也定格在了 6年前。还有一些其他的第三方样式拓展库，质量参差不齐。&lt;/p&gt;&lt;p&gt;使用成本和后期的维护成本很高，不得不放弃。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;ExcelJS&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;ExcelJS&lt;/span&gt;&lt;span&gt;[5]&lt;/span&gt; 周下载量 450k，github star 9k，并且拥有中文文档，对国内开发者很友好。虽然文档是以README 的形式，可读性不太好，但重在内容，常用的功能基本都有覆盖。&lt;/p&gt;&lt;p&gt;最近更新时间是6个月内，试用了一下，集成很简单，再加之文档丰富，就选它了。&lt;/p&gt;&lt;p&gt;安装：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;npm install exceljs&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下载到本地还需要另一个库：&lt;code&gt;file-saver&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;npm install file-saver&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;二、基本概念&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;先了解下基本概念，更详细的介绍参考官方文档：&lt;span&gt;github.com/exceljs/exc…&lt;/span&gt;&lt;span&gt;[6]&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;workbook&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;workbook：工作簿，可以理解为整个 excel 表格。&lt;/p&gt;&lt;p&gt;通过 &lt;code&gt;const workbook = new ExcelJS.Workbook()&lt;/code&gt; 创建工作簿，还可以设置工作簿的属性：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;workbook.creator = &lt;span&gt;&#x27;Me&#x27;&lt;/span&gt;;&lt;br/&gt;workbook.lastModifiedBy = &lt;span&gt;&#x27;Her&#x27;&lt;/span&gt;;&lt;br/&gt;workbook.created = new Date(1985, 8, 30);&lt;br/&gt;workbook.modified = new Date();&lt;br/&gt;workbook.lastPrinted = new Date(2016, 9, 27);&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;worksheet&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;工作表，即 Excel 表格中的 sheet 页。&lt;/p&gt;&lt;p&gt;通过 &lt;code&gt;const sheet = workbook.addWorksheet(&#x27;My Sheet&#x27;)&lt;/code&gt;创建工作表，每个 workbook 可添加多个 worksheet。&lt;/p&gt;&lt;p&gt;使用 addWorksheet 函数的第二个参数来指定工作表的选项。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 创建带有红色标签颜色的工作表&lt;br/&gt;const sheet = workbook.addWorksheet(&lt;span&gt;&#x27;My Sheet&#x27;&lt;/span&gt;, {properties:{tabColor:{argb:&lt;span&gt;&#x27;FFC0000&#x27;&lt;/span&gt;}}});&lt;br/&gt;&lt;br/&gt;// 创建一个隐藏了网格线的工作表&lt;br/&gt;const sheet = workbook.addWorksheet(&lt;span&gt;&#x27;My Sheet&#x27;&lt;/span&gt;, {views: [{showGridLines: &lt;span&gt;false&lt;/span&gt;}]});&lt;br/&gt;&lt;br/&gt;// 创建一个第一行和列冻结的工作表&lt;br/&gt;const sheet = workbook.addWorksheet(&lt;span&gt;&#x27;My Sheet&#x27;&lt;/span&gt;, {views:[{xSplit: 1, ySplit:1}]});&lt;br/&gt;&lt;br/&gt;// 使用A4设置的页面设置设置创建新工作表 - 横向&lt;br/&gt;const worksheet =  workbook.addWorksheet(&lt;span&gt;&#x27;My Sheet&#x27;&lt;/span&gt;, {&lt;br/&gt;  pageSetup:{paperSize: 9, orientation:&lt;span&gt;&#x27;landscape&#x27;&lt;/span&gt;}&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;// 创建一个具有页眉页脚的工作表&lt;br/&gt;const sheet = workbook.addWorksheet(&lt;span&gt;&#x27;My Sheet&#x27;&lt;/span&gt;, {&lt;br/&gt;  headerFooter:{firstHeader: &lt;span&gt;&quot;Hello Exceljs&quot;&lt;/span&gt;, firstFooter: &lt;span&gt;&quot;Hello World&quot;&lt;/span&gt;}&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;// 创建一个冻结了第一行和第一列的工作表&lt;br/&gt;const sheet = workbook.addWorksheet(&lt;span&gt;&#x27;My Sheet&#x27;&lt;/span&gt;, {views:[{state: &lt;span&gt;&#x27;frozen&#x27;&lt;/span&gt;, xSplit: 1, ySplit:1}]});&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;columns&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;列，通过 &lt;code&gt;worksheet.columns&lt;/code&gt;可设置表头。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 添加列标题并定义列键和宽度&lt;br/&gt;// 注意：这些列结构仅是构建工作簿的方便之处，除了列宽之外，它们不会完全保留。&lt;br/&gt;worksheet.columns = [&lt;br/&gt;  { header: &lt;span&gt;&#x27;Id&#x27;&lt;/span&gt;, key: &lt;span&gt;&#x27;id&#x27;&lt;/span&gt;, width: 10 },&lt;br/&gt;  { header: &lt;span&gt;&#x27;Name&#x27;&lt;/span&gt;, key: &lt;span&gt;&#x27;name&#x27;&lt;/span&gt;, width: 32 },&lt;br/&gt;  { header: &lt;span&gt;&#x27;D.O.B.&#x27;&lt;/span&gt;, key: &lt;span&gt;&#x27;DOB&#x27;&lt;/span&gt;, width: 10, outlineLevel: 1 }&lt;br/&gt;];&lt;br/&gt;&lt;br/&gt;// 通过键，字母和基于1的列号访问单个列&lt;br/&gt;const idCol = worksheet.getColumn(&lt;span&gt;&#x27;id&#x27;&lt;/span&gt;);&lt;br/&gt;const nameCol = worksheet.getColumn(&lt;span&gt;&#x27;B&#x27;&lt;/span&gt;);&lt;br/&gt;const dobCol = worksheet.getColumn(3);&lt;br/&gt;&lt;br/&gt;// 设置列属性&lt;br/&gt;&lt;br/&gt;// 注意：将覆盖 C1 单元格值&lt;br/&gt;dobCol.header = &lt;span&gt;&#x27;Date of Birth&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;// 注意：这将覆盖 C1:C2 单元格值&lt;br/&gt;dobCol.header = [&lt;span&gt;&#x27;Date of Birth&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;A.K.A. D.O.B.&#x27;&lt;/span&gt;];&lt;br/&gt;&lt;br/&gt;// 从现在开始，此列将以 “dob” 而不是 “DOB” 建立索引&lt;br/&gt;dobCol.key = &lt;span&gt;&#x27;dob&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;dobCol.width = 15;&lt;br/&gt;&lt;br/&gt;// 如果需要，隐藏列&lt;br/&gt;dobCol.hidden = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;还可对列进行各种操作。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 遍历此列中的所有当前单元格&lt;br/&gt;dobCol.eachCell(&lt;span&gt;function&lt;/span&gt;(cell, rowNumber) {&lt;br/&gt;  // ...&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;// 遍历此列中的所有当前单元格，包括空单元格&lt;br/&gt;dobCol.eachCell({ includeEmpty: &lt;span&gt;true&lt;/span&gt; }, &lt;span&gt;function&lt;/span&gt;(cell, rowNumber) {&lt;br/&gt;  // ...&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;// 添加一列新值&lt;br/&gt;worksheet.getColumn(6).values = [1,2,3,4,5];&lt;br/&gt;&lt;br/&gt;// 添加稀疏列值&lt;br/&gt;worksheet.getColumn(7).values = [,,2,3,,5,,7,,,,11];&lt;br/&gt;&lt;br/&gt;// 剪切一列或多列（右边的列向左移动）&lt;br/&gt;// 如果定义了列属性，则会相应地对其进行切割或移动&lt;br/&gt;// 已知问题：如果拼接导致任何合并的单元格移动，结果可能是不可预测的&lt;br/&gt;worksheet.spliceColumns(3,2);&lt;br/&gt;&lt;br/&gt;// 删除一列，再插入两列。&lt;br/&gt;// 注意：第4列及以上的列将右移1列。&lt;br/&gt;// 另外：如果工作表中的行数多于列插入项中的值，则行将仍然被插入，就好像值存在一样。&lt;br/&gt;const newCol3Values = [1,2,3,4,5];&lt;br/&gt;const newCol4Values = [&lt;span&gt;&#x27;one&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;two&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;three&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;four&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;five&#x27;&lt;/span&gt;];&lt;br/&gt;worksheet.spliceColumns(3, 1, newCol3Values, newCol4Values);&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;row&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;行，可以添加一行或者同时添加多行数据，是使用最频繁的属性。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 通过 json 添加一行数据，需要先设置 columns&lt;br/&gt;worksheet.addRow({id: 1, name: &lt;span&gt;&#x27;John Doe&#x27;&lt;/span&gt;, dob: new Date(1970,1,1)});&lt;br/&gt;worksheet.addRow({id: 2, name: &lt;span&gt;&#x27;Jane Doe&#x27;&lt;/span&gt;, dob: new Date(1965,1,7)});&lt;br/&gt;// 通过数组添加一行数据&lt;br/&gt;worksheet.addRow([3, &lt;span&gt;&#x27;Sam&#x27;&lt;/span&gt;, new Date()]);&lt;br/&gt;&lt;br/&gt;// 同时添加多行数据&lt;br/&gt;worksheet.addRows(list);&lt;br/&gt;&lt;br/&gt;// 遍历工作表中具有值的所有行&lt;br/&gt;worksheet.eachRow(&lt;span&gt;function&lt;/span&gt;(row, rowNumber) {&lt;br/&gt;  console.log(&lt;span&gt;&#x27;Row &#x27;&lt;/span&gt; + rowNumber + &lt;span&gt;&#x27; = &#x27;&lt;/span&gt; + JSON.stringify(row.values));&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;// 遍历工作表中的所有行（包括空行）&lt;br/&gt;worksheet.eachRow({ includeEmpty: &lt;span&gt;true&lt;/span&gt; }, &lt;span&gt;function&lt;/span&gt;(row, rowNumber) {&lt;br/&gt;  console.log(&lt;span&gt;&#x27;Row &#x27;&lt;/span&gt; + rowNumber + &lt;span&gt;&#x27; = &#x27;&lt;/span&gt; + JSON.stringify(row.values));&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;// 连续遍历所有非空单元格&lt;br/&gt;row.eachCell(&lt;span&gt;function&lt;/span&gt;(cell, colNumber) {&lt;br/&gt;  console.log(&lt;span&gt;&#x27;Cell &#x27;&lt;/span&gt; + colNumber + &lt;span&gt;&#x27; = &#x27;&lt;/span&gt; + cell.value);&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;// 遍历一行中的所有单元格（包括空单元格）&lt;br/&gt;row.eachCell({ includeEmpty: &lt;span&gt;true&lt;/span&gt; }, &lt;span&gt;function&lt;/span&gt;(cell, colNumber) {&lt;br/&gt;  console.log(&lt;span&gt;&#x27;Cell &#x27;&lt;/span&gt; + colNumber + &lt;span&gt;&#x27; = &#x27;&lt;/span&gt; + cell.value);&lt;br/&gt;});&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;三、简单表格导出&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;本文所有示例都使用 React + AntD。&lt;/p&gt;&lt;p&gt;先看效果，我们用 AntD 的 Table 写个简单的表格页面，并设置不同的列宽：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5398773006134969&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoHDq62h0icSVPu2NEBZZL8tl6xDrj5XzxeP4UOYOMZruuyVgfZiaTM2ysU6U7W33HicqMiaFchibC6kvA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1304&quot;/&gt;&lt;/figure&gt;&lt;p&gt;点击导出 excel，然后打开得到以下结果：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8087167070217918&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoHDq62h0icSVPu2NEBZZL8ta1x2Nriab4cAE6ibFdW9aloXtzBAOxrU2jMicwS6pN9STwTYWWmibTPjAA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;826&quot;/&gt;&lt;/figure&gt;&lt;p&gt;可以看到，导出的 excel 列宽比例跟在线的表格是一致的。&lt;/p&gt;&lt;p&gt;贴源码：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 简单 demo&lt;br/&gt;import React, {useEffect, useState} from &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;&lt;br/&gt;import {Button, Card, Table} from &lt;span&gt;&quot;antd&quot;&lt;/span&gt;;&lt;br/&gt;import {ColumnsType} from &lt;span&gt;&quot;antd/lib/table/interface&quot;&lt;/span&gt;;&lt;br/&gt;import * as ExcelJs from &lt;span&gt;&#x27;exceljs&#x27;&lt;/span&gt;;&lt;br/&gt;import {generateHeaders, saveWorkbook} from &lt;span&gt;&quot;../utils&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;interface SimpleDemoProps {&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;interface StudentInfo {&lt;br/&gt;  id: number;&lt;br/&gt;  name: string;&lt;br/&gt;  age: number;&lt;br/&gt;  gender: string;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;const SimpleDemo: React.FC&amp;lt;SimpleDemoProps&amp;gt; = () =&amp;gt; {&lt;br/&gt;&lt;br/&gt;  const [list, setList] = useState&amp;lt;StudentInfo[]&amp;gt;([]);&lt;br/&gt;&lt;br/&gt;  useEffect(() =&amp;gt; {&lt;br/&gt;    generateData();&lt;br/&gt;  }, [])&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;function&lt;/span&gt; &lt;span&gt;&lt;span&gt;generateData&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;let&lt;/span&gt; arr: StudentInfo[] = [];&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;let&lt;/span&gt; i = 0; i &amp;lt; 10; i++) {&lt;br/&gt;      arr.push({&lt;br/&gt;        id: i,&lt;br/&gt;        name: `小明&lt;span&gt;${i}&lt;/span&gt;号`,&lt;br/&gt;        age: i,&lt;br/&gt;        gender: i % 2 === 0 ? &lt;span&gt;&#x27;男&#x27;&lt;/span&gt; : &lt;span&gt;&#x27;女&#x27;&lt;/span&gt;&lt;br/&gt;      })&lt;br/&gt;    }&lt;br/&gt;    setList(arr);&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  const columns: ColumnsType&amp;lt;any&amp;gt; = [&lt;br/&gt;    {&lt;br/&gt;      width: 50,&lt;br/&gt;      dataIndex: &lt;span&gt;&#x27;id&#x27;&lt;/span&gt;,&lt;br/&gt;      key: &lt;span&gt;&#x27;id&#x27;&lt;/span&gt;,&lt;br/&gt;      title: &lt;span&gt;&#x27;ID&#x27;&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;      width: 100,&lt;br/&gt;      dataIndex: &lt;span&gt;&#x27;name&#x27;&lt;/span&gt;,&lt;br/&gt;      key: &lt;span&gt;&#x27;name&#x27;&lt;/span&gt;,&lt;br/&gt;      title: &lt;span&gt;&#x27;姓名&#x27;&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;      width: 50,&lt;br/&gt;      dataIndex: &lt;span&gt;&#x27;age&#x27;&lt;/span&gt;,&lt;br/&gt;      key: &lt;span&gt;&#x27;age&#x27;&lt;/span&gt;,&lt;br/&gt;      title: &lt;span&gt;&#x27;年龄&#x27;&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;    {&lt;br/&gt;      width: 80,&lt;br/&gt;      dataIndex: &lt;span&gt;&#x27;gender&#x27;&lt;/span&gt;,&lt;br/&gt;      key: &lt;span&gt;&#x27;gender&#x27;&lt;/span&gt;,&lt;br/&gt;      title: &lt;span&gt;&#x27;性别&#x27;&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;  ];&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;function&lt;/span&gt; &lt;span&gt;&lt;span&gt;onExportBasicExcel&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    // 创建工作簿&lt;br/&gt;    const workbook = new ExcelJs.Workbook();&lt;br/&gt;    // 添加sheet&lt;br/&gt;    const worksheet = workbook.addWorksheet(&lt;span&gt;&#x27;demo sheet&#x27;&lt;/span&gt;);&lt;br/&gt;    // 设置 sheet 的默认行高&lt;br/&gt;    worksheet.properties.defaultRowHeight = 20;&lt;br/&gt;    // 设置列&lt;br/&gt;    worksheet.columns = generateHeaders(columns);&lt;br/&gt;    // 添加行&lt;br/&gt;    worksheet.addRows(list);&lt;br/&gt;    // 导出excel&lt;br/&gt;    saveWorkbook(workbook, &lt;span&gt;&#x27;simple-demo.xlsx&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; (&lt;br/&gt;    &amp;lt;Card&amp;gt;&lt;br/&gt;      &amp;lt;h3&amp;gt;简单表格&amp;lt;/h3&amp;gt;&lt;br/&gt;      &amp;lt;Button &lt;span&gt;type&lt;/span&gt;={&lt;span&gt;&#x27;primary&#x27;&lt;/span&gt;} style={{marginBottom: 10}} onClick={onExportBasicExcel}&amp;gt;导出excel&amp;lt;/Button&amp;gt;&lt;br/&gt;      &amp;lt;Table&lt;br/&gt;        columns={columns}&lt;br/&gt;        dataSource={list}&lt;br/&gt;      /&amp;gt;&lt;br/&gt;    &amp;lt;/Card&amp;gt;&lt;br/&gt;  );&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default SimpleDemo&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;真正导出的代码只有几行，重点看 &lt;code&gt;onExportBasicExcel&lt;/code&gt;方法：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;先创建工作簿和 sheet 页，这两行是固定代码。如果需要多 sheet，则创建多个 sheet 即可。后续对表格的所有操作，都是对 worksheet 的操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设置表格的默认行高。这步非必要，但是设置了更美观。否则会出现有内容的行跟没有内容的行行高不一致的情况。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设置列数据（表头）和每行的数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;导出 excel。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;&lt;span&gt;解析 AntD Table 的 columns 和 dataSource&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;因为我们是用 AntD 的 Table，其实已经构造出了表头和具体的表格数据，所以只需解析即可。&lt;/p&gt;&lt;p&gt;&lt;code&gt;generateHeaders()&lt;/code&gt;方法是自己封装的，将 Table 的 columns 转换为 &lt;code&gt;ExcelJS&lt;/code&gt;的表头格式的方法：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import {ITableHeader} from &lt;span&gt;&quot;src/types&quot;&lt;/span&gt;;&lt;br/&gt;import {ColumnsType} from &lt;span&gt;&quot;antd/lib/table/interface&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;const DEFAULT_COLUMN_WIDTH = 20;&lt;br/&gt;&lt;br/&gt;// 根据 antd 的 column 生成 exceljs 的 column&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; generateHeaders(columns: any[]) {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; columns?.map(col =&amp;gt; {&lt;br/&gt;    const obj: ITableHeader = {&lt;br/&gt;      // 显示的 name&lt;br/&gt;      header: col.title,&lt;br/&gt;      // 用于数据匹配的 key&lt;br/&gt;      key: col.dataIndex,&lt;br/&gt;      // 列宽&lt;br/&gt;      width: col.width / 5 || DEFAULT_COLUMN_WIDTH,&lt;br/&gt;    };&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; obj;&lt;br/&gt;  })&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在&lt;code&gt;ExcelJS&lt;/code&gt;中，header 字段表示显示的表头内容，key 是用于匹配数据的 key，width 是列宽。在 Table 的 column 中都有对应的字段，取出来赋值即可。&lt;br/&gt;注意设置列宽的时候，在线表格和 excel 的单位可能不一致，需要除以一个系数才不至于太宽。至于具体除多少，可以不断试验得出个最佳值，我试的除以 5 效果比较好。&lt;/p&gt;&lt;p&gt;通过 &lt;code&gt;worksheet.addRows()&lt;/code&gt;方法可以为工作表添加多行数据，因为上面我们已经设置了表头，程序知道了每列数据应该匹配哪个字段，所以这里直接传入 Table 的 dataSource 即可。&lt;/p&gt;&lt;p&gt;也可以通过 &lt;code&gt;worksheet.addRow()&lt;/code&gt;逐行添加数据。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;下载 excel&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;saveWorkbook()&lt;/code&gt;也是自己封装的方法，接收 workbook 和文件名来下载 excel 到本地。&lt;/p&gt;&lt;p&gt;下载是使用 &lt;code&gt;file-saver&lt;/code&gt;库。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import {saveAs} from &lt;span&gt;&quot;file-saver&quot;&lt;/span&gt;;&lt;br/&gt;import {Workbook} from &lt;span&gt;&quot;exceljs&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; saveWorkbook(workbook: Workbook, fileName: string) {&lt;br/&gt;  // 导出文件&lt;br/&gt;  workbook.xlsx.writeBuffer().&lt;span&gt;then&lt;/span&gt;((data =&amp;gt; {&lt;br/&gt;    const blob = new Blob([data], {&lt;span&gt;type&lt;/span&gt;: &lt;span&gt;&#x27;&#x27;&lt;/span&gt;});&lt;br/&gt;    saveAs(blob, fileName);&lt;br/&gt;  }))&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;到此，可以通过短短几行代码实现 AntD 的 Table 导出啦。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;四、修改样式&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;单元格，行和列均支持一组丰富的样式和格式，这些样式和格式会影响单元格的显示方式。&lt;/p&gt;&lt;p&gt;通过分配以下属性来设置样式：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;numFmt&lt;/span&gt;&lt;span&gt;[7]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;font&lt;/span&gt;&lt;span&gt;[8]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;alignment&lt;/span&gt;&lt;span&gt;[9]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;border&lt;/span&gt;&lt;span&gt;[10]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;fill&lt;/span&gt;&lt;span&gt;[11]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;添加背景色&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;我们先给表头添加背景。因为表头是第一行，可以通过 getRow(1) 来获取表头这一行：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 给表头添加背景色&lt;br/&gt;&lt;span&gt;let&lt;/span&gt; headerRow = worksheet.getRow(1);&lt;br/&gt;headerRow.fill = {&lt;br/&gt;  &lt;span&gt;type&lt;/span&gt;: &lt;span&gt;&#x27;pattern&#x27;&lt;/span&gt;,&lt;br/&gt;  pattern: &lt;span&gt;&#x27;solid&#x27;&lt;/span&gt;,&lt;br/&gt;  fgColor: {argb: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;},&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以直接用 &lt;code&gt;row.fill&lt;/code&gt;为整行设置背景色，这样的话这一行没有内容的单元格也会有颜色，如图：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40950920245398775&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoHDq62h0icSVPu2NEBZZL8tgAORjtmMXd2uGefgyC36lialVIDbgf4aicw7yyVMTvD7JbDibLN5XAN2g/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1304&quot;/&gt;&lt;/figure&gt;&lt;p&gt;从 E 列开始其实就没有数据了，如果只想给非空单元格设置背景呢？&lt;/p&gt;&lt;p&gt;很遗憾 row 暴露的方法不支持直接这样设置，但可以曲线救国，遍历本行的所有非空单元格，再给每个单元格设置背景即可。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 通过 cell 设置背景色，更精准&lt;br/&gt;headerRow.eachCell((cell, colNum) =&amp;gt; {&lt;br/&gt;  cell.fill = {&lt;br/&gt;    &lt;span&gt;type&lt;/span&gt;: &lt;span&gt;&#x27;pattern&#x27;&lt;/span&gt;,&lt;br/&gt;    pattern: &lt;span&gt;&#x27;solid&#x27;&lt;/span&gt;,&lt;br/&gt;    fgColor: {argb: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;},&lt;br/&gt;  }&lt;br/&gt;})&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5980582524271845&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoHDq62h0icSVPu2NEBZZL8tQoUJ6QVasljkHQKYAKAI9ZSkBQ8k2I4ibEK7ID7sJxAMKnSxdPiaI3Hw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1030&quot;/&gt;&lt;/figure&gt;&lt;p&gt;使用单元格控制会更加的精准，可以看到空的单元格已经没有背景色了。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;修改字体样式&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;可以设置文字的字体、字号、颜色等属性，支持的属性如下表：&lt;/p&gt;&lt;section&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;字体属性&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;描述&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;示例值&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;name&lt;/td&gt;&lt;td&gt;字体名称。&lt;/td&gt;&lt;td&gt;&#x27;Arial&#x27;, &#x27;Calibri&#x27;, etc.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;family&lt;/td&gt;&lt;td&gt;备用字体家族。整数值。&lt;/td&gt;&lt;td&gt;1 - Serif, 2 - Sans Serif, 3 - Mono, Others - unknown&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;scheme&lt;/td&gt;&lt;td&gt;字体方案。&lt;/td&gt;&lt;td&gt;&#x27;minor&#x27;, &#x27;major&#x27;, &#x27;none&#x27;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;charset&lt;/td&gt;&lt;td&gt;字体字符集。整数值。&lt;/td&gt;&lt;td&gt;1, 2, etc.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;size&lt;/td&gt;&lt;td&gt;字体大小。整数值。&lt;/td&gt;&lt;td&gt;9, 10, 12, 16, etc.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;color&lt;/td&gt;&lt;td&gt;颜色描述，一个包含 ARGB 值的对象。&lt;/td&gt;&lt;td&gt;{ argb: &#x27;FFFF0000&#x27;}&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;bold&lt;/td&gt;&lt;td&gt;字体 &lt;strong&gt;粗细&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;true, false&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;italic&lt;/td&gt;&lt;td&gt;字体 &lt;em&gt;倾斜&lt;/em&gt;&lt;/td&gt;&lt;td&gt;true, false&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;underline&lt;/td&gt;&lt;td&gt;字体 下划线 样式&lt;/td&gt;&lt;td&gt;true, false, &#x27;none&#x27;, &#x27;single&#x27;, &#x27;double&#x27;, &#x27;singleAccounting&#x27;, &#x27;doubleAccounting&#x27;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;strike&lt;/td&gt;&lt;td&gt;字体 删除线&lt;/td&gt;&lt;td&gt;true, false&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;outline&lt;/td&gt;&lt;td&gt;字体轮廓&lt;/td&gt;&lt;td&gt;true, false&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;vertAlign&lt;/td&gt;&lt;td&gt;垂直对齐&lt;/td&gt;&lt;td&gt;&#x27;superscript&#x27;, &#x27;subscript&#x27;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p&gt;与设置背景色相同，可以通过 row 或 cell 来设置。示例将通过 cell 设置。&lt;/p&gt;&lt;p&gt;修改表头的字体为微软雅黑，字号12号，颜色为红色，加粗斜体。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 通过 cell 设置样式，更精准&lt;br/&gt;headerRow.eachCell((cell, colNum) =&amp;gt; {&lt;br/&gt;  // 设置背景色&lt;br/&gt;  cell.fill = {&lt;br/&gt;    &lt;span&gt;type&lt;/span&gt;: &lt;span&gt;&#x27;pattern&#x27;&lt;/span&gt;,&lt;br/&gt;    pattern: &lt;span&gt;&#x27;solid&#x27;&lt;/span&gt;,&lt;br/&gt;    fgColor: {argb: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;},&lt;br/&gt;  }&lt;br/&gt;  // 设置字体&lt;br/&gt;  cell.font = {&lt;br/&gt;    bold: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;    italic: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;    size: 12,&lt;br/&gt;    name: &lt;span&gt;&#x27;微软雅黑&#x27;&lt;/span&gt;,&lt;br/&gt;    color: {argb: &lt;span&gt;&#x27;ff0000&#x27;&lt;/span&gt;},&lt;br/&gt;  };&lt;br/&gt;})&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.3473389355742297&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoHDq62h0icSVPu2NEBZZL8tKYfhKTrucL0oEiaDzjThSgeFBouHpoHyCCozZTZWM0ltoLx0QVRVYww/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;714&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;设置对齐方式&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;有效的对齐属性：&lt;/p&gt;&lt;section&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;horizontal&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;vertical&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;wrapText&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;shrinkToFit&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;indent&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;readingOrder&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;textRotation&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;left&lt;/td&gt;&lt;td&gt;top&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;true&lt;/td&gt;&lt;td&gt;integer&lt;/td&gt;&lt;td&gt;rtl&lt;/td&gt;&lt;td&gt;0 to 90&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;center&lt;/td&gt;&lt;td&gt;middle&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;td&gt;false&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;ltr&lt;/td&gt;&lt;td&gt;-1 to -90&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;right&lt;/td&gt;&lt;td&gt;bottom&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;vertical&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;fill&lt;/td&gt;&lt;td&gt;distributed&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;justify&lt;/td&gt;&lt;td&gt;justify&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;centerContinuous&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;distributed&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p&gt;表格默认的对齐方式是靠下对齐，一般都会设置为垂直方向居中对齐，文本靠左对齐，数字靠右对齐。这里为了方便都设置为水平方向靠左对齐，垂直方向居中对齐。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 添加行&lt;br/&gt;&lt;span&gt;let&lt;/span&gt; rows = worksheet.addRows(list);&lt;br/&gt;rows?.forEach(row =&amp;gt; {&lt;br/&gt;  // 设置字体&lt;br/&gt;  row.font = {&lt;br/&gt;    size: 11,&lt;br/&gt;    name: &lt;span&gt;&#x27;微软雅黑&#x27;&lt;/span&gt;,&lt;br/&gt;  };&lt;br/&gt;  // 设置对齐方式&lt;br/&gt;  row.alignment = {vertical: &lt;span&gt;&#x27;middle&#x27;&lt;/span&gt;, horizontal: &lt;span&gt;&#x27;left&#x27;&lt;/span&gt;, wrapText: &lt;span&gt;false&lt;/span&gt;,};&lt;br/&gt;})&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;addRows()&lt;/code&gt;的返回值是被添加的行的数组，然后循环对每行设置字体和对齐方式，就完成了对整个 excel 的样式自定义。&lt;/p&gt;&lt;p&gt;当然也可以对每个 cell 进行设置，效果是一样的。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6702819956616052&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoHDq62h0icSVPu2NEBZZL8tcwMoDibAKQlF3XvyEGZraiaMXBFOVjR8rW6hliaKLC4hezREib5DcdyI6A/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;922&quot;/&gt;&lt;/figure&gt;&lt;p&gt;设置边框也是同样的方法，这里不做介绍啦。&lt;/p&gt;&lt;p&gt;完整的导出带样式的 excel 代码：&lt;/p&gt;&lt;pre&gt;&lt;code&gt; // 导出&lt;br/&gt;  &lt;span&gt;function&lt;/span&gt; &lt;span&gt;&lt;span&gt;onExportBasicExcelWithStyle&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    // 创建工作簿&lt;br/&gt;    const workbook = new ExcelJs.Workbook();&lt;br/&gt;    // 添加sheet&lt;br/&gt;    const worksheet = workbook.addWorksheet(&lt;span&gt;&#x27;demo sheet&#x27;&lt;/span&gt;);&lt;br/&gt;    // 设置 sheet 的默认行高&lt;br/&gt;    worksheet.properties.defaultRowHeight = 20;&lt;br/&gt;    // 设置列&lt;br/&gt;    worksheet.columns = generateHeaders(columns);&lt;br/&gt;    // 给表头添加背景色。因为表头是第一行，可以通过 getRow(1) 来获取表头这一行&lt;br/&gt;    &lt;span&gt;let&lt;/span&gt; headerRow = worksheet.getRow(1);&lt;br/&gt;    // 直接给这一行设置背景色&lt;br/&gt;    // headerRow.fill = {&lt;br/&gt;    //   &lt;span&gt;type&lt;/span&gt;: &lt;span&gt;&#x27;pattern&#x27;&lt;/span&gt;,&lt;br/&gt;    //   pattern: &lt;span&gt;&#x27;solid&#x27;&lt;/span&gt;,&lt;br/&gt;    //   fgColor: {argb: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;},&lt;br/&gt;    // }&lt;br/&gt;    // 通过 cell 设置样式，更精准&lt;br/&gt;    headerRow.eachCell((cell, colNum) =&amp;gt; {&lt;br/&gt;      // 设置背景色&lt;br/&gt;      cell.fill = {&lt;br/&gt;        &lt;span&gt;type&lt;/span&gt;: &lt;span&gt;&#x27;pattern&#x27;&lt;/span&gt;,&lt;br/&gt;        pattern: &lt;span&gt;&#x27;solid&#x27;&lt;/span&gt;,&lt;br/&gt;        fgColor: {argb: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;},&lt;br/&gt;      }&lt;br/&gt;      // 设置字体&lt;br/&gt;      cell.font = {&lt;br/&gt;        bold: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;        italic: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;        size: 12,&lt;br/&gt;        name: &lt;span&gt;&#x27;微软雅黑&#x27;&lt;/span&gt;,&lt;br/&gt;        color: {argb: &lt;span&gt;&#x27;ff0000&#x27;&lt;/span&gt;},&lt;br/&gt;      };&lt;br/&gt;      // 设置对齐方式&lt;br/&gt;      cell.alignment = {vertical: &lt;span&gt;&#x27;middle&#x27;&lt;/span&gt;, horizontal: &lt;span&gt;&#x27;left&#x27;&lt;/span&gt;, wrapText: &lt;span&gt;false&lt;/span&gt;,};&lt;br/&gt;    })&lt;br/&gt;    // 添加行&lt;br/&gt;    &lt;span&gt;let&lt;/span&gt; rows = worksheet.addRows(list);&lt;br/&gt;    // 设置每行的样式&lt;br/&gt;    rows?.forEach(row =&amp;gt; {&lt;br/&gt;      // 设置字体&lt;br/&gt;      row.font = {&lt;br/&gt;        size: 11,&lt;br/&gt;        name: &lt;span&gt;&#x27;微软雅黑&#x27;&lt;/span&gt;,&lt;br/&gt;      };&lt;br/&gt;      // 设置对齐方式&lt;br/&gt;      row.alignment = {vertical: &lt;span&gt;&#x27;middle&#x27;&lt;/span&gt;, horizontal: &lt;span&gt;&#x27;left&#x27;&lt;/span&gt;, wrapText: &lt;span&gt;false&lt;/span&gt;,};&lt;br/&gt;    })&lt;br/&gt;    // 导出excel&lt;br/&gt;    saveWorkbook(workbook, &lt;span&gt;&#x27;simple-demo.xlsx&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;五、行合并&amp;amp;列合并&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;先看在线表格的效果：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3688650306748466&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoHDq62h0icSVPu2NEBZZL8tsE8SIODhUUwE0iaPhiaoojeDf48QSZE4W7a9A2Rbhh80P9hTgjpBHe4Q/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1304&quot;/&gt;&lt;/figure&gt;&lt;p&gt;导出的 excel：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.16717791411042945&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoHDq62h0icSVPu2NEBZZL8tJcYJx5MByia3QAVGn7LcZn3z4NRR5OaFQL0WtO7SFibGvZqbN37CvLaQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1304&quot;/&gt;&lt;/figure&gt;&lt;p&gt;这个表格涉及到多级表头、行合并、列合并。&lt;/p&gt;&lt;p&gt;涉及到以下几个重难点：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Table 表头的解析。多级表头有 children，要解析 Table 的 columns 为想要的数据结构。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;列合并。一块内容占用了多个单元格，要进行一行中多个列的列合并，如成绩和老师评语列。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;行合并。表头其实是占了两行，除了成绩外，其他的列都应该把两行合并为一行。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;行和列同时合并。如果一个单元格合并过一次，就不能再合并，所以如果有行和列都需要合并的单元格，必须一次性同时进行行和列合并，不能拆开为两步。如老师评语列。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;表头和数据的样式调整。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;先贴出完整的代码&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import React, {useEffect, useState} from &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;&lt;br/&gt;import {Button, Card, Space, Table} from &lt;span&gt;&quot;antd&quot;&lt;/span&gt;;&lt;br/&gt;import {ColumnsType} from &lt;span&gt;&quot;antd/lib/table/interface&quot;&lt;/span&gt;;&lt;br/&gt;import {ITableHeader, StudentInfo} from &lt;span&gt;&quot;../types&quot;&lt;/span&gt;;&lt;br/&gt;import * as ExcelJs from &lt;span&gt;&quot;exceljs&quot;&lt;/span&gt;;&lt;br/&gt;import {&lt;br/&gt;  addHeaderStyle,&lt;br/&gt;  DEFAULT_COLUMN_WIDTH, DEFAULT_ROW_HEIGHT,&lt;br/&gt;  generateHeaders,&lt;br/&gt;  getColumnNumber,&lt;br/&gt;  mergeColumnCell,&lt;br/&gt;  mergeRowCell,&lt;br/&gt;  saveWorkbook&lt;br/&gt;} from &lt;span&gt;&quot;../utils&quot;&lt;/span&gt;;&lt;br/&gt;import {Worksheet} from &lt;span&gt;&quot;exceljs&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;interface MultiHeaderProps {&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;const columns: ColumnsType&amp;lt;any&amp;gt; = [&lt;br/&gt;  {&lt;br/&gt;    width: 50,&lt;br/&gt;    dataIndex: &lt;span&gt;&#x27;id&#x27;&lt;/span&gt;,&lt;br/&gt;    key: &lt;span&gt;&#x27;id&#x27;&lt;/span&gt;,&lt;br/&gt;    title: &lt;span&gt;&#x27;ID&#x27;&lt;/span&gt;,&lt;br/&gt;  },&lt;br/&gt;  {&lt;br/&gt;    width: 100,&lt;br/&gt;    dataIndex: &lt;span&gt;&#x27;name&#x27;&lt;/span&gt;,&lt;br/&gt;    key: &lt;span&gt;&#x27;name&#x27;&lt;/span&gt;,&lt;br/&gt;    title: &lt;span&gt;&#x27;姓名&#x27;&lt;/span&gt;,&lt;br/&gt;  },&lt;br/&gt;  {&lt;br/&gt;    width: 50,&lt;br/&gt;    dataIndex: &lt;span&gt;&#x27;age&#x27;&lt;/span&gt;,&lt;br/&gt;    key: &lt;span&gt;&#x27;age&#x27;&lt;/span&gt;,&lt;br/&gt;    title: &lt;span&gt;&#x27;年龄&#x27;&lt;/span&gt;,&lt;br/&gt;  },&lt;br/&gt;  {&lt;br/&gt;    width: 80,&lt;br/&gt;    dataIndex: &lt;span&gt;&#x27;gender&#x27;&lt;/span&gt;,&lt;br/&gt;    key: &lt;span&gt;&#x27;gender&#x27;&lt;/span&gt;,&lt;br/&gt;    title: &lt;span&gt;&#x27;性别&#x27;&lt;/span&gt;,&lt;br/&gt;  },&lt;br/&gt;  {&lt;br/&gt;    dataIndex: &lt;span&gt;&#x27;score&#x27;&lt;/span&gt;,&lt;br/&gt;    key: &lt;span&gt;&#x27;score&#x27;&lt;/span&gt;,&lt;br/&gt;    title: &lt;span&gt;&#x27;成绩&#x27;&lt;/span&gt;,&lt;br/&gt;    children: [&lt;br/&gt;      {&lt;br/&gt;        width: 80,&lt;br/&gt;        dataIndex: &lt;span&gt;&#x27;english&#x27;&lt;/span&gt;,&lt;br/&gt;        key: &lt;span&gt;&#x27;english&#x27;&lt;/span&gt;,&lt;br/&gt;        title: &lt;span&gt;&#x27;英语&#x27;&lt;/span&gt;,&lt;br/&gt;      },&lt;br/&gt;      {&lt;br/&gt;        width: 80,&lt;br/&gt;        dataIndex: &lt;span&gt;&#x27;math&#x27;&lt;/span&gt;,&lt;br/&gt;        key: &lt;span&gt;&#x27;math&#x27;&lt;/span&gt;,&lt;br/&gt;        title: &lt;span&gt;&#x27;数学&#x27;&lt;/span&gt;,&lt;br/&gt;      },&lt;br/&gt;      {&lt;br/&gt;        width: 80,&lt;br/&gt;        dataIndex: &lt;span&gt;&#x27;physics&#x27;&lt;/span&gt;,&lt;br/&gt;        key: &lt;span&gt;&#x27;physics&#x27;&lt;/span&gt;,&lt;br/&gt;        title: &lt;span&gt;&#x27;物理&#x27;&lt;/span&gt;,&lt;br/&gt;      },&lt;br/&gt;    ]&lt;br/&gt;  },&lt;br/&gt;  {&lt;br/&gt;    width: 250,&lt;br/&gt;    dataIndex: &lt;span&gt;&#x27;comment&#x27;&lt;/span&gt;,&lt;br/&gt;    key: &lt;span&gt;&#x27;comment&#x27;&lt;/span&gt;,&lt;br/&gt;    title: &lt;span&gt;&#x27;老师评语&#x27;&lt;/span&gt;,&lt;br/&gt;  },&lt;br/&gt;];&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;const MultiHeader: React.FC&amp;lt;MultiHeaderProps&amp;gt; = () =&amp;gt; {&lt;br/&gt;&lt;br/&gt;  const [list, setList] = useState&amp;lt;StudentInfo[]&amp;gt;([]);&lt;br/&gt;&lt;br/&gt;  useEffect(() =&amp;gt; {&lt;br/&gt;    generateData();&lt;br/&gt;  }, [])&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;function&lt;/span&gt; &lt;span&gt;&lt;span&gt;generateData&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;let&lt;/span&gt; arr: StudentInfo[] = [];&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;let&lt;/span&gt; i = 0; i &amp;lt; 5; i++) {&lt;br/&gt;      arr.push({&lt;br/&gt;        id: i,&lt;br/&gt;        name: `小明&lt;span&gt;${i}&lt;/span&gt;号`,&lt;br/&gt;        age: 8+i,&lt;br/&gt;        gender: i % 2 === 0 ? &lt;span&gt;&#x27;男&#x27;&lt;/span&gt; : &lt;span&gt;&#x27;女&#x27;&lt;/span&gt;,&lt;br/&gt;        english: 80 + i,&lt;br/&gt;        math: 60 + i,&lt;br/&gt;        physics: 70 + i,&lt;br/&gt;        comment: `小明&lt;span&gt;${i}&lt;/span&gt;号同学表现非常好，热心助人，成绩优秀，是社会主义接班人`&lt;br/&gt;      })&lt;br/&gt;    }&lt;br/&gt;    setList(arr);&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;function&lt;/span&gt; &lt;span&gt;&lt;span&gt;onExportMultiHeaderExcel&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    // 创建工作簿&lt;br/&gt;    const workbook = new ExcelJs.Workbook();&lt;br/&gt;    // 添加sheet&lt;br/&gt;    const worksheet = workbook.addWorksheet(&lt;span&gt;&#x27;demo sheet&#x27;&lt;/span&gt;);&lt;br/&gt;    // 设置 sheet 的默认行高&lt;br/&gt;    worksheet.properties.defaultRowHeight = 20;&lt;br/&gt;    // 解析 AntD Table 的 columns&lt;br/&gt;    const headers = generateHeaders(columns);&lt;br/&gt;    console.log({headers})&lt;br/&gt;    // 第一行表头&lt;br/&gt;    const names1: string[] = [];&lt;br/&gt;    // 第二行表头&lt;br/&gt;    const names2: string[] = [];&lt;br/&gt;    // 用于匹配数据的 keys&lt;br/&gt;    const headerKeys: string[] = [];&lt;br/&gt;    headers.forEach(item =&amp;gt; {&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (item.children) {&lt;br/&gt;        // 有 children 说明是多级表头，header name 需要两行&lt;br/&gt;        item.children.forEach(child =&amp;gt; {&lt;br/&gt;          names1.push(item.header);&lt;br/&gt;          names2.push(child.header);&lt;br/&gt;          headerKeys.push(child.key);&lt;br/&gt;        });&lt;br/&gt;      } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        const columnNumber = getColumnNumber(item.width);&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;let&lt;/span&gt; i = 0; i &amp;lt; columnNumber; i++) {&lt;br/&gt;          names1.push(item.header);&lt;br/&gt;          names2.push(item.header);&lt;br/&gt;          headerKeys.push(item.key);&lt;br/&gt;        }&lt;br/&gt;      }&lt;br/&gt;    });&lt;br/&gt;    handleHeader(worksheet, headers, names1, names2);&lt;br/&gt;    // 添加数据&lt;br/&gt;    addData2Table(worksheet, headerKeys, headers);&lt;br/&gt;    // 给每列设置固定宽度&lt;br/&gt;    worksheet.columns = worksheet.columns.map(col =&amp;gt; ({ ...col, width: DEFAULT_COLUMN_WIDTH }));&lt;br/&gt;    // 导出excel&lt;br/&gt;    saveWorkbook(workbook, &lt;span&gt;&#x27;simple-demo.xlsx&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;function&lt;/span&gt; handleHeader(&lt;br/&gt;    worksheet: Worksheet,&lt;br/&gt;    headers: ITableHeader[],&lt;br/&gt;    names1: string[],&lt;br/&gt;    names2: string[],&lt;br/&gt;  ) {&lt;br/&gt;    // 判断是否有 children, 有的话是两行表头&lt;br/&gt;    const isMultiHeader = headers?.some(item =&amp;gt; item.children);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (isMultiHeader) {&lt;br/&gt;      // 加表头数据&lt;br/&gt;      const rowHeader1 = worksheet.addRow(names1);&lt;br/&gt;      const rowHeader2 = worksheet.addRow(names2);&lt;br/&gt;      // 添加表头样式&lt;br/&gt;      addHeaderStyle(rowHeader1, {color: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;});&lt;br/&gt;      addHeaderStyle(rowHeader2, {color: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;});&lt;br/&gt;      mergeColumnCell(headers, rowHeader1, rowHeader2, names1, names2, worksheet);&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;    // 加表头数据&lt;br/&gt;    const rowHeader = worksheet.addRow(names1);&lt;br/&gt;    // 表头根据内容宽度合并单元格&lt;br/&gt;    mergeRowCell(headers, rowHeader, worksheet);&lt;br/&gt;    // 添加表头样式&lt;br/&gt;    addHeaderStyle(rowHeader, {color: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;});&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;function&lt;/span&gt; addData2Table(worksheet: Worksheet, headerKeys: string[], headers: ITableHeader[]) {&lt;br/&gt;    list?.forEach((item: any) =&amp;gt; {&lt;br/&gt;      const rowData = headerKeys?.map(key =&amp;gt; item[key]);&lt;br/&gt;      const row = worksheet.addRow(rowData);&lt;br/&gt;      mergeRowCell(headers, row, worksheet);&lt;br/&gt;      row.height = DEFAULT_ROW_HEIGHT;&lt;br/&gt;      // 设置行样式, wrapText: 自动换行&lt;br/&gt;      row.alignment = { vertical: &lt;span&gt;&#x27;middle&#x27;&lt;/span&gt;, wrapText: &lt;span&gt;false&lt;/span&gt;, shrinkToFit: &lt;span&gt;false&lt;/span&gt; };&lt;br/&gt;      row.font = { size: 11, name: &lt;span&gt;&#x27;微软雅黑&#x27;&lt;/span&gt; };&lt;br/&gt;    })&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; (&lt;br/&gt;    &amp;lt;Card&amp;gt;&lt;br/&gt;      &amp;lt;h3&amp;gt;多表头表格&amp;lt;/h3&amp;gt;&lt;br/&gt;      &amp;lt;Space style={{marginBottom: 10}}&amp;gt;&lt;br/&gt;        &amp;lt;Button &lt;span&gt;type&lt;/span&gt;={&lt;span&gt;&#x27;primary&#x27;&lt;/span&gt;} onClick={onExportMultiHeaderExcel}&amp;gt;导出excel&amp;lt;/Button&amp;gt;&lt;br/&gt;      &amp;lt;/Space&amp;gt;&lt;br/&gt;      &amp;lt;Table&lt;br/&gt;        key={&lt;span&gt;&#x27;id&#x27;&lt;/span&gt;}&lt;br/&gt;        columns={columns}&lt;br/&gt;        dataSource={list}&lt;br/&gt;      /&amp;gt;&lt;br/&gt;    &amp;lt;/Card&amp;gt;&lt;br/&gt;  );&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default MultiHeader&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;前面几步创建 workbook 和 worksheet 都是一样的，从解析表头 &lt;code&gt;generateHeaders()&lt;/code&gt; 开始逻辑会有所不同。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;表头解析&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;我们修改上一节的&lt;code&gt;generateHeaders()&lt;/code&gt;方法，添加有 children 时的逻辑。多级表头时我们也构造出 children。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 根据 antd 的 column 生成 exceljs 的 column&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; generateHeaders(columns: any[]) {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; columns?.map(col =&amp;gt; {&lt;br/&gt;    const obj: ITableHeader = {&lt;br/&gt;      // 显示的 name&lt;br/&gt;      header: col.title,&lt;br/&gt;      // 用于数据匹配的 key&lt;br/&gt;      key: col.dataIndex,&lt;br/&gt;      // 列宽&lt;br/&gt;      width: col.width / 5 || DEFAULT_COLUMN_WIDTH,&lt;br/&gt;    };&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (col.children) {&lt;br/&gt;      obj.children = col.children?.map((item: any) =&amp;gt; ({&lt;br/&gt;        key: item.dataIndex,&lt;br/&gt;        header: item.title,&lt;br/&gt;        width: item.width,&lt;br/&gt;        parentKey: col.dataIndex,&lt;br/&gt;      }));&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; obj;&lt;br/&gt;  })&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;构造出来的数据结构如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.6565464895635673&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz/H8M5QJDxMHoHDq62h0icSVPu2NEBZZL8tTHITuZEBNJlru09ibUHH4IwLHib13icsUibCnLaaJC4VqMpDcc7QnkLOmA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;527&quot;/&gt;&lt;/figure&gt;&lt;p&gt;上一节简单表格中我们用 &lt;code&gt;worksheet.columns = generateHeaders(columns)&lt;/code&gt;设置每一个表头列所要显示的信息和应该匹配的 key，但是它无法设置多级表头，所以需要换一种思路，摒弃列（表头）的概念，把表头也当成一行数据来自己写入。下面的每行数据，也都自己通过计算匹配出应该在什么位置显示什么内容。&lt;/p&gt;&lt;p&gt;先来看这段代码：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 解析 AntD Table 的 columns&lt;br/&gt;const headers = generateHeaders(columns);&lt;br/&gt;// 第一行表头&lt;br/&gt;const names1: string[] = [];&lt;br/&gt;// 第二行表头&lt;br/&gt;const names2: string[] = [];&lt;br/&gt;// 用于匹配数据的 keys&lt;br/&gt;const headerKeys: string[] = [];&lt;br/&gt;headers.forEach(item =&amp;gt; {&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (item.children) {&lt;br/&gt;    // 有 children 说明是多级表头，header name 需要两行&lt;br/&gt;    item.children.forEach(child =&amp;gt; {&lt;br/&gt;      names1.push(item.header);&lt;br/&gt;      names2.push(child.header);&lt;br/&gt;      headerKeys.push(child.key);&lt;br/&gt;    });&lt;br/&gt;  } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;    const columnNumber = getColumnNumber(item.width);&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;let&lt;/span&gt; i = 0; i &amp;lt; columnNumber; i++) {&lt;br/&gt;      names1.push(item.header);&lt;br/&gt;      names2.push(item.header);&lt;br/&gt;      headerKeys.push(item.key);&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;});&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个例子有两级表头，所以需要两行来设置每一级表头，分别命名为 &lt;code&gt;names1&lt;/code&gt;和 &lt;code&gt;names2&lt;/code&gt;，它们里面存的是展示出来的 name，如：ID、姓名、年龄等。还需要一个&lt;code&gt;headerKeys&lt;/code&gt;用来存储每一列需要匹配的 key，如：id、name、age 等 json 的 key。&lt;/p&gt;&lt;p&gt;注意一点，&lt;code&gt;headerKeys&lt;/code&gt;是以第二行表头为准，因为第二行才是真正显示的内容。&lt;/p&gt;&lt;p&gt;构造出了 &lt;code&gt;names1&lt;/code&gt;、&lt;code&gt;names2&lt;/code&gt;和&lt;code&gt;headerKeys&lt;/code&gt;，就可以开始生成真正的表头了：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  &lt;span&gt;function&lt;/span&gt; handleHeader(&lt;br/&gt;    worksheet: Worksheet,&lt;br/&gt;    headers: ITableHeader[],&lt;br/&gt;    names1: string[],&lt;br/&gt;    names2: string[],&lt;br/&gt;  ) {&lt;br/&gt;    // 判断是否有 children, 有的话是两行表头&lt;br/&gt;    const isMultiHeader = headers?.some(item =&amp;gt; item.children);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (isMultiHeader) {&lt;br/&gt;      // 加表头数据&lt;br/&gt;      const rowHeader1 = worksheet.addRow(names1);&lt;br/&gt;      const rowHeader2 = worksheet.addRow(names2);&lt;br/&gt;      // 添加表头样式&lt;br/&gt;      addHeaderStyle(rowHeader1, {color: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;});&lt;br/&gt;      addHeaderStyle(rowHeader2, {color: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;});&lt;br/&gt;      mergeColumnCell(headers, rowHeader1, rowHeader2, names1, names2, worksheet);&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;    // 加表头数据&lt;br/&gt;    const rowHeader = worksheet.addRow(names1);&lt;br/&gt;    // 表头根据内容宽度合并单元格&lt;br/&gt;    mergeRowCell(headers, rowHeader, worksheet);&lt;br/&gt;    // 添加表头样式&lt;br/&gt;    addHeaderStyle(rowHeader, {color: &lt;span&gt;&#x27;dff8ff&#x27;&lt;/span&gt;});&lt;br/&gt;  }&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;先判断有没有多级表头，单行表头和多行表头执行的逻辑不同。&lt;/p&gt;&lt;p&gt;通过 &lt;code&gt;worksheet.addRow()&lt;/code&gt;将表头添加为一行数据，多行表头就添加两次。然后通过 &lt;code&gt;addHeaderStyle()&lt;/code&gt;给表头添加样式，这是自己封装的方法，在 &lt;code&gt;utils&lt;/code&gt;里。最后也是最重要的是合并单元格，&lt;/p&gt;&lt;h3&gt;&lt;span&gt;合并同一行多列&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;合并单元格的方法是 &lt;code&gt;worksheet.mergeCells()&lt;/code&gt;，可以有很多种合并方式：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 合并一系列单元格&lt;br/&gt;worksheet.mergeCells(&lt;span&gt;&#x27;A4:B5&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;// ...合并的单元格被链接起来了&lt;br/&gt;worksheet.getCell(&lt;span&gt;&#x27;B5&#x27;&lt;/span&gt;).value = &lt;span&gt;&#x27;Hello, World!&#x27;&lt;/span&gt;;&lt;br/&gt;expect(worksheet.getCell(&lt;span&gt;&#x27;B5&#x27;&lt;/span&gt;).value).toBe(worksheet.getCell(&lt;span&gt;&#x27;A4&#x27;&lt;/span&gt;).value);&lt;br/&gt;expect(worksheet.getCell(&lt;span&gt;&#x27;B5&#x27;&lt;/span&gt;).master).toBe(worksheet.getCell(&lt;span&gt;&#x27;A4&#x27;&lt;/span&gt;));&lt;br/&gt;&lt;br/&gt;// ...合并的单元格共享相同的样式对象&lt;br/&gt;expect(worksheet.getCell(&lt;span&gt;&#x27;B5&#x27;&lt;/span&gt;).style).toBe(worksheet.getCell(&lt;span&gt;&#x27;A4&#x27;&lt;/span&gt;).style);&lt;br/&gt;worksheet.getCell(&lt;span&gt;&#x27;B5&#x27;&lt;/span&gt;).style.font = myFonts.arial;&lt;br/&gt;expect(worksheet.getCell(&lt;span&gt;&#x27;A4&#x27;&lt;/span&gt;).style.font).toBe(myFonts.arial);&lt;br/&gt;&lt;br/&gt;// 取消单元格合并将打破链接的样式&lt;br/&gt;worksheet.unMergeCells(&lt;span&gt;&#x27;A4&#x27;&lt;/span&gt;);&lt;br/&gt;expect(worksheet.getCell(&lt;span&gt;&#x27;B5&#x27;&lt;/span&gt;).style).not.toBe(worksheet.getCell(&lt;span&gt;&#x27;A4&#x27;&lt;/span&gt;).style);&lt;br/&gt;expect(worksheet.getCell(&lt;span&gt;&#x27;B5&#x27;&lt;/span&gt;).style.font).not.toBe(myFonts.arial);&lt;br/&gt;&lt;br/&gt;// 按左上，右下合并&lt;br/&gt;worksheet.mergeCells(&lt;span&gt;&#x27;K10&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;M12&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;// 按开始行，开始列，结束行，结束列合并（相当于 K10:M12）&lt;br/&gt;worksheet.mergeCells(10,11,12,13);&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;先看合并同一行多列的算法，核心在于先设置一个索引，从1开始，代表第一列。然后循环 &lt;code&gt;headers&lt;/code&gt;，如果当前 header 有 children，则每个子级占一列，然后索引值加1。如果没有 children，计算这一个数据的宽度将会占用几个单元格，也就是几列，这个列数就是需要合并的列数，合并完之后索引值加1。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 行合并单元格&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; mergeRowCell(headers: ITableHeader[], row: Row, worksheet: Worksheet) {&lt;br/&gt;  // 当前列的索引&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; colIndex = 1;&lt;br/&gt;  headers.forEach(header =&amp;gt; {&lt;br/&gt;    const { width, children } = header;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (children) {&lt;br/&gt;      children.forEach(child =&amp;gt; {&lt;br/&gt;        colIndex += 1;&lt;br/&gt;      });&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;      // 需要的列数，四舍五入&lt;br/&gt;      const colNum = getColumnNumber(width);&lt;br/&gt;      // 如果 colNum &amp;gt; 1 说明需要合并&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (colNum &amp;gt; 1) {&lt;br/&gt;        worksheet.mergeCells(Number(row.number), colIndex, Number(row.number), colIndex + colNum - 1);&lt;br/&gt;      }&lt;br/&gt;      colIndex += colNum;&lt;br/&gt;    }&lt;br/&gt;  });&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; getColumnNumber(width: number) {&lt;br/&gt;  // 需要的列数，四舍五入&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; Math.round(width / DEFAULT_COLUMN_WIDTH);&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;合并单元格的方法是：&lt;/p&gt;&lt;p&gt;&lt;code&gt;worksheet.mergeCells(Number(row.number), colIndex, Number(row.number), colIndex + colNum \- 1);&lt;/code&gt;&lt;/p&gt;&lt;p&gt;四个参数分别是合并的开始行、开始列、结束行、结束列。&lt;/p&gt;&lt;p&gt;通过 &lt;code&gt;row.number&lt;/code&gt;得到当前行的行数，因为是同一行的多列合并，所以开始结束行一致，开始列是索引值 &lt;code&gt;colIndex&lt;/code&gt;，结束列是 &lt;code&gt;colIndex + colNum \- 1&lt;/code&gt;。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;同时合并行和列&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;如果是多级表头，需要同时处理行和列合并，用到了封装的 &lt;code&gt;mergeColumnCell&lt;/code&gt;方法。&lt;/p&gt;&lt;p&gt;基本思路是先判断合并的类型，一共有三种情况：&lt;/p&gt;&lt;p&gt;然后计算出起始的行和列，以及结束的行和列。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;// 合并行和列，用于处理表头合并&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; mergeColumnCell(&lt;br/&gt;  headers: ITableHeader[],&lt;br/&gt;  rowHeader1: Row,&lt;br/&gt;  rowHeader2: Row,&lt;br/&gt;  nameRow1: string[],&lt;br/&gt;  nameRow2: string[],&lt;br/&gt;  worksheet: Worksheet,&lt;br/&gt;) {&lt;br/&gt;  // 当前 index 的指针&lt;br/&gt;  &lt;span&gt;let&lt;/span&gt; pointer = -1;&lt;br/&gt;  nameRow1.forEach((name, index) =&amp;gt; {&lt;br/&gt;    // 当 index 小于指针时，说明这一列已经被合并过了，不能再合并&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (index &amp;lt;= pointer) &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;    // 是否应该列合并&lt;br/&gt;    const shouldVerticalMerge = name === nameRow2[index];&lt;br/&gt;    // 是否应该行合并&lt;br/&gt;    const shouldHorizontalMerge = index !== nameRow1.lastIndexOf(name);&lt;br/&gt;    pointer = nameRow1.lastIndexOf(name);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (shouldVerticalMerge &amp;amp;&amp;amp; shouldHorizontalMerge) {&lt;br/&gt;      // 两个方向都合并&lt;br/&gt;      worksheet.mergeCells(&lt;br/&gt;        Number(rowHeader1.number),&lt;br/&gt;        index + 1,&lt;br/&gt;        Number(rowHeader2.number),&lt;br/&gt;        nameRow1.lastIndexOf(name) + 1,&lt;br/&gt;      );&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (shouldVerticalMerge &amp;amp;&amp;amp; !shouldHorizontalMerge) {&lt;br/&gt;      // 只在垂直方向上同一列的两行合并&lt;br/&gt;      worksheet.mergeCells(Number(rowHeader1.number), index + 1, Number(rowHeader2.number), index + 1);&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (!shouldVerticalMerge &amp;amp;&amp;amp; shouldHorizontalMerge) {&lt;br/&gt;      // 只有水平方向同一行的多列合并&lt;br/&gt;      worksheet.mergeCells(&lt;br/&gt;        Number(rowHeader1.number),&lt;br/&gt;        index + 1,&lt;br/&gt;        Number(rowHeader1.number),&lt;br/&gt;        nameRow1.lastIndexOf(name) + 1,&lt;br/&gt;      );&lt;br/&gt;      // eslint-disable-next-line no-param-reassign&lt;br/&gt;      const cell = rowHeader1.getCell(index + 1);&lt;br/&gt;      cell.alignment = { vertical: &lt;span&gt;&#x27;middle&#x27;&lt;/span&gt;, horizontal: &lt;span&gt;&#x27;center&#x27;&lt;/span&gt; };&lt;br/&gt;    }&lt;br/&gt;  });&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;添加数据行&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;在计算表头时，已经得到了每列的 key 值列表 &lt;code&gt;headerKeys&lt;/code&gt;，通过&lt;code&gt;headerKeys&lt;/code&gt;可以取出每一列对应的具体数据。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;function&lt;/span&gt; addData2Table(worksheet: Worksheet, headerKeys: string[], headers: ITableHeader[]) {&lt;br/&gt;  list?.forEach((item: any) =&amp;gt; {&lt;br/&gt;    const rowData = headerKeys?.map(key =&amp;gt; item[key]);&lt;br/&gt;    const row = worksheet.addRow(rowData);&lt;br/&gt;    mergeRowCell(headers, row, worksheet);&lt;br/&gt;    row.height = DEFAULT_ROW_HEIGHT;&lt;br/&gt;    // 设置行样式, wrapText: 自动换行&lt;br/&gt;    row.alignment = { vertical: &lt;span&gt;&#x27;middle&#x27;&lt;/span&gt;, wrapText: &lt;span&gt;false&lt;/span&gt;, shrinkToFit: &lt;span&gt;false&lt;/span&gt; };&lt;br/&gt;    row.font = { size: 11, name: &lt;span&gt;&#x27;微软雅黑&#x27;&lt;/span&gt; };&lt;br/&gt;  })&lt;br/&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;先循环数据列表，然后循环 &lt;code&gt;headerKeys&lt;/code&gt;取出对应的值，再通过 &lt;code&gt;worksheet.addRow&lt;/code&gt;将这一行数据添加进表格中。由于可能出现一个字段占用多列的情况，所以还需要进行合并单元格操作，可以复用 &lt;code&gt;mergeRowCell()&lt;/code&gt;方法。最后设置每行的样式，即可得到最终的数据。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;一个 sheet 中放多张表&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;在导出多级表头表格的时候，我们写表头和数据行都是用的&lt;code&gt;worksheet.addRow&lt;/code&gt;方法，而没有用 &lt;code&gt;worksheet.column&lt;/code&gt;设置表格的表头，这样更加灵活，每一列想显示什么内容完全自己控制。&lt;/p&gt;&lt;p&gt;处理多个表格时，也可以用同样的方法。因为每一行数据都是自己写入的，所以不管有几张表都没有关系，我们关心的只有每一行的数据。&lt;/p&gt;&lt;p&gt;同时我们做了行和列合并算法，可以实现每一张表的每一列都能定制宽度。&lt;/p&gt;&lt;p&gt;可以将上面两个例子结合起来，导出到一个 &lt;code&gt;sheet&lt;/code&gt;里，就实现了一个&lt;code&gt;sheet&lt;/code&gt;中放多张表的需求。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;结语&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;除了导出 &lt;code&gt;xlsx&lt;/code&gt;，&lt;span&gt;ExcelJS&lt;/span&gt;&lt;span&gt;[12]&lt;/span&gt; 还支持导出 &lt;code&gt;csv&lt;/code&gt;格式。此外还有设置页眉页脚、操作视图、添加公式、使用富文本等功能，非常的强大。&lt;/p&gt;&lt;p&gt;官方的文档也很详细，不懂的地方直接看文档即可。&lt;/p&gt;&lt;p&gt;源码地址：&lt;span&gt;github.com/cachecats/excel-export-demo&lt;/span&gt;&lt;span&gt;[13]&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关于本文&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 data-v-b84d6262=&quot;&quot;&gt;&lt;span&gt;作者：solocoder&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;https://juejin.cn/post/7071882317953761316&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-darkmode-color-16057140139831=&quot;rgb(162, 162, 162)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(68, 68, 68)&quot; data-style=&quot;padding-top: 7px; padding-bottom: 7px; color: rgb(68, 68, 68); font-size: 14px; line-height: 1.8; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Lucida Grande&amp;quot;, Arial, &amp;quot;Hiragino Sans GB&amp;quot;, 微软雅黑, &amp;quot;WenQuanYi Micro Hei&amp;quot;, STHeiti, SimSun, sans-serif; text-align: center;&quot;&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(63, 63, 63)&quot; data-style=&quot;color: rgb(63, 63, 63); font-family: monospace; font-size: 20px; letter-spacing: 0.544px; white-space: pre-wrap; widows: 1; caret-color: rgb(51, 51, 51);&quot;&gt;The End&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;如果你觉得这篇内容对你挺有启发，我想请你帮我三个小忙：&lt;/span&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-darkmode-color-16057140139831=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(0,0,0)&quot; data-style=&quot;padding-right: 10px; padding-left: 10px; font-size: 16px; color: black; line-height: 1.6; letter-spacing: 0px; word-break: break-word; text-align: left; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;&quot;&gt;&lt;section&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;1、点个 &lt;span data-darkmode-color-16057140139831=&quot;rgb(71, 193, 168)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(71, 193, 168)&quot;&gt;「在看」&lt;/span&gt;，让更多的人也能看到这篇内容&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;2、关注官网 &lt;span data-darkmode-color-16057140139831=&quot;rgb(71, 193, 168)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(71, 193, 168)&quot;&gt;https://muyiy.cn&lt;/span&gt;，让我们成为长期关系&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;3、关注公众号「高级前端进阶」，公众号后台回复 &lt;span data-darkmode-color-16057140139831=&quot;rgb(71, 193, 168)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(71, 193, 168)&quot;&gt;「加群」&lt;/span&gt; ，加入我们一起学习并送你精心整理的高级前端面试题。&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA4Nzg0MDM5Nw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/sz_mmbiz_png/H8M5QJDxMHpg1ClH18gOQIicISIoSybyDNK203zFMpSM7jHdovb4elgdqNoy6Bylk7XicC6Rpj5QrCv3FkOpR6tw/0?wx_fmt=png&quot; data-nickname=&quot;高级前端进阶&quot; data-alias=&quot;FrontendGaoji&quot; data-signature=&quot;网易 &amp;amp; 蚂蚁前端，专注前端进阶领域，已帮助无数前端跳槽涨薪。每日一题「Daily-Interview-Question」 Github 收获近 25000 颗小星星，各公司面试官都在使用。接下来带你走进高级前端的世界，在进阶的路上，共勉！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-style=&quot;padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: rgb(89, 89, 89);&quot;&gt;&lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wx27c980b913cbfb08&quot; data-miniprogram-path=&quot;pages/index/index?_um_campaign=5ec14536978eea0825f4eb6f&amp;amp;_um_channel=5ec14536978eea0825f4eb70&quot; data-miniprogram-nickname=&quot;高级前端面试&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-servicetype=&quot;0&quot; data-darkmode-bgcolor-15950741730771=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15950741730771=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15950741730771=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15950741730771=&quot;rgb(0,0,0)&quot; data-darkmode-color-15963792901125=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15963792901125=&quot;rgb(0,0,0)&quot; data-darkmode-bgcolor-16018219266315=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16018219266315=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16018219266315=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16018219266315=&quot;rgb(58, 58, 58)&quot; data-darkmode-bgcolor-16020008769986=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16020008769986=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16020008769986=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16020008769986=&quot;rgb(58, 58, 58)&quot; data-darkmode-color-16021670869911=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(58, 58, 58)&quot; data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-16030305897056=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030305897056=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030305897056=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(58, 58, 58)&quot; data-darkmode-color-16057140139831=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(58, 58, 58)&quot; wah-hotarea=&quot;click&quot; href=&quot;&quot;&gt; 》》面试官都在用的题库，快来看看《&lt;/a&gt;《&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-style=&quot;padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: rgb(89, 89, 89);&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-darkmode-color-16030305897056=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(63, 63, 63)&quot; data-style=&quot;color: rgb(63, 63, 63); font-size: 16px; font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;&quot; data-darkmode-color-16057140139831=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(63, 63, 63)&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-darkmode-color-16030305897056=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(89, 89, 89)&quot; data-style=&quot;padding-right: 10px; padding-left: 10px; line-height: 1.6; word-break: break-word; text-align: left; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif; font-size: 15px; letter-spacing: 0.05em; color: rgb(89, 89, 89);&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-darkmode-color-16030305897056=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;&lt;pre data-darkmode-bgcolor-15987645674728=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15987645674728=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15987645674728=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15987645674728=&quot;rgb(0, 0, 0)&quot; data-style=&quot;color: rgb(0, 0, 0); text-align: left; letter-spacing: 0.544px; word-spacing: 2px; font-size: 20px; font-weight: 700; background-color: rgb(255, 255, 255);&quot; data-original-code=&quot;&amp;lt;br&amp;gt;扩展阅读1、一篇文章上手Vue3中新增的API&amp;lt;br&amp;gt;2、Vue源码解析——异步组件是如何使用的&amp;lt;br&amp;gt;3、写好JavaScript条件语句的5条守则&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;The End如果你觉得这篇内容对你挺有启发，我想请你帮我三个小忙：点个「在看」，让更多的人也能看到这篇内容&amp;lt;br&amp;gt;关注官网 https://muyiy.cn，让我们成为长期关系&amp;lt;br&amp;gt;关注公众号「高级前端进阶」，公众号后台回复「加群」 加入我们一起学习并送你精心整理的高级前端面试题。&amp;lt;br&amp;gt;》》面试官都在用的题库，快来看看《《                        高级前端进阶 发起了一个读者讨论         写留言                                        &amp;lt;br&amp;gt;“在看”吗？在看就点一下吧&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&quot; data-snippet-id=&quot;ext.dfdc660f8db84bdd3e9d3d519ceaec46&quot; data-snippet-saved=&quot;false&quot; data-codota-status=&quot;done&quot; data-darkmode-color-16030305897056=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;&lt;section data-darkmode-bgcolor-15987645674728=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15987645674728=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15987645674728=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15987645674728=&quot;rgb(62, 62, 62)&quot; data-style=&quot;letter-spacing: 0px; white-space: normal; font-size: 16px; color: rgb(62, 62, 62); font-family: &#x27;Helvetica Neue&#x27;, Helvetica, &#x27;Hiragino Sans GB&#x27;, &#x27;Microsoft YaHei&#x27;, Arial, sans-serif; widows: 1; line-height: 1.6;&quot; data-darkmode-color-16030305897056=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-darkmode-bgcolor-15987645674728=&quot;rgba(112, 0, 0, 0.018750000000000003)&quot; data-darkmode-original-bgcolor-15987645674728=&quot;rgba(20, 0, 0, 0.018750000000000003)&quot; data-darkmode-color-15987645674728=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-15987645674728=&quot;rgb(89, 89, 89)&quot; data-style=&quot;padding: 10px; word-break: break-word; line-height: 1.75; color: rgb(89, 89, 89); font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; letter-spacing: 2px; background-image: linear-gradient(90deg, rgba(50, 0, 0, 0.05) 3%, rgba(0, 0, 0, 0) 3%), linear-gradient(360deg, rgba(50, 0, 0, 0.05) 3%, rgba(0, 0, 0, 0) 3%); background-size: 20px 20px; background-position: center center;&quot; data-darkmode-color-16030305897056=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;&lt;pre data-original-code=&quot;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;The End如果你觉得这篇内容对你挺有启发，我想请你帮我三个小忙：点个「在看」，让更多的人也能看到这篇内容&amp;lt;br&amp;gt;关注官网 https://muyiy.cn，让我们成为长期关系&amp;lt;br&amp;gt;关注公众号「高级前端进阶」，公众号后台回复「加群」 加入我们一起学习并送你精心整理的高级前端面试题。&amp;lt;br&amp;gt;》》面试官都在用的题库，快来看看《《                        高级前端进阶 发起了一个读者讨论         参与讨论                                        &amp;lt;br&amp;gt;“在看”吗？在看就点一下吧&amp;lt;br&amp;gt;&quot; data-snippet-id=&quot;ext.89a96a6ef2d46757b2677de8206703d5&quot; data-snippet-saved=&quot;false&quot; data-codota-status=&quot;done&quot; data-darkmode-color-16030305897056=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-darkmode-bgcolor-16018219266315=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16018219266315=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16018219266315=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16018219266315=&quot;rgb(0,0,0)&quot; data-style=&quot;padding-right: 10px; padding-left: 10px; letter-spacing: 0px; background-color: rgb(255, 255, 255); line-height: 1.6; word-break: break-word;&quot; data-darkmode-bgcolor-16020008769986=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16020008769986=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16020008769986=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16020008769986=&quot;rgb(0,0,0)&quot; data-darkmode-color-16021670869911=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(0,0,0)&quot; data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030305897056=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;13777&quot; data-style-type=&quot;关注&quot; data-darkmode-color-16030305897056=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;&lt;section data-darkmode-color-16030305897056=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot;&gt;&lt;section data-darkmode-color-16030305897056=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16030305897056=&quot;rgb(0, 0, 0)&quot; data-style=&quot;font-family: &amp;quot;PingFang SC&amp;quot;, 微软雅黑, mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 14px; color: rgb(0, 0, 0); letter-spacing: 1.56px; font-weight: 600; line-height: 20px;&quot; data-darkmode-color-16057140139831=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(0, 0, 0)&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-style=&quot;padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: rgb(89, 89, 89);&quot;&gt;&lt;span&gt;最后不要忘了点赞呦！&lt;span&gt;&lt;img data-ratio=&quot;1.0076923076923077&quot; data-type=&quot;gif&quot; data-w=&quot;260&quot; data-fileid=&quot;100022933&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_gif/H8M5QJDxMHo0BmF9r9Z5jmnjiaRjia63KdItrdfQPpQLTn685ib4pQK1j8wNibqXIQb5m7oLf2v7pke7SMTzCFVs3w/640?wx_fmt=gif&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-style=&quot;padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: rgb(89, 89, 89);&quot;&gt;&lt;span&gt;祝 2022 年暴富！暴美！暴瘦！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a31cc3097598c866ee3c1049c67baa3f</guid>
<title>2022 年的 React 生态</title>
<link>https://toutiao.io/k/5c0u8d8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxNzk1MjQ0Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/YBFV3Da0Nwvv72YkFO0qPibDKicOCsfltiaE9070DOu4iahXnicYwRIHcxe9VBicAy45MkPqy8nZzLTVibugOtV0ORFcg/0?wx_fmt=png&quot; data-nickname=&quot;程序员成长指北&quot; data-alias=&quot;coder_growth&quot; data-signature=&quot;专注 Node.js 技术栈分享，从 前端 到 Node.js 再到 后端数据库，祝您成为优秀的高级 Node.js 全栈工程师。一个有趣的且乐于分享的人。座右铭：今天未完成的，明天更不会完成。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大厂技术&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;高级前端&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;Node进阶&lt;/span&gt;&lt;br/&gt;&lt;/h1&gt;&lt;p&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(136, 136, 136)&quot;&gt;点击上方 &lt;/span&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(0, 128, 255)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(0, 128, 255)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(0, 128, 255)&quot;&gt;程序员成长指北&lt;/span&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(136, 136, 136)&quot;&gt;，关注公众号&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;回复&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;，加入高级Node交流群&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天我们来聊 &lt;code&gt;React&lt;/code&gt;，&lt;code&gt;React&lt;/code&gt; 已经风靡前端届很长一段时间了，在这段时间里它发展了一个非常全面而强大的生态系统。大厂喜欢在大型的前端项目中选择 &lt;code&gt;React&lt;/code&gt;，它的生态功不可没。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天的文章，我们我们将从状态管理、样式和动画、路由、代码风格等多个方面来看看 &lt;code&gt;React&lt;/code&gt; 最新的生态，希望你以后在做技术选型的时候能够有所帮助。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;创建 React 项目&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3342857142857143&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUBTBd9TSpkmic8Z6mzD3Yof2X0ibJia5ltT3AEaMibZl92OdHlbWvoHgMUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1400&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于大多数 &lt;code&gt;React&lt;/code&gt; 初学者来说，在刚刚开始学习 &lt;code&gt;React&lt;/code&gt; 时如何配置一个 &lt;code&gt;React&lt;/code&gt; 项目往往都会感到迷惑，可以选择的框架有很多。&lt;code&gt;React&lt;/code&gt; 社区中大多数会给推荐 &lt;code&gt;Facebook&lt;/code&gt; 的 &lt;code&gt;create-react-app (CRA)&lt;/code&gt;。它基本上零配置，为你提供开箱即用的简约启动和运行 &lt;code&gt;React&lt;/code&gt; 应用程序。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3375912408759124&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUfk1d2Sibp4q0jchQB8iaN2ibvE6ib2Dc9vQVJ1MfjFHibfo0v7Qj2eGhJnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但现在来看，&lt;code&gt;CRA&lt;/code&gt; 使用的工具过时了 — 从而导致我们的开发体验变慢。&lt;code&gt;Vite&lt;/code&gt; 是近期最受欢迎的打包库之一，它具有令人难以置信的开发和生产速度，而且也提供了一些模板（例如 &lt;code&gt;React、React + TypeScript&lt;/code&gt;）可以选择。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5283333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUNAhJnPWLm1jUUtEdribv2FcjpMkXjRaNiaicoICZ1cRiahwLxxINYnL0gw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你已很经熟悉 &lt;code&gt;React&lt;/code&gt; 了，你可以选择它最流行的框架之一作为替代：&lt;code&gt;Next.js&lt;/code&gt; 和 &lt;code&gt;Gatsby.js&lt;/code&gt;。这两个框架都基于 &lt;code&gt;React&lt;/code&gt; 建立，因此你应该至少熟悉了 &lt;code&gt;React&lt;/code&gt; 的基础知识再去使用。这个领域另一个流行的新兴框架是 &lt;code&gt;Remix&lt;/code&gt;，它在 2022 年绝对值得一试。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40134907251264756&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUicAtbI0fAz4uLnLUryT2O7iautesQZFNws3qGyQjibwAFPVlZxXjKWpaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1186&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然 &lt;code&gt;Next.js&lt;/code&gt; 最初是用来做服务端渲染的，而 &lt;code&gt;Gatsby.js&lt;/code&gt; 主要用来做静态站点生成（例如博客和登录页面等静态网站）。然而，在过去几年里，这两个框架之间一直在互相卷...&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Next.js&lt;/code&gt; 可以支持你生成静态站点，而 &lt;code&gt;Gatsby.js&lt;/code&gt; 也支持了服务端渲染。不过就我个人的使用体验而言，我会觉得 &lt;code&gt;Next.js&lt;/code&gt; 更好用一点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你只想了解一下 &lt;code&gt;create-react-app&lt;/code&gt; 这些工具在后台的工作原理，建议尝试一下自己从头开始配置一个 &lt;code&gt;React&lt;/code&gt; 项目。从一个简单的 &lt;code&gt;HTML JavaScript&lt;/code&gt; 项目开始，并自己添加 &lt;code&gt;React&lt;/code&gt; 及其支持工具（例如 &lt;code&gt;Webpack、Babel&lt;/code&gt;）。这并不是你在日常工作中必须要做的事情，但这是了解底层工具实现原理的一个很好的方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建议：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;优先使用 &lt;code&gt;Vite&lt;/code&gt; 创建 &lt;code&gt;React&lt;/code&gt; 客户端应用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;优先使用 &lt;code&gt;Next.js&lt;/code&gt; 创建 &lt;code&gt;React&lt;/code&gt; 服务端渲染应用&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;最新技术：&lt;code&gt;Remix&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;仅创建静态站点备选 &lt;code&gt;Gatsby.js&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;可选的学习经验：从0自己搭建一个 &lt;code&gt;React&lt;/code&gt; 应用。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;链接：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;create-react-app&lt;/code&gt;：https://github.com/facebook/create-react-app&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Vite&lt;/code&gt;：https://github.com/vitejs/vite&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Next.js&lt;/code&gt;：https://github.com/vercel/next.js&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Gatsby.js&lt;/code&gt;：https://github.com/gatsbyjs/gatsby&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Remix&lt;/code&gt;：https://github.com/remix-run/remix&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《React 基础》：https://beta.reactjs.org/learn&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《了解为什么像 React 这样的框架很重要》：https://www.robinwieruch.de/why-frameworks-matter/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《如何创建现代 JavaScript 项目》：https://www.robinwieruch.de/javascript-project-setup-tutorial/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《Gatsby vs. Next.js vs. Remix》：https://satellytes.com/blog/getting-started-gatsby-next-remix/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&amp;amp;mid=2247490885&amp;amp;idx=1&amp;amp;sn=0501282f3b8f9a0e1f96caf8551b16ac&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;React 框架运行时优化方案的演进&lt;/a&gt;》：https://mp.weixin.qq.com/s/4qzm5pFmvdDUncN4txiBPA&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;状态管理&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUoIicqribI1jmxribREVUnmP9SIv9iazuiciczqvkCnZApibib7L9kbSX7Jibc2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;862&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;React&lt;/code&gt; 带有两个内置的 &lt;code&gt;Hooks&lt;/code&gt; 来管理本地状态：&lt;code&gt;useState&lt;/code&gt; 和 &lt;code&gt;useReducer&lt;/code&gt;。如果需要全局状态管理，可以选择加入 &lt;code&gt;React&lt;/code&gt; 内置的 &lt;code&gt;useContext Hook&lt;/code&gt; 来将 &lt;code&gt;props&lt;/code&gt; 从顶层组件传递到底层组件，从而避免 &lt;code&gt;props&lt;/code&gt; 多层透传的问题。这三个 &lt;code&gt;Hooks&lt;/code&gt; 足以让你实现一个强大的状态管理系统了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你发现自己过于频繁地使用 &lt;code&gt;React&lt;/code&gt; 的 &lt;code&gt;Context&lt;/code&gt; 来处理共享/全局状态，你一定要看看 &lt;code&gt;Redux&lt;/code&gt;，它是现在最流行的状态管理库。它允许你管理应用程序的全局状态，任何连接到其全局存储的 &lt;code&gt;React&lt;/code&gt; 组件都可以读取和修改这些状态。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLU1wd9D8E3tJfjuNMn3qvn2x0tOsOD5KntKCnLZwiaRMic2WEv8mWyqJdg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你碰巧在用 &lt;code&gt;Redux&lt;/code&gt;，你一定也应该查看 &lt;code&gt;Redux Toolkit&lt;/code&gt;。它是基于 &lt;code&gt;Redux&lt;/code&gt; 的一个很棒的 &lt;code&gt;API&lt;/code&gt;，极大地改善了开发者使用 &lt;code&gt;Redux&lt;/code&gt; 的体验。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为替代方案，如果你喜欢用全局存储的思想管理状态，但不喜欢 &lt;code&gt;Redux&lt;/code&gt; 的处理方式，可以看看其他流行的本地状态管理解决方案，例如 &lt;code&gt;Zusand、Jotai、XState&lt;/code&gt; 或 &lt;code&gt;Recoil&lt;/code&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，如果你想拥有和 &lt;code&gt;Vue.js&lt;/code&gt; 一样的开发体验，建议看看 &lt;code&gt;Mobx&lt;/code&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建议：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用 &lt;code&gt;useState/useReducer&lt;/code&gt; 处理共享状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;选择性使用 &lt;code&gt;useContext&lt;/code&gt; 管理某些全局状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用 &lt;code&gt;Redux&lt;/code&gt;(或另一种选择) 管理全局状态&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;链接：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Redux&lt;/code&gt;：https://redux.js.org/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Mobx&lt;/code&gt;：https://github.com/mobxjs/mobx&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Zusand&lt;/code&gt;：https://github.com/pmndrs/zustand&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Jotai&lt;/code&gt;：https://github.com/pmndrs/jotai&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;XState&lt;/code&gt;：https://github.com/statelyai/xstate&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Recoil&lt;/code&gt;：https://github.com/facebookexperimental/Recoil&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《useReducer、useState、useContext 使用指南》：https://www.robinwieruch.de/react-state-usereducer-usestate-usecontext/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《React 体系下关于 Mobx 与 Redux 的一些思考》：https://zhuanlan.zhihu.com/p/461844358&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&amp;amp;mid=2247490540&amp;amp;idx=1&amp;amp;sn=a8be59aebdb47ab88aae65bb61ed83f7&amp;amp;chksm=c2e2eec7f59567d18a386a911d6f9ba6a15e32bee8372f30cfd89ac88eecacb23de3aefaad5d&amp;amp;scene=21&amp;amp;cur_album_id=2160444600824430594#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;Facebook 新一代 React 状态管理库 Recoil&lt;/a&gt;》：https://juejin.cn/post/6881493149261250568&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&amp;amp;mid=2247490582&amp;amp;idx=1&amp;amp;sn=bdd65aaaabd64513da451411337d7f5d&amp;amp;chksm=c2e2e93df595602be8285512068aef7b7121844e643fbcaf2e9cd90daf8cf8683359b4742ea4&amp;amp;scene=21&amp;amp;cur_album_id=2160444600824430594#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;使用 React&amp;amp;Mobx 的几个最佳实践&lt;/a&gt;》&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;远程数据请求&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5241666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUNTEGIW0k7DypHcicpEj8I4nklNsZafWwHElH1Mk7AZZJIR9QnI1y2xA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;React&lt;/code&gt; 的内置 &lt;code&gt;Hooks&lt;/code&gt; 非常适合 UI 状态管理，但当涉及到远程数据的状态管理（也包括数据获取）时，我建议使用一个专门的数据获取库，例如 &lt;code&gt;React Query&lt;/code&gt;，它自带内置的状态管理功能。虽然 &lt;code&gt;React Query&lt;/code&gt; 本身的定位并不是一个状态管理库，它主要用于从 &lt;code&gt;API&lt;/code&gt; 获取远程数据，但它会为你处理这些远程数据的所有状态管理(例如缓存，批量更新)。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3454231433506045&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUWhibNtM7zdXFnvKkwWARytsmBHEpGqIu8QzfG504VjPvxAJfyibExClA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;579&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;React Query&lt;/code&gt; 最初是为使用 &lt;code&gt;REST API&lt;/code&gt; 而设计的，但是现在它也支持了 &lt;code&gt;GraphQL&lt;/code&gt;。然而如果你正在为你的 &lt;code&gt;React&lt;/code&gt; 项目寻找专门的 &lt;code&gt;GraphQL&lt;/code&gt; 库，我还是推荐你去看看 &lt;code&gt;Apollo Client&lt;/code&gt;（当前最流行的）、&lt;code&gt;urql&lt;/code&gt;（轻量级）或 &lt;code&gt;Relay&lt;/code&gt;（&lt;code&gt;Facebook&lt;/code&gt; 维护）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你已经在使用 &lt;code&gt;Redux&lt;/code&gt;，并且想要在 &lt;code&gt;Redux&lt;/code&gt; 中添加集成状态管理的数据请求功能，建议你看看 &lt;code&gt;RTK Query&lt;/code&gt;，它将数据请求的功能更巧妙的集成到 &lt;code&gt;Redux&lt;/code&gt; 中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建议：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;React Query&lt;/code&gt;（REST API、GraphQL API 都有）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Apollo Client&lt;/code&gt;（只有 GraphQL API）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可选的学习经验：了解 &lt;code&gt;React Query&lt;/code&gt; 的工作原理&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;链接：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;React Query&lt;/code&gt;：https://react-query.tanstack.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Apollo Client&lt;/code&gt;：https://www.apollographql.com/docs/react/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;urql&lt;/code&gt;：https://formidable.com/open-source/urql/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Relay&lt;/code&gt;：https://github.com/facebook/relay&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;RTK Query&lt;/code&gt;：https://redux-toolkit.js.org/rtk-query/overview&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《React Query 的工作原理》：https://www.robinwieruch.de/react-hooks-fetch-data/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《本地和远程数据的 React 状态的一切》：https://www.robinwieruch.de/react-state/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;路由&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUDE0zJPMBpcFZfeVyqFCcEQhXrTCxCGCycEQr68zibIjchXUW5dfDBlw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1600&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你使用的是像 &lt;code&gt;Next.js&lt;/code&gt; 或 &lt;code&gt;Gatsby.js&lt;/code&gt; 这样的 &lt;code&gt;React&lt;/code&gt; 框架，那么路由已经为你处理好了。但是，如果你在没有框架的情况下使用 &lt;code&gt;React&lt;/code&gt; 并且仅用于客户端渲染（例如 &lt;code&gt;CRA&lt;/code&gt;），那么现在最强大和流行的路由库是 &lt;code&gt;React Router&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;链接：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;React Router&lt;/code&gt;：https://reactrouter.com/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;样式/CSS&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 &lt;code&gt;React&lt;/code&gt; 中有很多关于 &lt;code&gt;样式/CSS&lt;/code&gt; 的选项和意见，作为一个 &lt;code&gt;React&lt;/code&gt; 初学者，可以使用一个带有所有 &lt;code&gt;CSS&lt;/code&gt; 属性的样式对象作为 &lt;code&gt;HTML&lt;/code&gt; 样式属性的键/值对，从内联样式和基本的 CSS 开始就可以。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; ConardLi = &lt;span&gt;(&lt;span&gt;{ title }&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;h1&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{&lt;/span&gt; color: &#x27;blue&#x27; }}&amp;gt;&lt;/span&gt;&lt;br/&gt;    {title}&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;span&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;内联样式可以在 &lt;code&gt;React&lt;/code&gt; 中通过 &lt;code&gt;JavaScript&lt;/code&gt; 动态添加样式，而外部 &lt;code&gt;CSS&lt;/code&gt; 文件可以包含 &lt;code&gt;React&lt;/code&gt; 应用的所有剩余样式：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&#x27;./Headline.css&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; ConardLi = &lt;span&gt;(&lt;span&gt;{ title }&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;h1&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;ConardLi&quot;&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;{{&lt;/span&gt; color: &#x27;blue&#x27; }}&amp;gt;&lt;/span&gt;&lt;br/&gt;    {title}&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;span&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你的应用越来越大了，建议再看看其他选项。首先，我建议你将 &lt;code&gt;CSS Module&lt;/code&gt; 作为众多 &lt;code&gt;CSS-in-CSS&lt;/code&gt; 解决方案的首选。&lt;code&gt;CRA&lt;/code&gt; 支持  &lt;code&gt;CSS Module&lt;/code&gt; ，并为提供了一种将 &lt;code&gt;CSS&lt;/code&gt; 封装到组件范围内的模块的方法。这样，它就不会意外泄露到其他 &lt;code&gt;React&lt;/code&gt; 组件的样式中。你的应用的某些部分仍然可以共享样式，但其他部分不必访问它。在 React 中， &lt;code&gt;CSS Module&lt;/code&gt; 通常是将 &lt;code&gt;CSS&lt;/code&gt; 文件放在 &lt;code&gt;React&lt;/code&gt; 组件文件中：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; styles &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./style.module.css&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; ConardLi = &lt;span&gt;(&lt;span&gt;{ title }&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;h1&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;{styles.headline}&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    {title}&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;span&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5643835616438356&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUBngibT2LBvpH2zMtyRpMMNziaFVyF1icHcQmwt7Z2fQgIe6tYrJ0nvE8g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;730&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其次，我想向你推荐所谓的 &lt;code&gt;styled components&lt;/code&gt; ，作为 &lt;code&gt;React&lt;/code&gt; 的众多 &lt;code&gt;CSS-in-JS&lt;/code&gt; 解决方案之一。它通过一个名为 &lt;code&gt;styles-components&lt;/code&gt;(或者其他例如 &lt;code&gt;emotion 、stitches&lt;/code&gt;)的库来实现的，它一般将样式放在 &lt;code&gt;React&lt;/code&gt; 组件的旁边：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; styled &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;styled-components&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; BlueHeadline = styled.h1&lt;span&gt;`&lt;br/&gt;  color: blue;&lt;br/&gt;`&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; ConardLi = &lt;span&gt;(&lt;span&gt;{ title }&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;BlueHeadline&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    {title}&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;span&gt;BlueHeadline&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUh8VhJZx9H7WSdloOXN5uVvOKl9k85BSbHby3Ck5AX0qVNZKhas2YFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1600&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第三，我想推荐 &lt;code&gt;Tailwind CSS&lt;/code&gt; 作为最流行的 &lt;code&gt;Utility-First-CSS&lt;/code&gt; 解决方案。它提供了预定义的 &lt;code&gt;CSS&lt;/code&gt; 类，你可以在 &lt;code&gt;React&lt;/code&gt; 组件中使用它们，而不用自己定义。这可以提升一些效率，并与你的 &lt;code&gt;React&lt;/code&gt; 程序的设计系统保持一致，但同时也需要了解所有的类：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; ConardLi = &lt;span&gt;(&lt;span&gt;{ title }&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;h1&lt;/span&gt; &lt;span&gt;className&lt;/span&gt;=&lt;span&gt;&quot;text-blue-700&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    {title}&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;span&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 &lt;code&gt;CSS-in-CSS、CSS-in-js&lt;/code&gt; 还是函数式 &lt;code&gt;CSS&lt;/code&gt; 由你自己决定。所有的方案在大型 &lt;code&gt;React&lt;/code&gt; 应用中都适用。最后一点提示：如果你想在 &lt;code&gt;React&lt;/code&gt; 中有条件地应用一个 &lt;code&gt;className&lt;/code&gt;，可以使用像 &lt;code&gt;clsx&lt;/code&gt; 这样的工具。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建议：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;CSS-in-CSS&lt;/code&gt; 方案：&lt;code&gt;CSS Modules&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;CSS-in-JS&lt;/code&gt; 方案：&lt;code&gt;Styled Components&lt;/code&gt; （目前最受欢迎）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;函数式 CSS：&lt;code&gt;Tailwind CSS&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;备选：CSS 类的条件渲染：&lt;code&gt;clsx&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;链接：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;styled-components&lt;/code&gt;：https://www.robinwieruch.de/react-styled-components/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Tailwind CSS&lt;/code&gt;：https://tailwindcss.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;clsx&lt;/code&gt;：https://github.com/lukeed/clsx&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&amp;amp;mid=2247490725&amp;amp;idx=1&amp;amp;sn=266ad0c255e8a8d09453c11d5da83676&amp;amp;chksm=c2e2e98ef5956098c8291f1f484d2363e59ac256936779147c5ed5ed073b52652a12c5f17f7f&amp;amp;token=907147968&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;React中CSS-in-JS的最佳实践&lt;/a&gt;》：https://juejin.cn/post/6935245880568053791&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《React中的CSS样式》：https://www.robinwieruch.de/react-css-styling/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《10种现在流行的CSS解决方案》：https://juejin.cn/post/6844903633109139464&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《CSS-in-JS vs CSS》：https://bejamas.io/blog/css-performance/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&amp;amp;mid=2247491460&amp;amp;idx=1&amp;amp;sn=08759537606f44b55a29ad0c35c0ce1b&amp;amp;chksm=c2e2eaaff59563b90e450cec8878c8c0173e6785b32c1499bbf7131435674e00dd2989cd53bc&amp;amp;token=907147968&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;看完了 2021 CSS 年度报告，我学到了啥？&lt;/a&gt;》：https://juejin.cn/post/7043577751344775176&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;组件库&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于初学者来说，从零开始构建可复用的组件是一个很好的学习经验，值得推荐。无论它是 &lt;code&gt;dropdown、radio button&lt;/code&gt; 还是 &lt;code&gt;checkbox&lt;/code&gt; ，你最终都应该知道如何创建这些UI组件组件。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.465&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUxuZOzxUAhwulcAuj1aibo38cu8By0M3eIrHb7vCRfsibGblwPed4AOXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然而，在某些时候，你想要使用一个UI组件库，它可以让你访问许多共享一套设计系统的预构建组件。以下所有的UI组件库都带有基本组件，如 &lt;code&gt;Buttons、Dropdowns、Dialogs&lt;/code&gt; 和 &lt;code&gt;Lists&lt;/code&gt;：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Material UI&lt;/code&gt; (MUI) (最流行)：https://material-ui.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Mantine&lt;/code&gt; (最推荐)：https://mantine.dev/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Chakra UI&lt;/code&gt; (最推荐)：https://chakra-ui.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Ant Design&lt;/code&gt;（国内最流行）：https://ant.design/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Radix&lt;/code&gt;：https://www.radix-ui.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Primer&lt;/code&gt;：https://primer.style/react/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;NextUI&lt;/code&gt;：https://nextui.org/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Tailwind UI&lt;/code&gt; (收费的)：https://www.tailwindui.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Semantic UI&lt;/code&gt;：https://www.robinwieruch.de/react-semantic-ui-tutorial&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;React Bootstrap&lt;/code&gt;：https://react-bootstrap.github.io/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尽管所有这些UI组件库都带有许多内部组件，但它们不能让每个组件都像只专注于一个UI组件的库那样强大。例如 &lt;code&gt;react-table-library&lt;/code&gt; 提供了非常强大的表格组件，同时提供了主题（例如 &lt;code&gt;Material UI&lt;/code&gt;），可以很好的和流行的UI组件库兼容。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《从零到一搭建React组件库》：https://segmentfault.com/a/1190000039852833&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;动画库&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUDHfIN6JxGiazIDNmjZgJ5nGyMmDUjNCOl7ibCc3zMp0viaEtvAHjw0oqA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Web&lt;/code&gt; 应用中的大多数动画都是从 &lt;code&gt;CSS&lt;/code&gt; 开始的。最终你会发现 &lt;code&gt;CSS&lt;/code&gt; 动画不能满足你所有的需求。通常开发者会选择 &lt;code&gt;React Transition Group&lt;/code&gt;，这样他们就可以使用 &lt;code&gt;React&lt;/code&gt;组件来执行动画了，&lt;code&gt;React&lt;/code&gt; 的其他知名动画库有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Framer Motion&lt;/code&gt; (最推荐)：https://www.framer.com/motion/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;react-spring&lt;/code&gt; (也推荐一下)：https://github.com/react-spring/react-spring&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;react-motion&lt;/code&gt;：https://github.com/chenglou/react-motion&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;react-move&lt;/code&gt;：https://github.com/sghall/react-move&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Animated&lt;/code&gt; (React Native)：https://facebook.github.io/react-native/docs/animated&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;可视化图表&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.521875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUuicbJSWSxSaXy7m3EDWd5JMGc8SdKInSQr21BtwdRhJGM67wZB601Jg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你真的想要自己从头开始开发一些图表，那么就没有办法绕过 &lt;code&gt;D3&lt;/code&gt; 。这是一个很底层的可视化库，可以为你提供开发一些炫酷的图表所需的一切。然而，学习 &lt;code&gt;D3&lt;/code&gt; 是很有难度的，因此许多开发者只是选择一个 &lt;code&gt;React&lt;/code&gt; 图表库，这些库默认封装了很多能力，但是缺失了一些灵活性。以下是一些流行的解决方案:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Recharts&lt;/code&gt;：http://recharts.org/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;react-chartjs&lt;/code&gt;：https://github.com/reactchartjs/react-chartjs-2&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;nivo&lt;/code&gt;：https://nivo.rocks/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;visx&lt;/code&gt;：https://github.com/airbnb/visx&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Victory&lt;/code&gt;：https://formidable.com/open-source/victory/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;表单&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.481&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLU3TnC0Eia0abiby28G3NeZITIO5jnHz8yUKjRUCjJLATtBfL5lkDsfNtA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2000&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;React&lt;/code&gt; 现在最受欢迎的表单库是 &lt;code&gt;React Hook Form&lt;/code&gt; 。它提供了从验证（一般会集成 &lt;code&gt;yup&lt;/code&gt; 和 &lt;code&gt;zod&lt;/code&gt;）到提交到表单状态管理所需的一切。之前流行的另一种方式是 &lt;code&gt;Formik&lt;/code&gt;。两者都是不错的解决方案。这个领域的另一个选择是 &lt;code&gt;React Final Form&lt;/code&gt; 。毕竟，如果你已经在使用 &lt;code&gt;React&lt;/code&gt; UI组件库了，你还可以查看他们的内置表单解决方案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建议：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;React Hook Form&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果已经在使用组件库了，看看内置的表单能不能满足需求&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;链接：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;React Hook Form&lt;/code&gt;：https://react-hook-form.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Formik&lt;/code&gt;：https://github.com/jaredpalmer/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;React Final Form&lt;/code&gt;：https://final-form.org/react&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《React 开源表单组件最佳实践，原理解析，设计分析》：https://toutiao.io/posts/0nh4r9w/preview&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;类型检查&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;React&lt;/code&gt; 带有一个名为 &lt;code&gt;PropTypes&lt;/code&gt; 的内部类型检查。通过使用 &lt;code&gt;PropTypes&lt;/code&gt;，你可以为你的 &lt;code&gt;React&lt;/code&gt; 组件定义 &lt;code&gt;props&lt;/code&gt;。每当将类型错误的 &lt;code&gt;prop&lt;/code&gt; 传递给组件时，你可以在运行时收到错误消息：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; PropTypes &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;prop-types&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; List = &lt;span&gt;(&lt;span&gt;{ list }&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    {list.map(item =&amp;gt; &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;key&lt;/span&gt;=&lt;span&gt;{item.id}&lt;/span&gt;&amp;gt;&lt;/span&gt;{item.title}&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;)}&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;List.propTypes = {&lt;br/&gt;  &lt;span&gt;list&lt;/span&gt;: PropTypes.array.isRequired,&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUUexUzmlKFWYGTtZFZYE2x1k9WqeWDJC8RgI3wyoGzwa9dW2Raah8pA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1024&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在过去的几年里，&lt;code&gt;PropTypes&lt;/code&gt; 已经不那么流行了，&lt;code&gt;PropTypes&lt;/code&gt; 也已经不再包含在 &lt;code&gt;React&lt;/code&gt; 核心库中了，现在 &lt;code&gt;TypeScript&lt;/code&gt; 才是最佳的选择：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;type Item = {&lt;br/&gt;  &lt;span&gt;id&lt;/span&gt;: string;&lt;br/&gt;  title: string;&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;type ListProps = {&lt;br/&gt;  &lt;span&gt;list&lt;/span&gt;: Item[];&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; List: React.FC&amp;lt;ListProps&amp;gt; = &lt;span&gt;(&lt;span&gt;{ list }&lt;/span&gt;) =&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    {list.map(item =&amp;gt; &lt;span&gt;&amp;lt;&lt;span&gt;div&lt;/span&gt; &lt;span&gt;key&lt;/span&gt;=&lt;span&gt;{item.id}&lt;/span&gt;&amp;gt;&lt;/span&gt;{item.title}&lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;)}&lt;br/&gt;  &lt;span&gt;&amp;lt;/&lt;span&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&amp;amp;mid=2247493477&amp;amp;idx=1&amp;amp;sn=f6a74b2352fbdf3036f06049789e2baf&amp;amp;chksm=c2e1124ef5969b589eb603330f0ceb293b0908df20f7bf6df58218e7b068f0993883a84c4f32&amp;amp;token=907147968&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;TypeScript 终极初学者指南&lt;/a&gt;》：https://mp.weixin.qq.com/s/6DAyXFHIMW95FS0f3GyHpA&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《如何优雅地在 React 中使用TypeScript》：https://juejin.cn/post/7021674818621669389&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;代码风格&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2783203125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUGBlTibgsxIK1P1uySJUSN1n1hxTibcUGZDcweA63X7uyv1abEW03PyJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1024&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于代码风格，基本上有两种方案可以选择：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你想要一种统一的、通用的代码风格，在你的 &lt;code&gt;React&lt;/code&gt; 项目中使用 &lt;code&gt;ESLint&lt;/code&gt; 。像 &lt;code&gt;ESLint&lt;/code&gt; 这样的 &lt;code&gt;linter&lt;/code&gt; 会在你的 &lt;code&gt;React&lt;/code&gt; 项目中强制执行特定的代码风格。例如，你可以在 &lt;code&gt;ESLint&lt;/code&gt; 中要求遵循一个流行的风格指南(如 &lt;code&gt;Airbnb&lt;/code&gt; 风格指南)。之后，将 &lt;code&gt;ESLint&lt;/code&gt; 与你的IDE/编辑器集成，它会指出你的每一个错误。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你想采用统一的代码格式，可以在 &lt;code&gt;React&lt;/code&gt; 项目中使用 &lt;code&gt;Prettier&lt;/code&gt;。它是一个比较固执的代码格式化器，可选择的配置很少。你也可以将它集成到编辑器或IDE中，以便在每次保存文件的时候自动对代码进行格式化。虽然 &lt;code&gt;Prettier&lt;/code&gt; 不能取代 &lt;code&gt;ESLint&lt;/code&gt;，但它可以很好地与 &lt;code&gt;ESLint&lt;/code&gt; 集成。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建议：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ESLint&lt;/code&gt;：https://eslint.org/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Prettier&lt;/code&gt;：https://github.com/prettier/prettier&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《React 代码风格指南》：https://keqingrong.cn/blog/2020-05-04-code-style-guide-for-react/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;《Airbnb 样式指南》：https://www.robinwieruch.de/react-libraries/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;身份认证&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUNAYefSRAKic4QJFPv5I4UPvO61C2OSbYMtuq7tcl62AbOXGe3lSzytA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1600&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 &lt;code&gt;React&lt;/code&gt; 应用程序中，你可能希望引入带有注册、登录和退出等功能的身份验证。通常还需要一些其他功能，例如密码重置和密码更改功能。这些能力远远超出了 &lt;code&gt;React&lt;/code&gt; 的范畴，我们通常会把它们交给服务端去管理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最好的学习经验是自己实现一个带有身份验证的服务端应用(例如 &lt;code&gt;GraphQL&lt;/code&gt; 后端)。然而，由于身份验证有很多安全风险，而且并不是所有人都了解其中的细节，我建议使用现有的众多身份验证解决方案中的一种：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Firebase&lt;/code&gt;：https://www.robinwieruch.de/complete-firebase-authentication-react-tutorial/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Auth0&lt;/code&gt;：https://auth0.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;AWS Cognito&lt;/code&gt;：https://aws.amazon.com/cognito/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《使用 React Router 进行身份验证》：https://www.robinwieruch.de/react-router-authentication/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;测试&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在最常见的 &lt;code&gt;React&lt;/code&gt; 测试方案还是 &lt;code&gt;Jest&lt;/code&gt;，它基本上提供了一个全面的测试框架所需要的一切。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你可以使用 &lt;code&gt;react-test-renderer&lt;/code&gt; 在你的 &lt;code&gt;Jest&lt;/code&gt; 测试中渲染 &lt;code&gt;React&lt;/code&gt; 组件。这已经足以使用 &lt;code&gt;Jest&lt;/code&gt; 执行所谓的 &lt;code&gt;Snapshot Tests&lt;/code&gt; 了：一旦运行测试，就会创建 &lt;code&gt;React&lt;/code&gt; 组件中渲染的 &lt;code&gt;DOM&lt;/code&gt; 元素的快照。当你在某个时间点再次运行测试时，将创建另一个快照，这个快照会和前一个快照进行 &lt;code&gt;diff&lt;/code&gt;。如果存在差异，&lt;code&gt;Jest&lt;/code&gt; 将发出警告，你要么接受这个快照，要么更改一下组件的实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近 &lt;code&gt;React Testing Library (RTL)&lt;/code&gt; 也比较流行（在 &lt;code&gt;Jest&lt;/code&gt; 测试环境中使用），它可以为 &lt;code&gt;React&lt;/code&gt; 提供更精细的测试。&lt;code&gt;RTL&lt;/code&gt; 支持让渲染组件模拟 &lt;code&gt;HTML&lt;/code&gt; 元素上的事件成，配合 &lt;code&gt;Jest&lt;/code&gt; 进行 &lt;code&gt;DOM&lt;/code&gt; 节点的断言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你正在寻找用于 &lt;code&gt;React&lt;/code&gt; 端到端 (&lt;code&gt;E2E&lt;/code&gt;) 测试的测试工具，&lt;code&gt;Cypress&lt;/code&gt; 是现在最受欢迎的选择。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《React 单元测试实践》：https://zhuanlan.zhihu.com/p/431143598&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;数据结构&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38857142857142857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLU534SPdWUj93q30VUNAhXwV1pHZtyIPwEDicvjjVoU7Hf0G9r8clcIkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1400&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Vanilla JavaScript&lt;/code&gt; 为你提供了大量内置工具来处理数据结构，就好像它们是不可变的一样。但是，如果你觉得需要强制执行不可变数据结构，那么最受欢迎的选择之一是 &lt;code&gt;Immer&lt;/code&gt; 。我个人没用过它，因为 &lt;code&gt;JavaScript&lt;/code&gt; 本身就可以用于管理不可变的数据结构，但是如果有人专门问到 &lt;code&gt;JS&lt;/code&gt; 的不可变性，有人会推荐它。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;链接：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Immer&lt;/code&gt;：https://github.com/immerjs/immer&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《immer —— 提高React开发效率的神器》https://zhuanlan.zhihu.com/p/146773995&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;国际化&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLU1XkD5oicrbuyViceecAbKDdfDt2Ve3T3CRPPo16xia9A1jwxWQG01gVUg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当涉及到 &lt;code&gt;React&lt;/code&gt; 应用程序的国际化 &lt;code&gt;i18n&lt;/code&gt; 时，你不仅需要考虑翻译，还需要考虑复数、日期和货币的格式以及其他一些事情。这些是处理国际化的最流行的库：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;FormatJS&lt;/code&gt;：https://github.com/formatjs/formatjs&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;react-i18next&lt;/code&gt;：https://github.com/i18next/react-i18next&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;富文本编辑&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLU6ficUibhHDFJKZB85YLkYdO7Z6sbzePPl8ofZwkn6ibvptZWJzaibE6qCw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;React&lt;/code&gt; 中的富文本编辑器，就简单推荐下面几个，我也没太多用过：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Draft.js&lt;/code&gt;：https://draftjs.org/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Slate.js&lt;/code&gt;：https://www.slatejs.org/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ReactQuill&lt;/code&gt;：https://github.com/zenoamaro/react-quill&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;时间处理&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4132420091324201&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUDh2xEribdRn9UzpXyMcosINA42dsWDZQl7OGNabBT7CYiakwpn9d2EYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;876&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;近年来，&lt;code&gt;JavaScript&lt;/code&gt; 本身在处理日期和时间方面做了很多优化和努力，所以一般没必要使用专门的库来处理它们。但是，如果你的 &lt;code&gt;React&lt;/code&gt; 应用程序需要大量处理日期、时间和时区，你可以引入一个库来为你管理这些事情：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;date-fns&lt;/code&gt;：https://github.com/date-fns/date-fns&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Day.js&lt;/code&gt;：https://github.com/iamkun/dayjs&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Luxon&lt;/code&gt;：https://github.com/moment/luxon/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;客户端&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.527038626609442&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUJT4n8CgibkdWRZ01ZOA0y0p1L1xC0cDD3iciaWJP59B507xPI0tu0icCWg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2330&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Electron&lt;/code&gt; 是现在跨平台桌面应用程序的首选框架。但是，也存在一些替代方案：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Tauri&lt;/code&gt;：(当前最新的) https://github.com/tauri-apps/tauri&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;NW.js&lt;/code&gt;：https://nwjs.io/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Neutralino.js&lt;/code&gt;：https://github.com/neutralinojs/neutralinojs&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《扔掉 Electron，拥抱基于 Rust 开发的 Tauri》：https://juejin.cn/post/7067342513920540686#comment&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;移动端&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUHTu9VHTz9Dtic8ER4FGkQeeYpQNiaj6YQnJXib0TJ4PSQfK3o2utZ5vcg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2000&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将 &lt;code&gt;React&lt;/code&gt; 从 &lt;code&gt;Web&lt;/code&gt; 带到移动设备的首选解决方案仍然是 &lt;code&gt;React Native&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阅读：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;《React Native 新架构》：https://segmentfault.com/a/1190000041182593&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;VR/AR&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5462085308056872&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUCvGf8710ic9rv3wEicianFrUAYVTTO48TLCeiagiah5pLL78LQJY5eiaBgHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;844&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过 &lt;code&gt;React&lt;/code&gt;，我们也可以深入研究虚拟现实或增强现实。老实说，这些库我还都没用过，但它们是我在 &lt;code&gt;React&lt;/code&gt; 中所熟悉的 &lt;code&gt;AR/VR&lt;/code&gt; 库：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;react-three-fiber&lt;/code&gt;：(最流行的3D库，其中也有VR实现)https://github.com/pmndrs/react-three-fiber&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;`react-360：https://facebook.github.io/react-360/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;aframe-react&lt;/code&gt;：https://github.com/supermedium/aframe-react&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;原型设计&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.52265625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLU32EaUMzs4RgNdh1PHTq3kHYhb1A4Lvo0C6yoicJX69aLpVOCv9icWNxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你是一名 &lt;code&gt;UI/UX&lt;/code&gt; 设计师，你可能希望使用一种工具来为新的 &lt;code&gt;React&lt;/code&gt; 组件、布局或 &lt;code&gt;UI/UX&lt;/code&gt; 概念进行快速原型设计。我之前用的是 &lt;code&gt;Sketch&lt;/code&gt; ，现在改用了 &lt;code&gt;Figma&lt;/code&gt; 。尽管我两者都喜欢，但我还是更喜欢 &lt;code&gt;Figma&lt;/code&gt;。&lt;code&gt;Zeplin&lt;/code&gt; 是另一种选择。对于一些简单的草图，我喜欢使用 &lt;code&gt;Excalidraw&lt;/code&gt;。如果你正在寻找交互式 &lt;code&gt;UI/UX&lt;/code&gt; 设计，可以看看 &lt;code&gt;InVision&lt;/code&gt;。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Sketch&lt;/code&gt;：https://www.sketch.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Figma&lt;/code&gt;：https://www.figma.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Zeplin&lt;/code&gt;：https://zeplin.io/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Excalidraw&lt;/code&gt;：https://excalidraw.com/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;InVision&lt;/code&gt;：https://www.invisionapp.com/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;文档&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5192629815745393&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdSjfZzfyJuiaoy3uwYsm5WLUZkibNYaAbMTADiaZQxO5DH1HQCeHnK0fnAziak0YJNUpzBbxpchI5oVicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1194&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我在很多项目里都在使用 &lt;code&gt;Storybook&lt;/code&gt; 作为文档工具，不过也有一些其他好的方案：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Docusaurus&lt;/code&gt;：https://github.com/facebook/docusaurus&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Docz&lt;/code&gt;：https://github.com/doczjs/docz&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Styleguidist&lt;/code&gt;：https://github.com/styleguidist/react-styleguidist&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;参考：https://www.robinwieruch.de/react-libraries/&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文完，欢迎大家补充。&lt;/p&gt;&lt;pre&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-darkmode-color-16057140139831=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(0,0,0)&quot; data-style=&quot;padding-right: 10px; padding-left: 10px; color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif; letter-spacing: 0px; text-align: left; white-space: normal; font-size: 16px; line-height: 1.6; word-break: break-word;&quot; data-darkmode-color-16072568501583=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(0, 0, 0)&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxNzk1MjQ0Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/YBFV3Da0Nwvv72YkFO0qPibDKicOCsfltiaE9070DOu4iahXnicYwRIHcxe9VBicAy45MkPqy8nZzLTVibugOtV0ORFcg/0?wx_fmt=png&quot; data-nickname=&quot;程序员成长指北&quot; data-alias=&quot;coder_growth&quot; data-signature=&quot;专注 Node.js 技术栈分享，从 前端 到 Node.js 再到 后端数据库，祝您成为优秀的高级 Node.js 全栈工程师。一个有趣的且乐于分享的人。座右铭：今天未完成的，明天更不会完成。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section label=&quot;Copyright © 2016 playhudong All Rights Reserved.&quot; donone=&quot;shifuMouseDownPayStyle(&#x27;shifu_t_042&#x27;)&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;Node 社群&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;89226&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我组建了一个氛围特别好的 Node.js 社群，里面有很多 Node.js小伙伴，如果你对Node.js学习感兴趣的话（后续有计划也可以），我们可以一起进行Node.js相关的交流、学习、共建。下方加 考拉 好友回复「Node」即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YBFV3Da0NwsF7OKB4iaaXAzQPbNstk2LybA0Zz5I1hiaiazE9W7WH2Ojt2dibDODWMVUmHqgfXCefVwt7z5ibNMWLvg/0?wx_fmt=jpeg&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;578.2649006622516&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;700.2119205298013&quot; data-fileid=&quot;100016913&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.2093425605536332&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YBFV3Da0NwvFQgO67XibvUG5S2UMXwCghOuJvE8BFRzUXnCAfWXkU1qHld6Ly9xiarib3siaWicJWJ0U3lI8kSgD38w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-style=&quot;padding-top: 8px; padding-bottom: 8px; color: rgb(89, 89, 89); line-height: 26px;&quot; data-darkmode-color-16072568501583=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(89, 89, 89)&quot;&gt;&lt;span&gt;如果你觉得这篇内容对你有帮助，我想请你帮我2个小忙：&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16072568501583=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(89, 89, 89)&quot;&gt;1. 点个&lt;/span&gt;&lt;span&gt;「在看」&lt;/span&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16072568501583=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(89, 89, 89)&quot;&gt;，让更多人也能看到这篇文章&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16072568501583=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(89, 89, 89)&quot;&gt;2. 订阅官方博客 &lt;/span&gt;&lt;span&gt;www.inode.club &lt;/span&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16072568501583=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(89, 89, 89)&quot;&gt;让我们一起成长&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;点赞和在看就是最大的支持&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b63adabb44f6534e8403f6b114322aa6</guid>
<title>Go 适合 IO 密集型？并不准确！</title>
<link>https://toutiao.io/k/gpk44sp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6014234875444839&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4UtmXsuLoNcoYZsu0cBj8es3CgicTJBMqrLdb4Moj89ToGicZHw9cLX8ygc1SzticNCm92O2VqENResMxJP2MO3mg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1686&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5268817204301075&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsesdolc6YJHWRf1C8UTPs3scrsXWFoCHYsntUfbpKFrDicJ5tFbLPxBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;186&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;Go 程序适合什么样的场景？&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5520833333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsl8Q8jryjW8fJDBj8r4A48RcHDMj7ibJfRRhRWSJUUWNTqiaibDr9dmstQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;192&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你想过这个问题吗？Go 程序到底是哪种场景最适合。可能你已经听说过答案了：IO 密集型的场景。&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.5268817204301075&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsesdolc6YJHWRf1C8UTPs3scrsXWFoCHYsntUfbpKFrDicJ5tFbLPxBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;186&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;什么是 CPU 密集型、IO 密集型？&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.5520833333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsl8Q8jryjW8fJDBj8r4A48RcHDMj7ibJfRRhRWSJUUWNTqiaibDr9dmstQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;192&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;计算机程序场景会分成 cpu 密集型 和 IO 密集型。CPU 密集型说的是一直在运算 CPU 指令，这种常见于算法运行喽。IO 密集型说的是经常下发 IO ，比如网卡，磁盘，或者其他外设。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.5268817204301075&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsesdolc6YJHWRf1C8UTPs3scrsXWFoCHYsntUfbpKFrDicJ5tFbLPxBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;186&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;Go 适合 IO 密集型，并不准确？&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5520833333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsl8Q8jryjW8fJDBj8r4A48RcHDMj7ibJfRRhRWSJUUWNTqiaibDr9dmstQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;192&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你肯定记住了答案：Go 适合 IO 密集型的场景。但其实这里并不准确。更准确的是 Go 适合的是网络 IO 密集型的场景，而非磁盘 IO 密集型。甚至可以说，&lt;strong&gt;Go 对于磁盘 IO 密集型并不友好&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.5268817204301075&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsesdolc6YJHWRf1C8UTPs3scrsXWFoCHYsntUfbpKFrDicJ5tFbLPxBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;186&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;Go 对于 网络 IO 和磁盘 IO为什么会有差别？&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5520833333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsl8Q8jryjW8fJDBj8r4A48RcHDMj7ibJfRRhRWSJUUWNTqiaibDr9dmstQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;192&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根本原因：在于&lt;strong&gt;网络 socket 句柄和文件句柄&lt;/strong&gt;的不同。网络 IO 能够用异步化的事件驱动的方式来管理，磁盘 IO 则不行。这个在我之前 Linux 句柄系列也详细提过这个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;socket 句柄可读可写事件都有意义，socket buffer 里有数据，说明对端网络发数据过来了，即满足可读事件。有 buffer 可以写，那么说明还能发送数据，满足可写事件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以 socket 的句柄实现了 &lt;code&gt;.poll&lt;/code&gt; 方法，可以用 epoll 池来管理。文件句柄可读可写事件则没有意义，因为文件句柄理论上是永远都是可读可写的，不会阻塞调用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以文件的 &lt;code&gt;.poll&lt;/code&gt; 一般是不实现的，所以自然也用不了 epoll 池来管理。而能否用 epoll 池来管理 fd 则决定了能否在 Go 里用 epoll 池 IO 复用的形式来实现 IO 并发。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;socket 句柄可以设置为 noblocking （非阻塞的方式），这样当网络 IO 还未就绪的时候就可以在 Go 代码里把调度权切走，去执行其他协程，这样就实现了&lt;strong&gt;网络 IO 的并发&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是磁盘 IO 则不行，文件 IO 的 read/write 都是同步的 IO ，没有实现 &lt;code&gt;.poll&lt;/code&gt; 所以也用不了 epoll 池来监控读写事件。&lt;span&gt;所以磁盘 IO 的完成只能同步等待。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;然而磁盘 IO 的等待则会带来 Go 最不能容忍的事情：卡线程&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;接下来就来看看磁盘 IO 的 read/write 等系统调用的原理。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5268817204301075&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsesdolc6YJHWRf1C8UTPs3scrsXWFoCHYsntUfbpKFrDicJ5tFbLPxBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;186&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;为什么 Go 不能容忍卡线程？&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.5520833333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsl8Q8jryjW8fJDBj8r4A48RcHDMj7ibJfRRhRWSJUUWNTqiaibDr9dmstQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;192&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Go 的代码执行者是系统线程，也就是 G-M-P 模型的 M ，M 不断的从队列 P 中取 G（协程任务）出来执行。当 G 出现等待事件的时候（比如网络 IO），那么立马切走，取下一个执行。这样让 M 一直不停的满载，就能保证 Go 协程任务的高吞吐。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么问题来了，如果某个 G 卡线程了，就相当于这个 M 被废了，吞吐能力就下降。如果 M 全卡住了那相当于整个程序卡死了。这个是 Go 绝对无法容忍的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然而对于类似系统调用这种卡线程却是无法人为控制的。Go runtime 为了解决这个问题，就只能创建更多的线程来保证一直有可运行的 M 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，你经常会发现，当系统调用很慢的时候，M 的数量会变多，甚至会暴涨。曾经，奇伢就遇到过，磁盘大量随机读，并且压力过载的情况，Go 程序线程数持续上涨，最终超过 1 万个被 panic 了。下面来看一下 Go 怎么处理这种系统调用的？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.5268817204301075&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsesdolc6YJHWRf1C8UTPs3scrsXWFoCHYsntUfbpKFrDicJ5tFbLPxBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;186&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;Go 的 read/write 系统调用&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.5520833333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsl8Q8jryjW8fJDBj8r4A48RcHDMj7ibJfRRhRWSJUUWNTqiaibDr9dmstQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;192&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当文件句柄 read/write 的时候，走系统调用回上下包装两个函数：entersyscall，exitsyscall ：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;   entersyscall&lt;br/&gt;   &lt;span&gt;// 系统调用 read/write &lt;/span&gt;&lt;br/&gt;   exitssyscall&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中，这两个调用都是为了和 Go runtime 的调度逻辑做交互，协商解决。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;entersyscall 的作用：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把当前 M 的 P 设置为 &lt;code&gt;_Psyscall&lt;/code&gt; 状态，打上标识
解绑 P -&amp;gt; M 的绑定，但 M 还保留 P 的指针。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;existsyscall 的作用：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于 M 到 P 的指向还在，那么优先还是用原来的 P
如果原来的 P 被处理掉了，那么就去用一个新的 P ，如果还没有，那就把只能挂到全局队列了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，你会发现，这里最重要的就是&lt;strong&gt;一个状态的标记&lt;/strong&gt;。Go 的 sysmon（内部监控线程）发现有这种卡了超过 10 ms 的 M ，那么就会把 P 剥离出来，给到其他的 M 去处理执行，M 数量不够就会新创建。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统调用的逻辑是属于 Go 程序外部代码，Go 用 entersyscall 和 exitsyscall 来包装一下，主要是和调度交互。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;思考一下，cgo 好像也是外部代码，它又是怎么解决阻塞可能导致的问题呢？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也是用的 entersyscall 和 exitssyscall 来配合哦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5268817204301075&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsesdolc6YJHWRf1C8UTPs3scrsXWFoCHYsntUfbpKFrDicJ5tFbLPxBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;186&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;总结&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.5520833333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gBJOYg4SEEUvEqC5oO30octlCXHubelsl8Q8jryjW8fJDBj8r4A48RcHDMj7ibJfRRhRWSJUUWNTqiaibDr9dmstQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;192&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b3b419e2fcbaa76437b224603e59262c</guid>
<title>微软开源的支持多平台多协议的网络性能检测工具 Ethr</title>
<link>https://toutiao.io/k/locmfe6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;h1&gt;&lt;strong&gt;&lt;span&gt;什么是 Ethr?&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;Ethr 是一个用 golang 编写的跨平台并可支持多种协议的网络性能测量工具。支持 TCP, UDP, HTTP, HTTPS 等多种协议，对带宽、连接/s, 延迟、数据包/s、丢失和抖动有一个全面的网络性能测量。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;Ethr 特性与优势&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;跨平台，支持多种协议&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持多线程，支持多客户端与单个服务器的通信&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;与其他工具相比提供了更多的测试指标&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可作为服务端或者客户端对网络性能进行测量&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;快速体验 Ethr&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;安装 Ethr&lt;/p&gt;&lt;pre&gt;go install github.com/microsoft/ethr@latest&lt;br/&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;启动服务端, 默认监听 8888 端口, 默认使用 TCP 协议&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;ethr -s -ui&lt;br/&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; ethr -s -ui -port 9999&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5990271021542738&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbCr99SbYSX37KXUDLP6RPnhp5UQxHRXmiczlGxWzIXQh0xmgickQpSibfqU9sZpZ2uHVgsNsH7geepfw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2878&quot;/&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;使用客户端进行测试&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;-c 指定 server&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-t 指定测试类型&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-p 指定协议&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-n 指定线程数&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-4 代表 ipv4(-6 代表 ipv6)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-d 表示测试时间&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;ethr -c localhost -t c -p tcp -n 64 -4 -d 100s&lt;br/&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5997220291869354&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbCr99SbYSX37KXUDLP6RPnhFSaIibicLia8Pz5j3X4o961LwGwc59NmrJGjhGVxbkoMrafuNo3UXZ1SQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2878&quot;/&gt;&lt;/p&gt;&lt;pre&gt;ethr -c localhost -t p -p udp -n 64 -6 -d 100s&lt;br/&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5981894150417827&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbCr99SbYSX37KXUDLP6RPnhRYibolibG5HNx088Fq6BG7KhkPiaJYt8lP8UysH8QIYegUNsI87icDLkicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2872&quot;/&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;对指定服务进行测试&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;-x 指定服务端地址&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-n 使用 8 个线程&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;-t c 测量每秒连接数&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5197080291970803&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbCr99SbYSX37KXUDLP6RPnhv8wVQgvBBUZNoF5hJqMljnGC8PqZH3IZse5GwLFtfu6qT3bIj1pWVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1370&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;更多使用请通过&lt;code&gt;ethr --help&lt;/code&gt; 进行查看。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;参考链接&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;END&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;br/&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA4ODg0NDkzOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbC53rq7PQziczkzCA4pIPx8Xdx2r0a6FgQWEicTOgFNY1KlJD3jSKQKlTiavwTUgHS1HMXza2RYApkDw/0?wx_fmt=png&quot; data-nickname=&quot;GoCN&quot; data-alias=&quot;golangchina&quot; data-signature=&quot;最具规模和生命力的 Go 开发者社区&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;span&gt;-猜你想看-&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4ODg0NDkzOA==&amp;amp;mid=2247498350&amp;amp;idx=1&amp;amp;sn=e3377f0b2545ea1ec7cd5a2dcec6f42c&amp;amp;chksm=9021458ba756cc9d3376b7fd092bd68f04e3ec6ac32cba4e21afdd3504f69dfaa85ff4171323&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;程序员的520是这样的&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;程序员的520是这样的···&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;想要了解Go更多内容，欢迎扫描下方👇 关注 公众号，回复关键词 [实战群]  ,就有机会进群和我们进行交流~&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5763688760806917&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbDrrBk1KBPqY1QNI320ZK2IIycDa77FcDQAeAFJRVb240xr8biceh23auy7ZpPibEYXPNOnmfsEewkw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;694&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;分享、在看与点赞，至少我要拥有一个叭~&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-ratio=&quot;0.2106667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/vbERicIdYZbB79dKphkWU3rVKFiaZGWHEic0qXJ8QAeF6XRTLwTCEgUxxiamV13wPv9kMtaqrOtsrVibdHzvYiaxCwgA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;750&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.696&quot; data-type=&quot;gif&quot; data-w=&quot;500&quot; class=&quot;__bg_gif&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/vbERicIdYZbB79dKphkWU3rVKFiaZGWHEicOoCY9eHaUhZY0vkZibusOg9ibjGibicfyjHiaWfkN9QOiclK2DnfLh4KYTLA/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4ODg0NDkzOA==&amp;amp;mid=2247498249&amp;amp;idx=1&amp;amp;sn=0b594beef93da4a8526fb5c901ef40ad&amp;amp;chksm=902145eca756ccfa776672ae43afd271eb62480c40cd36e33bf7fb9e166e185a2d69b330af94&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;eBPF编程指北&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>