<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>621d305343058841c91bdd86d920a3d6</guid>
<title>深入详解 APK 编译打包流程</title>
<link>https://toutiao.io/k/6sc6q4o</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;身为一个Android开发，一定要了解apk编译打包流程；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那么今天我们就来学习下；&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;apk的编译流程&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、apk文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;apk是Android Package的缩写；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;解压apk文件后包含AndroidManifest.xml、assets目录、classes.dex(还可能有 classes2.dex,classes3.dex...classesN.dex)、lib目录、META-INF目录、res目录和resources.arsc；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;classes.dex 是.dex文件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;resources.arsc是resources resources文件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;AndroidManifest.xml是AndroidManifest.xml文件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;res是uncompiled resources；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;META-INF是签名文件夹；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、打包流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img data-fileid=&quot;100001531&quot; data-ratio=&quot;1.6455223880597014&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/kyDL16ViavhGicOdiccAkVWpHHYZfFCWQPOYDYRZSOWOr3LhJwyicaGpPC3fMn6GHQkfGegsrL3v30hKWKPUFkXOoQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;536&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;打包中需要的工具&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;aapt：Android资源打包工具，${ANDROID_SDK_HOME}/platform-tools/appt&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;aidl：Android接口描述语言转化为.java文件的工具，${ANDROID_SDK_HOME}/platform-tools/aidl&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;javac：Java Compiler，${JDK_HOME}/javac或/usr/bin/javac&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;dex：转化.class文件为Davik VM能识别的.dex文件，${ANDROID_SDK_HOME}/platform-tools/dx&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;apkbuilder：生成apk包，${ANDROID_SDK_HOME}/tools/opkbuilder&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;jarsigner：.jar文件的签名工具，${JDK_HOME}/jarsigner或/usr/bin/jarsigner&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;zipalign：字节码对齐工具，${ANDROID_SDK_HOME}/tools/zipalign&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.1打包资源文件，生成R.java文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用aapt来打包res资源文件，生成R.java、resources.arsc和res文件（二进制 &amp;amp; 非二进制如res/raw和pic保持原样）；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;res目录&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;animator：这类资源以XML文件保存在res/animator目录下，用来描述属性动画；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;anim：这类资源以XML文件保存在res/anim目录下，用来描述补间动画；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;color：这类资源以XML文件保存在res/color目录下，用描述对象颜色状态选择子；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;drawable：这类资源以XML或者Bitmap文件保存在res/drawable目录下，用来描述可绘制对象。例如，我们可以在里面放置一些图片（.png, .9.png, .jpg, .gif），来作为程序界面视图的背景图；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;layout：这类资源以XML文件保存在res/layout目录下，用来描述应用程序界面布局；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;menu：这类资源以XML文件保存在res/menu目录下，用来描述应用程序菜单；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;raw：这类资源以任意格式的文件保存在res/raw目录下，它们和assets类资源一样，都是原装不动地打包在apk文件中的，不过它们会被赋予资源ID，这样我们就可以在程序中通过ID来访问它们。例如，假设在res/raw目录下有一个名称为filename的文件，并且它在编译的过程，被赋予的资源ID为R.raw.filename，那么就可以使用以下代码来访问它：&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;Resources&lt;/span&gt; res = getResources();  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attribute&quot;&gt;InputStream&lt;/span&gt; is = res .openRawResource(R.raw.filename);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;values：这类资源以XML文件保存在res/values目录下，用来描述一些简单值，例如，数组、颜色、尺寸、字符串和样式值等，一般来说，这六种不同的值分别保存在名称为arrays.xml、colors.xml、dimens.xml、strings.xml和styles.xml文件中；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;xml：这类资源以XML文件保存在res/xml目录下，一般就是用来描述应用程序的配置信息；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;resources.arsc文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;R.java文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.2处理AIDL文件，生成对应的.java文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.3编译Java文件，生成对应的.class文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.4把.class文件转化成Davik VM支持的.dex文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;转换所有的class文件，生成classes.dex文件。处理文件就是上一步生成的 .class 文件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用dx工具将java字节码转换为dalvik字节码、压缩常量池、消除冗余信息等；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通过dex命令，将.class文件和第三方库中的.class文件处理生成classes.dex；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.5打包生成未签名的.apk文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;将classes.dex、resources.arsc、res文件夹(res/raw资源被原装不动地打包进APK之外，其它的资源都会被编译或者处理)、Other Resources(assets文件夹)、AndroidManifest.xml打包成apk文件；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;注意：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;res/raw和assets的相同点：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;两者目录下的文件在打包后会原封不动的保存在apk包中，不会被编译成二进制；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;res/raw和assets的不同点：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.6对未签名.apk文件进行签名&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;android的应用程序需要签名才能在android设备上安装，签名apk文件有两种情况:&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在调试应用程序时，也就是我们通常称为的debug模式的签名，平时开发的时候，在编译调试程序时会自己使用一个debug.keystore对apk进行签名；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;正式发布时对应用程序打包进行签名，这种情况下需要提供一个符合android开发文档中要求的签名文件。这种签名也是分两种：JDK中提供的jarsigner工具签名 、android源码中提供的signapk工具；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.7对签名后的.apk文件进行对齐处理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;release mode 下使用 aipalign进行align，即对签名后的apk进行对齐处理；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Zipalign是一个android平台上整理APK文件的工具，它对apk中未压缩的数据进行4字节对齐，对齐后就可以使用mmap函数读取文件，可以像读取内存一样对普通文件进行操作。如果没有4字节对齐，就必须显式的读取，这样比较缓慢并且会耗费额外的内存；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在 Android SDK 中包含一个名为 “zipalign” 的工具，它能够对打包后的 app 进行优化。其位于 SDK 的 build-tools 目录下；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img data-fileid=&quot;100001530&quot; data-ratio=&quot;1.9498910675381265&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/kyDL16ViavhGicOdiccAkVWpHHYZfFCWQPOezA5Lic2tNeCUDViczQib9AfoINEKpozdticuOZzJxu6YjwrVuPvoRrcpg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;459&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;人生很有意思，就像升级打怪，打了一怪又一怪，虽然过程有辛苦有困难，有失败的危险，也有后退的风险，但是打一怪很有感觉；加油打工人！！！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ae05b106ee731485bcf6943dc3477adf</guid>
<title>Go 语言生态发展之路</title>
<link>https://toutiao.io/k/dx1odyi</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;2007 年 9 月 21 日，Robert Griesemer，Rob Pike 和 Ken Thompson 在一块白板上勾勒了一个新语言，并在几天内定下了计划和目标，作为一个自由时间的项目进行；2008 年年中，这个项目得到 Google 的全力支持，成为了一个全职项目；2009 年 11 月，Go 语言正式开源 &lt;sup&gt;[1]&lt;/sup&gt;，并于三年后发布 1.0 版本。发布 12 年至今，已有上百万开发者成为“gopher”，已经远超设计者最初的预期。&lt;/p&gt;&lt;h2&gt;# 源起 #&lt;/h2&gt;&lt;p&gt;Go 语言的开发团队可以说是高人云集：Ken Thompson 创造了 B 语言（C 语言前身），是 Unix 和 Plan9 操作系统的创立者之一，和 Dennis Ritchie 一起获得了 1983 年的图灵奖；Rob Pike 是 Unix 小组成员，也是 Limbo 语言和 UTF-8 编码的主要设计者；Robert Griesemer 曾参与制作 Google 的 JavaScript 引擎 V8、Java 的 HotSpot 虚拟机和领域特定语言 Sawzall &lt;sup&gt;[2]&lt;/sup&gt;（Sawzall 最早被 Google 用于处理大批量日志，后来基本被 Go 取代 &lt;sup&gt;[3]&lt;/sup&gt;）。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003339&quot; data-ratio=&quot;0.3712962962962963&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjneOn66yBoriadJPIOdgURFcRHUiajqrGGHHxpcwLSWQppl3erZLCt7Qqsw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;Go 语言的三位创始人在 Google I/O 2012 - Meet the Go Team&lt;/span&gt;&lt;/center&gt;&lt;p&gt;随着 Go 的发展，出现了一些声音称 Go 语言没什么技术优势，而 Rob Pike 对此的态度是“你们是对的”，Go 语言本身 “并不有趣”，其设计初衷不是为了推动编程语言设计的进步，是为改善软件工程的工作环境而生 &lt;sup&gt;[4]&lt;/sup&gt;。&lt;/p&gt;&lt;p&gt;当时 Google 面临着软件大规模增长的问题，开发方式变得缓慢而笨拙。规模化在各种维度上均存在，比如多核并行、生产需求和依赖关系等，导致硬件和软件都非常大，很多软件的代码多达百万行（大部分使用 C++、Java 或 Python）。Go 语言的诞生解决了大规模的软件开发中一些核心痛点，比如开发缓慢、不受控制的依赖关系、代码理解困难和重复造轮子等。 &lt;sup&gt;[5]&lt;/sup&gt;&lt;/p&gt;&lt;p&gt;官网描述 Go 语言可用于构建“简单、可靠、高效的大规模软件”，JetBrains 2021 年的最新调研报告显示，程序员们在工作中使用 Go 语言的比例达到了 61%（Rust 语言用于工作的比例仅 16%） &lt;sup&gt;[6]&lt;/sup&gt;。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003340&quot; data-ratio=&quot;0.6239669421487604&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjnejGuOPPpIHVWiaxsCIWKyg6Dy7uY5c3mQucNHwK6jjvNHExyG2bwjiaFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;484&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;使用 Go 的场景&lt;/span&gt;&lt;/center&gt;&lt;p&gt;可见 Go 确实不是一门“有趣”的编程语言，而更看重工程实践中的实用性，Go 语言设计中的方方面面都在体现这一点。&lt;/p&gt;&lt;h2&gt;# 演进 #&lt;/h2&gt;&lt;p&gt;版本更新历史 &lt;sup&gt;[7]&lt;/sup&gt; &lt;sup&gt;[8]&lt;/sup&gt;：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;2012 年 3 月，语言第一个正式版本 Go 1.0 发布，同时还有一份兼容性说明文档说明未来版本会确保向后兼容性。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2013 年 5 月，Go 1.1 发布，这个版本的编译器、垃圾回收机制、goroutine 调度器性能均有增强。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2014 年 12 月，Go 1.4 发布，堆栈大小减少了 10~30%；Android 官方支持包随版本一起发布；同时 Go 项目从 Google Code 迁移到了 Github。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2015 年 8 月，Go 编译器实现自举，完全移除了 C 语言；重新设计了垃圾回收器，支持并发，垃圾回收延迟显著降低，此后版本对垃圾回收器有更进一步的优化。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2018 年 8 月，Go 1.11 版本引入了 Go 模块功能，以响应在当年语言调研中反馈的模块管理问题；增加了实验性的 WebAssembly 支持。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2019 年 9 月，Go 1.13 版本中，改进了 sync 包 Pool 组件的资源被垃圾回收器清除的机制；重写了逃逸分析逻辑。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2020 年 8 月，Go 链接器得到了实质性的提高，减少了30% 的内存资源占用，提高了代码的可维护性。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2021 年 2 月，Go 1.16 支持了 macOS ARM64；同时默认使用 Go 模块功能（同样来自调研报告反馈的情况）。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2021 年 8 月，Go 1.17 发布，增加了对 Windows ARM64 的支持；语言有三个小的增强（unsage 包的两个新函数和语言类转换规则的扩展）。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Go 语言并没有特别激进的新特性，而是从早期的编程语言中继承了很多内容，并做了有效的组合 &lt;sup&gt;[9]&lt;/sup&gt;。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjnegBoB65vbBAdyHjLfSjPOZgOHwFxfLqDhEYkYXI9EOib6u594XoqHzpQ/640?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;669.8096885813148&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;594.5501730103806&quot; data-fileid=&quot;100003341&quot; data-ratio=&quot;0.8893871449925261&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjneSSftZg4yl8tB7U2JkQU6AJuwxicuBny5QA1ziaJBicqumarXHYoND2iarA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;669&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;影响 Go 语言设计的早期编程语言&lt;/span&gt;&lt;/center&gt;&lt;p&gt;Go 语言里一些广受开发者喜爱的特性 &lt;sup&gt;[10]&lt;/sup&gt;：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;并发性&lt;/strong&gt;：这是 Go 语言最大的特色，从语言层面支持并发，goroutine 和 channel 可以非常容易的实现安全高并发。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;高性能 Http Server&lt;/strong&gt;：通过简单的代码调用就可以快速实现基于协程的 Web 服务 &lt;sup&gt;[11]&lt;/sup&gt;，处理效率远高于 PHP。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;易部署&lt;/strong&gt;：直接编译成机器码，除了 glibc 没有其他外部依赖。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;易学习&lt;/strong&gt;：语言设计精简，25 个关键词表达能力强大；因为有 C 语言的基因，所以有 C 语言基础的开发者学习 Go 语言会非常轻松。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;工具链 &amp;amp; 库&lt;/strong&gt;：完善的工具链（代码分析、依赖管理等）和出色的标准库大大优化了开发者学习和应用的体验。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Go 发布至今还未正式支持泛型，甚至曾有很多人认为 Go 语言或许永远不会加泛型，但其实关于泛型的推进工作一直在进行，从 2020 年的调研报告来看，泛型是使用 Go 语言的开发者最需要的特性 &lt;sup&gt;[12]&lt;/sup&gt;。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003342&quot; data-ratio=&quot;0.615881809787627&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjneBsjajxB1Bz78medZzWVhGvJpnmQUj3805QLtmX468AYicU9NrZxHicrQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1083&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;2020 年 Go 开发者调研报告：最需要但还缺少的特性&lt;/span&gt;&lt;/center&gt;&lt;p&gt;2021 年初 Ian Lance Taylor 正式发布了添加泛型的提案，不出意外会在下一个版本 Go 1.18 中实现。&lt;/p&gt;&lt;h2&gt;# 社区 #&lt;/h2&gt;&lt;h3&gt;# 语言项目社区&lt;/h3&gt;&lt;p&gt;Go 语言项目在 2009 年开源，项目的 Star 数已达到 9 万。根据 GitHub 提供的数据 &lt;sup&gt;[13]&lt;/sup&gt;，截止 2021 年 10 月 20 日共有 166 人提交了超过 5 万次代码，其中 Go 语言项目成员占比 28.9%，贡献占比 64.9%，Google 员工（非语言项目成员）占比 24.7%，贡献占比 17.83%，贡献趋势如下图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003343&quot; data-ratio=&quot;0.4897959183673469&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjne9kSf4VYEFO6Z5qN1JRvfjBxibkpy1iaWibkMr1cdu02A5yamhdvVBdQqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;833&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;Go 语言项目代码提交情况&lt;/span&gt;&lt;/center&gt;&lt;p&gt;从代码提交情况来看，大部分贡献来自 Google 内部，近三年来每年的提交人数稳定在 70~80 人。&lt;/p&gt;&lt;p&gt;参与社区提交 Issue 的用户数量也在持续增长，不过目前开启中的 Issue 仍有超过 7000 个，有近一半为“待调查分类”，可能为无效的 Issue。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003344&quot; data-ratio=&quot;0.379874213836478&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjneGezOicGwjMYb856dQv6iblu1lmsoA731FTCBQw0FdCcm0a1hve6rgEicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;795&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;Go 语言项目 Issue 创建情况&lt;/span&gt;&lt;/center&gt;&lt;p&gt;除了语言本身项目，语言的社区其实是更加广义的，使用 Go 语言的开发者有一个可爱的昵称 “Gopher”。&lt;/p&gt;&lt;h3&gt;# “Gophers” 社区&lt;/h3&gt;&lt;p&gt;在 GolangUK 2015 会议上，Damian Gryski 提到了 “Gophers” 的文化，这是开发者被 Go 吸引进而成为 “Gopher” 的原因 &lt;sup&gt;[14]&lt;/sup&gt;。“Gophers” 的社区文化：&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;txt&quot;&gt;- Code&lt;br/&gt;    - gofmt&lt;br/&gt;    - if err != nil { ... }&lt;br/&gt;    - go vet&lt;br/&gt;    - go build -race&lt;br/&gt;    - golint (CodeReviewComments)&lt;br/&gt;    - godoc.org/github.com/user/package&lt;br/&gt;    - go get&lt;br/&gt;    - limited use of interface{}&lt;br/&gt;&lt;br/&gt;- Social&lt;br/&gt;    - Simple is better than complex&lt;br/&gt;    - Performance matters&lt;br/&gt;    - Costs are visible&lt;br/&gt;&lt;/pre&gt;&lt;p&gt;SlashData 在 2021 年初发布的开发者调研显示 Go 开发者人数已超过 200 万，社区人数排行第十 &lt;sup&gt;[15]&lt;/sup&gt;。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003345&quot; data-ratio=&quot;1.0293296089385475&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjneib9DLLuBWTnCmpTJpHfu6mVWzMmGBEkrSZDn48RPrlzWjbaTYiaWSpEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;716&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;编程语言社区人数&lt;/span&gt;&lt;/center&gt;&lt;p&gt;在官方调研报告中，约半数开发者清楚了解如何给社区贡献，而感到自己的贡献是受欢迎的开发者比例约为 60%，这两个比例都在逐年提升 &lt;sup&gt;[12]&lt;/sup&gt;。接受调研的开发者其实已经是相对活跃的，主观感受会导致调研结果有误差，但整体来看，仍有越来越多开发者愿意参与到社区贡献中。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003346&quot; data-ratio=&quot;0.8143021914648212&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjne5QdbtgL5NgKicBPnrz06c08GnpTdvicvfc1RqHrY7ibV2lP3Vth5ibszqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;867&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;Go 开发者调研报告 2020：社区满意度&lt;/span&gt;&lt;/center&gt;&lt;p&gt;活跃于社区的开发者通过邮件、媒体论坛、固定会议等交流 &lt;sup&gt;[16]&lt;/sup&gt;，有约 30% 开发者会频繁参与到开源项目中 &lt;sup&gt;[12]&lt;/sup&gt;，但更多开发者并不会发出声音，他们在实践中使用 Go，也切实的从社区资源中获益。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;邮件列表：golang-nuts、golang-dev、golang-announce&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;用户群和会议：GoBridge、GoDiscourse、GopherCon&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;媒体论坛：The Go Forum、Gophers Slack Channel、Golang News、Twitter、Stack Overflow、Reddit 等&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;# 应用 #&lt;/h2&gt;&lt;p&gt;GitHub 上 Go 为主要语言的开源项目已超过 10 万个，约 24 万开发者在这些开源项目中提交 PR &lt;sup&gt;[17]&lt;/sup&gt;。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003347&quot; data-ratio=&quot;0.33530106257378983&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjneiciaE5FzSEFTg2OJgxzxmzy6ZcnQDaGgJ6OV8rc5CY6LogcxHOHzh2dw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;847&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;GitHub 上每月新创建的 Go 语言项目数&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;span&gt;官方调研报告显示，Go 应用最多的领域是 Web 开发，此外也被广泛应用于数据库、DevOps、网络编程和系统编程；&lt;/span&gt;&lt;span&gt;在科学计算、手机等方面的应用较少 &lt;/span&gt;&lt;sup&gt;[12]&lt;/sup&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003348&quot; data-ratio=&quot;1.306779661016949&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjnedIc6iaib0FGfKL1uN9bmxSMTwaibNHnqD9uLaFzzyuryyKCZEnCk5vvxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;590&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;Go 开发者调研报告 2020：应用领域&lt;/span&gt;&lt;/center&gt;&lt;p&gt;这一点从开源项目中也可以了解到，2021 年截止 9 月最活跃的仓库（根据 PR 数量排序）基本上都与数据库、微服务平台和容器编排相关 &lt;sup&gt;[17]&lt;/sup&gt;。Go 已成为云基础架构的语言，这绝不是偶然，最初 Go 的设计目的就是让 Google 工程师能更高效的编写“云端”软件。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003349&quot; data-ratio=&quot;0.5109489051094891&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjneTfDWMpLFYCiaRlBQsBGMr8jqTRE2VgsI5TNcN1ZdNb1MYZaJllibhAEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;685&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;2021 年 GitHub 活跃仓库（根据 PR 数量排序）Top 10&lt;/span&gt;&lt;/center&gt;&lt;p&gt;2013 年 Matt Stine 首次提出云原生（CloudNative）概念，2015 年云原生计算基金会（CNCF，Cloud Native Computing Foundation）成立，致力于发展推广云原生技术。CNCF 给云原生的定义中提到了目前的代表技术包括容器、服务网格、微服务、不可变基础架构和声明式 API 等 &lt;sup&gt;[18]&lt;/sup&gt;。&lt;/p&gt;&lt;p&gt;&lt;span&gt;图片可上下滑动&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;635&quot; data-backw=&quot;549&quot; data-fileid=&quot;100003355&quot; data-ratio=&quot;1.15859375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjneYOYkALhd9Cq9WB0b2QU1GamkEKfOppa0iahaRJfSzJy8RHbiafgeL34Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;云原生基础设施的很多代表性项目均为 Go 语言实现，这些技术的普及又带动了 Go 语言的推广，可以说 Go 语言和“云”是相互成就的。&lt;/p&gt;&lt;p&gt;国内如 PingCAP、腾讯、百度和京东等大公司均有 Go 语言的应用，2020 年 JetBrains 的开发者生态系统调研中，中国有 16% 的开发者在使用 Go 语言 &lt;sup&gt;[19]&lt;/sup&gt;。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003350&quot; data-ratio=&quot;0.5195968645016797&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWWWIzv1nA9olTutibzTQjne8tdl4Bk0jGUJPOWzq62tMTH9kc7Le6BrFuwOuOibQwN5GgMcnkmvJCg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;893&quot;/&gt;&lt;/p&gt;&lt;center&gt;&lt;span&gt;Go 语言开发者地域分布&lt;/span&gt;&lt;/center&gt;&lt;h2&gt;# 总结 #&lt;/h2&gt;&lt;p&gt;回顾 Go 语言的发展情况，我们可以清楚地看到：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1. 针对开发痛点的语言特性&lt;/strong&gt;：Go 从语言层面支持并行，部署简单，很好的解决了软件开发各维度规模化中出现的痛点。&lt;br/&gt;&lt;strong&gt;2. 低学习曲线&lt;/strong&gt;：可以快速上手并投入实际开发工作。&lt;br/&gt;&lt;strong&gt;3. 开发者体验不断改善&lt;/strong&gt;：开源社区运营，有完整的工具链、标准库和一些不错的开发框架。&lt;br/&gt;&lt;strong&gt;4. “杀手级”应用&lt;/strong&gt;：Docker、Kubernetes 出现，云计算技术不断完善普及，云原生概念兴起。&lt;br/&gt;&lt;strong&gt;5. 巨头公司支持&lt;/strong&gt;：大量国内外公司在使用 Go 语言开发，也会作为 Go 语言发展的支持后盾。&lt;/p&gt;&lt;p&gt;技术发展过程中，会顺应需求出现不同的开发工具或者说材料，Go 语言所有的特点都是为了实现更加高效的大规模开发而生，至少在云原生领域，Go 语言的地位已很难动摇。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;扩展阅读&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;《Go语言设计与实现》会在今年年底正式出版，感兴趣的小伙伴可以看这里：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjYxODQzNQ==&amp;amp;mid=2247486885&amp;amp;idx=1&amp;amp;sn=42c4393d144998eca9a413754316503e&amp;amp;chksm=cf2e3a09f859b31f879aac49d633c6fd21e6b82c6b037e1e43e1c27db1a2eed0d92e4b68f83f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《Go语言设计与实现》纸质书诚邀读者评论&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《Go语言设计与实现》纸质书诚邀读者评论&lt;/a&gt; &lt;span&gt;(作者：&lt;span&gt;Draveness&lt;/span&gt;)&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;参考&lt;/h2&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[1]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;What is the history of the project? - golang.org https://golang.org/doc/faq#history&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[2]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Go (programming language) - wikipedia https://en.wikipedia.org/wiki/Go_(programming_language) &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[3]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;https://www.unofficialgoogledatascience.com/2015/12/replacing-sawzall-case-study-in-domain.html&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[4]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;The Go Programming Language and Environment - UNSW Computing https://www.youtube.com/watch?v=YXV7sa4oM4I&amp;amp;t=1136s&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[5]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Go at Google: Language Design in the Service of Software Engineering https://talks.golang.org/2012/splash.article&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[6]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;The State of Developer Ecosystem 2021: Go - JetBrains https://www.jetbrains.com/lp/devecosystem-2021/go/&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[7]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Go: Retrospective https://medium.com/a-journey-with-go/go-retrospective-b9723352e9b0 &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[8]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Release History - golang.org https://golang.org/doc/devel/release&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[9]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Go语言起源 - Go语言圣经（中文版) https://books.studygolang.com/gopl-zh/ch0/ch0-01.html&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[10]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;为什么要使用 Go 语言？Go 语言的优势在哪里？- 知乎 https://www.zhihu.com/question/21409296&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[11]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;大道至简—GO语言最佳实践 https://cloud.tencent.com/developer/article/1145176?fromSource=waitui &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[12]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Go Developer Survey 2020 Results - golang.org https://go.dev/blog/survey2020-results&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[13]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;list commits - GitHub REST API https://docs.github.com/cn/rest/reference/repos#commits &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[14]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;The Go Community https://dgryski.medium.com/the-go-community-f0d00e3a19e &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[15]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;State of the Developer Nation 20th edition - SlashData &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[16]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Wiki: The Go Community - GitHub https://github.com/golang/go/wiki#the-go-community &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[17]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;GH Archive https://www.gharchive.org/ &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[18]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;cncf https://www.cncf.io/&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;[19]&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;Go 语言现状调查报告 - JetBrains https://blog.jetbrains.com/zh-hans/go/2021/02/19/the-state-of-go/ &lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;END&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-fileid=&quot;100003358&quot; data-ratio=&quot;1.3&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWwxPjev2GLfMjMWl1cvQhA88fiatpMHLKuqQeHHYCg1cnjeibaUohZwx4N40DvbkwyV0CRj1DQPZrQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;img class=&quot;rich_pages&quot; data-fileid=&quot;100003357&quot; data-ratio=&quot;1.3&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibTyIoHSmLjWwxPjev2GLfMjMWl1cvQhAhnicntvlJciaYsjq1YAywGGze1ibW67icCQl5bb7fePwYzsQ0DBCpGHib9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1e6075ff560a643586c955520df38d69</guid>
<title>2021 年还剩不到 2 个月啦！抓紧啦！</title>
<link>https://toutiao.io/k/9ecx58l</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;码农周刊是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;码农周刊是一份专为广大程序员、编程爱好者们打造的 IT 技术周刊。每周发送。&lt;br/&gt;2013 年 9 月 12 日创刊至今，已发送 300 多期，订阅用户超 20 万。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;专业、简单、有用&lt;/span&gt;&lt;span&gt;，是我们一直坚持的办刊宗旨。一路走来，我们见证了不少订阅用户从编程新手进阶成了高级程序员、架构师、CTO……&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2020 年 4 月，为了给用户提供更优质的服务，我们推出了「&lt;/span&gt;&lt;span&gt;码农周刊VIP会员&lt;/span&gt;&lt;span&gt;」服务。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;你与 BAT 技术大牛，只差一份「码农周刊VIP会员」的距离！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;VIP会员特权&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. 52 期码农周刊VIP会员&lt;span&gt;专属邮件周报&lt;/span&gt;，让你及时掌握技术动向；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 只限VIP会员加入的&lt;span&gt;交流圈子&lt;/span&gt;，让你与技术大牛切磋学习；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3. VIP会员独享的&lt;span&gt;工作机会&lt;/span&gt;，为你介绍好公司的好机会；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4. 更多会员特权，持续更新……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何加入「码农周刊VIP会员」？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1. 微信扫描下方二维码，加入码农周刊VIP会员知识星球。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;促销期间，一年仅需 108 元！平均一天花费不到 3 毛！&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;34&quot; data-cropselx2=&quot;356&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;425&quot; data-ratio=&quot;1.0857487922705313&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNav8Byw4xNoV6O2YGutfKmQLKuMZEIhBJF6MrQvoShfIAT6u3dXs6VZRzwSa2eT9jcekfaYuaOD6Hhw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;828&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 加入码农周刊VIP会员知识星球后，客服会联系您，请留意知识星球内的私信。&lt;br/&gt;3. 客服向您发送码农周刊VIP会员欢迎邮件，开启您的码农周刊VIP会员之旅。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;心动不如心动，赶快订阅吧！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1f6eaf164eb4bb3309e9bc8ef2709738</guid>
<title>Linux 文本三剑客之 sed</title>
<link>https://toutiao.io/k/lrgzova</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;h1 cid=&quot;n172&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;Linux 文本三剑客 - sed&lt;/span&gt;&lt;/h1&gt;&lt;p cid=&quot;n175&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sed&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 是 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;stream editor&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 的缩写，它一种流编辑器，它一次处理一行内容 。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n176&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;基本用法如下：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;shell&quot; cid=&quot;n177&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;# sed --help&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;sed&lt;/span&gt; [OPTION]... {script-only-if-no-other-script} [input-file]...&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;# sed [参数] &#x27;范围 操作&#x27;  文件&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n178&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;例：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;shell&quot; cid=&quot;n179&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;sed&lt;/span&gt; &lt;span&gt;-n&lt;/span&gt; &lt;span&gt;&#x27;1,4 p&#x27;&lt;/span&gt; demo.txt  &lt;span&gt;# 打印demo.txt文件1~4行的内容&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n180&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;h2 cid=&quot;n181&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;常用选项参数&lt;/span&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n182&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n184&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;-n&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 使用安静（silent）模式。加上-n参数后，则只有经过 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sed&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 特殊处理的那一行（或者command）才会被列出来。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n186&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;-i&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 直接编辑原文件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n188&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;-i.bak&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 直接编辑原文件，同时会生成一个.bak的备份文件。推荐使用这种方式。防止误操作&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n190&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;-f&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;  &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;-f filename&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 可以执行filename内的 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sed&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 命令&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n192&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 多点编辑&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 cid=&quot;n193&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;范围选择&lt;/span&gt;&lt;/h2&gt;&lt;p cid=&quot;n194&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;sed 可以很灵活的查找对应范围的内容，常见的范围选择如下：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n195&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n197&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;2&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 选择第二行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n199&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;$&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 选择最后一行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n201&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;2,5&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 选择 2~5行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n203&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;1~2&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 奇数行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n205&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;2~2&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 偶数行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n207&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;1,$&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 第一行到文件最后一行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n208&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;另外 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sed&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 还支持正则匹配。比如：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n209&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n211&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;/name/&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 出现name 字符的行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n213&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;/name/,+3&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 出现 name 字符的行内容以后边的3行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n215&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;/^xxx/&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 选择已 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;xxx&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 开头的行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n217&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;/xxx/,/yyy/&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;  出现 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;xxx&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 的行以及出现 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;yyy&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 行之间的数据&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n219&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;常见正则匹配表达式如下：&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n220&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n222&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;^&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 匹配行开始。如：&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;/^sed/&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 以sed开头的行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n224&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;$&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 匹配行结束。如：&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;/sed$/&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 以sed结尾的行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n226&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;.&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 单个字符&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n228&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;*&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 0个或者多个匹配&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n230&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;+&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 1个或者多个匹配&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n232&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;?&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 0个或者1个匹配&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n234&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;x\{m,n\}&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;  重复连续字符x,m-n次数&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n236&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;`x&lt;/span&gt;&lt;span md-inline=&quot;escape&quot;&gt;{&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;m&lt;/span&gt;&lt;span md-inline=&quot;escape&quot;&gt;}&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; # 重复字符x，m次，如：/0&lt;/span&gt;&lt;span md-inline=&quot;escape&quot;&gt;{&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;5&lt;/span&gt;&lt;span md-inline=&quot;escape&quot;&gt;}&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;/匹配包含5个0(连续的)的行。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p cid=&quot;n237&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;h2 cid=&quot;n238&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;常见操作&lt;/span&gt;&lt;/h2&gt;&lt;h2 cid=&quot;n247&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;常用技巧&lt;/span&gt;&lt;/h2&gt;&lt;p cid=&quot;n248&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;显示第一行的内容&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n249&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;sed -n &#x27;1&#x27;p filename&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n250&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;显示第三行到最后一行的内容&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n251&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;sed -n &#x27;3,$&#x27;p filename&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n252&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;显示匹配 name 关键的行&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n253&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;sed -n &#x27;/name/&#x27;p&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n254&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;打印出现 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 的行以及出现 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;&amp;lt;/command&amp;gt;&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 行之间的数据&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n255&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;sed -n &#x27;/&amp;lt;command&amp;gt;/,/&amp;lt;\/command&amp;gt;/ p&#x27;  demo.txt&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n256&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;打印长度不小于5个字符的行&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n257&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt; sed -n  &#x27;/^.\{5\}/ p&#x27; demo.txt&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n258&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;删除所有的空行&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n259&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;sed -e &#x27;/^$/ d&#x27; demo.txt&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n260&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;删除行首的空格&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;shell&quot; cid=&quot;n261&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;sed&lt;/span&gt; &lt;span&gt;-e&lt;/span&gt; &lt;span&gt;&#x27;s/^[ \t]*//g&#x27;&lt;/span&gt; demo.txt&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n262&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;删除行尾的空格&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;shell&quot; cid=&quot;n263&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;sed&lt;/span&gt; &lt;span&gt;-e&lt;/span&gt; &lt;span&gt;&#x27;s/[ \t]*$//g&#x27;&lt;/span&gt; demo.txt&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n264&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;给文件的每一行使用双引号包围起来&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n265&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;sed  -e &#x27;s/.*/&quot;&amp;amp;&quot;/g&#x27; demo.txt&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n266&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;将文件的内容多行换成单行，同时每一行过滤掉收尾的空格并且使用双引号包围起来&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n267&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;例如：&lt;/span&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n268&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n269&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;abc&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n271&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;123&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p cid=&quot;n272&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;转成如下格式：&lt;/span&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n273&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n274&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&quot;abc&quot;,&quot;123&quot;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;shell&quot; cid=&quot;n275&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;sed&lt;/span&gt; &lt;span&gt;-e&lt;/span&gt; &lt;span&gt;&#x27;s/[ \t]*$//g&#x27;&lt;/span&gt; &lt;span&gt;-e&lt;/span&gt;  &lt;span&gt;&#x27;s/^[ \t]*//g&#x27;&lt;/span&gt; &lt;span&gt;-e&lt;/span&gt; &lt;span&gt;&#x27;/^$/ d&#x27;&lt;/span&gt; &lt;span&gt;-e&lt;/span&gt; &lt;span&gt;&#x27;s/.*/&quot;&amp;amp;&quot;/g&#x27;&lt;/span&gt; demo.txt |tr &lt;span&gt;&quot;\n&quot;&lt;/span&gt; &lt;span&gt;&quot;,&quot;&lt;/span&gt; |sed &lt;span&gt;-e&lt;/span&gt; &lt;span&gt;&#x27;s/,$//g&#x27;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;# 这里还有一个相对简单的命令也可以起到相同的目的，不过行内字符串中间有空格或者换行符时得到的结果可能会不同&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&#x27;&quot;&#x27;&lt;/span&gt;&lt;span&gt;`awk &#x27;{print &lt;/span&gt;&lt;span&gt;$1&lt;/span&gt;&lt;span&gt;}&#x27; demo.txt |xargs |sed &#x27;s/ /&quot;,&quot;/g&#x27;`&lt;/span&gt;&lt;span&gt;&#x27;&quot;&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>15f642b0545f332493a7529770c548a2</guid>
<title>康威定律</title>
<link>https://toutiao.io/k/nfsw3d7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;blockquote&gt;&lt;p&gt;&lt;em&gt;康威定律告诉我们：软件架构反映了组织架构。因此通过调整组织架构，反过来也能推动软件架构的演进。原文：Conway’s Law&lt;span&gt;[1]&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;通过改变组织架构来改变软件架构。&lt;/p&gt;&lt;p&gt;马尔文·康威（Melvin Conway）在他发表的论文《How Do Committees Invent?》中，将45段观点总结成了一句话：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;任何组织所设计的系统（此处的定义比信息系统宽泛得多）架构，都不可避免的反映为该组织沟通结构的副本。——康威定律&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;康威定律认为，软件架构最终会是沟通（组织）结构的映射。&lt;/p&gt;&lt;p&gt;下面是一个前后端团队的常见例子。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000540&quot; data-ratio=&quot;0.6684073107049608&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rAgicPQgUicBq1qcuDPekViaNutiaU0KkbHgzIJQwn5ibLjiasuwud9phBAmrw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;383&quot;/&gt;&lt;/p&gt;&lt;p&gt;下面是我们想要的架构。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000542&quot; data-ratio=&quot;0.6692307692307692&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rAzOHGniaZic56TgWuu7eV9gy3icf1VSPQIj6pvEtLrsnIzf5UcficUkv6yQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;390&quot;/&gt;&lt;/p&gt;&lt;p&gt;然后我们根据经验，组织前端和后端团队。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000544&quot; data-ratio=&quot;0.3963730569948187&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rAXkdc6TnAcagriaRkiaqa1HOUiazgFyJdyhoYCmsFJJbVxJQysMN83DQHA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;386&quot;/&gt;&lt;/p&gt;&lt;p&gt;最终后端团队将在同一个应用程序代码中处理API和后端工作，并将其作为单个应用程序部署。&lt;/p&gt;&lt;p&gt;这也证明了Ruth Malan的话：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果系统的体系架构和组织的体系架构不一致，组织的体系架构将会获胜。——Ruth Malan&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;不过，它适用于单一代码库（monorepo）吗?&lt;/p&gt;&lt;h1&gt;康威定律与软件模块化&lt;/h1&gt;&lt;p&gt;假设我们有一个单体应用，有许多团队在一个单一代码库（monorepo）里提交代码，康威定律适用这种情况吗？&lt;/p&gt;&lt;p&gt;2008年，艾伦·D·麦科马克（Alan D. MacCormack）、约翰·鲁斯纳克（John Rusnak）和卡莉斯·Y·鲍德温（Cariss Y. Baldwin）对“镜像”假设进行了测试&lt;span&gt;[2]&lt;/span&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;与紧密耦合的组织相比，松散耦合的组织倾向于开发更为模块化的产品。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;他们在研究中分析了功能相同但由两种相反的组织模式构建的软件，商业（紧耦合）和开源（松耦合）。他们使用一种称为设计结构矩阵（DSMs，Design Structure Matrices）的技术来可视化不同软件的架构，通过计算度量来比较它们的模块化级别。&lt;/p&gt;&lt;p&gt;结果显示在模块化方面两者表现出显著的差异。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000541&quot; data-ratio=&quot;0.46409807355516636&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rAdOtMryJZiasPAj9nsggqeAZaJOd525gwwCRoV4xGrNPBPBYEUcKmgXg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;571&quot;/&gt;&lt;/p&gt;&lt;p&gt;在商业组织中，开发团队在一起工作，通过面对面的交互来解决问题，由于可以很方便的找到其他模块的开发人员，他们可以实现性能的最优化。因此自然而然的，生产出了紧密耦合（如左图）的软件。&lt;/p&gt;&lt;p&gt;在开源组织中，大多数开发人员很少或从不见面。由于通信有限，因此模块化的好处更大。软件需要模块化（如图所示），这样贡献者才能很容易的理解设计，以便开发新特性或修复缺陷，而不会影响系统的其他部分。&lt;/p&gt;&lt;h1&gt;康威定律与团队设计&lt;/h1&gt;&lt;p&gt;当组织从一个小型跨职能团队成长为许多大型专业团队时，通常我们会围绕技术组织团队，因此我们将拥有几个前端团队（Web和移动）和一个后端团队。&lt;/p&gt;&lt;p&gt;团队每天都要紧密合作，在所有平台上发布功能。沟通路径可能是这样的：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000543&quot; data-ratio=&quot;0.89&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rApcsmsWEQVaQLUgJFVHuTfXgD9mvRskbdA6XV4hckc77LH4Bk3RboWg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p&gt;很自然的，最终软件体系架构将反映沟通的路径。&lt;/p&gt;&lt;p&gt;另一方面，如果我们将团队组织为跨功能团队，并且每个团队都独立工作，那么我们将生成一个面向服务的或微服务的体系架构。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000545&quot; data-ratio=&quot;1.0277777777777777&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/9utHkjMdE0UHoicgibHFic6ty4zgapSP5rAYF7j74ictyWNGyQfLAicNDDsmweAeibm1I6kTQicHBS7xvPLlToUVqUagg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;360&quot;/&gt;&lt;/p&gt;&lt;p&gt;这是否意味着设计软件架构是毫无意义的？简单来说答案是否定的。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;“逆康威模式（Inverse Conway Maneuver）”建议我们演进团队和组织架构，以促进实现想要的架构。——逆康威模式&lt;span&gt;[3]&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;软件架构对于构建快速、安全的软件至关重要。通过优化我们的团队架构，以实现所需的架构，并支持团队获得更快、更安全的完成工作的能力。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;References:&lt;/span&gt;&lt;br/&gt;[1] https://just4sky.medium.com/conways-law-99fbbff9ccf0&lt;br/&gt;[2] https://hbswk.hbs.edu/item/exploring-the-duality-between-product-and-organizational-architectures-a-test-of-the-mirroring-hypothesis&lt;br/&gt;[3] https://www.thoughtworks.com/radar/techniques/inverse-conway-maneuver&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;你好，我是俞凡，在Motorola做过研发，现在在Mavenir做技术工作，对通信、网络、后端架构、云原生、DevOps、CICD、区块链、AI等技术始终保持着浓厚的兴趣，平时喜欢阅读、思考，相信持续学习、终身成长，欢迎一起交流学习。&lt;br/&gt;微信公众号：DeepNoMind&lt;/p&gt;&lt;/blockquote&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>