<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>388759ca9f5be095f9caa96d9f0f4be5</guid>
<title>[推荐] 如何提升系统可用性？</title>
<link>https://toutiao.io/k/4whx0p6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content&quot; itemprop=&quot;articleBody&quot;&gt;&amp;#13;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/02/1-how-to-improve-system-availability.png&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/02/1-how-to-improve-system-availability.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;相传魏文王和名医扁鹊之间曾经发生过这样一段对话：&lt;/p&gt;
&lt;p&gt;魏文王：“你们兄弟三人，谁是医术是最好的呢? ”&lt;/p&gt;
&lt;p&gt;扁鹊：“大哥最好，二哥差些，我是三人中最差的一个。”&lt;/p&gt;
&lt;p&gt;魏文王：“那为什么你的名气最大？”&lt;/p&gt;
&lt;p&gt;扁鹊：“大哥治病，是治病于病情发作之前，病人尚未发病即已根除病因，使得他的医术没有得到认可，没什么名气；二哥治病，是治病于病情初起时，二哥药到病除，大家认为二哥善治小病，名气只在本乡里；而我是治病于病情严重之时，大家看到我或在经脉上穿刺放血，或在患处敷以毒药以毒攻毒，或动大手术直指病灶，使重病人病情得到缓解或治愈，所以以为我的医术高明，名气因此响遍全国。”&lt;/p&gt;
&lt;p&gt;在上面这个小故事中，根据医生治病发生在病情发展的不同时期可以分为三个阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;病发前，施以小术，代价非常小，却很容易根除病因。&lt;/li&gt;
&lt;li&gt;病发初期，患者小恙，对症下药，也能很快治愈。&lt;/li&gt;
&lt;li&gt;病情严重，患者身体损伤极大，要施以非常手段才有可能救治病患，代价很大，也很容易留下后遗症。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;技术人员治理系统犹如医生治病救人，为了保证系统能够稳定地对外提供服务，有比较高的可用性，需要关注系统发展的整个生命周期，见微知著，一方面能够识别软件开发中潜在的问题，尽早解决；另一方面当系统出现小问题，不要忽视，及时处理；最后当系统发生较大问题时，也能够使用雷霆手段快速恢复，保证系统可用。&lt;/p&gt;
&lt;p&gt;为了提高系统的可用性，这三个阶段我们都需要关注，本文会通过分析影响系统可用性的因素，尝试找出在这三个阶段我们需要采取的必要措施。&lt;/p&gt;
&lt;h3&gt;什么是系统可用性？&lt;/h3&gt;
&lt;p&gt;首先我们来看看维基百科上对可用性的一些定义：&lt;/p&gt;
&lt;p&gt;可用性就是一个系统处在可工作状态的时间的比例&lt;/p&gt;
&lt;p&gt;系统可用性是衡量一个系统正确地对外提供服务（可工作）的能力。我们通常采用SLA（Service Level Agreement）来衡量系统可用性，也就是我们经常听到的的几个9，其对应的系统不可用时间可以参照下表：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/02/2-how-to-improve-system-availability.jpg&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/02/2-how-to-improve-system-availability-768x419.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3个9（99.9%）表示一个月最多不超过43.8分的不可用时间，对于每月例行停机维护的系统基本很难达到；5个9（99.999%）要求一年内系统不可用的时长不超过5分钟，听起来就觉得不可思议。&lt;/p&gt;
&lt;h3&gt;哪些因素会影响系统的可用性&lt;/h3&gt;
&lt;p&gt;除了人为原因导致的故障，基础设施的定期维护，硬件设备损坏，自然灾害等等都会导致系统不可用，因此100%的系统可用性是基本不可能达到的；要提高系统可用性，我们得先分析影响可用性的问题发生的原因和影响，下面根据我的经验列举一些会对系统可用性产生较大影响的因素：&lt;/p&gt;
&lt;h4&gt;人员误操作&lt;/h4&gt;
&lt;p&gt;经典如rm -rf . /的操作在日常的开发过程中并不少见，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在生产环境执行了IDE导出的数据恢复脚本，不慎选中了DROP TABLE，结果删除了整表的数据&lt;/li&gt;
&lt;li&gt;在生产环境中清理冗余的Docker镜像文件时，不慎删除了所有镜像&lt;/li&gt;
&lt;li&gt;本该在测试环境执行的脚本，错误的跑在了生产环境的数据库上&lt;/li&gt;
&lt;li&gt;…… &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据、文件存储等无疑是大多数企业的核心资产，涉及到数据的故障往往都是非常大的故障，不仅影响范围非常大，如果前期没有足够的灾备准备，是很难在短时间内恢复的，甚至可能无法恢复，造成巨大损失。&lt;/p&gt;
&lt;h4&gt;雪崩效应&lt;/h4&gt;
&lt;p&gt;在分布式系统架构下，服务之间需要配合来完成复杂的业务流程，某个服务提供者的不稳定在请求量变大的情况下，会逐步演化成整个系统的雪崩效应。&lt;/p&gt;
&lt;p&gt;雪崩效应通常会经历如下过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务提供者不可用（宕机或性能较差）&lt;/li&gt;
&lt;li&gt;服务调用者请求量增加（业务量增加、失败重试、缓存穿透等）&lt;/li&gt;
&lt;li&gt;服务调用者系统资源耗尽，服务调用者不可用&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;雪崩会造成整个系统的瘫痪，以我们的系统曾经经历了一次雪崩为例，一个核心服务在没有代码变化的情况下，增加了用户量（可以理解为对用户分批开放），在数据基数增大和请求量增大时，服务的接口性能无法满足需求，陡增的请求量对数据库了造成非常大的压力（CPU占满），接口全部超时，导致长时间占用API Gateway的连接资源，API Gateway无法处理其他请求，进而导致了整个系统的瘫痪，如下图：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/02/3-how-to-improve-system-availability.png&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/02/3-how-to-improve-system-availability-768x194.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本质上来讲雪崩的发生是因为服务提供者无法满足当前业务的高并发需求，同时也没有很好的应对措施保证系统其他服务的正常运转。&lt;/p&gt;
&lt;h4&gt;未经完整测试的版本发布&lt;/h4&gt;
&lt;p&gt;以上两类故障的发生通常会引发非常严重的问题，但频率相对较低，而定期的版本发布常常因为没有经过完整的测试导致线上故障发生，严重的情况下也会对可用性产生很大的影响。&lt;/p&gt;
&lt;p&gt;随着系统服务年限的增长，业务的增长让系统变的越来越复杂，依赖人工的黑盒测试基本上很难覆盖所有业务场景（我们曾经有一个开发了3年多的系统，在没有自动化回归测试的情况下，每次发布后需要4个测试同学花费2个小时进行只读的关键场景回归测试，成本非常高昂），这导致定期的版本发布经常会带来一些意外的故障，每次发布后都需要有人值班来解决这些故障。&lt;/p&gt;
&lt;p&gt;系统间集成测试成本更高，一方面集成测试需要跨多部门进行沟通协调，另一方面集成的一方通常无法知道另一方的实现细节，测试用例很难保证全面。对于关键系统的集成，如果修改后没有充足的回归测试，上线后很可能导致影响主流程的故障，影响用户的使用。&lt;/p&gt;
&lt;h4&gt;基础设施故障及定期升级维护&lt;/h4&gt;
&lt;p&gt;不管是自建基础设施，还是使用第三方云服务，基础设施的故障和定期升级维护是不可避免的，也是影响系统可用性的关键因素。&lt;/p&gt;
&lt;p&gt;影响可用性的基础设施相关因素包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;硬件故障&lt;/li&gt;
&lt;li&gt;网络故障（包括网络带宽不足导致的通信问题等）&lt;/li&gt;
&lt;li&gt;系统升级（操作系统、数据库、网络设备、中间件等）&lt;/li&gt;
&lt;li&gt;日常维护（备份、迁移等）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;如何提高系统可用性&lt;/h3&gt;
&lt;p&gt;影响系统可用性的因素很多，以上列举了一些非常典型的场景，这足以让我们对影响可用性的因素有一个非常直观的理解。为了从可实施的角度讨论如何提高系统可用性，这里不考虑基础设施硬件故障等不可控因素。&lt;/p&gt;
&lt;p&gt;从上面的因素中我们不难发现，有些问题我们可以通过提高工程化能力和优化工作流程解决，但如何将这些工程化能力和流程落地也是一个非常复杂的问题，因此我下面会通过技术和团队两个视角来看如何才能提高系统的可用性。&lt;/p&gt;
&lt;h4&gt;从技术视角，要不断强化工程能力&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/02/4-how-to-improve-system-availability.jpg&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/02/4-how-to-improve-system-availability-768x507.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;根据可用性的定义，要提高系统的可用性，就是要缩短系统不可用的时长，保持系统的健康状态；那么回顾下文章开头的小故事，我们可以从三个阶段来针对性的采取一些措施：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;病发前：
&lt;ul&gt;
&lt;li&gt;完善的代码质量管理体系和自动化测试体系，能够保证产品质量，通过代码检查、安全扫描和测试自动化，避免未经测试的代码部署到生产环境&lt;/li&gt;
&lt;li&gt;完善的权限管理体系，能够保证生产环境权限不滥用，避免过多的人为操作对生产环境产生影响&lt;/li&gt;
&lt;li&gt;其他自动化的开发、运维工具体系，在提高工作效率的同时，注重安全性，通过自动化的脚本检查、运维流程自动化等方式避免不必要的错误对生产环境造成的危害&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;病发初期
&lt;ul&gt;
&lt;li&gt;完善的监控体系，能够尽早识别系统的潜在问题，系统运营人员可以快速甄别即将发生的故障，不要等到用户反馈才知道系统出了问题&lt;/li&gt;
&lt;li&gt;完善的持续集成/持续部署体系，能够保证尽量快的反馈，尽量短的发布时长，在功能开发和故障修复后快速地部署代码到生产环境&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;病情严重
&lt;ul&gt;
&lt;li&gt;完善的发布验证、回滚、限流、熔断、降级策略，能够尽量缩小故障的影响范围，保证即便有部分服务不稳定，也不至于导致整个系统不可用&lt;/li&gt;
&lt;li&gt;完善的灾备恢复体系和演练，能够保证系统在发生重大紧急事故时可以快速恢复，尽量缩短不可用时长&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;从团队视角，要有一支重视技术的团队&lt;/h4&gt;
&lt;p&gt;在软件系统的开发运维过程中，我们有很多手段可以发现问题，如线上故障、监控报警、回顾会议等等，但从根本上解决问题往往非常困难，大多数情况下是头痛医头，脚痛医脚，到最后结果就是技术债台高耸，线上故障频发；即便找到了解决问题的办法，在实施的过程中还会遇到很多问题。&lt;/p&gt;
&lt;p&gt;探究其原因，可能比较复杂 ，但从团队视角来看，通常存在团队对待技术并没有那么严谨，对待生产环境没有那么敬畏，对待自己的代码没有那么严苛。&lt;/p&gt;
&lt;p&gt;要提升系统的可用性，必须要有一支重视技术的团队，这个团队应该具备以下特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自上而下崇尚技术，尊重技术&lt;/li&gt;
&lt;li&gt;有专家级成员，有能力实施上面提到的各种工程能力&lt;/li&gt;
&lt;li&gt;不急功近利，不会为了短期的业务目标而在技术上妥协&lt;/li&gt;
&lt;li&gt;团队成员遵守团队纪律，不做违反纪律，破坏规则的事情&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;结语&lt;/h3&gt;
&lt;p&gt;追求系统的高可用就像一个人追求身体健康一样，整个软件开发团队自始至终都要秉持爱护软件系统的心态，在软件开发的全流程中，时刻保持警惕，通过提高团队在三个阶段中的工程化能力来及时发现和解决系统中存在的问题。&lt;/p&gt;
&lt;p&gt;这不单纯是个技术问题，善治系统的团队首先要在团队内建立尊重技术、工程的文化氛围，建立团队行为规范，严明纪律，有所为有所不为；在此基础上，不断在团队开发过程中针对问题寻找解决问题的最佳实践，做且做好正确的事，相信高可用是必然的结果。&lt;/p&gt;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>79cbb0a1e75bd091fb52f24876f57b56</guid>
<title>[推荐] 用户画像从 0 到 100 的构建思路</title>
<link>https://toutiao.io/k/wbatwrb</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247501049&amp;amp;idx=1&amp;amp;sn=8dbb36f03b5f834de296a79cd90560ec&amp;amp;chksm=cf37f6f4f8407fe23c245da101d4cfcc5c1bc28cc872d40d2f0730265d32b1e1b551f287b02c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1OYP1AZw0W2IMiaCFatibtuvqoxGBjcqpr0BNGHYEmJYOXRMzyBNQKcib2OK7tCOOgbEZiaRZqDh1oxg5eWYPHT4DA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在介绍画像构建时，我们把工作分为两步。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一步：介绍从0到1的构建思路。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二步：介绍从1到100的构建思路。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247501043&amp;amp;idx=1&amp;amp;sn=47e0059494d2aea0f248abcdf038db9a&amp;amp;chksm=cf37f6fef8407fe86e0749cb9e869cc5ecf6345401c20e35a2e8824ce3aafa24f4a7550dc188&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/qrlXAFW0OmHM11P9UO6zVMDV0quS7bCu6d27BDEy7WA8DntdpibIw1rLmNIicKBVJicJ6GkccT8I5TQGNQ7CfuMxA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;900&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;38806&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;38806&quot;&gt;&lt;section hm_fix=&quot;247:418&quot;&gt;&lt;section data-bcless=&quot;darken&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;用户画像从0到1的构建思路&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;一个比较成熟的画像系统会有成百上千的&lt;/span&gt;&lt;span&gt;&lt;strong&gt;标签&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，这些标签的生产不是一次完成的，而是随着业务的发展需要，逐步补充完善，最终呈现在大家眼前的就是一棵庞大的标签树。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;跟自然界的树木一样，标签树要想长得茁壮参天，也必须有一个稳定的根基和合理的结构。在用户画像的构建前期，最重要的是搭好&lt;/span&gt;&lt;span&gt;&lt;strong&gt;画像骨架&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，确保后续的发展过程中，依然保持清晰的结构和高延展性。相反，如果一开始为了抢时间，将大量标签无序地堆在线上，后期管理和使用的难度会迅速凸显出来，重构的代价巨大。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面说到，一个好的标签树结构要满足两个条件：&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;高概括性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;&lt;strong&gt;强延展性&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。高概括性意味着结构体系能够很好地包含一个用户的基本属性和产品交互的相关行为，同时对于业务重点单独强调，没有遗漏；强延展性意味着结构全面的同时也有一定的抽象概括能力，保证新增的标签可以很好地找到对应的分类，整个体系不会过于收敛局限。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;按照这个原则，画像通常从8个维度组织标签，分别为&lt;/span&gt;&lt;span&gt;&lt;strong&gt;基本属性&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;平台属性&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;行为属&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;产品偏好&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;兴趣偏好&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;敏感度&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;消费属性&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;strong&gt;&lt;span&gt;用户生命周期及用户价值&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图11-2所示为用户画像整体架构示例，下面来具体介绍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.3808777429467085&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qrlXAFW0OmHM11P9UO6zVMDV0quS7bCuibiaQBY9frv2SeC6xxmcOvicVDxhgMTWYJiaCWvKvcOuRY294F3S5Ckyag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;638&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; title=&quot;&quot;&gt;1&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;327:354&quot;&gt;基本属性&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;基本属性&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;是指一个用户的基本社会属性和变更频率低的平台特征，例如真实社会年龄、性别、婚姻状况、昵称、号码、账号、IBS等标签。这些标签类型多为直采型，可从用户基本信息表中直接获取，不需要统计或者算法挖掘。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;示例：社会性别_女。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; title=&quot;&quot;&gt;2&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;327:354&quot;&gt;平台属性&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;平台属性&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;是用户在平台上表现出的基本属性特征，是利用用户行为进行算法挖掘，标识用户真实属性的标签。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;典型的平台属性标签有平台年龄标签，这里你可能有个疑问，为什么在用户的基础属性中已经有年龄标签，但在平台属性中又有一个呢？这就涉及两者之间的差别。设想一个真实的场景，一个用户的社会年龄为20岁，但他喜欢中年人的穿衣风格，在使用&lt;span&gt;App&lt;/span&gt;购物的时候，表现出的真实偏好是&lt;span&gt;30~40&lt;/span&gt;岁的。对于这类使用产品时表现出的用户心智和真实年龄不相符合的用户，如果只采用用户上传的基本属性来为其推荐产品，是不是很难命中个体用户的兴趣呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;两种不同的标签，本质上是用户自己上传信息的随意性和挖掘信息的权威性差异，是用户社会属性和真实属性差异。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们仔细分析一下两者在数据源、计算逻辑、标签格式、标签值和应用场景等方面的差异，如下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;（1）数据源与计算逻辑方面&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基本属性直接利用用户自行上传的、存储在用户基本信息表里的数据，平台属性则利用客户端或者服务端埋点上报采集的用户行为数据进行挖掘计算生成。基本属性是典型的直采型标签，平台属性是典型的算法挖掘型标签。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;（2）末级标签和输出标签值方面&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以性别为例，基本属性代表用户真实的社会身份，是确定的事实，典型标签形式为“性别&lt;span&gt;_&lt;/span&gt;女”，而平台属性则代表用户在性别维度的偏好概率，典型形式为“性别&lt;span&gt;_&lt;/span&gt;女&lt;span&gt;_0.80&lt;/span&gt;”，其中“女”为末级标签，“&lt;span&gt;0.80&lt;/span&gt;”则代表用户在平台的女性身份上表现出的倾向程度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;（3）应用场景方面&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;平台属性通过用户行为进行挖掘，更能代表用户的真实倾向，输出结果比基本属性准确率高，在定向营销和算法里，年龄、性别等通常采用平台属性。而社会属性中电话、身份证、账号、昵称等使用较多。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; title=&quot;&quot;&gt;3&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;327:354&quot;&gt;行为属性&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;行为属性&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;记录的是用户的全部单点行为。用户的单点行为有很多，包括启动、登录、浏览、点击、加车、下单等，而且结合不同的产品、不同的模块交互、不同的时间窗选取，行为就更加复杂了，要想全面梳理，可以按照“产品×功能模块×用户单点行为×时间”四大要素来组织。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里“产品×功能模块×用户单点行为×时间”的意思是，一个完整的行为应该包含“哪个产品”“哪个功能模块”“哪个行为”“哪些时间要求”四大要素，例如某浏览器体育频道最近一次访问时间。按照这四大要素组织行为，不容易发生遗漏。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;示例：初次登录产品时间，最后一次启动距今时间，30天内搜索行为频次，一个月内闪屏访问次数等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; title=&quot;&quot;&gt;4&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;327:354&quot;&gt;产品偏好&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;产品偏好&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;是对用户使用某些产品、产品核心功能或者其他渠道的偏好程度的刻画，属于挖掘型标签，其中产品的选取可以包括自家产品、竞品；功能和渠道既包括站内产品功能，也包括push、短信、开屏、弹窗等几大运营和产品法宝。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;示例：搜索模块偏好、直接竞品_京东偏好、短信偏好。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; title=&quot;&quot;&gt;5&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;327:354&quot;&gt;兴趣偏好&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;兴趣偏好&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;是用户画像内非常重要的维度，以电商产品为例，用户对商品的喜爱程度是用户最终的信息之一，兴趣偏好是对用户和物品之间的关系进行深度刻画的重要标签，其中最典型的是品牌偏好、类目偏好和标签偏好。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;示例：品牌偏好_优衣库&lt;span&gt;_0.91&lt;/span&gt;、类目偏好&lt;span&gt;_&lt;/span&gt;美妆&lt;span&gt;_0.80&lt;/span&gt;、标签偏好&lt;span&gt;_&lt;/span&gt;红色&lt;span&gt;_0.70&lt;/span&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; title=&quot;&quot;&gt;6&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;327:354&quot;&gt;敏感度&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在做营销活动时，我们留意到有些用户不需要优惠也会下单，而有些用户一定要有优惠券刺激才会下单，而且优惠券的额度会影响其下单的金额。这种情况下，如何识别出对优惠敏感的用户并为其发放合理券额的优惠券，保证优惠券不浪费，从而使促销活动的ROI最大？其中一个很重要的标签就是用户的敏感度标签。敏感度代表用户对平台活动或者优惠的敏感程度，也是典型的挖掘类标签。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;示例：热点敏感度、折扣敏感度。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; title=&quot;&quot;&gt;7&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;327:354&quot;&gt;消费属性&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;无论是电商、内容还是其他领域，公司的目标最终都是收益，所以消费属性往往作为一个单独的维度重点刻画。消费属性既包括统计型标签—消费频次、消费金额、最近一次消费时间等，也包括挖掘型标签—消费能力和消费意愿，还包括敏感度标签—优惠促销敏感度、活动敏感度、新品敏感度、爆款敏感度等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; title=&quot;&quot;&gt;8&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;327:354&quot;&gt;用户生命周期及用户价值&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户生命周期是用户运营的重要法典，一个用户从进入产品到离开，通常会经历“新手”“成长”“成熟”“衰退”“流失”这&lt;span&gt;5&lt;/span&gt;个典型阶段，每个阶段对用户的运营都存在策略差异，画像在其中的作用是明确标记用户所处生命周期的阶段，便于后续业务人员落地。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户价值是体现用户为产品贡献价值高低的标签，最经典的是通过RFM模型获得交易维度标签，此外，也应该看到用户的其他价值，例如为产品贡献活跃度，通过裂变拉来新用户，这些都可设计相应的标签。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;示例：新手、成长、成熟、衰退、流失、高价值用户、VIP等级等。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/qrlXAFW0OmHM11P9UO6zVMDV0quS7bCuIQHeGvyP4QmlWmM6Gk95YUf9dQvrZlQogXWgmDTy8FGQicprFibjd7uA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;38806&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;38806&quot;&gt;&lt;section hm_fix=&quot;247:418&quot;&gt;&lt;section data-bcless=&quot;darken&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;用户画像从1到100的构建思路&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;前面我们介绍了如何搭建用户画像的基础框架，这一节讨论一下，有了基础框架，到底应该如何着手一步步完善画像标签树，如何从一个基于业务的需求落地为标签的设计，如何将标签应用到具体的业务中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;要解决“如何做”和“如何用”这两大问题，要从问题的根本开始思考，也就是我们为什么要做用户画像，用户画像的作用是什么。了解了这些问题，便能水到渠成，根据用途合理地设计方案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户画像的主要目的有以下3个：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;标签的完善也可以按照这3个维度不断丰富，以下分别举例说明标签建设的思路。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;1&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;用于统计，对产品、用户的基本认知&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;每个产品功能策略的完善，都需要建立在对产品、对用户的充分认知基础上，也就是说，用户是谁，有何特点，基本情况如何，这些是用户画像需要回答的重要问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;思路拆解：既然要了解用户的基础信息，就需要将用户基本属性进行拆解，包括年龄、性别、居住城市（几线）、家庭结构（婚否、孩否）等。为了盈利考虑，还需要了解基本的收入水平、消费能力等。将拆解的维度抽象，构建对应标签，然后进行分布统计，便能生成一份基本的用户认知报告。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;标签结果：年龄、性别等。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;2&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;用于定向营销和精细化运营&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;运营人员作为画像的重要业务使用方，每天都会通过标签圈选人群，做定向的用户、活动、内容精细化运营，以及各App每天都在进行的促销活动。这些运营和活动的场景分布在产品的各个渠道和各个资源位，对场景和人群的精细程度要求都很高。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;举一个日常工作中最常见的需求，通过一次数据分析发现，产品的流失用户占比提升，经过讨论，大家认为一次结合利益点的push推送是召回流失用户的有效且快速的手段；同时&lt;span&gt;push&lt;/span&gt;作为各个业务都在争取的有限资源，希望可以提高使用效率，确保&lt;span&gt;push&lt;/span&gt;这个资源渠道的整体&lt;span&gt;ROI&lt;/span&gt;。以上需求希望画像可以支持。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;思路拆解：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;从这个需求背景中，我们做一次关键词提取，不难发现，关键词是&lt;/span&gt;“流失用户”“利益点”“&lt;span&gt;push&lt;/span&gt;&lt;span&gt;”“效率”。其中“流失用户”是用户身份识别，“利益点”是用户优惠敏感度，“&lt;/span&gt;&lt;span&gt;push&lt;/span&gt;&lt;span&gt;”是产品渠道资源，“效率”意味着要尽可能确保全选人群精准，不能为了覆盖率牺牲准确率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;思路拆解完毕，具体落地就简单多了，参考步骤如下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第一步，确定流失用户的口径和标签。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;这里需要用到用户生命周期的划分，从中识别并标识出流失用户。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第二步，分析对流失用户拉回效果最好的利益点，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;例如优惠券、折扣、礼品或其他内容。这一步需要运营和数据开发人员根据日常经验和数据分析完成，对于画像的要求是基于分析结论，挖掘不同用户对于优惠折扣的敏感程度，这一点在前面介绍敏感度标签时有论述，最终目的是确保将每一分钱都花在刀刃上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第三步，确定拉回的明确目标，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;是拉回规模还是准确率。通过需求分析可以确定，本次拉回在资源有限的情况下，需要提升人群识别的准确率。画像实现准确率的方法有两个，一是提升画像算法的准确率，这部分主要依赖算法本身，无法一蹴而就，因此这里选择第二个方法，即增加人群全选的条件，也就是新增标签，供圈选求交。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据背景分析，我们可以增加流失用户关于push渠道打开意愿的标签，提高&lt;span&gt;push&lt;/span&gt;资源的使用效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;经过上述分析，需要生产的标签如下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;条件为“最近&lt;span&gt;3&lt;/span&gt;天，最近&lt;span&gt;7&lt;/span&gt;天”；也可用综合的算法挖掘型标签，即&lt;span&gt;push&lt;/span&gt;渠道偏好。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过以上需求分析和思路拆解，画像的建设过程应该比较明确了，这里再留一个思考的案例，可以尝试分析如何落地：平台新上一款商品，初期需要在某模块展示给目标用户做推广，同时尽量不打扰非目标用户，且不降低该资源位的整体转化效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;思路拆解：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;商品的目标用户&lt;/span&gt;—商品可以按照哪些维度拆分关键信息？模块位置—用户的模块功能使用偏好是什么？准确率的要求—如何提升画像应用的准确率？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;回答好以上问题，这个需求的标签便能顺利获得。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;99660&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;3&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;用于算法&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;38%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用于算法，主要应用于搜索推荐、风控广告等策略方向。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;标签除了用于基本的用户群体描述、定向营销和精细化运营，还有一个相对来说新颖又广泛的用途：用于各算法的各个环节。在召回和排序两大经典策略流程中，都可以用到用户画像，这里我们举一个画像在推荐系统召回层的应用案例。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;需求背景：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span/&gt;&lt;span&gt;&lt;span&gt;推荐系统的本质是从海量信息中计算用户最感兴趣的部分，对应推荐系统的&lt;/span&gt;“召回—粗排—精排”，是一个“层层精选”的过程。其中召回层是精选的第一道流程，为后续计算打分准备初步的兴趣候选集，这里候选集的生成方法之一就是用户画像法。下面仍然以电商业务为例，讲述如何用用户画像做兴趣召回。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;思路拆解：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span/&gt;&lt;span&gt;&lt;span&gt;召回的作用是粗筛，帮助推荐系统计算第一道用户兴趣池。这里用户对物品的兴趣可拆解为对商品品牌、类目和商品标签的兴趣，这就转化为前面介绍的内容了，用户标签中有品牌偏好标签、类目偏好标签和标签偏好标签，只需要在所有品牌、类目、标签下维护一个按照商品质量或者热度降序排列的列表，这样只要获取到用户标识，便能从用户画像中获取偏好的品牌、类目和标签。再从品牌、类目和标签下的商品列表中召回相应的商品，根据候选集大小的设计，做&lt;/span&gt;top k&lt;span&gt;截断召回。这样，这部分商品就完成初步的召回，为进入下一个流程进行粗排和精排做好了准备。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;文章来源：《数据产品经理：实战进阶》 机械工业出版社 2020年&lt;span&gt;9&lt;/span&gt;月出版&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qrlXAFW0OmHM11P9UO6zVMDV0quS7bCuE3MeytIpNLkHYRfyWpLH5QzOfAvCib3Efu7AmDhtpAicwoeYXiaCFOmIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;mpcps frameborder=&quot;0&quot; class=&quot;js_editor_cps&quot; data-datakey=&quot;1599458390740_0.6482239327883992&quot; data-uid=&quot;1599458390737&quot; data-type=&quot;1&quot; data-product=&quot;&quot; data-templateid=&quot;list&quot; data-pid=&quot;29118440&quot; data-packid=&quot;&quot; data-smartnum=&quot;&quot; data-categoryid=&quot;3&quot; data-appid=&quot;wx831660fe3ded4389&quot; data-report=&quot;s0%3D3%26s1%3D0%26s2%3D0%26s3%3D%25E6%2595%25B0%25E6%258D%25AE%25E4%25BA%25A7%25E5%2593%2581%25E7%25BB%258F%25E7%2590%2586%25EF%25BC%259A%25E5%25AE%259E%25E6%2588%2598%25E8%25BF%259B%25E9%2598%25B6%26s4%3D0%26s5%3D10%26s6%3Did_1599459459042_86895%26s7%3D%26s8%3D%26s9%3D%26s10%3D%26pid%3Dwx831660fe3ded4389_29118440%26uuid%3D23981671601917372027%26title%3D%25E6%2595%25B0%25E6%258D%25AE%25E4%25BA%25A7%25E5%2593%2581%25E7%25BB%258F%25E7%2590%2586%25EF%25BC%259A%25E5%25AE%259E%25E6%2588%2598%25E8%25BF%259B%25E9%2598%25B6%26sid%3D3%26cid%3D3%26ratio%3D17.00%2525%26price%3D61.40%26&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;点击链接了解详情并购买&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;section data-id=&quot;97603&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.3111111111111111&quot; data-type=&quot;gif&quot; data-w=&quot;180&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/7QRTvkK2qC6D2OhibHUMz1XiaC7v0RcUA1icaxROuwbvf2Nqmcz53iat2YiaGq0ibvOsA2KakWoa80iahsYGXhDHFMiaxw/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-id=&quot;90215&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot; data-brushtype=&quot;text&quot;&gt;&lt;span&gt;更多&lt;/span&gt;&lt;span&gt;精彩&lt;/span&gt;&lt;span&gt;回顾&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-bdopacity=&quot;50%&quot; data-bdlessp=&quot;280&quot; data-bdless=&quot;spin&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend-list&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247501049_1&quot; data-recommend-article-time=&quot;1612596849&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/1OYP1AZw0W1qEkYolnWziaHxU3zqfSnWGKhsEvt3Un1YhPAzRxGsOhWuicYRxw3l6vT5bYOy0qppCmWj9kQibD6IA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;干货 | 五千字长文带你快速入门FlinkSQL&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247501049&amp;amp;idx=1&amp;amp;sn=8dbb36f03b5f834de296a79cd90560ec&amp;amp;chksm=cf37f6f4f8407fe23c245da101d4cfcc5c1bc28cc872d40d2f0730265d32b1e1b551f287b02c#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247501049&amp;amp;idx=1&amp;amp;sn=8dbb36f03b5f834de296a79cd90560ec&amp;amp;chksm=cf37f6f4f8407fe23c245da101d4cfcc5c1bc28cc872d40d2f0730265d32b1e1b551f287b02c&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.4261744966442953&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1OYP1AZw0W1qEkYolnWziaHxU3zqfSnWGKhsEvt3Un1YhPAzRxGsOhWuicYRxw3l6vT5bYOy0qppCmWj9kQibD6IA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;894&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;干货 | 五千字长文带你快速入门FlinkSQL&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247501043_1&quot; data-recommend-article-time=&quot;1612484160&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/1OYP1AZw0W2ibZNPKIDw1sngh9RqkVvlRJALqu9WyqQygeJBZBaIBVSq7vg8mO8IPn5Xh5hibwpCficpLs5vl82Kg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;震惊！这篇文章解读数据仓库、数据湖、数据中台等概念，竟然写了4万字！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247501043&amp;amp;idx=1&amp;amp;sn=47e0059494d2aea0f248abcdf038db9a&amp;amp;chksm=cf37f6fef8407fe86e0749cb9e869cc5ecf6345401c20e35a2e8824ce3aafa24f4a7550dc188#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247501043&amp;amp;idx=1&amp;amp;sn=47e0059494d2aea0f248abcdf038db9a&amp;amp;chksm=cf37f6fef8407fe86e0749cb9e869cc5ecf6345401c20e35a2e8824ce3aafa24f4a7550dc188&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.4261744966442953&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1OYP1AZw0W2ibZNPKIDw1sngh9RqkVvlRJALqu9WyqQygeJBZBaIBVSq7vg8mO8IPn5Xh5hibwpCficpLs5vl82Kg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;894&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;震惊！这篇文章解读数据仓库、数据湖、数据中台等概念，竟然写了4万字！&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247501043_2&quot; data-recommend-article-time=&quot;1612484160&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/1OYP1AZw0W2ibZNPKIDw1sngh9RqkVvlRVLia8cymA7ZkB44KT3YiclfdkHJRibSt8iagKAghPMssIO56zMKbyLcibyQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;Flink Client 实现原理与源码解析&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247501043&amp;amp;idx=2&amp;amp;sn=c61470a64c1ae41af5740828943d2abd&amp;amp;chksm=cf37f6fef8407fe8db7d457a02ea5d6046a09af81948687430dd81e7e6ade61d7640f1d09dc7#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247501043&amp;amp;idx=2&amp;amp;sn=c61470a64c1ae41af5740828943d2abd&amp;amp;chksm=cf37f6fef8407fe8db7d457a02ea5d6046a09af81948687430dd81e7e6ade61d7640f1d09dc7&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.9917695473251029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1OYP1AZw0W2ibZNPKIDw1sngh9RqkVvlRVLia8cymA7ZkB44KT3YiclfdkHJRibSt8iagKAghPMssIO56zMKbyLcibyQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;243&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;Flink Client 实现原理与源码解析&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247501043_3&quot; data-recommend-article-time=&quot;1612484160&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/1OYP1AZw0W2ibZNPKIDw1sngh9RqkVvlRBzZtBm0baL6rHxZrBCA7763Z9ib08TTGzcYXbnyOnO8Yvr8t1Q5COdw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;大数据文章合集NO.2（第二期）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247501043&amp;amp;idx=3&amp;amp;sn=1d6c39597413bcd4d9e4042b8da4a5d3&amp;amp;chksm=cf37f6fef8407fe829a0e5177217b07a88051c86b4459bc31aabed1dc384594ff934d19f8652#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247501043&amp;amp;idx=3&amp;amp;sn=1d6c39597413bcd4d9e4042b8da4a5d3&amp;amp;chksm=cf37f6fef8407fe829a0e5177217b07a88051c86b4459bc31aabed1dc384594ff934d19f8652&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.9967213114754099&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1OYP1AZw0W2ibZNPKIDw1sngh9RqkVvlRBzZtBm0baL6rHxZrBCA7763Z9ib08TTGzcYXbnyOnO8Yvr8t1Q5COdw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;305&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;大数据文章合集NO.2（第二期）&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247500969_2&quot; data-recommend-article-time=&quot;1612397760&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/1OYP1AZw0W13jbB0aNgezXggb71qJv9De0qBpfAOvJ2ibbrPibIWpYdkby4xjyySFB1rWhxicicfRICGMHy1OgMVEQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;分析 BAT 互联网巨头在大数据方向布局及大数据未来发展趋势&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247500969&amp;amp;idx=2&amp;amp;sn=5320af66acc752ecbc569649eef0b8b7&amp;amp;chksm=cf37f6a4f8407fb28e9a64d3afb38de9bbd6d9087e64e502cf2e59f6e9761877b79c97f999a6#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg3NjIyNjQwMg==&amp;amp;mid=2247500969&amp;amp;idx=2&amp;amp;sn=5320af66acc752ecbc569649eef0b8b7&amp;amp;chksm=cf37f6a4f8407fb28e9a64d3afb38de9bbd6d9087e64e502cf2e59f6e9761877b79c97f999a6&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.9937694704049844&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1OYP1AZw0W13jbB0aNgezXggb71qJv9De0qBpfAOvJ2ibbrPibIWpYdkby4xjyySFB1rWhxicicfRICGMHy1OgMVEQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;321&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;分析 BAT 互联网巨头在大数据方向布局及大数据未来发展趋势&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;/section&gt;&lt;center data-tool=&quot;mdnice编辑器&quot;&gt;&lt;center data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;下载资料：长按扫码回复 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;数仓&lt;/strong&gt;&lt;/span&gt;&lt;/center&gt;&lt;p&gt;&lt;/p&gt;&lt;center data-tool=&quot;mdnice编辑器&quot;&gt;&lt;pre&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2714223575467595&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;2299&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/1OYP1AZw0W2IMiaCFatibtuvqoxGBjcqprAruMlHJTVc1uxuPNfXGicUX3HU1k51icPToQQptTbjgbB7mOUg7zUGKA/640?wx_fmt=png&quot;/&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/center&gt;&lt;/center&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;希望这篇文章可以帮到你~&lt;br/&gt;&lt;/span&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;欢迎大家点个&lt;/span&gt;&lt;span&gt;在看&lt;/span&gt;&lt;span&gt;，分享至朋友圈&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;分享、收藏、赞、在看，&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;四连击！&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2db305b32a36fab589fcc945429cf6b7</guid>
<title>[推荐] Redis 集群搭建很 easy</title>
<link>https://toutiao.io/k/m4mw3sc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;h3&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h3&gt;&lt;p&gt;哨兵模式虽然让读写分离更加高可用，但单台服务器由于本身的内存和CPU瓶颈，对于高并发和大数据业务的应用场景还是远远不能满足；对于这种情况，有点经验的小伙伴会毫不犹豫的想到集群，搞他好几个节点，负载均衡再加上故障转移，岂不美哉。是的，就是这个理，接下来玩玩。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;正文&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;集群&lt;/strong&gt;，相信这个词小伙伴应该听的耳朵起茧子了吧；多搞几台服务器，让请求/命令平均分发到各个服务器，避免单台服务器承载过大压力；对于Redis集群来说，为了实现自动故障转移，还需要在每个主节点上增加一个或多个从节点，当主节点发生故障时，从节点自动补上，实现高可用。&lt;/p&gt;&lt;p&gt;总的来说，Redis集群有以下作用：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;多主节点的实现可以&lt;strong&gt;应对高并发场景&lt;/strong&gt;，并发量增大，节点可以随时扩展满足需求；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;多主节点的实现可以&lt;strong&gt;存储更多的数据&lt;/strong&gt;，因为数据均匀分布到各个节点；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;多主节点搭配多从节点的实现让&lt;strong&gt;高可用更加稳定&lt;/strong&gt;，即当有主节点发生故障时，对应下面的从节点会升级为主节点，正常提供功能；&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;老规矩不变，一边实操一边总结，接下来搭建一个3主3从的集群，这是最简单的。&lt;strong&gt;Redis集群中最少需要3个主节点&lt;/strong&gt;，再加上为了实现高可用，每个主节点至少得跟一个从节点，不然一个主节点挂了，找不到完整的数据，整个集群就不能用了；至于为什么会找不到完整的数据，下面会聊到。&lt;/p&gt;&lt;p&gt;接下来要搭建的集群环境如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4256410256410256&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtQUlE7QADIW0W9LxKETojVKZicLVYV9VcC0ezFJJOFKeNIxOn1LL3mXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;585&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;简要说明：&lt;/p&gt;&lt;p&gt;这里集群方案使用redis-cli自动指定主从关系(小伙伴的主从关系可能会和我这不一样哦)，也可以手动指定；反正思路都一样；&lt;/p&gt;&lt;p&gt;以下演示在同一台机器上，通过端口区分各个节点；在实际开发中，一般都是用不同的服务器。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;案例演示&lt;/span&gt;&lt;/h4&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;准备六个节点的配置文件，开启集群相关配置&lt;/strong&gt;；&lt;/p&gt;&lt;p&gt;拷贝最初默认的配置文件，然后进行更改，主要更改以下项：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;port 6370 &lt;span&gt;# 指定Redis节点端口&lt;/span&gt;&lt;br/&gt;pidfile /var/run/redis_6370.pid &lt;span&gt;# 指定对应进程文件&lt;/span&gt;&lt;br/&gt;dbfilename dump6370.rdb &lt;span&gt;# 每个节点的rdb持久化文件&lt;/span&gt;&lt;br/&gt;cluster-enabled yes &lt;span&gt;# 开启集群，这个比较重要&lt;/span&gt;&lt;br/&gt;cluster-config-file nodes-6370.conf &lt;span&gt;#指定每个节点的集群配置文件，这个比较重要&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上配置文件内容在其他节点(6370,6371,6380,6381,6390,6391)都需要进行修改，只是将其中6370改为对应节点的端口即可，目的就是为了不同节点使用不同端口并区分用到的不同文件即可；比如需要修改6371节点的配置文件如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;port 6371 &lt;span&gt;# 指定Redis节点端口&lt;/span&gt;&lt;br/&gt;pidfile /var/run/redis_6371.pid &lt;span&gt;# 指定对应进程文件&lt;/span&gt;&lt;br/&gt;dbfilename dump6371.rdb &lt;span&gt;# 每个节点的rdb持久化文件&lt;/span&gt;&lt;br/&gt;cluster-enabled yes &lt;span&gt;# 开启集群，这个比较重要&lt;/span&gt;&lt;br/&gt;cluster-config-file nodes-6371.conf &lt;span&gt;#指定每个节点的集群配置文件，这个比较重要&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中&lt;strong&gt;cluster-enabled&lt;/strong&gt;和&lt;strong&gt;cluster-config-file&lt;/strong&gt;是集群配置的重点。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;启动六个节点，刚开始各个节点是相互独立的&lt;/strong&gt;；&lt;/p&gt;&lt;p&gt;准备好配置文件之后，就可以使用redis-server指定配置文件启动节点啦，如果节点多，小伙伴可以编写脚本哦；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;./redis-server ZoeCluster/redis6370.conf &lt;span&gt;# 启动6370节点&lt;/span&gt;&lt;br/&gt;./redis-server ZoeCluster/redis6371.conf &lt;span&gt;# 启动6371节点&lt;/span&gt;&lt;br/&gt;./redis-server ZoeCluster/redis6380.conf &lt;span&gt;# 启动6380节点&lt;/span&gt;&lt;br/&gt;./redis-server ZoeCluster/redis6381.conf &lt;span&gt;# 启动6381节点&lt;/span&gt;&lt;br/&gt;./redis-server ZoeCluster/redis6390.conf &lt;span&gt;# 启动6390节点&lt;/span&gt;&lt;br/&gt;./redis-server ZoeCluster/redis6391.conf &lt;span&gt;# 启动6391节点&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;启动效果如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.34392523364485983&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtCiak9JBXuAmYeRCZWnRYjplIYUC2QGLgo3gxKQgznic7Ps3HBgvZjOpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1070&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;这样只是将各个节点启动起来，集群关系还没创建呢，如果不信，可以使用redis-cli连接任意一个节点查看集群信息，如下：&lt;/p&gt;&lt;figure&gt;&lt;figcaption&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4627151051625239&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtCHAetSrvbMibwMP8VLrBGcTh5HRSPsraIyEuN7V9Z2ictQWLsXEjIk6g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;523&quot;/&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;如上图，cluster-size为0，集群的关键，槽也还没有分配；那接下来肯定是要将各节点的集群关系搞起来；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;建立节点集群关系&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;由于我使用的Redis版本是5.0，直接可以使用&lt;strong&gt;redis-cli&lt;/strong&gt;就可以进行集群搭建，在此版本之前都推荐使用redis-trib.rb进行相关操作，这个是一个Ruby脚本，需要安装相关环境，小伙伴可以下来尝试；&lt;/p&gt;&lt;p&gt;使用命令如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;./redis-cli --cluster create --cluster-replicas 1 127.0.0.1:6370 127.0.0.1:6380 127.0.0.1:6390 127.0.0.1:6371 127.0.0.1:6381 127.0.0.1:6391&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参数简介：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-- cluster&lt;/strong&gt; : 指定是用于创建集群环境；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;-a&lt;/strong&gt;：密码，即如果有密码，可以通过-a传参，这里没有设置密码；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;--cluster-replicas&lt;/strong&gt;：这里设置为1, 用于配置主节点上的从节点数，1就代表一主一从，2就代表一主二从，依次类推；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;后面的是节点IP:节点端口&lt;/strong&gt;，一般前面的是主节点，后面的是从节点；&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5256241787122208&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtCgspickZWrRVMc4dJcdXYibOIYQXSJZicbxkWTkT4lyJj1WWV7KN0szLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;761&quot;/&gt;&lt;br/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;如果同意集群方案，然后就开始进行相关操作，如下：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6461748633879781&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtpVGql3GJlhoeXcaqPd7w7c3MyDbBhsU2mUUiaMVsWSwUDJvIh96oHzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;732&quot;/&gt;&lt;br/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;同样，可以连接到任意一个节点，查看集群情况，如下：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.751937984496124&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtNVWeiaUHtXicsOl1JqkLiae6BC9FseMWvjaFZVo4XcdjQ6D8niarFwTOlA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;645&quot;/&gt;&lt;br/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;注：关于主从节点之间的主从复制过程就不在这说了，和之前说过的主从复制一样；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;演示访问操作&lt;/strong&gt;；&lt;/p&gt;&lt;p&gt;使用redis-cli连接任意节点写入数据，如果不指定集群连接的话，会写入数据失败，如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.160676532769556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtFN8ibRQHzrY5kplcq4am540YgbpeicjRIyLsURiaibjSibiaKuO7q7r9Mic2Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;473&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;由于集群环境下，数据的存储位置是根据Key来计算而来的(这里牵涉到一致性哈希算法)，使得数据可以均匀分配到各节点上，所以在redis-cli连接的时候需要指定集群模式，如下：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.18149466192170818&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtUa2KAzicPLjOUcbzl5GKc0AMHutrJK9VweibVic1gNPuKnoicSkT7XDzMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;562&quot;/&gt;&lt;br/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;如上图所示，指定集群模式之后就可以正常存取了；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;故障演示&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;既然集群环境，肯定少不了要好好测测；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;模拟从节点挂掉&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;找个从节点停掉试试，这里停掉6371节点，根据创建集群信息知道，它的主节点是6390；&lt;/p&gt;&lt;p&gt;主节点显示从节点断开连接，看看它的主节点反应：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.08100929614873838&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtTRnjq4pDfMtW003rmMIF22obdYtJKrIa2Yic4Y7CDAp6WCENUdCrHXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;753&quot;/&gt;&lt;br/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;其他集群节点只是将从节点标记为failing状态，即下线状态，如下：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.077733860342556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtRNCljcXOAsD7NaDK7yAOiaMvY8fCos0MXujmhxI3xyaPAIovfI9Sgnw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;759&quot;/&gt;&lt;br/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;对于存取数据也不受影响，这里就不截图了，小伙伴自行尝试吧；&lt;/p&gt;&lt;p&gt;当故障的从节点6371重新连上时，主节点恢复主从关系，并进行主从复制操作；其他集群节点会清除原来标记的下线状态，将其改为上线；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;模拟主节点挂掉&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这里就手动将6390这个节点停掉，会有怎样的反应呢？&lt;/p&gt;&lt;p&gt;自身从节点会&lt;strong&gt;每隔一秒检测连接&lt;/strong&gt;，如果超时(默认是15秒)，&lt;strong&gt;会选举从节点做为集群的主节点来提供服务&lt;/strong&gt;，如下图：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6972477064220184&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibthwcA5LGWC6QPq3SnAVtkWmXyNRvWa5NMGdib6dgHWB5nicy2IawKGoBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;763&quot;/&gt;&lt;br/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;数据存取最终还是不受影响；&lt;/p&gt;&lt;p&gt;对于其他集群节点，将故障节点标记为failing，让新上任的主节点提供服务，如下图：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.1874180865006553&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtR2IPDu32D0kqicNic4SojwVialAzyHlQVSQQTrXicr8eGWMk9KMvxGwNOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;763&quot;/&gt;&lt;br/&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;存取数据也是不受影响的；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;挂掉的主节点6390如果恢复，那它只能变为6371的从节点啦，并进行相关主从复制操作&lt;/strong&gt;；而集群的其他节点只是将其原有的Fail状态清除，表示可以正常连接；&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Redis集群就是这样简单，只要思路对，就是手工活；小伙伴可以编写脚本自动执行哦；&lt;/p&gt;&lt;p&gt;接下来说说集群数据的存储；&lt;/p&gt;&lt;h4&gt;&lt;span&gt;数据存储简单分析&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;在Redis集群环境中，数据的存储位置是根据对Key的Hash计算进行指定的；Redis集群为了在节点改变时保证数据分布均匀，引入了槽(slot)作为迁移的基本单位，槽解耦了数据和实际节点的关系，使得实际节点数的改变对系统影响较小；&lt;/p&gt;&lt;p&gt;在整个集群中，&lt;strong&gt;槽(slot)总共有16384，会将其均匀分配到集群的主节点上&lt;/strong&gt;，其中每一份槽对应一个存储空间(这里的存储空间可以理解为一个容器，是可以存很多数据的)，以上集群环境的槽分配如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.21913043478260869&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibt8w357o9Dibic0OcL8E6l9BwT451r6B3xiavvJvpGKJyvBBCM28MqBMibeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1150&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;存储数据的过程，如下：&lt;/p&gt;&lt;p&gt;连接6380主节点，执行如下操作：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.15849056603773584&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtdp49uOxKxooOrevwZEGzAf8AIO2ryljxMsSI5dG6W0gqMnPszLwSHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;530&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;具体过程如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6013289036544851&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibt7GeUEpmu1ictzxwtTWneNj4k2hFHDODRCjGzyCc9tS5lZYibgibibwdn3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;602&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;简要说明：&lt;/strong&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;客户端发起命令；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务器将Key进行CRC16计算，并与总槽位计算出Key需要存储的位置；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;这里模拟的Key为zoe，计算出的槽位为14588，不在6380这个节点上，集群节点会将其重定向到对应槽位的节点上；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;然后找到6371上的14588槽位进行数据存储；（注，这里的6371已经是主节点了，因为上面做过一次故障转移模拟）；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;那集群节点是如何知道其他节点的槽范围和其他信息呢？&lt;/p&gt;&lt;p&gt;那是因为各节点之间有通讯，通讯端口是对应的redis端口+10000，比如节点6371的集群通讯端口为16371（如果多台机器，别忘了防火墙放开这个端口哦），可以通过&lt;strong&gt;cluster nodes&lt;/strong&gt;看到，如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.2070524412296564&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtLFIV1jpvicMDnSpttMg8RtgiatUtMffJvPJKUkQ3Gvg4Q0HlSicJOMEkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1106&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;并且将各节点的信息保存在自己对应的集群配置文件中，这个集群文件名是通过配置项&lt;strong&gt;cluster-config-file&lt;/strong&gt;指定的，在集群节点启动时会检查该文件是否存在，如果不存在，会自动创建，如果存在，就加载里面的相关配置信息；里面有哪些信息，随便找个节点的配置文件看一下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.2321270962047661&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtPj1iaViblBAx8feq4T9htzicHs7ic2GMwwhTMCuddictCDMHvnqSFWpROLw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1133&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;如上图所示，各节点的配置文件中记录了其他节点的主从关系，分配的槽位，各节点的状态；这样的话，集群关系就算重新启动也还存在。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;集群伸缩(节点增删)演示&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;在实际应用场景中，会根据业务需要，对集群进行伸缩，即节点的增删；业务并发大了加节点进行扩展，  节点需要调整时可能需要进节点删除；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;加节点&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这里进行节点扩展，加一个6360主节点，6361作为6360的从节点；参照以上集群搭建时配置文件更改，然后将其都启动，如下：&lt;/p&gt;&lt;p&gt;6360节点&lt;/p&gt;&lt;pre&gt;&lt;code&gt;port 6360 &lt;span&gt;# 指定Redis节点端口&lt;/span&gt;&lt;br/&gt;pidfile /var/run/redis_6360.pid &lt;span&gt;# 指定对应进程文件&lt;/span&gt;&lt;br/&gt;dbfilename dump6360.rdb &lt;span&gt;# 每个节点的rdb持久化文件&lt;/span&gt;&lt;br/&gt;cluster-enabled yes &lt;span&gt;# 开启集群，这个比较重要&lt;/span&gt;&lt;br/&gt;cluster-config-file nodes-6360.conf &lt;span&gt;#指定每个节点的集群配置文件，这个比较重要&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;6361节点&lt;/p&gt;&lt;pre&gt;&lt;code&gt;port 6361 &lt;span&gt;# 指定Redis节点端口&lt;/span&gt;&lt;br/&gt;pidfile /var/run/redis_6361.pid &lt;span&gt;# 指定对应进程文件&lt;/span&gt;&lt;br/&gt;dbfilename dump6361.rdb &lt;span&gt;# 每个节点的rdb持久化文件&lt;/span&gt;&lt;br/&gt;cluster-enabled yes &lt;span&gt;# 开启集群，这个比较重要&lt;/span&gt;&lt;br/&gt;cluster-config-file nodes-6361.conf &lt;span&gt;#指定每个节点的集群配置文件，这个比较重要&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;两个节点都启动，然后将6360加入到集群主节点中，执行以下命令：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;./redis-cli --cluster add-node 127.0.0.1:6360 127.0.0.1:6370&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注：其中127.0.0.1:6360是需要加入的新增节点，127.0.0.1:6370是现有集群中的任意一个节点；&lt;/p&gt;&lt;p&gt;可以通过以下命令检测集群状态，如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;./redis-cli --cluster check 127.0.0.1:6370  &lt;span&gt;# 后面的地址是任意的集群节点&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到6360已经加入到集群环境中，但现在还没有从节点和槽分配，所以接下来先将6361作为6360的从节点加入，如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;./redis-cli --cluster add-node --cluster-slave --cluster-master-id eaa814dc56beb0d5edb6a4fbb14f1384e78d4764 127.0.0.1:6361 127.0.0.1:6370 &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参数说明：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;--cluster-slave :  意思就是加入的是从节点；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;--cluster-master-id：后面紧跟主节点的id，这里就是6360的节点id；通过cluster nodes可以查看到节点id；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;127.0.0.1:6361：需要加入的从节点；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;127.0.0.1:6370：现有集群的任意主节点；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;现在还差槽分配了，如果需要直接将16384个槽平均分配到所有节点话，直接执行以下命令即可：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;./redis-cli --cluster rebalance --cluster-threshold 1 --cluster-use-empty-masters 127.0.0.1:6370&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用命令./redis-cli --cluster check 127.0.0.1:6370查看分配结果，如下图，只截了部分：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4025974025974026&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qQ1zuvjsChQGMXn5rDBSaZwDJ9AibYEibtjjPZyy9cgOvia1zukwsEBBsPrl47lwhqTb7LnYKEOfJSSOd1g3Du0EQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;847&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p&gt;如果不想均匀分配，根据自定义需要进行配置，可以执行以下命令，会提示一步一步配置；&lt;/p&gt;&lt;pre&gt;&lt;code&gt;./redis-cli --cluster reshard 127.0.0.1:6360 &lt;span&gt;#后面是新加入的主节点 &lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 也可以执行以下指令直接配置想要的数据&lt;/span&gt;&lt;br/&gt;./redis-cli --cluster reshard --cluster-from all --cluster-to 需要分配槽的节点id --cluster-slots 1000 --cluster-yes 127.0.0.1:6370 &lt;span&gt;# 1000 指分配的槽数&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里就不截图演示了，留给小伙伴自己动手操作吧；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;删除节点&lt;/strong&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;先对节点进行分片工作，防止数据丢失，即将指定节点上的槽分配到其他节点；&lt;br/&gt;&lt;code&gt;./redis-cli --cluster reshard 要删除节点ip:port&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;移除节点，推荐先删除从节点，再删除主节点；&lt;/p&gt;&lt;p&gt;&lt;code&gt;./redis-cli --cluster del-node 节点ip:port 节点id&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;&lt;span&gt;集群配置项&lt;/span&gt;&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;cluster-enabled(是否开启集群模式)&lt;/strong&gt;：设置为yes，将该节点开启为集群模式；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;cluster-config-file(设置每个集群节点对应的配置文件名称)&lt;/strong&gt;：文件是自动生成的，不用手动创建；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;cluster-node-timeout(设置超时时间，即集群节点不可用的最大时间，如果超过这个时间就认为该节点不可用)&lt;/strong&gt;：默认为15000(以毫秒为单位)；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;cluster-migration-barrier(配置一个主机最少可用的从机的个数)&lt;/strong&gt;：默认是1,表示一个主机的从机迁移之后，至少得有一个从机可用，否则不进行节点迁移；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;cluster-require-full-coverage(配置集群服务的可用性)&lt;/strong&gt;：默认yes开启，即集群没完全覆盖所有slot，集群就挂了；设置为no，就算槽没有全分配，也能提供服务，需要自己保证槽分配；&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h3&gt;&lt;p&gt;到这集群的搭建就完啦，本来想着写着很简单的，没想到又干了4000字；对于集群，使用有一些限制，比如Keys命令只能针对当前节点，需要针对多节点的情况进行处理；集群中各节点只支持db0数据库，其他数据库不支持等等；所以使用要注意哦，后续抽时间单独整理一篇注意事项吧，篇幅有点长，不继续聊啦；  下篇说说熟悉的缓存穿透、缓存击穿、缓存雪崩吧；&lt;/p&gt;&lt;p&gt;一个被程序搞丑的帅小伙，关注&quot;Code综艺圈&quot;，跟我一起学~~~&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>375a50b7cf7478e33b5638194f3ae19e</guid>
<title>[推荐] 深入了解 SSH</title>
<link>https://toutiao.io/k/8y463n2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;SSH 是每一台电脑的标准配置，Linux 就不必说了，连 &lt;span&gt;windows&lt;sup&gt;[1]&lt;/sup&gt;&lt;/span&gt; 也从 2018 年开始自带 OpenSSH 了。它主要的用途是登陆到远程电脑中执行命令，在云开发的时代，它是每个程序每天都要用到的工具。本文将简单介绍一下它的原理， 基本用法以及端口转发和动态转发等高阶用法。&lt;/p&gt;&lt;h2&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;span&gt;SSH&lt;sup&gt;[2]&lt;/sup&gt;&lt;/span&gt; 叫安全外壳协议（&lt;strong&gt;S&lt;/strong&gt;ecure &lt;strong&gt;Sh&lt;/strong&gt;ell），是一种加密的网络传输协议，可在不安全的网络中网络服务提供安全的传输环境。它通过在网络中创建安全隧道来实现 SSH 客户端和服务器之间的连接。最早的时候，互联网通信都是明文通信，一旦被截获，内容就会被暴露。1995年，芬兰学者 Tatu Ylonen 设计了 SSH 协议，将登录信息全部加密，成为互联网安全的一个基本解决方案，迅速在全世界获得推广，目前已经成为所有操作系统的标准配置。&lt;/p&gt;&lt;p&gt;SSH 是一种协议， 存在多种实现，既有商业实现，也有开源实现（OSSH，OpenSSH）。本文使用的自有软件 OpenSSH， 毕竟它是目前最流行的 SSH 实现，而且是所有操作系统的默认组件。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;TIPS: OpenSSH发展史&lt;br/&gt;1995 年 7 月， Tatu Ylonen 以免费软件的形式将一套保护信息传输的程序（也就是 SSH ）发布出去。程序很快流行，到年底已经有两万用户，遍布五十国家。所以在年底时，他创立了 SSH 通信安全公司来继续开发和销售 SSH, 所以它变成了专有软件。在 1999 年，瑞典程序员基于 SSH 最后一个开源的版本 1.2.12 开发了 OSSH，之后 OpenBSD 开发者在 OSSH 的基础上进行大量修改，形成了 OpenSSH。它是目前唯一一种最流行的 SSH 实现，成为了所有操作系统的默认组件。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;原理介绍&lt;/h2&gt;&lt;p&gt;SSH 之所以一经提出，就得到了快速发展，是因为数据的安全性对任何人都非常重要。这里我们对其保护数据安全的原理进行探究。&lt;/p&gt;&lt;p&gt;在聊加密前先介绍一下几个密码学的基本概念：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;明文&lt;code&gt;plaintext&lt;/code&gt; 指传送方（一般指客户端）想要接受方（一般指服务端）获得的&lt;strong&gt;可读信息&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;密文&lt;code&gt;ciphertext&lt;/code&gt; 指明文经过加密后所产生的信息&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;秘钥&lt;code&gt;key&lt;/code&gt; 指用来完成加密、解密、完整性验证等密码学应用的密码信息，是明文转换为密文或密文转换为明文的算法需要的参数&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;私钥 指私有的秘钥&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;公钥 指公开的秘钥&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;对称加密&lt;/h3&gt;&lt;p&gt;对称加密就是加密或解密使用的是同一个秘钥。比较常用的对称加密算法有 AES，DES等。其具体的时序图如下：&lt;img data-ratio=&quot;0.918848167539267&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/bDCibGAYVPCyvWRy5tG2SM6maAtlm1FjpibMOB06JFetKGMq1I1XojEPDIp1licW6WoVibm9TSkiblria2H16T5qxNPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;764&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;p&gt;对称加密的优点是加解密效率高，速度快。对于服务端而言，它和每个客户端都要有一个秘钥，庞大的客户端数目导致秘钥数目多，而且一旦机器被登录，所有的秘钥都泄露，所以缺点是秘钥的管理和分发比较困难，不安全。&lt;/p&gt;&lt;h3&gt;非对称加密&lt;/h3&gt;&lt;p&gt;非对称加密需要一对秘钥来进行加密和解密，公开的秘钥叫公钥，私有的秘钥叫私钥。注意公钥加密的信息&lt;strong&gt;只有&lt;/strong&gt;私钥才能解开（加密过程），私钥加密的信息&lt;strong&gt;只有&lt;/strong&gt;公钥才能解开（验签过程）。比较常用的非对称加密算法有 RSA。其具体的时序图如下：&lt;img data-ratio=&quot;1.1146408839779005&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/bDCibGAYVPCyvWRy5tG2SM6maAtlm1Fjp76vAYbT0E5mJCXkjRA55uFVeUrkWSSnUWPnB4ByH34SJlkCUKOKicnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;724&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;p&gt;非对称加密的优点是安全性更高，秘钥管理比较方便，每个服务器只要维护一对公私钥即可。缺点是加解密耗时长，速度慢。不过对于现在的计算机而言，这点成本可以忽略不计。&lt;/p&gt;&lt;h3&gt;中间人攻击&lt;/h3&gt;&lt;p&gt;中间人攻击的英文全称是 Man-in-the-middle attack，缩写为 MITM。在密码学和计算机安全领域中是指攻击者与通讯的两端分别创建独立的联系，并交换其所收到的数据，使通讯的两端认为他们正在通过一个私密的连接与对方直接对话，但事实上整个会话都被攻击者完全控制。在中间人攻击中，攻击者可以拦截通讯双方的通话并插入新的内容。在许多情况下这是很简单的（例如，在一个未加密的 Wi-Fi 无线接入点的接受范围内的中间人攻击者，可以将自己作为一个中间人插入这个网络）。其具体的时序图如下：&lt;img data-ratio=&quot;0.7526978417266187&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/bDCibGAYVPCyvWRy5tG2SM6maAtlm1FjplsMcj8k2k3xONWRLybe9dXRsD9Lz1AKbnYF0v2WoM0yhMOHlDnIqXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1112&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;p&gt;受到中间人攻击的关键原因是客户端不知道服务端的公钥真假，服务端也不知道客户端的公钥真假。所以破解这个问题的关键是如何相互认证，也就是要像黄宏《开锁》小品里一样证明我就是我，你就是你。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;code&quot;&gt;&lt;code&gt;@&lt;span&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&lt;/span&gt;&lt;br/&gt;@  WARNING: REMOTE HOST IDENTIFI&lt;span&gt;CATION&lt;/span&gt; HAS CHANGED!   @&lt;br/&gt;@&lt;span&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&lt;/span&gt;&lt;br/&gt;&lt;span&gt;IT&lt;/span&gt; IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!&lt;br/&gt;Someone could be eavesdropping &lt;span&gt;on&lt;/span&gt; you right now (man-&lt;span&gt;in&lt;/span&gt;-the-middle attack)!&lt;br/&gt;It &lt;span&gt;is&lt;/span&gt; also possible that a host key has just been changed.&lt;br/&gt;The fingerprint &lt;span&gt;for&lt;/span&gt; the ECDSA key sent &lt;span&gt;by&lt;/span&gt; the remote host &lt;span&gt;is&lt;/span&gt;&lt;br/&gt;&lt;span&gt;SHA256&lt;/span&gt;&lt;span&gt;:sYNNR1L6T5cSAG4BndqtdDhJEI0eB9LamBTkuIue3+0.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Please&lt;/span&gt; contact your system administrator.&lt;br/&gt;Add correct host key &lt;span&gt;in&lt;/span&gt; &lt;span&gt;/Users/xx/&lt;/span&gt;.ssh/known_hosts to get rid &lt;span&gt;of&lt;/span&gt; &lt;span&gt;this&lt;/span&gt; message.&lt;br/&gt;Offending ECDSA key &lt;span&gt;in&lt;/span&gt; &lt;span&gt;/Users/xx/&lt;/span&gt;.ssh/known_hosts:&lt;span&gt;40&lt;/span&gt;&lt;br/&gt;ECDSA host key &lt;span&gt;for&lt;/span&gt; [xx.com] has changed &lt;span&gt;and&lt;/span&gt; you have requested strict checking.&lt;br/&gt;&lt;span&gt;Host&lt;/span&gt; key verification failed.&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h2&gt;基本用法&lt;/h2&gt;&lt;h3&gt;生成公钥&lt;/h3&gt;&lt;p&gt;ssh-keygen 是安全外壳（ SSH ）协议套件的标准组件，用于生成，管理和转换身份验证密钥。&lt;/p&gt;&lt;h3&gt;参数说明&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-b bits 指定要创建的秘钥中的位数，默认 2048 位。值越大，密码越复杂&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-C comment 注释，在 id_rsa.pub 中末尾&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-t rsa/dsa等 指定要创建的秘钥类型，默认为 RSA&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-f filename 指定公私钥的名称，会在 &lt;code&gt;$HOME/.ssh&lt;/code&gt; 目录下生产私钥 filename 和公钥 filename.pub&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-N password 指定使用秘钥的密码，使得多人使用同一台机器时更安全&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;常用命令&lt;/h3&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;# 生成公私钥，默认文件为 ~/.ssh/id_rsa&lt;/span&gt;&lt;br/&gt;ssh-keygen -t rsa -b &lt;span&gt;4096&lt;/span&gt; -C &lt;span&gt;&quot;your_email@example.com&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;管理秘钥&lt;sup&gt;[3]&lt;/sup&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;ssh-agent 和 ssh-add 是安全外壳（SSH）协议套件的标准组件，用于管理私钥。一般情况下我们使用不带密码的 id_rsa 作为我们的默认私钥，此时是没必要启动 ssh-agent 的。当我们碰到以下两种情况则需要它：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1.&lt;/span&gt;使用不同的秘钥连接到不同的主机时，需要手动指定对应的秘钥。（ssh-agent 帮我们选择对应的秘钥进行认证）&lt;/span&gt;&lt;span&gt;&lt;span&gt;2.&lt;/span&gt;当私钥设置了密码，而我们又需要频繁的使用私钥进行认证。（ssh-agent 帮我们免去重复输入密码）&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;代理常用命令&lt;/h3&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;# 启动代理&lt;/span&gt;&lt;br/&gt;&lt;span&gt;eval&lt;/span&gt; &lt;span&gt;`ssh-agent`&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 关闭代理&lt;/span&gt;&lt;br/&gt;ssh-agent -k&lt;br/&gt;&lt;span&gt;# 在 ~/.bashrc 中加入以下来实现登陆自动启动 ssh-agent，退出自动 kill 掉程序&lt;/span&gt;&lt;br/&gt;&lt;span&gt;eval&lt;/span&gt; $(ssh-agent -s) &amp;amp;gt; &lt;span&gt;/dev/&lt;/span&gt;&lt;span&gt;null&lt;/span&gt;&lt;br/&gt;&lt;span&gt;trap&lt;/span&gt; &lt;span&gt;&#x27;test -n &quot;&lt;span&gt;$SSH_AGENT_PID&lt;/span&gt;&quot; &amp;amp;&amp;amp; eval `/usr/bin/ssh-agent -k` &amp;amp;gt; /dev/null&#x27;&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 查看代理中的私钥&lt;/span&gt;&lt;br/&gt;ssh-add &lt;span&gt;-l&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 查看代理中私钥对应的公钥&lt;/span&gt;&lt;br/&gt;ssh-add -L&lt;br/&gt;&lt;span&gt;# 移除指定的私钥&lt;/span&gt;&lt;br/&gt;ssh-add &lt;span&gt;-d&lt;/span&gt; /path/of/key/key_name&lt;br/&gt;&lt;span&gt;# 移除所有的私钥&lt;/span&gt;&lt;br/&gt;ssh-add -D&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3&gt;发送公钥&lt;/h3&gt;&lt;p&gt;ssh-copy-id 是一个用来将公钥放到服务器上的脚本。它通过 SSH 密码登陆远程服务器，并将指定的公钥放到远程服务器 &lt;code&gt;$HOME/.ssh/authorized_keys&lt;/code&gt; 中。这个操作也可以先登陆到服务器中，然后通过 vi 等文本编辑命令向 &lt;code&gt;$HOME/.ssh/authorized_keys&lt;/code&gt; 中加入允许登陆的公钥。不过对于云服务器可以在启动服务器时在页面上操作绑定公钥，这样更安全些（阿里云和腾讯云默认关闭秘钥登陆 &lt;code&gt;PasswordAuthentication no&lt;/code&gt; ）。特别注意的是，千万别在公共的网络中通过密码登陆远程服务器，而秘钥登陆没有问题。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;# 发送公钥的两种方式（等价）&lt;/span&gt;&lt;br/&gt;ssh-&lt;span&gt;copy&lt;/span&gt;-&lt;span&gt;id&lt;/span&gt; -i ~/.ssh/id_rsa.pub user@host&lt;br/&gt;ssh user@host &lt;span&gt;&#x27;mkdir -p .ssh &amp;amp;&amp;amp; cat &amp;amp;gt;&amp;amp;gt; .ssh/authorized_keys&#x27;&lt;/span&gt; &amp;amp;&lt;span&gt;lt&lt;/span&gt;; ~&lt;span&gt;/.ssh/id&lt;/span&gt;_rsa.pub&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3&gt;登录&lt;/h3&gt;&lt;h3&gt;登录配置&lt;/h3&gt;&lt;p&gt;SSH 登陆服务器需要知道服务器的主机地址（主机名或主机 IP 地址），用户名和密码，有时还要指定端口号（默认 22 ）。主机名还好，但是主机IP 地址就比较难记的，特别是当你可能要登录十几台服务器时。一般我们使用的登陆命令如下：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;# 登陆目标服务器( 172&lt;span&gt;.17&lt;/span&gt;&lt;span&gt;.132&lt;/span&gt;&lt;span&gt;.120&lt;/span&gt; )&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; -p &lt;span&gt;58422&lt;/span&gt; user@&lt;span&gt;172.17.132.120&lt;/span&gt;&lt;br/&gt;# 通过跳板机登陆目标服务器( 172&lt;span&gt;.17&lt;/span&gt;&lt;span&gt;.132&lt;/span&gt;&lt;span&gt;.120&lt;/span&gt; )&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; -p &lt;span&gt;58422&lt;/span&gt; user&lt;span&gt;@jumper&lt;/span&gt;.example.com ssh user@&lt;span&gt;172.17.132.120&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 端口映射&lt;/span&gt;&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; -p &lt;span&gt;58422&lt;/span&gt; user&lt;span&gt;@jumper&lt;/span&gt;.example.com -fNL &lt;span&gt;5433&lt;/span&gt;:&lt;span&gt;172.17.132.120:5432&lt;/span&gt; -N&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;通过配置 &lt;code&gt;$HOME/.ssh/config&lt;/code&gt; 可以使用以下命令来登录。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;# 登陆目标服务器( 172&lt;span&gt;.17&lt;/span&gt;&lt;span&gt;.132&lt;/span&gt;&lt;span&gt;.120&lt;/span&gt; )&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; target&lt;br/&gt;# 通过跳板机登陆目标服务器( 172&lt;span&gt;.17&lt;/span&gt;&lt;span&gt;.132&lt;/span&gt;&lt;span&gt;.120&lt;/span&gt; )&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; jump_target&lt;br/&gt;&lt;span&gt;# 端口映射&lt;/span&gt;&lt;br/&gt;&lt;span&gt;## 登陆时通过 LocalForward 配置&lt;/span&gt;&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; jump_target&lt;br/&gt;&lt;span&gt;## 使用-L来实现本地端口映射&lt;/span&gt;&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; &lt;span&gt;-C&lt;/span&gt; &lt;span&gt;-N&lt;/span&gt; &lt;span&gt;-g&lt;/span&gt; &lt;span&gt;-L&lt;/span&gt; 5433&lt;span&gt;:127.0.0.1&lt;/span&gt;&lt;span&gt;:5432&lt;/span&gt; &lt;span&gt;jump_target&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;code&quot;&gt;&lt;code&gt;&lt;span&gt;# 通用配置，所有配置都使用&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Host&lt;/span&gt; *&lt;br/&gt;    &lt;span&gt;AddKeysToAgent&lt;/span&gt; &lt;span&gt;yes&lt;/span&gt;      &lt;span&gt;# 将私钥添加到ssh-agent中&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;UseKeychain&lt;/span&gt; &lt;span&gt;yes&lt;/span&gt;         &lt;span&gt;# 保存密码到agent中&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ServerAliveInterval&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;  &lt;span&gt;# 连接心跳间隔10s&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;ServerAliveCountMax&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;   &lt;span&gt;# 重连次数为3&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# target配置&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Host&lt;/span&gt; target&lt;br/&gt;    &lt;span&gt;HostName&lt;/span&gt; 172&lt;span&gt;.17&lt;/span&gt;&lt;span&gt;.132&lt;/span&gt;&lt;span&gt;.120&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;User&lt;/span&gt; user&lt;br/&gt;    &lt;span&gt;Port&lt;/span&gt; &lt;span&gt;58422&lt;/span&gt;&lt;br/&gt;    IdentityFile ~&lt;span&gt;/.ssh/i&lt;/span&gt;d_rsa&lt;br/&gt;&lt;span&gt;# 跳板机配置&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Host&lt;/span&gt; jumper&lt;br/&gt;    &lt;span&gt;HostName&lt;/span&gt; &lt;span&gt;jumper&lt;/span&gt;&lt;span&gt;.example&lt;/span&gt;&lt;span&gt;.com&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;User&lt;/span&gt; user&lt;br/&gt;    &lt;span&gt;Port&lt;/span&gt; &lt;span&gt;58422&lt;/span&gt;&lt;br/&gt;    IdentityFile ~&lt;span&gt;/.ssh/i&lt;/span&gt;d_rsa&lt;br/&gt;&lt;span&gt;Host&lt;/span&gt; jump_target&lt;br/&gt;    &lt;span&gt;HostName&lt;/span&gt; 172&lt;span&gt;.17&lt;/span&gt;&lt;span&gt;.132&lt;/span&gt;&lt;span&gt;.120&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;User&lt;/span&gt; user&lt;br/&gt;    &lt;span&gt;Port&lt;/span&gt; &lt;span&gt;22&lt;/span&gt;&lt;br/&gt;    IdentityFile ~&lt;span&gt;/.ssh/i&lt;/span&gt;d_rsa&lt;br/&gt;    ProxyCommand ssh user@jumper -W %h:%p &lt;span&gt;2&lt;/span&gt;&amp;amp;&lt;span&gt;gt&lt;/span&gt;;&lt;span&gt;/dev/null&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;LocalForward&lt;/span&gt; &lt;span&gt;5433&lt;/span&gt; localhost:&lt;span&gt;5432&lt;/span&gt;    &lt;span&gt;# 本地5433映射到jump_target的5432&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;TIPS:&lt;/strong&gt;&lt;br/&gt;VS Code 的 Remote 插件会读取本地的配置文件 &lt;code&gt;$HOME/.ssh/config&lt;/code&gt;，以便像本地一样进行远程开发。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;首次登陆&lt;/h3&gt;&lt;p&gt;一般在 &lt;code&gt;$HOME/.ssh&lt;/code&gt; 目录下除了公私钥文件，config 配置文件，authorized_keys 认证文件外，还有一个 known_hosts 文件。这个文件记录了远程主机 ip 和远程主机对应的公钥指纹。我们在第一次登陆（密码或秘钥登陆）服务器时，会有如下的提示界面：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;### SSH 首次登陆的提示&lt;/span&gt;&lt;br/&gt;The authenticity &lt;span&gt;of&lt;/span&gt; host &lt;span&gt;&#x27;127.0.0.1 (127.0.0.1)&#x27;&lt;/span&gt; can&lt;span&gt;&#x27;t be established.&lt;/span&gt;&lt;br/&gt;ECDSA key fingerprint &lt;span&gt;is&lt;/span&gt; SHA256:HosOqhcUmbB7QG81yCuDPkvxTgot+vpple+czXPrEug.&lt;br/&gt;&lt;span&gt;ECDSA&lt;/span&gt; &lt;span&gt;key&lt;/span&gt; &lt;span&gt;fingerprint&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; &lt;span&gt;MD5&lt;/span&gt;&lt;span&gt;:fd&lt;/span&gt;&lt;span&gt;:d7&lt;/span&gt;&lt;span&gt;:e1&lt;/span&gt;&lt;span&gt;:2c&lt;/span&gt;&lt;span&gt;:42&lt;/span&gt;&lt;span&gt;:4e&lt;/span&gt;&lt;span&gt;:b4&lt;/span&gt;&lt;span&gt;:2d&lt;/span&gt;&lt;span&gt;:a3&lt;/span&gt;&lt;span&gt;:21&lt;/span&gt;&lt;span&gt;:4d&lt;/span&gt;&lt;span&gt;:d1&lt;/span&gt;&lt;span&gt;:c4&lt;/span&gt;&lt;span&gt;:74&lt;/span&gt;&lt;span&gt;:64&lt;/span&gt;&lt;span&gt;:2d.&lt;/span&gt;&lt;br/&gt;Are you sure you want to &lt;span&gt;continue&lt;/span&gt; connecting (&lt;span&gt;yes&lt;/span&gt;/&lt;span&gt;no&lt;/span&gt;)?&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;此时 known_hosts 并没有 127.0.0.1 这台机器的指纹信息，所以显示这个提示来让我们确认这个指纹是否是目标机器的 ECDSA 算法的指纹。当我们输入 yes 确认后，在下次登录的时候，远程主机发送过来的公钥指纹，直接和 known_hosts 文件中对应 ip 的公钥指纹比较即可。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;# 本机查看服务器 172.17.132.120 的所有公钥（要与服务器上 /etc/ssh 下面的公钥 *.pub 一致）&lt;/span&gt;&lt;br/&gt;&lt;span&gt;ssh-keyscan&lt;/span&gt; &lt;span&gt;-p&lt;/span&gt; 22 172&lt;span&gt;.17&lt;/span&gt;&lt;span&gt;.132&lt;/span&gt;&lt;span&gt;.120&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 查看服务器公钥 ecdsa 的指纹 -E md5/sha256 指纹 hash 算法&lt;/span&gt;&lt;br/&gt;ssh-keygen -E md5 -lf /etc/ssh/ssh_host_ecdsa_key.pub&lt;br/&gt;## 256 &lt;span&gt;MD5&lt;/span&gt;&lt;span&gt;:84&lt;/span&gt;&lt;span&gt;:3d&lt;/span&gt;&lt;span&gt;:9c&lt;/span&gt;&lt;span&gt;:6e&lt;/span&gt;&lt;span&gt;:75&lt;/span&gt;&lt;span&gt;:f2&lt;/span&gt;&lt;span&gt;:6b&lt;/span&gt;&lt;span&gt;:b2&lt;/span&gt;&lt;span&gt;:0b&lt;/span&gt;&lt;span&gt;:40&lt;/span&gt;&lt;span&gt;:aa&lt;/span&gt;&lt;span&gt;:d6&lt;/span&gt;&lt;span&gt;:29&lt;/span&gt;&lt;span&gt;:2f&lt;/span&gt;&lt;span&gt;:b4&lt;/span&gt;&lt;span&gt;:40&lt;/span&gt; &lt;span&gt;no&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; (&lt;span&gt;ECDSA&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;## 256 SHA256:ZoGnph63gnKLC9wQYrHYVU8ROTf6+K9LKAjn+jrXB2o no comment (ECDSA)&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 从客户端查看服务器公钥 ecdsa 的指纹（初次登陆时要验证的指纹）&lt;/span&gt;&lt;br/&gt;ssh-keyscan -t ecdsa -p 22 172.17.132.120 |ssh-keygen -lf -&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 公钥转换成特定指纹 hash 算法的指纹&lt;/span&gt;&lt;br/&gt;&lt;span&gt;awk&lt;/span&gt; &lt;span&gt;&#x27;{print &lt;span&gt;$2&lt;/span&gt;}&#x27;&lt;/span&gt; /etc/ssh/ssh_host_ecdsa_key.pub | base64 -d|openssl sha256 -binary |base64&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;TIPS: known_hosts的重要性&lt;/strong&gt;&lt;br/&gt;known_hosts 这个文件是客户端验证服务端身份的重要依据。每次客户端向服务端发起连接请求时，不仅服务端要验证客户端的合法性，客户端也需要验证服务端的身份。客户端就是通过 known_hosts 中的公钥指纹来验证服务器是否发生了变化。它在一定程度上能避免中间人攻击，除了第一次登陆，因为那时 known_hosts 中还没有服务器的身份信息，所以对于首次提示的登陆指纹信息还是需要和服务器比对的。最安全保险的做法是第一次登陆就使用秘钥登陆。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;登陆流程&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1.&lt;/span&gt;版本号协商阶段&lt;/span&gt;&lt;span&gt;&lt;span&gt;2.&lt;/span&gt;密钥和算法协商阶段&lt;br/&gt;服务端和客户端分别发送算法协商报文给对方，报文中包含自己支持的公钥算法列表、加密算法列表、消息验证码算法列表、压缩算法列表等。服务端和客户端根据对方和自己支持的算法得出最终使用的算法。服务端和客户端利用 DH 交换算法、主机密钥对等参数，生成会话密钥和会话 ID。&lt;/span&gt;&lt;span&gt;&lt;span&gt;3.&lt;/span&gt;认证阶段( publickey &amp;gt; gssapi-keyex &amp;gt; gssapi-with-mic &amp;gt; password )&lt;/span&gt;&lt;span&gt;&lt;span&gt;4.&lt;/span&gt;会话请求阶段&lt;/span&gt;&lt;span&gt;&lt;span&gt;5.&lt;/span&gt;会话交互阶段&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;密码登陆&lt;/h3&gt;&lt;p&gt;密码登陆的认证流程如下：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1.&lt;/span&gt;客户端使用密钥和算法协商阶段生成的会话密钥加密账号、认证方法、口令，将结果发送给服务器。&lt;/span&gt;&lt;span&gt;&lt;span&gt;2.&lt;/span&gt;服务端使用获得的会话密钥解密报文，得到账号和口令。&lt;/span&gt;&lt;span&gt;&lt;span&gt;3.&lt;/span&gt;服务端对这个账号和口令进行判断，如果失败，向客户端发送认证失败报文，其中包含了可以再次认证的方法列表。&lt;/span&gt;&lt;span&gt;&lt;span&gt;4.&lt;/span&gt;客户端从认证方法列表中选择一种方法进行再次认证。&lt;/span&gt;&lt;span&gt;&lt;span&gt;5.&lt;/span&gt;这个过程反复进行，直到认证成功或者认证次数达到上限，服务端关闭本次TCP连接。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.779467680608365&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/bDCibGAYVPCyvWRy5tG2SM6maAtlm1FjppibRgEHsRBrs3OXeIH4vY1mBUibeNp7OlVmbfFeaZf8PFvicrDqVyjNKw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1315&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;h3&gt;秘钥登陆&lt;/h3&gt;&lt;p&gt;秘钥登陆的认证流程如下：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1.&lt;/span&gt;客户端使用密钥和算法协商阶段生成的会话密钥加密账号、认证方法、id_rsa.pub，将结果发送给服务端。&lt;/span&gt;&lt;span&gt;&lt;span&gt;2.&lt;/span&gt;服务端使用会话密钥解密报文，得到账号、id_rsa.pub。服务端在 &lt;code&gt;$HOME/.ssh/authorized_keys&lt;/code&gt; 中找对应的公钥，如果没有找到，发送失败消息给客户端，如果找到，比较客户发送过来的这个公钥和找到的公钥，如果内容相同，服务端生成一个随机的字符串，简称“质询”，然后使用找到的公钥加密这个质询，然后使用会话密钥再次加密。&lt;/span&gt;&lt;span&gt;&lt;span&gt;3.&lt;/span&gt;服务端把这个双重加密的数据发送给客户端&lt;/span&gt;&lt;span&gt;&lt;span&gt;4.&lt;/span&gt;客户端使用会话密钥解密报文，然后使用 id_rsa 再次解密数据，得到质询。&lt;/span&gt;&lt;span&gt;&lt;span&gt;5.&lt;/span&gt;客户端使用会话密钥加密质询，发送给服务端。&lt;/span&gt;&lt;span&gt;&lt;span&gt;6.&lt;/span&gt;服务端使用会话密钥解密报文，得到质询，判断是不是自己生成的那个质询，如果不相同，发送失败消息给客户端，如果相同，认证通过。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.7725024727992087&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/bDCibGAYVPCyvWRy5tG2SM6maAtlm1FjpppoNTQXdESAj2WewibQ7VN5yb2FQ1WfLTUu1CIEgD1m5nicrLQ4oTPxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1011&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;h3&gt;二者区别&lt;/h3&gt;&lt;p&gt;我们常说使用秘钥登陆比密码登陆更方便更安全，为什么这么说呢？方便是因为不用记密码，安全是一方面敏感关键的密码没有在传输，另一方面是因为质询的存在使得在一次对话中同时验证了客户端和服务端。&lt;/p&gt;&lt;h2&gt;高阶用法&lt;/h2&gt;&lt;h3&gt;免密安全传输&lt;/h3&gt;&lt;p&gt;scp/rsync/sftp 都可以基于 SSH 来进行免密安全传输，常见命令如下：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;# 从本地同步 src.tar.gz 文件到远程服务器 jump_target 的目录 /path/to/des/&lt;/span&gt;&lt;br/&gt;scp src.tar.gz jump_target:&lt;span&gt;/path/to/des/&lt;/span&gt;&lt;br/&gt;rsync -avz src.tar.gz jump_target:&lt;span&gt;/path/to/des/&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 从远程服务器 jump_target 的文件 /path/to/src.tar.gz 到本地&lt;/span&gt;&lt;br/&gt;&lt;span&gt;scp&lt;/span&gt; jump_target:/path/to/src.tar.gz .&lt;br/&gt;&lt;span&gt;rsync&lt;/span&gt; -avz jump_target:/path/to/src.tar.gz .&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3&gt;端口转发&lt;/h3&gt;&lt;p&gt;SSH 不仅仅能够自动加密和解密 SSH 客户端与服务端之间的网络数据，同时，SSH 还能够提供了一个非常有用的功能，那就是端口转发，即将 TCP 端口的网络数据，转发到指定的主机某个端口上，在转发的同时会对数据进行相应的加密及解密。如果工作环境中的防火墙限制了一些网络端口的使用，但是允许 SSH 的连接，那么也是能够通过使用 SSH 转发后的端口进行通信。转发主要分为本地转发与远程转发两种类型。&lt;/p&gt;&lt;h3&gt;转发常用参数&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-C: 压缩传输，提高传输速度。&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-f: 将 SSH 传输转入后台执行，不占用当前 SHELL, 常与 -N 一起使用&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-N: 建立静默连接（建立了连接但看不到具体会话）&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-g: 在 -L/-R/-D 参数中，允许远程主机连接到建立的转发的端口，如果不加这个参数，只允许本地主机建立连接。&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-L: 本地端口转发&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-R: 远程端口转发&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-D：动态转发（ SOCKS 代理）&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;-P: 指定 SSH 端口&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;本地端口转发&lt;/h3&gt;&lt;p&gt;由本地网络服务器的端口 A，转发到远程服务器端口 B。说白了就是，将发送到本地端口 A 的请求，转发到目标端口 B。格式如下&lt;/p&gt;&lt;p&gt;&lt;code&gt;ssh -L 本地网卡地址:本地端口:目标地址:目标端口 用户@目标地址&lt;/code&gt; 常见的应用场景见下图：&lt;img data-ratio=&quot;1.6966067864271457&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/bDCibGAYVPCyvWRy5tG2SM6maAtlm1FjpPx5YjUWd5uUgsiagYNq0TpN2CnCiakkhOtYvp4uick5F1DKvuxSQcYF5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;501&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;p&gt;对应的命令如下：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;# jump_target 服务器上的 3306 端口服务映射到本地 33306 `mysql -u root -p root -H localhost -P 33306`&lt;/span&gt;&lt;br/&gt;&lt;span&gt;## 1 是 2，3，5 路线中的加密通道，将本地 33306 的网络数据转发到 jump_target 的 3306 端口&lt;/span&gt;&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; &lt;span&gt;-C&lt;/span&gt; &lt;span&gt;-N&lt;/span&gt; &lt;span&gt;-g&lt;/span&gt; &lt;span&gt;-L&lt;/span&gt; 33306&lt;span&gt;:localhost&lt;/span&gt;&lt;span&gt;:3306&lt;/span&gt; &lt;span&gt;jump_target&lt;/span&gt;&lt;br/&gt;## 在 2，3 中搞了个加密通道，然后在跳板机上将本地 33306 的网络数据转发到 172&lt;span&gt;.17&lt;/span&gt;&lt;span&gt;.132&lt;/span&gt;&lt;span&gt;.120&lt;/span&gt; 的 3306 端口&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; &lt;span&gt;-C&lt;/span&gt; &lt;span&gt;-N&lt;/span&gt; &lt;span&gt;-g&lt;/span&gt; &lt;span&gt;-L&lt;/span&gt; 33306&lt;span&gt;:172.17.132.120&lt;/span&gt;&lt;span&gt;:3306&lt;/span&gt; &lt;span&gt;jumper&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3&gt;远程端口转发&lt;/h3&gt;&lt;p&gt;由远程服务器的某个端口，转发到本地网络的服务器某个端口。说白了，就是将发送到远程端口的请求，转发到目标端口。格式如下：&lt;/p&gt;&lt;p&gt;&lt;code&gt;ssh -R 远程网卡地址:远程端口:目标地址:目标端口 用户@目标地址&lt;/code&gt; 常见的应用场景有个专用术语叫内网穿透，结构如下图:&lt;img data-ratio=&quot;1.2255747126436782&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/bDCibGAYVPCyvWRy5tG2SM6maAtlm1FjpoY0xVAYU4ZArKO2kfEFznOJiaYlwpNcabPCLKwKX3dpaVdXmgib7mDJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;696&quot; title=&quot;null&quot;/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;# 将公网上的服务器 jump_target 的端口 33333 映射到本地的 22，这样就可以通过在 jump_target 上通过 SSH 来访问本地机器&lt;/span&gt;&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; &lt;span&gt;-f&lt;/span&gt; &lt;span&gt;-N&lt;/span&gt; &lt;span&gt;-g&lt;/span&gt; &lt;span&gt;-R&lt;/span&gt; 33333&lt;span&gt;:127.0.0.1&lt;/span&gt;&lt;span&gt;:22&lt;/span&gt; &lt;span&gt;jump_target&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;TIPS:&lt;/strong&gt;&lt;br/&gt;公网上的服务器 jump_target 要设置 &lt;code&gt;GatewayPorts yes&lt;/code&gt;，默认为 no。此外要映射的端口 33333 要可以访问。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;动态转发&lt;/h3&gt;&lt;p&gt;动态转发就是建立一个SSH加密的SOCKS 4/5代理通道。任何支持 SOCKS 4/5 协议的程序都可以使用这个加密的通道进行访问。格式如下： &lt;code&gt;ssh -D [本地地址:]本地端口号 远程用户@远程地址&lt;/code&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;# 将访问本地 55558 端口的请求都转发给 jump_target ，并让它去执行&lt;/span&gt;&lt;br/&gt;&lt;span&gt;ssh&lt;/span&gt; &lt;span&gt;-C&lt;/span&gt; &lt;span&gt;-N&lt;/span&gt; &lt;span&gt;-g&lt;/span&gt; &lt;span&gt;-T&lt;/span&gt; &lt;span&gt;-D&lt;/span&gt; 127&lt;span&gt;.0&lt;/span&gt;&lt;span&gt;.0&lt;/span&gt;&lt;span&gt;.1&lt;/span&gt;&lt;span&gt;:55558&lt;/span&gt; &lt;span&gt;jump_target&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h2&gt;日常使用问题&lt;/h2&gt;&lt;h3&gt;跳板机的配置&lt;/h3&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;# 跳板机的配置&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Host&lt;/span&gt; jump&lt;br/&gt;  &lt;span&gt;HostName&lt;/span&gt;  &lt;span&gt;jumper&lt;/span&gt;&lt;span&gt;.example&lt;/span&gt;&lt;span&gt;.com&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;Port&lt;/span&gt;      &lt;span&gt;58422&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;User&lt;/span&gt;      haojunyu&lt;br/&gt;  IdentityFile ~&lt;span&gt;/.ssh/&lt;/span&gt;dg_rsa&lt;br/&gt;  &lt;span&gt;AddKeysToAgent&lt;/span&gt; &lt;span&gt;yes&lt;/span&gt;    &lt;span&gt;# 将私钥添加到 agent 中&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;UseKeychain&lt;/span&gt; &lt;span&gt;yes&lt;/span&gt;       &lt;span&gt;# 保存密码到 agent 中&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 目标机的配置&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Host&lt;/span&gt; ws&lt;br/&gt;  &lt;span&gt;HostName&lt;/span&gt;  172&lt;span&gt;.17&lt;/span&gt;&lt;span&gt;.132&lt;/span&gt;&lt;span&gt;.120&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;Port&lt;/span&gt;      &lt;span&gt;22&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;User&lt;/span&gt;      haojunyu&lt;br/&gt;  IdentityFile ~&lt;span&gt;/.ssh/&lt;/span&gt;dg_rsa&lt;br/&gt;  ProxyCommand ssh haojunyu@jump -W %h:%p &lt;span&gt;2&lt;/span&gt;&amp;amp;&lt;span&gt;gt&lt;/span&gt;;&lt;span&gt;/dev/null&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;ServerAliveInterval&lt;/span&gt; &lt;span&gt;10&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;ServerAliveCountMax&lt;/span&gt; &lt;span&gt;3&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3&gt;内网任意服务访问&lt;/h3&gt;&lt;p&gt;日常工作中经常会启很多服务在内网机器上，然后通过打洞（本地端口转发）来将本地的端口映射到内网机器上服务端口。这样有个问题就是一个服务就得维持一个打洞命令 &lt;code&gt;ssh -C -N -g -L 33306:172.17.132.120:3306 jumper&lt;/code&gt;。对应这样的问题，最好的解决方案是使用动态转发 &lt;code&gt;ssh -C -N -g -T -D 127.0.0.1:55557 hb_jumper&lt;/code&gt;， 本地通过 SwitchyOmega 或 proxifier 工具来将内网 IP 段 172.17.* 的请求转发到本地的 55557 端口。&lt;/p&gt;&lt;h3&gt;git push 报权限不允许（公钥）&lt;/h3&gt;&lt;p&gt;通常在服务器上执行 &lt;code&gt;git push&lt;/code&gt; 时会报如下错误&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;具体报错信息：&lt;br/&gt;Permission denied (publickey). fatal: Could not read from remote repository.&lt;/p&gt;&lt;p&gt;Please make sure you have the correct access rights and the repository exists.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;报错的原因是当前机器上没有服务告诉 git 要使用哪个私钥来进行 git 的操作。对应的解决方法也比较多，推荐解法一和二：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;解法一：通过 &lt;code&gt;~/.ssh/config&lt;/code&gt; 指定(适用个人机器)&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt; &lt;span&gt;Host&lt;/span&gt; &lt;span&gt;github&lt;/span&gt;&lt;span&gt;.com&lt;/span&gt;&lt;br/&gt;     &lt;span&gt;HostName&lt;/span&gt;  &lt;span&gt;github&lt;/span&gt;&lt;span&gt;.com&lt;/span&gt;&lt;br/&gt;     &lt;span&gt;User&lt;/span&gt;      haojunyu&lt;br/&gt;     IdentityFile ~&lt;span&gt;/.ssh/i&lt;/span&gt;d_rsa&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;解法二：配置仓库或全局的 core.sshCommand（指定仓库适用共享机器，全局适用个人机器.&lt;strong&gt;git版本高于2.3.0&lt;/strong&gt;）&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;git&lt;/span&gt; config core.sshCommand &lt;span&gt;&quot;ssh -i ~/.ssh/id_rsa -F /dev/null&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;解法三：ssh-agent 临时授权（适用共享机器）&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;eval&lt;/span&gt; &lt;span&gt;`ssh-agent`&lt;/span&gt;&lt;br/&gt;ssh-add ~&lt;span&gt;/.ssh/i&lt;/span&gt;d_rsa&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;端口转发命令服务化&lt;/h3&gt;&lt;p&gt;这个情况是希望开机时就把端口转发开通，并且一直保持着。这就得介绍 linux 中常用的两种服务化的工具：Supervisor 和 Systemd。前者是需要安装 Supervisor， 但工具比较轻量，使用也比较简单，后者虽然比较重，但是基本所有系统都自带。下面提供两者的配置方法：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Supervisor 的配置&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;[program:ssh-wifi_ol]&lt;br/&gt;&lt;span&gt;command&lt;/span&gt;=ssh -C -N -g -L &lt;span&gt;9789&lt;/span&gt;:&lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;9789&lt;/span&gt; jump&lt;br/&gt;&lt;span&gt;stdout_logfile&lt;/span&gt;=/Users/haojunyu/.supervisord_log/ssh-wifi_ol.log&lt;br/&gt;&lt;span&gt;autostart&lt;/span&gt;=&lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;span&gt;autorestart&lt;/span&gt;=&lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;span&gt;startsecs&lt;/span&gt;=&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span&gt;priority&lt;/span&gt;=&lt;span&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span&gt;stopasgroup&lt;/span&gt;=&lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;span&gt;killasgroup&lt;/span&gt;=&lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Systemd 的配置&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;# gfw service&lt;/span&gt;&lt;br/&gt;[Unit]&lt;br/&gt;&lt;span&gt;Description&lt;/span&gt;=gfw&lt;br/&gt;&lt;span&gt;After&lt;/span&gt;=network.target&lt;br/&gt;[Service]&lt;br/&gt;&lt;span&gt;Type&lt;/span&gt;=simple&lt;br/&gt;&lt;span&gt;User&lt;/span&gt;=hjy&lt;br/&gt;&lt;span&gt;ExecStart&lt;/span&gt;=ssh -C -N -g -T -D &lt;span&gt;127.0&lt;/span&gt;.&lt;span&gt;0.1&lt;/span&gt;:&lt;span&gt;55558&lt;/span&gt; gfw&lt;br/&gt;&lt;span&gt;Restart&lt;/span&gt;=&lt;span&gt;on&lt;/span&gt;-failure&lt;br/&gt;[Install]&lt;br/&gt;&lt;span&gt;WantedBy&lt;/span&gt;=multi-user.target&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;TIPS:&lt;/strong&gt;&lt;br/&gt;把一些经常用的服务通过端口转发服务化，而一些临时性的服务通过命令来进行端口转发，也可以使用同事编写的端口转发的 Python 程序来进行。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;参考文献&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1.&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzA5NzgzODI5NA==&amp;amp;mid=2454046571&amp;amp;idx=3&amp;amp;sn=938e3b2ac2edc241c83118ee67fd89b5&amp;amp;scene=21#wechat_redirect&quot; title=&quot;什么是SSH？你应该用过吧&quot; data-linktype=&quot;2&quot;&gt;什么是SSH？你应该用过吧&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2.&lt;/span&gt;&lt;span&gt;维基百科-SSH&lt;sup&gt;[4]&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;3.&lt;/span&gt;&lt;span&gt;windows支持openssh&lt;sup&gt;[5]&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;4.&lt;/span&gt;&lt;span&gt;图解SSH原理&lt;sup&gt;[6]&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;5.&lt;/span&gt;&lt;span&gt;SSH官方文档&lt;sup&gt;[7]&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;6.&lt;/span&gt;&lt;span&gt;所有配图&lt;sup&gt;[8]&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;7.&lt;/span&gt;&lt;span&gt;中间人攻击&lt;sup&gt;[9]&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;8.&lt;/span&gt;&lt;span&gt;了解ssh代理&lt;sup&gt;[10]&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;9.&lt;/span&gt;&lt;span&gt;ssh远程登陆中的钥匙指纹是什么以及如何比对&lt;sup&gt;[11]&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;10.&lt;/span&gt;&lt;span&gt;ssh登陆认证过程详解&lt;sup&gt;[12]&lt;/sup&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;References&lt;/h3&gt;&lt;p&gt;&lt;code&gt;[1]&lt;/code&gt; windows: &lt;em&gt;https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_overview&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[2]&lt;/code&gt; SSH: &lt;em&gt;https://zh.wikipedia.org/wiki/Secure_Shell&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[3]&lt;/code&gt; 管理秘钥: &lt;em&gt;https://www.zsythink.net/archives/2407&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[4]&lt;/code&gt; 维基百科-SSH: &lt;em&gt;https://zh.wikipedia.org/wiki/Secure_Shell&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[5]&lt;/code&gt; windows支持openssh: &lt;em&gt;https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_overview&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[6]&lt;/code&gt; 图解SSH原理: &lt;em&gt;https://www.jianshu.com/p/33461b619d53&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[7]&lt;/code&gt; SSH官方文档: &lt;em&gt;https://www.ietf.org/rfc/rfc4252.txt&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[8]&lt;/code&gt; 所有配图: &lt;em&gt;https://www.processon.com/diagraming/5f4d21f07d9c082a6bac4586&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[9]&lt;/code&gt; 中间人攻击: &lt;em&gt;https://zh.wikipedia.org/wiki/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[10]&lt;/code&gt; 了解ssh代理: &lt;em&gt;https://www.zsythink.net/archives/2407&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[11]&lt;/code&gt; ssh远程登陆中的钥匙指纹是什么以及如何比对: &lt;em&gt;https://blog.xavierskip.com/2019-11-09-ssh-fingerprint/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[12]&lt;/code&gt; ssh登陆认证过程详解: &lt;em&gt;https://blog.csdn.net/lihang656/article/details/69467162&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d9c47e372f455953c4c389b40a16deb4</guid>
<title>[推荐] 2021 春节书单：110 位 CEO 心中的 NO.1</title>
<link>https://toutiao.io/k/p6kzudl</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;罗伯特·艾格的企业管理理念和为人处事的方式很具有启发和学习的价值。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——&lt;span&gt;陈威，&lt;/span&gt;52TOYS创始人、CEO&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;因为做传媒投资的缘故，我一直对迪士尼很关注，这是一个传统传媒企业运作成功的经典案例。我在阅读这本书时，有三点艾格给我留下了非常深刻的印象。分别是勤奋、真诚和创新。深入了解迪士尼，从阅读该书开始。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——陈杭，中国文化产业基金投资管理公司总裁&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;强烈推荐，借用书单狗的话描述阅读体验：惊心动魄，受益匪浅。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——邵振兴，君联资本董事总经理&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;艾格在这本书记述了迪士尼如何批量打造超级IP的经营哲学，如何率领迪士尼从被收购的边缘成长为一个价值万亿的娱乐帝国。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——王曦梓，壹同制作副总经理&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;艾格最大的武器是能看清和坚守“价值”，选认为最有价值的人、公司、IP，好的文化产品很多早期并不赚钱，但你是否能认定它独一无二的价值？好的文化产品也很慢，做一个战略需要5年、10年甚至更久去实现，坚定这个价值，是更大的考验。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——匿名动画大咖&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>