<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>b3fdcac0277902c7a8690babc4911031</guid>
<title>最新互联网大厂职位薪资，快来对号入座吧</title>
<link>https://toutiao.io/k/jpow46x</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;span&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;KCUN&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;rann&quot;&gt;&lt;strong&gt;职级&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;4DiV&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;01rI&quot;&gt;&lt;strong&gt;职位&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;XwgX&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;9lUI&quot;&gt;&lt;strong&gt;薪资范围&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;MUI2&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;lCGg&quot;&gt;T3&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;kF6y&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;6aWp&quot;&gt;初级专员&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;JWIj&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;nIfN&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;N7ou&quot;&gt;T4&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;fYPl&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;xa46&quot;&gt;工程师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;Su4J&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;FPhj&quot;&gt;20-30K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;pQjL&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;XqxR&quot;&gt;T5&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;x4Vq&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;vowV&quot;&gt;高级工程师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;ZBER&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;0ul6&quot;&gt;25-40K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;FnzG&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;vhN6&quot;&gt;T6&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;0GUL&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;1&quot; rowspan=&quot;3&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;d820&quot;&gt;资深工程师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;K7de&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;90xg&quot;&gt;35-50K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;Mc7l&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;ijHo&quot;&gt;T7&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;mRs0&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;Q0va&quot;&gt;40-65K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;iI8Y&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;pAIy&quot;&gt;T8&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;ygat&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;ANL8&quot;&gt;50-80K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;7gM4&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;8GPT&quot;&gt;T9&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;Afv6&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;kohx&quot;&gt;架构师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;kmFT&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;4GCh&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;h7yg&quot;&gt;T10&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;1dfu&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;k3tj&quot;&gt;主任架构师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;jzCH&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;bHXh&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;wdoo&quot;&gt;T11&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;2eGf&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;XLbq&quot;&gt;首席科学家&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;uXUf&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/span&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;补充介绍：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;百度的职级划分主要分为T、P、S、M四条线，其中T序列为技术通道。公司员工主要集中在T5、T6，从T7开始要带团队、做管理，百度人晋升的第一个坎在T5升T6，越往上越难。&lt;/p&gt;&lt;p&gt;薪资结构为15薪，年终奖是2-3个月，T5以上有股票。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;业内百度与阿里职级的对应关系是加一，即百度T6对标阿里P7，年薪总包大概是70-100w。&lt;/p&gt;&lt;/blockquote&gt;&lt;p line=&quot;BBUp&quot;&gt; &lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;阿里&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td guid=&quot;IuIe&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;qA1A&quot;&gt;&lt;strong&gt;职级&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;EdUt&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;AaAY&quot;&gt;&lt;strong&gt;职位&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;AumO&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;iJns&quot;&gt;&lt;strong&gt;薪资范围&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;NuzT&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;MLTQ&quot;&gt;P5&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;qb7g&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;gKEJ&quot;&gt;工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;QUqm&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;u3sX&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;Tobs&quot;&gt;P6/M1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Mn6T&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;rlFn&quot;&gt;高级工程师/主管&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;oEb3&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;cd5H&quot;&gt;25-40K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;8h1r&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;N69R&quot;&gt;P7/M2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;EPau&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;Cz3C&quot;&gt;专家/经理&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;XwzG&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;EFnO&quot;&gt;30-50K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;Nx4P&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;LseQ&quot;&gt;P8/M3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Jg2T&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;BsDK&quot;&gt;高级专家/资深经理&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;YcJI&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;kz5W&quot;&gt;45-70K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;1Qdn&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;A4u5&quot;&gt;P9/M4&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;3Jad&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;AZIx&quot;&gt;资深专家/总监&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;KRtd&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;nWte&quot;&gt;60-90K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;DJUG&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;lkg4&quot;&gt;P10/M5&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;ZqRI&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;1&quot;&gt;&lt;p&gt;研究员/资深总监&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;HtRw&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;7rCL&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;W4CC&quot;&gt;P11/M6&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;CNPm&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;9oxf&quot;&gt;高级研究员/副总裁&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;ITrM&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;bMT2&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;h8Vb&quot;&gt;P12/M7&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Paq5&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;W2jW&quot;&gt;资深研究员/总裁&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;5O3L&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;UK8L&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;7u58&quot;&gt;P13/M8&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;4Yn1&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;yvcf&quot;&gt;科学家/执行总裁&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;QGES&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;bvn4&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;10&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;CNQL&quot;&gt;P14/M9&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;a6co&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;10&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;ZRXI&quot;&gt;首席科学家/副董事长&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;FoKn&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;10&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;Ygwm&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;11&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;LePH&quot;&gt;M10&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;dwRV&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;11&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;c3QV&quot;&gt;董事长&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;nmyq&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;11&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;section&gt;&lt;strong&gt;&lt;strong&gt;补充介绍：&lt;/strong&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;阿里内部有两套人才体系：P序列是技术专家路线，另一套M序列则是管理路线。&lt;/p&gt;&lt;p&gt;默认校招生是P5，社招初始职级是P6，P6升P7有一定难度，P7升P8是一个坎，阿里人主要集中在P6-P8。&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;从P7开始有股票，股票是工作满2年才能开始拿，按照2-1-1政策分发（满两年拿50％，第3年25%，第4年25%，4年拿完）。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;据说目前P7的offer是400股票，以阿里16薪算，年薪总包大概是70-100w。&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p line=&quot;OM1n&quot;&gt; &lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;腾讯&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td guid=&quot;TjWp&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;8H7m&quot;&gt;&lt;strong&gt;职级&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;0tpf&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;TeYV&quot;&gt;&lt;strong&gt;职位&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;8Aaj&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;gObX&quot;&gt;&lt;strong&gt;薪资范围&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;4cK4&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;4lhq&quot;&gt;4级/1-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;y1P3&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;1&quot; rowspan=&quot;2&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;OKXc&quot;&gt;助理工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;NsEx&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;fjcH&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;0&quot;&gt;&lt;p&gt;5级/1-3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;3KvO&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;w4hj&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;0&quot;&gt;&lt;p&gt;6级/2-1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;7EaT&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;1&quot; rowspan=&quot;3&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;xhe6&quot;&gt;工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;YpQ1&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;rDHK&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;0&quot;&gt;&lt;p&gt;7级/2-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;OgB0&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;If6T&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;0&quot;&gt;&lt;p&gt;8级/2-3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;5euo&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;cVgp&quot;&gt;20-30K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;Ey0V&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;0&quot;&gt;&lt;p&gt;9级/3-1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;pKyi&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;1&quot; rowspan=&quot;3&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;h5Xg&quot;&gt;高级工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;8HBD&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;2&quot;&gt;&lt;p&gt;25-40K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;cWm3&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;0&quot;&gt;&lt;p&gt;10级/3-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;iqZV&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;2&quot;&gt;&lt;p&gt;35-50K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;y9AU&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;0&quot;&gt;&lt;p&gt;11级/3-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;DAtC&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;2&quot;&gt;&lt;p&gt;45-70K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;1ZGt&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;0&quot;&gt;&lt;p&gt;12级/4-1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;dLnR&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;1&quot; rowspan=&quot;3&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;7DDU&quot;&gt;专家工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;LqpG&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;2&quot;&gt;&lt;p&gt;60-90K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;kcKj&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;10&quot; col=&quot;0&quot;&gt;&lt;p&gt;13级/4-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Srth&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;10&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;8yez&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;11&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;vALx&quot;&gt;14级/4-3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;43JL&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;11&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;KTc5&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;12&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;jt3w&quot;&gt;15级/5-1,2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;wVzN&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;12&quot; col=&quot;1&quot; rowspan=&quot;2&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;dXo4&quot;&gt;资深专家工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;JAS3&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;12&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;UQxP&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;13&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;FlqA&quot;&gt;16级/5-3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;jZlu&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;13&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;9hnB&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;14&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;F8pA&quot;&gt;17级/6-1,2,3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;rSDs&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;14&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;a9bJ&quot;&gt;权威专家&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Dm6j&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;14&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;补充介绍：&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;腾讯取消了原来的6级18等的职级体系，将专业职级体系优化为4-17级，4级是校招，6级是社招。腾讯半年一次晋升，三星就可以答辩，12级以下答辩下放部门，11级升12级是个坎。&lt;/p&gt;&lt;p&gt;一般是16薪，但实发年终奖成谜，动不动就拿6-10个月，游戏团队更是让人羡慕。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;腾讯这边10级，对标阿里P7+，年薪总包大概是80-120w。&lt;span/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p line=&quot;V9wM&quot;&gt; &lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;字节&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td guid=&quot;3pPp&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;gdh5&quot;&gt;&lt;strong&gt;职级&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;F4kc&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;SfA2&quot;&gt;&lt;strong&gt;职位&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;OjVb&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;yPiQ&quot;&gt;&lt;strong&gt;薪资范围&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;T1J7&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;Me4F&quot;&gt;T1-1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;iwbc&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;LZMo&quot;&gt;初级工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;53ii&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;vkgH&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;ZRq5&quot;&gt;T1-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;gEHj&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;dhgi&quot;&gt;中级工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;wa17&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;CZl6&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;Wevj&quot;&gt;T2-1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;63ie&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;1&quot; rowspan=&quot;2&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;oDXU&quot;&gt;资深工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;gBYJ&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;Oz7a&quot;&gt;25-40K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;KdyJ&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;Kz3c&quot;&gt;T2-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;vPaW&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;q7Mx&quot;&gt;35-55K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;QLNp&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;DTKi&quot;&gt;T3-1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;CZni&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;1&quot; rowspan=&quot;2&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;hKJZ&quot;&gt;team领导层&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;66gl&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;pEj1&quot;&gt;45-70K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;roHR&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;CPl4&quot;&gt;T3-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;vSfA&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;aU9p&quot;&gt;55-80K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;8vPm&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;zqZG&quot;&gt;T4-1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Tkp6&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;1&quot; rowspan=&quot;2&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;Hmkp&quot;&gt;部门领导层&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;nb4K&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;wLqw&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;O3oq&quot;&gt;T4-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;zzIs&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;TF2M&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;w7pn&quot;&gt;T5-1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Cq4C&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;1&quot; rowspan=&quot;2&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;uB0c&quot;&gt;公司领导层&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;zzUK&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;1sGh&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;10&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;rtms&quot;&gt;T5-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;WmYy&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;10&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;补充介绍：&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;字节跳动的职级序列一共有10级，校招是1-1级，从2-1级开始属于资深研发人才。为了弱化级别，字节内部职级严格保密，不讲title层级。&lt;/p&gt;&lt;p&gt;年终奖为0-6个月，一般能拿到3个月。2-2才有期权，据说目前内部价是400元，期权也可以选择8折回购给公司。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;字节2-2对标阿里P7，每年会有500股票，年薪总包大概是90-130w。&lt;span/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p line=&quot;QfuF&quot;&gt; &lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;京东&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td guid=&quot;ATJF&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;xIz2&quot;&gt;&lt;strong&gt;职级&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;JywS&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;B0L9&quot;&gt;&lt;strong&gt;职位&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Rt2W&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;HGQV&quot;&gt;&lt;strong&gt;薪资范围&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;hnRn&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;opLC&quot;&gt;T5/M1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;REuT&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;fiZP&quot;&gt;高级工程师/主管&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;HFgD&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;F7yl&quot;&gt;20-35K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;NdiB&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;wzb9&quot;&gt;T6/M2-1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;7za5&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;4CWL&quot;&gt;资深工程师/副经理&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;I1GP&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;Yyun&quot;&gt;30-40K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;G2jY&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;OJyF&quot;&gt;T7/M2-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;qix3&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;JLRk&quot;&gt;架构师/经理&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;dXpN&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;ruFP&quot;&gt;35-50K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;GVtF&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;sGKb&quot;&gt;T8/M3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;mrCW&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;HqzP&quot;&gt;技术专家/高级经理&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;5F3e&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;uO1m&quot;&gt;40-65K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;fHyj&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;fUQk&quot;&gt;T9/M4-1&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;JSRQ&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;cxEe&quot;&gt;副总监&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;ssSD&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;1Cbt&quot;&gt;60-90K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;64Vn&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;51p1&quot;&gt;T10/M4-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;C0m6&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;MTfZ&quot;&gt;总监&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;jvLl&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;PKlN&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;B9kP&quot;&gt;T11/M4-3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;8Psd&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;AFKa&quot;&gt;高级总监&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;lIFw&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;补充介绍：&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;京东岗位序列主要分M、T、P序列，T序列包含产品和技术，P序列为项目经理。&lt;/p&gt;&lt;p&gt;一年13薪，年终奖一般为1-2个月，月薪由基本工资（70%）、绩效工资（30%基本工资+绩效系数）、餐补、工龄补贴、全勤奖组成。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;对应阿里的职级大致相当，也就是说，京东T7对标阿里P7。薪资不够，股票来凑，如果T7年包高说明每年有十多万股票，年薪总包大概是60-100w。&lt;/p&gt;&lt;/blockquote&gt;&lt;p line=&quot;hHtC&quot;&gt; &lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;美团&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td guid=&quot;Fye0&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;uhK2&quot;&gt;&lt;strong&gt;职级&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;3Vm9&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;sKWY&quot;&gt;&lt;strong&gt;职位&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;KI42&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;NrS9&quot;&gt;&lt;strong&gt;薪资范围&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;WZVc&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;e7VU&quot;&gt;L4/P1-2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Y8kw&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;1&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;td guid=&quot;RqoQ&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;ZzTL&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;0&quot;&gt;&lt;p&gt;L5/P1-3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;UF4c&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;1&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;td guid=&quot;n7sd&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;tI14&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;0&quot;&gt;&lt;p&gt;L6/P2-1,2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;6kOM&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;QoWX&quot;&gt;工程师/高级工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;GFUe&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;nKxs&quot;&gt;20-35K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;nHPa&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;0&quot;&gt;&lt;p&gt;L7/P2-3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;jRyS&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;ec44&quot;&gt;资深工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;L9RS&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;M9fS&quot;&gt;30-45K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;X721&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;0&quot;&gt;&lt;p&gt;L8/P3-1,2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;yWtU&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;3IFF&quot;&gt;专家/高级专家&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;lEuF&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;sMbG&quot;&gt;35-60K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;Fpqu&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;0&quot;&gt;&lt;p&gt;L9/P3-3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;OqFU&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;TqB6&quot;&gt;高级技术专家&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;hqJz&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;1F3u&quot;&gt;50-80K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;section&gt;&lt;strong&gt;&lt;strong&gt;补充介绍：&lt;/strong&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;美团自去年调整了职级体系，将原来的M管理序列和P专业序列合并为统一的L职级。L5是校招，L6是社招。&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;薪资结构为15.5薪，即12个月工资+0.5个月上半年绩效工资+0.5个月下半年绩效工资+2.5个月年终奖工资。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;职级与阿里的对应关系是减一，即美团L8对标阿里P7。&lt;/span&gt;&lt;span&gt;据说现在3-1没有股票，3-2才有股票，L8的年薪总包大概是70-130w。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p line=&quot;hjAN&quot;&gt; &lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;滴滴&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-shimo-docs=&quot;[[30,[{&amp;quot;A1&amp;quot;:[40,[[20,&amp;quot;职级&amp;quot;,&amp;quot;27:\&amp;quot;12\&amp;quot;|8:1&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;1:\&amp;quot;%23ffd7b9\&amp;quot;|27:\&amp;quot;12\&amp;quot;|7:1|8:1&amp;quot;],&amp;quot;B1&amp;quot;:[40,[[20,&amp;quot;职位&amp;quot;,&amp;quot;27:\&amp;quot;12\&amp;quot;|8:1&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;1:\&amp;quot;%23ffd7b9\&amp;quot;|27:\&amp;quot;12\&amp;quot;|7:1|8:1&amp;quot;],&amp;quot;C1&amp;quot;:[40,[[20,&amp;quot;薪资范围&amp;quot;,&amp;quot;27:\&amp;quot;12\&amp;quot;|8:1&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;1:\&amp;quot;%23ffd7b9\&amp;quot;|27:\&amp;quot;12\&amp;quot;|7:1|8:1&amp;quot;],&amp;quot;A2&amp;quot;:[40,[[20,&amp;quot;D5&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B2&amp;quot;:[40,[[20,&amp;quot;工程师&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;11:1|7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;C2&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A3&amp;quot;:[40,[[20,&amp;quot;D6&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B3&amp;quot;:[40,[[20,&amp;quot;高级工程师&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;C3&amp;quot;:[40,[[20,&amp;quot;25-35K&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A4&amp;quot;:[40,[[20,&amp;quot;D7&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B4&amp;quot;:[40,[[20,&amp;quot;资深工程师&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;C4&amp;quot;:[40,[[20,&amp;quot;30-45K&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A5&amp;quot;:[40,[[20,&amp;quot;D8&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B5&amp;quot;:[40,[[20,&amp;quot;专家工程师&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;C5&amp;quot;:[40,[[20,&amp;quot;40-55K&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A6&amp;quot;:[40,[[20,&amp;quot;D9&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B6&amp;quot;:[40,[[20,&amp;quot;高级专家工程师&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;C6&amp;quot;:[40,[[20,&amp;quot;50-80K&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A7&amp;quot;:[40,[[20,&amp;quot;D10&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B7&amp;quot;:[40,[[20,&amp;quot;首席工程师&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;C7&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A8&amp;quot;:[40,[[20,&amp;quot;D11&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B8&amp;quot;:[40,[[20,&amp;quot;杰出工程师&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;C8&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A9&amp;quot;:[40,[[20,&amp;quot;D12&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B9&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;C9&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;]},[[10,1],[10,1,&amp;quot;4:30&amp;quot;],[10,7]],[[10,1,&amp;quot;3:145&amp;quot;],[10,1,&amp;quot;3:184&amp;quot;],[10,1,&amp;quot;3:170&amp;quot;]]],&amp;quot;25:\&amp;quot;nzyoEH\&amp;quot;&amp;quot;]]&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;8SNX&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;TPLJ&quot;&gt;&lt;strong&gt;职级&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;oc9Y&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;yJdP&quot;&gt;&lt;strong&gt;职位&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;wvj8&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;ZhFM&quot;&gt;&lt;strong&gt;薪资范围&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;a2ne&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;aYto&quot;&gt;D5&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;5V3Z&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;ylV4&quot;&gt;工程师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;bDdF&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;RlC6&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;uuK0&quot;&gt;D6&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;H4M7&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;1&quot;&gt;&lt;p&gt;高级工程师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;SzVZ&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;XGxJ&quot;&gt;25-35K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;mTKc&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;IC1x&quot;&gt;D7&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;kV6K&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;1&quot;&gt;&lt;p&gt;资深工程师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;DUWU&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;G8he&quot;&gt;30-45K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;2uDm&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;Eh9w&quot;&gt;D8&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;tSYD&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;MRP1&quot;&gt;专家工程师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;XoQT&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;4Xxa&quot;&gt;40-55K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;ykLE&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;u2ze&quot;&gt;D9&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;vBxZ&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;1&quot;&gt;&lt;p&gt;高级专家工程师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;VFJu&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;hwXJ&quot;&gt;50-80K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;Vozi&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;UPJJ&quot;&gt;D10&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;2Shj&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;1&quot;&gt;&lt;p&gt;首席工程师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;1t7Q&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;i6qh&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;cekj&quot;&gt;D11&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;L6D6&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;FQcC&quot;&gt;杰出工程师&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;nEdG&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;nLpE&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;mvkY&quot;&gt;D12&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;oy1G&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;1&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;eOIw&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;strong&gt;补充介绍：&lt;/strong&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;每年4月和9月晋升，部门内部评审，D7不难晋升，到D8再往上就难了。&lt;/p&gt;&lt;p&gt;offer是15薪，一般可以拿到16薪，D7以上才会发期权，分四年行权，据说会有2000期权，年薪总包大概是60-90w。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;滴滴和阿里的职级是基本对称的，即滴滴D7对标阿里P7-。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p line=&quot;Kc4y&quot;&gt; &lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;网易&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td guid=&quot;y10T&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;2Cbd&quot;&gt;&lt;strong&gt;职级&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Csny&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;9Flh&quot;&gt;&lt;strong&gt;职位&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;QR01&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;8mAy&quot;&gt;&lt;strong&gt;薪资范围&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;3QDS&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;aUQQ&quot;&gt;P2-1,2,3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Caut&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;LTep&quot;&gt;工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;Pxt2&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;N77O&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;wFto&quot;&gt;P3-1,2,3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;IHPS&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;sXPA&quot;&gt;高级工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;bytT&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;JNkw&quot;&gt;25-35K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;eqni&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;8dGs&quot;&gt;M1/P4-1,2,3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;vqdW&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;LULE&quot;&gt;主管/资深工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;gZ7q&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;4lbk&quot;&gt;30-45K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;J914&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;kVSV&quot;&gt;M2/P5-1,2,3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;5xtn&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;CKf1&quot;&gt;经理/专家工程师&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;t1K3&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;qKES&quot;&gt;40-60K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;43rs&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;fOcL&quot;&gt;M3/P6-1,2,3&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;0E25&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;tldo&quot;&gt;总监/研究员&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;gZgN&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;T8jA&quot;&gt;50-90K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;7WR6&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;WuuV&quot;&gt;M4/P7-1,2&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;t5iI&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;8XJK&quot;&gt;总经理/科学家&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;gSqW&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;TFso&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;LhYE&quot;&gt;M5/P8&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;bPlH&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;aOvg&quot;&gt;首席科学家&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;rcJi&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;zz0Y&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;E1AO&quot;&gt;M6&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;eIvi&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;1&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;td guid=&quot;Ojte&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td guid=&quot;BfjN&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;Jv9N&quot;&gt;M7&lt;/p&gt;&lt;/td&gt;&lt;td guid=&quot;BNy7&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;1&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;td guid=&quot;ZMQN&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;section&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;补充介绍：&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p line=&quot;sk1N&quot;&gt;&lt;span&gt;网易的职级划分一共9级，分为M管理和P技术序列，P2是校招，升小级只需要业务部门通过就可以，跨级需要通过主管部门答辩。P3升P4容易，P4-3升P5-1是个坎。&lt;/span&gt;&lt;/p&gt;&lt;p line=&quot;54iF&quot;&gt;&lt;span&gt;薪资结构为年底双薪加年中奖，一年能拿16个月工资，公司内购有员工折扣，网易赚钱网易花，一分都别带回家。&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;网易P4-3对标阿里P7，年薪总包大概是70-100w。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;小米&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-shimo-docs=&quot;[[30,[{&amp;quot;A1&amp;quot;:[40,[[20,&amp;quot;职级&amp;quot;,&amp;quot;27:\&amp;quot;12\&amp;quot;|8:1&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;1:\&amp;quot;%23ffd7b9\&amp;quot;|27:\&amp;quot;12\&amp;quot;|7:1|8:1&amp;quot;],&amp;quot;B1&amp;quot;:[40,[[20,&amp;quot;职位&amp;quot;,&amp;quot;27:\&amp;quot;12\&amp;quot;|8:1&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;1:\&amp;quot;%23ffd7b9\&amp;quot;|27:\&amp;quot;12\&amp;quot;|7:1|8:1&amp;quot;],&amp;quot;C1&amp;quot;:[40,[[20,&amp;quot;薪资范围&amp;quot;,&amp;quot;27:\&amp;quot;12\&amp;quot;|8:1&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;1:\&amp;quot;%23ffd7b9\&amp;quot;|27:\&amp;quot;12\&amp;quot;|7:1|8:1&amp;quot;],&amp;quot;A2&amp;quot;:[40,[[20,&amp;quot;13&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B2&amp;quot;:[40,[[20,&amp;quot;专员&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;11:1|7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|5:3|6:1|7:1&amp;quot;],&amp;quot;C2&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A3&amp;quot;:[40,[[20,&amp;quot;14&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B3&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;7:1&amp;quot;],&amp;quot;C3&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A4&amp;quot;:[40,[[20,&amp;quot;15&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B4&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;7:1&amp;quot;],&amp;quot;C4&amp;quot;:[40,[[20,&amp;quot;20-30K&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A5&amp;quot;:[40,[[20,&amp;quot;16&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B5&amp;quot;:[40,[[20,&amp;quot;经理&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|5:2|6:1|7:1&amp;quot;],&amp;quot;C5&amp;quot;:[40,[[20,&amp;quot;30-40K&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A6&amp;quot;:[40,[[20,&amp;quot;17&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B6&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;7:1&amp;quot;],&amp;quot;C6&amp;quot;:[40,[[20,&amp;quot;40-50K&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A7&amp;quot;:[40,[[20,&amp;quot;18&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B7&amp;quot;:[40,[[20,&amp;quot;总监&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|5:3|6:1|7:1&amp;quot;],&amp;quot;C7&amp;quot;:[40,[[20,&amp;quot;50-70K&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A8&amp;quot;:[40,[[20,&amp;quot;19&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B8&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;7:1&amp;quot;],&amp;quot;C8&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A9&amp;quot;:[40,[[20,&amp;quot;20&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B9&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;7:1&amp;quot;],&amp;quot;C9&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A10&amp;quot;:[40,[[20,&amp;quot;21&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B10&amp;quot;:[40,[[20,&amp;quot;副总裁&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|5:2|6:1|7:1&amp;quot;],&amp;quot;C10&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;A11&amp;quot;:[40,[[20,&amp;quot;22&amp;quot;],[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;],&amp;quot;B11&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;7:1&amp;quot;],&amp;quot;C11&amp;quot;:[40,[[20,&amp;quot;\n&amp;quot;,&amp;quot;7:1&amp;quot;]],&amp;quot;11:1|1:\&amp;quot;%23fef5e7\&amp;quot;|7:1&amp;quot;]},[[10,1],[10,1,&amp;quot;4:30&amp;quot;],[10,9]],[[10,1,&amp;quot;3:145&amp;quot;],[10,1,&amp;quot;3:184&amp;quot;],[10,1,&amp;quot;3:170&amp;quot;]]],&amp;quot;25:\&amp;quot;unKUV4\&amp;quot;&amp;quot;]]&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;tKJA&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;txm6&quot;&gt;&lt;strong&gt;职级&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;4jbe&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;1&quot;&gt;&lt;p line=&quot;3qq1&quot;&gt;&lt;strong&gt;职位&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;bbLW&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;0&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;fCjG&quot;&gt;&lt;strong&gt;薪资范围&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;9mjX&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;AwhD&quot;&gt;13&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;3RdN&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;1&quot; rowspan=&quot;3&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;lirw&quot;&gt;专员&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;lLW4&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;1&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;u8OD&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;WyrV&quot;&gt;14&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;frUQ&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;2&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;8hom&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;tOxl&quot;&gt;15&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;s3JS&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;3&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;QeKY&quot;&gt;20-30K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;Wg3B&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;q37v&quot;&gt;16&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;Oly2&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;1&quot; rowspan=&quot;2&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;4L2k&quot;&gt;经理&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;zU7c&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;4&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;fwvV&quot;&gt;30-40K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;SCew&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;1K1W&quot;&gt;17&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;HTKH&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;5&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;il0F&quot;&gt;40-50K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;bIEa&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;JoOp&quot;&gt;18&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;WCTT&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;1&quot; rowspan=&quot;3&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;SKhS&quot;&gt;总监&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;Xdn7&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;6&quot; col=&quot;2&quot;&gt;&lt;p line=&quot;y7v6&quot;&gt;50-70K&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;O0m3&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;xDNk&quot;&gt;19&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;X6IV&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;7&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;gEdr&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;3hH7&quot;&gt;20&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;Tvze&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;8&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;6ElF&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;rAU6&quot;&gt;21&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;HxpY&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;1&quot; rowspan=&quot;2&quot; colspan=&quot;1&quot;&gt;&lt;p line=&quot;QXMb&quot;&gt;副总裁&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;HWPz&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;9&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;selected&quot; guid=&quot;Ttyb&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;10&quot; col=&quot;0&quot;&gt;&lt;p line=&quot;Jy2C&quot;&gt;22&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;selected&quot; guid=&quot;7iwA&quot; autocorrect=&quot;off&quot; autocomplete=&quot;off&quot; spellcheck=&quot;false&quot; row=&quot;10&quot; col=&quot;2&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;补充介绍：&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;小米内部头衔大致分为专员、经理、总监和副总裁及以上，层级共设10级，从13级到22级。校招一般12-13级，资深为14-15级，内部晋升在7月份答辩，8月底出结果，10月份调薪。&lt;/p&gt;&lt;p&gt;薪资结构为14薪，年终奖是2-3个月，薪资待遇低于其它大厂。&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;小米17级，对标阿里P7，年薪总包大概是70-120w。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p line=&quot;jiSe&quot;&gt;&lt;img data-ratio=&quot;0.8625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z2bVaFK6CgRVo59kjLwm4x4ItlP1bcZVrQTy6ZB16xUD7EINvwj4pN0ichTIdicaibA1bhc9l7FRSQosIDx4dWAuA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot;/&gt;&lt;/p&gt;&lt;p line=&quot;jiSe&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;打铁还需自身硬&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;看完了上面的互联网各大厂职位及薪资，你对号入座了么？是不是有点儿心动了呢？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;特意为有换工作意向的朋友们整理了一系列实用书籍资料，免费提供给大家。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;关注公众号在底部菜单栏「福利专区」-面试资料，即可免费获取面试相关资料。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;包括不限于：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后，给自己团队也打个广告哈，架构作者所在团队也在招兵买马壮大团队哦，欢迎大家来聊哈，一起成为同事来搞点儿有意思的事情~ （长期有效哦！）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.8258333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z2bVaFK6CgRVo59kjLwm4x4ItlP1bcZVZZDj3UbXqUSicVmYJOhtZvKhx9TkPkUJkzQ5AW7uIYaqMFgWhAt3atw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-pm-slice=&quot;1 1 []&quot;&gt;&lt;span&gt;- END -&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;作者：架构精进之路，专注软件架构研究，技术学习与个人成长，关注并私信我回复“01”，送你一份程序员成长进阶大礼包。&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;往期热文推荐：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98311&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-cropselx1=&quot;0&quot; data-cropselx2=&quot;395&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;395&quot; data-ratio=&quot;0.36484375&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-width=&quot;100%&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgSxEpr7AzM5lGCicdEjfuE6jaiae9Rmj1CVCg85GJKaFKuico89ZlnhGicQiciciccOiaqVibE5cmKXwO1AOuA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;87502&quot;&gt;&lt;p&gt;&lt;span&gt;「技术架构精进」专注架构研究，技术分享&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;Thanks for reading!&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4d77233726ec27d2360e41cbf2b6d160</guid>
<title>Web 安全头号大敌 XSS 漏洞解决最佳实践</title>
<link>https://toutiao.io/k/jfopywh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.6982456140350877&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZs9beLwCiakvmZS2ariaR2kkqO9HIpESDtmQgut9Wc7U0aCDHm8uak60Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1140&quot;/&gt;&lt;/section&gt;&lt;h5 cid=&quot;n562&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;引言&lt;/span&gt;&lt;br/&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;XSS 是目前最普遍的 Web 应用安全漏洞，它带来的危害是巨大的，是 Web 安全的头号大敌。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;关键词&lt;/span&gt;&lt;/strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;h5 cid=&quot;n3&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1. 什么是 XSS 漏洞?&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;&lt;span md-inline=&quot;plain&quot;&gt;XSS 攻击：跨站脚本攻击(&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;Cross Site Scripting&lt;/span&gt;&lt;/strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;)，为不和 前端层叠样式表(Cascading Style Sheets)CSS 混淆，故将跨站脚本攻&lt;/span&gt;&lt;/span&gt;&lt;span&gt;击缩写为 XSS。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;XSS(跨站脚本攻击)&lt;/strong&gt;是指恶意攻击者往 Web 页面里插入恶意 Script 代码，当用户浏览该页时，嵌入其中 Web 里面的 Script 代码会被执行，从而达到恶意攻击用户的目的。&lt;strong&gt;类似于 sql 注入&lt;/strong&gt;。是目前最普遍的 Web 应用安全漏洞，也是 Web 攻击中最常见的攻击方式之一。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;XSS（ 跨站脚本攻击）攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是 JavaScript，但实际上也可以包括 Java、 VBScript、ActiveX、 Flash 或者甚至是普通的 HTML。攻击成功后，攻击者可能得到包括但不限于更高的权限（如执行一些操作）、私密网页内容、会话和 cookie 等各种内容。&lt;/span&gt;&lt;/section&gt;&lt;h5 cid=&quot;n522&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2. XSS 漏洞攻击原理及攻击手段&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;HTML 是一种超文本标记语言，通过将一些字符特殊地对待来区别文本和标记，例如，小于符号（&amp;lt;）被看作是 HTML 标签的开始，之间的字符是页面的标题等等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当动态页面中插入的内容含有这些特殊字符（如&amp;lt;）时，用户浏览器会将其误认为是插入了 HTML 标签，当这些 HTML 标签引入了一段 JavaScript 脚本时，这些脚本程序就将会在用户浏览器中执行。所以，当这些特殊字符不能被动态页面检查或检查出现失误时，就将会产生 XSS 漏洞。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;常用的 XSS 攻击手段和目的有：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;1、盗用 cookie，获取敏感信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、利用植入 Flash，通过 crossdomain 权限设置进一步获取更高权限；或者利用 Java 等得到类似的操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、利用 iframe、frame、XMLHttpRequest 或上述 Flash 等方式，以（被攻击）用户的身份执行一些管理动作，或执行一些一般的如发微博、加好友、发私信等操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4、利用可被攻击的域受到其他域信任的特点，以受信任来源的身份请求一些平时不允许的操作，如进行不当的投票活动。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5、在访问量极大的一些页面上的 XSS 可以攻击一些小型网站，实现 DDoS 攻击的效果。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;最简单的 &lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;XSS 示例&lt;/span&gt;&lt;/strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;xml&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;alert(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;hello world&#x27;&lt;/span&gt;)&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;http://www.smart4j.cn/xxx.js&#x27;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;评论&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;input&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span md-inline=&quot;plain&quot;/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;h5 cid=&quot;n201&quot; mdtype=&quot;heading&quot;/&gt;&lt;h5 cid=&quot;n201&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3. XSS 分类如下：&lt;/span&gt;&lt;/h5&gt;&lt;h5 cid=&quot;n32&quot; mdtype=&quot;heading&quot;/&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;strong&gt;分类&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;strong&gt;主要特点&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;存储型&lt;/strong&gt; XSS&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;经过后端服务处理，数据&lt;strong&gt;存储在数据库端&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;反射型&lt;/strong&gt; XSS&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;经过后端服务处理，&lt;strong&gt;不存储数据库&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;DOM型 &lt;/strong&gt;XSS&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;不经过后端服务处理&lt;/strong&gt;，不存储数据库&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h5 cid=&quot;n32&quot; mdtype=&quot;heading&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 cid=&quot;n32&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;4. XSS 漏洞分析&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;4.1 存储型 XSS&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;span&gt; &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;通过网页注入的代码最终会存储在数据库或其他物理文件中，在某个页面中注入的代码会被浏览器成功执行，该类型的漏洞存在持久性的特点。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;主要特点：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图解成因分析：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.44711538461538464&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZ9orQeB2FjrXvgaNU9asCFbJJZhPEq3aqSq1eEKeezPTjHPosL4D50A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1664&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;4.2 反射型 XSS&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一般是通过 url 的形式注入代码，注入的代码不在服务器端存储，但会在服务器端进行处理然后进行回显，在回显时浏览器会触发漏洞执行注入代码，该类型攻击具有临时性特点。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;主要特点：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong/&gt;&lt;span&gt;图解成因分析&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.2851511169513798&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZOXHkom9MKxUPzqUjGLnRt0UbeWibiajhcc8Jaibnfa5PWaetCKibib6Bl6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1522&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;em&gt;&lt;strong&gt;&lt;span&gt;4.3 DOM 型 XSS&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;span&gt; &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;也是通过 url 的形式注入代码，注入的代码服务器端程序不存储、不处理，而是由浏览器进行处理，该类型攻击也具有临时性特点。主要特点：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图解成因分析&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.27807486631016043&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZt0FF6uiana3uzpSPy0OxSgCE7FicLpYicvhUnXFvgvVibmHErb5YXkM4zQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1496&quot;/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h5 cid=&quot;n577&quot; mdtype=&quot;heading&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 cid=&quot;n577&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;5. 三种XSS漏洞对比&lt;/span&gt;&lt;/h5&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;strong&gt;分类&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;strong&gt;一般表现形式&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;strong&gt;特点&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;存储型 XSS&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;表现为包含表单的页面，post提交后数据&lt;strong&gt;存储&lt;/strong&gt;在数据库，通过其他页面访问触发&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;存储、持久性&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;反射型XSS&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;表现为包含参数的url地址，参数经后端程序程序处理后回显，通过&lt;strong&gt;访问 url 触发&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;url参数、后端处理参数、临时性&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;strong&gt;DOM型XSS&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;表现为包含参数的url地址，参数由页面中的JS代码处理，通过&lt;strong&gt;访问 url 触发&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;url参数、JS处理参数、临时性&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;6. 植入 &lt;/span&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;JS&lt;/span&gt;&lt;/strong&gt;&lt;span md-inline=&quot;plain&quot;&gt; 代码攻击及危害分析&lt;/span&gt;&lt;/section&gt;&lt;h5 cid=&quot;n105&quot; mdtype=&quot;heading&quot;/&gt;&lt;section&gt;&lt;span&gt;外在表现形式：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n107&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n118&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;直接注入 JavaScript 代码&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n119&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;引用外部 JS 文件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;基本实现原理：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n122&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n134&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;构造隐藏的 form 表单自动提交&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n137&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;页面强制跳转&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n140&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;植入文字链接、图片链接&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;潜在危害：&lt;/span&gt;&lt;/section&gt;&lt;h5 cid=&quot;n160&quot; mdtype=&quot;heading&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 cid=&quot;n160&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;7. 植入 HTML 代码攻击及危害分析&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;外在表现形式：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基本实现原理：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n231&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n236&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;通过 iframe 引入第三方页面&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n237&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;直接构造文字链接或图片链接&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;潜在危害：&lt;/span&gt;&lt;/section&gt;&lt;h5 cid=&quot;n263&quot; mdtype=&quot;heading&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 cid=&quot;n263&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;8. XSS 简单预防策略&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;8.1 对 html 标签进行字符替换：&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;replaceAll(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&amp;lt;script&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;存在问题：&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;    &lt;em&gt;大小写问题&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;优化升级：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;   &lt;em&gt; 正则表达式&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;存在问题：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;    &lt;em&gt;反替换&lt;code&gt;&amp;lt;scr&amp;lt;scriptipt&lt;/code&gt;&lt;span md-inline=&quot;plain&quot;&gt; ——&amp;gt; &lt;code&gt;&amp;lt;script&lt;/code&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;8.2 对 html 字符转义或是半角转全角字符：&lt;/span&gt;&lt;/section&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;html&quot; cid=&quot;n275&quot; mdtype=&quot;fences&quot;&gt;&lt;section&gt;&lt;span role=&quot;presentation&quot;&gt;{ &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot;, &quot;\&quot;&quot;}&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;转义：&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;{ &quot;&amp;amp;lt;&quot;, &quot;&amp;amp;gt;&quot;, &quot;&amp;amp;quot;&quot;})&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;全角：&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;{ &quot;＜, &quot;＞&quot;, &quot;\＂&quot;}&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;新场景：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;    &lt;em&gt;页面中需要根据某个参数生成文字链接&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;存在问题：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;    &lt;em&gt;a 标签的 href 属性 javascript：&lt;/em&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其他问题：&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;    &lt;em&gt;针对 json 字符串的场景&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;span&gt;    如何公用的问题&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;h5 cid=&quot;n296&quot; mdtype=&quot;heading&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 cid=&quot;n296&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;9. XSS 漏洞预防策略最佳实践&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;9.1 输入环节&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;9.2 Cookie 防护&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n355&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n366&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;cookie 设置 httponly，一般 servlet 容器默认 httponly 为 true&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n367&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;resp.setHeader(&quot;SET-COOKIE&quot;, &quot;JSESSIONID=&quot; + request.getSession().getId()+ &quot;; HttpOnly&quot;);&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;9.3 X-Frame-Options 响应头 （是否允许frame、iframe等标记）&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n360&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n377&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;DENY 不允许、SAMEORIGIN 可在相同域名页面的 frame 中展示、ALLOW-FROM uri 可在指定页的 frame 中展示&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n378&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;add_header X-Frame-Options SAMEORIGIN; //在nginx的 http 或 server 节点中配置即可&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n381&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;也可通过 Filter 设置  resp.setHeader(&quot;x-frame-options&quot;,&quot;SAMEORIGIN&quot;);&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;9.4 输出环节&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;thymeleaf&lt;/span&gt;&lt;/section&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;html&quot; cid=&quot;n389&quot; mdtype=&quot;fences&quot;&gt;&lt;section&gt;&lt;span role=&quot;presentation&quot;&gt;&amp;lt;span th:utext=&quot;${ result }&quot;&amp;gt;&amp;lt;/span&amp;gt;---&amp;gt;&amp;lt;span th:text=&quot;${ result }&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&amp;lt;!-- utext 与 text 区别 --&amp;gt;&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;JSP&lt;/span&gt;&lt;/section&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;jsp&quot; cid=&quot;n397&quot; mdtype=&quot;fences&quot;&gt;&lt;section&gt;&lt;span role=&quot;presentation&quot;&gt;&amp;lt;c:out value=&quot; ${ content }&quot;  escapeXml=&quot;false&quot; /&amp;gt;---&amp;gt;&amp;lt;c:out value=&quot; ${ content }&quot;/&amp;gt; &amp;lt;!-- escapeXml默认true --&amp;gt;&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;9.5 DOM 型 XSS&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n399&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n419&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;避免 .innerHTML、.outerHTML、document.write() 的使用，应使用 .textContent、.setAttribute() 等。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n420&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;Vue/React 技术栈，避免使用 v-html/dangerouslySetInnerHTML&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n423&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;尤其注意 onclick、onerror、onload、onmouseover 、eval()、setTimeout()、setInterval() 以及 a 标签的 href&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n426&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;可使用 OWASP  esapi4js : esapi.js&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 cid=&quot;n583&quot; mdtype=&quot;heading&quot;&gt;&lt;br/&gt;&lt;/h5&gt;&lt;h5 cid=&quot;n583&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;10. 后端服务编码实践&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;通过 &lt;/span&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://start.spring.io/&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt; 快速创建 springboot 应用：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.7477973568281938&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZaxnKT86foo3WjnjujZ0oxF8D3vYCJvqHzgLfK9HLvliaSj2JDXGBuuA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1816&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.546276965901183&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZ7cGWUaPvVX93iaADy5zkjHU7wQQAXQgeGJXxzTDDQp8LNicSSnSiaf8icw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2874&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;解压并在 IDEA 导入刚刚创建的 xss-demo 项目&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.6304816678648454&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZd9UibzJyLiafdFdDDN5KMoqkKXxdia58icDemRgY8Pwib3uEIpSsIqibXyfw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2782&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;在 pom.xml 添加相关依赖：&lt;/span&gt;&lt;/section&gt;&lt;pre mdtype=&quot;fences&quot; cid=&quot;n591&quot; lang=&quot;xml&quot; spellcheck=&quot;false&quot;&gt;&lt;section&gt;&lt;span role=&quot;presentation&quot;&gt;&amp;lt;!--防止XSS攻击的antiSamy--&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;      &amp;lt;groupId&amp;gt;org.owasp.antisamy&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;      &amp;lt;artifactId&amp;gt;antisamy&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;      &amp;lt;version&amp;gt;1.5.7&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&amp;lt;!--fastjson依赖--&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;    &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;    &amp;lt;artifactId&amp;gt;fastjson&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;    &amp;lt;version&amp;gt;1.2.62&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;修改 xss-demo 工程包结构如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.48559077809798273&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZaicwnTXWsrEA36xtnZ1ibejD2Fb7OsAdLr74qwGlYSanSst7ic9ghyEkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2776&quot;/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;XSSFilter 编码如下：&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @program: xss-demo&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @author: Mr.Zhang&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @create: 2021-02-21 15:45&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; **/&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;public class XssFilter implements Filter {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        HttpServletRequest httpServletRequest = (HttpServletRequest) request;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        HttpServletRequest req = (HttpServletRequest) request;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        String path = req.getServletPath();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        //注解配置的是urlPatterns=&quot;/*&quot;(过滤所有请求),所以这里对不需要过滤的静态资源url,作忽略处理(大家可以依照具体需求配置)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        String[] exclusionsUrls = {&quot;.js&quot;, &quot;.gif&quot;, &quot;.jpg&quot;, &quot;.png&quot;, &quot;.css&quot;, &quot;.ico&quot;};&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        for (String str : exclusionsUrls) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            if (path.contains(str)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                chain.doFilter(request, response);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                return;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        chain.doFilter(new XssRequestWrapper(httpServletRequest), response);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;XssRequestWrapper 包装类编码如下：&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @program: xss-demo&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @author: Mr.Zhang&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @create: 2021-02-21 15:46&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; **/&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;@Slf4j&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;public class XssRequestWrapper extends HttpServletRequestWrapper {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    public XssRequestWrapper(HttpServletRequest request) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        super(request);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    /**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * 获取策略文件，直接使用jar中自带的ebay策略文件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     */&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private static InputStream inputStream = XssRequestWrapper.class.getClassLoader()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            .getResourceAsStream(&quot;antisamy-ebay.xml&quot;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private static Policy policy = null;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    static {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        try {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            // 使用静态代码块处理策略对象的创建&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            policy = Policy.getInstance(inputStream);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        } catch (PolicyException e) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    /**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * 使用AntiSamy进行过滤数据&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @param html&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @return&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     */&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private String xssClean(String html) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        String cleanHTML = &quot;&quot;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        try {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            AntiSamy antiSamy = new AntiSamy();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            CleanResults scan = antiSamy.scan(html, policy);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            cleanHTML = scan.getCleanHTML();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        } catch (ScanException e) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        } catch (PolicyException e) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        return cleanHTML;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    /**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * 重写处理请求参数的方法&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @param name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @return&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     */&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    public String[] getParameterValues(String name) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        String[] values = super.getParameterValues(name);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 判断参数有值，如果没有值，直接返回&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        if (values == null) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            return null;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 遍历参数数组，使用AntiSamy进行过滤&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        int len = values.length;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        String[] newValues = new String[len];&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        for (int i = 0; i &amp;lt; len; i++) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            // 过滤前的数据&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            log.info(&quot;使用AntiSamy进行过滤清理，过滤清理之前的数据：{}&quot;, values[i]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            // 进行过滤&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            newValues[i] = xssClean(values[i]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            // 过滤后的数据&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            log.info(&quot;使用AntiSamy进行过滤清理，过滤清理之后的数据：{}&quot;, newValues[i]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        //返回过滤后的结果&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        return newValues;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    /**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * 重写处理json数据的方法&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @return&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @throws IOException&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     */&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    public ServletInputStream getInputStream() throws IOException {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 读取流&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        BufferedReader reader = new BufferedReader(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                new InputStreamReader(super.getInputStream(), &quot;UTF-8&quot;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 获取json格式的数据&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        StringBuilder sb = new StringBuilder();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        String inputStr;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        while ((inputStr = reader.readLine()) != null) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            sb.append(inputStr);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 把json转为map&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Map map = JSON.parseObject(sb.toString(), Map.class);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 过滤前&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        log.info(&quot;json过滤前:{}&quot;, sb.toString());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 对map中的value值进行AntiSamy的过滤&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        map.keySet().forEach(k -&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            map.put(k, xssClean(map.get(k).toString()));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 过滤后&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        String json = JSON.toJSONString(map);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        log.info(&quot;json过滤后:{}&quot;, json);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        // 把json数据转为流的格式进行返回&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        ByteArrayInputStream bais = new ByteArrayInputStream(json.getBytes());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        return new ServletInputStream() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            public boolean isFinished() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                return false;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            public boolean isReady() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                return false;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            public void setReadListener(ReadListener listener) { }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            @Override&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            public int read() throws IOException {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                return bais.read();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        };&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;AntiSamyConfig 配置过滤器类编码如下：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @program: xss-demo&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @author: Mr.Zhang&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @create: 2021-02-21 15:58&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; **/&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;@Configuration&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;public class AntiSamyConfig {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    /**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * 配置xss过滤器&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @return&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     */&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    @Bean&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    public FilterRegistrationBean create() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean(new XssFilter());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        filterRegistrationBean.addUrlPatterns(&quot;/*&quot;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        filterRegistrationBean.setOrder(1);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        return filterRegistrationBean;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;User 实体类：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @program: xss-demo&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @author: Mr.Zhang&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @create: 2021-02-21 15:42&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;**/&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;@Data&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;public class User {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private int id;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private String name;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private int age;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;UserController 测试控制器类编码如下：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @program: xss-demo&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @author: Mr.Zhang&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; * @create: 2021-02-21 15:43&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; **/&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;@Slf4j&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;@RestController&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;@RequestMapping(&quot;user&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;public class UserController {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    /**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * 表单&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @param user&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @return&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     */&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    @PostMapping(&quot;save&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    public String save(User user) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        log.info(&quot;name={}, age={}&quot;, user.getName(), user.getAge());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        return JSON.toJSONString(user);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    /**&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * json数据格式请求体&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @param user&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     * @return&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     */&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    @PostMapping(&quot;json&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    public String saveJson(@RequestBody User user) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        log.info(&quot;user={}&quot;, user.toString());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        return JSON.toJSONString(user);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;application.properties 配置文件为空，运行启动类后默认端口号8080。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;Postman 模拟表单数据请求及响应效果如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.394589552238806&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZKN5G2vj7RwmZ2WGbZ0onGXJQ4kcYamJJbibeln2n6ic5yOgAZ7x0mt0A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2144&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;后端程序控制台日志打印如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.2430858806404658&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZhAS3y5UKicUpkGggXwgNwdbMv14JcZGXD1RjWeMuwVicxbnicO7fmMvZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2748&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Postman 模拟 json 数据请求及响应效果如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.3805970149253731&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZRS3yOtUiaJ71IB4fpvolDY5Vibnjve5rvYicVwrQuOdvflc7QKxkIoQnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2144&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;后端程序控制台日志打印如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.25728862973760935&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolccI7e7Z4Y9PddZU4O99NyZicqcXsJRiabxEMJSofQJndyWciaqTa7NGLZDvU2RUoySYmmICqz8RvyBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2744&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;以上两个情况，请求参数中隐藏的 xss 攻击代码被过滤器过滤后再进入 Contrlloer 层处理。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h5 cid=&quot;n588&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;11. 能不能根本上解决问题，即浏览器自动禁止外部注入恶意脚本？&lt;/span&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;开启 CSP （内容安全策略 Content Security Policy）方法：设置 HTTP 的 头部字段&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;resp.setHeader(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Content-Security-Policy&quot;&lt;/span&gt;,&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default-src http: https:&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;设置网页的&lt;/span&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;span md-inline=&quot;plain&quot;&gt;标签&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;xml&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Content-Security-Policy&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;form-action &#x27;self&#x27;;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;CSP 常见可选策略设置&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;如下：&lt;/span&gt;&lt;br/&gt;&lt;span md-inline=&quot;plain&quot;/&gt;&lt;/section&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;strong&gt;策略&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;strong&gt;含义&lt;/strong&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;default-src http: https: ；&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;只能通过外联的方式引用 js 和 css&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;span md-inline=&quot;plain&quot;&gt;default-src &#x27;self&#x27; &lt;/span&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;http://smart4j.cn/&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;只能在指定的域下加载文&lt;/span&gt;&lt;span&gt;件&lt;/span&gt;&lt;/span&gt;&lt;span&gt;（包含 img）&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;form-action &#x27;self&#x27;&#x27;；&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;form 表单的只能在指定域提交&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;script-src &#x27;self&#x27;;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;只限制 js 文件在同域加载文件&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;report-uri /report;&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;section&gt;&lt;span&gt;向指定uri发送违规报&lt;/span&gt;&lt;span&gt;告（不支持 meta 方式）&lt;/span&gt;&lt;/section&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-mpa-category=&quot;模板&quot; data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;span&gt;加油&lt;/span&gt;&lt;/p&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;# &lt;span&gt;精彩推荐&lt;/span&gt; #&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5MDE0ODQ1NQ==&amp;amp;mid=2648395857&amp;amp;idx=1&amp;amp;sn=e370bb0b12100c3f0fdc8660e918116a&amp;amp;chksm=883feb59bf48624fcac2a4e5a090db783de05e5466ff71c508b27e36917e177b8ec4191cdd5e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UYhfOp924bYQUqYCVgoT9tY9zibIyUB4m4udOibRHibe4ZiboyZXLGXa16A/640?wx_fmt=png&quot; data-w=&quot;64&quot; data-type=&quot;png&quot;/&gt;&lt;/span&gt;&lt;/a&gt; &lt;/span&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5MDE0ODQ1NQ==&amp;amp;mid=2648396131&amp;amp;idx=1&amp;amp;sn=62d807dba82eb383f3f796d5d2d9888f&amp;amp;chksm=883fea6bbf48637d86eca908357ba846a8fff142d25c25559360a8a9402b405a3afc17677623&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;分布式系统「全链路日志追踪」实战之 RestTemplate &amp;amp; Feign&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5MDE0ODQ1NQ==&amp;amp;mid=2648395857&amp;amp;idx=1&amp;amp;sn=e370bb0b12100c3f0fdc8660e918116a&amp;amp;chksm=883feb59bf48624fcac2a4e5a090db783de05e5466ff71c508b27e36917e177b8ec4191cdd5e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UYhfOp924bYQUqYCVgoT9tY9zibIyUB4m4udOibRHibe4ZiboyZXLGXa16A/640?wx_fmt=png&quot; data-w=&quot;64&quot; data-type=&quot;png&quot;/&gt;&lt;/span&gt;&lt;/a&gt;  &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5MDE0ODQ1NQ==&amp;amp;mid=2648396039&amp;amp;idx=1&amp;amp;sn=f35d5d8017e310356251af990907370b&amp;amp;chksm=883fea0fbf4863198b076ea30bbc2350aab2adf76cc3853cf6484108e8bb8652f56ee9d0235a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;小白都能看得懂的服务调用链路追踪设计与实现&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5MDE0ODQ1NQ==&amp;amp;mid=2648395977&amp;amp;idx=1&amp;amp;sn=c156a85cc767db88912a406422f097a6&amp;amp;chksm=883febc1bf4862d77d5027f72b583fcfdee507b4d0b3e562844ff706903e8169203bbcc30dc3&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UYhfOp924bYQUqYCVgoT9tY9zibIyUB4m4udOibRHibe4ZiboyZXLGXa16A/640?wx_fmt=png&quot; data-w=&quot;64&quot; data-type=&quot;png&quot;/&gt;  &lt;/span&gt;[三步法] 可视化分析定位线上 JVM 问题&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5MDE0ODQ1NQ==&amp;amp;mid=2648395897&amp;amp;idx=1&amp;amp;sn=468cd1b59977f52cf3c974b5d725aa48&amp;amp;chksm=883feb71bf486267519b81249d9bfba36b893c5f162ad8b9f80f732b592bbaac77d63f86cec0&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UYhfOp924bYQUqYCVgoT9tY9zibIyUB4m4udOibRHibe4ZiboyZXLGXa16A/640?wx_fmt=png&quot; data-w=&quot;64&quot; data-type=&quot;png&quot;/&gt;  &lt;/span&gt;从 Java 代码如何运行聊到 JVM 和对象的创建-分配-定位-布局-垃圾回收&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5MDE0ODQ1NQ==&amp;amp;mid=2648396422&amp;amp;idx=1&amp;amp;sn=9a3d79b36a38c8c6fa18f6682d0a25ed&amp;amp;chksm=883fe98ebf486098b21319e5053274d21f3aee178ca481a47cd1d6018f74d4b77c6ef753d720&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;  &quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UYhfOp924bYQUqYCVgoT9tY9zibIyUB4m4udOibRHibe4ZiboyZXLGXa16A/640?wx_fmt=png&quot; data-w=&quot;64&quot; data-type=&quot;png&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5MDE0ODQ1NQ==&amp;amp;mid=2648396422&amp;amp;idx=1&amp;amp;sn=9a3d79b36a38c8c6fa18f6682d0a25ed&amp;amp;chksm=883fe98ebf486098b21319e5053274d21f3aee178ca481a47cd1d6018f74d4b77c6ef753d720&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;深入了解 Spring 中的事务（从核心注解和类入手）&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4582869855394883&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/NWHzTKGKolcsZONXz8oSJMzpDJaibFgAGKjQrlL156Awicuk3z9uJwCPudR7QkkFbGtfQiau59h3ZqK8qHgBrjgVA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;899&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;在看&quot;吗&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，赶快分享和收藏吧&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;gif&quot; data-w=&quot;400&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/bXDCzf4pp0dpiaof6kyuPaGpdxoY7fQF7BJkPJo3mNbIsH20KSLQDoicwG8gpsvCy1uHuibXjq1BYT4icnRUUYDZfw/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>fc603f5b13453409ae1c6bc0b7c5ae26</guid>
<title>[译] 使用自定义指标进行 K8S 自动弹性伸缩</title>
<link>https://toutiao.io/k/08huyik</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIyMTUwMDMyOQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/zGadXBpNBBomlaCNWuPRibYNtgNmwicCgkCpbCiaHM30nLdMRLibsDOJFrtKPc9p6Pj3iccnVhR2BU0m4Tv0ibfOzLVQ/0?wx_fmt=png&quot; data-nickname=&quot;RancherLabs&quot; data-alias=&quot;RancherLabs&quot; data-signature=&quot;Rancher Labs由CloudStack之父梁胜创建。旗舰产品Rancher是一个开源的企业级Kubernetes管理平台，实现了Kubernetes集群在混合云+本地数据中心的集中部署与管理。&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;(点击卡片关注公众号并星标🌟，及时获取K8S技术干货）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Kubernetes自动弹性伸缩可以根据业务流量，自动增加或减少服务。这一功能在实际的业务场景中十分重要。在本文中，我们将了解Kubernetes如何针对应用产生的自定义指标实现自动伸缩。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.8814815&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/zGadXBpNBBpvDUJ4dtaq6uHibsL5LI4NSZuDucqR5hicGVP9picOITuTMYntZ71dd3YvdaQM94iaQ7VGDB1UrDTqBg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;为什么需要自定义指标？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;应用程序的CPU或RAM的消耗并不一定能够正确表明是否需要进行扩展。例如，如果你有一个消息队列consumer，它每秒可以处理500条消息而不会导致崩溃。一旦该consumer的单个实例每秒处理接近500条消息，你可能希望将应用程序扩展到两个实例，以便将负载分布在两个实例上。测量CPU或RAM对于扩展这样的应用程序来说有点矫枉过正了，你需要寻找一个与应用程序性质更为密切相关的指标。一个实例在特定时间点处理的消息数量能更贴切地反映该应用的实际负载。同样，可能有一些应用的其他指标更有意义。这些可以使用Kubernetes中的自定义指标进行定义。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.8814815&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/zGadXBpNBBpvDUJ4dtaq6uHibsL5LI4NSZuDucqR5hicGVP9picOITuTMYntZ71dd3YvdaQM94iaQ7VGDB1UrDTqBg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;Metrics流水线&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Metrics Server和API&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;最初，这些指标会通过Heapster暴露给用户，Heapster可以从每个kubelet中查询指标。Kubelet则与localhost上的cAdvisor对话，并检索出节点级和pod级的指标。Metric-server的引入是为了取代heapster，并使用Kubernetes API来暴露指标从而以Kubernetes API的方式提供指标。Metric server仅提供核心的指标，比如pod和节点的内存和CPU，对于其他指标，你需要构建完整的指标流水线。构建流水线和Kubernetes自动伸缩的机制将会保持不变。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Aggregation Layer&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;能够通过Kubernetes API层暴露指标的关键部分之一是Aggregation Layer。该aggregation layer允许在集群中安装额外的Kubernetes格式的API。这使得API像任何Kubernetes资源一样可用，但API的实际服务可以由外部服务完成，可能是一个部署到集群本身的Pod（如果没有在集群级别完成，你需要启用aggregation layer）。那么，这到底是如何发挥作用的呢？作为用户，用户需要提供API Provider（比如运行API服务的pod），然后使用APIService对象注册相同的API。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;让我们以核心指标流水线为例来说明metrics server如何使用 API Aggregation layer注册自己。APIService对象如下：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;apiVersion&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;apiregistration.k8s.io/v1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;kind&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt; APIService&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;metadata&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;  name&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt; v1beta1.metrics.k8s.io&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;spec&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;  service&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;    name&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt; metrics-server&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;    namespace&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt; kube-system&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;  group&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt; metrics.k8s.io&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;  version&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt; v1beta1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;  insecureSkipTLSVerify&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt; true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;  groupPriorityMinimum&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt; 100&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;  versionPriority&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt; 100&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;部署使用&lt;span&gt;APIService&lt;/span&gt;注册API的metrics server之后，我们可以看到Kubernetes API中提供了指标API：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.223913&quot; data-w=&quot;920&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zGadXBpNBBqFhqkzckqkP5XGC5pffdrflDcdibN91DoUJebKUGchRHj80CVtCfc4DLk1PGRYpxibNCjpqkD04micw/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Metrics流水线：核心部分和完整流水线&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们已经了解了基本组件，让我们把它们放在一起组成核心metrics流水线。在核心流水线中，如果你已经恰当地安装了metrics server，它也将创建APIService将自己注册到Kubernetes API server上。正如我们在上一节中所了解到的那样，这些指标将在&lt;span&gt;/apis/metrics.k8s.io&lt;/span&gt;中暴露，并被HPA使用。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.2425214&quot; data-w=&quot;936&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zGadXBpNBBqFhqkzckqkP5XGC5pffdrf2tiaBIZhdVry4YaznK23TD3XGfKOQNia0pEdIcHXufBvcRnBe05LRpwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;大部分复杂的应用程序需要更多的指标，而不仅仅是内存和CPU，这也是大多数企业使用监控工具的原因，最常见的监控工具有Prometheus、Datadog以及Sysdig等。而不同的工具所使用的格式也有所区别。在我们可以使用Kubernetes API聚合来暴露endpoint之前，我们需要将指标转换为合适的格式。此时需要使用小型的adapter（适配器）——它可能是监控工具的一部分，也可能作为一个单独的组件，它在监控工具和Kubernetes API之间架起了一座桥梁。例如，Prometheus有专门的Prometheus adapter或者Datadog有Datadog Cluster Agent — 它们位于监控工具和API之间，并从一种格式转换到另一个种格式，如下图所示。这些指标在稍微不同的endpoint都可以使用。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.3886555&quot; data-w=&quot;952&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zGadXBpNBBqFhqkzckqkP5XGC5pffdrfyUZpMic2ZEQZYJ0PhW4txO6Ww5N3PjFsfibia9JaibibeOzJib6wHibgOUplw/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.8814815&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/zGadXBpNBBpvDUJ4dtaq6uHibsL5LI4NSZuDucqR5hicGVP9picOITuTMYntZ71dd3YvdaQM94iaQ7VGDB1UrDTqBg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;Demo：Kubernetes自动伸缩&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们将演示如何使用自定义指标自动伸缩应用程序，并且借助Prometheus和Prometheus adapter。你可以继续阅读文章，或者直接访问Github repo开始构建demo：&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/infracloudio/kubernetes-autoscaling&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;设置Prometheus&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;为了让适配器可以使用指标，我们将使用Prometheus Operator来安装Prometheus。它创建CRD来在集群中部署Prometheus的组件。CRD是扩展Kubernetes资源的一种方式。使用Operator可以“以Kubernetes的方式”（通过在YAML文件中定义对象）轻松配置和维护Prometheus实例。由Prometheus Operator创建的CRD有：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;AlertManager&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;ServiceMonitor&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Prometheus&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;你可以根据下方链接的指导设置Prometheus：&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/infracloudio/kubernetes-autoscaling#installing-prometheus-operator-and-prometheus&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;部署Demo应用程序&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;为了生成指标，我们将部署一个简单的应用程序mockmetrics，它将在/metrics处生成total_hit_count值。这是一个用Go写的网络服务器。当URL被访问时，指标total_hit_count的值会不断增加。它使用Prometheus所要求的展示格式来显示指标。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;根据以下链接来为这一应用程序创建deployment和服务，它同时也为应用程序创建ServiceMonitor和HPA：&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/infracloudio/kubernetes-autoscaling#deploying-the-mockmetrics-application&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;ServiceMonitor&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;ServiceMonitor为Prometheus创建了一个配置。它提到了服务的标签、路径、端口以及应该在什么时候抓取指标的时间间隔。在服务label的帮助下，选择了pods。Prometheus会从所有匹配的Pod中抓取指标。根据你的Prometheus配置，ServiceMonitor应该放在相应的命名空间中。在本例中，它和mockmetrics 在同一个命名空间。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;部署和配置Prometheus Adapter&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;现在要为HPA提供&lt;span&gt;custom.metrics.k8s.io&lt;/span&gt; API endpoint，我们将部署Prometheus Adapter。Adapter希望它的配置文件在Pod中可用。我们将创建一个configMap并将其挂载在pod内部。我们还将创建Service和APIService来创建API。APIService将&lt;span&gt;/api/custom.metrics.k8s.io/v1beta1&lt;/span&gt; endpoint添加到标准的Kubernetes APIs。你可以根据以下教程来实现这一目标：&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/infracloudio/kubernetes-autoscaling#deploying-the-custom-metrics-api-server-prometheus-adapter&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;接下来，我们看一下配置：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;seriesQuery&lt;/span&gt;用于查询Prometheus的资源，标签为“default“和”mockmetrics-service“。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;resources&lt;/span&gt;部分提到标签如何被映射到Kubernetes资源。针对我们的情况，它将“namespace“标签与Kubernetes的”namespace“进行映射，服务也是如此。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;metricsQuery&lt;/span&gt;又是一个Prometheus查询，它可以将指标导入adapter。我们使用的查询是获取2分钟内所有匹配&lt;span&gt;regexmockmetrics-deploy-(.*)&lt;/span&gt;的pods的平均&lt;span&gt;total_hit_count&lt;/span&gt;总和。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;Kubernetes自动伸缩实践&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;一旦你根据下文中的步骤进行，指标值会不断增加。我们现在就来看HPA：&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/infracloudio/kubernetes-autoscaling#scaling-the-application&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;$&lt;/span&gt; kubectl get hpa -w&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;NAME                  REFERENCE                       TARGETS   MINPODS   MAXPODS   REPLICAS   AGE&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mockmetrics-app-hpa   Deployment/mockmetrics-deploy   0/100     1         10        1          11h&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mockmetrics-app-hpa   Deployment/mockmetrics-deploy   56/100    1         10        1          11h&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mockmetrics-app-hpa   Deployment/mockmetrics-deploy   110/100   1         10        1          11h&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mockmetrics-app-hpa   Deployment/mockmetrics-deploy   90/100    1         10        2          11h&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mockmetrics-app-hpa   Deployment/mockmetrics-deploy   126/100   1         10        2          11h&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mockmetrics-app-hpa   Deployment/mockmetrics-deploy   306/100   1         10        2          11h&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mockmetrics-app-hpa   Deployment/mockmetrics-deploy   171/100   1         10        4          11h&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;你可以看到当该值达到目标值时，副本数如何增加。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;工作流程&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;自动伸缩的整体流程如下图所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.4555556&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/zGadXBpNBBqFhqkzckqkP5XGC5pffdrfqphlCcQ3eJVZ6KF6x59Doic0X12EibRZM4GVMBehT4v1UJXZIU8nLRaA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;图片来源: luxas/kubeadm-workshop&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.8814815&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/zGadXBpNBBpvDUJ4dtaq6uHibsL5LI4NSZuDucqR5hicGVP9picOITuTMYntZ71dd3YvdaQM94iaQ7VGDB1UrDTqBg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;结  论&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;你可以从下方链接中了解更多相关项目和参考资料。在过去的几个版本中，Kubernetes中的监控流水线已经大有发展，而Kubernetes的自动伸缩主要基于该流水线工作。如果你不熟悉这个环境，很容易感到困惑和迷茫。&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/infracloudio/kubernetes-autoscaling#other-references-and-credits&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;原文链接：&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://dzone.com/articles/kubernetes-autoscaling-with-custom-metrics-updated&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.4421488&quot; data-w=&quot;242&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zGadXBpNBBpvDUJ4dtaq6uHibsL5LI4NSGksnoDSECciaEXXwP2eWHTqdibXq5JxsyESn7jlic3LUBgwSBGRA9WPKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;推荐阅读&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIyMTUwMDMyOQ==&amp;amp;mid=2247495542&amp;amp;idx=1&amp;amp;sn=21878e575d60d9f31ccb3dd83077ce39&amp;amp;chksm=e83969b0df4ee0a66a7be1c1fd2cc543e6173342008cf354779658207650677c4d8b515bbf1f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;无需重新搭建集群，轻松替换证书！&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIyMTUwMDMyOQ==&amp;amp;mid=2247495503&amp;amp;idx=1&amp;amp;sn=547022a8fff5a60a11b5981748b61da4&amp;amp;chksm=e8396989df4ee09f6b28448f81a761ae7e5ce80a1a22ce88ef7de8f6aca17fab27dfee0810d8&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;GitOps：运用DevOps之力实现基础设施自动化&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIyMTUwMDMyOQ==&amp;amp;mid=2247495497&amp;amp;idx=1&amp;amp;sn=55c2453280a2e55d5d4958baa437a32e&amp;amp;chksm=e839698fdf4ee0995f3eac2381495d6bf631464ad548656ddc23f403afb90fa507c11d9f1728&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;容器技术的前世今生&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.4421488&quot; data-w=&quot;242&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/zGadXBpNBBpvDUJ4dtaq6uHibsL5LI4NSGksnoDSECciaEXXwP2eWHTqdibXq5JxsyESn7jlic3LUBgwSBGRA9WPKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;About Rancher Labs&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;Rancher Labs由CloudStack之父梁胜创建。旗舰产品Rancher是一个开源的企业级Kubernetes管理平台，实现了Kubernetes集群在混合云+本地数据中心的集中部署与管理。Rancher一向因操作体验的直观、极简备受用户青睐，被Forrester评为“2020年多云容器开发平台领导厂商”以及“2018年全球容器管理平台领导厂商”，被Gartner评为“2017年全球最酷的云基础设施供应商”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;目前Rancher在全球拥有超过三亿的核心镜像下载量，并拥有包括中国联通、中国平安、中国人寿、上汽集团、三星、施耐德电气、西门子、育碧游戏、LINE、WWK保险集团、澳电讯公司、德国铁路、厦门航空、新东方等全球著名企业在内的共40000家企业客户。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.7137681&quot; data-w=&quot;828&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/zGadXBpNBBpvDUJ4dtaq6uHibsL5LI4NSQUpibrWqKl66fqZI11pZ8qnwQJ8Gn31vR0RCibupMT2fd7p4DcLyRvPw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d18f72f8845fd0329ed99be53bae3351</guid>
<title>看完这篇文章，别再说不会 Redis 的高级特性了</title>
<link>https://toutiao.io/k/xl63gz1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 作为后端工程师必备的技能，阿粉每次面试的时候都会被问到，阿粉特意把公号前面发过的 Redis 系列文章整理出来成一篇，自己学习同时也帮助大家一起学习。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;文章较长，建议先收藏再观看。&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Redis 的数据类型有哪些？&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 五种数据类型，每种数据类型都有相关的命令，几种类型分别如下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;String（字符串）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;List（列表）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Hash（字典）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Set（集合）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Sorted Set（有序集合）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 有五种常见的数据类型，每种数据类型都有各自的使用场景，通用的字符串类型使用最为广泛，普通的 Key/Value 都是这种类型；列表类型使用的场景经常有粉丝列表，关注列表的场景；字典类型即哈希表结构，这个类型的使用场景也很广泛，在各种系统里面都会用到，可以用来存放用户或者设备的信息，类似于 HashMap 的结构；Redis set 提供的功能与列表类型类似也是一个列表的功能，区别是 Set 是去重的；有序集合功能与 Set 一样，只不过是有顺序的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Redis 的内存回收与Key 的过期策略&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;Redis 内存过期策略&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;过期策略的配置&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 随着使用的时间越来越长，占用的内存会越来越大，那么当 Redis 内存不够的时候，我们要知道 Redis 是根据什么策略来淘汰数据的，在配置文件中我们使用 &lt;code&gt;maxmemory-policy&lt;/code&gt; 来配置策略，如下图&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7013888888888888&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmP70gbibgibicdTDZXZ62R5uWM3IdEpnyAckUuLWdR9lbneR1Knzic3RPibxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1152&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以看到策略的值由如下几种：&lt;/p&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;volatile-lru: 在所有带有过期时间的 key 中使用 LRU 算法淘汰数据；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;alkeys-lru: 在所有的 key 中使用最近最少被使用 LRU 算法淘汰数据，保证新加入的数据正常；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;volatile-random: 在所有带有过期时间的 key 中随机淘汰数据；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;allkeys-random: 在所有的 key 中随机淘汰数据；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;volatile-ttl: 在所有带有过期时间的 key 中，淘汰最早会过期的数据；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;noeviction: 不回收，当达到最大内存的时候，在增加新数据的时候会返回 error，不会清除旧数据，这是 Redis 的默认策略；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;volatile-lru, volatile-random, volatile-ttl 这几种情况在 Redis 中没有带有过期 Key 的时候跟 noeviction 策略是一样的。淘汰策略是可以动态调整的，调整的时候是不需要重启的，原文是这样说的，我们可以根据自己 Redis 的模式来动态调整策略。”To pick the right eviction policy is important depending on the access pattern of your application, however you can reconfigure the policy at runtime while the application is running, and monitor the number of cache misses and hits using the Redis INFO output in order to tune your setup.“&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;策略的执行过程&lt;span/&gt;&lt;/h4&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;客户端运行命令，添加数据申请内存；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Redis 会检查内存的使用情况，如果已经超过的最大限制，就是根据配置的内存淘汰策略去淘汰相应的 key，从而保证新数据正常添加；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;继续执行命令。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;近似的 LRU 算法&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 中的 LRU 算法不是精确的 LRU 算法，而是一种经过采样的LRU，我们可以通过在配置文件中设置 &lt;code&gt;maxmemory-samples 5&lt;/code&gt; 来设置采样的大小，默认值为 5，我们可以自行调整。官方提供的采用对比如下，我们可以看到当采用数设置为 10 的时候已经很接近真实的 LRU 算法了。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.50234375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPicL0ic1Pxjon6Oz8y8DCghYK6OiceeTRAa7kZibotQpeQCFtY6zYhXDKPg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Redis 3.x 以上的版本的中做过优化，目前的近似 LRU 算法以及提升了很大的效率，Redis 之所以不采样实际的 LRU 算法，是因为会耗费很多的内存，原文是这样说的&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;The reason why Redis does not use a true LRU implementation is because it costs more memory.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;Key 的过期策略&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;设置带有过期时间的 key&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面介绍了 Redis 的内存回收策略，下面我们看看 Key 的过期策略，提到 Key 的过期策略，我们说的当然是带有 expire 时间的 key，如下&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.527336860670194&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmP62JNVZicnGic1OCj7brIlsL9FEsr6HOicgp2wbzJzib8pSO2MkrYaiahtmQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1134&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过 &lt;code&gt;redis&amp;gt; set name ziyouu ex 100&lt;/code&gt; 命令我们在 Redis 中设置一个 key 为 name，值为 ziyouu 的数据，从上面的截图中我们可以看到右下角有个 TTL，并且每次刷新都是在减少的，说明我们设置带有过期时间的 key 成功了。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Redis 如何清除带有过期时间的 key&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于如何清除过期的 key 通常我们很自然的可以想到就是我们可以给每个 key 加一个定时器，这样当时间到达过期时间的时候就自动删除 key，这种策略我们叫&lt;strong&gt;定时策略&lt;/strong&gt;。这种方式对内存是友好的，因为可以及时清理过期的可以，但是由于每个带有过期时间的 key 都需要一个定时器，所以这种方式对 CPU 是不友好的，会占用很多的 CPU，另外这种方式是一种主动的行为。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有主动也有被动，我们可以不用定时器，而是在每次访问一个 key 的时候再去判断这个 key 是否到达过期时间了，过期了就删除掉。这种方式我们叫做&lt;strong&gt;惰性策略&lt;/strong&gt;，这种方式对 CPU 是友好的，但是对应的也有一个问题，就是如果这些过期的 key 我们再也不会访问，那么永远就不会删除了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 服务器在真正实现的时候上面的两种方式都会用到，这样就可以得到一种折中的方式。另外在&lt;strong&gt;定时策略&lt;/strong&gt;中，从官网我们可以看到如下说明&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Specifically this is what Redis does 10 times per second:&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Test 20 random keys from the set of keys with an associated expire.&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Delete all the keys found expired.&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;If more than 25% of keys were expired, start again from step 1.&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;意思是说 Redis 会在有过期时间的 Key 集合中随机 20 个出来，删掉已经过期的 Key，如果比例超过 25%，再重新执行操作。每秒钟会执行 10 个这样的操作。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Redis 的发布订阅功能你知道吗？&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;发布订阅系统在我们日常的工作中经常会使用到，这种场景大部分情况我们都是使用消息队列的，常用的消息队列有 Kafka，RocketMQ，RabbitMQ，每一种消息队列都有其特性。其实在很多时候我们可能不需要独立部署相应的消息队列，只是简单的使用，而且数据量也不会太大，这种情况下，我们就可以考虑使用 Redis 的 Pub/Sub 模型。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;使用方式&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;发布与订阅&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 的发布订阅功能主要由 PUBLISH，SUBSCRIBE，PSUBSCRIBE 命令组成，一个或者多个客户端订阅某个或者多个频道，当其他客户端向该频道发送消息的时候，订阅了该频道的客户端都会收到对应的消息。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7692307692307693&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPpvZiaprPXJS0XicFsaLQ7bibzQgliaHNJiaqhZGUQsMpWcJWwnYKFaVcIZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;910&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图中有四个客户端，Client 02，Client 03，Client 04 订阅了同一个Sport 频道（Channel），这时当 Client 01 向 Sport Channel 发送消息 “basketball” 的时候，02-04 这三个客户端都同时收到了这条消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个过程的执行命令如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先开四个 Redis 的客户端，然后在 Client 02，Client 03，Client 04 中输入&lt;code&gt;subscribe sport&lt;/code&gt; 命令，表示订阅 sport 这个频道&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.15257731958762888&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPU0ZvIrSbWSJztRh6kEXicWI4hlBibTMbu3roQVw6naZuib9WV7Ne2QIhg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;970&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后在 Client 01 的客户端中输入&lt;code&gt;publish sport basketball&lt;/code&gt; 表示向 sport 频道发送消息 &quot;basketball&quot;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2754491017964072&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPibbCapiah14icdsw4gjUaLGibZDVf1nB2Z4t85aUeseZKM8w4piaAccAleg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;668&quot;/&gt;&lt;span&gt;这个时候我们在去看下Client 02-04 的客户端，可以看到已经收到了消息了，每个订阅了这个频道的客户端都是一样的。&lt;/span&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;img data-ratio=&quot;0.24672489082969432&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPBS3lJiaEn008FeJKuYWic0t9YZ0CyvwOSfA0sLCan3B9jxQyqEKTmHjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;916&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里 Client 02-Client 04 三个客户端订阅了 Sport 频道，我们叫做订阅者（subscriber），Client 01 发布消息，我们叫做发布者（publisher），发送的消息就是 message。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;模式订阅&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面我们看到的是一个客户端订阅了一个 Channel，事实上单个客户端也可以同时订阅多个 Channel，采用模式匹配的方式，一个客户端可以同时订阅多个 Channel。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.66953125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPUU0lRhjU6DCKXEWEFvLl9S53XAttwsYYicJr5aibgfkELcCibtfgOpYXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上图 Client 05 通过命令&lt;code&gt;subscribe run&lt;/code&gt; 订阅了 &lt;code&gt;run&lt;/code&gt; 频道，Client 06 通过命令&lt;code&gt;psubscribe run*&lt;/code&gt; 订阅了 &lt;code&gt;run*&lt;/code&gt; 匹配的频道。当 Client 07 向 &lt;code&gt;run&lt;/code&gt; 频道发送消息 666 的时候，05 和 06 两个客户端都收到消息了；接下来 Client 07 向 &lt;code&gt;run1&lt;/code&gt; 和 &lt;code&gt;run_sport&lt;/code&gt; 两个频道发送消息的时候，Client 06 依旧可以收到消息，而 Client 05 就收不到了消息了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Client 05 订阅&lt;code&gt;run&lt;/code&gt; 频道和接收到消息：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.24197002141327623&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmP0PHlJMPQUo40xd16Vc6esnr9BfM80V5e5icz59IicUCJ0XEFdAIKtnkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;934&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Client 06 订阅&lt;code&gt;run*&lt;/code&gt; 频道和接收到消息：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3151969981238274&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPSzICPnU8ATicbCVtrLoc3TTO1VcoibauQb7jZU5AaiaDibbV2ic729C9Ytg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1066&quot;/&gt;&lt;figcaption&gt;image-20191222141458065&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Client 07 向多个频道发送消息：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3577981651376147&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPgK2vahnXico5NvXJzibQYSicLCz4ZAjw08LDj2vqbyy2hn6xXJ0LzCa3w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1090&quot;/&gt;&lt;figcaption&gt;image-20191222141514914&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过上面的案例，我们学会了一个客户端可以订阅单个或者多个频道，分别通过&lt;code&gt;subscribe&lt;/code&gt;，&lt;code&gt;psubscribe&lt;/code&gt; 命令，客户端可以通过 &lt;code&gt;publish&lt;/code&gt; 发送相应的消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在命令行中我们可以用 Ctrl + C 来取消相关订阅，对应的命令时 &lt;code&gt;unsubscribe channelName&lt;/code&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;Pub/Sub 底层存储结构&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;订阅 Channel&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Redis 的底层结构中，客户端和频道的订阅关系是通过一个字典加链表的结构保存的，形式如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4093457943925234&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmP8kVyLjMumXFcgib4ic4g3DH3mhpCLCzGj9LfTCAbZ613UvQWGdM2ibNOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1070&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Redis 的底层结构中，Redis 服务器结构体中定义了一个 &lt;code&gt;pubsub_channels&lt;/code&gt; 字典&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;struct&lt;/span&gt; &lt;span&gt;redisServer&lt;/span&gt; {&lt;/span&gt;&lt;br/&gt; &lt;span&gt;//用于保存所有频道的订阅关系&lt;/span&gt;&lt;br/&gt; dict *pubsub_channels;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个字典中，key 代表的是频道名称，value 是一个链表，这个链表里面存放的是所有订阅这个频道的客户端。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以当有客户端执行订阅频道的动作的时候，服务器就会将客户端与被订阅的频道在 pubsub_channels 字典中进行关联。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个时候有两种情况：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;该渠道是首次被订阅：首次被订阅说明在字典中并不存在该渠道的信息，那么程序首先要创建一个对应的 key，并且要赋值一个空链表，然后将对应的客户端加入到链表中。此时链表只有一个元素。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;该渠道已经被其他客户端订阅过：这个时候就直接将对应的客户端信息添加到链表的末尾就好了。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如，如果有一个新的客户端 Client 08 要订阅 &lt;code&gt;run&lt;/code&gt; 渠道，那么上图就会变成&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4323308270676692&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPZpeCFKYx1kRtibInlIsx9nTKAcFhNIn4HRCO7LI4XLDHaELTC3pibm6Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1064&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果 Client 08 要订阅一个新的渠道 &lt;code&gt;new_sport&lt;/code&gt; ，那么就会变成&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5393053016453382&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPSXAb1velfSibBSLXtc8ib1bVAticyo2FictIkq18HhME3nTdnaRNYzO6hw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1094&quot;/&gt;&lt;figcaption&gt;image-20191222161558999&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个订阅的过程可以采用下面伪代码来实现&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Map&amp;lt;String, List&amp;lt;Object&amp;gt;&amp;gt; pubsub_channels = &lt;span&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;();&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;subscribe&lt;/span&gt;&lt;span&gt;(String[] subscribeList, Object client)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//遍历所有订阅的 channel，检查是否在 pubsub_channels 中，不在则创建新的 key 和空链表&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; subscribeList.length; i++) {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (!pubsub_channels.containsKey(subscribeList[i])) {&lt;br/&gt;                pubsub_channels.put(subscribeList[i], &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;());&lt;br/&gt;            }&lt;br/&gt;            pubsub_channels.get(subscribeList[i]).add(client);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;取消订阅&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面介绍的是单个 Channel 的订阅，相反的如果一个客户端要取消订阅相关 Channel，则无非是找到对应的 Channel 的链表，从中删除对应的客户端，如果该客户端已经是最后一个了，则将对应 Channel 也删除。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;unSubscribe&lt;/span&gt;&lt;span&gt;(String[] subscribeList, Object client)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//遍历所有订阅的 channel，依次删除&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; subscribeList.length; i++) {&lt;br/&gt;            pubsub_channels.get(subscribeList[i]).remove(client);&lt;br/&gt;            &lt;span&gt;//如果长度为 0 则清楚 channel&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (pubsub_channels.get(subscribeList[i]).size() == &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;                remove(subscribeList[i]);&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;模式订阅结构&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;模式渠道的订阅与单个渠道的订阅类似，不过服务器是将所有模式的订阅关系都保存在服务器状态的&lt;code&gt;pubsub_patterns&lt;/code&gt; 属性里面。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;struct&lt;/span&gt; &lt;span&gt;redisServer&lt;/span&gt;{&lt;/span&gt;&lt;br/&gt; &lt;span&gt;//保存所有模式订阅关系&lt;/span&gt;&lt;br/&gt; &lt;span&gt;list&lt;/span&gt; *pubsub_patterns;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;与订阅单个 Channel 不同的是，pubsub_patterns 属性是一个链表，不是字典。节点的结构如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;struct&lt;/span&gt; &lt;span&gt;pubsubPattern&lt;/span&gt;{&lt;/span&gt;&lt;br/&gt; &lt;span&gt;//订阅模式的客户端&lt;/span&gt;&lt;br/&gt; redisClient *client;&lt;br/&gt; &lt;span&gt;//被订阅的模式&lt;/span&gt;&lt;br/&gt; robj *pattern;&lt;br/&gt;} pubsubPattern;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实 &lt;code&gt;client&lt;/code&gt; 属性是用来存放对应客户端信息，&lt;code&gt;pattern&lt;/code&gt; 是用来存放客户端对应的匹配模式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以对应上面的 Client-06 模式匹配的结构存储如下&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3076923076923077&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPL9s9SRfcs0f6XWAYXXzWG3icic5EN7uibHnpebzh2X19DokSfm40jfZPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;910&quot;/&gt;&lt;figcaption&gt;image-20191222174528367&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在&lt;code&gt;pubsub_patterns&lt;/code&gt;链表中有一个节点，对应的客户端是 Client-06，对应的匹配模式是&lt;code&gt;run*&lt;/code&gt;。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;订阅模式&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当某个客户端通过命令&lt;code&gt;psubscribe&lt;/code&gt; 订阅对应模式的 Channel 时候，服务器会创建一个节点，并将 Client 属性设置为对应的客户端，pattern 属性设置成对应的模式规则，然后添加到链表尾部。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对应的伪代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;List&amp;lt;PubSubPattern&amp;gt; pubsub_patterns = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;psubscribe&lt;/span&gt;&lt;span&gt;(String[] subscribeList, Object client)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//遍历所有订阅的 channel，创建节点&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; subscribeList.length; i++) {&lt;br/&gt;            PubSubPattern pubSubPattern = &lt;span&gt;new&lt;/span&gt; PubSubPattern();&lt;br/&gt;            pubSubPattern.client = client;&lt;br/&gt;            pubSubPattern.pattern = subscribeList[i];&lt;br/&gt;            pubsub_patterns.add(pubSubPattern);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;创建新节点；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;给节点的属性赋值；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将节点添加到链表的尾部；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;退订模式&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;退订模式的命令是&lt;code&gt;punsubscribe&lt;/code&gt;，客户端使用这个命令来退订一个或者多个模式 Channel。服务器接收到该命令后，会遍历&lt;code&gt;pubsub_patterns&lt;/code&gt;链表，将匹配到的 client 和 pattern 属性的节点给删掉。这里需要判断 client 属性和 pattern 属性都合法的时候再进行删除。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;punsubscribe&lt;/span&gt;&lt;span&gt;(String[] subscribeList, Object client)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//遍历所有订阅的 channel 相同 client 和 pattern 属性的节点会删除&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; subscribeList.length; i++) {&lt;br/&gt;            &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; j = &lt;span&gt;0&lt;/span&gt;; j &amp;lt; pubsub_patterns.size(); j++) {&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; (pubsub_patterns.get(j).client == client&lt;br/&gt;                &amp;amp;&amp;amp; pubsub_patterns.get(j).pattern == subscribeList[i]) {&lt;br/&gt;                    remove(pubsub_patterns);&lt;br/&gt;                }&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;遍历所有的节点，当匹配到相同 client 属性和 pattern 属性的时候就进行节点删除。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;发布消息&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;发布消息比较好容易理解，当一个客户端执行了&lt;code&gt;publish channelName message&lt;/code&gt; 命令的时候，服务器会从&lt;code&gt;pubsub_channels&lt;/code&gt;和&lt;code&gt;pubsub_patterns&lt;/code&gt; 两个结构中找到符合&lt;code&gt;channelName&lt;/code&gt; 的所有 Channel，进行消息的发送。在 &lt;code&gt;pubsub_channels&lt;/code&gt; 中只要找到对应的 Channel 的 key 然后向对应的 value 链表中的客户端发送消息就好。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Redis 的持久化你了解吗&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;持久化是将程序数据在持久状态和瞬时状态间转换的机制。通俗的讲，就是瞬时数据（比如内存中的数据，是不能永久保存的）持久化为持久数据（比如持久化至数据库中，能够长久保存）。另外我们使用的 Redis 之所以快就是因为数据都存储在内存当中，为了保证在服务器出现异常过后还能恢复数据，所以就有了 Redis 的持久化，Redis 的持久化有两种方式，一种是快照形式 RDB，另一种是增量文件 AOF。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;RDB&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RDB 持久化方式是会在一个特定的时间间隔里面保存某个时间点的数据快照，我们拿到这个数据快照过后就可以根据这个快照完整的复制出数据。这种方式我们可以用来备份数据，把快照文件备份起来，传送到其他服务器就可以直接恢复数据。但是这只是某个时间点的全部数据，如果我们想要最新的数据，就只能定期的去生成快照文件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RDB 的实现主要是通过创建一个子进程来实现 RDB 文件的快照生成，通过子进程来实现备份功能，不会影响主进程的性能。同时上面也提到 RDB 的快照文件是保存一定时间间隔的数据的，这就会导致如果时间间隔过长，服务器出现异常还没来得及生成快照的时候就会丢失这个间隔时间的所有数据；那有同学就会说，我们可以把时间间隔设置的短一点，适当的缩短是可以的，但是如果间隔时间段设置短一点频繁的生成快照对系统还是会有影响的，特别是在数据量大的情况下，高性能的环境下是不允许这种情况出现的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以在 &lt;code&gt;redis.conf&lt;/code&gt; 进行 RDB 的相关配置，配置生成快照的策略，以及日志文件的路径和名称。还有定时备份规则，如下图所示，里面的注释写的很清楚，简单说就是在多少时间以内多少个 key 变化了就会触发快照。如&lt;code&gt;save 300 10&lt;/code&gt; 表示在 5 分钟内如果有 10 个 key 发生了变化就会触发生产快照，其他的同理。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.65625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPXKUDDiciaic17DkvHTmexYcZiawaHN18APoibeQb1mYkUCgFrpwWicOxJW4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了我们在配置文件中配置自动生成快照文件之外，Redis 本身提供了相关的命令可以让我们手动生成快照文件，分别是 &lt;code&gt;SAVE&lt;/code&gt; 和 &lt;code&gt;BGSAVE&lt;/code&gt; ，这两个命令功能相同但是方式和效果不一样，&lt;code&gt;SAVE&lt;/code&gt; 命令执行完后阻塞服务器进程，阻塞过后服务器就不能处理任何请求，所以在生产上不能用，和&lt;code&gt;SAVE&lt;/code&gt; 命令直接阻塞服务器进程的做法不同，&lt;code&gt;BGSAVE&lt;/code&gt; 命令是生成一个子进程，通过子进程来创建 RDB 文件，主进程依旧可以处理接受到的命令，从而不会阻塞服务器，在生产上可以使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;阿粉在这里测试一下自动生成快照，我们修改一下快照的生成策略为&lt;code&gt;save 10 2&lt;/code&gt;，然后在本地启动Redis 服务，并用 redis-cli 链接进入，依次步骤如下&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;修改配置，如下&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.3753943217665615&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPMKXwnFjRObJ6D6yuKNdWBiblmwA0PYQ1ZTuwmYbrKkmVBJtNgJLyZmg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;634&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;启动 Redis 服务，我们可以从启动日志中看到，默认是会先读取 RDB 文件进行恢复的&lt;/p&gt;&lt;figure/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.60234375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPqCPVKjMvWn5iaKCbJC4oqvLVF2kcapedxBADoTYSZ6CaYge0hytEGTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;链接 Redis 服务，并在 10s 内设置 3 个 key&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.29338103756708406&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPEPXoyWcyLXgolUadSYcTzjqZZA3iciaYSAF6wvf3pUZrLYfDBxZ8hvOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1118&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;这个时候我们会看到 Redis 的日志里面会输出下面内容，因为触发了规则，所以开启子进程进行数据备份，同时在对应的文件路径下面，我们也看到了 rdb 文件。&lt;/p&gt;&lt;figure/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.62265625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmP3BaJmRTEfrxOSbdFibhDiaVX9nYBd4iasPpj4vicQsJX0hicwj6dMPiaAzSw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.25163398692810457&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPn9qqWTHL3JlfJlXXYTjp79bKTsyWUUwnYLIiaRs35lN3nw2BHRClqtA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;612&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上面可以看出，我们配置的规则生效了，也成功的生成了 RDB 文件， 后续在服务器出现异常的情况，只要重新启动就会读取对应的 RDB 文件进行数据备份。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;AOF&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;AOF 是一种追加执行命令的形式，它跟 RDB 的区别是，AOF 并不是把数据保存下来，而是保存执行的动作。在开启 AOF 功能的时候，客户端连接后执行的每一条命令都会被记录下来。这其实让阿粉想起来的 MySQL 的 binlog 日志，也是记录操作的命令，后续可以根据文件去恢复数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;AOF 是追加命令格式的文件，同样的我们可以定义多长时间把数据同步一次，Redis 本身提供了三种策略来实现命令的同步，分别是不进行同步，每秒同步一次，以及当有查询的时候同步一次。默认的策略也是使用最多的策略就是每秒同步一次，这样我们可以知道，丢失的数据最多也就只有一秒钟的数据。有了这种机制，AOF 会比 RDB 可靠很多，但是因为文件里面存在的是执行的命令，所以AOF 的文件一般也会比 RDB 的文件大点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 的 AOF 功能，默认是没有开启的，我们可以通过在配置文件中配置&lt;code&gt;appendonly yes&lt;/code&gt; 是功能开启，同时配置同步策略&lt;code&gt;appendfsync everysec&lt;/code&gt; 开启每秒钟同步一次，我们拿到 AOF 文件过后，可以根据这个文件恢复数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同样的我们在&lt;code&gt;redis.conf&lt;/code&gt; 中可以看到默认是没有开启 AOF 功能的，并且我们也可以指定对应的文件名称和路径。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.28363636363636363&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPEjWrKiaoJQ8nsrpia1bQPKGbfIoibnKjYuMMrkVaQX7DSLtGwpE8fOByQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1100&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，我们测试一下开启 AOF 功能，先修改配置然后重启 Redis 的服务器，我们会发现已经没有读取 RDB 文件的日志了，并且在日志文件路径下面已经生成了一个 aof 文件。需要注意的是，因为我们重启的服务，并且开启了 AOF，所以现在 Redis 服务器里面并没有我们之前添加的数据（说明什么问题呢？）。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.49453125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPZJesWVdZPf9mZepc4ibZF13oiavShMhNtAz7HlAm9TicfeERpPBUfDcJQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3568904593639576&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPsWsfaNWRLZhic8FBKVZlIbrJcCFKwD0A72nMiceVyWhiatkal5QYeTEzA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;566&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来我们使用客户端连接进入，设置如下值，接下来我们可以看看 aof 文件里面的内容&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5229681978798587&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPCLIic8PbbzLFl1ZHOVBcj1yfcFLAibmsBLBd9dxRbPnvNnxoom6lnGhA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;566&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8218694885361552&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tWOhQMr1wdB9NjZH2uZSUgjp4NkOnUmPnpAq0j8SwkqOqMIq3pEsVVibmuzdMGaqv4esT52H4fnsd5oNsCr5afQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1134&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以看到&lt;code&gt;aof&lt;/code&gt; 文件里面的内容就是执行的命令，只不过是以一种固定的格式存储的，我们在备份的时候如果不需要哪些数据，可以手动删掉对应的命令就可以重新备份数据。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Redis 的有几种集群模式&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然说单机 Redis 理论上可以达到 10 万并发而且也可以进行持久化，但是在生产环境中真正使用的时候，我相信没有哪个公司敢这样使用，当数据量达到一定的规模的时候肯定是要上 Redis 集群的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 的模式有主从复制模式，哨兵模式以及集群模式，这三种模式的涉及到篇幅内容会比较多，阿粉后面会单独写一篇文章来介绍，感兴趣的小伙伴可以先自己学习下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>12c08b92c71d3ac7ee9996ece19fb28a</guid>
<title>怎么编写优雅的单元测试？</title>
<link>https://toutiao.io/k/xeeebub</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;h1&gt;&lt;span&gt;前言&lt;/span&gt;&lt;br/&gt;&lt;/h1&gt;&lt;p&gt;维基百科上单元测试的定义是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。程序单元是应用的最小可测试部件。&lt;/p&gt;&lt;p&gt;对于java应用来说，单元测试是对一个java类的方法级别测试。今天我们来聊下怎么编写优雅的单元测试的一些方法论和最佳实践。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;为什么需要单元测试&lt;/span&gt;&lt;/h3&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;单元测试能够以较低的成本，来验证代码逻辑的正确性。它也能很大程度上提高代码质量。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;降低测试成本。虽然编写单测会花费我们一些功夫，但是Bug发现的越早，修复的代价越小。另外如果代码有良好的单元测试，集成测试和系统测试就只需要关注功能和流程方面的问题，回归测试成本也大幅减少。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;重构代码时提升信心。单测可以确保重构后的代码没有改变原来的逻辑，如果逻辑发生来改变，会有失败的用例提示你。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;有助于理解代码的逻辑。测试用例很直观的可以看出待测试方法想要表达的逻辑，很多著名的框架都提供对应的测试用例，如Spring，Guava。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最后就是公司的研发流程规范有覆盖率要求。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;&lt;span&gt;单元测试的时机&lt;/span&gt;&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;刚写好类的方法时，这是最熟悉这段业务逻辑的时候，赶紧写一个Junit来验证下自己的成果。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;重构代码之前，重构最怕的是是什么，当然是改出问题来。一个良好的单测能让你再重构的时候更从容一些。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;覆盖率不够的时候，需要我们补测试用例到达目标值，经验值是70%。当然提升覆盖率也不是越高越好。太高的指标会导致开发人员采用Hack的方式来提高覆盖率。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;怎么写单元测试&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;3A（Arrange、Act、Assert）模式是编写待测试方法的单元测试的常用方法。一个Junit典型结构如下所示：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;@Test&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;public void getCategoryPath() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    // 准备数据&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Category zj = new Category();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    zj.setCategoryId(1000L);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    zj.setParentId(100L);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    zj.setCategoryName(&quot;张江&quot;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Mockito.when(knowledgeCategoryDao.queryAllKnowledgeCategory()).thenReturn(mockData());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Mockito.when(knowledgeCategoryDao.queryByPk(1000L)).thenReturn(zj);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    // 调用测试方法&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    String path = categoryService.getCategoryPath(1000L);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    // 断言&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Assert.assertThat(path, is(&quot;上海市/浦东新区/张江&quot;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h4&gt;&lt;span&gt;Arrange，准备&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;准备阶段构造调⽤所需要的外部环境，如数据，临时变量，网路请求，环境变量等。这里是挑战最大的部分，引入测试替身(Test Double)能够显著降低这部分的难度。&lt;/p&gt;&lt;h5&gt;&lt;span&gt;测试替身&lt;/span&gt;&lt;/h5&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;测试替身&lt;/th&gt;&lt;th&gt;定义&lt;/th&gt;&lt;th&gt;使用场景&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Dummy&lt;/td&gt;&lt;td&gt;只用来传参从不被真正使用&lt;/td&gt;&lt;td&gt;填充参数列表，消除编译错误&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Fake&lt;/td&gt;&lt;td&gt;一个可以work的简单实现，不能用于生产&lt;/td&gt;&lt;td&gt;H2，内存中执行CRUD操作&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stub&lt;/td&gt;&lt;td&gt;有实际实现的对象替换一部分功能的程序&lt;/td&gt;&lt;td&gt;当从数据库查询时，直接返回预定义好的数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Mock&lt;/td&gt;&lt;td&gt;创建一个虚假的对象，满足预定的参数它会返回预定结果&lt;/td&gt;&lt;td&gt;第三单接口，when x then y&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;em&gt;这里的Stub是指用来替换一部分功能的程序段。桩程序可以用来模拟已有程序的行为（比如一个远端机器的过程）或是对将要开发的代码的一种临时替代。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Stub 的典型应用场景即是当某个对象需要从数据库抓取数据时，它并不是真实的从数据库抓取数据，而是直接返回预定义好的数据。&lt;/p&gt;&lt;p&gt;Stub和Mock微妙的区别&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// code in StubDao&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;public Category queryByPk(Long id) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    return new Category(id);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;CategoryDao categoryDao = new StubDao();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Category category = categoryDao.queryByPk(2L);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;Mock实例:&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;CategoryDao categoryDao = Mockito.mock(CategoryDao.class);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Mockito.when(categoryDao.queryByPk(2L)).thenReturn(new Category());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;了解更多请参考Martin Fowler 的 Mocks Aren&#x27;t Stubs&lt;/p&gt;&lt;h4&gt;&lt;span&gt;Act，执行要测试的方法。&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;span&gt;Assert，断言&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;最后判断结果是否符合预期，推荐Hamcrest, 它提供符合直觉，更好的可读性的断言功能。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Person person = new Person(&quot;SPF&quot;, &quot;Henan&quot;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;assertThat(person, hasProperty(&quot;address&quot;, equalTo(&quot;Henan&quot;)));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;List&amp;lt;String&amp;gt; collection = Lists.newArrayList(&quot;ab&quot;, &quot;cd&quot;, &quot;ef&quot;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;assertThat(collection, hasItem(&quot;cd&quot;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;assertThat(collection, contains(&quot;ab&quot;, &quot;cd&quot;, &quot;ef&quot;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;什么是好的单元测试&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;好的单元测试必须遵守AIR原则，感觉像空气（AIR）一样并不存在。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;A：Automatic（自动化） 全自动执行，无人为干预和交互。一般是在CI/CD流程中。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;I: Independent（独立性） 要求单测无调用关系，无调用顺序。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;R: Repeatable（可重复）。是指不能受到外界环境的影响&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;除了AIR这些原则之外，下面是我们实践中总结的一些经验:&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;起个好名字 好的命名能让单测更容易理解。为测试用例起个好名字其实没有为变量或方法取名那么困难，一般是以我们测试的方法同名，如果测试用例有2个分支的话，最好写2个测试用例，并在方法名上加以区分，例如doSomethingWithA, doSomethingWithB。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;简单 是指测试用例简单明了，避免单测本身包含复杂的逻辑。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;完整 是要求用执行正常场景和异常场景，边界等，覆盖不同的代码分支。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;快速 执行速度要快，一般不要超过1秒，试想下如果100个用例，每个用例跑1分钟的画面。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;最佳实践，提倡和不提倡的&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;几乎所有的开发同学同学都写过单元测试，在编写测试用例的时候是否遇到测试代码难以下手，测试结果不稳定，执行时间长这些问题呢？&lt;/p&gt;&lt;p&gt;这些问题或许能从下面的最佳实践中找到解决方法。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;DO&lt;/span&gt;&lt;/h3&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;只测要测试的方法。试着这样思考，输入是 x 和 y，输出会是 z 吗？而不是 如果我的输入是 x 和 y，那么这个方法会先调用 A 类，然后调用 B 类，接着输出 A 类和 B 类返回值相加的结果吗？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Mock第三方依赖，如Mockito。这会使测试更稳定，且迅速。比如用户还款方法，依赖支付接口，我们并不希望发生一笔支付交易,可以使用使用Mockito创建一个假的支付接口，这样就可以全面控制它了。在下面的例子里，返回支付成功。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;PayClient payClient = Mockito.Mock(PayClient.class);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Mockito.when(payClient.tx(txRequest)).thenReturn(true);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;UserRepayService userRepayService = new UserRepayServiceImpl(payClient);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;ol start=&quot;3&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;使用最细粒度的断言。对比下面2个断言，很明显上面的断言更明确。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Assert.assertThat(items, hasItems(&quot;one&quot;, &quot;two&quot;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Assert.assertThat(items, not(empty()));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;ol start=&quot;4&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;编写容易测试的代码，下面是一些建议:&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;public class UserRepayServiceImplTest {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    // 构建待测试实例&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private PayTradeInfoClient payTradeInfoClient = Mockito.mock(PayTradeInfoClient.class);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private ThorQueryClient thorQueryClient = Mockito.mock(ThorQueryClient.class);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    private UserRepayServiceImpl userRepayService = new UserRepayServiceImpl(this.payTradeInfoClient, this.thorQueryClient);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    @Test&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    // 省略测试用例代码&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;如果使用Field injection也不用担心，我们可以通过反射方式设置字段。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    MockitoAnnotations.initMocks(this);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ReflectionTestUtils.setField(categoryService, &quot;knowledgeCategoryDao&quot;, knowledgeCategoryDao);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;对比下下面2个类，哪个更容易测试? 它们的名字或许会给你答案。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;方法的行数要少&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;避免静态代码块初始化类&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;依赖注入避字段注入，推荐构造函数注入。我们项目中Idea会提示&lt;em&gt;Field injection is not recommended&lt;/em&gt;。Field Injection的问题这里不做讨论，它还导致依赖服务很难被注入。如果采用构造器注入的话，我们可以很容易的new一个依赖传入待测试的类里。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    public class UnTestableDemo {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        public void writeUserName(int id) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            String userName = App.getDatabaseManager().getUserDatabase().getUserName(id);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            try (FileWriter writer = new FileWriter(&quot;user.txt&quot;)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                writer.write(userName);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    public class EasyTestableDemo {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        private final UserDatabase userDatabase;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        public MyClass(final UserDatabase userDatabase) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            this.userDatabase = userDatabase&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        public void writeUserName(int id, Writer writer) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            String userName = this.userDatabase.getUserName(id);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            writer.write(userName);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;tips&lt;/strong&gt; 在Idea中光标在要测试的类上，使用Alt + Enter可以快速创建Junit。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;NOT DO&lt;/span&gt;&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;不依赖数据库，如果必须的话，使用H2模拟一个。测试环境的数据库有可能会被修改，而且执行时间也会加长。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不要mock值对象。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不要怕测试用例代码重复，它们只是测试代码。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不要skip用例，被skip的测试用例不会执行。skip失败的用例只会把问题掩盖。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;避免使用SpringTestRunner，SpringTestRunner有什么问题呢？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;慢，加载Spring一般要1min左右，如果Test Case多的话，跑完全部话费的时间太长，而且随着用例次数的增长线性增长。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;引入额外依赖，创建太多不需要的bean，有可能因为不相关的bean的创建失败，导致整个用例失败。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;以上我们谈了单元测试对提升代码质量，提高测试效率等好处，还有实践中遇到的问题和解决方法。希望能对大家编写好的单元测试有所帮助。&lt;/p&gt;&lt;p&gt;Happy Testing, Happier Coding&lt;/p&gt;&lt;p&gt;参考资料:&lt;br/&gt;https://github.com/mockito/mockito/wiki/How-to-write-good-tests&lt;br/&gt;https://mp.weixin.qq.com/s/okmWMOeBm7cCIZ1zzFr4KQ&lt;br/&gt;https://stackoverflow.com/a/69263/2299922&lt;br/&gt;《Java程序员修炼之道》&lt;/p&gt;&lt;h3&gt;&lt;span&gt;作者介绍&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;SPF007, 信也科技&lt;span&gt;研发中心&lt;/span&gt;研发专家，主要负责客服系统的研发。&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>