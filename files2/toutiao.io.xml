<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>c4b9944319fbf5013c7e35484e2febc7</guid>
<title>凯文·凯利70岁生日的103条人生建议｜码农周刊VIP会员专属邮件周报 Vol.090</title>
<link>https://toutiao.io/k/d3q95iv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;logged-out env-production page-responsive page-blob&quot; id=&quot;readabilityBody&quot;&gt;
    

    

  &lt;p id=&quot;start-of-content&quot; class=&quot;show-on-focus&quot;/&gt;







    


    

  &lt;include-fragment class=&quot;js-notification-shelf-include-fragment&quot; data-base-src=&quot;https://github.com/notifications/beta/shelf&quot;/&gt;





  &lt;div class=&quot;application-main &quot; data-commit-hovercards-enabled=&quot;&quot; data-discussion-hovercards-enabled=&quot;&quot; data-issue-and-pr-hovercards-enabled=&quot;&quot;&gt;
        &lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot; class=&quot;&quot;&gt;
    &lt;main id=&quot;js-repo-pjax-container&quot; data-pjax-container=&quot;&quot;&gt;
      

    
    








  



&lt;div id=&quot;repo-content-pjax-container&quot; class=&quot;repository-content &quot;&gt;
  
  


  
      
  &lt;div class=&quot;clearfix container-xl px-3 px-md-4 px-lg-5 mt-4&quot;&gt;
    
    
&lt;div&gt;
  




    
&lt;a class=&quot;d-none js-permalink-shortcut&quot; data-hotkey=&quot;y&quot; href=&quot;/toutiaoio/weekly.manong.io/blob/bfce3ea87cd5c8c85608e58ecb1dbde7503f34ff/docs/vol.090.md?hmsr=toutiao.io&amp;amp;utm_campaign=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&quot;&gt;Permalink&lt;/a&gt;







    &lt;div id=&quot;spoof-warning&quot; class=&quot;mt-0 pb-3&quot; hidden=&quot;&quot; aria-hidden=&quot;&quot;&gt;
  &lt;div data-view-component=&quot;true&quot; class=&quot;flash flash-warn mt-0 clearfix&quot;&gt;
  
  
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert float-left mt-1&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;

      &lt;p class=&quot;overflow-hidden&quot;&gt;This commit does not belong to any branch on this repository, and may belong to a fork outside of the repository.&lt;/p&gt;


  
&lt;/div&gt;&lt;/div&gt;

    &lt;include-fragment src=&quot;/toutiaoio/weekly.manong.io/spoofed_commit_check/bfce3ea87cd5c8c85608e58ecb1dbde7503f34ff&quot; data-test-selector=&quot;spoofed-commit-check&quot;/&gt;

    &lt;div class=&quot;Box d-flex flex-column flex-shrink-0 mb-3&quot;&gt;
  
  

  &lt;div class=&quot;Box-body d-flex flex-items-center flex-auto border-bottom-0 flex-wrap&quot;&gt;
    &lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default color-fg-default float-left mr-3&quot; id=&quot;blob_contributors_box&quot;&gt;
      &lt;summary class=&quot;Link--primary&quot;&gt;
        &lt;svg text=&quot;gray&quot; aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-people&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M5.5 3.5a2 2 0 100 4 2 2 0 000-4zM2 5.5a3.5 3.5 0 115.898 2.549 5.507 5.507 0 013.034 4.084.75.75 0 11-1.482.235 4.001 4.001 0 00-7.9 0 .75.75 0 01-1.482-.236A5.507 5.507 0 013.102 8.05 3.49 3.49 0 012 5.5zM11 4a.75.75 0 100 1.5 1.5 1.5 0 01.666 2.844.75.75 0 00-.416.672v.352a.75.75 0 00.574.73c1.2.289 2.162 1.2 2.522 2.372a.75.75 0 101.434-.44 5.01 5.01 0 00-2.56-3.012A3 3 0 0011 4z&quot;/&gt;
&lt;/svg&gt;
        &lt;strong&gt;1&lt;/strong&gt;
        
        contributor
      &lt;/summary&gt;
      &lt;details-dialog class=&quot;Box Box--overlay d-flex flex-column anim-fade-in fast&quot; aria-label=&quot;Users who have contributed to this file&quot; src=&quot;/toutiaoio/weekly.manong.io/contributors-list/master/docs/vol.090.md&quot; preload=&quot;&quot;&gt;
        &lt;div class=&quot;Box-header&quot;&gt;
          &lt;button class=&quot;Box-btn-octicon btn-octicon float-right&quot; type=&quot;button&quot; aria-label=&quot;Close dialog&quot; data-close-dialog=&quot;&quot;&gt;
            &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-x&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z&quot;/&gt;
&lt;/svg&gt;
          &lt;/button&gt;
          &lt;h3 class=&quot;Box-title&quot;&gt;
            Users who have contributed to this file
          &lt;/h3&gt;
        &lt;/div&gt;
        &lt;include-fragment&gt;
          &lt;svg viewbox=&quot;0 0 16 16&quot; fill=&quot;none&quot; data-view-component=&quot;true&quot; class=&quot;my-3 mx-auto d-block anim-rotate&quot;&gt;
  &lt;circle cx=&quot;8&quot; cy=&quot;8&quot; r=&quot;7&quot; stroke=&quot;currentColor&quot; stroke-opacity=&quot;0.25&quot; stroke-width=&quot;2&quot; vector-effect=&quot;non-scaling-stroke&quot;/&gt;
  &lt;path d=&quot;M15 8a7.002 7.002 0 00-7-7&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; vector-effect=&quot;non-scaling-stroke&quot;/&gt;
&lt;/svg&gt;
        &lt;/include-fragment&gt;
      &lt;/details-dialog&gt;
    &lt;/details&gt;
  &lt;/div&gt;
&lt;/div&gt;







    &lt;readme-toc&gt;

    &lt;div data-target=&quot;readme-toc.content&quot; class=&quot;Box mt-3 position-relative&quot;&gt;
      
  &lt;div class=&quot;Box-header js-blob-header blob-header js-sticky js-position-sticky top-0 p-2 d-flex flex-shrink-0 flex-md-row flex-items-center&quot;&gt;

      &lt;details data-target=&quot;readme-toc.trigger&quot; data-menu-hydro-click=&quot;{&amp;quot;event_type&amp;quot;:&amp;quot;repository_toc_menu.click&amp;quot;,&amp;quot;payload&amp;quot;:{&amp;quot;target&amp;quot;:&amp;quot;trigger&amp;quot;,&amp;quot;repository_id&amp;quot;:193332705,&amp;quot;originating_url&amp;quot;:&amp;quot;https://github.com/toutiaoio/weekly.manong.io/blob/master/docs/vol.090.md?hmsr=toutiao.io&amp;amp;utm_campaign=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&amp;quot;,&amp;quot;user_id&amp;quot;:null}}&quot; data-menu-hydro-click-hmac=&quot;22043ed9df8256ce83f5fb1aa1911a940509266306b4564c4b9f8c48a25be466&quot; class=&quot;dropdown details-reset details-overlay&quot;&gt;
  &lt;summary class=&quot;btn btn-octicon m-0 mr-2 p-2&quot; aria-haspopup=&quot;true&quot; aria-label=&quot;Table of Contents&quot;&gt;
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-list-unordered&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M2 4a1 1 0 100-2 1 1 0 000 2zm3.75-1.5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zM3 8a1 1 0 11-2 0 1 1 0 012 0zm-1 6a1 1 0 100-2 1 1 0 000 2z&quot;/&gt;
&lt;/svg&gt;
  &lt;/summary&gt;


  &lt;details-menu class=&quot;SelectMenu&quot; role=&quot;menu&quot;&gt;
    
  &lt;/details-menu&gt;
&lt;/details&gt;


  &lt;p class=&quot;text-mono f6 flex-auto pr-3 flex-order-2 flex-md-order-1&quot;&gt;

      92 lines (53 sloc)
      &lt;span class=&quot;file-info-divider&quot;/&gt;
    3.62 KB
  &lt;/p&gt;

  

    
&lt;/div&gt;


        &lt;div id=&quot;readme&quot; class=&quot;Box-body readme blob js-code-block-container p-5 p-xl-6 gist-border-0&quot;&gt;
    &lt;article class=&quot;markdown-body entry-content container-lg&quot; itemprop=&quot;text&quot;&gt;&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-凯文凯利70岁生日的103条人生建议码农周刊vip会员专属邮件周报-vol090&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#凯文凯利70岁生日的103条人生建议码农周刊vip会员专属邮件周报-vol090&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;凯文·凯利70岁生日的103条人生建议｜码农周刊VIP会员专属邮件周报 Vol.090&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p dir=&quot;auto&quot;&gt;本文内容节选自「码农周刊VIP会员专属邮件周报 Vol.090」，每周五发送，欢迎订阅！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p dir=&quot;auto&quot;&gt;&lt;a href=&quot;#%E7%AE%80%E4%BB%8B&quot;&gt;码农周刊简介&lt;/a&gt;｜&lt;a href=&quot;#%E8%AF%BB%E8%80%85%E5%9C%88%E5%AD%90%E4%B8%93%E5%B1%9E%E9%82%AE%E4%BB%B6%E5%91%A8%E6%8A%A5&quot;&gt;读者圈子专属邮件周报&lt;/a&gt;｜&lt;a href=&quot;#%E5%BE%80%E6%9C%9F%E5%AD%98%E6%A1%A3&quot;&gt;往期存档&lt;/a&gt;&lt;/p&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-欢迎加入读者圈子一起交流&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#欢迎加入读者圈子一起交流&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;欢迎加入读者圈子，一起交流！&lt;/h2&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;600+圈子成员，以中高级程序员为主，更有架构师、CTO坐镇交流；&lt;/li&gt;
&lt;li&gt;1000+优质主题，数十G独家资料，每日分享，精挑细选；&lt;/li&gt;
&lt;li&gt;全年52期专属邮件周报，让你轻松掌握业界资讯、技术干货，提升认知水平；&lt;/li&gt;
&lt;li&gt;全年52本好书共读，让你花最少的时间，获取更好的知识；&lt;/li&gt;
&lt;/ul&gt;
&lt;p dir=&quot;auto&quot;&gt;……&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;心动不如行动，赶快加入吧！&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/2fac8f02f427e6fd6754cc3079b5de7539bccbb010003d49d2309d0ee1a21c5a/68747470733a2f2f696d672e746f757469616f2e696f2f6164732f7669705f6769746875625f303530362e6a706567&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/2fac8f02f427e6fd6754cc3079b5de7539bccbb010003d49d2309d0ee1a21c5a/68747470733a2f2f696d672e746f757469616f2e696f2f6164732f7669705f6769746875625f303530362e6a706567&quot; data-canonical-src=&quot;https://img.toutiao.io/ads/vip_github_0506.jpeg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-本期首先分享的是凯文凯利70岁生日的103条人生建议摘录几条共勉&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#本期首先分享的是凯文凯利70岁生日的103条人生建议摘录几条共勉&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期，首先分享的是凯文·凯利70岁生日的103条人生建议，摘录几条，共勉。&lt;/h2&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;不要为那种你不想成为的人工作。&lt;/li&gt;
&lt;li&gt;12个爱你的人，比12,000,000个喜欢你的人更值得。&lt;/li&gt;
&lt;li&gt;别犯同样的错，试一些新错。&lt;/li&gt;
&lt;li&gt;领导的真正工作是培养更多领导，而不是粉丝。&lt;/li&gt;
&lt;li&gt;付出（锻炼、陪伴、工作）的连续性比数量更重要。日拱一卒，比偶尔为之更重要。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-内容节选&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#内容节选&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;内容节选&lt;/h2&gt;
&lt;p dir=&quot;auto&quot;&gt;1、&lt;a href=&quot;https://mp.weixin.qq.com/s/1Dv17rDRto_1i_LdHEVARA&quot; rel=&quot;nofollow&quot;&gt;TikTok内幕：张一鸣的巨浪征途&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;“另一方面，张一鸣不会感情用事，对人对事极为精确，眼睛容不下灰色和沙粒。这让他流露出一种狠绝。在早期，他把拿走公司代码的人送进了监狱。”&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;2、&lt;a href=&quot;https://mp.weixin.qq.com/s/_fZxTDOr2n1IQySjVODB8A&quot; rel=&quot;nofollow&quot;&gt;Web3革命：逃离、信仰、大迁徙&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;互联网正在发生的一场“大迁徙”&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;3、&lt;a href=&quot;https://toutiao.io/k/vduu1jt&quot; rel=&quot;nofollow&quot;&gt;B站SRE业务稳定性运营实践&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;从稳定性的相关理论定义出发，围绕稳定性的核心领域展开描述，并介绍B站在相关领域所做的实践探索。&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;4、&lt;a href=&quot;https://toutiao.io/k/h7w6rt4&quot; rel=&quot;nofollow&quot;&gt;携程酒店订单缓存 &amp;amp; 存储系统升级实践&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;万字长文详解&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;5、&lt;a href=&quot;https://github.com/alibaba/fastjson2&quot;&gt;阿里巴巴开源的高性能JSON库&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;FASTJSON项目的重要升级&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;6、&lt;a href=&quot;https://github.com/k8w/tsrpc&quot;&gt;一个专为 TypeScript 设计的 RPC 框架&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;适用于 HTTP API、WebSocket 实时应用、NodeJS 微服务等场景。&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;7、&lt;a href=&quot;https://toutiao.io/k/zgzh3st&quot; rel=&quot;nofollow&quot;&gt;几道高频的JVM面试题&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;供参考&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;8、&lt;a href=&quot;https://toutiao.io/k/x03gc99&quot; rel=&quot;nofollow&quot;&gt;9张图轻松吃透Go内存管理单元&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;图文并茂&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;9、&lt;a href=&quot;https://toutiao.io/k/n0gqyj1&quot; rel=&quot;nofollow&quot;&gt;Elasticsearch 数据建模指南&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;详细介绍&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;10、&lt;a href=&quot;https://toutiao.io/k/y59f508&quot; rel=&quot;nofollow&quot;&gt;我的机器学习之路&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;学习总结&lt;/p&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-简介&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#简介&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;简介&lt;/h2&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;码农周刊是一份专为广大程序员、编程爱好者们打造的 IT 技术周刊。每周发送。&lt;/li&gt;
&lt;li&gt;2013 年 9 月 12 日创刊至今，已发送 300 多期，订阅用户超 20 万&lt;/li&gt;
&lt;li&gt;专业、简单、有用，是我们一直坚持的办刊宗旨。一路走来，我们见证了不少订阅用户从编程新手进阶成了高级程序员、架构师、CTO……&lt;/li&gt;
&lt;li&gt;2020 年 4 月，为了给用户提供更优质的服务，我们推出了「码农周刊VIP会员」服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-读者圈子专属邮件周报&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#读者圈子专属邮件周报&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;读者圈子专属邮件周报&lt;/h2&gt;

&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-往期存档&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#往期存档&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;往期存档&lt;/h2&gt;

&lt;/article&gt;
  &lt;/div&gt;

    &lt;/div&gt;

  &lt;/readme-toc&gt;

  

  &lt;details class=&quot;details-reset details-overlay details-overlay-dark&quot; id=&quot;jumpto-line-details-dialog&quot;&gt;
    &lt;summary data-hotkey=&quot;l&quot; aria-label=&quot;Jump to line&quot;/&gt;
    &lt;details-dialog class=&quot;Box Box--overlay d-flex flex-column anim-fade-in fast linejump&quot; aria-label=&quot;Jump to line&quot;&gt;
          &lt;/details-dialog&gt;
  &lt;/details&gt;


&lt;/div&gt;

  &lt;/div&gt;


&lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;

  &lt;/div&gt;

          &lt;footer class=&quot;footer width-full container-xl p-responsive&quot; role=&quot;contentinfo&quot;&gt;


  
  &lt;p class=&quot;d-flex flex-justify-center pb-6&quot;&gt;
    &lt;span class=&quot;f6 color-fg-muted&quot;/&gt;
  &lt;/p&gt;
&lt;/footer&gt;




  &lt;div id=&quot;ajax-error-message&quot; class=&quot;ajax-error-message flash flash-error&quot; hidden=&quot;&quot;&gt;
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;
    &lt;button type=&quot;button&quot; class=&quot;flash-close js-ajax-error-dismiss&quot; aria-label=&quot;Dismiss error&quot;&gt;
      &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-x&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z&quot;/&gt;
&lt;/svg&gt;
    &lt;/button&gt;&lt;p&gt;
    You can’t perform that action at this time.
  &lt;/p&gt;&lt;/div&gt;

  &lt;div class=&quot;js-stale-session-flash flash flash-warn flash-banner&quot; hidden=&quot;&quot;&gt;
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;
    &lt;span class=&quot;js-stale-session-flash-signed-in&quot; hidden=&quot;&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;
    &lt;span class=&quot;js-stale-session-flash-signed-out&quot; hidden=&quot;&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;
  &lt;/div&gt;
    &lt;template id=&quot;site-details-dialog&quot;&gt;
  &lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm&quot; open=&quot;&quot;&gt;
    &lt;summary role=&quot;button&quot; aria-label=&quot;Close dialog&quot;/&gt;
    &lt;details-dialog class=&quot;Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal&quot;&gt;
      &lt;button class=&quot;Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0&quot; type=&quot;button&quot; aria-label=&quot;Close dialog&quot; data-close-dialog=&quot;&quot;&gt;
        &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-x&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z&quot;/&gt;
&lt;/svg&gt;
      &lt;/button&gt;
      &lt;p class=&quot;octocat-spinner my-6 js-details-dialog-spinner&quot;/&gt;
    &lt;/details-dialog&gt;
  &lt;/details&gt;
&lt;/template&gt;

    

    &lt;template id=&quot;snippet-clipboard-copy-button&quot;&gt;
  
&lt;/template&gt;




  &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>cbf514eec6d2a358733f7e4faf142379</guid>
<title>聊聊我们是如何做系统保障方案的</title>
<link>https://toutiao.io/k/i8q3ye4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原创不易，求分享、求一键三连。回复保障方案获取资料&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面对业务迅速增长复杂度会呈几何级增加，为了降低维护复杂度而引入了微服务，只要每个服务足够简单，那么维护成本也可以降低。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务保障也是一个非常困难的事情，今天聊一聊系统稳定性方案。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;方案设计层面&lt;/span&gt;&lt;/h2&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;业务逻辑正常是最基础的要求。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;接口安全、数据安全（数据泄漏、数据遍历、越权访问）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;服务扩展性（服务是否可平滑扩容，能扩的最大范围是多少个节点）、是否存在单点。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据库表结构设计、索引设计。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缓存更新机制、过期机制、是否存在单点热Key&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消息系统设计、流转过程；投递速率、消费速率&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;定时任务运行方式、执行记录、失败处理、是否可以恢复&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;仅仅考虑前面的场景可能还是不够，所以继续进行系统稳定性的思考。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;系统稳定性&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5501022494887525&quot; data-type=&quot;png&quot; data-w=&quot;1956&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVIS93pagUDXfaaRI7DiayDXMJ4511ibYkiaZRtXVjxtT8omOuEyCjyhElTgQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;流量控制&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般情况下越靠近下层资源的吞吐能力越弱，数据库吞吐能力有限，要尽量将流量拦截到上层尽快返回响应，让越下层的资源做&lt;strong&gt;正确和重要&lt;/strong&gt;的事情，达到压榨系统的目的，所以上面看到的WAF拦截；限流基本都是放在网关或者离用户更近的一层。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.558641975308642&quot; data-type=&quot;png&quot; data-w=&quot;1944&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVIScvXYDAMGHutvaYVxXTvOG2sQ4PlE7xaXuXCG1OsR4zIhice2cHhjA9w/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;数据冗余&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统中最重要的是数据，保证数据不丢失至关重要，数据冗余是防止丢失最简单的方式。数据冗余备份方式很多种，从物理到逻辑的角度，备份可以分为以下几类：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;只对数据库操作系统的物理文件（如数据文件、日志文件等）的备份&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;物理备份又可以分为冷备(在关闭数据库时进行的备份操作，能够较好地保证数据库的完整性)和热备(在数据库运行状态中进行操作，这种备份方法依赖于数据库的日志文件)&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从数据库的备份策略角度来看，备份又可分为全量备份、增量和冗余备份&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;每次对数据进行完整的备份&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可以备份整个数据库，包含用户表、系统表、索引、视图和存储过程等所有数&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但它需要花费更多的时间和空间，所以，做一次完全备份的周期要长些&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只有那些在上次完全备份或者增量备份后被修改的文件才会被备份&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;备份那些自从上次完全备份之后被修改过的文件，即只备份数据库部分的内容&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;它比最初的完全备份小，因为只包含自上次完全备份以来所改变的数据库&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;它的优点是存储和恢复速度快&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;高可用&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了保证系统的高可用，在框架、基础建设层面需要做很多建设。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;超时控制，可以让服务之间调用快速抛错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果单个请求耗时长会影响服务的性能。比如API接口设置2s超时API调用a服务用了1s，服务a调用服务b用了1s，那么现在已经超时了，如果还需要调用服务c，这个时候整体接口已经超时就不需要继续调用c服务，浪费时间和资源。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重试是保证一些服务可能偶尔服务抖动失效情况下，再重新发起一次，保证当前请求的准确性，重试需要有限制，不能无限循环，再则操作是否可以重试，是有支持幂等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;扩容策略可以分为两种，一种是对单机整体扩容，也就是机器内部包含CPU、内存、存储设备等;另一种增加机器，对于服务的扩容一定要慎重，需要考虑到扩容之后下游的资源是否能够支撑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如mysql服务器链接只有2000个，当前集群已经使用的差不多了，服务数量增加之后会导致链接不够用；业务更容易出问题。微服务k8s容器化之后，我们自研的发布系统上可以进行轻松的扩容。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个业务降级的例子，定时送道具打积分榜单，榜单计算支持的QPS可能是1w，道具分多种档次，其中有一种薅羊毛的道具1积分，花钱的几十到几万积分不等，可能有刷子囤积了几亿的羊毛道具等待打榜时候使用程序投递影响活动的体验；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果有大量羊毛道具并且超过榜单计算的QPS，此时就降级把羊毛道具剔除掉，只算花钱的，毕竟1积分对榜单影响小（业务定夺）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;顾名思义，按照一定的原则进行划分，进行单独维护。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务隔离：将系统按照业务特性分成不同的服务模块，各个模块之间相对独立，无强依赖，某些模块出现故障不至于全部不可用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;动态接口和静态接口隔离，比如：一个接口里面有用户自己特定的一些数据，也包含了所有用户看到都是一样的数据，那么就可以把这部分拆分成两个接口；大家看到统一数据的接口可以加统一缓存或者上CDN；不拆分是无法上CDN的；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据库分库分表等；隔离之后尽量保证不可越界、不可共享防止隔离失效。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;业务保障的基础（监控&amp;amp;告警）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎样衡量业务系统是否表现正常？是应用在线上跑着进程还在没有宕机，这可能是一个先决条件，有的程序虽然还在跑着，但是已经不能提供服务了，能体现服务的正常需要看流量，流量是看不见的，只有通过日志监控体现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控需要监控哪些呢，基础资源监控-基础的资源是否出现问题了？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4050235478806907&quot; data-type=&quot;png&quot; data-w=&quot;2548&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVISxM7LMnWAMKFEjE6KDibU5xHv6dlQmH7LNh1FlAYB9nuSeSKLXsFfYicg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单服务监控-某个服务是不是指标是否出现异常了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;QPS（GRPC、http）、耗时、接口错误码、错误率监控、上下游依赖监控(DB、缓存、上游依赖服务、下游支持服务)&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5580204778156996&quot; data-type=&quot;png&quot; data-w=&quot;2344&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVISG9mROFuM2RT1CY7ykLlEkYSKnCpGkiatwvqpKxibDZIiaXAHvFrTc6GxA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;微服务调用链路监控-调用链路到某个服务是否异常了？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.41450777202072536&quot; data-type=&quot;png&quot; data-w=&quot;2702&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVISBPcKV4VpQGZAH5oup5WQZx3VNbghb0HD8M5yCHJXlBCxRC3riao0jcQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户端监控-用户体验端是否出现异常了？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5635208711433757&quot; data-type=&quot;png&quot; data-w=&quot;2204&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVIS4RGiaL385uN45W7gVpBxBTEfwUw3xpAhPqRkggHGdIYU1X5Z9MnvEvA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;上线规范-预演&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;预演是非常重要的环节，很多bug都可以在预演环节被干掉，这里不是因为测试同学不努力，不能把那些BUG过掉，是因为：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;预演环境有真实的庞大数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;预演环境的能还原真实的QPS，会覆盖掉很多边界场景&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;有些测试必须在生产环境进行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;预演需要做方案&lt;/strong&gt;，不能引起线上脏数据&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了这些东西就可以进行预演了，然后这里有一个最大原则：预演请务必尽可能还原真实场景，包括时间点的设置！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那些之前重点关注的问题，很多重要的事情需要扣细节，扣的越多思考越细能考虑到整个事情的所拥有的发展方向，提前堵上错误的路径。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前工作中遇到一个广播的场景，是服务端会推送给web端一个命令消息，web收到消息之后需要向服务端发起一个http请求获取数据，由于命令推送是同一个，根据不同的用户获取的http响应不一样，并且http接口数量也比较大，前期用户不多的情况下http接口的QPS比较低还能接收，逐渐业务增长后，http接口内部实现使用缓存能优化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当服务端已经无法优化之后，简单粗暴的，进行推送之后，web收到命令消息之后，0-5分钟内打散请求服务端也能抗一段时间，量持续增长，到0-5分钟即使打散量还是很大，给对应的http接口限流，用户会反馈为什么我没收到消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种逻辑面对大量用户在线确实比较难搞，后面将接口返回的数据进行拆分（动态和静态）静态数据加CDN并在界面上提前下发，动态数据压缩走广播，去掉广播刷接口的逻辑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;带宽也是资源，之前遇到过一个事故，前端获取一个接口数据如果没有获取成功，则会再进行api请求拉取一次，没有做重试退出操作，导致这个接口的流量很大基本上打满了某个服务的所有资源，进而急剧恶化其他请求都无法请求到后端服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前处理的方式是在网关层面限制改接口的流量，部分正常的业务可以打到服务节点上，但是网关层量还是一直升高，最后将改接口直接挂到CDN上，不让回源到服务，但当时CDN缓存的是404响应，事后想想直接把响应结果缓存到CDN，不是所有客户端都正常了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;无法及时发现线上问题，请不要乱打日志，可能这个行为是给别人埋坑，info日志能看出业务在正常运行，error日志能看出系统哪些业务出错了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;紧急故障处理&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线上故障总会出现的，我们出现故障如何紧急处理（参见：毛老师 SRE PPT）回复保障方案获&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7761194029850746&quot; data-type=&quot;png&quot; data-w=&quot;804&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVIS33kLAWnxjriaBS5tXvz1y1TGae4njkXQwefoRibY447tNSAfZfnWjt1Q/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;经验沉淀&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;复盘本质就做两件事情① 评价结果 ② 总结过程经验教训。具体来说：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;复盘要紧密围绕事情结果来讨论。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;事情结果的好坏，取决于是否达成预定目标。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;因此，任何事在启动前必须有明确可衡量的目标。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对于目标实现有贡献的，称之为经验；对于目标实现有阻碍影响的，称之为教训。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;经验、教训要能传承并指导后续的行动。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.435129740518962&quot; data-type=&quot;png&quot; data-w=&quot;1002&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVIS7BLhd9fcsnnohEAIkuwK27HdKoXyAVlBibiaXIXib4pHV79Cm5ev3heYg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;blockquote&gt;&lt;p&gt;引用：&lt;/p&gt;&lt;p&gt;https://cloud.tencent.com/developer/article/1666384&lt;/p&gt;&lt;p&gt;https://mp.weixin.qq.com/s/Rx_XuMLeor_M9EuQcYq23w&lt;/p&gt;&lt;p&gt;https://zhuanlan.zhihu.com/p/61363959&lt;/p&gt;&lt;p&gt;https://github.com/alibaba/Sentinel/wiki/%E7%B3%BB%E7%BB%9F%E8%87%AA%E9%80%82%E5%BA%94%E9%99%90%E6%B5%81&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，今天的分享就到这，喜欢的同学可以四连支持：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.11333333333333333&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVISF2j9vB6GibthRcchHichxCOJgSnQCxtXicgnsJOzMN3OGoavRfqKULndQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想要更多交流可以加我微信：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5549076773566569&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVISLL8OsELTC2cib9KCGkfsZ5n7C8LzNuF6D9lCcaPJLJPpEjjQib2TXFEA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8836415ad41998f285750532aa5bde67</guid>
<title>3种方式！Go Error处理最佳实践</title>
<link>https://toutiao.io/k/crmxg9t</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe977Xa5zfy5iaV3agpS11Cqm4psjPOibic6BZSicnBFh6uWzCFp3uqN5R114Fq85DmuCzdL3eESlQ37bFA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;导语 |&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;错误处理一直以一是编程必需要面对的问题，错误处理如果做的好的话，代码的稳定性会&lt;/span&gt;&lt;span&gt;很好。不同的语言有不同的出现处理的方式。Go语言也一样，在本篇文章中，我们来讨论一下Go语言的错误处理方式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;一、错误与异常&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;1&quot; data-sign=&quot;fd3ba7320809aed0b3a7a7547a8647b9&quot;&gt;&lt;span&gt;（一）&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;错误是程序中可能出现的问题，比如连接数据库失败，连接网络失败等，在程序设计中，错误处理是业务的一部分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;98262240ca8645af56770f83c7a472e8&quot;&gt;&lt;span&gt;Go内建一个error接口类型作为go的错误标准处理&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;98262240ca8645af56770f83c7a472e8&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;c7ee59e8343f82a268919b95c2deeb76&quot;&gt;&lt;span&gt;http://golang.org/pkg/builtin/#error&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; error &lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__built_in&quot;&gt;Error&lt;/span&gt;() &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http://golang.org/src/pkg/errors/errors.go&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;New&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(text &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &amp;amp;errorString{text}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; errorString &lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   s &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(e *errorString)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;string&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; e.s&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;ceb7f04d807d6a9f7a3a3d2d43bc97e3&quot;&gt;&lt;span&gt;（二）Exception&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;异常是指在不该出现问题的地方出现问题，是预料之外的，比如空指针引用，下标越界，向空map添加键值等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;5a7ea83019261901e4386de061fb5be9&quot;&gt;&lt;span&gt;（三）panic&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于真正意外的情况，那些表示不可恢复的程序错误，不可恢复才使用panic。对于其他的错误情况，我们应该是期望使用error来进行判定。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;7bd74ab8deb29502b0550ccdb3aaf72f&quot;&gt;&lt;span&gt;go源代码很多地方写panic, 但是工程实践业务代码不要主动写panic，理论上panic只存在于server启动阶段，比如config文件解析失败，端口监听失败等等，所有业务逻辑禁止主动panic，所有异步的goroutine都要用recover去兜底处理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;0b26c1a29a28fd8fb594a49e036e9291&quot;&gt;&lt;span&gt;（四）总结&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;理解了错误和异常的真正含义，我们就能理解Go的错误和异常处理的设计意图。传统的try...catch...结构，很容易让开发人员把错误和异常混为一谈，甚至把业务错误处理的一部分当做异常来处理，于是你会在程序中看到一大堆的catch...&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Go开发团队认为错误应该明确地当成业务的一部分，任何可以预见的问题都需要做错误处理，于是在Go代码中，任何调用者在接收函数返回值的同时也需要对错误进行处理，以防遗漏任何运行时可能的错误。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;异常则是意料之外的，甚至你认为在编码中不可能发生的，Go遇到异常会自动触发panic（恐慌），触发panic程序会自动退出。除了程序自动触发异常，一些你认为不可允许的情况你也可以手动触发异常。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外，在Go中除了触发异常，还可以终止异常并可选的对异常进行错误处理，也就是说，错误和异常是可以相互转换的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;二、Go处理错误的三种方式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;705498691352a2b5c3deb99f6e904bbe&quot;&gt;&lt;span&gt;（一）经典Go逻辑&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;直观的返回error：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; ZooTour &lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Enter() error &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    VisitPanda(panda *Panda) error &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Leave() error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Tour&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(t ZooTour1, panda *Panda)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := t.Enter(); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errors.WithMessage(err, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Enter failed.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := t.VisitPanda(); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errors.WithMessage(err, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;VisitPanda failed.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;706a2e97dde1675b05bf0d9c4df1fdc4&quot;&gt;&lt;span&gt;（二）屏蔽过程中的error的处理&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;将error保存到对象内部，处理逻辑交给每个方法，本质上仍是顺序执行。标准库的bufio、database/sql包中的Rows等都是这样实现的，有兴趣可以去看下源码：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; ZooTour &lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Enter() error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    VisitPanda(panda *Panda) error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Leave() error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Err() error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Tour&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(t ZooTour, panda *Panda)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    t.Enter()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    t.VisitPanda(panda)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    t.Leave()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := t.Err(); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errors.WithMessage(err, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ZooTour failed&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;d5fa3167157813114ec1f4748cff34b9&quot;&gt;&lt;span&gt;（三）利用函数式编程延迟运行&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;分离关注点-遍历访问用数据结构定义运行顺序，根据场景选择，如顺序、逆序、二叉树树遍历等。运行逻辑将代码的控制流逻辑抽离，灵活调整。kubernetes中的visitor对此就有很多种扩展方式，分离了数据和行为，有兴趣可以去扩展阅读：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; Walker &lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Next MyFunc&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; SliceWalker &lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    index &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    funs []MyFunc&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;} &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;NewEnterFunc&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;MyFunc&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(t ZooTour)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; t.Enter()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BreakOnError&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(t ZooTour, walker Walker)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        f := walker.Next() &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; f == &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := f(t); err := &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;282f642150861c8edaf6123fab79d0b0&quot;&gt;&lt;span&gt;（四）三种方式对比&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面这三个例子，是Go项目处理错误使用频率最高的三种方式，也可以应用在error以外的处理逻辑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;三、分层下的Error Handling&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;1&quot; data-sign=&quot;93e15a3022719528ae6836a8b688bfd0&quot;&gt;&lt;span&gt;（一）一个常见的三层调用&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在工程实践中，以一个常见的三层架构（dao-&amp;gt;service-&amp;gt;controller）为例，我们常见的错误处理方式大致如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := mode.ParamCheck(param); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;param=%+v&quot;&lt;/span&gt;, param)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errs.ErrInvalidParam&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; mode.ListTestName(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;_, err := dao.GetTestName(ctx, settleId)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;GetTestName failed. err: %v&quot;&lt;/span&gt;, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errs.ErrDatabase&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;GetTestDao failed. uery: %s error(%v)&quot;&lt;/span&gt;, sql, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;ee1c48914814b4c14626dffa3fb8b872&quot;&gt;&lt;span&gt;（二）问题总结&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot; data-lines=&quot;3&quot; data-sign=&quot;09d9d0d3bca83bc0cdf56b26770851a3list3&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;分层开发导致的处处打印日志；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;难以获取详细的堆栈关联；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;根因丢失。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;3601ac2df8b55e284ba998b08e9fc0af&quot;&gt;&lt;span&gt;（三）Wrap erros&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Go相关的错误处理方法很多，但大多为过渡方案，这里就不一一分析了（类似&lt;/span&gt;&lt;span&gt;github.com/juju/errors&lt;/span&gt;&lt;span&gt;库，有兴趣可以了解）。这里我以&lt;/span&gt;&lt;span&gt;github.com/pkg/errors&lt;/span&gt;&lt;span&gt;为例，这个也是官方Proposal的重点参考对象。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol start=&quot;1&quot; class=&quot;list-paddingleft-1&quot; data-lines=&quot;3&quot; data-sign=&quot;5865182d06afb8fd19ef3d06ba1ea4cclist3&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;错误要被日志记录；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;应用程序处理错误，保证100%完整性；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;之后不再报告当前错误（错误只被处理一次）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;github.com/pkg/errors包主要包含以下几个方法，如果我们要新生成一个错误，可以使用New函数,生成的错误，自带调用堆栈信息。如果有一个现成的error ，我们需要对他进行再次包装处理，这时候有三个函数可以选择（WithMessage/WithStack/Wrapf）。其次，如果需要对源错误类型进行自定义判断可以使用Cause,可以获得最根本的错误原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;New&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(message string)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;WithMessage&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(err error, message string)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;WithStack&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(err error)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Wrapf&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(err error, format string, args ...interface{})&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Cause&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(err error)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以常见的一个三层架构为例：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.9291553133514986&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94RLDb9L9KvbfjHd5tXxnc8GxCLibDxtgibo0uFfjqojDwkjRN0ksubE90ns5E7EZjlUtYk1NF8lkTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;734&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;objectivec&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; errors.Is(err, sql.ErrNoRows) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;, errors.Wrapf(ierror.ErrNotFound, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;query:%s&quot;&lt;/span&gt;, query)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;, errors.Wrapf(ierror.ErrDatabase,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;query: %s error(%v)&quot;&lt;/span&gt;, query, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    bills, err := a.Dao.GetName(ctx, param)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; result, errors.WithMessage(err, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;GetName failed&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(Format)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Handle&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(next ihttp.MiddleFunc)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ihttp&lt;/span&gt;.&lt;span class=&quot;code-snippet__title&quot;&gt;MiddleFunc&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context, req *http.Request, rsp *ihttp.Response)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        format := &amp;amp;format{Time: time.Now().Unix()}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        err := next(ctx, req, rsp)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        format.Data = rsp.Data&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            format.Code, format.Msg = errCodes(ctx, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        rsp.Data = format&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;errCodes&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context, err error)&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        log.CtxErrorf(ctx, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;error: [%+v]&quot;&lt;/span&gt;, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; myError = &lt;span class=&quot;code-snippet__built_in&quot;&gt;new&lt;/span&gt;(erro.IError)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; errors.As(err, &amp;amp;myError) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; myError.Code, myError.Msg&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; code.ServerError, i18n.CodeMessage(code.ServerError)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果和其他库进行协作，考虑使用errors.Wrap或者errors.Wrapf保存堆栈信息。同样适用于和标准库协作的时候。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;_, err := os.Open(path)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errors.Wrapf(err, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Open failed. [%s]&quot;&lt;/span&gt;, path)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;a31093bfca1a95d298b929332ee984bf&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;a31093bfca1a95d298b929332ee984bf&quot;&gt;&lt;span&gt;最终效果样例：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.1484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94RLDb9L9KvbfjHd5tXxnc8bayiarVkHvic59J0mCpxjiaoOd1xHDibTfvdcqPb3GDHicgYhSz03khGm7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;30a4c70e7b307aafcf1c0f48b79a8f82&quot;&gt;&lt;span&gt;关键点总结：&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;四、errgroup集中错误处理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;官方的ErrGroup非常简单，其实就是解决小型多任务并发任务。基本用法golang.org/x/sync/errgroup包下定义了一个Group struct，它就是我们要介绍的ErrGroup并发原语，底层也是基于WaitGroup实现的。在使用ErrGroup时，我们要用到三个方法，分别是WithContext、Go和Wait。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;1&quot; data-sign=&quot;e753f13250226a5e021139d44f999239&quot;&gt;&lt;span&gt;（一）背景&lt;/span&gt;&lt;/h2&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;233a1509300eaac92808d6effcd928b3&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;233a1509300eaac92808d6effcd928b3&quot;&gt;&lt;span&gt;通常，在写业务代码性能优化时经常将一个通用的父任务拆成几个小任务并发执行。此时需要将一个大的任务拆成几个小任务并发执行，来提高QPS，我们需要再业务代码里嵌入以下逻辑，但这种方式存在问题：&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;233a1509300eaac92808d6effcd928b3&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;98ad53f5e0495f49e5795d9733f57189&quot;&gt;&lt;span&gt;（二）errgroup函数签名&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type &lt;span class=&quot;code-snippet__type&quot;&gt;Group&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;WithContext&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context)&lt;/span&gt;&lt;/span&gt; (*&lt;span class=&quot;code-snippet__type&quot;&gt;Group&lt;/span&gt;, context.&lt;span class=&quot;code-snippet__type&quot;&gt;Context&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(g *Group)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__type&quot;&gt;Go&lt;/span&gt;(f &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; error)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(g *Group)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__type&quot;&gt;Wait&lt;/span&gt;() error&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;a6502b9ddec7b8608b7bd88b68322b35&quot;&gt;&lt;span&gt;整个包就一个Group结构体：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;d976f203b6f22aea4ce4beb6d93ee2e9&quot;&gt;&lt;span&gt;（三）使用案例&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;注意这里有一个坑，在后面的代码中不要把ctx当做父 context又传给下游，因为errgroup取消了，这个context就没用了，会导致下游复用的时候出错&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;TestErrgroup&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   eg, ctx := errgroup.WithContext(context.Background())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt;; i++ {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      i := i&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      eg.Go(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         time.Sleep(&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt; * time.Second)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         &lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-ctx.Done():&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            fmt.Println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Canceled:&quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         &lt;span class=&quot;code-snippet__keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            fmt.Println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;End:&quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         }})}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := eg.Wait(); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      log.Fatal(err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;1&quot; data-sign=&quot;058e19ba2ee08865333ac4739e83dc66&quot;&gt;&lt;span&gt;（四）errgroup拓展包&lt;/span&gt;&lt;/h2&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;d9c2c93711f14087bd7abd2614d7631e&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;d9c2c93711f14087bd7abd2614d7631e&quot;&gt;&lt;span&gt;B站拓展包&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;d9c2c93711f14087bd7abd2614d7631e&quot;&gt;&lt;span&gt;（https://github.com/go-kratos/kratos/blob/v0.3.3/pkg/sync/errgroup/errgroup.go）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相比官方的结构，B站的结构多出了一个函数签名管道和一个函数签名切片,并把Context直接放入了返回的Group结构，返回仅返回一个Group结构指针。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type &lt;span class=&quot;code-snippet__type&quot;&gt;Group&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   err     error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   wg      sync.&lt;span class=&quot;code-snippet__type&quot;&gt;WaitGroup&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   errOnce sync.&lt;span class=&quot;code-snippet__type&quot;&gt;Once&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   workerOnce sync.&lt;span class=&quot;code-snippet__type&quot;&gt;Once&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   ch         chan &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   chs        []&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   ctx    context.&lt;span class=&quot;code-snippet__type&quot;&gt;Context&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   cancel &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;WithContext&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context)&lt;/span&gt;&lt;/span&gt; *&lt;span class=&quot;code-snippet__type&quot;&gt;Group&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &amp;amp;&lt;span class=&quot;code-snippet__type&quot;&gt;Group&lt;/span&gt;{ctx: ctx}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Go方法可以看出并不是直接起协程的（如果管道已经初始化好了），而是优先将函数签名放入管道，管道如果满了就放入切片。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(g *Group)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Go&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(f &lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;(ctx context.Context)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   g.wg.Add(&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; g.ch != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; g.ch &amp;lt;- f:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         g.chs = &lt;span class=&quot;code-snippet__built_in&quot;&gt;append&lt;/span&gt;(g.chs, f)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;go&lt;/span&gt; g.do(f)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;GOMAXPROCS函数其实是起了一个并发池来控制协程数量，传入最大协程数量进行并发消费管道里的函数签名：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(g *Group)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;GOMAXPROCS&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(n &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; n &amp;lt;= &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__built_in&quot;&gt;panic&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;errgroup: GOMAXPROCS must great than 0&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   g.workerOnce.Do(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      g.ch = &lt;span class=&quot;code-snippet__built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(context.Context)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;, &lt;span class=&quot;code-snippet__title&quot;&gt;n&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__title&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;i&lt;/span&gt; := 0; &lt;span class=&quot;code-snippet__title&quot;&gt;i&lt;/span&gt; &amp;lt; &lt;span class=&quot;code-snippet__title&quot;&gt;n&lt;/span&gt;; &lt;span class=&quot;code-snippet__title&quot;&gt;i&lt;/span&gt;++&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         &lt;span class=&quot;code-snippet__keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; f := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; g.ch {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;               g.do(f)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         }()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   })&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;bd1f80fb1a0098cf3f106daa6a72df6d&quot;&gt;&lt;span&gt;整个流程梳理下来其实就是启动一个固定数量的并发池消费任务，Go函数其实是向管道中发送任务的生产者，这个设计中有意思的是他的协程生命周期的控制，他的控制方式是每发送一个任务都进行WaitGroup加一，在最后结束时的wait函数中进行等待，等待所有的请求都处理完才会关闭管道，返出错误。&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;15151080bcf5a420718cf991e8721952&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;15151080bcf5a420718cf991e8721952&quot;&gt;&lt;span&gt;tips&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt; 作者简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;105&quot; data-backw=&quot;105&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe94RLDb9L9KvbfjHd5tXxnc8uK1w7ic9UImich90T4hO0gsYHUKnnUcicO1soLiadaBfumQxQACwu6mqbw/0?wx_fmt=jpeg&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;955&quot; data-cropy1=&quot;18.19047619047619&quot; data-cropy2=&quot;1000.4761904761905&quot; data-fileid=&quot;100044396&quot; data-ratio=&quot;1.0282722513089004&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe94RLDb9L9KvbfjHd5tXxnc8icjKKD2IQfh97X9SjImK58LIH0MFVOle5LbeNib6sic03uAmVPgV61d7A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;955&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;李森林&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;腾讯后台工程师&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;腾讯后台工程师，目前负责腾讯游戏内容平台的设计、开发和维护工作。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt; 推荐阅读&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247536592&amp;amp;idx=1&amp;amp;sn=d0f64191958c0e044180361fa0311a4e&amp;amp;chksm=eaa85580dddfdc96196e8b1fd0c6e10e456a479c3bcec43475dfa890ef7fd13519f5b0014695&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;生于云，长于云，开发者如何更好地吃透云原生？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;生于云，长于云，开发者如何更好地吃透云原生？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247536389&amp;amp;idx=1&amp;amp;sn=64e654aa19f84d22d3782cc2c5586eee&amp;amp;chksm=eaa85555dddfdc434925071270ea89a3d147d140d8347760af16ea17090246a302e200e211e1&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;从0到1详解ZooKeeper的应用场景及架构原理！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;从0到1详解ZooKeeper的应用场景及架构原理！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247536139&amp;amp;idx=1&amp;amp;sn=f9aaeaf85420feae4168b7d05106c2f8&amp;amp;chksm=eaa8545bdddfdd4daa6accbeb92deaf119cb7bd395b7942b0995f3ed737209895d85b6c14f91&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;分布式事务解决方案：从了解到放弃！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;分布式事务解决方案：从了解到放弃！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247536128&amp;amp;idx=1&amp;amp;sn=419b57b371a768cf3451d942941684aa&amp;amp;chksm=eaa85450dddfdd461b89b6f8b7ebcfd1748babd45bda46d9d23cdee41d064a0010dc3e72dd81&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Go语言从0到1实现最简单的数据库！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;Go语言从0到1实现最简单的数据库！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI2NDU4OTExOQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe96FK2eEg86vUicOR3n6kAHk1PHvTb8VBicYk0RmNQYsQyibgg8iaZqT0bCEU9VKo3Z3iceoQfgycyMpKWQ/0?wx_fmt=png&quot; data-nickname=&quot;云加社区&quot; data-alias=&quot;QcloudCommunity&quot; data-signature=&quot;腾讯云官方社区公众号，汇聚技术开发者群体，分享技术干货，打造技术影响力交流社区。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.59375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/VY8SELNGe977Xa5zfy5iaV3agpS11Cqm4xV7ckfbmtFLyUjFID2k7yO4q8hvB4OqYoNkARZ2xuvzKvMtnmVN2BQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>88a2bdae9347ca6105d14802f10bc076</guid>
<title>基于开源IM即时通讯框架MobileIMSDK：RainbowChat v8.1版已发布</title>
<link>https://toutiao.io/k/22j49tg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;js-text&quot;&gt;&amp;#13;
  &lt;p class=&quot;js-site&quot;&gt;Copyright © 2014-2022 即时通讯网 - 即时通讯开发者社区 &lt;span class=&quot;hidden-xs&quot;&gt;/ 版本 V4.4&lt;/span&gt;&lt;/p&gt;&amp;#13;
  &lt;p class=&quot;js-ipc&quot;&gt;苏州网际时代信息科技有限公司 &lt;a href=&quot;https://beian.miit.gov.cn/&quot; getarticles=&quot;&quot; target=&quot;_blank&quot;&gt;(苏ICP备16005070号-1）&lt;/a&gt;&lt;/p&gt;&amp;#13;
&lt;/div&gt;&amp;#13;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d05d20afa35a404a3853631c0460048c</guid>
<title>TensorFlow决策森林构建GBDT（Python）</title>
<link>https://toutiao.io/k/9xnh49u</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;section class=&quot;mp_profile_iframe_wrp&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4OTQ1MTA4OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYJ1LbaTxqd4VPOibfZ1tf0fXDUqFOLlPcRPvv4W4Cro4YnhRx2Xib5MId5rECtVMBkmvJk8nSNnsekw/0?wx_fmt=png&quot; data-nickname=&quot;数据挖掘工程师&quot; data-alias=&quot;DataMinings&quot; data-signature=&quot;数万名数据挖掘爱好者的聚集地，致力于前沿数据技术研究。公众号以数据为核心，分享大数据、数据分析、机器学习、深度学习等干货，想学数据我等你来。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;一、Deep Learning is Not All You Need&lt;/h3&gt;&lt;p&gt;&lt;span&gt;尽管神经网络在图像识别、自然语言等很多领域大放异彩，但回到表格数据的数据挖掘任务中，树模型才是低调王者，如论文《Tabular Data: Deep Learning is Not All You Need》提及的：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.30956375838926176&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesA7H38QGa8GFws3XcJickd9n9VCqpxosHQryMUPRLG9VFcbaVlVVDCZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1192&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;深度学习可能不是解决所有机器学习问题的灵丹妙药，通过树模型在处理表格数据时性能与神经网络相当（甚至优于神经网络），而且树模型易于训练使用，有较好的可解释性。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7624309392265194&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesVNkRiarlCRYialkgLDGVbkibOxs198DUfwwdHiaNmLajs8KW6qUGlNKM9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1086&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;二、树模型的使用&lt;/h3&gt;&lt;p&gt;&lt;span&gt;对于决策树等模型的使用，通常是要到scikit-learn、xgboost、lightgbm等机器学习库调用， 这和深度学习库是独立割裂的，不太方便树模型与神经网络的模型融合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.659016393442623&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzes6WvBaxiaRktquhFnBz6LdyhYRkhrc5OF7OMCYuBgtoIb5YdlNib4xD5g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;610&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一个好消息是，Google 开源了 TensorFlow 决策森林（TF-DF），为基于树的模型和神经网络提供统一的接口，可以直接用TensorFlow调用树模型。决策森林（TF-DF）简单来说就是用TensorFlow封装了常用的随机森林（RF）、梯度提升(GBDT)等算法，其底层算法是基于C++的 Yggdrasil 决策森林 (YDF)实现的。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;三、TensorFlow构建GBDT实践&lt;/h3&gt;&lt;p&gt;&lt;span&gt;TF-DF安装很简单&lt;/span&gt;&lt;code&gt;&lt;span&gt;pip install -U tensorflow_decision_forests&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，有个遗憾是目前只支持Linux环境，如果本地用不了将代码复制到 Google Colab 试试~&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;import numpy as np  &lt;br/&gt;import pandas as pd&lt;br/&gt;import matplotlib.pyplot as plt&lt;br/&gt;import tensorflow as tf&lt;br/&gt;tf.random.set_seed(123)&lt;br/&gt;&lt;br/&gt;from sklearn import datasets&lt;br/&gt;from sklearn.model_selection import train_test_split&lt;br/&gt;from sklearn.metrics import precision_score, recall_score, f1_score,roc_curve&lt;br/&gt;&lt;br/&gt;dataset_cancer = datasets.load_breast_cancer()    &lt;span&gt;# 加载癌细胞数据集&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;#print(dataset_cancer[&#x27;DESCR&#x27;])&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;df = pd.DataFrame(dataset_cancer.data, columns=dataset_cancer.feature_names)  &lt;br/&gt;&lt;br/&gt;df[&lt;span&gt;&#x27;label&#x27;&lt;/span&gt;] = dataset_cancer.target&lt;br/&gt;&lt;br/&gt;&lt;span&gt;print&lt;/span&gt;(df.shape)&lt;br/&gt;&lt;br/&gt;df.head()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1596774193548387&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesvlQCALXUgEicVLOhLTkuAk5M8WmcyJb65Lvia64gorTk5vPODfseCicvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1240&quot;/&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# holdout验证法： 按3：7划分测试集 训练集&lt;/span&gt;&lt;br/&gt;x_train, x_test= train_test_split(df, test_size=0.3)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# EDA分析：数据统计指标&lt;/span&gt;&lt;br/&gt;x_train.describe(include=&lt;span&gt;&#x27;all&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38613861386138615&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzes4RCZJ5pmINr9yIfHYYMNpvVhxibHTpgXic8icXqdkRKlAOWenzgKBdazQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1212&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;构建TensorFlow的GBDT模型：TD-DF 一个非常方便的地方是它不需要对数据进行任何预处理。它会自动处理数字和分类特征，以及缺失值，我们只需要将df转换为 TensorFlow 数据集，如下一些超参数设定:&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.41774193548387095&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesibCjpC7tftFGKXNWx5OVmx0hlDdliaKUYM6p03gboWe6Tb7cZ52Q9ZHA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1240&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;模型方面的树的一些常规超参数，类似于scikit-learn的GBDT&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8233870967741935&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesiaxXnlubVr3N723j31ZEhw1AnqI3NMuqTOpq0wg0Ny5Hk4EzLqQlDHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1240&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;此外，还有带有正则化（dropout、earlystop）、损失函数（focal-loss）、效率方面（goss基于梯度采样）等优化方法：&lt;/span&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8411290322580646&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesdpfNVLc3IkFHINvo9mP5ZHEx9Zq8pmtOsX8hfQLCy5QgZynhlee0EQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1240&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;构建模型、编译及训练，一步到位：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# 模型参数&lt;/span&gt;&lt;br/&gt;model_tf = tfdf.keras.GradientBoostedTreesModel(loss=&lt;span&gt;&quot;BINARY_FOCAL_LOSS&quot;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 模型训练&lt;/span&gt;&lt;br/&gt;model_tf.compile()&lt;br/&gt;model_tf.fit(x=train_ds,validation_freq=0.1)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;## 模型评估&lt;/span&gt;&lt;br/&gt;可以看到&lt;span&gt;test&lt;/span&gt;的准确率已经都接近1，可以再那个困难的数据任务试试~&lt;br/&gt;evaluation = model_tf.evaluate(test_ds,return_dict=True)&lt;br/&gt;probs = model_tf.predict(test_ds)&lt;br/&gt;fpr, tpr, _ = roc_curve(x_test.label, probs)&lt;br/&gt;plt.plot(fpr, tpr)&lt;br/&gt;plt.title(&lt;span&gt;&#x27;ROC curve&#x27;&lt;/span&gt;)&lt;br/&gt;plt.xlabel(&lt;span&gt;&#x27;false positive rate&#x27;&lt;/span&gt;)&lt;br/&gt;plt.ylabel(&lt;span&gt;&#x27;true positive rate&#x27;&lt;/span&gt;)&lt;br/&gt;plt.xlim(0,)&lt;br/&gt;plt.ylim(0,)&lt;br/&gt;plt.show()&lt;br/&gt;&lt;span&gt;print&lt;/span&gt;(evaluation)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7679465776293823&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesevfeXy8ibTNp1erC0qlxp7Utq2dgw6iaFibyAIAou0E8DU4NgAtFz7Ogg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;599&quot;/&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;模型解释性
GBDT等树模型还有另外一个很大的优势是解释性，这里TF-DF也有实现。模型情况及特征重要性可以通过&lt;/span&gt;&lt;code&gt;&lt;span&gt;print(model_tf.summary())&lt;/span&gt;&lt;/code&gt;&lt;span&gt;打印出来，&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6238767650834403&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesxwicFdD8g1j3BaiaibkibLibQ2lHL1GS4eVr0LOLmaXgyePicrgnNhndIG1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;779&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;特征重要性支持了几种不同的方法评估：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;MEAN_MIN_DEPTH指标。平均最小深度越小，较低的值意味着大量样本是基于此特征进行分类的，变量越重要。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6778846153846154&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesibdFmnJZqUcXGEw9Ft6plL8LiaFnGUvbucjg4VBVwbn6XYj4iaawLvllw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;624&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;NUM_NODES指标。它显示了给定特征被用作分割的次数，类似split。此外还有其他指标就不一一列举了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.450229709035222&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesWp92T6yal0TibBOKUpbxOBVwhZpxHrPYeibLZXEQrOia2OvHxx3FcomvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;653&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们还可以打印出模型的具体决策的树结构，通过运行&lt;/span&gt;&lt;code&gt;&lt;span&gt;tfdf.model_plotter.plot_model_in_colab(model_tf, tree_idx=0, max_depth=10)&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，整个过程还是比较清晰的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38225806451612904&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eyibF6kJBjTtTgssc6hGCszcK8u0oyzesQKs1uI4KhKw5YKt6CALTia9TWWzzialwulGOO2s6GtarYAeytib3IQw5g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1240&quot;/&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;小结&lt;/h4&gt;&lt;p&gt;&lt;span&gt;基于TensorFlow的TF-DF的树模型方法，我们可以方便训练树模型（特别对于熟练TensorFlow框架的同学），更进一步，也可以与TensorFlow的神经网络模型做效果对比、树模型与神经网络模型融合、利用异构模型先特征表示学习再输入模型（如GBDT+DNN、DNN embedding+GBDT），进一步了解可见如下参考文献。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;参考文献：&lt;/p&gt;&lt;p&gt;https://www.tensorflow.org/decision_forests/
https://keras.io/examples/structured_data/classification_with_tfdf/&lt;/p&gt;&lt;/blockquote&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4OTQ1MTA4OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYJ1LbaTxqd4VPOibfZ1tf0fXDUqFOLlPcRPvv4W4Cro4YnhRx2Xib5MId5rECtVMBkmvJk8nSNnsekw/0?wx_fmt=png&quot; data-nickname=&quot;数据挖掘工程师&quot; data-alias=&quot;DataMinings&quot; data-signature=&quot;数万名数据挖掘爱好者的聚集地，致力于前沿数据技术研究。公众号以数据为核心，分享大数据、数据分析、机器学习、深度学习等干货，想学数据我等你来。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;推荐阅读&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4OTQ1MTA4OQ==&amp;amp;mid=2247500459&amp;amp;idx=1&amp;amp;sn=8e15c48bc67abdc03caa649689479140&amp;amp;chksm=fdcfd895cab85183fb6a03ac22f9804b973ebea2e96a5d153a062067a6fe6c1e241b2aeb7b0a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;10 种聚类算法的完整 Python 操作示例&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;10 种聚类算法的完整 Python 操作示例&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4OTQ1MTA4OQ==&amp;amp;mid=2247500259&amp;amp;idx=2&amp;amp;sn=e52aa3206765ab55d7ebc89d8ba4a29c&amp;amp;chksm=fdcfdbddcab852cbb2a9763745871ed2a266b1f997f1e37b52d2db244dbc6faa1f61f5aa1548&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;为什么回归问题用MSE？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;为什么回归问题用MSE？&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4OTQ1MTA4OQ==&amp;amp;mid=2247500237&amp;amp;idx=1&amp;amp;sn=c15c8ef92403c01730a5ee3a28c487d0&amp;amp;chksm=fdcfdbf3cab852e5f17b75b8a0ac72cb0b9754c609dc3ea91fc45617b067e8be5f5657709a17&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;时序特征相关系数的稳定性分析(附代码)&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;时序特征相关系数的稳定性分析(附代码)&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4OTQ1MTA4OQ==&amp;amp;mid=2247499891&amp;amp;idx=1&amp;amp;sn=53f97dd57de38f9e27bf3f5c18180e36&amp;amp;chksm=fdcfda4dcab8535b8cd129d90dd40927f2f33c6039d2dbe921fc1daae45f84fb3bf9f80bdc99&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;时间序列预测方法汇总：从理论到实践（附Kaggle经典比赛方案）&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;时间序列预测方法汇总：从理论到实践（附Kaggle经典比赛方案）&lt;/a&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>