<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>9273932874fc786e9ac675d3ab0f6936</guid>
<title>浅谈如何搭建知识体系 | 码农周刊第 319 期</title>
<link>https://toutiao.io/k/dufazik</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;浅谈如何搭建知识体系 | 码农周刊第 319 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第319期（2020-09-23）&lt;/h2&gt;
        &lt;p&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=319&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3190&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_316.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=319&amp;amp;aid=19803&amp;amp;url=https%3A%2F%2Fwww.sheca.com%2Fassets%2Fwwx%2Fpage1.html%3Fsite%3Dkaifazhe02&quot; target=&quot;_blank&quot;&gt;SHECA 提供 SSL 证书一站式服务，为你的网络安全保驾护航，上海 CA 权威认证&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=319&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;业界实战&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;HDFS + Clickhouse + Spark&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;工作地点：成都 | 薪资：15-30K | 简历投递邮箱：xiexiaofang@huobi.com&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;致力于提供一套简单方便、专业可靠、无限可能的 H5 落地页最佳实践。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;9NFL 是京东自研的联邦学习平台。整个平台的内核基于 TensorFlow，并根据业务进行了性能优化，调度则基于 k8s。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;ChatUI 是由达摩院阿里小蜜孵化的对话式界面组件，目前支持阿里经济体 80 多个事业部，数千个 Chatbot，承载着达摩院前沿技术，专注于智能对话领域的设计和技术研发体系，应用至消费者可体验的对话式界面。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;图文并茂&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;适合新手&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;模型性能杀器解读&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;有用&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;详细介绍&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;深入讲解&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;第二弹&lt;/p&gt;
        
        &lt;p&gt;customize personal network&lt;/p&gt;
        
        &lt;p&gt;&lt;a href=&quot;https://github.com/aweiu/scroll-switch&quot; target=&quot;_blank&quot;&gt;GitHub 地址&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;业界实战&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;两种不错的思路&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;&lt;a href=&quot;https://golang.design/history/&quot; target=&quot;_blank&quot;&gt;文档地址&lt;/a&gt;&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;一枚有趣的程序员&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 436138 即可&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;致力于为企业提供性能优化领域的全方位解决方案&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 423497 即可&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;分享一些信息安全相关的文章&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 393298 即可&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;编程、成长、正能量！&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 381811 即可&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;分享Go语言相关内容&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 133906 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=319&amp;amp;aid=19892&amp;amp;url=http%3A%2F%2Fstore.dangdang.com%2Fgys_04001_3tk3&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/book_319.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;擦亮慧眼&lt;/p&gt;
        
        &lt;p&gt;个人经历&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>09b1326420d72ea508bdd3f7350323b5</guid>
<title>这三年被分布式坑惨了，曝光十大坑</title>
<link>https://toutiao.io/k/yabo548</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-darkmode-color-15906764299112=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-top: 10px; margin-bottom: 10px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif; font-size: 16px; white-space: normal; word-spacing: 0.8px; letter-spacing: 0.75px; text-align: center; visibility: visible;&quot; class=&quot;js_darkmode__1&quot; data-darkmode-color-15958675267961=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15965526125846=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(0, 0, 0)&quot; data-darkmode-color-15976750929548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span data-darkmode-color-15906764299112=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15958675267961=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15965526125846=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(0, 0, 0)&quot; data-darkmode-color-15976750929548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt;这是我的第 &lt;/span&gt;&lt;span data-darkmode-color-15906764299112=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(255, 104, 39)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15958675267961=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(255, 104, 39)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15965526125846=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(255, 104, 39)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(255, 104, 39)&quot; data-darkmode-color-15976750929548=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(255, 104, 39)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(255, 104, 39)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(255, 104, 39)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt;60&lt;/span&gt;&lt;span data-darkmode-color-15906764299112=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15958675267961=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15965526125846=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(0, 0, 0)&quot; data-darkmode-color-15976750929548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt; 篇原创文章&lt;/span&gt;&lt;br data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-color-15906764299112=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif; font-size: 16px; white-space: normal; word-spacing: 0.8px; letter-spacing: 0.75px; text-align: center; visibility: visible;&quot; class=&quot;js_darkmode__2&quot; data-darkmode-color-15958675267961=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15965526125846=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(0, 0, 0)&quot; data-darkmode-color-15976750929548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span data-darkmode-color-15906764299112=&quot;rgb(178, 178, 178)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15958675267961=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-style=&quot;color: rgb(178, 178, 178); font-size: 14px; visibility: visible;&quot; class=&quot;js_darkmode__3&quot; data-darkmode-color-15965526125846=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(178, 178, 178)&quot; data-darkmode-color-15976750929548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt;作者 | 悟空聊架构&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-color-15906764299112=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif; font-size: 16px; white-space: normal; word-spacing: 0.8px; letter-spacing: 0.75px; text-align: center; visibility: visible;&quot; class=&quot;js_darkmode__4&quot; data-darkmode-color-15958675267961=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15965526125846=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(0, 0, 0)&quot; data-darkmode-color-15976750929548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span data-darkmode-color-15906764299112=&quot;rgb(178, 178, 178)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15958675267961=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-style=&quot;color: rgb(178, 178, 178); font-size: 14px; visibility: visible;&quot; class=&quot;js_darkmode__5&quot; data-darkmode-color-15965526125846=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(178, 178, 178)&quot; data-darkmode-color-15976750929548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt;来源 | &lt;span&gt;悟空聊架构&lt;/span&gt;（ID：PassJava666）&lt;/span&gt;&lt;/p&gt;&lt;section data-darkmode-color-15906764299112=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-bottom: 20px; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif; font-size: 16px; white-space: normal; word-spacing: 0.8px; letter-spacing: 0.75px; text-align: center; visibility: visible;&quot; class=&quot;js_darkmode__6&quot; data-darkmode-color-15958675267961=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15965526125846=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(0, 0, 0)&quot; data-darkmode-color-15976750929548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(0, 0, 0)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt;&lt;span data-darkmode-color-15906764299112=&quot;rgb(178, 178, 178)&quot; data-darkmode-original-color-15906764299112=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15906764299112=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906764299112=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15958675267961=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15958675267961=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15958675267961=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15958675267961=&quot;rgb(255, 255, 255)&quot; data-style=&quot;color: rgb(178, 178, 178); font-size: 14px; visibility: visible;&quot; class=&quot;js_darkmode__7&quot; data-darkmode-color-15965526125846=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15965526125846=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15965526125846=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15965526125846=&quot;rgb(255, 255, 255)&quot; data-darkmode-bgcolor-15969880239317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15969880239317=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15969880239317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15969880239317=&quot;rgb(178, 178, 178)&quot; data-darkmode-color-15976750929548=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15976750929548=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15976750929548=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15976750929548=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15982803404507=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-15982803404507=&quot;rgb(178, 178, 178)&quot; data-darkmode-bgcolor-15982803404507=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-15982803404507=&quot;rgb(255, 255, 255)&quot;&gt;转载请联系授权（微信ID：PassJava）&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本篇主要内容如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4924554183813443&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWfWF1nN1tlXMqCtseXWcW0QEOiatxVODq0DhiaSUe5sTWOwCpovsNENicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;729&quot;/&gt;&lt;figcaption&gt;主要内容&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;前言&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们都在讨论分布式，特别是面试的时候，不管是招初级软件工程师还是高级，都会要求懂分布式，甚至要求用过。传得沸沸扬扬的分布式到底是什么东东，有什么优势？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;借用火影忍术&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6310344827586207&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWCCQlz6ibWPlvEicib3ibvmw1dWZ3ESVqtibFzJZYlKP1IaB6U6GzNcicbS4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;870&quot;/&gt;&lt;figcaption&gt;风遁&lt;span&gt;·&lt;/span&gt;螺旋手里剑&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看过&lt;code&gt;火影&lt;/code&gt;的同学肯定知道&lt;code&gt;漩涡鸣人&lt;/code&gt;的招牌忍术：&lt;code&gt;多重影分身之术&lt;/code&gt;。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;这个术有一个特别厉害的地方，&lt;code&gt;过程和心得&lt;/code&gt;：多个分身的感受和经历都是相通的。比如 A 分身去找卡卡西（鸣人的老师）请教问题，那么其他分身也会知道 A 分身问的什么问题。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;漩涡鸣人&lt;/code&gt;有另外一个超级厉害的忍术，需要由几个影分身完成：&lt;code&gt;风遁·螺旋手里剑。&lt;/code&gt;&lt;span&gt;这个忍术是&lt;/span&gt;靠三个鸣人一起协作完成的。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这两个忍术和分布式有什么关系？&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;分布在不同地方的系统或服务，是彼此相互关联的。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;分布式系统是分工合作的。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;案例：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;比如 Redis 的&lt;code&gt;哨兵机制&lt;/code&gt;，可以知道集群环境下哪台 &lt;code&gt;Redis&lt;/code&gt; 节点挂了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Kafka的 &lt;code&gt;Leader 选举机制&lt;/code&gt;，如果某个节点挂了，会从 &lt;code&gt;follower&lt;/code&gt; 中重新选举一个 leader 出来。（leader 作为写数据的入口，follower 作为读的入口）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那&lt;code&gt;多重影分身之术&lt;/code&gt;有什么缺点？&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;会消耗大量的查克拉。分布式系统同样具有这个问题，需要几倍的资源来支持。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;对分布式的通俗理解&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;是一种工作方式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将不同的业务分布在不同的地方&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;优势可以从两方面考虑：一个是宏观，一个是微观。&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;宏观层面：多个功能模块糅合在一起的系统进行服务拆分，来解耦服务间的调用。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;微观层面：将模块提供的服务分布到不同的机器或容器里，来扩大服务力度。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;任何事物有阴必有阳，那分布式又会带来哪些问题呢？&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;需要更多优质人才懂分布式，人力成本增加&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;架构设计变得异常复杂，学习成本高&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;运维部署和维护成本显著增加&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;多服务间链路变长，开发排查问题难度加大&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;环境高可靠性问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据幂等性问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据的顺序问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;等等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;讲到&lt;code&gt;分布式&lt;/code&gt;不得不知道 &lt;code&gt;CAP&lt;/code&gt; 定理和 &lt;code&gt;Base&lt;/code&gt; 理论，这里给不知道的同学做一个扫盲。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;CAP 定理&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在理论计算机科学中，CAP 定理指出对于一个分布式计算系统来说，不可能通是满足以下三点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;一致性（Consistency）&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;可用性（Availability）&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;每次请求都能获取到非错的响应，但不保证获取的数据为最新数据&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;分区容错性（Partition tolerance）&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;不能在时限内达成数据一致性，就意味着发生了分区的情况，必须就当前操作在 C 和 A 之间做出选择）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;BASE 理论&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;BASE&lt;/code&gt; 是 &lt;code&gt;Basically Available&lt;/code&gt;（基本可用）、&lt;code&gt;Soft state&lt;/code&gt;（软状态）和 &lt;code&gt;Eventually consistent&lt;/code&gt;（最终一致性）三个短语的缩写。&lt;code&gt;BASE&lt;/code&gt; 理论是对 &lt;code&gt;CAP&lt;/code&gt; 中 &lt;code&gt;AP&lt;/code&gt; 的一个扩展，通过牺牲强一致性来获得可用性，当出现故障允许部分不可用但要保证核心功能可用，允许数据在一段时间内是不一致的，但最终达到一致状态。满足 &lt;code&gt;BASE&lt;/code&gt; 理论的事务，我们称之为&lt;code&gt;柔性事务&lt;/code&gt;。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;基本可用 ：&lt;/strong&gt; 分布式系统在出现故障时，允许损失部分可用功能，保证核心功能可用。如电商网址交易付款出现问题来，商品依然可以正常浏览。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;软状态：&lt;/strong&gt; 由于不要求强一致性，所以BASE允许系统中存在中间状态（也叫软状态），这个状态不影响系统可用性，如订单中的“支付中”、“数据同步中”等状态，待数据最终一致后状态改为“成功”状态。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;最终一致性：&lt;/strong&gt; 最终一致是指的经过一段时间后，所有节点数据都将会达到一致。如订单的“支付中”状态，最终会变为“支付成功”或者“支付失败”，使订单状态与实际交易结果达成一致，但需要一定时间的延迟、等待。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;一、分布式消息队列的坑&lt;/h1&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;消息队列如何做分布式？&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将消息队列里面的消息分摊到多个节点（指某台机器或容器）上，所有节点的消息队列之和就包含了所有消息。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. 消息队列的坑之非幂等&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;幂等性概念&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所谓幂等性就是无论多少次操作和第一次的操作结果一样。如果消息被多次消费，很有可能造成数据的不一致。而如果消息不可避免地被消费多次，如果我们开发人员能通过技术手段保证数据的前后一致性，那也是可以接受的，这让我想起了 Java 并发编程中的 ABA 问题，如果出现了 [&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwMjI0ODk0NA==&amp;amp;mid=2451944205&amp;amp;idx=1&amp;amp;sn=472fab10dda17168a7a7b14a5f9e9ac7&amp;amp;chksm=8d1c4a92ba6bc3849eebbd925009e0d61593fa8e3dd9a087725ffa55c0f3a38c3bb7646db83f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;ABA问题&lt;/a&gt;)，若能保证所有数据的前后一致性也能接受。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;场景分&lt;/span&gt;&lt;span&gt;析&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;RabbitMQ&lt;/code&gt;、&lt;code&gt;RocketMQ&lt;/code&gt;、&lt;code&gt;Kafka&lt;/code&gt; 消息队列中间件都有可能出现消息重复消费问题。这种问题并不是 MQ 自己保证的，而是需要开发人员来保证。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这几款消息队列中间都是是全球最牛的分布式消息队列，那肯定考虑到了消息的幂等性。我们以 Kafka 为例，看看 Kafka 是怎么保证消息队列的幂等性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kafka 有一个 &lt;code&gt;偏移量&lt;/code&gt; 的概念，代表着消息的序号，每条消息写到消息队列都会有一个偏移量，消费者消费了数据之后，每过一段固定的时间，就会把消费过的消息的偏移量提交一下，表示已经消费过了，下次消费就从偏移量后面开始消费。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;坑：&lt;/code&gt;当消费完消息后，还没来得及提交偏移量，系统就被关机了，那么未提交偏移量的消息则会再次被消费。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图所示，队列中的数据 A、B、C，对应的偏移量分别为 100、101、102，都被消费者消费了，但是只有数据 A 的偏移量 100 提交成功，另外 2 个偏移量因系统重启而导致未及时提交。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4014423076923077&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWyr4ytdyMoQjPN9QDQic8fcNgmAe6wnnZYOQ1QDYIteQFDtXFqMzqhCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;figcaption&gt;系统重启，偏移量未提交&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重启后，消费者又是拿偏移量 100 以后的数据，从偏移量 101 开始拿消息。所以数据 B 和数据 C 被重复消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图所示：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4065359477124183&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWS1BdUSibWAlib0NpUKgu0lzdVj0DJJk2hWHe2nTcz06DhHaOYttZmbdg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;765&quot;/&gt;&lt;figcaption&gt;重启后，重复消费消息&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;避坑指南&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;微信支付结果通知场景&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;微信官方文档上提到微信支付通知结果可能会推送多次，需要开发者自行保证幂等性。第一次我们可以直接修改订单状态（如支付中 -&amp;gt; 支付成功），第二次就根据订单状态来判断，如果不是支付中，则不进行订单处理逻辑。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;插入数据库场景&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;每次插入数据时，先检查下数据库中是否有这条数据的主键 id，如果有，则进行更新操作。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;写 Redis 场景&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Redis 的 &lt;code&gt;Set&lt;/code&gt; 操作天然幂等性，所以不用考虑 Redis 写数据的问题。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;其他场景方案&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;生产者发送每条数据时，增加一个全局唯一 id，类似订单 id。每次消费时，先去 Redis 查下是否有这个 id，如果没有，则进行正常处理消息，且将 id 存到 Redis。如果查到有这个 id，说明之前消费过，则不要进行重复处理这条消息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不同业务场景，可能会有不同的幂等性方案，大家选择合适的即可，上面的几种方案只是提供常见的解决思路。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. 消息队列的坑之消息丢失&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;坑:&lt;/code&gt;消息丢失会带来什么问题？如果是订单下单、支付结果通知、扣费相关的消息丢失，则可能造成财务损失，如果量很大，就会给甲方带来巨大损失。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那消息队列是否能保证消息不丢失呢？答案：否。主要有三种场景会导致消息丢失。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.28651685393258425&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWzD3f0ZSMOibYNTosYR1ib0mibNTj9JBiajmBSXBgW9pO5dUgfhBJe1FoDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;534&quot;/&gt;&lt;figcaption&gt;消息队列之消息丢失&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;（1）生产者存放消息的过程中丢失消息&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.28654970760233917&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWYD6cuZZSSERicwa36esug8JEYzhZc15qkCXkicvlfqRecApPHsgPohqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;513&quot;/&gt;&lt;figcaption&gt;生产者丢失消息&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;解决方案&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于 RabbitMQ 来说，生产者发送数据之前开启 RabbitMQ 的&lt;strong&gt;事务机制&lt;/strong&gt;&lt;code&gt;channel.txselect&lt;/code&gt; ，如果消息没有进队列，则生产者受到异常报错，并进行回滚 &lt;code&gt;channel.txRollback&lt;/code&gt;，然后重试发送消息；如果收到了消息，则可以提交事务 &lt;code&gt;channel.txCommit&lt;/code&gt;。但这是一个同步的操作，会影响性能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以采用另外一种模式：&lt;code&gt;confirm&lt;/code&gt; 模式来解决同步机制的性能问题。每次生产者发送的消息都会分配一个唯一的 id，如果写入到了 RabbitMQ 队列中，则 RabbitMQ 会回传一个 &lt;code&gt;ack&lt;/code&gt; 消息，说明这个消息接收成功。如果 RabbitMQ 没能处理这个消息，则回调 &lt;code&gt;nack&lt;/code&gt; 接口。说明需要重试发送消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也可以自定义超时时间 + 消息 id 来实现超时等待后重试机制。但可能出现的问题是调用 ack 接口时失败了，所以会出现消息被发送两次的问题，这个时候就需要保证消费者消费消息的幂等性。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;事务模式&lt;/code&gt; 和 &lt;code&gt;confirm&lt;/code&gt; 模式的区别：&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;事务机制是同步的，提交事务后悔被&lt;strong&gt;阻塞&lt;/strong&gt;直到提交事务完成后。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;confirm 模式异步接收通知，但可能&lt;strong&gt;接收不到通知&lt;/strong&gt;。需要考虑接收不到通知的场景。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;（2）消息队列丢失消息&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3093385214007782&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWc3HWS2arJmrOdvBoe5Hia9mFHiaBfbK1njTuu0d07qibKtkhQ5cfgGXGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;514&quot;/&gt;&lt;figcaption&gt;消息队列丢失消息&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息队列的消息可以放到内存中，或将内存中的消息转到硬盘（比如数据库）中，一般都是内存和硬盘中都存有消息。如果只是放在内存中，那么当机器重启了，消息就全部丢失了。如果是硬盘中，则可能存在一种极端情况，就是将内存中的数据转换到硬盘的期间中，消息队列出问题了，未能将消息持久化到硬盘。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;创建 &lt;code&gt;Queue&lt;/code&gt; 的时候将其设置为持久化。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;发送消息的时候将消息的 &lt;code&gt;deliveryMode&lt;/code&gt; 设置为 2 。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;开启生产者 &lt;code&gt;confirm&lt;/code&gt; 模式，可以重试发送消息。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;（3）消费者丢失消息&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWvKonXia2gQwunDqmEIPicqdHdbacSwhDMW8fTAgsyj14bc2v3zUtdDpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;510&quot;/&gt;&lt;figcaption&gt;消费者丢失消息&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消费者刚拿到数据，还没开始处理消息，结果进程因为异常退出了，消费者没有机会再次拿到消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;关闭 RabbitMQ 的自动 &lt;code&gt;ack&lt;/code&gt;，每次生产者将消息写入消息队列后，就自动回传一个 &lt;code&gt;ack&lt;/code&gt; 给生产者。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消费者处理完消息再主动 &lt;code&gt;ack&lt;/code&gt;，告诉消息队列我处理完了。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;问题：&lt;/strong&gt; 那这种主动 &lt;code&gt;ack&lt;/code&gt; 有什么漏洞了？如果 主动 &lt;code&gt;ack&lt;/code&gt; 的时候挂了，怎么办？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;则可能会被再次消费，这个时候就需要幂等处理了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;问题：&lt;/strong&gt; 如果这条消息一直被重复消费怎么办？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;则需要有加上重试次数的监测，如果超过一定次数则将消息丢失，记录到异常表或发送异常通知给值班人员。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;（4）RabbitMQ 消息丢失总结&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2985386221294363&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWJSMnugxLk3qMb3clmVum97VR6icYAFmqvlV0NZOnlvPP3ia8mQziaWZSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;958&quot;/&gt;&lt;figcaption&gt;RabbitMQ 丢失消息的处理方案&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;（5）Kafka 消息丢失&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;场景：&lt;/strong&gt;&lt;code&gt;Kafka&lt;/code&gt; 的某个 broker（节点）宕机了，重新选举 leader （写入的节点）。如果 leader 挂了，follower 还有些数据未同步完，则 follower 成为 leader 后，消息队列会丢失一部分数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;给 topic 设置 &lt;code&gt;replication.factor&lt;/code&gt; 参数，值必须大于 1，要求每个 partition 必须有至少 2 个副本。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;给 kafka 服务端设置 &lt;code&gt;min.insyc.replicas&lt;/code&gt; 必须大于 1，表示一个 leader 至少一个 follower 还跟自己保持联系。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3. 消息队列的坑之消息乱序&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;坑:&lt;/code&gt; 用户先下单成功，然后取消订单，如果顺序颠倒，则最后数据库里面会有一条下单成功的订单。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;RabbitMQ 场景：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;生产者向消息队列按照顺序发送了 2 条消息，消息1：增加数据 A，消息2：删除数据 A。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;期望结果：数据 A 被删除。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;但是如果有两个消费者，消费顺序是：消息2、消息 1。则最后结果是增加了数据 A。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.26523297491039427&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaW1hFiasBZGkfgRuKTaFKdhEyoS90QWQEcQI8ibxR9haHCKwSVrib8Q6FdA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;558&quot;/&gt;&lt;figcaption&gt;RabbitMQ消息乱序场景&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3610648918469218&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWiac6wHm21o0l10Bpgsa4hagf6XiaZRHqEBruahAl1lBYicmK2wKKH7wsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;601&quot;/&gt;&lt;figcaption&gt;RabbitMQ 消息乱序场景&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;RabbitMQ 解决方案：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;将 Queue 进行拆分，创建多个内存 Queue，消息 1 和 消息 2 进入同一个 Queue。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;创建多个消费者，每一个消费者对应一个 Queue。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4665523156089194&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWMBibwicPhJOypQ7vrM5bDic06yILjbD6zOEq45q48EfwhF8MJCwhAyCaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;583&quot;/&gt;&lt;figcaption&gt;RabbitMQ 解决方案&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Kafka 场景：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;创建了 topic，有 3 个 partition。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;创建一条订单记录，订单 id 作为 key，订单相关的消息都丢到同一个 partition 中，同一个生产者创建的消息，顺序是正确的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为了快速消费消息，会创建多个消费者去处理消息，而为了提高效率，每个消费者可能会创建多个线程来并行的去拿消息及处理消息，处理消息的顺序可能就乱序了。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.4435643564356435&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaW4pSo6lMocgIWaxG9icE8b4iblibiakiaWCCmQljw4jxvNm3q2WJ5v5QWDicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;505&quot;/&gt;&lt;figcaption&gt;Kafka 消息丢失场景&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Kafka 解决方案：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;解决方案和 RabbitMQ 类似，利用多个 内存 Queue，每个线程消费 1个 Queue。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;具有相同 key 的消息 进同一个 Queue。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.6413934426229508&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaW4ia8HTIrwsMSOlKjqh3Iw7ibBpLcibdS9UcudEc0aJHQ1kxkNLHYcaodw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;488&quot;/&gt;&lt;figcaption&gt;Kafka 消息乱序解决方案&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4. 消息队列的坑之消息积压&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息积压：消息队列里面有很多消息来不及消费。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;场景 1：&lt;/strong&gt; 消费端出了问题，比如消费者都挂了，没有消费者来消费了，导致消息在队列里面不断积压。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;场景 2：&lt;/strong&gt; 消费端出了问题，比如消费者消费的速度太慢了，导致消息不断积压。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;坑：比如线上正在做订单活动，下单全部走消息队列，如果消息不断积压，订单都没有下单成功，那么将会损失很多交易。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3193717277486911&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWLP5KESVoAxcQW6fgsicotu7wOX9j32f0ibuS7IWC3Coyc8ulOVHENJgA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;573&quot;/&gt;&lt;figcaption&gt;消息队列之消息积压&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解决方案：&lt;strong&gt;解铃还须系铃人&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;修复代码层面消费者的问题，确保后续消费速度恢复或尽可能加快消费的速度。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;停掉现有的消费者。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;临时建立好原先 5 倍的 Queue 数量。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;临时建立好原先 5 倍数量的 消费者。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将堆积的消息全部转入临时的 Queue，消费者来消费这些 Queue。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5663265306122449&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaW8hdfNWjWuEmO934LUdI7rCMkmQBaByDyxibSUUZ69LW4cLuibxvgcDSg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;588&quot;/&gt;&lt;figcaption&gt;消息积压解决方案&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5. 消息队列的坑之消息过期失效&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;坑：&lt;/code&gt;RabbitMQ 可以设置过期时间，如果消息超过一定的时间还没有被消费，则会被 RabbitMQ 给清理掉。消息就丢失了。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.34341637010676157&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWHgaIicI4cHv835h3l7jdjLnCHU481A52lF8mLkoTiaDEYC8qia24Myemw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;562&quot;/&gt;&lt;figcaption&gt;消息过期失效&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解决方案：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2563176895306859&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWRWKia2UkdhC3Kn23CGQ72icPXZBfLPOyezZdePbFWLoSXkpRnaV7AS9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;figcaption&gt;消息过期失效解决方案&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6. 消息队列的坑之队列写满&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;坑：&lt;/code&gt;当消息队列因消息积压导致的队列快写满，所以不能接收更多的消息了。生产者生产的消息将会被丢弃。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解决方案：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;判断哪些是无用的消息，RabbitMQ 可以进行 &lt;code&gt;Purge Message&lt;/code&gt; 操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果是有用的消息，则需要将消息快速消费，将消息里面的内容转存到数据库。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;准备好程序将转存在数据库中的消息再次重导到消息队列。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;闲时重导消息到消息队列。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;二、分布式缓存的坑&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在高频访问数据库的场景中，我们会在业务层和数据层之间加入一套缓存机制，来分担数据库的访问压力，毕竟访问磁盘 I/O 的速度是很慢的。比如利用缓存来查数据，可能5ms就能搞定，而去查数据库可能需要 50 ms，差了一个数量级。而在高并发的情况下，数据库还有可能对数据进行加锁，导致访问数据库的速度更慢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分布式缓存我们用的最多的就是 Redis了，它可以提供分布式缓存服务。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. Redis 数据丢失的坑&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;哨兵机制&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 可以实现利用&lt;code&gt;哨兵机制&lt;/code&gt;实现集群的高可用。那什么十哨兵机制呢？&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;英文名：&lt;code&gt;sentinel&lt;/code&gt;，中文名：&lt;code&gt;哨兵&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;集群监控：负责主副进程的正常工作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消息通知：负责将故障信息报警给运维人员。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;故障转移：负责将主节点转移到备用节点上。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;配置中心：通知客户端更新主节点地址。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分布式：有多个哨兵分布在每个主备节点上，互相协同工作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分布式选举：需要大部分哨兵都同意，才能进行主备切换。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;高可用：即使部分哨兵节点宕机了，哨兵集群还是能正常工作。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;坑：&lt;/code&gt; 当主节点发生故障时，需要进行主备切换，可能会导致数据丢失。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;异步复制数据导致的数据丢失&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主节点异步同步数据给备用节点的过程中，主节点宕机了，导致有部分数据未同步到备用节点。而这个从节点又被选举为主节点，这个时候就有部分数据丢失了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;脑裂导致的数据丢失&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主节点所在机器脱离了集群网络，实际上自身还是运行着的。但哨兵选举出了备用节点作为主节点，这个时候就有两个主节点都在运行，相当于两个大脑在指挥这个集群干活，但到底听谁的呢？这个就是脑裂。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那怎么脑裂怎么会导致数据丢失呢？如果发生脑裂后，客户端还没来得及切换到新的主节点，连的还是第一个主节点，那么有些数据还是写入到了第一个主节点里面，新的主节点没有这些数据。那等到第一个主节点恢复后，会被作为备用节点连到集群环境，而且自身数据会被清空，重新从新的主节点复制数据。而新的主节点因没有客户端之前写入的数据，所以导致数据丢失了一部分。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;避坑指南&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;配置 min-slaves-to-write 1，表示至少有一个备用节点。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;配置 min-slaves-max-lag 10，表示数据复制和同步的延迟不能超过 10 秒。最多丢失 10 秒的数据&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意：&lt;code&gt;缓存雪崩&lt;/code&gt;、&lt;code&gt;缓存穿透&lt;/code&gt;、&lt;code&gt;缓存击穿&lt;/code&gt;并不是分布式所独有的，单机的时候也会出现。所以不在分布式的坑之列。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;三、分库分表的坑&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.分库分表的坑之扩容&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;分库、分表、垂直拆分和水平拆分&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;分库：&lt;/strong&gt; 因一个数据库支持的最高并发访问数是有限的，可以将一个数据库的数据拆分到多个库中，来增加最高并发访问数。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;分表：&lt;/strong&gt; 因一张表的数据量太大，用索引来查询数据都搞不定了，所以可以将一张表的数据拆分到多张表，查询时，只用查拆分后的某一张表，SQL 语句的查询性能得到提升。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;分库分表优势：分库分表后，承受的并发增加了多倍；磁盘使用率大大降低；单表数据量减少，SQL 执行效率明显提升。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;水平拆分：&lt;/strong&gt; 把一个表的数据拆分到多个数据库，每个数据库中的表结构不变。用多个库抗更高的并发。比如订单表每个月有500万条数据累计，每个月都可以进行水平拆分，将上个月的数据放到另外一个数据库。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;垂直拆分：&lt;/strong&gt; 把一个有很多字段的表，拆分成多张表到同一个库或多个库上面。高频访问字段放到一张表，低频访问的字段放到另外一张表。利用数据库缓存来缓存高频访问的行数据。比如将一张很多字段的订单表拆分成几张表分别存不同的字段（可以有冗余字段）。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;分库、分表的方式：&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;根据租户来分库、分表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;利用时间范围来分库、分表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;利用 ID 取模来分库、分表。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;坑：&lt;/code&gt;分库分表是一个运维层面需要做的事情，有时会采取凌晨宕机开始升级。可能熬夜到天亮，结果升级失败，则需要回滚，其实对技术团队都是一种煎熬。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;怎么做成自动的来节省分库分表的时间？&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;双写迁移方案：迁移时，新数据的增删改操作在新库和老库都做一遍。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用分库分表工具 Sharding-jdbc  来完成分库分表的累活。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用程序来对比两个库的数据是否一致，直到数据一致。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;坑:&lt;/code&gt; 分库分表看似光鲜亮丽，但分库分表会引入什么新的问题呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;垂直拆分带来的问题&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;依然存在单表数据量过大的问题。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;部分表无法关联查询，只能通过接口聚合方式解决，提升了开发的复杂度。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分布式事处理复杂。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;水平拆分带来的问题&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;跨库的关联查询性能差。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据多次扩容和维护量大。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;跨分片的事务一致性难以保证。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.分库分表的坑之唯一 ID&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;为什么分库分表需要唯一 ID&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果要做分库分表，则必须得考虑表主键 ID 是全局唯一的，比如有一张订单表，被分到 A 库和 B 库。如果 两张订单表都是从 1 开始递增，那查询订单数据时就错乱了，很多订单 ID 都是重复的，而这些订单其实不是同一个订单。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分库的一个期望结果就是将访问数据的次数分摊到其他库，有些场景是需要均匀分摊的，那么数据插入到多个数据库的时候就需要交替生成唯一的 ID 来保证请求均匀分摊到所有数据库。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;坑:&lt;/code&gt; 唯一 ID 的生成方式有 n 种，各有各的用途，别用错了。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;生成唯一 ID 的原则&lt;span/&gt;&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;生成唯一 ID 的几种方式&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;数据库自增 ID。每个数据库每增加一条记录，自己的 ID 自增 1。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;多个库的 ID 可能重复，这个方案可以直接否掉了，不适合分库分表后的 ID 生成。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;信息不安全&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缺点&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;适用 &lt;code&gt;UUID&lt;/code&gt; 唯一 ID。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;UUID 太长、占用空间大。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不具有有序性，作为主键时，在写入数据时，不能产生有顺序的 append 操作，只能进行 insert 操作，导致读取整个 &lt;code&gt;B+&lt;/code&gt; 树节点到内存，插入记录后将整个节点写回磁盘，当记录占用空间很大的时候，性能很差。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缺点&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;获取系统当前时间作为唯一 ID。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;高并发时，1 ms内可能有多个相同的 ID。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;信息不安全&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缺点&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Twitter 的 &lt;code&gt;snowflake&lt;/code&gt;（雪花算法）：Twitter 开源的分布式 id 生成算法，64 位的 long 型的 id，分为 4 部分&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.19499241274658574&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWfyx28NkGnZ7zjnu07042ic3QmVuMKYuaPaicTnGWXcJgp3IrTILyhvqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1318&quot;/&gt;&lt;figcaption&gt;snowflake 算法&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;p&gt;基本原理和优缺点：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1 bit：&lt;/span&gt;&lt;span&gt;不用，统一为 0&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;41 bits：毫秒时间戳，可以表示 69 年的时间。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;10 bits：5 bits 代表机房 id，5 个 bits 代表机器 id。最多代表 32 个机房，每个机房最多代表 32 台机器。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;12 bits：同一毫秒内的 id，最多 4096 个不同 id，自增模式&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;优点：&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;缺点：&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;百度的 &lt;code&gt;UIDGenerator&lt;/code&gt; 算法。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.7307692307692307&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWdSibiaBYFukSSAc02bWwB3z24KT7SvichHAaG0Pw3gX0SBcPQHQldGyNw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;468&quot;/&gt;&lt;figcaption&gt;UIDGenerator 算法&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;基于 Snowflake 的优化算法。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;借用未来时间和双 Buffer 来解决时间回拨与生成性能等问题，同时结合 MySQL 进行 ID 分配。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;优点：解决了时间回拨和生成性能问题。&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缺点：依赖 &lt;span&gt;MySQL &lt;/span&gt;数据库。&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;美团的 &lt;code&gt;Leaf-Snowflake&lt;/code&gt; 算法。&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;section&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.6752221125370188&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWxgNtQWYUvDBMaw5dOurH6YYiasrBD6HsVTJRpSuQmnQSS1etIQicicsHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1013&quot;/&gt;&lt;figcaption&gt;图片来源于美团&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;怎么选择：一般自己的内部系统，雪花算法足够，如果还要更加安全可靠，可以选择百度或美团的生成唯一 ID 的方案。&lt;/span&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;四、分布式事务的坑&lt;/h1&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;怎么理解事务？&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;事务可以简单理解为要么这件事情全部做完，要么这件事情一点都没做，跟没发生一样。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在分布式的世界中，存在着各个服务之间相互调用，链路可能很长，如果有任何一方执行出错，则需要回滚涉及到的其他服务的相关操作。比如订单服务下单成功，然后调用营销中心发券接口发了一张代金券，但是微信支付扣款失败，则需要退回发的那张券，且需要将订单状态改为异常订单。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;坑&lt;/code&gt;：如何保证分布式中的事务正确执行，是个大难题。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;分布式事务的几种主要方式&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;XA 方案（两阶段提交方案）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TCC 方案（try、confirm、cancel）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;SAGA 方案&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可靠消息最终一致性方案&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最大努力通知方案&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;XA 方案原理&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8149100257069408&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaW0nPIuuXl7QCf8G8NHYHtwvOWwyVNTEnn04rAZAE5dYUMUE3oXeVvVA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;389&quot;/&gt;&lt;figcaption&gt;XA 方案&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;事务管理器负责协调多个数据库的事务，先问问各个数据库准备好了吗？如果准备好了，则在数据库执行操作，如果任一数据库没有准备，则回滚事务。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;适合单体应用，不适合微服务架构。因为每个服务只能访问自己的数据库，不允许交叉访问其他微服务的数据库。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;TCC 方案&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Try 阶段：对各个服务的资源做检测以及对资源进行锁定或者预留。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Confirm 阶段：各个服务中执行实际的操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Cancel 阶段：如果任何一个服务的业务方法执行出错，需要将之前操作成功的步骤进行回滚。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用场景：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;跟支付、交易打交道，必须保证资金正确的场景。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对于一致性要求高。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;缺点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;但因为要写很多补偿逻辑的代码，且不易维护，所以其他场景建议不要这么做。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Sega 方案&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基本原理：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;业务流程中的每个步骤若有一个失败了，则补偿前面操作成功的步骤。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;适用场景：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;业务流程长、业务流程多。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;参与者包含其他公司或遗留系统服务。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;优势：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;第一个阶段提交本地事务、无锁、高性能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;参与者可异步执行、高吞吐。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;补偿服务易于实现。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;缺点：&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;可靠消息一致性方案&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2937384898710866&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/SfAHMuUxqJ130Dt32kkg11gRYBtyq7iaWjaWVt5ZXD2aTgpF8wHgMkXyDcZbFPxhZgR3RtIb2tPoMYJIOQdZvLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1086&quot;/&gt;&lt;figcaption&gt;可靠消息一致性方案&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基本原理：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;利用消息中间件 &lt;code&gt;RocketMQ&lt;/code&gt; 来实现消息事务。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第一步：A 系统发送一个消息到 MQ，MQ将消息状态标记为 &lt;code&gt;prepared&lt;/code&gt;（预备状态，半消息），该消息无法被订阅。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第二步：MQ 响应 A 系统，告诉 A 系统已经接收到消息了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第三步：A 系统执行本地事务。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第四步：若 A 系统执行本地事务成功，将 &lt;code&gt;prepared&lt;/code&gt; 消息改为 &lt;code&gt;commit&lt;/code&gt;（提交事务消息），B 系统就可以订阅到消息了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第五步：MQ 也会定时轮询所有 &lt;code&gt;prepared&lt;/code&gt;的消息，回调 A 系统，让 A 系统告诉 MQ 本地事务处理得怎么样了，是继续等待还是回滚。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第六步：A 系统检查本地事务的执行结果。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;第七步：若 A 系统执行本地事务失败，则 MQ 收到 &lt;code&gt;Rollback&lt;/code&gt; 信号，丢弃消息。若执行本地事务成功，则 MQ 收到 &lt;code&gt;Commit&lt;/code&gt; 信号。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;B 系统收到消息后，开始执行本地事务，如果执行失败，则自动不断重试直到成功。或 B 系统采取回滚的方式，同时要通过其他方式通知 A 系统也进行回滚。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;B 系统需要保证幂等性。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;最大努力通知方案&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基本原理：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;系统 A 本地事务执行完之后，发送消息到 MQ。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;MQ 将消息持久化。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;系统 B 如果执行本地事务失败，则&lt;code&gt;最大努力服务&lt;/code&gt;会定时尝试重新调用系统 B，尽自己最大的努力让系统 B 重试，重试多次后，还是不行就只能放弃了。转到开发人员去排查以及后续人工补偿。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;几种方案如何选择&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;跟支付、交易打交道，优先 TCC。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;大型系统，但要求不那么严格，考虑 消息事务或 SAGA 方案。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;单体应用，建议 XA 两阶段提交就可以了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最大努力通知方案建议都加上，毕竟不可能一出问题就交给开发排查，先重试几次看能不能成功。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;写在最后&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分布式还有很多坑，这篇只是一个小小的总结，从这些坑中，我们也知道分布式有它的优势也有它的劣势，那到底该不该用分布式，完全取决于业务、时间、成本以及开发团队的综合实力。后续我会继续分享分布式中的一些底层原理，当然也少不了分享一些避坑指南。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;参考资料：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;美团的 Leaf-Snowflake 算法。&lt;br/&gt;百度的 UIDGenerator 算法。&lt;br/&gt;Advanced-Java&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8e14a4e7eacd139bfcf263d07f5949cc</guid>
<title>Hadoop 框架：单服务下伪分布式集群搭建</title>
<link>https://toutiao.io/k/6lznddm</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;h1&gt;&lt;span&gt;一、基础环境&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;1、环境版本&lt;/span&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;环境：&lt;span&gt;centos7&lt;/span&gt;&lt;br/&gt;&lt;span&gt;hadoop&lt;/span&gt;版本：2&lt;span&gt;.7&lt;/span&gt;&lt;span&gt;.2&lt;/span&gt;&lt;br/&gt;&lt;span&gt;jdk&lt;/span&gt;版本：1&lt;span&gt;.8&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;2、Hadoop目录结构&lt;/span&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;bin目录：存放对Hadoop的HDFS,YARN服务进行操作的脚本&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;etc目录：Hadoop的相关配置文件目录&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;lib目录：存放Hadoop的本地库，提供数据压缩解压缩能力&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;sbin目录：存放启动或停止Hadoop相关服务的脚本&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;share目录：存放Hadoop的依赖jar包、文档、和相关案例&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;3、配置加载&lt;/span&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;vim /etc/profile&lt;br/&gt;&lt;span&gt;# 添加环境&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; JAVA_HOME=/opt/jdk1.8&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; PATH=&lt;span&gt;$PATH&lt;/span&gt;:&lt;span&gt;$JAVA_HOME&lt;/span&gt;/bin&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; HADOOP_HOME=/opt/hadoop2.7&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; PATH=&lt;span&gt;$PATH&lt;/span&gt;:&lt;span&gt;$JAVA_HOME&lt;/span&gt;/bin:&lt;span&gt;$HADOOP_HOME&lt;/span&gt;/bin:&lt;span&gt;$HADOOP_HOME&lt;/span&gt;/sbin&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 退出刷新配置&lt;/span&gt;&lt;br/&gt;&lt;span&gt;source&lt;/span&gt; /etc/profile&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;&lt;span&gt;二、伪集群配置&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;以下配置文件所在路径：/opt/hadoop2.7/etc/hadoop，这里是Linux环境，脚本配置sh格式。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;1、配置hadoop-env&lt;/span&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;root&lt;span&gt;# vim hadoop-env.sh&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 修改前&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; JAVA_HOME=&lt;br/&gt;&lt;span&gt;# 修改后&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; JAVA_HOME=/opt/jdk1.8&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;2、配置core-site&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;文件结构概览&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NameNode的地址&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;fs.defaultFS&lt;span&gt;&amp;lt;/&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;hdfs://127.0.0.1:9000&lt;span&gt;&amp;lt;/&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;数据存放目录：Hadoop运行时产生文件的存储目录。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;hadoop.tmp.dir&lt;span&gt;&amp;lt;/&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;/opt/hadoop2.7/data/tmp&lt;span&gt;&amp;lt;/&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;3、配置hdfs-site&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;文件结构和上述一样，配置hdfs副本个数，这里伪环境，配置1个即可。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.replication&lt;span&gt;&amp;lt;/&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span&gt;&amp;lt;/&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;4、配置yarn-env&lt;/span&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;export&lt;/span&gt; JAVA_HOME=&lt;span&gt;/opt/&lt;/span&gt;jdk1&lt;span&gt;.8&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;5、配置yarn-site&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;指定YARN的ResourceManager的地址&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.hostname&lt;span&gt;&amp;lt;/&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;192.168.72.132&lt;span&gt;&amp;lt;/&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;指定map产生的中间结果传递给reduce采用的机制是shuffle&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.aux-services&lt;span&gt;&amp;lt;/&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce_shuffle&lt;span&gt;&amp;lt;/&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;6、配置mapred-env&lt;/span&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;export&lt;/span&gt; JAVA_HOME=&lt;span&gt;/opt/&lt;/span&gt;jdk1&lt;span&gt;.8&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;7、配置mapred-site&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;将mapred-site.xml.template重新命名为mapred-site.xml。&lt;/p&gt;&lt;p&gt;指定MapReduce程序资源在调度集群上运行。如果不指定为yarn，那么MapReduce程序就只会在本地运行而非在整个集群中运行。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce.framework.name&lt;span&gt;&amp;lt;/&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn&lt;span&gt;&amp;lt;/&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;&lt;span&gt;三、环境启动测试&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;1、测试文件系统&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;Hdfs相关&lt;/p&gt;&lt;p&gt;&lt;strong&gt;格式化NameNode&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;第一次启动时执行该操作。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# bin/hdfs namenode -format&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;格式化NameNode，会产生新的clusterID,导致NameNode和DataNode的集群id不一致，集群找不到已往数据。所以，格式NameNode时，一定要停止相关进程，删除data数据和log日志，然后再格式化NameNode。clusterID在如下目录中的VERSION文件里，可自行查看对比。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;/opt/hadoop2&lt;span&gt;.7&lt;/span&gt;/&lt;span&gt;data&lt;/span&gt;/tmp/dfs/name/current&lt;br/&gt;/opt/hadoop2&lt;span&gt;.7&lt;/span&gt;/&lt;span&gt;data&lt;/span&gt;/tmp/dfs/&lt;span&gt;data&lt;/span&gt;/current&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;启动NameNode&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# sbin/hadoop-daemon.sh start namenode&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;启动DataNode&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# sbin/hadoop-daemon.sh start datanode&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;jps查看状态&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[root@localhost hadoop2&lt;span&gt;.7&lt;/span&gt;]&lt;span&gt;# jps&lt;/span&gt;&lt;br/&gt;&lt;span&gt;2450&lt;/span&gt; Jps&lt;br/&gt;&lt;span&gt;2276&lt;/span&gt; NameNode&lt;br/&gt;&lt;span&gt;2379&lt;/span&gt; DataNode&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Web界面查看&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;需要Linux关闭防火墙和相关安全增强控制（这里很重要）。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;IP&lt;/span&gt;地址&lt;span&gt;:50070&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.47329192546583854&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/uUIibyNXbAvBU9sQ4DDPu1s6VUvd07tV3BCu6eQDXogHa8cVhabEtaPvJoDgOlqDPPCG8ZyMUZbZ48Ym280uNCw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;805&quot;/&gt;&lt;/p&gt;&lt;p&gt;Yarn相关&lt;/p&gt;&lt;p&gt;启动ResourceManager&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# sbin/yarn-daemon.sh start resourcemanager&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;启动NodeManager&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# sbin/yarn-daemon.sh start nodemanager&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Web界面查看&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;IP地址:8088/cluster&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.351131221719457&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/uUIibyNXbAvBU9sQ4DDPu1s6VUvd07tV3qEqRTtQUKeyum4yFMicsxicS5PsXRKZDB7PAGWDCvG8GNTic40WwkaibEg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1105&quot;/&gt;&lt;/p&gt;&lt;p&gt;MapReduce相关&lt;/p&gt;&lt;p&gt;&lt;strong&gt;文件操作测试&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;创建一个测试文件目录&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[root@localhost inputfile]&lt;span&gt;# pwd&lt;/span&gt;&lt;br/&gt;/opt/inputfile&lt;br/&gt;[root@localhost inputfile]&lt;span&gt;# echo &quot;hello word hadoop&quot; &amp;gt; word.txt&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HDFS文件系统上创建文件夹&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;] bin/hdfs dfs -mkdir -p /opt/upfile/input&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上传文件&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# bin/hdfs dfs -put /opt/inputfile/word.txt /opt/upfile/input&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看文件&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# bin/hdfs dfs -ls /opt/upfile/input&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;2、Web端查看文件&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.32073887489504616&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/uUIibyNXbAvBU9sQ4DDPu1s6VUvd07tV3UiaIerJIGCMbq1BhlT35yh2QxtGzSf9niafnVLQZP8Raex2kJpBDe75Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1191&quot;/&gt;&lt;/p&gt;&lt;p&gt;执行文件分析&lt;/p&gt;&lt;pre&gt;&lt;code&gt;bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples&lt;span&gt;-2.7&lt;/span&gt;&lt;span&gt;.2&lt;/span&gt;.jar wordcount /opt/upfile/&lt;span&gt;input&lt;/span&gt; /opt/upfile/&lt;span&gt;output&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看分析结果&lt;/p&gt;&lt;pre&gt;&lt;code&gt;bin&lt;span&gt;/hdfs dfs -cat /opt/upfile/output/&lt;/span&gt;*&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果：每个单词各自出现一次。&lt;/p&gt;&lt;p&gt;删除分析结果&lt;/p&gt;&lt;pre&gt;&lt;code&gt;bin/hdfs dfs -rm -r /opt/upfile/&lt;span&gt;output&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;&lt;span&gt;四、历史服务器&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;MapReduce的JobHistoryServer，这是一个独立的服务，可通过 web UI 展示历史作业日志。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;1、修改mapred-site&lt;/span&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!-- 服务器端地址 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce.jobhistory.address&lt;span&gt;&amp;lt;/&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;192.168.72.132:10020&lt;span&gt;&amp;lt;/&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;!-- 服务器web端地址 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce.jobhistory.webapp.address&lt;span&gt;&amp;lt;/&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;192.168.72.132:19888&lt;span&gt;&amp;lt;/&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;2、启动服务&lt;/span&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# sbin/mr-jobhistory-daemon.sh start historyserver&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;3、Web端查看&lt;/span&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;IP&lt;/span&gt;地址&lt;span&gt;:19888&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.28661844484629295&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/uUIibyNXbAvBU9sQ4DDPu1s6VUvd07tV3Tu05SJeuYlALMRjyj7GHe7M5ur2B6kldiceLxze4WcoA4jfZ3M7dYiaA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1106&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;4、配置日志的聚集&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;日志聚集概念：应用服务运行完成以后，将运行日志信息上传到HDFS系统上。方便的查看到程序运行详情，方便开发调试。&lt;/p&gt;&lt;p&gt;开启日志聚集功能之后，需要重新启动NodeManager 、ResourceManager和HistoryManager。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关闭上述服务&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# sbin/yarn-daemon.sh stop resourcemanager&lt;/span&gt;&lt;br/&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# sbin/yarn-daemon.sh stop nodemanager&lt;/span&gt;&lt;br/&gt;[&lt;span&gt;hadoop2.7&lt;/span&gt;]&lt;span&gt;# sbin/mr-jobhistory-daemon.sh stop historyserver&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;修改yarn-site&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;!-- 日志聚集功开启 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.log-aggregation-enable&lt;span&gt;&amp;lt;/&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;true&lt;span&gt;&amp;lt;/&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;!-- 日志保留时间7天 --&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.log-aggregation.retain-seconds&lt;span&gt;&amp;lt;/&lt;span&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;604800&lt;span&gt;&amp;lt;/&lt;span&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改完之后再次启动上述服务器。再次执行文件分析任务。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;查看Web端&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.2864157119476268&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/uUIibyNXbAvBU9sQ4DDPu1s6VUvd07tV3CjpwqQ1Br1NMUxvAgfdnY6k4lxcNsiagnpRuCzrM4WDfQ8kvfnRTc8A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1222&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/uUIibyNXbAvBU9sQ4DDPu1s6VUvd07tV39MicicaCd13VzfXIpe8ABU8mSM123qHsnoAayyaOZ3Cf9qXtOuptERgg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;五、源代码地址&lt;/span&gt;&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;GitHub·地址&lt;br/&gt;https:&lt;span&gt;//github.com/cicadasmile/big-data-parent&lt;/span&gt;&lt;br/&gt;GitEE·地址&lt;br/&gt;https:&lt;span&gt;//gitee.com/cicadasmile/big-data-parent&lt;/span&gt;&lt;span/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3783359497645212&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCjMheLZtcM2iaVMBOpIUKR4CDRCG9FLT5K6NmGXvG7exrW0TSuDjnTKJQ5PDq8j8Y7PHDd17Z3gicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1274&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4cf7a46868068bbbbd0ba0c82150988a</guid>
<title>深夜，我偷听到程序员要对 session 下手</title>
<link>https://toutiao.io/k/ohe587s</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;我是一个web服务器&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我是一个web服务器，我的工作是给人类提供上网服务，我每天要为数以万计的人提供网页浏览服务。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.719718309859155&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicTibicy13aIjYSJjSSCNOxp2VxblH7jgoichniceOd5myuUDhsPGQpvRKEXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;710&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;已经是深夜了，我还在和手下几个兄弟为了一件事紧张讨论着。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“老大，现在咱们每天处理的请求越来越多了，session同步的问题不能再拖了，必须想个办法”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“二哥说的是啊，老大，不能再拖了”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“老二，老三，咱们是一个集群，你们说的问题我不是不知道，我昨天听程序员们在讨论说要给我们接入一个叫&lt;strong&gt;Redis&lt;/strong&gt;的家伙，相信这一问题很快就能得到解决啦，大家再忍忍。”&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5175925925925926&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicT0FIib6QPUDzmWHZ5JAnMGlCr6HfhrrwF1Z0wKggoqBgz9RVkVl8GXDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“Redis，他是谁，什么来头？怎么没听过这号人物”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“我也没见过，等等看吧”&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;session-cookie时代&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到底是什么问题，让我们兄弟几个如此着急上火？事情还得从多年以前说起······&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那时候，这俩兄弟还没来，就我一个web服务器，每天处理的不过是一些静态资源文件，像HTML、CSS、JS、图片等等，日子过的清闲自在。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7505668934240363&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicTiaeGCGViaicaIJlvnooEnjbdDyMAicgujYxMYg0Lfk5kFNATHl4ySaf7Sw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;882&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;日子一天天过着，互联网却悄然发生着变化。除了静态网页之外，可以动态交互的网络应用开始如雨后春笋般涌现，像各种各样的论坛啊，购物网站啊之类的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这家公司的老板也不例外，招了一帮程序员要搞一套支持动态网页交互的网站出来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以往的时候，我只需要按照HTTP协议的规范处理请求就完事儿了。不过动态交互应用出现后，我还得记住每一个请求背后的用户是谁，要不然就张冠李戴，全乱套了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了解决这个问题，程序员们想出了一个叫&lt;strong&gt;session&lt;/strong&gt;的办法：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;浏览器登陆以后，我就分配一个session id，表示一个会话，然后返回给浏览器，让它保存着。后续再来请求的时候，就把它给带上，我就能知道是谁啦！&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.37464387464387466&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicTcXLmiaZgVvXV1bbkRhlW7J9lrvFAI6BibTd0uyFZY4wq0vZUwd0pTrDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1404&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还别说，这办法还是挺管用的，成功解决了用户身份识别的问题，这一用就是好几年。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过，互联网的发展实在是太快了，用户量蹭蹭上涨，而我却发起了愁。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原先用户量少的时候，session id管理起来倒也简单，现在用户越来越多，对应的session id数量也与日俱增，我有点不堪重负了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;终于前不久，公司对web服务器进行了扩展，给我找来了两个小弟，还专门添置了一个nginx来进行负载均衡，这一下我们变成了3台web服务器组成的小集群了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5897920604914934&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicTzHcibK5OMGakj3a7rTeSBWIjLZ541kibCgsNiaOkD9aD9dR2YeojgVicjQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1058&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我的工作一下轻松了许多，两位小兄弟为了分担了不少。我原以为以后的日子要好过一些了，可没想到，两位小兄弟的加入却引入了新的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原先的session id虽然很多，我一个人累是累点，但是方便管理啊！现在人手是增加了，可是这个session id的管理问题却变得复杂起来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为咱们现在是个集群，请求如果发到我这，我给登记了session id，但下一次请求说不定就发到老二那里，一会儿又发到老三那里，这个就说不准了，这样我们几个手头的信息不一致，就会出现一些异常情况，用户估计要破口大骂：这什么辣鸡网站？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后来我们跟nginx商量了一下，让他同一个用户来的请求都发给我们固定的一个人，这才稳住了局面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过好景不长，后面我们三兄弟都相继出现过宕机的情况，这时候nginx还是得把请求交给还在工作的兄弟，原来的问题就又出现了！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们几个逼急了，商量了一下，干脆大家伙来同步session id的信息好了，有新增、失效的情况都给其他几个兄弟招呼一下，大家都管理一份，这样就不会出现不一致的问题了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6692307692307692&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicTGGTWkzWiazRw8PFSpDb4ft7srBZcTxk2TpLIJvzMSwwo2ibHeQm8CjUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1040&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;搞了半天，又变成以前一个人管理所有session id的情况了，不仅如此，还要抽出时间和几位兄弟同步，把session id搬来搬去，工作量不减反增了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就这样艰难的过了一段日子，大家都怨声载道，所以有了开头的那一番讨论。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一次，希望这位新来的叫Redis的伙伴能拯救我们。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;独立缓存——Redis&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;过了几天，总算把这个叫Redis的小伙伴给盼来了！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这小子看起来特别精神，了解清楚情况后，告诉我们说：“三位老哥，以后这session id都统一存在我这里吧，你们别各自保存了，这不是各位的擅长”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“你行吗？”，老二看着不太相信他的话，一脸不屑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“行不行，试试不就知道了吗？”&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7905982905982906&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicTib3taibyeyVkM60koW3diacgicqQBibBMVMgCg2AOHCsudes3UlzA81pR2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;936&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，我们听从了Redis的建议，不再保存这烦人的session id，全部一股脑儿交给了他，我们需要的时候再找他获取。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你还别说，这小子个子不大，本事不小，读写速度都特快，让我们头疼的问题总算是解决了！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Token时代&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;几个月后的一天···&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“听说了吗？程序员们又要更改session id的存储方案了”，这一天，老二神神秘秘的说到。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“不对不对，我听到的版本是以后不用session id了，要变天了！”，老三也凑了上来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一旁的redis老哥一听不乐意了，“咋的？是嫌我干的不好吗？”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我也赶紧催促，“你俩就别卖关子了，听到了什么，快说说”&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5016722408026756&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicT4uYbnJq3W07PaKg3vzYCJrFfGPm81O2qeem37fwgzUlMK2ASOoTOHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;598&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老三示意大家围拢一些，小声说到：“我上次听两个程序员在议论，不知道他们在哪里学来了一套叫&lt;strong&gt;JWT（JSON Web Token）&lt;/strong&gt; 的技术，硬说让我们来管理保存session id负担太重了，以后不保存了！还说，还说···”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“还说啥，你倒是说啊！”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“还说，Redis也不是万能的，也有崩溃的风险，一崩溃就全完了，所以要革新技术”，老三继续说到。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis一听更着急上火了，“我工作这么久以来，从没有撂过挑子吧，怎么能这么说我呢？再不行我也可以像你们搞个集群嘛”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“Redis老弟你先别急。唉，老三，这不保存session id，以后怎么鉴别用户呢？你有没有听到他们怎么说的？”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“听他们说，没有session id，但是换了一个&lt;strong&gt;token&lt;/strong&gt;，用它来识别用户”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老二一听不以为意：“换了个名字，换汤不换药嘛！咱们还不是要保存token，才能匹配谁是谁”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老三摇了摇头：“不是的，这可不只是改了个名字那么简单！这个token是由三部分构成，就像这样：”&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6277495769881557&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicTA5ibfHaOmrzyJhuSUHicnnESoUtjg6eKovHrrD4DMsJHINQxI57mk8Mw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1182&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“你们看，第一部分是JWT的基本信息，然后把用户的身份信息放在第二部分，接着和第一部分合在一起做一个计算，计算的时候加入了一个只有我们才知道的密钥&lt;code&gt;secretkey&lt;/code&gt;，计算结果作为第三部分。最后三部分拼在一起作为最终的token发送给客户端保存着···”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还没等老三说完，老二点出了其中的关键：“我知道了，后面咱们再收到这个token的时候，就可以通过同样的算法验证前面两部分的结果和第三部分是不是相同，就知道这个token是不是伪造的啦！因为密钥只有我们知道，别人没办法伪造出一个token的！最后确认有效之后，再取第二部分的用户身份信息，就知道这是谁了！”&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6033149171270719&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicT7W14GZPNnJXzXbrKHttN9q1iasGuxV7tWGIXcINnPM1JFYR4YlqbDag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1810&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;听完他们的分析，我和Redis老兄都默默的点了点头，“有点意思啊，这样一来，咱们确实不用存了！不过现在咱们几个工作配合的也挺好的，他们费这么大劲是为了什么啊？”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“我猜他们是想节约开支，把Redis老哥给裁掉！”，老二说到。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老三摇了摇头，“依我看，八成他们是想展示技术给领导看，这不又快到职级晋升答辩了，他们想搞事情！唉，老大，这事你怎么看？”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“我啊，我···”&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;朋友们，你怎么看？session-cookie和JWT，你更倾向谁？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;往期TOP5文章&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIyNjMxOTY0NA==&amp;amp;mid=2247486528&amp;amp;idx=1&amp;amp;sn=3f7b09eb21969fdb16f5b0805ff69fed&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;我是Redis，MySQL大哥被我害惨了！&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIyNjMxOTY0NA==&amp;amp;mid=2247484717&amp;amp;idx=1&amp;amp;sn=2c1dd6c389c8476eb4fd178c714eaafc&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;CPU明明8个核，网卡为啥拼命折腾一号核？&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIyNjMxOTY0NA==&amp;amp;mid=2247484178&amp;amp;idx=1&amp;amp;sn=7d8e5efe7cba41122a6d978a08058627&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;因为一个跨域请求，我差点丢了饭碗&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIyNjMxOTY0NA==&amp;amp;mid=2247484072&amp;amp;idx=1&amp;amp;sn=ad1de598214dbb4eec652789d500d3a6&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;完了！CPU一味求快出事儿了！&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIyNjMxOTY0NA==&amp;amp;mid=2247484076&amp;amp;idx=1&amp;amp;sn=890977e58f86a4fb3b6a26b487697bf8&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;哈希表哪家强？几大编程语言吵起来了！&lt;/a&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicTE0l3AjjuTHwUPuRnIN5gvhhN9K0oh7CibygULqfwAHNAgdicCpqWty3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jXQDbLkGBYUoMMFRuttxTPAaE424EpicTwTLRzg7OfiblZOXNtiaSickEyLG6tB3Wb3aGWtHp54lI4ypibVmRG1v6Ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3853e81396d6c79eda5686a196ae7ea1</guid>
<title>Android 3 分钟带你入门开发测试</title>
<link>https://toutiao.io/k/6881zrq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;作为一名合格的开发人员，基本的开发测试能力必不可少，开发测试分单元测试和UI测试，通过开发测试可以减少开发人员自测时间，提升开发质量。本篇文章可以帮助初级开发人员快速了解开发测试，快速上手测试编码。本篇文章同样适用于应用软件初级测试工程师，快速上手编码测试用例。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;一、Android 3分钟带你入门开发测试&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在正式学习Android应用测试之前，我们先来了解以下几个概念。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、JUnit&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;JUnit是一个Java语言的单元测试框架。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;2、Instrumentation&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;该框架基于JUnit，因此既可以直接使用Junit 进行测试。又其为Android 应用的每种组件提供了测试基类，因此也可以使用Instrumentation 来测试Android 组件。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Instrumentation和Activity有点类似，只不过Activity是需要一个界面的，而Instrumentation并不是这样的，我们可以将它理解为一种没有图形界面的，具有启动能力的，用于监控其他类(用Target Package声明)的工具类。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;3、Espresso&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;自动化测试使用Android的Instrumentation API，这些API的调用在一个与UI线程不同的线程中运行，因此，使用自动化方法测试用户界面会导致严重的并发问题，进而产生不一致不可靠的测试结果。Google对这个问题的解决方案是Espresso，它是一个测试框架，能够使UI测试在多线程环境中安全地运行，并移除了关于编写测试的大部分样板代码。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;二、测试应用&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;AndroidJUnit基于JUnit，使得我们既可以在JVM上运行本地单元测试(local unit tests)，也可以在Android设备上进行仪器测试(instrumented tests)。测试代码的位置取决于您要编写的测试的类型。Android Studio 为以下两种测试类型提供了源代码目录（源集）：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;本地单元测试&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;位于 module-name/src/test/java/。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;这些测试在计算机的本地 Java 虚拟机 (JVM) 上运行。当您的测试没有 Android 框架依赖项或当您可以模拟 Android 框架依赖项时，可以利用这些测试来尽量缩短执行时间。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在运行时，这些测试的执行对象是去掉了所有 final 修饰符的修改版 android.jar。这样一来，您就可以使用 Mockito 之类的常见模拟库。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;仪器测试&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;位于 module-name/src/androidTest/&lt;/p&gt;&lt;p&gt;java/。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;这些测试在硬件设备或模拟器上运行。这些测试有权访问 Instrumentation API，让您可以获取某些信息（例如您要测试的应用的 Context）， 并且允许您通过测试代码来控制受测应用。可以在编写集成和功能 UI 测试来自动化用户交互时，或者在测试具有模拟对象无法满足的 Android 依赖项时使用这些测试。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;由于仪器测试内置于 APK 中（与您的应用 APK 分离），因此它们必须拥有自己的 AndroidManifest.xml 文件。不过，由于 Gradle 会自动在构建时生成该文件，因此它在您的项目源集中不可见。您可以在必要时（例如需要为 minSdkVersion 指定其他值或注册测试专用的运行侦听器时）添加自己的清单文件。构建应用时，Gradle 会将多个清单文件合并成一个清单。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;当您新建项目或添加应用模块时，Android Studio 会创建以上所列的测试源集，并在每个源集中加入一个示例测试文件。您可以在project窗口中看到他们，如图1-1所示：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.2992125984251968&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8AvTEJJLWysouJddWHDjsfTZ7POZI7r6Wgaia8BJZZFiaibiaib4Hxd5vvejQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;508&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span&gt;图1-1&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;添加一个新测试&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在写单元测试之前，务必确定gradle中做好相应的配置。如图1-2所示：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.669735327963176&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8AxoqdVibna0n1rEwibXCERcUicysVoicegy4Qf8FmfX1u9Dg0XzyAYib42yg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;869&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span&gt;图1-2&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;接下来就正式入门啦，表激动，一步步来会很简单哦～&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1、创建一个本地单元测试&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;第一步 ：打开包含您想测试的代码的 Java 文件。如Calculator.java。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Calculator&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;sum&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; b&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;substract&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; b&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; a - b;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;divide&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; b&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; a * b;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;multiply&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; b&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; a / b;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;（滑动可&lt;/span&gt;&lt;span&gt;查看）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;第二步：点击您想测试的类或方法，然后右击如图2所示，或按 Ctrl+Shift+T (⇧⌘T)。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.8373751783166904&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8AVqMpr3v3zuZqViajYaib929jmTW0P68WtHW7aaXUqWWXVEThGTZML58g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;701&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span&gt;图2&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;选择create test如图3所示，并选择setUp/@Before和需要测试的方法，然后点击OK。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.8794964028776978&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8Am6jMiaBxtCibDbxBDwdf0DzqznlTPYaszicSKz7TbRanSCpj9icu7BdGEw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;556&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span&gt;图3&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在 Choose Destination Directory 对话框中，点击与您想创建的测试类型对应的源集：androidTest 对应于仪器测试，test 对应于本地单元测试。然后点击 OK。如图4所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.8006329113924051&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8AZQaA6A69A920iap6AuaylojOpl0lhVlicM1usu8RbRFt4j9DK1zI7nrQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;632&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span&gt;图4&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;这时在module-name/src/test/java/下出现了CalculatorTest.java。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;CalculatorTest&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; Calculator mCalculator;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Before&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mCalculator = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; Calculator();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;assertEquals(&lt;span class=&quot;code-snippet__number&quot;&gt;6&lt;/span&gt;d, mCalculator.sum(&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;d, &lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;d), &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;substract&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;assertEquals(&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;d, mCalculator.substract(&lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;d, &lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;d), &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;divide&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;assertEquals(&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;d, mCalculator.divide(&lt;span class=&quot;code-snippet__number&quot;&gt;20&lt;/span&gt;d, &lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;d), &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;multiply&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;assertEquals(&lt;span class=&quot;code-snippet__number&quot;&gt;10&lt;/span&gt;d, mCalculator.multiply(&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;d, &lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;d), &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;（滑动可&lt;/span&gt;&lt;span&gt;查看）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;此时选中方法名，右击run&#x27;method()&#x27;。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.1453154875717018&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8A8YC7ibPcX2TeGUichqXs1pc4aPicmCN9JWfaqoMvmFzXw1yOvBOfmlMvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;523&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span&gt;图5&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;于是一个本地单元测试就完成啦，是不是比较简单呢？&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;2、创建一个Espresso测试&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在创建测试之前，我们建立一个待测试的TestActivity.java，添加一下简单的交互。在EditText中输入任意字符串，点击Button在TextView中显示出来，如图6、7所示：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5302114803625377&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8AbSLgPd70QIyuf4lI4wiboZSbhhegFEYVCeT0IxYPyDXKssKPQtjHDCg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;662&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span&gt;图6&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5132192846034215&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8Aq7IG95nm8cL5qgkStLXBbib7eSEBdFElM3KibUiaUByhA6FbibiaNPzticTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;643&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span&gt;图7&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;为了照顾到更多小伙伴，这里尽量写的细点，对应的Activity／xml文件如下所示：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; android.support.v7.app.AppCompatActivity;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; android.support.v7.widget.Toolbar;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; android.view.View;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; android.widget.EditText;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; android.widget.TextView;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;TestActivity&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;View&lt;/span&gt;.&lt;span class=&quot;code-snippet__title&quot;&gt;OnClickListener&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; TextView textView;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; EditText editText;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;setContentView(R.layout.activity_test);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;setSupportActionBar(toolbar);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;init();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;textView = (TextView) findViewById(R.id.textView);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;editText = (EditText) findViewById(R.id.editText);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;findViewById(R.id.btnText).setOnClickListener(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; id = view.getId();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (id == R.id.btnText) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;textView.setText(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Hello, &quot;&lt;/span&gt; + editText.getText().toString() + &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;（滑动可&lt;/span&gt;&lt;span&gt;查看）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;xml&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;android.support.design.widget.CoordinatorLayout&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;xmlns:android&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;xmlns:app&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://schemas.android.com/apk/res-auto&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;xmlns:tools&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:fitsSystemWindows&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;tools:context&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;com.example.testing.androidtest.TestActivity&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;android.support.design.widget.AppBarLayout&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:theme&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@style/AppTheme.AppBarOverlay&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;android.support.v7.widget.Toolbar&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@+id/toolbar&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;?attr/actionBarSize&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:background&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;?attr/colorPrimary&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;app:popupTheme&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@style/AppTheme.PopupOverlay&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;android.support.design.widget.AppBarLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;RelativeLayout&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;app:layout_behavior&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@string/appbar_scrolling_view_behavior&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;TextView&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@+id/textView&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@string/hello_world&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;EditText&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:hint&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Enter your name here&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@+id/editText&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_below&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@+id/textView&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;Button&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:id&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@+id/btnText&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;match_parent&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;android:layout_below&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@+id/editText&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;RelativeLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;android.support.design.widget.CoordinatorLayout&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;（滑动可&lt;/span&gt;&lt;span&gt;查看）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;做完以上工作后，我们一起来创建并运行Espresso测试。在module-name/src/androidTest/java/下创建TestActivityInstrumentationTest.java&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;测试类通过AndroidJUnitRunner运行，并执行button的onClick(View)方法。下面将逐行解释都做了什么：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;首先，找到ID为editText的view，输入Peter，然后关闭键盘；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;接下来，点击Hello world!的View，我们既可以使用ID来找到一个控件，还可以通过搜索它上面的文字来找到它；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;最后，将TextView上的文本同预期结果对比，如果一致则测试通过；&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;你也可以右键点击域名运行测试，选择Run&amp;gt; TestActivityInstrumentationTest...如图8所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.0371517027863777&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8AsI9v0XVI98aicxO9Gsy1SKjvpDXaLiaOMu5GLXsYGicIzIxmlExTJESGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;646&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span&gt;图8&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;这样就会在模拟器或者连接的设备上运行测试，你可以在手机屏幕上看到被执行的动作（比如在EditText上打字）如下视频所示。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.765625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8AR1AYx4pD5edlDaq2sF62On7uMIHViayswJagjWVmZr9icF2WDD05huTA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;320&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;最后会在Android Studio输出通过和失败的测试结果。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-backh=&quot;82&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.14112903225806453&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt5gTibshfsiaELf9RYyrSKB8ADNPeicfia5bYic2aLkmyKfRzwO5j6aKQ5emnUOBWtVKVuXg0nXfLfuia3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1240&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（&lt;span&gt;图9&lt;/span&gt;）&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;最后恭喜你，你也入门了。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;三、参考&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://developer.android.com/training/testing/index.html#start&quot; textvalue=&quot;https://developer.android.com/training/testing/index.html#start&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;https://developer.android.com/training/testing/index.html#start&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://developer.android.com/training/testing/start/index.html&quot; textvalue=&quot;https://developer.android.com/training/testing/start/index.html&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;https://developer.android.com/training/testing/start/index.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>