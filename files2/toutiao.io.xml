<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>56fe9e0fc9490a806db4508a896bc879</guid>
<title>关于中台的思考和尝试</title>
<link>https://toutiao.io/k/t4shd8f</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section class=&quot;article-body&quot; data-redirect-url=&quot;https://www.linkedin.com/login?session_redirect=https%3A%2F%2Fcn%2Elinkedin%2Ecom%2Fpulse%2F%25E5%2585%25B3%25E4%25BA%258E%25E4%25B8%25AD%25E5%258F%25B0%25E7%259A%2584%25E6%2580%259D%25E8%2580%2583%25E5%2592%258C%25E5%25B0%259D%25E8%25AF%2595-dongbai-guo-%25E9%2583%25AD%25E4%25B8%259C%25E7%2599%25BD-&quot;&gt;&lt;p&gt;这周末在QCon上海做关于架构师的独立思考的主题演讲， 其中用中台做案例。 因为演讲时间有限， 关于中台的思考没办法讲得非常透彻， 这里就多花时间描述一下， 做为补充。也期望能与大家形成思想碰撞。&lt;/p&gt;&lt;h2&gt;1.  中台的定义&lt;/h2&gt;&lt;p&gt;围绕中台的争议非常多。 但是往往争议的原因是连中台这个概念都完全没有达成共识，是毫无意义的争吵。  那么我们的讨论先从定义中台这个概念开始。 定义中台我认为可以有两个角度， 一个是从中台本身的价值和出发点来的： &lt;strong&gt;中台是在多个部门之间共享的开发资源所提供的业务能力， 数据能力和计算能力的集合。&lt;/strong&gt;另一个定义从中台的相对定位来的： &lt;strong&gt;前台是面向终端用户的一组业务能力。 业务中台是对前台应用的抽象， 提供多个前台业务之间共享的业务逻辑，数据和计算能力。 &lt;/strong&gt;我想特别强调这个定义是相对中性的， 我们能够通过这个定义区分什么东西是中台，什么不是中台。 有的中台定义严格来说不是定义， 比如说 “中台是提升效率和加速业务增长的一种工具。” “中台是我们战略目标。” “中台就是一个革命性的设计。” 似乎不做中台就成了反革命一样，就是落后生产力的代表。 其实中台本质上是一个对业务能力的抽象和共享的过程，一直存在，也谈不上革命。 甚至业务中台这个概念也没有那么新： Oracle Fusion Middleware 早在2006年就发布了， 覆盖了多个包括企业智能，团队协作，内容等多个领域。&lt;/p&gt;&lt;p&gt;我想特别强调中台和前台的定义差别。 &lt;strong&gt;前台服务单个业务，&lt;/strong&gt; &lt;strong&gt;目标是就是这个业务的增长。 &lt;/strong&gt;前台必须紧贴业务做好差异化。 前台的定位要考虑到竞争环境，目标客群， 业务成长阶段，运营人员能力， 人才供给，监管环境等因素。前台要有自己的技术内容， 定制流程， 流程对接和个性化数据应用。 &lt;strong&gt;中台服务整个集团&lt;/strong&gt;，&lt;strong&gt;目标往往是降低成本， 加强管控， 或者是扩大规模优势 。&lt;/strong&gt; 中台的定位在以集团利益最大化的前提下最大化服务前台业务的需求。 中台有自己的技术实现， 研发流程， 和数据标准。 而&lt;strong&gt;后台是不具备任何业务语义的基础计算能力。 &lt;/strong&gt;下图就是对这种定位的一个示意：&lt;/p&gt;&lt;h3&gt;1.1 对待中台的两种极端态度&lt;/h3&gt;&lt;p&gt;当前对中台的看法主要有两种极端，一种是认为中台是一个完全错误的方向， 要紧急刹车， 另一种是认为中台就是技术终局， 是业务增长的不二法门。 我们先分别讨论一下这两种观点。 我开始讨论QCon的演讲话题的时候， 中台只是多个备选话题之一， 但是当我意识到大家对待这个话题非常极端的时候， 我才觉得有必要把这个话题讲通讲透。 最终选择以中台做为架构师独立思考的能力的一个案例。这是题外话。&lt;/p&gt;&lt;p&gt;先说中台是否是个完全错误的方向？ 想思考清楚这个方向是否错误， 我们可以先看到中台最初的动力来自哪里？  不论是甲骨文还是后来的阿里， 其实本质动因是一个大公司内部的大业务呈军阀割据现象，导致多条业务线重复造轮。由此而衍生出其他的问题， 比如说团队之间内耗严重；小业务无资源， 增长乏力；整个公司数字资产不统一， 损失机会成本； 业务线也不能对核心系统做打磨，业务线不稳定。   因为这些原因， 所以阿里的高管们就以美国海军陆战队和Supercell的组织形式为启发， 做了“大(业务)中台， 小(业务)前台”的策略。 这里先不谈中台是否能解决这些问题， 或者是说战略启发是否正确， 但是毫无疑问的是， 中台想解决的问题既没有过时， 也依然正在不同的公司里发生， 所以这些问题也必须解决。 也就是说从问题定义角度来说， 中台是个完全正确的方向。&lt;/p&gt;&lt;p&gt;那么中台是否是这些问题的完美解决方案？ 中台是不是万能药？我们已经知道答案是否定了。 现在看来中台的解决方案至少有以下几个缺陷：&lt;/p&gt;&lt;p&gt;1.   &lt;strong&gt;对创新的遏制&lt;/strong&gt;： 一个被完全中台化的业务导致集团内部过分分工， 任何前台业务都被认为是中台能力的线性组合。  举个例子， 有的公司会有接近或超过千人的供应链中台，搜索广告中台，内容中台等等， 而多数业务前台少则几个人，多不过几十人。 前台团队任何一个人哪怕是全职和一个中台域对接， 也无法理解该域的全貌或者是跟得上这个中台的演变。 这意味着前台业务完全无法在这些中台相关的领域做创新。 本来的创新业务变成无从创新， 当初的动力变成了中台的最大的诅咒。 有说法说，一个业务靠拖拉拽就能编排出来了， 这不是创新是什么？ 事实证明这种创新完全无用。 没有任何一个投资人会把自己的钱投到一个可以被大公司拖拉拽出来的商业模式的。 真正的创新不是现有能力的线性组合。      &lt;/p&gt;&lt;p&gt;2.   &lt;strong&gt;反人性&lt;/strong&gt;：中台自身的场景往往缺乏前瞻设计 ，是对现有场景的抽象。 而当某个创新在一个前线业务线孵化出来之后，中台团队会通过强制收编该能力来扩大自己的能力， 同时强迫前台团队下线一个他们研发了很久的创新。 这种行为往往造成精英人才的流失， 使得本来就受到遏制的前台创新变得更为匮乏。  &lt;/p&gt;&lt;p&gt;3.   &lt;strong&gt;过渡设计&lt;/strong&gt;： 中台经常以最全的最复杂的实现来应对任何一个简单的应用场景。大量成熟行业和强监管环境下的需求被带入到了创新业务中。 在带来了大量的运营复杂性的同时增加了用户（买家，卖家，本地运营）的学习难度。 这就是我们常讲的膨胀软件(Bloatware): 巨大， 复杂， 缓慢，低效。&lt;/p&gt;&lt;p&gt;4.   &lt;strong&gt;丧失对客户心智的追求&lt;/strong&gt;： 中台团队的产品和研发的核心技能在于抽象和降本。 前台业务的核心能力在于对商业机会的捕捉和新商业机会的创造。 这是两种完全不同的技能，往往对应着完全不同类型的人才。一个长期在多个业务中间找共性来降本的人是不会专注在最大化前台业务增长的。&lt;/p&gt;&lt;p&gt;之前做中台的公司往往被以上一个或者多个问题所困扰。 也就是说中台事实上不是完美的。 为什么呢？&lt;/p&gt;&lt;h2&gt;2.1 思考中台的本质&lt;/h2&gt;&lt;p&gt;我们先思考一下中台的本质。中台本质是把一些分散的重复的开发工作集中起来， 通过共享同一个研发团队来提升不同业务线之间的共性， 也就是通过抽象和统一来获取增量价值。  具体的增量可以分成以下几类：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.  以零成本研发加速上线&lt;/strong&gt;： 对完全可以复用的标准化功能集中开发，未来以低研发成本上线， 比如说一些无状态的计算能力，类似SDK。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.  提升业务稳定性&lt;/strong&gt;：对产品差异不大的领域通过集中研发运维而获取更高的业务稳定性。 这样一个团队开发的底层服务能够同时服务多个业务场景， 聚合所有的流量来加速积累。 同时研发同学也通过更多的场景来加速打磨设计。 常见的领域是会员，营销， 交易，资金等服务。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3.  加速技术和业务能力扩散&lt;/strong&gt;：把整个集团的能力尽量跨BU复制。这包括两种类型，一种是类似SaaS服务的场景，比如说Chatbot，直播，内容等领域，另一种是类似ISV的场景，由一个中央的团队同时提供研发，对内服务和运营，比如说安全，风控，财务，人力资源等。 &lt;/p&gt;&lt;p&gt;&lt;strong&gt;4.  统一数据资产 &lt;/strong&gt;：在集团内部统一数据标准，最大化数据复用， 把一个场景积累的数据优势应用到其他的业务场景中去，逐渐建设企业的数据壁垒。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;5.  集团层次的资源高效利用&lt;/strong&gt;：把部分资源中央化，变成全集团资源， 比如说商品中台不但包括商品库， 也包括商品质量控制体系，背后的货源，相关货源的价格以及服务竞争力。 而商家中台，不仅仅是包含商家的信息，还包括商家的合作意愿和对集团品牌的信任，从而使得商家更愿意和一个新孵化的初创业务合作。集团真正想跨BU复用的是从一个大业务孵化而来的竞争力，而不是信息本身。 &lt;/p&gt;&lt;p&gt;从研发和管理难度来说从１到５逐渐变难，而带来的增量价值也依次变得更大。&lt;/p&gt;&lt;p&gt;从这个本质来看， 那么中台似乎就是完美的， 那么之前提到的不完美有从哪里来的呢？ 我们有必要更深度的思考一下。 &lt;/p&gt;&lt;h3&gt;2.1.1 中台的适用范围&lt;/h3&gt;&lt;p&gt;首先我们思考一下上面的要求， 我们把这些要求归类成六类， 其中第一种场景细分成低成本上线和加速上线两个类别， 那么这些类别有以下的共同特征：&lt;/p&gt;&lt;p&gt;0.  低成本上线： 同一个功能模块在多个场景中被使用， 要求该能力的接口确定性高。&lt;/p&gt;&lt;p&gt;1.  加速上线： 同一个基础能力不需修改或者简单修改即可上线， 也就是模块化支持，要求高API确定性和好的功能通用性。&lt;/p&gt;&lt;p&gt;2.  提升稳定性： 同一个业务能力持续打磨， 要求需求同时具备高的接口稳定性和好的跨业务线通用性。&lt;/p&gt;&lt;p&gt;3.  加速能力扩散： 基础业务能力可以跨业务线模式， 要求该能力具备比较好的通用性, 可以在多个业务线之间共享。&lt;/p&gt;&lt;p&gt;4.  统一数据资产： 数据模型可以在多个业务线之间统一， 对功能的通用性要求高， 且业务需求相对稳定。&lt;/p&gt;&lt;p&gt;5.  集团资源高效利用：业务能力共享， 不仅仅是技术资源， 其实是业务能力有高通用性且需求稳定。&lt;/p&gt;&lt;p&gt;下图把这几个特征分别放在一个四象限图里面。这四个象限的横轴代表技术演化稳定性，竖轴代表功能的通用性。中台的优势领域在第三象限，这个象限技术具有高确定性，业务功能通用。第二象限属于比较稳定但是不通用的小众行业。第四象限属于普遍流行但是高速变化的领域，比如说内容和服饰或者端上的交互。而第一象限属于创新业务，不但定制化程度高且快速演化，比如说面向垂直行业或者初创技术。也就是说：&lt;strong&gt;中台的使用范围是有限的，仅仅限于技术演化相对慢且功能通用性高的场景中。&lt;/strong&gt;这是我们得出的第一个结论。过往中台的失败案例也往往集中在把中台强推到创新业务中的情况。 &lt;/p&gt;&lt;h3&gt;2.1.2 中台的组织机制&lt;/h3&gt;&lt;p&gt;那么为什么即便是中台在相对优势的领域我们也没有取得类似Supercell那样的效率呢？ 他们不过是100~200人便撑起一个独角兽， 甚至是跨多个大洲的超级独角兽？ 值得一提的类似Supercell的中台并非个案， 仅仅百万人口的小国爱沙尼亚就有4个独角兽， 他们的中台团队也不过是百人左右。 那么国内的中台为啥动辄就是成百上千人的研发团队呢？我有幸深度接触过芬兰和爱沙尼亚的几家独角兽， 我觉得导致这个巨大差异的根源在于研发文化和资源环境。这两个国家由于历史和文化传统，造就了崇尚简约，尊重原创，和组织扁平的研发文化。 而我们国家的高科技从业人口全球第一， 过去的十年间每年又有大量的新从业者。 这些新从业者又普遍有大厂情节， 期望为一个技术品牌相对比较高且收入稳定的公司工作。 也就是说大厂同时具备了孵化中台的条件且有源源不断的对成长没有太多诉求的劳动力。 这其实是不断重复造轮的必要条件。  &lt;/p&gt;&lt;p&gt;当前几乎所有的大厂都有同样的晋升和薪酬激励机制，就是一个人管理的研发越多， 层级越高， 收入也越高。这种机制有个巨大的弊端， 一个奖励组织膨胀的机制必然会带来组织膨胀。而组织膨胀的最终因为康威定理的作用也必然导致膨胀的系统， 也就是前面提到的膨胀软件(Bloatware)。 这个就是不断重复造轮的充分条件。  &lt;/p&gt;&lt;p&gt;大量的劳动力供给和鼓励膨胀的机制合在一起， 结果就是团队上下不断加速重复造破轮子。 下图就是对这个过程示意。 某个研发经理从状态1开始， 带领一个小团队。他这个时候他对应的层级是2， 收入是3。某一天， 他启动一个大项目， 给这个项目一个冠冕堂皇的名字， 比如说“拿破仑项目”。 他的团队急速膨胀到4。 项目上线时间一到， 不论完成与否质量如何， 他立即对外发战报， 做宣讲， 我们取得了“滑铁卢大捷！”。 紧接着他的上级内举不避亲， 把他从层级2提拔到5， 收入也相应的从3调整到6。 然后周而复始， 他再启动“拿破仑二世项目”继续开发膨胀软件。 很快他的“成功”也很快被疯狂复制。公司变得臃肿迟缓。&lt;/p&gt;&lt;p&gt;这个现象当然不局限于中台， 整个公司都在膨胀。 但是这种膨胀对中台而言却是灾难性的。 一个膨胀的业务线伤害到自己， 但一个膨胀的中台放缓的是整个集团。&lt;/p&gt;&lt;p&gt;所以我们有了第二条重要结论：&lt;strong&gt; 中台的建设要有与之匹配的组织文化机制。 &lt;/strong&gt;&lt;/p&gt;&lt;h2&gt;3. 寻找中台的合理组织机制&lt;/h2&gt;&lt;p&gt;那么什么样的机制才是一个合理的组织文化机制呢？ 很遗憾我自己也不知道正确答案。 但是我们或多或少可以从过去的失败中寻求教训，从历史中寻找启发。&lt;/p&gt;&lt;p&gt;先来思考一下过去的失败。 我归纳下来大致有这么几个根因：1. 对哪个团队做中台或者哪个人来设计中台的决策是个自顶而下的中央决策过程。 做中台的人没有所必须的抽象能力和业务理解，类似过去封建王朝的分封的过程。受封的仅仅是生在帝王家， 有没有治理和决策能力不重要。  2. 中台的推行机制往往是个掠夺的过程。对业务线的创新直接复制， 不尊重发明者的知识产权和劳动。中台所到处，寸草不生。 3. 中台能力一旦发布， 独家专供， 哪怕功能不完善， 设计不合理也不允许业务团队复制或分支。 4.  中台为了做规模强制向业务线推行，业务线被迫削足适履，消耗严重。每次中台升级小的BU更是叫苦不迭，故障频发。&lt;/p&gt;&lt;p&gt;其实这几个问题并非中台所独有。上面的四个问题其实和封建社会的分封机制类似，本来应该有市场选择,良性竞争和创新来完成的事情变成了强权和行会。其实这个问题是有解决方案的。 伴随工业革命带来的人类劳动力巨大释放（具体见Berkley 大学De Long 教授对人类文明史的人均GDP分析）背后也有完整的机制，这些机制就是我们可以借鉴的出路：1. 机会配置由市场决定。 2. 尊重知识产权和创新， 保护参与者的创新意愿。  3. 通过自由准入维持市场活力。4最终由规模效应形成统一的事实标准。&lt;/p&gt;&lt;p&gt;虽然我还不能确定是否这是完整且合理中台机制， 但是我们的思想实验至少给了我们避免过去的失败的一些希望：1. 谁来做中台，谁的设计才是真正合理的中台设计由市场决定。 2. 尊重原创， 通过溯源和产权机制保护创新。  3. 自由准入， 不做独家专供。4 不强制推行， 设计统一是演化的结果， 而不是行政命令。&lt;/p&gt;&lt;h2&gt;4. 中台的演进机制探索&lt;/h2&gt;&lt;p&gt;不过哪怕有个这个机制， 我们还是要认识到中台天然的局限性， &lt;strong&gt;中台不是万能的， 它仅仅合适在高确定性和高通用性场景下创造增量价值。&lt;/strong&gt;没有合理的期望设定其实还会让迭代过程漫长而艰苦。 在一个竞争环境下， 错误的目标设定不但会带来大量的资本和时间消耗，而且对员工士气打击也很大， 甚至会最终毁掉一家公司。&lt;/p&gt;&lt;p&gt;从公司层面来看， 中台要降低成本， 但是抽象带来的增值是有天花板的。 抽象的终局是个零和游戏， 就不过是把前台的事情交割给中台去做。 没有价值创造，只有权力转移。 另外，中台要加速业务迭代也有逐渐减少的边际收入。  一个健康的行业中需求是永远进化的，不存在超前的完美设计为未来不断创造价值。中台在业务起初产生最大的价值，其后逐渐衰减。&lt;/p&gt;&lt;p&gt;从一个团队或者是BU角度来看，小BU期望通过中台带来业务增长，但事实上大BU的需求总是优先， 会占用几乎所有的中台资源。 小BU的需求永远排在第二位，会饿死在等待的途中。 另外中台靠合理的设计创造价值， 我们期望中台的设计是最优的， 但是真正有能力的架构师不一定在你所依赖的中台团队。 你接触的中台边界不一定合理。 如果中台很复杂， 跨团队的沟通也会变得更艰难。 中台创造的增量价值就越小了。&lt;/p&gt;&lt;p&gt;从个人来看，每个人都期望能力提升， 但是擅于发现机会也擅于抽象的人不一定在中台团队。 每个人都期望职业高速发展， 但是高增长的团队往往是高风险的前台团队，而高稳定的中台团队往往变化缓慢。 所以没有不论中台还是前台团队， 人才的配置不一定是最优的。&lt;/p&gt;&lt;p&gt;知道了这些局限性， 我们才能对中台设定合理的期望。 有了合理的期望， 我们还需要建设合理的迭代机制。 这里我们还是可以借鉴其他领域的成功路径。 我认为对中台机制探索应该向任何科学探索一样， 是个从假设到实验， 到结果分析， 到修正，最终到正确结论的过程。  我们从相对合理的中台诉求出发， 做合理的机制设计， 通过实施，到效果验证，然后对机制不断修正， 来最终得出逼近真理的一个机制。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;5.  &lt;/strong&gt;车好多的中台实践&lt;/h2&gt;&lt;p&gt;在分享车好多的中台实现机制之间， 我想先讲一下我为什么要分享车好多的机制。 每一个机制设计和迭代都是一个漫长的过程。 虽然我们刚刚开始， 但是我把我们中台的机制完整的分享出来，也欢迎大家采用， 甚至是加入到我们的建设中来。 我也想听到反馈， 尤其是你们已经发现机制漏洞的地方，那么我们就能够共同进步。&lt;/p&gt;&lt;h3&gt;5.1 为什么考虑在车好多做中台&lt;/h3&gt;&lt;p&gt;首先，考虑在车好多做中台的原因和之前提到的几个原因类似： 加速技术能力和业务能力扩散，整合数据资产，最大化公司资源利用。 那么具体什么时间启动有这么几个考虑， 第一和下图有关， 就是中台启动之后的复杂度的变化情况。 首先， 随着时间中台服务的调用频次逐渐上升， 往往呈指数上涨， 其次就是BU数目逐渐上升， 最后就是变更频次逐渐变少。 太早上线其实价值不大， 因为极端情况就是一两条业务线之间做复用， 中台带来的合力还抵不上增加的重构成本， 沟通成本和人力开销。这一点上车好多有8条不同的业务线， 有了足够的场景复杂度和中台增值空间， 但是也不至于像某些公司有成百条业务线，建设难度非常大。  另外车好多的业务天生是低频业务， QPS低于传统电商３～４个数量级， 所以做中台有绝对优势。 最后车好多的主流业务和新兴业务都在不同层次的迭代当中，所以我们的变更频次比较高， 对做中台也是利好。 &lt;/p&gt;&lt;p&gt;以上的三个因素， 分别是决定中台的研发复杂度的核心指标，我们可以大致建模为中台变更复杂度=（QPS*Count(BU)/变更频次)。任何一个服务， QPS越低，依赖这个服务的BU数越少，迭代的越频繁， 那么变更的难度越小， 变更带来的风险越小。 如下图所示。 在中台建设期间， 由于自动化测试能力还不够，接口设计不完善， 团队同学的运维和沟通能力也还在成长中， 那么风险上升就会相对比较快。 等到了中台建设相对完善了。风险的增长和迭代难度就相对变缓。   车好多的优势是QPS增长不快， 原因是汽车交易本来就是个低频事件， 全年全国不过是千万量级，和传统电商完全没办法比， 而车好多自生的业务迭代速度非常快， 变更频繁， BU数增长很慢， 也就是车好多的中台变更复杂度随着时间的变化非常慢， 留给车好多的中台建设时间相对就比较充裕。 另外车好多的最大的两个板块新车和二手车有很大的相似性， 所以建设中台可以从这两个板块的最相似业务线出手来打造能力， 这也是优势。&lt;/p&gt;&lt;p&gt;但是车好多的中台也有自己的挑战：首先三大板块新车，二手车和车后的差异大，而且业务所处的阶段不一样， 有的在做增长，有的在做转型，有的在做赛道探索。所以同样有前面第二节里提到的中台适用范围的挑战。 另外整个产业互联网行业还不同于传统互联网，我们的产品技术还在从生产工具到核心生产力的过渡过程中。 也就是说技术的投入是有限的，技术带来的增量价值也待验证， 所以研发投入不能过度超前。 最后一个挑战是这几大板块对应着数万亿的线下市场，所以车好多的业务与线下高度结合， 流程往往以天计算， 因此变革要和行业的适配能力和期望相符。 &lt;/p&gt;&lt;h3&gt;5.2车好多的中台定位和组织文化保障&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;定位 – &lt;/strong&gt;车好多中台要解决的问题集中在集团高确定性和高通用性领域的技术和数据共享，我们不对创新业务探索加速。 车好多中台是技术产业链的规模化之后的分工， 它的核心是对研发成本的优化和某些计算和运营资源的集中化管控和共享。&lt;/p&gt;&lt;p&gt;在组织保障层面上， 我们以加速业务迭代为目标， 通过市场机制加速中台的进化，我们通过内部开源且允许分支的方式加速进化和保障自由准入。我们鼓励原创，以物质，奖金，股票和晋升激励和固定人员投入来放大团队原创的动力。&lt;/p&gt;&lt;p&gt;在文化保障上，技术上我们关注设计, 崇尚简约, 鼓励创新。 对中台保持一个客观的态度， 中台回报不一定为正，也要迭代进化甚至消亡。 中台既不是管理方式，也不是价值观。我们尊重学术自由， 中台设计没有权威， 逻辑面前人人平等。&lt;/p&gt;&lt;p&gt;下图是车好多的中台构成， 所有的业务线共享数据，计算，研发效能，和企业效能中台， 业务线对业务中台形成部分依赖， 算法能力我们还没有中台化， 更多是个共享的组织， 而不是共享的技术能力， 所以用虚线表示。  每个中台域的研发范围如图所示。 业务线则按需定制， 我们通过控制业务线的研发人数防止膨胀软件。&lt;/p&gt;&lt;h3&gt;5.3 对中台软件的要求&lt;/h3&gt;&lt;p&gt;以前各家公司开发中台， 很少对中台软件做出系统性要求。 中台团队想交付什么就交付什么。 这些软件的质量参差不齐， 往往是项目的时间节点一到， 中台团队就三呼完美，那时候就有什么算什么， 业务团队如果稍有抱怨， 未来的需求就免不了受打压。为了避免这种情况， 我们对中台的软件做了一个定性要求。 这些定性要求又可以大致分成两类， 一类是必要条件， 一类是充分条件。&lt;/p&gt;&lt;p&gt;先说必要条件： 1. 中台软件必须具有可解释性， 也就是中台能力可以被分解成一组可以被完整描述的行为。 这里特别要强调完整描述， 有些团队做中台， 先不说自己能做什么， 而是先占领一个关键词之后问你想要什么？你想要什么我们就可以做什么。  这个就是典型的圈地心态。对做什么功能，解决什么问题完全没有任何前瞻思考， 结果就是越做越无序， 前台团队跟着变得越来越低效。 2. 中台必须具备可验证性，也就是说中台和计算的结果可以验证， 也就是中台的交付的功能可以确定性的被证伪或者被证真。   这是独立测试和边界稳定需求， 很多中台是从业务线里划分出来的。 因为需求繁忙， 往往对自己的边界也不做清晰定义， 也没有完备的自动化功能测试，更别说场景集成测试了。 哪怕有边界，也经常变动， 没有兼容能力。 这个要求就是对能力的验证和兼容性做限制， 避免中台堕入深不可测状态。      &lt;/p&gt;&lt;p&gt;再说充分条件： 1. 中台软件必须具备可隔离性，中台能力应该由多个相对独立的模块构成， 每个模块对相关实体的状态改变必须隔离在模块内部。 这个要求是确保前台对中台可以做到最小化。 而且对中台的依赖可以局限在前台的个别业务模块中， 这样对某个中台的依赖不会带来整个系统的稳定性降低。   这个要求可以防止中台过渡侵入到前台，无序扩张。 2. 中台的模块必须可以被局部替代，中台的各模块加载独立，且个别模块所封装能力可以被等价接口所替代而不影响剩余的模块功能。 这个要求和前面可解释性/可验证性一起就可以允许业务线对中台形成部分依赖， 而不是只要依赖某个中台的一个功能， 就必须所有功能全依赖，永远全家桶。 3. 中台能力可以被第三方扩展和传播。 也就是说中台的某个模块可以被前台团队重写后发布给全集团使用。 这样可以避免中台能力仅仅独家定制，创新被遏制在远离前台的后台团队。&lt;/p&gt;&lt;p&gt;为什么说前面两个要求是必要条件呢？ 因为他们合在一起就是要解决中台提供能力的可封装性和可用性， 也就是说一个前台团队根据能力的描述可以决定是否使用一个中台功能。 而后面三个是充分条件， 就是中台提供的能力前台业务线也可以选择不用， 或者部分使用那些有价值的模块。  这样中台既可用， 亦可弃， 才满足了中台做为一个通用能力加速业务线迭代的充分必要条件。&lt;/p&gt;&lt;h3&gt;5.4 车好多中台的设计原则&lt;/h3&gt;&lt;p&gt;中台设计和使用上我们有如下原则： 1. 业务优先。 多数时候由业务线同学决定架构选型， 而不是中央决策。 2. 反膨胀软件。 对中台API稳定性和数据模型兼容性做强制要求， 避免中台膨胀过快。  3. 避免复杂依赖。 整个中台要求扁平化微服务化设计，降低依赖深度，加速功能发现。 4. 模块化开发。 各模块有明确边界，独立文档，可独立设计/发布/被替代/升级。 模块尽量以原子服务模式向往透出，模块间依赖主要是服务依赖。&lt;/p&gt;&lt;p&gt;中台的具体边界和抽象深度是个非常有挑战的问题，往往是个平衡，没有对错。 对此我们做了&lt;strong&gt;设计追求&lt;/strong&gt;的建议。 就是期望各中台团队在交付压力允许的情况下最大化的做到以下两点： 1. 边界合理： 寻找中台的正确边界，平衡研发成本和业务迭代速度。 中台的边界应当使得API最简化。   2. 中台对多个业务的抽象逼近最优， 模型在信息量最大的情况下能够保持相对稳定。下面两张图就是个具体的例子， 前一个模型简单， 相对稳定， 但是在这个模型下能够提供的服务粒度粗。 第二个模型更复杂， 这个模型下能够提供相对更细粒度的服务。  后者能够适用多个车好多业务线的现有模式， 且信息容易更大，所以在当前的业务矩阵之下是个更好的模型。  &lt;/p&gt;&lt;p&gt;5.5. 车好多的中台组织和孵化机制&lt;/p&gt;&lt;p&gt;车好多之前没有中台，怎么孵化出中台来也是个挑战。 孵化中台有多个方式： 1. &lt;strong&gt;自由竞争制： &lt;/strong&gt;个人或者团队自主入场， 自主投入。代码开源，去中心化研发， 通过统一发现机制对外露出。  2. &lt;strong&gt;中央授权制&lt;/strong&gt;： 由公司做顶层决策，不做团队调整， 做项目强制统一多个技术分支。  3. &lt;strong&gt;集中孵化制&lt;/strong&gt;： 由公司做顶层决策， 对团队先做整合， 之后由该团队孵化中台。 4. &lt;strong&gt;重点扶持制&lt;/strong&gt;： 不对称的做研发人员补贴，对特定领域做引导， 加速该领域的中台建设。 视情况不同， 我们这几种组织和孵化机制都有采用。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;中台的孵化具体有如下几个平行的方向： 1. 逐步建设市场机制&lt;/strong&gt;： 由前台业务线研发做选型决策，保障业务优先。 同时通过HC管理引导最优决策，靠市场和预算驱动最经济的决策， 防止中台和前台的膨胀软件。 在考核指标上前台考核业务增长。 中台则考核前台接入成本, 前台新需求延迟, 前台定制成本和接口高稳定性。 2. &lt;strong&gt;建设自由准入能力，同时鼓励经营和创新。&lt;/strong&gt; 除了前面提到的内部开源且允许分支。 我们会逐步建设去中心化研发体系， 加速分布式创新。 同时为了鼓励中台经营， 通过控制业务线分支权利来说防止重复造轮。 3. &lt;strong&gt;人才流转策略&lt;/strong&gt;：中台和前台必须有统一的研发体系和统一人才流转机制，保持双方的活力。对有基本的能力，偏好和专业度差异的研发人才做定向培养， 支持转岗。4. &lt;strong&gt;保障业务连续性和人员稳定性&lt;/strong&gt;：对中台我们会保留一定程度的顶层设计，避免大范围技术和组织重构。&lt;/p&gt;&lt;h3&gt;5.5 关于人才&lt;/h3&gt;&lt;p&gt;最后我讲讲人才。 不论设计多么完美的机制， 最终还是要靠人来实现。 合理的机制仅仅能够避免引人误入歧途， 但是价值创造还是要靠优秀的人才。&lt;/p&gt;&lt;p&gt;我们车好多对人才的画像可以总结成两句话： 做学问要包容求真， 做人要有良知和勇气。  第一点是期望我们的人才能够保持开阔的视野， 对新事物和不同观点的包容，和不断探索寻求真正有价值洞察的欲望， 从而发现别人不能发现的机会。  第二点是希望我们的人才能够为公司做正确的决策， 不断的让正确的事情发生。 同时他也要有勇气，愿意站出来阻止错误的事情发生。我们当下虽然有一些这样的人才，但也渴望更多的这样的人才加入。 &lt;/p&gt;&lt;h2&gt;&lt;strong&gt;5.  &lt;/strong&gt;结语&lt;/h2&gt;&lt;p&gt;中台不是万能的， 但是可以在高确定性和高通用性场景下能创造增量价值。 中台应该有合理的应用场景和时间窗口， 需要用一些设计原则来约束， 也需要相应的组织机制支持。中台有自己的生命周期， 要做阶段性的重构和重定位。这就是我对中台的大致理解。&lt;/p&gt;&lt;p&gt;车好多的中台实践不是标准答案，甚至不一定正确。 我的分享是仅仅是为了带动高质量的思想碰撞， 也希望得到大家的帮助和反馈。 谢谢大家。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>cb3a8058d0a1a8fd30b5801e2d60ed92</guid>
<title>为什么要鼓励重复造轮子？| 码农周刊第 327 期</title>
<link>https://toutiao.io/k/fvbrmmu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;为什么要鼓励重复造轮子？| 码农周刊第 327 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第327期（2020-12-23）&lt;/h2&gt;
        &lt;p&gt;☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=327&amp;amp;aid=20216&amp;amp;url=http%3A%2F%2Fwww.huodongxing.com%2Fevent%2F1573487912300%3Fcoupon%3DMNZK&quot; target=&quot;_blank&quot;&gt;汇聚云计算、区块链、数据等技术顶级大咖！点击抢购&lt;font&gt;限时早鸟票&lt;/font&gt;！&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;a href=&quot;https://weekly.manong.io/bounce?nid=327&amp;amp;aid=20216&amp;amp;url=http%3A%2F%2Fwww.huodongxing.com%2Fevent%2F1573487912300%3Fcoupon%3DMNZK&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/qiniu_326.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=327&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;关注云计算、数据、区块链三大技术主题，云集十余位业内大咖和顶尖技术人。&lt;font&gt;早鸟票限时抢购中&lt;/font&gt;&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;从 Druid 到 ClickHouse&lt;/p&gt;
        
        &lt;p&gt;实战总结&lt;/p&gt;
        
        &lt;p&gt;实践验证&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;能够低成本、无侵入的收集代码覆盖率数据&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;通过它可以在异常时直接 dump 出一个迷你内存快照。快照中没有任何敏感信息，更重要的是文件非常小的同时数据也相对完整，非常适合离线分析 OOM 及其他类型异常的调查定位。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;适合新手&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;在传统的计算机科学课程中，从操作系统、编程语言到机器学习，这些高大上课程和主题已经非常多了。然而有一个至关重要的主题却很少被专门讲授，而是留给学生们自己去探索。这部分内容就是：精通工具。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;干货满满&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;关注云计算、数据、区块链三大技术主题，云集十余位业内大咖和顶尖技术人。&lt;font&gt;早鸟票限时抢购中&lt;/font&gt;&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;Service Mesh 篇&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;入门介绍&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;图文并茂&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验总结&lt;/p&gt;
        
        &lt;p&gt;结合代码&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;完整代码&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;关注云计算、数据、区块链三大技术主题，云集十余位业内大咖和顶尖技术人。&lt;font&gt;早鸟票限时抢购中&lt;/font&gt;&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;值得收藏&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;背景介绍&lt;/p&gt;
        
        &lt;p&gt;深入讲解&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;一步步教你&lt;/p&gt;
        
        &lt;p&gt;一步步教你&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;结合代码&lt;/p&gt;
        
        &lt;p&gt;适合新手&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 429587 即可&lt;/p&gt;
        
        &lt;p&gt;分享OPPO前沿互联网技术及活动&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 429344 即可&lt;/p&gt;
        
        &lt;p&gt;实时分享K8S等云原生技术、教程、资讯&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 392908 即可&lt;/p&gt;
        
        &lt;p&gt;一群靠谱的人，愿为phper带来一些值得细细品味的精神食粮&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 56197 即可&lt;/p&gt;
        
        &lt;p&gt;关注系统架构，做到实现功能、可靠、易用、高效率、可维护、可移植和优雅。&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 42200 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;本书从一些经典算法出发，为读者展示了 100 个 Python 趣味编程实例。欢迎到&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;兑换阅读。&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;关注云计算、数据、区块链三大技术主题，云集十余位业内大咖和顶尖技术人。&lt;font&gt;早鸟票限时抢购中&lt;/font&gt;&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;欢迎探讨&lt;/p&gt;
        
        &lt;p&gt;经验总结&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>66a2444b8c0cfe09080ea70bdeb36fe0</guid>
<title>Spring Boot 2 整合 OAuth2 组件，模拟第三方授权访问</title>
<link>https://toutiao.io/k/ibroeej</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;h1&gt;&lt;span&gt;一、模式描述&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.49322033898305084&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvB6ZOPaheeXAdoTJB5q98zmld3ib8vuh0kYIcymKOTocn3Fhcbkrbg4LKsukQSDFmu6cs5OEJAlx6Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1180&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;授权服务&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;验证第三方服务的身份，验证邮箱用户的身份，记录和管理认证Token，为资源服务器提供Token校验。场景：第三方网站借助用户的邮箱登录，并访问邮箱账户的基础信息，头像、名称等。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;资源服务&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;第三方服务通过邮箱账户登录后需要获取的一些信息，即理解为资源，存储邮箱账户的数据资源。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第三方服务&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;即借助邮箱用户的账户，快速登录第三个服务，免去繁杂的注册流程，有助于快速积累新用户。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;交互流程&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;第三方服务给用户开放快速邮箱登录功能，引导用户调到邮箱认证服务，通过认证后返回身份令牌到第三方服务，第三方服务携带令牌访问邮箱的资源服务，获取一些基本的邮箱用户信息。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;二、项目配置管理&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;1、案例结构&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7249283667621776&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvB6ZOPaheeXAdoTJB5q98zmtUGEhnrEPxFd73ZdyV0jmweNK7MqywhyqxwQWDH5ib5lJC3q24BTa7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;698&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;核心依赖&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.security.oauth&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-security-oauth2&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.3.RELEASE&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-security&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里有两个核心组件依赖：OAuth2组件和Security组件。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;模块划分&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;auth-server：授权服务&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;resource-server：资源服务器&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;third-server：第三个服务&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;2、配置描述&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;【授权服务】&lt;/p&gt;&lt;p&gt;&lt;strong&gt;OAuth2配置&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这里的配置管理的是第三方的授权流程和发放给第三方的身份证明ClientID和密码，实际的场景就是第三方借助邮箱账号登录，首先就是向邮箱管理方提供材料，获取访问邮箱服务的身份证明，然后才能对接开放服务，这种模式在第三方对接业务中很常见。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 模拟第三方授权配置&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@EnableAuthorizationServer&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;AuthConfig&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;AuthorizationServerConfigurerAdapter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    ClientDetailsService clientDetailsService;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 资源服务器校验Token&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;configure&lt;/span&gt;&lt;span&gt;(AuthorizationServerSecurityConfigurer security)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        security.checkTokenAccess(&lt;span&gt;&quot;permitAll()&quot;&lt;/span&gt;).allowFormAuthenticationForClients();&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 第三方客户端请求配置，和资源服务访问的配置，不设置默认都可以访问，提供默认回调地址&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;configure&lt;/span&gt;&lt;span&gt;(ClientDetailsServiceConfigurer clients)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        clients.inMemory()&lt;br/&gt;                .withClient(&lt;span&gt;&quot;third01&quot;&lt;/span&gt;)&lt;br/&gt;                .secret(&lt;span&gt;new&lt;/span&gt; BCryptPasswordEncoder().encode(&lt;span&gt;&quot;third01&quot;&lt;/span&gt;))&lt;br/&gt;                .resourceIds(&lt;span&gt;&quot;resource-01&quot;&lt;/span&gt;)&lt;br/&gt;                .authorizedGrantTypes(&lt;span&gt;&quot;authorization_code&quot;&lt;/span&gt;,&lt;span&gt;&quot;refresh_token&quot;&lt;/span&gt;)&lt;br/&gt;                .scopes(&lt;span&gt;&quot;all&quot;&lt;/span&gt;)&lt;br/&gt;                .redirectUris(&lt;span&gt;&quot;http://localhost:8082/notify.html&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 配置访问端点&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;configure&lt;/span&gt;&lt;span&gt;(AuthorizationServerEndpointsConfigurer endpoints)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        endpoints.authorizationCodeServices(authorizationCodeServices()).tokenServices(tokenServices());&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 内存管理&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;AuthorizationCodeServices &lt;span&gt;authorizationCodeServices&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; InMemoryAuthorizationCodeServices();&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * Token管理规则&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;AuthorizationServerTokenServices &lt;span&gt;tokenServices&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        DefaultTokenServices services = &lt;span&gt;new&lt;/span&gt; DefaultTokenServices();&lt;br/&gt;        services.setClientDetailsService(clientDetailsService);&lt;br/&gt;        services.setSupportRefreshToken(&lt;span&gt;true&lt;/span&gt;);&lt;br/&gt;        services.setTokenStore(tokenStore());&lt;br/&gt;        services.setAccessTokenValiditySeconds(&lt;span&gt;3600&lt;/span&gt;);&lt;br/&gt;        services.setRefreshTokenValiditySeconds(&lt;span&gt;3600&lt;/span&gt;*&lt;span&gt;7&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; services;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;TokenStore &lt;span&gt;tokenStore&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; InMemoryTokenStore();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通常需要数据库存储第三方信息，可以到第OAuth2开源项目中，获取表结构放到本地数据库中，然后这里换成数据源加载模式即可，简单的流程管理都在源码里写了SQL语句，数据源引入即可。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Security配置&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 模拟本地用户配置&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;SecurityConfig&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;WebSecurityConfigurerAdapter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 密码加密方式&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; PasswordEncoder &lt;span&gt;passwordEncoder&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; BCryptPasswordEncoder();&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 内存中虚拟用户和角色&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;configure&lt;/span&gt;&lt;span&gt;(AuthenticationManagerBuilder auth)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        auth.inMemoryAuthentication()&lt;br/&gt;                .withUser(&lt;span&gt;&quot;user&quot;&lt;/span&gt;)&lt;br/&gt;                .password(&lt;span&gt;new&lt;/span&gt; BCryptPasswordEncoder().encode(&lt;span&gt;&quot;123456&quot;&lt;/span&gt;))&lt;br/&gt;                .roles(&lt;span&gt;&quot;user&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 表单登录&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;configure&lt;/span&gt;&lt;span&gt;(HttpSecurity http)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        http.csrf().disable().formLogin();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;基于这里的配置管理邮箱用户的认证流程，例如使用邮箱账号密码登录验证，判断授权是否成立，这里管理的是服务本地的邮箱账号，基于数据源存储数据在下面案例中都有。&lt;/p&gt;&lt;p&gt;关于Spring框架中安全认证的相关的几个组件，在使用OAuth2之前可以先了解一下。&lt;/p&gt;&lt;p&gt;【资源服务】&lt;/p&gt;&lt;p&gt;主要功能有三块，配置第三方携带的Token身份令牌校验机制，即访问授权服务校验接口，这里是OAuth2自定义好的接口；配置resourceId资源服务的编号，用来控制第三个服务能访问的资源服务范围，属于大的权限点控制；模拟校验用户的Role角色，较精细的控制权限。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 资源服务管理配置&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@EnableResourceServer&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ResourceServerConfig&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;ResourceServerConfigurerAdapter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * Token令牌校验&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;RemoteTokenServices &lt;span&gt;tokenServices&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        RemoteTokenServices services = &lt;span&gt;new&lt;/span&gt; RemoteTokenServices();&lt;br/&gt;        services.setCheckTokenEndpointUrl(&lt;span&gt;&quot;http://localhost:8080/oauth/check_token&quot;&lt;/span&gt;);&lt;br/&gt;        services.setClientId(&lt;span&gt;&quot;third01&quot;&lt;/span&gt;);&lt;br/&gt;        services.setClientSecret(&lt;span&gt;&quot;third01&quot;&lt;/span&gt;);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; services;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 服务资源ID配置&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;configure&lt;/span&gt;&lt;span&gt;(ResourceServerSecurityConfigurer resources)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        resources.resourceId(&lt;span&gt;&quot;resource-01&quot;&lt;/span&gt;).tokenServices(tokenServices());&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 模拟用户权限规则&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;configure&lt;/span&gt;&lt;span&gt;(HttpSecurity http)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        http.authorizeRequests()&lt;br/&gt;                .antMatchers(&lt;span&gt;&quot;/user/**&quot;&lt;/span&gt;).hasRole(&lt;span&gt;&quot;user&quot;&lt;/span&gt;)&lt;br/&gt;                .anyRequest().authenticated();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;【第三方服务】&lt;/p&gt;&lt;p&gt;主要提供两个流程的模拟：请求授权服务获取身份令牌；携带身份令牌请求资源服务获取数据。这里则是授权码回调接口的处理方式。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Controller&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;NotifyController&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger LOG = LoggerFactory.getLogger(NotifyController.class);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; RestTemplate restTemplate;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@GetMapping&lt;/span&gt;(&lt;span&gt;&quot;/notify.html&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; String &lt;span&gt;notify&lt;/span&gt;&lt;span&gt;(String code, Model model)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (code != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            MultiValueMap&amp;lt;String, String&amp;gt; map = &lt;span&gt;new&lt;/span&gt; LinkedMultiValueMap&amp;lt;&amp;gt;();&lt;br/&gt;            map.add(&lt;span&gt;&quot;code&quot;&lt;/span&gt;, code);&lt;br/&gt;            map.add(&lt;span&gt;&quot;client_id&quot;&lt;/span&gt;, &lt;span&gt;&quot;third01&quot;&lt;/span&gt;);&lt;br/&gt;            map.add(&lt;span&gt;&quot;client_secret&quot;&lt;/span&gt;, &lt;span&gt;&quot;third01&quot;&lt;/span&gt;);&lt;br/&gt;            map.add(&lt;span&gt;&quot;redirect_uri&quot;&lt;/span&gt;, &lt;span&gt;&quot;http://localhost:8082/notify.html&quot;&lt;/span&gt;);&lt;br/&gt;            map.add(&lt;span&gt;&quot;grant_type&quot;&lt;/span&gt;, &lt;span&gt;&quot;authorization_code&quot;&lt;/span&gt;);&lt;br/&gt;            Map&amp;lt;String,String&amp;gt; resp = restTemplate.postForObject(&lt;span&gt;&quot;http://localhost:8080/oauth/token&quot;&lt;/span&gt;, map, Map.class);&lt;br/&gt;            String accessToken = resp.get(&lt;span&gt;&quot;access_token&quot;&lt;/span&gt;);&lt;br/&gt;            LOG.info(&lt;span&gt;&quot;身份令牌：{}&quot;&lt;/span&gt;,accessToken);&lt;br/&gt;            HttpHeaders headers = &lt;span&gt;new&lt;/span&gt; HttpHeaders();&lt;br/&gt;            headers.add(&lt;span&gt;&quot;Authorization&quot;&lt;/span&gt;, &lt;span&gt;&quot;Bearer &quot;&lt;/span&gt; + accessToken);&lt;br/&gt;            HttpEntity&amp;lt;Object&amp;gt; httpEntity = &lt;span&gt;new&lt;/span&gt; HttpEntity&amp;lt;&amp;gt;(headers);&lt;br/&gt;            ResponseEntity&amp;lt;String&amp;gt; entity = restTemplate.exchange(&lt;span&gt;&quot;http://localhost:8081/user/resource&quot;&lt;/span&gt;, HttpMethod.GET, httpEntity, String.class);&lt;br/&gt;            model.addAttribute(&lt;span&gt;&quot;notifyMsg&quot;&lt;/span&gt;, entity.getBody());&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;notify&quot;&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;&lt;span&gt;三、测试流程&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.415625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvB6ZOPaheeXAdoTJB5q98zmmuNYCZdX5vMYRxICRny54jBxturHqbxiaOlwXeaEPxePK59wBuNQ8Mw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;通过上述测试流程，对比常见的第三方登录机制，理解OAuth2的授权码模式。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;四、源代码地址&lt;/span&gt;&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;GitHub·地址&lt;br/&gt;https:&lt;span&gt;//github.com/cicadasmile/middle-ware-parent&lt;/span&gt;&lt;br/&gt;GitEE·地址&lt;br/&gt;https:&lt;span&gt;//gitee.com/cicadasmile/middle-ware-parent&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3783359497645212&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCjMheLZtcM2iaVMBOpIUKR4CDRCG9FLT5K6NmGXvG7exrW0TSuDjnTKJQ5PDq8j8Y7PHDd17Z3gicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1274&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5abaac07012560800d482eba8da87e09</guid>
<title>Google、Facebook 等均开始支持的 HTTP3 到底是个什么鬼？</title>
<link>https://toutiao.io/k/xgonsfg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;article class=&quot;article-content&quot;&gt;
&lt;p&gt;最近一段时间以来，关于HTTP/3的新闻有很多，越来越多的国际大公司已经开始使用HTTP/3了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16036129562310-5.jpg&quot; alt=&quot;-w649&quot;/&gt;￼ &lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16036129871026-5.jpg&quot; alt=&quot;-w659&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;所以，HTTP/3已经是箭在弦上了，全面使用只是个时间问题，那么，作为一线开发者，我们也是时候了解下到底什么是HTTP/3，为什么需要HTTP/3了。&lt;/p&gt;
&lt;p&gt;那么，本文就来讲解一下到底什么是HTTP/3？他用到了哪些技术？解决了什么问题？&lt;/p&gt;
&lt;h3&gt;HTTP/2 存在的问题&lt;/h3&gt;
&lt;p&gt;在撰写本文之前，我专门写了一篇文章《&lt;a href=&quot;https://www.hollischuang.com/archives/5928&quot;&gt;HTTP/2做错了什么？刚刚辉煌2年就要被弃用了！？&lt;/a&gt;》分析HTTP/2存在的问题以及背后的原因。&lt;/p&gt;
&lt;p&gt;这里就不详细介绍了，强烈建议大家先阅读下这篇文章，有助于本文的学习。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://www.hollischuang.com/archives/5928&quot;&gt;上一篇文章&lt;/a&gt;中我们提到过HTTP/2因为底层使用的传输层协议仍然是TCP，所以他存在着TCP队头阻塞、TCP握手延时长以及协议僵化等问题。&lt;/p&gt;
&lt;p&gt;这导致HTTP/2虽然使用了多路复用、二进制分帧等技术，但是仍然存在着优化空间。&lt;/p&gt;
&lt;h3&gt;QUIC协议&lt;/h3&gt;
&lt;p&gt;我们知道，HTTP/2之所以”被弃用”，是因为他使用的传输层协议仍然是TCP，所以HTTP/3首要解决的问题就是绕开TCP。&lt;/p&gt;
&lt;p&gt;那么如果研发一种新的协议，同样还是会因为受到中间设备僵化的影响，导致无法被大规模应用。所以，研发人员们想到了一种基于UDP实现的方式。&lt;/p&gt;
&lt;p&gt;于是，Google是最先采用这种方式并付诸于实践的，他们在2013年推出了一种叫做QUIC的协议，全称是Quick UDP Internet Connections。&lt;/p&gt;
&lt;p&gt;从名字中可以看出来，这是一种完全基于UDP的协议。&lt;/p&gt;
&lt;p&gt;在设计之初，Google就希望使用这个协议来取代HTTPS/HTTP协议，使网页传输速度加快。2015年6月，QUIC的网络草案被正式提交至互联网工程任务组。2018 年 10 月，互联网工程任务组 HTTP 及 QUIC 工作小组正式将基于 QUIC 协议的 HTTP（英语：HTTP over QUIC）重命名为HTTP/3。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以，我们现在所提到的HTTP/3，其实就是HTTP over QUIC，即基于QUIC协议实现的HTTP。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那么，想要了解HTTP/3的原理，只需要了解QUIC就可以了。&lt;/p&gt;
&lt;p&gt;QUIC协议有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于UDP的传输层协议：它使用UDP端口号来识别指定机器上的特定服务器。&lt;/li&gt;
&lt;li&gt;可靠性：虽然UDP是不可靠传输协议，但是QUIC在UDP的基础上做了些改造，使得&lt;strong&gt;他提供了和TCP类似的可靠性&lt;/strong&gt;。它提供了数据包重传、拥塞控制、调整传输节奏以及其他一些TCP中存在的特性。&lt;/li&gt;
&lt;li&gt;实现了无序、并发字节流：&lt;strong&gt;QUIC的单个数据流可以保证有序交付，但多个数据流之间可能乱序&lt;/strong&gt;，这意味着单个数据流的传输是按序的，但是多个数据流中接收方收到的顺序可能与发送方的发送顺序不同！&lt;/li&gt;
&lt;li&gt;快速握手：&lt;strong&gt;QUIC提供0-RTT和1-RTT的连接建立&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;使用TLS 1.3传输层安全协议：与更早的TLS版本相比，TLS 1.3有着很多优点，但使用它的最主要原因是其握手所花费的往返次数更低，从而能降低协议的延迟。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么，QUIC到底属于TCP/IP协议族中的那一层呢？我们知道，QUIC是基于UDP实现的，并且是HTTP/3的所依赖的协议，那么，按照TCP/IP的分层来讲，他是属于传输层的，也就是和TCP、UDP属于同一层。&lt;/p&gt;
&lt;p&gt;如果更加细化一点的话，因为QUIC不仅仅承担了传输层协议的职责，还具备了TLS的安全性相关能力，所以，可以通过下图来理解QUIC在HTTP/3的实现中所处的位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16084541722246.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;接下来我们分别展开分析一下QUIC协议。先来看下他是如何建立连接的。&lt;/p&gt;
&lt;h3&gt;QUIC的连接建立&lt;/h3&gt;
&lt;p&gt;我们知道，TCP这种可靠传输协议需要进行三次握手，也正是因为三次握手，所以需要额外消耗1.5 RTT，而如果再加上TLS的话，则需要消耗3-4个 RTT连接。&lt;/p&gt;
&lt;p&gt;那么，QUIC是如何建立连接的呢？如何减少RTT的呢？&lt;/p&gt;
&lt;p&gt;QUIC提出一种新的连接建立机制，基于这种连接接机制，实现了快速握手功能，一次QUIC连接建立可以实现使用 0-RTT 或者 1-RTT 来建立连接。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/1_lfXH5BHQt_ltGCq-KEvlUQ.gif&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;QUIC在握手过程中使用Diffie-Hellman算法来保证数据交互的安全性并合并了它的加密和握手过程来减小连接建立过程中的往返次数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Diffie–Hellman (以下简称DH)密钥交换是一个特殊的交换密钥的方法。它是密码学领域内最早付诸实践的密钥交换方法之一。 DH可以让双方在完全缺乏对方(私有)信息的前提条件下通过不安全的信道达成一个共享的密钥。此密钥用于对后续信息交换进行对称加密。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;QUIC 连接的建立整体流程大致为：QUIC在握手过程中使用Diffie-Hellman算法协商初始密钥，初始密钥依赖于服务器存储的一组配置参数，该参数会周期性的更新。初始密钥协商成功后，服务器会提供一个临时随机数，双方根据这个数再生成会话密钥。客户端和服务器会使用新生的的密钥进行数据加解密。&lt;/p&gt;
&lt;p&gt;以上过程主要分为两个步骤：初始握手（Initial handshake）、最终（与重复）握手（Final (and repeat) handshake），分别介绍下这两个过程。&lt;/p&gt;
&lt;h4&gt;初始握手（Initial handshake）&lt;/h4&gt;
&lt;p&gt;在连接开始建立时，客户端会向服务端发送一个打招呼信息，（inchoate client hello (CHLO)），因为是初次建立，所以，服务端会返回一个拒绝消息（REJ），表明握手未建立或者密钥已过期。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16084544311013.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;但是，这个拒绝消息中还会包含更多的信息（配置参数），主要有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Server Config：一个服务器配置，包括服务器端的Diffie-Hellman算法的长期公钥（long term Diffie-Hellman public value）&lt;/li&gt;
&lt;li&gt;Certificate Chain：用来对服务器进行认证的信任链&lt;/li&gt;
&lt;li&gt;Signature of the Server Config：将Server Config使用信任链的叶子证书的public key加密后的签名&lt;/li&gt;
&lt;li&gt;Source-Address Token：一个经过身份验证的加密块，包含客户端公开可见的IP地址和服务器的时间戳。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在客户端接收到拒绝消息（REJ）之后，客户端会进行数据解析，签名验证等操作，之后会将必要的配置缓存下来。&lt;/p&gt;
&lt;p&gt;同时，在接收到REJ之后，客户端会为这次连接随机产生一对自己的短期密钥（ephemeral Diffie-Hellman private value） 和 短期公钥（ephemeral Diffie-Hellman public value）。&lt;/p&gt;
&lt;p&gt;之后，客户端会将自己刚刚产生的短期公钥打包一个Complete CHLO的消息包中，发送给服务端。这个请求的目的是将自己的短期密钥传输给服务端，方便做前向保密，后面篇幅会详细介绍。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16084544723763.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;在发送了Complete CHLO消息给到服务器之后，为了减少RTT，客户端并不会等到服务器的响应，而是立刻会进行数据传输。&lt;/p&gt;
&lt;p&gt;为了保证数据的安全性，客户端会自己的短期密钥和服务器返回的长期公钥进行运算，得到一个初始密钥（initial keys）。&lt;/p&gt;
&lt;p&gt;有了这个初识密钥之后，客户端就可以用这个密钥，将想要传输的信息进行加密，然后把他们安全的传输给服务端了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16084545018794.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;另外一面，接收到Complete CHLO请求的服务器，解析请求之后，就同时拥有了客户端的短期公钥和自己保存的长期密钥。这样通过运算，服务端就能得到一份和客户端一模一样的初始密钥（initial keys）。&lt;/p&gt;
&lt;p&gt;接下来他接收到客户端使用初始密钥加密的数据之后，就可以使用这个初识密钥进行解密了，并且可以将自己的响应再通过这个初始密钥进行加密后返回给客户端。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以，从开始建立连接一直到数据传送，只消耗了初始连接连接建立的 1 RTT&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;最终（与重复）握手&lt;/h3&gt;
&lt;p&gt;那么，之后的数据传输就可以使用初始密钥（initial keys）加密了吗？&lt;/p&gt;
&lt;p&gt;其实并不完全是，因为初始密钥毕竟是基于服务器的长期公钥产生的，而在公钥失效前，几乎多有的连接使用的都是同一把公钥，所以，这其实存在着一定的危险性。&lt;/p&gt;
&lt;p&gt;所以，为了达到前向保密 (Forward Secrecy) 的安全性，客户端和服务端需要使用彼此的短期公钥和自己的短期密钥来进行运算。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在密码学中，前向保密（英语：Forward Secrecy，FS）是密码学中通讯协议的安全属性，指的是长期使用的主密钥泄漏不会导致过去的会话密钥泄漏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么现在问题是，客户端的短期密钥已经发送给服务端，而服务端只把自己的长期密钥给了客户端，并没有给到自己的短期密钥。&lt;/p&gt;
&lt;p&gt;所以，服务端在收到Complete CHLO之后，会给到服务器一个server hello(SHLO)消息，这个消息会使用初始密钥（initial keys）进行加密。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16084546070880.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;这个CHLO消息包中，会包含一个服务端重新生成的短期公钥。&lt;/p&gt;
&lt;p&gt;这样客户端和服务端就都有了对方的短期公钥（ephemeral Diffie-Hellman public value）。&lt;/p&gt;
&lt;p&gt;这样，客户端和服务端都可以基于自己的短期密钥和对方的短期公钥做运算，产生一个仅限于本次连接使用的前向保密密钥 (Forward-Secure Key)，后续的请求发送，都基于这个密钥进行加解密就可以了。&lt;/p&gt;
&lt;p&gt;这样，双方就完成了最终的密钥交换、连接的握手并且建立了QUIC连接。&lt;/p&gt;
&lt;p&gt;当下一次要重新创建连接的时候，客户端会从缓存中取出自己之前缓存下来的服务器的长期公钥，并重新创建一个短期密钥，重新生成一个初识密钥，再使用这个初始密钥对想要传输的数据进行加密，向服务器发送一个Complete CHLO 请求即可。这样就达到了0 RTT的数据传输。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16084546708647.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以，如果是有缓存的长期公钥，那么数据传输就会直接进行，准备时间是0 RTT&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以上，通过使用Diffie-Hellman算法协商密钥，并且对加密和握手过程进行合并，大大减小连接过程的RTT ，使得基于QUIC的连接建立可以少到1 RTT甚至0 RTT。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以下，是Google官网上面的一张关于QUIC连接建立的流程图，可以帮助大家理解这个过程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16083656591382.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;另外，通过以上关于握手建立的过程，我们也可以知道，QUIC在整个过程中通过加解密的方式很好的保证了安全性。&lt;/p&gt;
&lt;h3&gt;多路复用&lt;/h3&gt;
&lt;p&gt;基于TCP的协议实现的HTTP有一个最大的问题那就是队头阻塞问题，那么，在这方面，QUIC是如何解决这个问题的呢？&lt;/p&gt;
&lt;p&gt;TCP传输过程中会把数据拆分为一个个按照顺序排列的数据包，这些数据包通过网络传输到了接收端，接收端再按照顺序将这些数据包组合成原始数据，这样就完成了数据传输。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16084557274127.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;但是如果其中的某一个数据包没有按照顺序到达，接收端会一直保持连接等待数据包返回，这时候就会阻塞后续请求。这就发生了TCP队头阻塞。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16084557140945.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;p&gt;类似于HTTP/2，&lt;strong&gt;QUIC在同一物理连接上可以有多个独立的逻辑数据流，这些数据流并行在同一个连接上传输，且多个数据流之间间的传输没有时序性要求，也不会互相影响。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数据流（Streams）在QUIC中提供了一个轻量级、有序的字节流的抽象化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;QUIC的单个数据流可以保证有序交付，但多个数据流之间可能乱序。这意味着单个数据流的传输是按序的，但是多个数据流中接收方收到的顺序可能与发送方的发送顺序不同！&lt;/p&gt;
&lt;p&gt;也就是说同一个连接上面的多个数据流之间没有任何依赖（不要求按照顺序到达），即使某一个数据包没有达到，也只会影响自己这个数据流，并不会影响到到其他的数据流。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.hollischuang.com/wp-content/uploads/2020/12/16084558177970.jpg&quot; alt=&quot;&quot;/&gt;￼&lt;/p&gt;
&lt;h3&gt;连接迁移&lt;/h3&gt;
&lt;p&gt;对于TCP连接的识别，需要通过服务器和客户端过双方的ip和端口四个参数进行的。在网络切换的场景中，比如手机切换网络，那么自身的ip就会发生变化。这就导致之前的TCP连接就会失效，就需要重新建立。&lt;/p&gt;
&lt;p&gt;这种场景对于移动端设备普及的今天来说，还是比较频繁的。&lt;/p&gt;
&lt;p&gt;所以，在这一点上，QUIC进行了优化。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QUIC协议使用特有的UUID来标记每一次连接，在网络环境发生变化的时候，只要UUID不变，就能不需要握手，继续传输数据。&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;可靠性&lt;/h3&gt;
&lt;p&gt;TCP之所以被称之为可靠链接，不仅仅是因为他有三次握手和四次关闭的过程，还因为他做了很多诸如&lt;strong&gt;流量控制、数据重传、拥塞控制&lt;/strong&gt;等可靠性保证。&lt;/p&gt;
&lt;p&gt;这也是为什么一直以来都是以TCP作为HTTP实现的重要协议的原因。&lt;/p&gt;
&lt;p&gt;那么，QUIC想要取代TCP，就需要在这方面也做出努力，毕竟UDP自身是不具备这些能力的。&lt;/p&gt;
&lt;p&gt;TCP拥塞控制是TCP避免网络拥塞的算法，是互联网上主要的一个拥塞控制措施。经典的算法实现有很多，诸如TCP Tahoe 和 Reno、TCP Vegas、TCP Hybla、TCP New Reno、TCP Westwood和Westwood+以及TCP BIC 和 CUBIC等等。&lt;/p&gt;
&lt;p&gt;QUIC协议同样实现了&lt;strong&gt;拥塞控制&lt;/strong&gt;。不依赖于特定的拥塞控制算法，并且提供了一个可插拔的接口，允许用户实验。默认使用了 TCP 协议的 Cubic 拥塞控制算法。&lt;/p&gt;
&lt;p&gt;关于&lt;strong&gt;流量控制&lt;/strong&gt;，QUIC提供了基于stream和connection两种级别的流量控制，既需要对单个 Stream 进行控制，又需要针对所有 Stream 进行总体控制。&lt;/p&gt;
&lt;p&gt;QUIC的连接级流控，用以限制 QUIC 接收端愿意分配给连接的总缓冲区，避免服务器为某个客户端分配任意大的缓存。连接级流控与流级流控的过程基本相同，但转发数据和接收数据的偏移限制是所有流中的总和。&lt;/p&gt;
&lt;h3&gt;弊端&lt;/h3&gt;
&lt;p&gt;以上，我们介绍了很多QUIC的相比较于TCP的优点，可以说这种协议相比较于TCP确实要优秀一些。&lt;/p&gt;
&lt;p&gt;因为他是基于UDP的，并没有改变UDP协议本身，只是做了一些增强，虽然可以避开中间设备僵化的问题，但是，在推广上面也不是完全没有问题的。&lt;/p&gt;
&lt;p&gt;首先，&lt;strong&gt;很多企业、运营商和组织对53端口（DNS）以外的UDP流量会进行拦截或者限流&lt;/strong&gt;，因为这些流量近来常被滥用于攻击。&lt;/p&gt;
&lt;p&gt;特别是一些&lt;strong&gt;现有的UDP协议和实现易受放大攻击（amplification attack）威胁，攻击者可以控制无辜的主机向受害者投放发送大量的流量。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所以，基于UDP的QUIC协议的传输可能会受到屏蔽。&lt;/p&gt;
&lt;p&gt;另外，因为UDP一直以来定位都是不可靠连接，所以有很多中间设备对于他的支持和优化程度并不高，所以，出现丢包的可能性还是比较搞的。&lt;/p&gt;
&lt;h3&gt;总结&lt;/h3&gt;
&lt;p&gt;下表是我总结的HTTP/2和HTTP/3的异同点，有一些本文介绍过，有一些个人认为并不是特别重要的，本文中并没有提及，大家感兴趣的可以自行学习下。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;HTTP/2&lt;/th&gt;
&lt;th&gt;HTTP/3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;传输层协议&lt;/td&gt;
&lt;td&gt;TCP&lt;/td&gt;
&lt;td&gt;基于UDP的QUIC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;默认加密&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;独立的数据流&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;td&gt;是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;队头阻塞&lt;/td&gt;
&lt;td&gt;存在TCP队头阻塞&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;报头压缩&lt;/td&gt;
&lt;td&gt;HPACK&lt;/td&gt;
&lt;td&gt;QPACK&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;握手时延&lt;/td&gt;
&lt;td&gt;TCP+TLS 的 1-3 RTT&lt;/td&gt;
&lt;td&gt;0-1 RTT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;连接迁移&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;服务器推送&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;多路复用&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;流量控制&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据重传&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;拥塞控制&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://http3-explained.haxx.se/&quot;&gt;https://http3-explained.haxx.se/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/46403.pdf&quot;&gt;The QUIC Transport Protocol: Design and Internet-Scale Deployment&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codenong.com/cs106840038/&quot;&gt;https://www.codenong.com/cs106840038/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nan01ab.github.io/2018/12/QUIC.html&quot;&gt;https://nan01ab.github.io/2018/12/QUIC.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://medium.com/@chester.yw.chu/http-3-%E5%82%B3%E8%BC%B8%E5%8D%94%E8%AD%B0-quic-%E7%B0%A1%E4%BB%8B-5f8806d6c8cd&quot;&gt;https://medium.com/@chester.yw.chu/http-3-傳輸協議-quic-簡介-5f8806d6c8cd&lt;/a&gt;&lt;/p&gt;
&lt;center&gt;&lt;b&gt;(全文完)&lt;/b&gt;&lt;/center&gt;&lt;hr/&gt;&lt;center&gt;&lt;b&gt;扫描二维码，关注作者微信公众号&lt;/b&gt;&lt;/center&gt;&lt;img src=&quot;http://www.hollischuang.com/wp-content/uploads/2019/04/二维码.png&quot;/&gt;
&lt;/article&gt;
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f1888dbe04923314ec1e7a750dbc48e8</guid>
<title>2020 年大前端技术趋势解读</title>
<link>https://toutiao.io/k/98e1yeb</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94074&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;导&lt;/section&gt;&lt;section&gt;Lead&lt;/section&gt;&lt;section&gt;语&lt;/section&gt;&lt;/section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如今的前端早已不再拘泥于满足页面展示，而是开始延展到通过全栈来闭环产品。这表明前端已经有能力透过业务深入产业，继而影响商业结果。这种表象的改变背后是本质的转变，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;从更为宏观的角度来说，前端正在通过持续的技术革新和技术融合不断突破自身边界，进而重新定义自身价值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;时光荏苒，非比寻常的一年即将过去。在这过去的一年中，与其说前端的平稳期即将到来，不如说前端反而进入了技术深水区。换言之，在全栈和多端的影响下，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;前端领域里“术业有专攻”的时代已经到来&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;如今的前端早已不再拘泥于满足页面展示，而是开始延展到通过全栈来闭环产品。这表明前端已经有能力透过业务深入产业，继而影响商业结果。这种表象的改变背后是本质的转变，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;从更为宏观的角度来说，前端正在通过持续的技术革新和技术融合不断突破自身边界，进而重新定义自身价值&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;在这种大变革的时代背景下，&lt;strong&gt;腾讯&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;IMWeb&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;前端团队也正在与时俱进得进行着技术更新、优化与升级，结合自身这一年的快速发展，&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;IMWeb&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;团队为大家带来&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2020&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;年大前端技术趋势解读。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;89202&quot; hm_fix=&quot;312:379&quot;&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot; data-width=&quot;100%&quot;&gt;回顾今年的技术趋势&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本文拟通过回顾&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年七大主要的前端技术趋势来展现前端早已由单纯工具解决问题的属性逐步转变为深入产品机制解决商业问题的角色。前端开发者的关注点也早已不是如何使资源利用效率更高，页面体验更优以及保证业务的稳定输出，而是更为关注产品能力、产业模式、数据建设以及商业转化。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开源站点&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;bestofjs.org&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;收录了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Github&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;上&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1500&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;个开源项目，并且还基于 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;GithubTrending API&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的公开数据，更新统计这些项目的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Stars&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;新增趋势。基于&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Bestofjs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;去年的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2019&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;JavaScript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;明星项目&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;https://risingstars.js.org/2019/zh&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）报告和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;近一年&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Trending&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;排行&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;数据，下面展示了&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Top30&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的前端重点项目，并对此进行简单的介绍。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.6077586206896551&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDT5Hnl2hAdibGef7Pl73ibaDSibxgOQo0Mrz56iboOHf3NticApHqNyAfyfxw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;相比于去年，学习资源越来越丰富了，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Top100 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;内有&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;14&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;个项目是与前端基础学习相关的，侧面可以看出前端行业的繁荣；同时也反映出知识和人才的迭代速度是非常快的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Deno&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;超过&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Vue.js&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;一跃成为过去一年&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Star&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;增长最快的开源项目，打破了&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Vue.js&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;连续4年登顶的垄断&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;虽然在工业届使用&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Deno&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;落地在业务场景的情况还比较少，但是目前的发展势头还是不错的。还记得因为&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Deno&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的出现，出现的那句经典的“求不要更新了，老子学不动了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;”&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。事实证明“学不动的时代” 并没有到来。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;除了跟学习相关的项目，倘若只关注垂直领域的技术项目，我们会惊喜地发现：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;持续升温，依旧保持着高速成长的状态，未来的潜力不可限量；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通过项目分布的情况，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;明显能看到&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;生态圈&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt;Vue &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;生态圈&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&amp;gt;&amp;gt;Angular &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;生态圈；&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;伴随着&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;核心规范&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;成为浏览器的标准，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;继&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;和&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;JS&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;之后，像&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;C/C++&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Rust&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;等语言编写的高性能模块也在浏览器上运行&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;相信在不久的将来，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Web&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;应用的桌面客户端化，也将成为一种趋势；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Strapi&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;位列&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Nodejs&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;相关领域的第三名侧面反应了低代码的趋势还在持续升温，&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;各家都在研制自己的低代码平台来提升开发效率；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;JSFramework &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;相关的领域，&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Next.js&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;超越&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Nest&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;成为了今年的冠军。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;在强大的&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;React&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;体系的影响下，业务越来越多的人选择使用同构和直出的方案来构建&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Web&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;应用；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;ServerlessFramework &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;也进入了前&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Top100&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;，&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;虽然排名不高，但是已经开始慢慢展示出了可持续发展的势头。对于一个被厂商裹挟的技术而言，这一切来之不易；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;大前端生态系统已经逐步完善，前端工程化逐步完善，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;DevOps&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;已经走向了系统化的发展方向，前端技术已经进入深水区；&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;由于直播行业的火热，以及疫情的影响，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;音视频领域在过去的一年也有着蓬勃的发展&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;。在前端领域&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的技术在持续升温。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;接下来，主要盘点下在即将过去的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年前端行业发生了哪些重要的事情，同时分享下腾讯&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;IMWeb&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;团队在过去一年中都做了哪些工作。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;89202&quot; hm_fix=&quot;292:246&quot;&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot; data-width=&quot;100%&quot;&gt;总结2020年度趋势&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;1、TypeScript爆发增长&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;从&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2019&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年开始，社区内掀起了学习使用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;TypeScript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的浪潮，从&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的下载量来看，近几年&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;TypeScript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;呈现爆发式增长，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;甚至在&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2020&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;年在&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;语言的排行榜上跃居到了第四位&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.603448275862069&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTfGWTubxGvqY5dcgvicicXvNAJ6GbDPpauCNBYK2pPmXVBOuQpksIicibRw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;数据来源：&lt;/span&gt;&lt;span&gt;https://octoverse.github.com&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;相比于同类型工具，如&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Elm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ClosureScript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CoffeeScript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;TypeScript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;可谓是一马当先：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.36637931034482757&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTDhOgl16rAQ3xfXibWFLj67LY1J9u0ZiapRIDRN9ksZIJo7KQQpkEsLmg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;数据来源：&lt;/span&gt;&lt;span&gt;stateofjs2019&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在最新的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020Stack Overflow Survey &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;中，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;TS&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;受大家喜爱程度排名第二，仅次于&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Rust&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.6422413793103449&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTZs1fJcEPDz39iacibV0a35lzfUwb1A09ib5Qq2YW6KCjhahHx5rSxmkCg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;数据来源：&lt;/span&gt;&lt;span&gt;StackOverflow Survey Result 2020&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在如此爆炸式的增长浪潮中，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;TypeScript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;必将给前端生态带来新的气象，同时也会促使前端开发者更多地关注代码设计、易用可维护、编码原则及设计理念等方面的知识。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;IMWeb&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;团队自&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;2018&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;年起开启&lt;/strong&gt;&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI1ODE4NzE1Nw==&amp;amp;mid=2247487762&amp;amp;idx=1&amp;amp;sn=fddc5117a999aa4ad1a5322c9f003f76&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;第一个&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;项目&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;strong&gt;，&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;至今&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;已完成绝大部分业务向&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;TS&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;的转型迁移。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;在多端复用模块代码中，以&lt;/span&gt;&lt;span&gt;TS+ Jest &lt;/span&gt;&lt;span&gt;为基本要求，保证公共代码的可维护性和可测试性：在&lt;/span&gt;&lt;span&gt;TS&lt;/span&gt;&lt;span&gt;编写中，我们更多地遵循面向对象设计原则（&lt;/span&gt;&lt;span&gt;SOLID&lt;/span&gt;&lt;span&gt;原则、&lt;/span&gt;&lt;span&gt;KISS&lt;/span&gt;&lt;span&gt;原则等），适当的运用设计模式，帮助更好地进行代码开发和维护。同时，在&lt;/span&gt;&lt;span&gt;TS&lt;/span&gt;&lt;span&gt;践行中，辅以单元测试覆盖，可以指导我们更好地拆分组织代码，编写可测试的模块，在公共核心业务模块中覆盖单测用例。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot; hm_fix=&quot;227:199&quot;&gt;2、三大框架React当先&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前端界的三大主流框架：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;React&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Angular&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Vue.js&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，今年仍是炙手可热。此外，在过去一年，这三大主流框架还迭代了许多版本。在三大框架之中，根据过去一年的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NPM&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;下载量，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;React&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;仍然稳居首位。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.41163793103448276&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTn6PJZ8qTQsJ97nZlnTZoGic6uOK0gI2GibdAmibVx4jAToeYfwM6Npiccw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2020&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;年的&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;StackOverflow Trends&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;显示&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;React&amp;gt; Vue.js &amp;gt; Angular&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.6767241379310345&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTofb3LiaO5cMican2sdibOlss01dSFiaNzlMfpnyfKkVcf4BWyRGMGbWiawA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;在&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Github2020&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;年的新增&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Stars&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;数量上，&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Vue.js&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;依旧超过了&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.3017241379310345&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTGNaHMg8HSf0QLc0bWBnRQ91M0r2eyPk0KkVzsbhibP9ic74zlc6IURcA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;下面分别总结各个框架 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年的动态：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;41173&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; placeholder=&quot;1&quot; title=&quot;&quot;&gt;1&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;React&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;React&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;自发布&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;v16&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;版本后，迭代的版本都是以修复、优化为主，当前最新版本&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;v17.0.1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，今年&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;8&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;月正式推出的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;v17&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;版本，并无显著的新特性，而是一个”垫脚石“版本。为了后续能兼容 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;v18&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;版本，或者说是为了能达到”逐步“升级的目的，这也能规避当项目的依赖存在多个版本R&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;eact&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;时出现问题。这种逐步升级的理念与&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;VUE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;渐进式兼容升级&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;颇为相似。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;41173&quot; hm_fix=&quot;386:546&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; placeholder=&quot;1&quot; title=&quot;&quot; data-num=&quot;2&quot;&gt;2&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;Vue.js&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Vue.js&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的重大变化无疑是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Vue.js3.0 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的发布，有了非常多新特性，总结如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;对&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Vue.js&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;进行了完全&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Typescript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;重构，让&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Vue.js&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;源码易于阅读、开发和维护；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;重写了虚拟&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Dom&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的实现，对编译模板进行优化、组件初始化更高效， 性能上有较大的提升；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Vue.js2&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;对象式组件存在一些问题：难以复用逻辑代码、难以拆分超大型组件、代码无法被压缩和优化、数据类型难以推倒等问题；而&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CompositionAPI &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;则是基于函数理念，去解决上述问题，使用函数可以将统一逻辑的组件代码收拢一起达到复用，也更有利于构建时的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;tree-shaking&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;检测，这个使用起来有些类似于&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;React&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;hook&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;以上变化都秉持着&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;VUE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的“渐进式框架“ 理念， &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Vue.js3.0 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;持续开发兼容旧的版本，即使升级了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Vue.js3.0 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;也可以按照之前的组件开发模式进行开发。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;41173&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-original-title=&quot;&quot; placeholder=&quot;1&quot; title=&quot;&quot; data-num=&quot;3&quot;&gt;3&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;Angular&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Angular&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在今年&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;11&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;月推出了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;v11.0.0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;版本，主要变化为：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;将其依赖的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Typescript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;版本升级至&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;4.0,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;不再支持&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Typescript3.9 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;版本；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Angularv11 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在继&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;v10&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;弃用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;IE9&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;10&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;IEmobile &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;支持后，将其完全删除；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;加入了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Webpack5&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，升级至 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Angularv11 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;版本，即可使用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Webpack5 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的新特性，如更快的构建速度、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;模块联邦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;等。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;IMWeb团队的前端技术栈主要围绕着React体系进行构建的，包含了基于&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Webpack&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;的最佳实践&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;IMFLOW&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;，以及围绕着&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;体系完成的组件生态&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;在三大框架逐渐同质化的今天，未来的你使用何种框架就得由工作岗位的需求来决定了。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section hm_fix=&quot;312:230&quot;&gt;&lt;p data-brushtype=&quot;text&quot;&gt;3、WASM展露头角&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;源于&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Mozilla&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;发起的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Asm.js&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;项目，也被称为“设计补充 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;JavaScript”&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，其本解码速度比&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;JS&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解析快得多，让高性能的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Web&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;应用在浏览器上运行成为可能。该模块可在浏览器中的专有虚拟机上执行，与&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;JavaScript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;虚拟机共享内存和线程等资源。目前主流浏览器基本都支持了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.35129310344827586&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDToHhI8RO65Duy2cCwiaZPCRUqjXn9c1TzaNsX6Mwogg89eBsPuqd8HeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;在&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2019&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;年&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;12&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;月&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;15&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;日&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;WebAssembly&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;正式成为&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;WorldWide Web Consortium&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt; (&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;W3C&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;) 的标准，加入到了&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;和&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;的行列，继而成为浏览器官方的标准的第四门语言&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;也正式抵达了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;版本，获得了主流浏览器&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Firefox&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Chrome&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Safari&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Edge&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的支持。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;首届&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;WebAssemblySubmmit 2020&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;年在硅谷举行&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(https://Webassembly-summit.org/)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，会议上讨论了诸如：关于构建 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;新型生态系统；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的未来以及&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;与诸如&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Javascript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等其他支持技术的关系；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebKit&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;实现的编译、启动和运行时等&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;benchmarking&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;领域进行的研究和开发；其中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Ben&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;演讲的“&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Expandingthe PIE” &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.5495689655172413&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTrKxpicemS8bT0wdHuYYT3Pcf22LxuicTjrzyWpHlicSe01BQmKluPZSVA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;短短几年的时间里，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;取得了长足的进展。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Ability&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;目前有&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;100&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;多个不同的项目使用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。这些应用包括：自由手绘应用程序、媒体播放器、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Gameboy&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;仿真器、浏览器内压缩&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解压应用程序，甚至还有一个&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AR&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;数独解谜应用程序。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Producer&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;目前大约有&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;15&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;种编程语言可以以稳定的、面向生产的方式编译到&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。其中包括：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.Net&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AssemblyScript&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;C&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Haskell&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Rust&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Zig&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等，还有更多的正在开发中。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Interoperability&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;现在有了一个基于能力的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;API&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;设计，它允许&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;代码与外部世界交互，同时仍然保留了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的沙盒特性。此外，曾经强大而有用的 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAPI &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;集合现在正在不断得到实现。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Embedder&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;现在可以在许多不同的平台上运行&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。目前正在积极开发的运行时大约有&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;20&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;个。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;不再局限于浏览器。这里有区块链实现、无服务器应用程序、操作系统可执行程序和物联网实现的例子，它们被部署在独立和受限制的嵌入式运行时环境中。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;看到这么多不同的项目和运行时，真是令人惊讶！而&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2021&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssemblySubmmit &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;会在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;4&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;月举行&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。随着&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的不断发展，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Web&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;中文兴趣组&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;·WebAssembly &lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;研讨会也在今年的&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;8&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;月&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;29&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;日在线上举行&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，重点探讨了&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;技术应用与实现，尤其是在多媒体、编译器以及新型语言、仿真器、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Web&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前端框架、虚拟机、云、游戏引擎、工具等多方面的应用场景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在未来的一年里，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;会有更多的机会出现在大家的面前，我们也会在业务中落地基于&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的应用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;WebAssembly&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;的出现为&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Web&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;开发者打开了一扇新的大门&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;。在去年，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;wasm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;对你来说也许还仅是技术文章中的一个常见名词，你压根想不到他会在浏览器中得到怎样的应用，什么时候会被大公司真正用起来。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;在今年，你很有可能已在不知不觉中成为&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;wasm&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;的使用者了&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;。目前国内外越来越多的团队基于&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;wasm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;进行了业务实践。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;IMWeb&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;团队擅长的音视频领域，我们通过将&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;ffmpeg&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;编译为&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;wasm&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;版本且在浏览器中运行，将过去处于黑盒中，只有浏览器底层才能使用的音视频编解码能力彻底解放&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;目前我们可以在前端页面中对音视频流直接进行处理，在完全不依赖后台的情况下，便捷、高效的实现了视频播放帧预览与视频帧截图等功能。目前团队正在进一步探索&lt;/span&gt;&lt;span&gt;wasm&lt;/span&gt;&lt;span&gt;在音视频以及其他过去前端无法触及的领域的可行性实践。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;4、Low-Code恰逢其时&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;从&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2014&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;年&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Forrester&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;的研究报告提出“&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;low-code&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;”一词到今天，低代码领域持续升温&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;从低代码领域的行业角度看，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2017&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年后，微软、甲骨文等各大厂家纷纷加入了低代码赛道的竞争。近年来，获得&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;3.6&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;亿美元融资的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Outsystems&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;更是成为低代码领域海外市场的一只独角兽。国内方面，也不乏云凤蝶、点石、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;iVX&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、轻流、积木等平台的诞生，低代码产品领域的蓬勃发展，正成为特定场景软件开发的重要趋势。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;区分一下&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;no-code&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;low-code&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;pro-code&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;no-code&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：自己编程给自己用，给用户的感觉就是一个软件。因此，平台不会给自己定位成一个“编程工具”。主要是通过图形化的操作来降低学习曲线，类似&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;PPT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Excel&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等。在垂直领域的特定场景中，才能做到好用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;low-code&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：编程给其他人用，通过降低专业难度，让运营人员（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CitizenDeveloper&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）也参与进来。平台评估好预制的场景和需求，减少从头写代码的成本，一定程度上可以通过图形化的方式满足业务诉求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;pro-code&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：日常软件开发过程中的手写代码，可以通过逻辑和模块复用来进行提效。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;区分了概念之后，还需要考虑面向的用户。不同的用户对应着不同的解决方案。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;用户大致分为三类：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;前端开发人员、后台开发人员、产品运营人员。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;为什么要做低代码？&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基于目前可视化和模型驱动理念，结合当下大前端跨端体验的融合技术以及云原生的支持，通过低代码的方案可以大幅度降低业务交付的成本，为业务提供一种全新的开发范式。而且，可视化搭建去完成业务可以让产品和运营人员（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CitizenDeveloper&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）参与进来，可以极大得释放软件开发者的人力瓶颈，也进一步促进了技术和业务的深度合作。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;低代码应该具备哪些核心能力？&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;基础物料的搭建和接入是保证业务可视化的基础&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;无论是行业的开源组件，还是团队自定义的基础组件，搭建平台都应该无缝地进行预期内的接入和控制。这是因为，从业务长期迭代的角度来看，最耗费人力的一定是最频繁的业务组件。解决定制化的组件和接入组件由此成为低代码平台长期需要解决的最核心问题。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;编排能力就是页面排版和对逻辑编排&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;无论是特定场景的页面的组件逻辑，还是用户自定义的交互（包括用户行为的服务端能力支持）都应该通过逻辑编排能力进行支持。大部分的页面搭建工作都是在桌面端完成的，但是页面渲染的产物可能是多种形式的，比如：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;PCWeb&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;H5Web&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、小程序，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;那么在搭建运行时的实时可视化和搭建完成的多端适配和多场景适配，这样就解决了跨技术栈和跨端问题&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;虽然是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;low-code&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的设计方案，但还是希望输出的代码是可以进行二次开发的，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;因此最好能&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;pro-code&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;与&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;low-code&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;互相转换。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;编程产物分为初级产物、中间产物和最终产物。产物的丰富程度，直接决定了平台的可复用性和灵活性。无论是基于低代码开发和源码的混合开发，还是基于低代码平台的二次开发，都是&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;low-code&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;平台需要考虑的事情。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;运行时能力也非常重要&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，对开发者来说是一个强大的编辑器引擎，可以方便快速接入各类组件和中间件。而对于运营人员（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CitizenDeveloper&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）来说同样也很重要，针对不同的产品和业务场景，需要定制基础业务模版和和业务配置，方便他们快速地进行差异化的功能设计。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;协作能力和数据分析能力就不言自明了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;低代码平台的核心就是降低对专业性的要求&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;因此，使用者无论是谁，都应该有更高的效率提升。而数据统计和分析是所有平台都应该具备的基础能力，这里就不详细描述了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;那么，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;整理了核心能力如下：基础资料的搭建、基础资料的接入、业务编排能力、界面渲染能力、代码转换能力以及运行时能力、协作能力和数据分析能力。以上就是我认为的低代码方案应该具备的能力模型。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为什么说&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;low-code&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;是恰逢其时呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;因为无论是跨端和跨平台领域的强大适配能力，还是大前端工程体系的有力支撑，都已经将低代码领域的价值逐步推到人们面前，低代码是业务发展和技术探索的必然选择&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2020&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;年&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;IMWeb&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;团队在低代码领域不断优化升级面向运营场景的页面搭建平台&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Vision&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;，在真正意义上实现了对运营系统和素材开发的解耦，并兼容&lt;/span&gt;&lt;span&gt;React，Vue.js， JQuery &lt;/span&gt;&lt;span&gt;等不同技术栈，实现了&lt;/span&gt;&lt;span&gt;PC&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;H5&lt;/span&gt;&lt;span&gt;、微信小程序的可视化运营的页面搭建。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.6918103448275862&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDT7iaJZCnC2Aj7cfFVGKKiaicemicdNnhrYZeicZldfJZJ8gxrbAnrvSeQzZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;与此同时，在&lt;/span&gt;&lt;span&gt;Vision&lt;/span&gt;&lt;span&gt;系统的基础上，我们沉淀出一套可视化搭建引擎&lt;/span&gt;&lt;span&gt;Gems&lt;/span&gt;&lt;span&gt;，针对日渐增加的&lt;/span&gt;&lt;span&gt;B&lt;/span&gt;&lt;span&gt;侧需求，&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;以&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Gems&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;为核心开发了专注于搭建管理系统的平台&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Hulk&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;，实现了相对运营页面更为复杂的管理页面甚至数据接口的可视化搭建与生成&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.6099137931034483&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTDADqAQVKJjO7CX1b2tIbPZYP6bbxURWqRzYUacAxIzDIJfrAYaPAFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;我们的目标是通过&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Hulk&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;实现对&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;80%&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;日常业务页面的“&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;代码”搭建&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;通过&lt;/span&gt;&lt;span&gt;Node.js&lt;/span&gt;&lt;span&gt;统一管理数据接口，可以通过图形化配置，快速创建接口，组合不同数据源的数据；支持多组件灵活配置生成页面的能力，扩展组件库，开发常用组件；复杂页面和接口逻辑支持低代码扩展。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Low-Code&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;领域的发展在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年极其迅猛。从最早的通过模块化搭建解决营销活动领域的问题发展到现在可以通过 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;low-code&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;来解决内部复杂的中后台业务需求，既适用于面向&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;C&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;侧用户的产品运营，也贴合&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;侧用户的数据管理需求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section hm_fix=&quot;337:230&quot;&gt;&lt;p data-brushtype=&quot;text&quot;&gt;5、全栈开发持续深耕&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;从&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;DevOps&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;到&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;NoOps&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;的路径之一，便是目前大家都在尝试的&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Serverless&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;了&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;自从&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2012&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年有了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的概念开始，至今已经&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;8&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;个年头了。近年来随着国内的云厂商，如腾讯云、阿里云、华为云对&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的支持，并且伴随着小程序云开发的普及，国内的开发者对&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的使用已经非常熟悉了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;今年&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;9&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;月&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CodingSans &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;联合其&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;9&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;个合作伙伴，发布了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Serverless2020 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年度状态报告。调查结果显示：有&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;75%&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的开发者会在公司使用这项技术。如此高的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Yes&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;也基本反映出了这样的技术已经被大众普遍接受并使用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.673866090712743&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTHw6tMH1Bh81MIpXBwqrSWHXeS1ahMib61jhUlxxE8BmkUgOZoOpEvtg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;463&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我们可以看到开发者选择应用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的场景有很多，比如：为小程序、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Web&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Mobile&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提供基础性的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;API&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;服务，大规模批处理任务处理，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Web&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;站点、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DevOps&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的工具以及&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;GraphQLAPI&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;能力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.6570155902004454&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTibuHoU5xJ16iamhHywJ6T67ibf2BHo3YA6hG7lxr71bHrGqjtHQvXx6zA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;449&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;目前最大的难题是调试，这主要是由&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Serverless&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;的架构复杂性所引起的&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;而供应商之间的巨大差异也使得更换或者说迁移供应商变得非常得不偿失。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;与其说&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Serverless&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;是一项技术，不如说&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Serverless&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;是一种理想的工作模式，是一种专注于业务价值的思考&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;单纯的通过函数进行业务交付，而不再需要关心解决业务问题之外的事情，比如：那些非常繁琐的基础设施。托管服务可以让开发者更专注于编写业务函数，从而减少对机器资源、降低运维成本的考虑，可以让开发者更专注的为产品和用户创造价值。随着云厂商对于&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的支持，后续会有越来越多的开发者，可以体会到云时代给大家带来的便利。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;IMWeb&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;团队开始&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Serverless&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;的实践也非常早。随着腾讯云的发展，在&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2019&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;年就已经将&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;SCF&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;落地在业务中了。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;而&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年为了提升 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;SCF&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的开发体验，又完成了开发体验的全面升级，可以&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;在&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;分钟内完成一个云函数的上线&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.45689655172413796&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTIrTS662cbCuUBIZZ4B1exriceG6UjOYWEfgWYTwmd0AIibDIPm7cAzLg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;IMWeb&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;团队更宏大的全栈开发计划也在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年稳步进行中。跟随着公司上云的战略，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年团队&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;依托于云提供的基础能力&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;进行了一系列的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;全栈架构演进&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。与时俱进的制定了新的研发基础规范、持续性的丰富业务基础组件、打造更佳完善监控和告警体系，并结合公司内优秀的开源项目协同共建，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;持续深耕全栈开发&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。目前已经在业务中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;落地了多个由前端主导的业务解决方案&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。这不仅减少了后台人力的投入，也极大得拓展了前端的边界，提升了前端在业务中的价值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section hm_fix=&quot;251:233&quot;&gt;&lt;p data-brushtype=&quot;text&quot;&gt;6、DevOps渐进增强&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;研发效能是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年提到的比较多的一个热词，特别是在腾讯内部，提到效能不得不提到近几年非常火热的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DevOps&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，开发运维一体化流程，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CI/CD&lt;span&gt;流程的串联，帮助业务提升研发效能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.5193965517241379&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTV6FQ5LvxxDHeyErAcPAVLOLTuc8XMOxVNBx2J6fTE1MrfVvYnOVg8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTgPIA0xYR8ibdKUmpbWQQ1b6APSQ6u23QuADu4hPjxBJRO5UEMbZvyAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DevOpsSurvey &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;中，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DevOps&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;带来的正面影响获得了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;99%&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的认可度：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.5323275862068966&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTvsv7Fs9U3cg48B6RibMxe9DX9XDnXNLIEtSLVrf5RGTtQWs0FutueLg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;不过，想要完全达到&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DevOps&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的效果，难度是很大的，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DevOps&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;链路涉及到非常多的工具链，使用学习成本较高，在当前服务稳定的情况下，迁移&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DevOps&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;技术栈将遇到不小的挑战。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;IMWeb&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DevOps&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;实践是基于业务上云，在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;云原生&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;的基础上完成的。其中包括：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;对于&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;DevOps&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;各流程的把控和规范，&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;IMWeb&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;团队自研&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Thanos&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;研发效能平台，帮助在线教育部所有前后端团队业务完成&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;DevOps&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;转型：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.4849137931034483&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTdyv5Wf8xSmMY2zgfkODRW0neaCBApZb0myZom44xtiatEZxb42L0AQg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;7、WebRTC持续升温&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h4 align=&quot;left&quot;&gt;&lt;span&gt;随着互联网的不断加速和音视频技术的不断发展，许多以音视频技术为依托的产品相继面世，比如：直播、短视频等等。从&lt;/span&gt;&lt;span&gt;3G&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;4G&lt;/span&gt;&lt;span&gt;，再到即将到来的&lt;/span&gt;&lt;span&gt;5G&lt;/span&gt;&lt;span&gt;时代，移动网络的带宽和质量越来越高，海量低延迟直播、互动直播也成为了可能。&lt;/span&gt;&lt;span&gt;&lt;strong&gt;音频技术发展到今天，实际已经非常成熟了。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;从&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;H264/H265&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;VP8/VP9&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;以及后面的&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;AV1&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;编解码器，解决了视频压缩率的问题；而&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;5G&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;的商用，解决了带宽的问题&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;这两个问题解决后，各行各业都开始使用音视频技术来实现更佳的用户体验，比如：音视频会议、直播带货、在线教育、远程医疗、娱乐游戏等等。&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年由于疫情的影响，大家更多地认识和了解到音视频相关的行业。音视频技术底层离不开编解码标准的发展。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;而就在今年，新一代国际视频编解码标准（&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;H.266/VVC&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;）正式出炉，其后续的落地实践非常值得关注&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;从行业应用的发展来看，围绕音视频直播一定会有三个发展方向：更快、更便宜、更智能。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;之前音视频领域有两大技术路线：一类是&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;RTC&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;，它主要用于满足多人会议中的低延时互动；另一类是流媒体直播/点播，主要满足于对延时要求不大的高并发低成本场景&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;而端上的音视频处理技术主要围绕更智能，诸如人脸识别、美颜、降噪、超分等处理优化来展开&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;行业中也有更多的实践落地，从后端到前端都在探索更为极致的体验。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;有个特别宏伟的愿景：可以在浏览器上快速开发出各种音视频应用。但这早已不再仅仅是愿景，而是已经在逐步成为现实。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.4088235294117647&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTATK57Z5OqKIeQuBnyZB8Ykb0R0VhmNg9awchWXBUAWu2m6WgGKXEBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;340&quot;/&gt;    &lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;从&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Chrome&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Firefox&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;到近几年苹果&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Safari&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的加入与支持，各个云服务厂商、腾讯云、阿里云、网易云、七牛云以及诸如专门音视频服务商（声网和即构科技等等），都将&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;纳入浏览器实时音视频首选方案。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;从&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;StackOverflow Trends &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;GoogleTrends&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;来看：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的热度不断上升，而且由于&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2020&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;年初疫情的影响，直播带货、在线会议和在线教育等远程实时音视频技术的也迎来了风口，关注度急剧上升&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;。下面是我们总结的&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;应用层面的知识图谱：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.6797235023041475&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTC40ibqmO6Etl13G3tK7ZOiaMcwejmibuEnrmoX9dsCKXjM9hGyvJqyKhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;434&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;早在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2016&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;IMWeb&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;团队就率先对&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;进行探索和实践。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我们是腾讯公司内最早将&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;落地于业务的团队之一，也是腾讯云&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;直播能力最主要的使用者。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年初，由于疫情，在线教育迎来爆发式的增长。为了保障受疫情影响而无法返校的学生能够继续通过线上课程完成学业，我们开展了“&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;停课不停学&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;”活动。在此期间对原有的&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;互动直播&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;+CDN &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;云直播能力进行了全面升级，集成了快直播能力与语音举手功能，使更多的用户可以享受&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;带来的低延迟、高性能的互动直播体验。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;疫情渐渐平缓，&lt;/span&gt;&lt;span&gt;IMWeb&lt;/span&gt;&lt;span&gt;音视频小分队的脚步没有因此而停缓。&lt;/span&gt;&lt;span&gt;2020&lt;/span&gt;&lt;span&gt;下半年，我们又做为公司内勇于第一个吃螃蟹的人，相继上线了腾讯课堂的&lt;/span&gt;&lt;span&gt;Web&lt;/span&gt;&lt;span&gt;视频连麦能力，推出了团队自研的&lt;/span&gt;&lt;span&gt;WebRTCSDK &lt;/span&gt;&lt;span&gt;与之相配套使用的&lt;/span&gt;&lt;span&gt;LokiPlayer&lt;/span&gt;&lt;span&gt;播放器。&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;LokiPlayer&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;集&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;WebRTC&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;互动直播、快直播、云直播、降级流控、点播等能力于一身，本身就已是集大成者，又通过提供基于插槽与注入实现的插件化能力保证播放器与&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;SDK&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;本身都可以被业务灵活的扩展&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img align=&quot;bottom&quot; border=&quot;0&quot; data-ratio=&quot;0.4267241379310345&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTtvcNxTmN4NI1oj6IJqbEbnCuplfFaf2GV00Qeqnd58TtF2LibwJGlfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;464&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2021&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;年，我们将继续深入研究音视频的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;底层原理&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，探索更多在&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Web&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;浏览器能得到应用的技术，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;持续性地优化&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;诸如音视频体验、音视频质量以及测试与定位等能力。结合&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;wasm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，将之前无法想象的功能逐个实践、逐个实现落地。明年将与&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;终端播放器一起对外进行开源。如果你恰好是&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Web&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;音视频技术的使用者，千万不要错过！&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;89202&quot; hm_fix=&quot;287:299&quot;&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot; data-width=&quot;100%&quot;&gt;展望2021技术趋势&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;技术的核心价值是为业务创造价值。那么，如何能快速满足业务发展诉求呢？首先，我们始终离不开解决成本、效率、质量三者之间的平衡。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;因此，&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;提升基础物料的可用性、提升开发工具的便捷性、完善动态运营的灵活性以及解决产品质量的稳定性，这些永远都会在我们的日常工作中持续进行，并且在追求极致的道路上永无止境&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;！&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;正所谓分久必合，合久必分。无论是选择极权式的中台化解决方案，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;亦或&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;是选择去中心化的业务自制模式，都可以提升技术在业务的影响力。当然选择什么样的方式，这与企业自身的基因和团队发展的阶段有很大的关系。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;在垂直领域的技术发展方面，我们对&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2021&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;年可以做一些展望：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;三大框架的同质化会越来越明显，而周边配套还在可持续的发展中。&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;从开发者的基数上可以看到未来一年&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;还是会持续性地领先&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;span&gt;，但这并不妨碍&lt;/span&gt;&lt;span&gt;Vue&lt;/span&gt;&lt;span&gt;的优秀；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;由于可维护性和系统的复杂度上升，&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;TS&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;未来一年依旧会保持强劲的势头吞噬&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;JS&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;的版图&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;，&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;未来会有更多的开源框架和基础组件拥抱&lt;/span&gt;&lt;span&gt;TS&lt;/span&gt;&lt;span&gt;社区。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;大前端领域的前端工程化如今已经慢慢成熟和稳定了，而在未来一段时间，更多是基于全栈开发的工程化体系的建设。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;前端开发者会更多的借鉴后台开发的经验去加速这一历史进程的速度，尽快完成全栈研发体系的升级和探索。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;随着&lt;/span&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;span&gt;持续性的发展，会有越来越多的产品在业务上落地&lt;/span&gt;&lt;span&gt;WASM&lt;/span&gt;&lt;span&gt;这项技术。&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;而随着&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;WASM&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;的发展浏览器桌面应用化的趋势也会越来越明显&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;WebOS&lt;/span&gt;&lt;span&gt;未来是否能够落地，相信&lt;/span&gt;&lt;span&gt;WASM&lt;/span&gt;&lt;span&gt;在其中一定扮演了重要的角色。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;小程序的标准化虽然提上了日程，但是由于有微信这样超级&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;APP&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;的存在，标准化的道路注定不会平坦&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;跨端开发上最耀眼的明星还是&lt;/span&gt;&lt;span&gt;Flutter&lt;/span&gt;&lt;span&gt;，而苹果公司发布的&lt;/span&gt;&lt;span&gt;SwiftUI&lt;/span&gt;&lt;span&gt;也在路上了。从开发者的角度来看，多端同构是一种美好的愿望，但是任重道远，仍然需要长期且持续性的攻坚克难；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;与其说是&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;不断地持续升温，不如说是泛前端的时代已经到来。前端团队寻求价值的渴望驱使着开发者们不断突破着自己的工作范围；&lt;/span&gt;&lt;span&gt;&lt;strong&gt;前端服务化的工作模式已经从萌芽阶段发展到路人皆知的阶段了&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;，&lt;/strong&gt;大前端服务化的趋势已经是这个时代不可逆转的趋势了。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;随着&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;5G&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;网络的普及和手机硬件的不断提升，流量瓶颈和渲染性能在未来一年会有质的提升，这其中最大的受益者就是从事音视频领域的开发者。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;相信在未来的一年里，音视频领域一定是百花齐放的状态。&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;低代码的场景天然的靶场就是在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;B&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;端业务中进行抽象和实现。而&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;随着产业互联网的提出，整个行业进入了&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;ToB&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;的转型期，未来的低代码会越来越受到大厂的重视。&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;当然，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;低代码还是要持续解决三大问题：基础平台的能力完善、开发质量更加可控，以及低代码产物的可维护性提升&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;。&lt;/strong&gt;可以遇见的未来低代码会火爆的表现，并且会在生产中绽放光彩。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;最后，为&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;IMWebConf2020 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;大会打个小广告。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;本届大会在&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;2021&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;年&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;月&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;16&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;日下午在线直播&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;，&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;我们邀请了&lt;/span&gt;&lt;span&gt;IMWeb&lt;/span&gt;&lt;span&gt;团队内优秀的开发者，他们会结合自身实践经验，分享自己在前沿领域中的思考与解决方案。如果你对以下任何一项内容感兴趣，欢迎参与，一起学习和交流。&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前端工程化：详解团队的前端工程化、效率工具建设探索实践；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;音视频领域：前端直播点播技术的探索，尤其是直播&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;WebRTC&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;技术的相关实践。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;低代码进阶：深度解读低代码概念，以及在团队低代码系统的实践方案；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;全栈开发：落地过程中的经验分享，关于效率、质量、性能的思考。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;97587&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;img data-ratio=&quot;0.006666666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTpYCqKEk84WYLjXWMW4UEtXZmOJoW2qohamINa5libjEWjicI2NY9x9Eg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; data-width=&quot;100%&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section hm_fix=&quot;353:260&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;紧追技术前沿，深挖专业领域&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;扫码关注我们吧！&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTiauPhBIzeOQXqgkAPwWLPq2w04OOpRLYqPbkM3mTkf3X7R50BCyohkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;142&quot; data-width=&quot;100%&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;img data-ratio=&quot;0.006666666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xsw6Lt5pDCsrnX9Zj1LdncUicPJKdlDDTpYCqKEk84WYLjXWMW4UEtXZmOJoW2qohamINa5libjEWjicI2NY9x9Eg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; data-width=&quot;100%&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>