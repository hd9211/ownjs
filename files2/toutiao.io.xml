<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>ce6a497ae6bbc7c84b16f11b837b1c15</guid>
<title>资料 | Google 构建安全可靠的系统（最终版）.pdf</title>
<link>https://toutiao.io/k/pjlvk64</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;开发者头条&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;kaifazhetoutiao&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;程序员分享平台 | 官方应用下载地址：http://toutiao.io/download&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9c0753e72e0b88757f68ee561e94ba81</guid>
<title>高并发系统的限流策略：漏桶和令牌桶（附源码剖析）</title>
<link>https://toutiao.io/k/x6ro69m</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;哈喽，大家好，我是正在学习&lt;code&gt;PS&lt;/code&gt;技术的&lt;code&gt;asong&lt;/code&gt;，这是我并发编程系列的第&lt;code&gt;5&lt;/code&gt;篇文章，今天与大家聊一聊高并发系统中的限流技术，限流又称为流量控制，是指限制到达系统的并发请求数，当达到限制条件则可以拒绝请求，可以起到保护下游服务，防止服务过载等作用。常用的限流策略有漏桶算法、令牌桶算法、滑动窗口；下文主要与大家一起分析一下漏桶算法和令牌桶算法，滑动窗口就不在这里这介绍了。好啦，废话不多话，开整。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;漏桶算法&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;漏桶算法比较好理解，假设我们现在有一个水桶，我们向这个水桶里添水，虽然我们我们无法预计一次会添多少水，也无法预计水流入的速度，但是可以固定出水的速度，不论添水的速率有多大，都按照固定的速率流出，如果桶满了，溢出的上方水直接抛弃。我们把水当作&lt;code&gt;HTTP&lt;/code&gt;请求，每次都把请求放到一个桶中，然后以固定的速率处理请求，说了这么多，不如看一个图加深理解(图片来自于网络，手残党不会画，多多包涵)：&lt;/p&gt;&lt;img data-ratio=&quot;1.3176229508196722&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/k5430ljpYPNFVT6F1cSh4LJhic7wX9o3chrbsG2ukqH2YliaicwdJibcq8icWRObTT5crsHvaUBic5t9ndGGxRLLYwyg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;488&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原理其实很简单，就看我们怎么实现它了，&lt;code&gt;uber&lt;/code&gt;团队有一个开源的&lt;code&gt;uber-go/ratelimit&lt;/code&gt;库，这个库就是漏桶的一种实现，下面我们一起来看一看他的实现思路。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;样例&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;学习一个新东西的时候，往往是从会用开始的，慢慢才能明白其实现原理，所以我们先来看看这个库是怎样使用的，这里我们直接提供一个实际使用例子，配合&lt;code&gt;Gin&lt;/code&gt;框架，我们添加一个限流中间件，来达到请求限流的作用，测试代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 定义全局限流器对象&lt;/span&gt;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; rateLimit ratelimit.Limiter&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 在 gin.HandlerFunc 加入限流逻辑&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;leakyBucket&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;gin&lt;/span&gt;.&lt;span&gt;HandlerFunc&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; prev := time.Now()&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;(c *gin.Context)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  now := rateLimit.Take()&lt;br/&gt;  fmt.Println(now.Sub(prev)) &lt;span&gt;// 为了打印时间间隔&lt;/span&gt;&lt;br/&gt;  prev = now &lt;span&gt;// 记录上一次的时间，没有这个打印的会有问题&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; rateLimit = ratelimit.New(&lt;span&gt;10&lt;/span&gt;)&lt;br/&gt; r := gin.Default()&lt;br/&gt; r.GET(&lt;span&gt;&quot;/ping&quot;&lt;/span&gt;, leakyBucket(), &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;(c *gin.Context)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  c.JSON(&lt;span&gt;200&lt;/span&gt;, &lt;span&gt;true&lt;/span&gt;)&lt;br/&gt; })&lt;br/&gt; r.Run() &lt;span&gt;// listen and serve on 0.0.0.0:8080 (for windows &quot;localhost:8080&quot;)&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们简单使用压测工具&lt;code&gt;ab&lt;/code&gt;测试一下：&lt;code&gt;ab -n 10 -c 2 http://127.0.0.1:8080/ping&lt;/code&gt;，执行结果部分如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3687074829931973&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/k5430ljpYPNFVT6F1cSh4LJhic7wX9o3cuPNpVZHTAJ6bSDPeHCC79oZktdSpbBiaTgPIAWiawypIicd5LGmwcDNvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;735&quot;/&gt;&lt;/figure&gt;&lt;img data-ratio=&quot;0.7490494296577946&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/k5430ljpYPNFVT6F1cSh4LJhic7wX9o3cmtHcjFh7L588hQFUGgCynLuSw7v9GMR8fJc2VabFIhkdEiccpDSclhA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;789&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;观察结果可知，每次处理请求的时间间隔是10ms，并且后面的请求耗时越来越久，为什么会这样呢？这里先卖个小关子，看完&lt;code&gt;uber&lt;/code&gt;的实现你就知道了～&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;源码实现&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们首先来看一下其核心结构：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; limiter &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt; sync.Mutex&lt;br/&gt; last       time.Time&lt;br/&gt; sleepFor   time.Duration&lt;br/&gt; perRequest time.Duration&lt;br/&gt; maxSlack   time.Duration&lt;br/&gt; clock      Clock&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; Limiter &lt;span&gt;interface&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;// Take should block to make sure that the RPS is met.&lt;/span&gt;&lt;br/&gt; Take() time.Time&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;限制器接口只提供了一个方法&lt;code&gt;take()&lt;/code&gt;，&lt;code&gt;take()&lt;/code&gt;方法会阻塞确保两次请求之间的时间走完，具体实现我们在下面进行分析。实现限制器接口的结构体中各个字段的意义如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;sync.Mutext&lt;/code&gt;：互斥锁，控制并发的作用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;last&lt;/code&gt;：记录上一次的时刻&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;sleepFor&lt;/code&gt;：距离处理下一次请求需要等待的时间&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;perRequest&lt;/code&gt;：每次请求的时间间隔&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;maxSlack&lt;/code&gt;：最大松弛量，用来解决突发流量&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;clock&lt;/code&gt;：一个时钟或模拟时钟，提供了&lt;code&gt;now&lt;/code&gt;和&lt;code&gt;sleep&lt;/code&gt;方法，是实例化速率限制器&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要是用该限制器，首先需要通过&lt;code&gt;New&lt;/code&gt;方法进行初始化，一个必传的参数是&lt;code&gt;rate&lt;/code&gt;，代表的是每秒请求量(RPS)，还有一个可选参数，参数类型&lt;code&gt;option&lt;/code&gt;，也就是我们可以自定义&lt;code&gt;limit&lt;/code&gt;，不过一般使用场景不多，这里就不过多介绍了。我主要看一下他是怎么保证固定速率的，截取&lt;code&gt;New&lt;/code&gt;方法部分代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;l := &amp;amp;limiter{&lt;br/&gt;  perRequest: time.Second / time.Duration(rate),&lt;br/&gt;  maxSlack:   &lt;span&gt;-10&lt;/span&gt; * time.Second / time.Duration(rate),&lt;br/&gt; }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据我们传入的请求数量，能计算出&lt;code&gt;1&lt;/code&gt;s内要通过&lt;code&gt;n&lt;/code&gt;个请求，每个请求之间的间隔时间是多少，这样在&lt;code&gt;take&lt;/code&gt;方法中就可以根据这个字段来处理请求的固定速率问题，这里还初始化了最大松弛化字段，他的值是负数，默认最大松弛量是10个请求的时间间隔。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来我们主要看一下&lt;code&gt;take&lt;/code&gt;方法：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(t *limiter)&lt;/span&gt; &lt;span&gt;Take&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;time&lt;/span&gt;.&lt;span&gt;Time&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; t.Lock()&lt;br/&gt; &lt;span&gt;defer&lt;/span&gt; t.Unlock()&lt;br/&gt; now := t.clock.Now()&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; t.last.IsZero() {&lt;br/&gt;  t.last = now&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; t.last&lt;br/&gt; }&lt;br/&gt; t.sleepFor += t.perRequest - now.Sub(t.last)&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; t.sleepFor &amp;lt; t.maxSlack {&lt;br/&gt;  t.sleepFor = t.maxSlack&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; t.sleepFor &amp;gt; &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;  t.clock.Sleep(t.sleepFor)&lt;br/&gt;  t.last = now.Add(t.sleepFor)&lt;br/&gt;  t.sleepFor = &lt;span&gt;0&lt;/span&gt;&lt;br/&gt; } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;  t.last = now&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; t.last&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;take()&lt;/code&gt;方法的执行步骤如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;为了控制并发，所以进入该方法就需要进行上锁，该锁的粒度比较大，整个方法都加上了锁&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过&lt;code&gt;IsZero&lt;/code&gt;方法来判断当前是否是第一次请求，如果是第一次请求，直接取&lt;code&gt;now&lt;/code&gt;时间即可返回。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果不是第一次请求，就需要计算距离处理下一次请求需要等待的时间，这里有一个要注意点的是累加需要等待的时间，目的是可以给后面的抵消使用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果当前累加需要等待的时间大于最大松弛量了，将等待的时间设置为最大松弛量的时间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果当前请求多余的时间无法完全抵消此次的所需量，调用&lt;code&gt;sleep&lt;/code&gt;方法进行阻塞，同时清空等待的时间。如果&lt;code&gt;sleepFor&lt;/code&gt;小于0，说明此次请求时间间隔大于预期间隔，也就说无需等待可以直接处理请求。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;步骤其实不是很多，主要需要注意一个知识点 —— 最大松弛量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;漏桶算法有个天然缺陷就是无法应对突发流量（匀速，两次请求 &lt;code&gt;req1&lt;/code&gt; 和 &lt;code&gt;req2&lt;/code&gt; 之间的延迟至少应该 &lt;code&gt;&amp;gt;=perRequest&lt;/code&gt;)，举个例子说明：假设我们现在有三个请求&lt;code&gt;req1&lt;/code&gt;、&lt;code&gt;req2&lt;/code&gt;、&lt;code&gt;req3&lt;/code&gt;按顺序处理，每个请求处理间隔为100ms，&lt;code&gt;req1&lt;/code&gt;请求处理完成之后150ms，&lt;code&gt;req2&lt;/code&gt;请求到来，依据限速策略可以对 &lt;code&gt;req2&lt;/code&gt; 立即处理，当 &lt;code&gt;req2&lt;/code&gt; 完成后，&lt;code&gt;50ms&lt;/code&gt; 后， &lt;code&gt;req3&lt;/code&gt; 到来，这个时候距离上次请求还不足 &lt;code&gt;100ms&lt;/code&gt;，因此还需要等待 &lt;code&gt;50ms&lt;/code&gt; 才能继续执行, 但是，对于这种情况，实际上这三个请求一共消耗了 &lt;code&gt;250ms&lt;/code&gt; 才完成，并不是预期的 &lt;code&gt;200ms&lt;/code&gt;。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.36585365853658536&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/k5430ljpYPNFVT6F1cSh4LJhic7wX9o3cUaL5fBcZbqtpjElkH1gn4OUdJ0BGXeV8TibYQv3N4VS1brTnjDh0L5A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;656&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于上面这种情况，我们可以把之前间隔比较长的请求的时间匀给后面的请求判断限流时使用，减少请求等待的时间了，但是当两个请求之间到达的间隔比较大时，就会产生很大的可抵消时间，以至于后面大量请求瞬间到达时，也无法抵消这个时间，那样就已经失去了限流的意义，所以引入了最大松弛量 (maxSlack) 的概念, 该值为负值，表示允许抵消的最长时间，防止以上情况的出现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是漏桶实现的基本思路了，整体还是很简单的，你学会了吗？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;令牌桶算法&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;令牌桶其实和漏桶的原理类似，令牌桶就是想象有一个固定大小的桶，系统会以恒定速率向桶中放 Token，桶满则暂时不放。从网上找了图，表述非常恰当：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.47368421052631576&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/k5430ljpYPNFVT6F1cSh4LJhic7wX9o3crxfSWBTvxFvc3nibia41UqHe4ibNGSAnTgafHwkRGa26h2WuO7x122oIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;532&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于令牌桶限流算法的实现，&lt;code&gt;Github&lt;/code&gt;有一个高效的基于令牌桶限流算法实现的限流库：&lt;code&gt;github.com/juju/ratelimit&lt;/code&gt;，&lt;code&gt;Golang&lt;/code&gt;的&lt;code&gt;timer/rate&lt;/code&gt;也是令牌桶的一种实现，本文就不介绍&lt;code&gt;juju/ratelimit&lt;/code&gt;库了，有兴趣的自己学习一下的他的实现思想吧，我们主要来看一看&lt;code&gt;time/rate&lt;/code&gt;是如何实现的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;样例&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还是老样子，我们还是结合&lt;code&gt;gin&lt;/code&gt;写一个限流中间件看看他是怎么使用的，例子如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt; &lt;span&gt;&quot;net/http&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&quot;time&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; &lt;span&gt;&quot;github.com/gin-gonic/gin&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&quot;golang.org/x/time/rate&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; rateLimit *rate.Limiter&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;tokenBucket&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;gin&lt;/span&gt;.&lt;span&gt;HandlerFunc&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;(c *gin.Context)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; rateLimit.Allow() {&lt;br/&gt;   c.String(http.StatusOK, &lt;span&gt;&quot;rate limit,Drop&quot;&lt;/span&gt;)&lt;br/&gt;   c.Abort()&lt;br/&gt;   &lt;span&gt;return&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;  c.Next()&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; limit := rate.Every(&lt;span&gt;100&lt;/span&gt; * time.Millisecond)&lt;br/&gt; rateLimit = rate.NewLimiter(limit, &lt;span&gt;10&lt;/span&gt;)&lt;br/&gt; r := gin.Default()&lt;br/&gt; r.GET(&lt;span&gt;&quot;/ping&quot;&lt;/span&gt;, tokenBucket(), &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;(c *gin.Context)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  c.JSON(&lt;span&gt;200&lt;/span&gt;, &lt;span&gt;true&lt;/span&gt;)&lt;br/&gt; })&lt;br/&gt; r.Run() &lt;span&gt;// listen and serve on 0.0.0.0:8080 (for windows &quot;localhost:8080&quot;)&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的例子我们首先调用&lt;code&gt;NewLimiter&lt;/code&gt;方法构造一个限流器，第一个参数是&lt;code&gt;r limit&lt;/code&gt;，代表每秒可以向&lt;code&gt;Token&lt;/code&gt;桶中产生多少&lt;code&gt;token&lt;/code&gt;，第二个参数是&lt;code&gt;b int&lt;/code&gt;，代表&lt;code&gt;Token&lt;/code&gt;桶的容量大小，对于上面的例子，表示每&lt;code&gt;100ms&lt;/code&gt;往桶中放一个&lt;code&gt;token&lt;/code&gt;，也就是&lt;code&gt;1s&lt;/code&gt;钟产生&lt;code&gt;10&lt;/code&gt;个，桶的容量就是&lt;code&gt;10&lt;/code&gt;。消费&lt;code&gt;token&lt;/code&gt;的方法这里我们使用&lt;code&gt;Allow&lt;/code&gt;方法，Allow 实际上就是 &lt;code&gt;AllowN(time.Now(),1)&lt;/code&gt;，&lt;code&gt;AllowN&lt;/code&gt;方法表示，截止到某一时刻，目前桶中数目是否至少为 &lt;code&gt;n&lt;/code&gt; 个，满足则返回 &lt;code&gt;true&lt;/code&gt;，同时从桶中消费 &lt;code&gt;n&lt;/code&gt;个 &lt;code&gt;token&lt;/code&gt;。反之返回不消费 &lt;code&gt;Token&lt;/code&gt;。对应上面的例子，当桶中的数目不足于&lt;code&gt;1&lt;/code&gt;个时，就会丢掉该请求。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;源码剖析&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Limit类型&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;time/rate&lt;/code&gt;自定义了一个&lt;code&gt;limit&lt;/code&gt;类型，其实他本质就是&lt;code&gt;float64&lt;/code&gt;的别名，&lt;code&gt;Limit&lt;/code&gt;定了事件的最大频率，表示每秒事件的数据量，0就表示无限制。&lt;code&gt;Inf&lt;/code&gt;是无限的速率限制；它允许所有事件(即使突发为0)。还提供&lt;code&gt;Every&lt;/code&gt; 方法来指定向&lt;code&gt;Token&lt;/code&gt; 桶中放置&lt;code&gt;Token&lt;/code&gt; 的间隔，计算出每秒时间的数据量。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Limit &lt;span&gt;float64&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// Inf is the infinite rate limit; it allows all events (even if burst is zero).&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; Inf = Limit(math.MaxFloat64)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// Every converts a minimum time interval between events to a Limit.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;Every&lt;/span&gt;&lt;span&gt;(interval time.Duration)&lt;/span&gt; &lt;span&gt;Limit&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; interval &amp;lt;= &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; Inf&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; &lt;span&gt;1&lt;/span&gt; / Limit(interval.Seconds())&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;Limiter&lt;/code&gt;结构体&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Limiter &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt; mu     sync.Mutex&lt;br/&gt; limit  Limit&lt;br/&gt; burst  &lt;span&gt;int&lt;/span&gt;&lt;br/&gt; tokens &lt;span&gt;float64&lt;/span&gt;&lt;br/&gt; &lt;span&gt;// last is the last time the limiter&#x27;s tokens field was updated&lt;/span&gt;&lt;br/&gt; last time.Time&lt;br/&gt; &lt;span&gt;// lastEvent is the latest time of a rate-limited event (past or future)&lt;/span&gt;&lt;br/&gt; lastEvent time.Time&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;各个字段含义如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;mu&lt;/code&gt;：互斥锁、为了控制并发&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;limit&lt;/code&gt;：每秒允许处理的事件数量，即每秒处理事件的频率&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;burst&lt;/code&gt;：令牌桶的最大数量，如果&lt;code&gt;burst&lt;/code&gt;为0，并且limit == Inf，则允许处理任何事件，否则不允许&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;tokens&lt;/code&gt;：令牌桶中可用的令牌数量&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;last&lt;/code&gt;：记录上次limiter的tokens被更新的时间&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;lastEvent&lt;/code&gt;：&lt;code&gt;lastEvent&lt;/code&gt;记录速率受限制(桶中没有令牌)的时间点，该时间点可能是过去的，也可能是将来的(&lt;code&gt;Reservation&lt;/code&gt;预定的结束时间点)&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;Reservation&lt;/code&gt;结构体&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Reservation &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt; ok        &lt;span&gt;bool&lt;/span&gt;&lt;br/&gt; lim       *Limiter&lt;br/&gt; tokens    &lt;span&gt;int&lt;/span&gt;&lt;br/&gt; timeToAct time.Time&lt;br/&gt; &lt;span&gt;// This is the Limit at reservation time, it can change later.&lt;/span&gt;&lt;br/&gt; limit Limit&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;各个字段含义如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ok&lt;/code&gt;：到截至时间是否可以获取足够的令牌&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;lim&lt;/code&gt;：&lt;code&gt;limiter&lt;/code&gt;对象&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;tokens&lt;/code&gt;：需要获取的令牌数量&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;timeToAct&lt;/code&gt;：需要等待的时间点&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;limit&lt;/code&gt;：代表预定的时间，是可以更改的。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;reservation&lt;/code&gt;就是一个预定令牌的操作，&lt;code&gt;timeToAct&lt;/code&gt;是本次预约需要等待到的指定时间点才有足够预约的令牌。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;Limiter&lt;/code&gt;消费token&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Limite&lt;/code&gt;r有三个&lt;code&gt;token&lt;/code&gt;的消费方法，分别是&lt;code&gt;Allow&lt;/code&gt;、&lt;code&gt;Reserve&lt;/code&gt;和&lt;code&gt;Wait&lt;/code&gt;，最终三种消费方式都调用了&lt;code&gt;reserveN&lt;/code&gt; 、&lt;code&gt;advance&lt;/code&gt;这两个方法来生成和消费 &lt;code&gt;Token&lt;/code&gt;。所以我们主要看看&lt;code&gt;reserveN&lt;/code&gt;、&lt;code&gt;advance&lt;/code&gt;函数的具体实现。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(lim *Limiter)&lt;/span&gt; &lt;span&gt;advance&lt;/span&gt;&lt;span&gt;(now time.Time)&lt;/span&gt; &lt;span&gt;(newNow time.Time, newLast time.Time, newTokens &lt;span&gt;float64&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;//last不能在当前时间now之后，否则计算出来的elapsed为负数，会导致令牌桶数量减少&lt;/span&gt;&lt;br/&gt;  last := lim.last&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; now.Before(last) {&lt;br/&gt;  last = now&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; &lt;span&gt;//根据令牌桶的缺数计算出令牌桶未进行更新的最大时间&lt;/span&gt;&lt;br/&gt; maxElapsed := lim.limit.durationFromTokens(&lt;span&gt;float64&lt;/span&gt;(lim.burst) - lim.tokens)&lt;br/&gt; elapsed := now.Sub(last) &lt;span&gt;//令牌桶未进行更新的时间段&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; elapsed &amp;gt; maxElapsed {&lt;br/&gt;  elapsed = maxElapsed&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; &lt;span&gt;//根据未更新的时间(未向桶中加入令牌的时间段)计算出产生的令牌数&lt;/span&gt;&lt;br/&gt; delta := lim.limit.tokensFromDuration(elapsed)&lt;br/&gt; tokens := lim.tokens + delta &lt;span&gt;//计算出可用的令牌数&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; burst := &lt;span&gt;float64&lt;/span&gt;(lim.burst); tokens &amp;gt; burst {&lt;br/&gt;  tokens = burst&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; now, last, tokens&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;advance&lt;/code&gt;方法的作用是更新令牌桶的状态，计算出令牌桶未更新的时间(elapsed)，根据&lt;code&gt;elapsed&lt;/code&gt;算出需要向桶中加入的令牌数&lt;code&gt;delta&lt;/code&gt;，然后算出桶中可用的令牌数&lt;code&gt;newTokens&lt;/code&gt;.&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;reserveN&lt;/code&gt;方法的实现：&lt;code&gt;reserveN&lt;/code&gt;是&lt;code&gt;AllowN&lt;/code&gt;,&lt;code&gt;ReserveN&lt;/code&gt;及&lt;code&gt;WaitN&lt;/code&gt;的辅助方法，用于判断在&lt;code&gt;maxFutureReserve&lt;/code&gt;时间内是否有足够的令牌。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// @param n 要消费的token数量&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// @param maxFutureReserve 愿意等待的最长时间&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(lim *Limiter)&lt;/span&gt; &lt;span&gt;reserveN&lt;/span&gt;&lt;span&gt;(now time.Time, n &lt;span&gt;int&lt;/span&gt;, maxFutureReserve time.Duration)&lt;/span&gt; &lt;span&gt;Reservation&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; lim.mu.Lock()&lt;br/&gt; &lt;span&gt;// 如果没有限制&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; lim.limit == Inf {&lt;br/&gt;  lim.mu.Unlock()&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; Reservation{&lt;br/&gt;   ok:        &lt;span&gt;true&lt;/span&gt;, &lt;span&gt;//桶中有足够的令牌&lt;/span&gt;&lt;br/&gt;   lim:       lim,&lt;br/&gt;   tokens:    n,&lt;br/&gt;   timeToAct: now,&lt;br/&gt;  }&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;//更新令牌桶的状态，tokens为目前可用的令牌数量&lt;/span&gt;&lt;br/&gt; now, last, tokens := lim.advance(now)&lt;br/&gt;  &lt;span&gt;// 计算取完之后桶还能剩能下多少token&lt;/span&gt;&lt;br/&gt; tokens -= &lt;span&gt;float64&lt;/span&gt;(n)&lt;br/&gt; &lt;span&gt;var&lt;/span&gt; waitDuration time.Duration&lt;br/&gt;  &lt;span&gt;// 如果token &amp;lt; 0, 说明目前的token不够，需要等待一段时间&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; tokens &amp;lt; &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;  waitDuration = lim.limit.durationFromTokens(-tokens)&lt;br/&gt; }&lt;br/&gt; ok := n &amp;lt;= lim.burst &amp;amp;&amp;amp; waitDuration &amp;lt;= maxFutureReserve&lt;br/&gt; r := Reservation{&lt;br/&gt;  ok:    ok,&lt;br/&gt;  lim:   lim,&lt;br/&gt;  limit: lim.limit,&lt;br/&gt; }&lt;br/&gt;  &lt;span&gt;// timeToAct表示当桶中满足token数目等于n的时间&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; ok {&lt;br/&gt;  r.tokens = n&lt;br/&gt;  r.timeToAct = now.Add(waitDuration)&lt;br/&gt; }&lt;br/&gt;  &lt;span&gt;// 更新桶里面的token数目&lt;/span&gt;&lt;br/&gt; &lt;span&gt;// 更新last时间&lt;/span&gt;&lt;br/&gt; &lt;span&gt;// lastEvent&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; ok {&lt;br/&gt;  lim.last = now&lt;br/&gt;  lim.tokens = tokens&lt;br/&gt;  lim.lastEvent = r.timeToAct&lt;br/&gt; } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;  lim.last = last&lt;br/&gt; }&lt;br/&gt; lim.mu.Unlock()&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; r&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的代码我已经进行了注释，这里在总结一下流程：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;首选判断是否拥有速率限制，没有速率限制也就是桶中一致拥有足够的令牌。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;计算从上次取 Token 的时间到当前时刻，期间一共新产生了多少 &lt;code&gt;Token&lt;/code&gt;：我们只在取&lt;code&gt;Token&lt;/code&gt; 之前生成新的&lt;code&gt;Token&lt;/code&gt;，也就意味着每次取&lt;code&gt;Token&lt;/code&gt;的间隔，实际上也是生成 &lt;code&gt;Token&lt;/code&gt; 的间隔。我们可以利用 &lt;code&gt;tokensFromDuration&lt;/code&gt;, 轻易的算出这段时间一共产生 &lt;code&gt;Token&lt;/code&gt; 的数目。所以当前 &lt;code&gt;Token&lt;/code&gt; 数目 = 新产生的&lt;code&gt;Token&lt;/code&gt; 数目 + 之前剩余的 &lt;code&gt;Token&lt;/code&gt; 数目 - 要消费的&lt;code&gt;Token&lt;/code&gt; 数目。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果消费后剩余 Token 数目大于零，说明此时 Token 桶内仍不为空，此时 Token 充足，无需调用侧等待。如果 Token 数目小于零，则需等待一段时间。那么这个时候，我们可以利用 &lt;code&gt;durationFromTokens&lt;/code&gt; 将当前负值的 Token 数转化为需要等待的时间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将需要等待的时间等相关结果返回给调用方&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实整个过程就是利用了 &lt;strong&gt;Token 数可以和时间相互转化&lt;/strong&gt; 的原理。而如果 Token 数为负，则需要等待相应时间即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面提到了&lt;code&gt;durationFromTokens&lt;/code&gt;、&lt;code&gt;tokensFromDuration&lt;/code&gt;这两个方法，是关键，他们的实现如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(limit Limit)&lt;/span&gt; &lt;span&gt;durationFromTokens&lt;/span&gt;&lt;span&gt;(tokens &lt;span&gt;float64&lt;/span&gt;)&lt;/span&gt; &lt;span&gt;time&lt;/span&gt;.&lt;span&gt;Duration&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; seconds := tokens / &lt;span&gt;float64&lt;/span&gt;(limit)&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; time.Nanosecond * time.Duration(&lt;span&gt;1e9&lt;/span&gt;*seconds)&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(limit Limit)&lt;/span&gt; &lt;span&gt;tokensFromDuration&lt;/span&gt;&lt;span&gt;(d time.Duration)&lt;/span&gt; &lt;span&gt;float64&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;// Split the integer and fractional parts ourself to minimize rounding errors.&lt;/span&gt;&lt;br/&gt; &lt;span&gt;// See golang.org/issues/34861.&lt;/span&gt;&lt;br/&gt; sec := &lt;span&gt;float64&lt;/span&gt;(d/time.Second) * &lt;span&gt;float64&lt;/span&gt;(limit)&lt;br/&gt; nsec := &lt;span&gt;float64&lt;/span&gt;(d%time.Second) * &lt;span&gt;float64&lt;/span&gt;(limit)&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; sec + nsec/&lt;span&gt;1e9&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;durationFromTokens&lt;/code&gt;：功能是计算出生成&lt;code&gt;N&lt;/code&gt; 个新的&lt;code&gt;Token&lt;/code&gt; 一共需要多久。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;tokensFromDuration&lt;/code&gt;：给定一段时长，这段时间一共可以生成多少个 Token。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;细心的网友会发现&lt;code&gt;tokensFromDuration&lt;/code&gt;方法既然是计算一段时间一共可以生成多少个&lt;code&gt;Token&lt;/code&gt;，为什么不直接进行相乘呢？其实&lt;code&gt;Golang&lt;/code&gt;最初的版本就是采用&lt;code&gt;d.Seconds() * float64(limit)&lt;/code&gt;直接相乘实现的，虽然看上去一点问题没有，但是这里是两个小数相乘，会带来精度损失，所以采用现在这种方法实现，分别求出秒的整数部分和小数部分，进行相乘后再相加，这样可以得到最精确的精度。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;limiter&lt;/code&gt;归还&lt;code&gt;Token&lt;/code&gt;&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然我们可以消费&lt;code&gt;Token&lt;/code&gt;，那么对应也可以取消此次消费，将&lt;code&gt;token&lt;/code&gt;归还，当调用 &lt;code&gt;Cancel()&lt;/code&gt; 函数时，消费的 Token 数将会尽可能归还给 Token 桶。归还也并不是那么简单，接下我们我们看看归还&lt;code&gt;token&lt;/code&gt;是如何实现的。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(r *Reservation)&lt;/span&gt; &lt;span&gt;CancelAt&lt;/span&gt;&lt;span&gt;(now time.Time)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; !r.ok {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; r.lim.mu.Lock()&lt;br/&gt; &lt;span&gt;defer&lt;/span&gt; r.lim.mu.Unlock()&lt;br/&gt;  &lt;span&gt;/*&lt;br/&gt;  1.如果无需限流&lt;br/&gt; 2. tokens为0 (需要获取的令牌数量为0)&lt;br/&gt; 3. 已经过了截至时间&lt;br/&gt; 以上三种情况无需处理取消操作&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; r.lim.limit == Inf || r.tokens == &lt;span&gt;0&lt;/span&gt; || r.timeToAct.Before(now) {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; &lt;span&gt;//计算出需要还原的令牌数量&lt;/span&gt;&lt;br/&gt; &lt;span&gt;//这里的r.lim.lastEvent可能是本次Reservation的结束时间，也可能是后来的Reservation的结束时间，所以要把本次结束时间点(r.timeToAct)之后产生的令牌数减去&lt;/span&gt;&lt;br/&gt; restoreTokens := &lt;span&gt;float64&lt;/span&gt;(r.tokens) - r.limit.tokensFromDuration(r.lim.lastEvent.Sub(r.timeToAct))&lt;br/&gt;  &lt;span&gt;// 当小于0，表示已经都预支完了，不能归还了&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; restoreTokens &amp;lt;= &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;//从新计算令牌桶的状态&lt;/span&gt;&lt;br/&gt; now, _, tokens := r.lim.advance(now)&lt;br/&gt; &lt;span&gt;//还原当前令牌桶的令牌数量，当前的令牌数tokens加上需要还原的令牌数restoreTokens&lt;/span&gt;&lt;br/&gt; tokens += restoreTokens&lt;br/&gt;  &lt;span&gt;//如果tokens大于桶的最大容量，则将tokens置为桶的最大容量&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; burst := &lt;span&gt;float64&lt;/span&gt;(r.lim.burst); tokens &amp;gt; burst {&lt;br/&gt;  tokens = burst&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;// update state&lt;/span&gt;&lt;br/&gt; r.lim.last = now &lt;span&gt;//记录桶的更新时间&lt;/span&gt;&lt;br/&gt; r.lim.tokens = tokens &lt;span&gt;//更新令牌数量&lt;/span&gt;&lt;br/&gt; &lt;span&gt;// 如果都相等，说明跟没消费一样。直接还原成上次的状态吧&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; r.timeToAct == r.lim.lastEvent {&lt;br/&gt;  prevEvent := r.timeToAct.Add(r.limit.durationFromTokens(&lt;span&gt;float64&lt;/span&gt;(-r.tokens)))&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; !prevEvent.Before(now) {&lt;br/&gt;   r.lim.lastEvent = prevEvent&lt;br/&gt;  }&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; &lt;span&gt;return&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注释已经添加，就不在详细解释了，重点是这一行代码：&lt;code&gt;restoreTokens := float64(r.tokens) - r.limit.tokensFromDuration(r.lim.lastEvent.Sub(r.timeToAct))&lt;/code&gt;，&lt;code&gt;r.tokens&lt;/code&gt;指的是本次消费的&lt;code&gt;token&lt;/code&gt;数，&lt;code&gt;r.timeToAcr&lt;/code&gt;指的是&lt;code&gt;Token&lt;/code&gt;桶可以满足本次消费数目的时刻，也就是消费的时刻+等待的时长，&lt;code&gt;r.lim.lastEvent&lt;/code&gt;指的是最近一次消费的&lt;code&gt;timeToAct&lt;/code&gt;的值，通过&lt;code&gt;r.limit.tokensFromDuration&lt;/code&gt;方法得出的结果指的是从该次消费到当前时间，一共又消费了多少&lt;code&gt;Token&lt;/code&gt;数目，所以最终得出这一段的代码含义是：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要归还的&lt;code&gt;Token&lt;/code&gt; = 该次消费的&lt;code&gt;Token&lt;/code&gt; - 新消费的&lt;code&gt;token&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好啦，源码就暂时分析到这了，因为标准库的实现的代码量有点大，还有一部分在这里没有说，留给大家自己去剖析吧～。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文重点介绍了漏桶算法和令牌桶算法，漏桶算法和令牌桶算法的主要区别在于，&quot;漏桶算法&quot;能够强行限制数据的传输速率(或请求频率)，而&quot;令牌桶算法&quot;在能够限制数据的平均传输速率外，还允许某种程度的突发传输。在某些情况下，漏桶算法不能够有效地使用网络资源，因为漏桶的漏出速率是固定的，所以即使网络中没有发生拥塞，漏桶算法也不能使某一个单独的数据流达到端口速率。因此，漏桶算法对于存在突发特性的流量来说缺乏效率。而令牌桶算法则能够满足这些具有突发特性的流量。通常，漏桶算法与令牌桶算法结合起来为网络流量提供更高效的控制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;好啦，这篇文章就到这里啦，素质三连（分享、点赞、在看）都是笔者持续创作更多优质内容的动力！&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;创建了一个Golang学习交流群，欢迎各位大佬们踊跃入群，我们一起学习交流。入群方式：加我vx拉你入群，或者公众号获取入群二维码&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结尾给大家发一个小福利吧，最近我在看[微服务架构设计模式]这一本书，讲的很好，自己也收集了一本PDF，有需要的小伙可以到自行下载。获取方式：关注公众号：[Golang梦工厂]，后台回复：[微服务]，即可获取。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;我翻译了一份GIN中文文档，会定期进行维护，有需要的小伙伴后台回复[gin]即可下载。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;翻译了一份Machinery中文文档，会定期进行维护，有需要的小伙伴们后台回复[machinery]即可获取。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;我是asong，一名普普通通的程序猿，让我们一起慢慢变强吧。欢迎各位的关注，我们下期见~~~&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4234375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/k5430ljpYPNFVT6F1cSh4LJhic7wX9o3cmPicXrYcyvAxtKDVTg3PzTQicpw8wLIc59lVPs6c0UrWDwr1qnwq67UA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;推荐往期文章：&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6711949e1c9dbfc911bd53d3afbe9c7a</guid>
<title>副业刚需：在 GitHub 上也能年入百万？</title>
<link>https://toutiao.io/k/r9tqaw3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;span/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编者荐语：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大家好，我是你们的朋友 耳东双月。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;108&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;转自：机器之心  （张倩、蛋酱）&lt;br/&gt;原文链接：https://calebporzio.com/i-just-hit-dollar-100000yr-on-github-sponsors-heres-how-i-did-it&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;如果提到靠打赏生活的人，我们首先想到的会是主播。但现实情况是，程序员也可以。这位活成主播的程序员名叫 Caleb Porzio。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;见过一个在职的朋友利用业余时间实现小程序矩阵，一个月大概赚了3000多，主要收入来自于小程序中插广告。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;那么问题来了，个人开发者如何通过小程序变现？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;最简单、粗暴的就是做流量主，通过小程序中的插入的广告变现！&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;门槛极低，变现难度对于个人开发者几乎没有!&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;那些小程序工具抖音去水印、头像制作、星座类的，微信搜索指数就能看出来，有非常巨大的流量入口，垂直工具虽然使用频率不是非常高，但是流量大的“足以发挥想象”啊！&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当然“发挥”才是重点！至于怎么发挥，对于程序员来说，流量入口是一定要有的。&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzMDAzMDIwMQ==&amp;amp;mid=2647848911&amp;amp;idx=1&amp;amp;sn=a56e484d8d5bd15a84f65e9948b7c151&amp;amp;chksm=f09ff9d9c7e870cf793e0e7c1a218fb11077ae56eb8b2c3e63caf2a13ba8d7f2d52ed26772d3&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;副业刚需，个人开发者如何通过小程序变现？已经有朋友变现月入4k了！&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Github打赏也能实现副业刚需？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在过去的一年里，他靠 GitHub 项目的打赏赚到了 10 万美元。在他的自述文章中，他分享了自己靠 GitHub 项目赚钱的经历和技巧。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.869684499314129&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;729&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZdowyhHFq7Y2iabdj4argc21taADIyGbE9ZBjs2d2nuf4O68SCzhAxhA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Caleb Porzio 发推庆祝自己靠 GitHub 打赏（GitHub Sponsors）赚到了 10 万美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;GitHub Sponsors &lt;/span&gt;&lt;span&gt;是 GitHub 2019 年 5 月份推出的一个功能，允许&lt;/span&gt;&lt;span&gt;开发者通过自己的项目获取报酬/赞赏。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;全职开发转自由职业，是怎样一种体验？以下是 Caleb 的故事。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我要分享一下自己走上自由职业的经历。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2018 年是我做全职开发的最后一年，当时我的年收入大概是 9 万美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.30178173719376394&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;898&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZd7uBPLRb6z5lIRPRNBjLrU7Uz5tbT59eJr6vcakbQQESjwGx0bD7UA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;嗯，虽然说现在开发人员的薪资水平比较疯狂，但 9 万美元对我来说也是一笔可观的收入了。再加上我妻子的收入，以及「胡子主义」生活哲学的指导，我们可以省下很多的钱。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2019 年 1 月 11 日，我离开原来的公司开始「休假」，想要换种心情，做自己想做的一切。几个月后，我正式开始了自由职业者的生活。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;「休假」期间，我读到了这篇文章：《Phoenix LiveView: Interactive, Real-Time Apps. No Need to Write JavaScript》，并从中受到启发。我发现自己也可以做出类似的成果。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当时我还发了一条推特：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9406919275123559&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1214&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZM1SiaYoMFxttYbc8nE0BBxuTWic5WmZJ1F2mUmoxY6kvqVzk2DUtkAHA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;「决定开发一个类似 Laravel 的东西。我感觉这可能是个重大改变。」&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;现在看来，这确实改变了我的生活。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;也是在这一天，我的「休假期」结束了。我完全被这个后来叫做 Livewire 的项目迷住了，并开始全身心地投入于此，这种沉迷一直持续到现在。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;我也创建了一个非常流行的 JS 框架，叫做 AlpineJS，目前也是由我在管理和维护。但那是另外一个故事了……&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;做开源软件不能完全养活自己，所以我也接过一些小型的代码指导方面的需求，让 2019 全年的收入维持在一个稳定的状态。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这张图是我 2019 年通过自由职业方式获得的收入：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2609375&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZ260lnByypxYBg3tVa32QH9Iia10RKTtTia5EmlT9VCgU0fm9HAKoWDmQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我的收入减少了 7 万美元，看起来是比较冒险的举动。但我知道，如果此刻不开始做这件事，以后可能就更没有机会了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一路走来，有很多好心人联系我，询问他们是否能够提供项目上的帮助。比如这种：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1359375&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZSzJHCKtlcibUWde9KEa54oChhibVyjJ8yB44ibhrtID3gJyicaDBicDdOgw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;很长一段时间我没有更新 Patreon（一个众筹创作网站），那里会有一些人每个月给我五美元。如此也很好，但对我来说没有意义。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;然后，我发现了 GitHub 的打赏功能，把项目直接托管在 GitHub 上即可。2019 年 12 月 12 日，我成为了 GitHub Sponsors 的一员。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.33578431372549017&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;816&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZ6ekKlFpt5pfmiaUTm8JFB3LtF83wLlwLeDqStKn5P8SGXiadhrdDN1jw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;这是我的第一个打赏者，Brian，谢谢你！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;迄今为止，我已经从 GitHub sponsors 那里收到了 2.5 万美元打赏金。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.39296875&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZZeo77Ek5f4XSeIuRXa00RYbiayBYRYdUwSW2zRp5RIH5VCZJWBUErQw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;直到撰写本文时，我的 GitHub 年度打赏金额已经达到了 112680 美元。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5125&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZcyFGh16Pq69z325bGxLUohaYazlHIB8oPRUfoKRkuRSAVUJhSfj8hQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;是运气，还是实力？我有点不敢相信我在开源社区里做开源软件，赚的钱比以往任何时候都多。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;掐我一下，我是在做梦吗？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;是因为我开发的软件太过优秀？让 535 位开发者每个月都打赏我 14 美元。不管怎么说，继续努力吧！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;接下来，我想分享一些过程中的经验，希望能帮到也想从事类似开发工作的人们。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;通过 GitHub 打赏赚钱的三个阶段&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;阶段 1：热心人士&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;最初，GitHub Sponsors 是一个让忠实粉丝能够资助他们所支持项目的平台。这些人的数量，和真正使用软件以及从中赚钱的人数比起来，并不算多。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基于开源的前提，人们本来就可以免费获得该软件。所有收入完全是来自那些友善热心肠的人们。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.61015625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZaWONl7ibEtZBuFeKhiaT2uT3NYhxxgWXy2Tqo89AO5UEwYV3rOpvWUKA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;首先，非常感谢这些人。然后我们谈谈第一个高峰是怎么到来的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;阶段 2：打赏软件&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这个阶段，事情开始变得奇妙。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.8366666666666667&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZ1aVAUn2V9fGuFdYMjannEiaC79OxniagHePWYqrSdPJ1GfPia7BwFQGDQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当时，我和我的兄弟 Daniel 录制了一期《No Plans To Merge》。在思考如何将其变现时，我们想到了一个新颖的想法：「打赏软件」。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;它的工作方式如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;创建一个很棒的软件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使其仅对打赏者开放，直到你积累了一定数量的打赏者；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;然后将项目开源给全世界。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这是一种双赢。效果很好，几天之内我的收入就增加了 1.1 万美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.61015625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZGvjVHI08mZEXGpCg9XEDCXYLZCsc1JSibXN3dzKHL72IegVlFUV15zA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我另外一位朋友 Nuno Maduro 最近在他的 Pest 项目中复制了这一方法，同样取得了成功：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.77&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZRsJNH4Ptg5kEXBcMHrae95bQ1OicMPiaWqYTRQpJXC5TTyss0Eo2xic5Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这种方法很棒，但是需要不断地提供新的想法，所有的这些都将成为我必须持续进行的项目。长远来看，我需要更合理的东西。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;阶段 3：教学视频&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我得到的大部分打赏金都是这个阶段来的：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.61015625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZElf7XRHmbbRXPoibCicd1yDzS48nXn06ovJ8LLTTk1cjjDJnYdibHI3Sg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这里边有什么秘诀吗？答案是：录制教学视频。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;构建有用的软件是一回事，但教别人怎么用完全是另一回事。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我尽力创建高质量的文档，但总有人需要更加高级的内容。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为了满足这些需求，我录了一系列教学视频。在这之后的三个月里，我的总收入从 4 万美元涨到了 10 万美元以上。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9016666666666666&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZCXfrbpMoHIJHfV0YINCxibX1Dh1fnB3n9hmH3Kfdia1k9moL3mNPSg9A/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我在文档的适当位置嵌入了这些视频的链接，以帮助大家找到它们：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.25625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZZM7hvBBEM2mQFAdI5VKofBlfxZQ6xTHMxMuJI4H6Bxj73oSp6xydPA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;几个星期之后，我又为 GitHub 打赏者专门建立了一个「私有」的视频小组：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5265625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZUib5ewwCrCr5unMsbYxdwbJt6DFP3VkoRbLRfXl2r3ALpgAC2Fbw9Jw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这就是我的秘诀（为了做到以上这些，我利用 GitHub 认证构建了一个 Laravel app 来调用 GitHub API，以验证用户是否为打赏者）。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;现在，那些看免费视频的人自然会遇到这些「私有」视频，如果他们喜欢前面那些免费的内容，他们就会给我打赏来获取后面的视频。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;每次有新特性出现，我都会放出一批新视频。此外，我还会给每位打赏者提供访问每节课源代码的入口。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在 90 天的时间里，我的年收入增长了大约 8 万美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;现在我有了连续的收入，不用再将所有时间都花在课程发布上了。我将用空出来的时间继续开发这个软件，同时放出新的视频。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;如何通过&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;打赏赚更多钱？&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;实力是第一位的&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;要做到靠打赏谋生，首先离不开日益月累的磨练，你做的东西要真正有用才行。我把我所有的一切都投入到工作中，这点没有捷径。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你可以发现，我在一个开源项目中全职工作了整整一年才看到收入。能得到人们赞助的工作必须是高质量的，而且始终是排在第一位的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;积极寻找用户&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你可以在网上创建优秀的工具，但如果没有人关注，再出色的工具也无法为你带来收入。因此，找到用户是赚钱的关键。在这方面，你的 Twitter 粉丝和邮件订阅者都是潜在的挖掘对象。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;打赏金额设置不要太保守&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;很多 GitHub 开发者犯的最大的一个错误就是在初级打赏设置中写的钱数太少。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果打赏者能选 1-5 美元 / 月，谁还会选更高的打赏金额。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我很早就意识到，如果我真的想做这件事，只有 5 美元的打赏肯定是不够的，所以我后来涨到了 14 美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;给打赏等级取一个好名字&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在给打赏等级取名的时候，记得取一个能描述打赏者类型的恰当名字。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;举个例子，对于一个高级打赏等级来说，它的标签应该是「The Agency（代理）」或其他能够暗示一个公司应该给予高级打赏的标签，而不是「Platinum（白金）」这种模糊的说法。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这样一来，人们看到这个标签首先想到的会是：「我的用途到底属于哪一类」，而不是：「我每个月要花多少钱」。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;不要羞于谈钱&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在我的成长过程中，我一直认为谈钱是不礼貌的，但其实这是一个谎言。有一次，我一股脑涨了 1 万美元，因为一个合作者告诉我他们都赚多少钱。在得知他们的收入情况后，我对自己的要价感到心安理得。但如果他们不告诉我这个情况，什么都不会发生。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;透明是一个健康的现象。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我不会隐瞒自己的收入，因为别人也不对我隐瞒他们的收入，这让我从中获利。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;即使他们赚的比我多得多，我也不会感到心痛或想分一杯羹。相反，我只会感到激动和鼓舞。我希望其他人也能保持这种心态。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;直接告诉别人你完全依赖这笔钱生活也没什么不礼貌的，而且这笔钱帮你打造出了人们每天都在用且从中受益的软件。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;不要因为赚了很多钱而感到内疚&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我一直都在提醒自己，我不是一个开发者布道师。如果我的打赏收入超过了平均生活水准，那也不错。我经营的也不是非营利组织。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我的收入和我的软件所带给别人的价值成正比，这没什么问题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我做的不是什么神圣的工作，那些软件是企业拿来赚钱的，他们从中牟利，所以我从中赚钱也是 OK 的。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;网友：我也能这么做吗？&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Caleb Porzio 的这份经历也引起了许多开发者的关注，讨论最热烈的问题是：在我的国家或者地区，这个方法行得通吗？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3270300333704116&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;899&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZkpRBhHicKQPEIDHibUIiaVaE6ic79PZlvl1nVwUYEwjkYicBmTnV4G0o6Zw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;「看到这些，我为自己国家芬兰的法律而感到难过。我们有一项名为筹款法的法律，其中规定，要想收取捐款（即无任何回报的支付）必须获得许可。这个许可证是付费的，而且不发给个人，只授予非营利活动。」&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这就意味着，如果你在软件项目上看到捐赠按钮，并且该笔资金流向芬兰人，这个过程是违法的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;所以这位芬兰的开发者表示，他自己托管了一个免费项目，为此不得不成立一家公司（独资经营）并出售一些其他的东西，以便从服务中获利。即便人们有捐赠的意愿，他也不能「合法地」接受这些钱。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3311036789297659&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;598&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZIZw0NtCDqXqKDOyqoXuj3ugYg9iaGTHGgdWOmJD4J36AHBibzXI4bibzw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;有人表示，在大多数西方国家都有类似的规定。因此，对于这些国家的人来说，自由职业虽然「自由」，但也同样需要花费更多的精力去管理琐事。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.453125&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;448&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZZo8RStXqNuMSyoO54shJ9z2U7ZQsAvAG1rrXtLISSiaicrRSCOGQAv9Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但在美国，这种做法的门槛要低得多。「如果是在美国的话，你可以作为个人接受无偿礼品，也可以作为个体经营者接受营业收入，无需额外注册什么。与往常一样，你需要精确缴纳税费，包括预扣税。」&lt;/span&gt;&lt;/section&gt;&lt;p data-tools=&quot;西瓜插件，运行于电脑浏览器上的插件，可在公众号后台找优质文章素材，一键美化排版，检测文章违规，查看任意公众号粉丝阅读数&quot; data-label=&quot;Power by：chajian.xiguaji.com&quot;&gt;&lt;/p&gt;&lt;p data-tools=&quot;西瓜插件，运行于电脑浏览器上的插件，可在公众号后台找优质文章素材，一键美化排版，检测文章违规，查看任意公众号粉丝阅读数&quot; data-label=&quot;Power by：chajian.xiguaji.com&quot;&gt;&lt;/p&gt;&lt;p data-tools=&quot;西瓜插件，运行于电脑浏览器上的插件，可在公众号后台找优质文章素材，一键美化排版，检测文章违规，查看任意公众号粉丝阅读数&quot; data-label=&quot;Power by：chajian.xiguaji.com&quot;&gt;&lt;/p&gt;&lt;p data-tools=&quot;西瓜插件，运行于电脑浏览器上的插件，可在公众号后台找优质文章素材，一键美化排版，检测文章违规，查看任意公众号粉丝阅读数&quot; data-label=&quot;Power by：chajian.xiguaji.com&quot;&gt;&lt;/p&gt;&lt;p data-tools=&quot;西瓜插件，运行于电脑浏览器上的插件，可在公众号后台找优质文章素材，一键美化排版，检测文章违规，查看任意公众号粉丝阅读数&quot; data-label=&quot;Power by：chajian.xiguaji.com&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;img data-copyright=&quot;0&quot; data-ratio=&quot;0.12232415902140673&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;981&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eG8xOx80VBYiaJhD1vUfQVK5y8qBXic4l1O1ticfN6IicXyf73hRGQsOjxVCw7hUGmibjKOtGtADZiawF5sT4RKWSExg/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;45&quot; data-index=&quot;822&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;31&quot; data-index=&quot;639&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【关闭】&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;47&quot; data-index=&quot;828&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;37&quot; data-index=&quot;645&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;48&quot; data-index=&quot;829&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;38&quot; data-index=&quot;646&quot; class=&quot;character&quot;&gt;学&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index=&quot;48&quot; data-index=&quot;830&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index=&quot;39&quot; data-index=&quot;647&quot; class=&quot;character&quot;&gt;关&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;闭&quot; data-textnode-index=&quot;48&quot; data-index=&quot;831&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;闭&quot; data-textnode-index=&quot;40&quot; data-index=&quot;648&quot; class=&quot;character&quot;&gt;闭&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;微&quot; data-textnode-index=&quot;48&quot; data-index=&quot;832&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;微&quot; data-textnode-index=&quot;41&quot; data-index=&quot;649&quot; class=&quot;character&quot;&gt;微&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;信&quot; data-textnode-index=&quot;48&quot; data-index=&quot;833&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;信&quot; data-textnode-index=&quot;42&quot; data-index=&quot;650&quot; class=&quot;character&quot;&gt;信&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;朋&quot; data-textnode-index=&quot;48&quot; data-index=&quot;834&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;朋&quot; data-textnode-index=&quot;43&quot; data-index=&quot;651&quot; class=&quot;character&quot;&gt;朋&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;友&quot; data-textnode-index=&quot;48&quot; data-index=&quot;835&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;友&quot; data-textnode-index=&quot;44&quot; data-index=&quot;652&quot; class=&quot;character&quot;&gt;友&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;圈&quot; data-textnode-index=&quot;48&quot; data-index=&quot;836&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;圈&quot; data-textnode-index=&quot;45&quot; data-index=&quot;653&quot; class=&quot;character&quot;&gt;圈&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;广&quot; data-textnode-index=&quot;48&quot; data-index=&quot;837&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;广&quot; data-textnode-index=&quot;46&quot; data-index=&quot;654&quot; class=&quot;character&quot;&gt;广&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;告&quot; data-textnode-index=&quot;48&quot; data-index=&quot;838&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;告&quot; data-textnode-index=&quot;47&quot; data-index=&quot;655&quot; class=&quot;character&quot;&gt;告&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-raw-text=&quot;告&quot; data-textnode-index=&quot;48&quot; data-index=&quot;838&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;告&quot; data-textnode-index=&quot;47&quot; data-index=&quot;655&quot; class=&quot;character&quot;&gt;&lt;span&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index=&quot;48&quot; data-index=&quot;830&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index=&quot;39&quot; data-index=&quot;647&quot; class=&quot;character&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;45&quot; data-index=&quot;822&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;31&quot; data-index=&quot;639&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【实战】&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;47&quot; data-index=&quot;828&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;37&quot; data-index=&quot;645&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;获取20套实战源码&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;49&quot; data-index=&quot;839&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;48&quot; data-index=&quot;656&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【被删】&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;51&quot; data-index=&quot;845&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;54&quot; data-index=&quot;662&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;52&quot; data-index=&quot;846&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;55&quot; data-index=&quot;663&quot; class=&quot;character&quot;&gt;学&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;查&quot; data-textnode-index=&quot;52&quot; data-index=&quot;847&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;查&quot; data-textnode-index=&quot;56&quot; data-index=&quot;664&quot; class=&quot;character&quot;&gt;查&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;看&quot; data-textnode-index=&quot;52&quot; data-index=&quot;848&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;看&quot; data-textnode-index=&quot;57&quot; data-index=&quot;665&quot; class=&quot;character&quot;&gt;看&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;你&quot; data-textnode-index=&quot;52&quot; data-index=&quot;849&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;你&quot; data-textnode-index=&quot;58&quot; data-index=&quot;666&quot; class=&quot;character&quot;&gt;你&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;哪&quot; data-textnode-index=&quot;52&quot; data-index=&quot;850&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;哪&quot; data-textnode-index=&quot;59&quot; data-index=&quot;667&quot; class=&quot;character&quot;&gt;哪&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;个&quot; data-textnode-index=&quot;52&quot; data-index=&quot;851&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;个&quot; data-textnode-index=&quot;60&quot; data-index=&quot;668&quot; class=&quot;character&quot;&gt;个&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;好&quot; data-textnode-index=&quot;52&quot; data-index=&quot;852&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;好&quot; data-textnode-index=&quot;61&quot; data-index=&quot;669&quot; class=&quot;character&quot;&gt;好&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;友&quot; data-textnode-index=&quot;52&quot; data-index=&quot;853&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;友&quot; data-textnode-index=&quot;62&quot; data-index=&quot;670&quot; class=&quot;character&quot;&gt;友&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;删&quot; data-textnode-index=&quot;52&quot; data-index=&quot;854&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;删&quot; data-textnode-index=&quot;63&quot; data-index=&quot;671&quot; class=&quot;character&quot;&gt;删&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;除&quot; data-textnode-index=&quot;52&quot; data-index=&quot;855&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;除&quot; data-textnode-index=&quot;64&quot; data-index=&quot;672&quot; class=&quot;character&quot;&gt;除&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;了&quot; data-textnode-index=&quot;52&quot; data-index=&quot;856&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;了&quot; data-textnode-index=&quot;65&quot; data-index=&quot;673&quot; class=&quot;character&quot;&gt;了&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;你&quot; data-textnode-index=&quot;52&quot; data-index=&quot;857&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;你&quot; data-textnode-index=&quot;66&quot; data-index=&quot;674&quot; class=&quot;character&quot;&gt;你&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;巧&quot; data-textnode-index=&quot;52&quot; data-index=&quot;858&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;巧&quot; data-textnode-index=&quot;67&quot; data-index=&quot;675&quot; class=&quot;character&quot;&gt;巧&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span data-raw-text=&quot;包&quot; data-textnode-index=&quot;60&quot; data-index=&quot;894&quot; class=&quot;character&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;57&quot; data-index=&quot;878&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;104&quot; data-index=&quot;712&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【访客】&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;59&quot; data-index=&quot;884&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;109&quot; data-index=&quot;718&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;60&quot; data-index=&quot;885&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;110&quot; data-index=&quot;719&quot; class=&quot;character&quot;&gt;学&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;微&quot; data-textnode-index=&quot;60&quot; data-index=&quot;887&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;微&quot; data-textnode-index=&quot;111&quot; data-index=&quot;720&quot; class=&quot;character&quot;&gt;微&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;信&quot; data-textnode-index=&quot;60&quot; data-index=&quot;888&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;信&quot; data-textnode-index=&quot;112&quot; data-index=&quot;721&quot; class=&quot;character&quot;&gt;信&lt;/span&gt;&lt;span data-raw-text=&quot;查&quot; data-textnode-index=&quot;112&quot; data-index=&quot;722&quot; class=&quot;character&quot;&gt;查&lt;/span&gt;&lt;span data-raw-text=&quot;看&quot; data-textnode-index=&quot;112&quot; data-index=&quot;723&quot; class=&quot;character&quot;&gt;看&lt;/span&gt;&lt;span data-raw-text=&quot;朋&quot; data-textnode-index=&quot;112&quot; data-index=&quot;724&quot; class=&quot;character&quot;&gt;朋&lt;/span&gt;&lt;span data-raw-text=&quot;友&quot; data-textnode-index=&quot;112&quot; data-index=&quot;725&quot; class=&quot;character&quot;&gt;友&lt;/span&gt;&lt;span data-raw-text=&quot;圈&quot; data-textnode-index=&quot;112&quot; data-index=&quot;726&quot; class=&quot;character&quot;&gt;圈&lt;/span&gt;&lt;span data-raw-text=&quot;访&quot; data-textnode-index=&quot;112&quot; data-index=&quot;727&quot; class=&quot;character&quot;&gt;访&lt;/span&gt;&lt;span data-raw-text=&quot;客&quot; data-textnode-index=&quot;112&quot; data-index=&quot;728&quot; class=&quot;character&quot;&gt;客&lt;/span&gt;&lt;span data-raw-text=&quot;记&quot; data-textnode-index=&quot;112&quot; data-index=&quot;729&quot; class=&quot;character&quot;&gt;记&lt;/span&gt;&lt;span data-raw-text=&quot;录&quot; data-textnode-index=&quot;112&quot; data-index=&quot;730&quot; class=&quot;character&quot;&gt;录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【小程序】&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;学获取15套【入门+实战+赚钱】小程序源码&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【python】&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;学微获取全套0基础Python知识手册&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【2019】&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;获取2019 .NET 开发者峰会资料PPT&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【加群】加入dotnet微信交流群&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend-list&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2649759837_1&quot; data-recommend-article-time=&quot;1614089250&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/sz_mmbiz_jpg/TZMx5vHDhKqebJOTCu6TFdnLCjSAGnsh69aibTOs2icrdkdYicwnvCQV7MYQtVjdGEwJavCIqsgOwJObdWcNico9qw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;@程序员，这笔钱下个月可以领！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzIxNjIwNzQ5Mw==&amp;amp;mid=2649759837&amp;amp;idx=1&amp;amp;sn=a2d65aa80773249bfcb1bc2ec9e2fcb5&amp;amp;chksm=8f8819b7b8ff90a1de965aeccd3e4f9e759de34aca17afb34ca8df62585de3e5fe0387081c13#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxNjIwNzQ5Mw==&amp;amp;mid=2649759837&amp;amp;idx=1&amp;amp;sn=a2d65aa80773249bfcb1bc2ec9e2fcb5&amp;amp;chksm=8f8819b7b8ff90a1de965aeccd3e4f9e759de34aca17afb34ca8df62585de3e5fe0387081c13&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.425&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/TZMx5vHDhKqebJOTCu6TFdnLCjSAGnsh69aibTOs2icrdkdYicwnvCQV7MYQtVjdGEwJavCIqsgOwJObdWcNico9qw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;@程序员，这笔钱下个月可以领！&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2649759863_1&quot; data-recommend-article-time=&quot;1614173224&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/rbiaHnT7CcvzS9n04VKndkxt6lKhGuSU0WsQfz16Egia45AK63nS33AKZfGDl64xVjJUA4TKqOw9QbxGKBQB6r2w/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;一个程序员的水平能差到什么程度......&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzIxNjIwNzQ5Mw==&amp;amp;mid=2649759863&amp;amp;idx=1&amp;amp;sn=9ffd2741e5719fa00a13883480ba52bc&amp;amp;chksm=8f88199db8ff908b63dddc2087a29e769ff86b5d39f11f3651b81f84cb92f949e4bfe0f7862c#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxNjIwNzQ5Mw==&amp;amp;mid=2649759863&amp;amp;idx=1&amp;amp;sn=9ffd2741e5719fa00a13883480ba52bc&amp;amp;chksm=8f88199db8ff908b63dddc2087a29e769ff86b5d39f11f3651b81f84cb92f949e4bfe0f7862c&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.4263803680981595&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/rbiaHnT7CcvzS9n04VKndkxt6lKhGuSU0WsQfz16Egia45AK63nS33AKZfGDl64xVjJUA4TKqOw9QbxGKBQB6r2w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;326&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;一个程序员的水平能差到什么程度......&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>919bbd160785232d114ce93f860969d6</guid>
<title>如何自动同步博客到 GitHub 主页？</title>
<link>https://toutiao.io/k/p980gmm</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Github 支持通过创建同名仓库的形式自定义主页。比如我的 Github 用户名是 azl397985856，那么新建一个名为 azl397985856 的仓库即可。接下来你可以通过修改此仓库的 README 文件来自定义 Github 主页。也就是说，你想要自定义主页就新建一个同名仓库并修改 README 就行了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;修改 README 能玩出什么花样呢？请接着往下看。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;装修效果&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先上一下我的装修效果：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7249398556535686&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/CuarlDcuWP6BmfN0y4681NSnaDTrjrKupc3Qooy7YuUxTuBEFJ2GkiamnzPTf3yLic1cXV6xoHtX9VBZlfQqgALw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1247&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;开始动手&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;添加数据统计&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图的那几个 Github 数据统计以及奖杯使用的是一个外部服务。想要显示哪个就添加相应代码即可：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据统计：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;img&lt;/span&gt; &lt;span&gt;src&lt;/span&gt;=&lt;span&gt;&quot;https://github-readme-stats.vercel.app/api?username=azl397985856&amp;amp;show_icons=true&quot;&lt;/span&gt; &lt;span&gt;alt&lt;/span&gt;=&lt;span&gt;&quot;logo&quot;&lt;/span&gt; &lt;span&gt;height&lt;/span&gt;=&lt;span&gt;&quot;160&quot;&lt;/span&gt; &lt;span&gt;align&lt;/span&gt;=&lt;span&gt;&quot;right&quot;&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;&quot;margin: 5px; margin-bottom: 20px;&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;注意将 username 改成自己的用户名哦(下面也是一样，不再赘述)，不然就显示的 lucifer 我的信息啦。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;奖杯：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;img&lt;/span&gt; &lt;span&gt;src&lt;/span&gt;=&lt;span&gt;&quot;https://github-profile-trophy.vercel.app/?username=azl397985856&amp;amp;theme=flat&amp;amp;column=7&quot;&lt;/span&gt; &lt;span&gt;alt&lt;/span&gt;=&lt;span&gt;&quot;logo&quot;&lt;/span&gt; &lt;span&gt;height&lt;/span&gt;=&lt;span&gt;&quot;160&quot;&lt;/span&gt; &lt;span&gt;align&lt;/span&gt;=&lt;span&gt;&quot;center&quot;&lt;/span&gt; &lt;span&gt;style&lt;/span&gt;=&lt;span&gt;&quot;margin: auto; margin-bottom: 20px;&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;自动更新博客&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上图我的装修主页，其中博客的文章列表不是写死的，而是每隔一个小时定时读取我的&lt;span&gt;博客&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt; 内容，并提取前 5 篇文章。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你也想要这个功能，就在 README 中添加如下代码即可：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;## 📕 Latest Blog Posts&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;&amp;lt;!-- BLOG-POST-LIST:START --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;&amp;lt;!-- BLOG-POST-LIST:END --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之后读取的博客列表会填充在两个注释之间，也就是说你可以&lt;strong&gt;「通过改变注释的位置，将其放到页面任意位置」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了实现&lt;strong&gt;「每个小时定时更新的功能」&lt;/strong&gt;，我们可以使用 Github Action 的定时任务来实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体操作步骤如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.20323886639676114&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/CuarlDcuWP6BmfN0y4681NSnaDTrjrKuZUhGOmgGZOKHcFPDAOsKJbUwk9yBGR6IR6YXFWA1AwzDlEsXvfcXFw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1235&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.40946745562130177&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/CuarlDcuWP6BmfN0y4681NSnaDTrjrKuUTjX4VKcbMDnpfCHh8lITOh9J998wjsicJmMiaYaibUoXBsQjoSFgwQ9Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;845&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来将如下内容复制粘贴进去：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;name:&lt;/span&gt; &lt;span&gt;Blog&lt;/span&gt; &lt;span&gt;Posts&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;on:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;# Run workflow automatically&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;schedule:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;# Runs every hour, on the hour&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;-&lt;/span&gt; &lt;span&gt;cron:&lt;/span&gt; &lt;span&gt;&quot;0 * * * *&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;jobs:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;update-readme-with-blog:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;Update&lt;/span&gt; &lt;span&gt;this&lt;/span&gt; &lt;span&gt;repo&#x27;s&lt;/span&gt; &lt;span&gt;README&lt;/span&gt; &lt;span&gt;with&lt;/span&gt; &lt;span&gt;latest&lt;/span&gt; &lt;span&gt;blog&lt;/span&gt; &lt;span&gt;posts&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;runs-on:&lt;/span&gt; &lt;span&gt;ubuntu-latest&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;steps:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;uses:&lt;/span&gt; &lt;span&gt;actions/checkout@v2&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;uses:&lt;/span&gt; &lt;span&gt;gautamkrishnar/blog-post-workflow@master&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;with:&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;# comma-separated list of RSS feed urls&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;feed_list:&lt;/span&gt; &lt;span&gt;&quot;https://lucifer.ren/blog/atom.xml&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;注意：这里的 &lt;code&gt;cron: &quot;0 * * * *&quot;&lt;/code&gt; 的意思是每个小时进行一次，并且是每个小时的 0 分。因为你需要等到下一个整点才能看到效果，有时候 Github 会有延时，晚几分钟也正常，大家不要着急，耐心等待即可。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;请将 feed_list 替换为你自己的 RSS 订阅地址。如果有多个订阅地址，则用英文半角逗号分割。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你的博客没有 RSS 或者你不知道自己的 RSS 地址就无法使用了哦。我的博客是用 hexo 生成的，因此添加 RSS 就很容易了，如果你的博客是挂到第三方的，也会提供 RSS 地址。比如 CSDN 就提供了 RSS 地址：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.16148148148148148&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/CuarlDcuWP6BmfN0y4681NSnaDTrjrKuiaO0CQicw0pHZYch5DgnLuAW6VicaN6xfUC8xIJeOTYOo5hGJhuZw0NtA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1350&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于大家的博客可能都不相同，因此具体大家可以自行搜索。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;完整源代码&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文所有的代码都可以在如下的代码仓库中找到。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;仓库地址：https://github.com/azl397985856/azl397985856&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果在使用过程中碰到其他问题，也欢迎私信我哦~ 最后祝大家都有一个高大上的 Github 主页。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Reference&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;lucifer 的网络博客: &lt;span&gt;https://lucifer.ren/blog/&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;h3 data-darkmode-color-16144294441363=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot; data-style=&quot;margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 17px; max-width: 100%; box-sizing: border-box; white-space: normal; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; letter-spacing: 2px; text-align: center; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__189&quot;&gt;&lt;span data-darkmode-color-16144294441363=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot; data-style=&quot;padding-bottom: 2px; max-width: 100%; box-sizing: border-box; border-bottom: 2px solid rgba(79, 177, 249, 0.65); color: rgb(43, 43, 43); overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__190&quot;&gt;爱心三连击&lt;/span&gt;&lt;/h3&gt;&lt;p data-darkmode-color-16144294441363=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot; data-style=&quot;margin-top: 10px; margin-bottom: 10px; padding-top: 8px; padding-bottom: 8px; max-width: 100%; box-sizing: border-box; min-height: 1em; white-space: normal; text-align: left; background-color: rgb(255, 255, 255); color: rgb(43, 43, 43); font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; letter-spacing: 2px; font-size: 14px; line-height: 26px; word-spacing: 2px; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__191&quot;&gt;1.看到这里了就点个在看支持下吧，你的&lt;strong data-darkmode-color-16144294441363=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot;&gt;在看&lt;/strong&gt;是我创作的动力。&lt;/p&gt;&lt;p data-darkmode-color-16144294441363=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot; data-style=&quot;margin-top: 10px; margin-bottom: 10px; padding-top: 8px; padding-bottom: 8px; max-width: 100%; box-sizing: border-box; min-height: 1em; white-space: normal; color: rgb(0, 0, 0); text-align: left; background-color: rgb(255, 255, 255); font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; letter-spacing: 2px; font-size: 14px; line-height: 26px; word-spacing: 2px; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__192&quot;&gt;&lt;span data-darkmode-color-16144294441363=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; color: rgb(43, 43, 43); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__193&quot;&gt;2.关注公众号&lt;/span&gt;&lt;span data-darkmode-color-16144294441363=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(0, 0, 0)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;strong data-darkmode-color-16144294441363=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(0, 0, 0)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot;&gt;脑洞前端&lt;/strong&gt;&lt;/span&gt;&lt;span data-darkmode-color-16144294441363=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; color: rgb(43, 43, 43); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__194&quot;&gt;，获取更多前端硬核文章！&lt;/span&gt;&lt;strong data-darkmode-color-16144294441363=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(0, 0, 0)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot;&gt;加个星标&lt;/strong&gt;&lt;span data-darkmode-color-16144294441363=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; color: rgb(43, 43, 43); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__195&quot;&gt;，不错过每一条成长的机会。&lt;/span&gt;&lt;/p&gt;&lt;p data-darkmode-color-16144294441363=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot; data-style=&quot;margin-top: 10px; margin-bottom: 10px; padding-top: 8px; padding-bottom: 8px; max-width: 100%; box-sizing: border-box; min-height: 1em; white-space: normal; text-align: left; background-color: rgb(255, 255, 255); color: rgb(43, 43, 43); font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; letter-spacing: 2px; font-size: 14px; line-height: 26px; word-spacing: 2px; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__196&quot;&gt;3.如果你觉得本文的内容对你有帮助，就帮我&lt;strong data-darkmode-color-16144294441363=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16144294441363=&quot;#fff|rgb(0,0,0)|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16144294441363=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16144294441363=&quot;#fff|rgb(255, 255, 255)&quot;&gt;转发&lt;/strong&gt;一下吧。&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA3MjU5NjU2NA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/CuarlDcuWP7kyWw71LVGY1os33f0FzZSVXhXibf32rPFNncsiaDLx0HsWOGDSDuyibZXn5gaUM7Z2iajVRVpNp7jPQ/0?wx_fmt=png&quot; data-nickname=&quot;脑洞前端&quot; data-alias=&quot;fe_lucifer&quot; data-signature=&quot;作者是一个 Github 40K star 的前端架构师。专注前端工程化，性能优化，框架源码，底层原理等，同时也会不定时更新LeetCode题解和面试内容，期待你的加入，和三万名工程师一起进步。&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7ee4e1d07c56030e970d8ec23d7d576d</guid>
<title>10 个内存引发的大坑，你能躲开几个？（三）</title>
<link>https://toutiao.io/k/ktp4e97</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;对程序员来说内存相关的 bug 排查难度几乎和多线程问题并驾齐驱，&lt;strong&gt;当程序出现运行异常时可能距离真正有 bug 的那行代码已经很远了&lt;/strong&gt;，这就导致问题定位排查非常困难，这篇文章将总结涉及内存的一些经典 bug ，快来看看你知道几个，或者你的程序中现在有几个。。。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;h5 cid=&quot;n77&quot; mdtype=&quot;heading&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;指针大小与指针所指向对象的大小不同&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/h5&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; **&lt;span class=&quot;code-snippet__title&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; **M = (&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; **)&lt;span class=&quot;code-snippet__built_in&quot;&gt;malloc&lt;/span&gt;(n * &lt;span class=&quot;code-snippet__keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;; i &amp;lt; n; i++)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  M[i] = (&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; *)&lt;span class=&quot;code-snippet__built_in&quot;&gt;malloc&lt;/span&gt;(m * &lt;span class=&quot;code-snippet__keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; M;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这段代码的本意是要创建一个n*n二维数组，但其错误出现在了第3行，应该是 sizeof(int *) 而不是sizeof(int)，实际上这行代码创建了一个包含有 n 个 int 的数组，而不是包含 n 个 int 指针的数组。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但有趣的是，&lt;strong&gt;这行代码在int和int*大小相同的系统上可以正常运行&lt;/strong&gt;，但是对于int指针比int要大的系统来说，上述代码同样会覆盖掉数组M之后的一部分内存，这里和上一个例子类似，如果这部分内存是 malloc 用来保存内存分配信息用的，那么也许当释放这段内存时才会出现运行时异常，此时可能已经距离出现问题的那行代码很远了，这类 bug 同样难以排查。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h5 cid=&quot;n82&quot; mdtype=&quot;heading&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;栈缓冲器溢出&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/h5&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;buffer_overflow&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;char&lt;/span&gt; buf[&lt;span class=&quot;code-snippet__number&quot;&gt;32&lt;/span&gt;];&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;gets(buf);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;上面这段代码总是假定用户的输入不过超过 32 字节，一旦超过后，那么将立刻破坏栈帧中相邻的数据，破坏函数栈帧最好的结果是程序立刻crash，否则和前面的例子一样，也许程序运行很长一段时间后才出现错误，或者程序根本就不会有运行时异常但是会给出错误的计算结果。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;实际上在上面几个例子中也会有“溢出”，不过是在堆区上的溢出，但栈缓冲器溢出更容易导致问题，因为栈帧中保存有函数返回地址等重要信息，一类经典的黑客攻击技术就是利用栈缓冲区溢出，其原理也非常简单。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;原来，每个函数运行时在栈区都会存在一段栈帧，栈帧中保存有函数返回地址，在正常情况下，一个函数运行完成后会根据栈帧中保存的返回地址跳转到上一个函数，假设函数A调用函数B，那么当函数B运行完成后就会返回函数A，这个过程如图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.1756978653530377&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8g3rwJPmya1uUWibqDaIhHmImXAiaRpv1NPS1zfFcZyCnINwOUxMUtSvZ1shSnCCMchN3DCvhDchZQEiaJ8wHXcOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;609&quot; data-backw=&quot;578&quot; data-backh=&quot;679&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你可以在《&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU2NTYyOTQ4OQ==&amp;amp;mid=2247484963&amp;amp;idx=1&amp;amp;sn=542d3bec57c6a9dfc17c83005fd2c030&amp;amp;chksm=fcb9817dcbce086b10cb44cad7c9777b0088fb8d9d6baf71ae36a9b03e1f8ef5bec62b79d6f7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;函数运行时在内存中是什么样子&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;函数运行时在内存中是什么样子&lt;/a&gt;》这篇文章中找到关于函数运行时栈帧的详细讲解。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但如果代码中存在栈缓冲区溢出问题，那么在黑客的精心设计下，溢出的部分会“恰好”覆盖掉栈帧中的返回地址，将其修改为一个特定的地址，这个特定的地址中保存有黑客留下的恶意代码，如图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.2408026755852843&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8g3rwJPmya1uUWibqDaIhHmImXAiaRpv1NOxbib5xfD1G5FdVJPWz4w6Us0GHas3aQZsiaQz1knibBT04t1nYS8LibDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;598&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这样当该进程运行起来后实际上是在执行黑客的恶意代码，这就是利用缓冲区溢出进行攻击的一个经典案例。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h5 cid=&quot;n93&quot; mdtype=&quot;heading&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;操作指针所指对象而非指针本身&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/h5&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;delete_one&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;** arr, &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;* size)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;free&lt;/span&gt;(arr[*size - &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  *size--;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;arr 是一个指针数组，这段代码的本意是要删除掉数组中最后一个元素，同时将数组的大小减一。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但上述代码的问题在于*和--有相同的优先级，该代码实际上会将 size 指针减1而不是把 size 指向的值减1。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果你足够幸运的话那么上述程序运行到*size--时立刻 crash，这样你就有机会快速发现问题。但更有可能的是上述代码会看上去一切正常的继续运行并返回一个错误的执行结果，&lt;strong&gt;这样的bug排查起来会让你终生难忘&lt;/strong&gt;，因此当不确定优先级时不要吝啬括号，加上它。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h5 cid=&quot;n99&quot; mdtype=&quot;heading&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/h5&gt;&lt;section&gt;&lt;span&gt;内存是计算机系统中至关重要的一个组成部分，C/C++这类偏底层的语言在带来高性能的同事也带来内存相关的无尽问题，而这类问题通常难以排查，不过知彼知己，当你理解了常见的内存相关问题后将极大减少出现此类问题的概率。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;希望这个小系列文章对大家理解内存与指针有所帮助。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__0&quot;&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2934&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2935&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2936&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2937&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2938&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2939&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2940&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2941&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2942&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2943&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;伟&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2944&quot;&gt;伟&lt;/span&gt;&lt;span data-raw-text=&quot;大&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2945&quot;&gt;大&lt;/span&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2946&quot;&gt;的&lt;/span&gt;&lt;span data-raw-text=&quot;分&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2947&quot;&gt;分&lt;/span&gt;&lt;span data-raw-text=&quot;割&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2948&quot;&gt;割&lt;/span&gt;&lt;span data-raw-text=&quot;线&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2949&quot;&gt;线&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2950&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2951&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2952&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2953&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2954&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2955&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2956&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2957&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2958&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2959&quot;&gt;-&lt;/span&gt;&lt;span data-raw-text=&quot;-&quot; data-textnode-index=&quot;97&quot; data-index=&quot;2960&quot;&gt;-&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI0MjEwMDMzNQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/LHDiahSVnXhuEIChmoDpeesYyxoiaDWYice5SX31nCmv2QA1TuYxxudVAvwAwTT3ia0mrjHuicxSwLMJZM7MZcA6P2Q/0?wx_fmt=png&quot; data-nickname=&quot;PHP饭米粒&quot; data-alias=&quot;phpfamily&quot; data-signature=&quot;一群靠谱的人，愿为PHPer带来一些值得细细品味的精神食粮！&quot;/&gt;&lt;/section&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__1&quot;&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__2&quot;&gt;&lt;span data-raw-text=&quot;P&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2961&quot;&gt;P&lt;/span&gt;&lt;span data-raw-text=&quot;H&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2962&quot;&gt;H&lt;/span&gt;&lt;span data-raw-text=&quot;P&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2963&quot;&gt;P&lt;/span&gt;&lt;span data-raw-text=&quot;饭&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2964&quot;&gt;饭&lt;/span&gt;&lt;span data-raw-text=&quot;米&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2965&quot;&gt;米&lt;/span&gt;&lt;span data-raw-text=&quot;粒&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2966&quot;&gt;粒&lt;/span&gt;&lt;span data-raw-text=&quot;(&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2967&quot;&gt;(&lt;/span&gt;&lt;span data-raw-text=&quot;p&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2968&quot;&gt;p&lt;/span&gt;&lt;span data-raw-text=&quot;h&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2969&quot;&gt;h&lt;/span&gt;&lt;span data-raw-text=&quot;p&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2970&quot;&gt;p&lt;/span&gt;&lt;span data-raw-text=&quot;f&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2971&quot;&gt;f&lt;/span&gt;&lt;span data-raw-text=&quot;a&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2972&quot;&gt;a&lt;/span&gt;&lt;span data-raw-text=&quot;m&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2973&quot;&gt;m&lt;/span&gt;&lt;span data-raw-text=&quot;i&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2974&quot;&gt;i&lt;/span&gt;&lt;span data-raw-text=&quot;l&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2975&quot;&gt;l&lt;/span&gt;&lt;span data-raw-text=&quot;y&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2976&quot;&gt;y&lt;/span&gt;&lt;span data-raw-text=&quot;)&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2977&quot;&gt;)&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index=&quot;98&quot; data-index=&quot;2978&quot;&gt; &lt;/span&gt;&lt;span data-raw-text=&quot;由&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2979&quot;&gt;由&lt;/span&gt;&lt;span data-raw-text=&quot;一&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2980&quot;&gt;一&lt;/span&gt;&lt;span data-raw-text=&quot;群&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2981&quot;&gt;群&lt;/span&gt;&lt;span data-raw-text=&quot;靠&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2982&quot;&gt;靠&lt;/span&gt;&lt;span data-raw-text=&quot;谱&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2983&quot;&gt;谱&lt;/span&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2984&quot;&gt;的&lt;/span&gt;&lt;span data-raw-text=&quot;人&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2985&quot;&gt;人&lt;/span&gt;&lt;span data-raw-text=&quot;建&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2986&quot;&gt;建&lt;/span&gt;&lt;span data-raw-text=&quot;立&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2987&quot;&gt;立&lt;/span&gt;&lt;span data-raw-text=&quot;，&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2988&quot;&gt;，&lt;/span&gt;&lt;span data-raw-text=&quot;愿&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2989&quot;&gt;愿&lt;/span&gt;&lt;span data-raw-text=&quot;为&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2990&quot;&gt;为&lt;/span&gt;&lt;span data-raw-text=&quot;P&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2991&quot;&gt;P&lt;/span&gt;&lt;span data-raw-text=&quot;H&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2992&quot;&gt;H&lt;/span&gt;&lt;span data-raw-text=&quot;P&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2993&quot;&gt;P&lt;/span&gt;&lt;span data-raw-text=&quot;e&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2994&quot;&gt;e&lt;/span&gt;&lt;span data-raw-text=&quot;r&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2995&quot;&gt;r&lt;/span&gt;&lt;span data-raw-text=&quot;带&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2996&quot;&gt;带&lt;/span&gt;&lt;span data-raw-text=&quot;来&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2997&quot;&gt;来&lt;/span&gt;&lt;span data-raw-text=&quot;一&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2998&quot;&gt;一&lt;/span&gt;&lt;span data-raw-text=&quot;些&quot; data-textnode-index=&quot;98&quot; data-index=&quot;2999&quot;&gt;些&lt;/span&gt;&lt;span data-raw-text=&quot;值&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3000&quot;&gt;值&lt;/span&gt;&lt;span data-raw-text=&quot;得&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3001&quot;&gt;得&lt;/span&gt;&lt;span data-raw-text=&quot;细&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3002&quot;&gt;细&lt;/span&gt;&lt;span data-raw-text=&quot;细&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3003&quot;&gt;细&lt;/span&gt;&lt;span data-raw-text=&quot;品&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3004&quot;&gt;品&lt;/span&gt;&lt;span data-raw-text=&quot;味&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3005&quot;&gt;味&lt;/span&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3006&quot;&gt;的&lt;/span&gt;&lt;span data-raw-text=&quot;精&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3007&quot;&gt;精&lt;/span&gt;&lt;span data-raw-text=&quot;神&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3008&quot;&gt;神&lt;/span&gt;&lt;span data-raw-text=&quot;食&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3009&quot;&gt;食&lt;/span&gt;&lt;span data-raw-text=&quot;粮&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3010&quot;&gt;粮&lt;/span&gt;&lt;span data-raw-text=&quot;！&quot; data-textnode-index=&quot;98&quot; data-index=&quot;3011&quot;&gt;！&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__3&quot;&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__4&quot;&gt;&lt;span data-raw-text=&quot;饭&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3012&quot;&gt;饭&lt;/span&gt;&lt;span data-raw-text=&quot;米&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3013&quot;&gt;米&lt;/span&gt;&lt;span data-raw-text=&quot;粒&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3014&quot;&gt;粒&lt;/span&gt;&lt;span data-raw-text=&quot;只&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3015&quot;&gt;只&lt;/span&gt;&lt;span data-raw-text=&quot;发&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3016&quot;&gt;发&lt;/span&gt;&lt;span data-raw-text=&quot;原&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3017&quot;&gt;原&lt;/span&gt;&lt;span data-raw-text=&quot;创&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3018&quot;&gt;创&lt;/span&gt;&lt;span data-raw-text=&quot;或&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3019&quot;&gt;或&lt;/span&gt;&lt;span data-raw-text=&quot;授&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3020&quot;&gt;授&lt;/span&gt;&lt;span data-raw-text=&quot;权&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3021&quot;&gt;权&lt;/span&gt;&lt;span data-raw-text=&quot;发&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3022&quot;&gt;发&lt;/span&gt;&lt;span data-raw-text=&quot;表&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3023&quot;&gt;表&lt;/span&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3024&quot;&gt;的&lt;/span&gt;&lt;span data-raw-text=&quot;文&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3025&quot;&gt;文&lt;/span&gt;&lt;span data-raw-text=&quot;章&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3026&quot;&gt;章&lt;/span&gt;&lt;span data-raw-text=&quot;，&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3027&quot;&gt;，&lt;/span&gt;&lt;span data-raw-text=&quot;不&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3028&quot;&gt;不&lt;/span&gt;&lt;span data-raw-text=&quot;转&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3029&quot;&gt;转&lt;/span&gt;&lt;span data-raw-text=&quot;载&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3030&quot;&gt;载&lt;/span&gt;&lt;span data-raw-text=&quot;网&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3031&quot;&gt;网&lt;/span&gt;&lt;span data-raw-text=&quot;上&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3032&quot;&gt;上&lt;/span&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3033&quot;&gt;的&lt;/span&gt;&lt;span data-raw-text=&quot;文&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3034&quot;&gt;文&lt;/span&gt;&lt;span data-raw-text=&quot;章&quot; data-textnode-index=&quot;99&quot; data-index=&quot;3035&quot;&gt;章&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__5&quot;&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__6&quot;&gt;&lt;span data-raw-text=&quot;所&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3036&quot;&gt;所&lt;/span&gt;&lt;span data-raw-text=&quot;发&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3037&quot;&gt;发&lt;/span&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3038&quot;&gt;的&lt;/span&gt;&lt;span data-raw-text=&quot;文&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3039&quot;&gt;文&lt;/span&gt;&lt;span data-raw-text=&quot;章&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3040&quot;&gt;章&lt;/span&gt;&lt;span data-raw-text=&quot;，&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3041&quot;&gt;，&lt;/span&gt;&lt;span data-raw-text=&quot;均&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3042&quot;&gt;均&lt;/span&gt;&lt;span data-raw-text=&quot;可&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3043&quot;&gt;可&lt;/span&gt;&lt;span data-raw-text=&quot;找&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3044&quot;&gt;找&lt;/span&gt;&lt;span data-raw-text=&quot;到&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3045&quot;&gt;到&lt;/span&gt;&lt;span data-raw-text=&quot;原&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3046&quot;&gt;原&lt;/span&gt;&lt;span data-raw-text=&quot;作&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3047&quot;&gt;作&lt;/span&gt;&lt;span data-raw-text=&quot;者&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3048&quot;&gt;者&lt;/span&gt;&lt;span data-raw-text=&quot;进&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3049&quot;&gt;进&lt;/span&gt;&lt;span data-raw-text=&quot;行&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3050&quot;&gt;行&lt;/span&gt;&lt;span data-raw-text=&quot;沟&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3051&quot;&gt;沟&lt;/span&gt;&lt;span data-raw-text=&quot;通&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3052&quot;&gt;通&lt;/span&gt;&lt;span data-raw-text=&quot;。&quot; data-textnode-index=&quot;100&quot; data-index=&quot;3053&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__7&quot;&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__8&quot;&gt;&lt;span&gt;&lt;span data-raw-text=&quot;也&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3054&quot;&gt;也&lt;/span&gt;&lt;span data-raw-text=&quot;希&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3055&quot;&gt;希&lt;/span&gt;&lt;span data-raw-text=&quot;望&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3056&quot;&gt;望&lt;/span&gt;&lt;span data-raw-text=&quot;各&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3057&quot;&gt;各&lt;/span&gt;&lt;span data-raw-text=&quot;位&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3058&quot;&gt;位&lt;/span&gt;&lt;span data-raw-text=&quot;多&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3059&quot;&gt;多&lt;/span&gt;&lt;span data-raw-text=&quot;多&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3060&quot;&gt;多&lt;/span&gt;&lt;span data-raw-text=&quot;打&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3061&quot;&gt;打&lt;/span&gt;&lt;span data-raw-text=&quot;赏&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3062&quot;&gt;赏&lt;/span&gt;&lt;span data-raw-text=&quot;（&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3063&quot;&gt;（&lt;/span&gt;&lt;span data-raw-text=&quot;算&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3064&quot;&gt;算&lt;/span&gt;&lt;span data-raw-text=&quot;作&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3065&quot;&gt;作&lt;/span&gt;&lt;span data-raw-text=&quot;稿&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3066&quot;&gt;稿&lt;/span&gt;&lt;span data-raw-text=&quot;费&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3067&quot;&gt;费&lt;/span&gt;&lt;span data-raw-text=&quot;给&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3068&quot;&gt;给&lt;/span&gt;&lt;span data-raw-text=&quot;文&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3069&quot;&gt;文&lt;/span&gt;&lt;span data-raw-text=&quot;章&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3070&quot;&gt;章&lt;/span&gt;&lt;span data-raw-text=&quot;作&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3071&quot;&gt;作&lt;/span&gt;&lt;span data-raw-text=&quot;者&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3072&quot;&gt;者&lt;/span&gt;&lt;span data-raw-text=&quot;）&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3073&quot;&gt;）&lt;/span&gt;&lt;span data-raw-text=&quot;，&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3074&quot;&gt;，&lt;/span&gt;&lt;span data-raw-text=&quot;更&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3075&quot;&gt;更&lt;/span&gt;&lt;span data-raw-text=&quot;希&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3076&quot;&gt;希&lt;/span&gt;&lt;span data-raw-text=&quot;望&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3077&quot;&gt;望&lt;/span&gt;&lt;span data-raw-text=&quot;大&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3078&quot;&gt;大&lt;/span&gt;&lt;span data-raw-text=&quot;家&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3079&quot;&gt;家&lt;/span&gt;&lt;span data-raw-text=&quot;多&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3080&quot;&gt;多&lt;/span&gt;&lt;span data-raw-text=&quot;多&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3081&quot;&gt;多&lt;/span&gt;&lt;span data-raw-text=&quot;投&quot; data-textnode-index=&quot;101&quot; data-index=&quot;3082&quot;&gt;投&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;稿&quot; data-textnode-index=&quot;102&quot; data-index=&quot;3083&quot;&gt;稿&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__9&quot;&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__10&quot;&gt;&lt;span data-raw-text=&quot;投&quot; data-textnode-index=&quot;104&quot; data-index=&quot;3085&quot;&gt;投&lt;/span&gt;&lt;span data-raw-text=&quot;稿&quot; data-textnode-index=&quot;104&quot; data-index=&quot;3086&quot;&gt;稿&lt;/span&gt;&lt;span data-raw-text=&quot;请&quot; data-textnode-index=&quot;104&quot; data-index=&quot;3087&quot;&gt;请&lt;/span&gt;&lt;span data-raw-text=&quot;联&quot; data-textnode-index=&quot;104&quot; data-index=&quot;3088&quot;&gt;联&lt;/span&gt;&lt;span data-raw-text=&quot;系&quot; data-textnode-index=&quot;104&quot; data-index=&quot;3089&quot;&gt;系&lt;/span&gt;&lt;span data-raw-text=&quot;：&quot; data-textnode-index=&quot;104&quot; data-index=&quot;3090&quot;&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__11&quot;&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__12&quot;&gt;&lt;span data-raw-text=&quot;s&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3091&quot;&gt;s&lt;/span&gt;&lt;span data-raw-text=&quot;h&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3092&quot;&gt;h&lt;/span&gt;&lt;span data-raw-text=&quot;e&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3093&quot;&gt;e&lt;/span&gt;&lt;span data-raw-text=&quot;n&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3094&quot;&gt;n&lt;/span&gt;&lt;span data-raw-text=&quot;z&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3095&quot;&gt;z&lt;/span&gt;&lt;span data-raw-text=&quot;h&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3096&quot;&gt;h&lt;/span&gt;&lt;span data-raw-text=&quot;e&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3097&quot;&gt;e&lt;/span&gt;&lt;span data-raw-text=&quot;1&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3098&quot;&gt;1&lt;/span&gt;&lt;span data-raw-text=&quot;6&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3099&quot;&gt;6&lt;/span&gt;&lt;span data-raw-text=&quot;3&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3100&quot;&gt;3&lt;/span&gt;&lt;span data-raw-text=&quot;@&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3101&quot;&gt;@&lt;/span&gt;&lt;span data-raw-text=&quot;g&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3102&quot;&gt;g&lt;/span&gt;&lt;span data-raw-text=&quot;m&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3103&quot;&gt;m&lt;/span&gt;&lt;span data-raw-text=&quot;a&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3104&quot;&gt;a&lt;/span&gt;&lt;span data-raw-text=&quot;i&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3105&quot;&gt;i&lt;/span&gt;&lt;span data-raw-text=&quot;l&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3106&quot;&gt;l&lt;/span&gt;&lt;span data-raw-text=&quot;.&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3107&quot;&gt;.&lt;/span&gt;&lt;span data-raw-text=&quot;c&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3108&quot;&gt;c&lt;/span&gt;&lt;span data-raw-text=&quot;o&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3109&quot;&gt;o&lt;/span&gt;&lt;span data-raw-text=&quot;m&quot; data-textnode-index=&quot;105&quot; data-index=&quot;3110&quot;&gt;m&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__13&quot;&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__14&quot;&gt;&lt;span data-raw-text=&quot;本&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3111&quot;&gt;本&lt;/span&gt;&lt;span data-raw-text=&quot;文&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3112&quot;&gt;文&lt;/span&gt;&lt;span data-raw-text=&quot;由&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3113&quot;&gt;由&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index=&quot;106&quot; data-index=&quot;3114&quot;&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;&lt;span&gt;码农的荒岛求生&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index=&quot;106&quot; data-index=&quot;3118&quot;&gt; &lt;/span&gt;&lt;span data-raw-text=&quot;授&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3119&quot;&gt;授&lt;/span&gt;&lt;span data-raw-text=&quot;权&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3120&quot;&gt;权&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index=&quot;106&quot; data-index=&quot;3121&quot;&gt; &lt;/span&gt;&lt;span data-raw-text=&quot;饭&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3122&quot;&gt;饭&lt;/span&gt;&lt;span data-raw-text=&quot;米&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3123&quot;&gt;米&lt;/span&gt;&lt;span data-raw-text=&quot;粒&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3124&quot;&gt;粒&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index=&quot;106&quot; data-index=&quot;3125&quot;&gt; &lt;/span&gt;&lt;span data-raw-text=&quot;发&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3126&quot;&gt;发&lt;/span&gt;&lt;span data-raw-text=&quot;布&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3127&quot;&gt;布&lt;/span&gt;&lt;span data-raw-text=&quot;，&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3128&quot;&gt;，&lt;/span&gt;&lt;span data-raw-text=&quot;转&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3129&quot;&gt;转&lt;/span&gt;&lt;span data-raw-text=&quot;载&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3130&quot;&gt;载&lt;/span&gt;&lt;span data-raw-text=&quot;请&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3131&quot;&gt;请&lt;/span&gt;&lt;span data-raw-text=&quot;注&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3132&quot;&gt;注&lt;/span&gt;&lt;span data-raw-text=&quot;明&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3133&quot;&gt;明&lt;/span&gt;&lt;span data-raw-text=&quot;本&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3134&quot;&gt;本&lt;/span&gt;&lt;span data-raw-text=&quot;来&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3135&quot;&gt;来&lt;/span&gt;&lt;span data-raw-text=&quot;源&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3136&quot;&gt;源&lt;/span&gt;&lt;span data-raw-text=&quot;信&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3137&quot;&gt;信&lt;/span&gt;&lt;span data-raw-text=&quot;息&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3138&quot;&gt;息&lt;/span&gt;&lt;span data-raw-text=&quot;和&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3139&quot;&gt;和&lt;/span&gt;&lt;span data-raw-text=&quot;以&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3140&quot;&gt;以&lt;/span&gt;&lt;span data-raw-text=&quot;下&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3141&quot;&gt;下&lt;/span&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3142&quot;&gt;的&lt;/span&gt;&lt;span data-raw-text=&quot;二&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3143&quot;&gt;二&lt;/span&gt;&lt;span data-raw-text=&quot;维&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3144&quot;&gt;维&lt;/span&gt;&lt;span data-raw-text=&quot;码&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3145&quot;&gt;码&lt;/span&gt;&lt;span data-raw-text=&quot;（&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3146&quot;&gt;（&lt;/span&gt;&lt;span data-raw-text=&quot;长&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3147&quot;&gt;长&lt;/span&gt;&lt;span data-raw-text=&quot;按&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3148&quot;&gt;按&lt;/span&gt;&lt;span data-raw-text=&quot;可&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3149&quot;&gt;可&lt;/span&gt;&lt;span data-raw-text=&quot;识&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3150&quot;&gt;识&lt;/span&gt;&lt;span data-raw-text=&quot;别&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3151&quot;&gt;别&lt;/span&gt;&lt;span data-raw-text=&quot;二&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3152&quot;&gt;二&lt;/span&gt;&lt;span data-raw-text=&quot;维&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3153&quot;&gt;维&lt;/span&gt;&lt;span data-raw-text=&quot;码&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3154&quot;&gt;码&lt;/span&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3155&quot;&gt;关&lt;/span&gt;&lt;span data-raw-text=&quot;注&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3156&quot;&gt;注&lt;/span&gt;&lt;span data-raw-text=&quot;）&quot; data-textnode-index=&quot;106&quot; data-index=&quot;3157&quot;&gt;）&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;color: rgb(53, 53, 53); font-size: 14px; text-align: start; white-space: normal; max-width: 100%; min-height: 1em; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__15&quot;&gt;&lt;span&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/LHDiahSVnXhunbEtuowcI7kF5kmUaeTrszibibQ3st6OU8hy2CoIotHHLxicicibyF1qkNI7HibXYHXGN6hRby4ZyjR6A/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7272727272727273&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;198&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/dFZyR2JHA40ooBMYVEUxJCPXf4gibCfn7o9SibGwiaIsQFLIZj1fTCMntcXzojwibkvqgTMOiaw14icRwQkP7zNNO7Hw/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;素质三连biubiubiu~&lt;img data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UibM134tIsO1j5yqHyNhh9arj090oAL7zGhRJRq6cFqFOlDZMleLl4pw/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>