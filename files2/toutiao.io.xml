<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>a71bbbcd3cc40b56f9a74c76fb5890eb</guid>
<title>资料 | 德勤 2020 技术趋势报告.pdf</title>
<link>https://toutiao.io/k/rpq9ju7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;span&gt;大家好，我是周刊菌。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;「码农周刊 VIP 会员」推出 27 周啦！感谢亲们的大力支持！第 027 期「码农周刊 VIP 会员专属邮件周报」已发送完毕，请注意查收。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;告诉大家一个好消息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：已有数位上市公司 CTO 低调订阅了我们的「码农周刊 VIP 会员专属邮件周报」，感谢肯定！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;255&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;255&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;300&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/t8lpVibticjQ7PeUupLzwuuAibicnrRNxKcfCY7fIva78efKsUzANlCCAeuSQEGkGm34rKkzNRpzy6IiaiaHmBNA6DcA/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以下内容选自「码农周刊 VIP 会员」圈子，每日更新，精彩不断&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;1376&quot; data-ratio=&quot;1.464&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AjN1jquNav8ibRlj1geJpJpDuHReKErd27rYF2J1yDshJg9GTfTJTWoFmZEpH49OwwCFvRpSibv30kjnCiaQn4cOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;「码农周刊 VIP 会员」是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;简介版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;码农周刊 VIP 会员 = 全年 52 期「VIP 会员专属邮件周报」 + 只限 VIP 会员加入的交流圈子 + 大厂「内推机会」 + N 多福利&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;详细版&lt;/span&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点击「阅读原文」即可查看详细介绍&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;加入「码农周刊 VIP 会员」，与上市公司 CTO 一起成长！&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;全年 52 期「VIP 会员专属邮件周报」 + 只限 VIP 会员加入的交流圈子 + 大厂「内推机会」 + N 多福利，你值得拥有！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;原价 365 元/年&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;，现价仅需 108 元！&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;260&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;350&quot; data-ratio=&quot;1.3478260869565217&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;690&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/t8lpVibticjQ55lkiaIfFtAvQ7oklJLhfYEwMXeZORosBgxxRzEaXjYiapBSev2CQfYfl7kTiaFqsoiaicGyvcKIHzcSg/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>dcd3af7cff9edd9a5ccdbcfeedc18e1e</guid>
<title>TypeScript 和 Nodemon 终极设置</title>
<link>https://toutiao.io/k/xcwrwok</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;点击上方&lt;/span&gt;&lt;span&gt;蓝字&lt;/span&gt;&lt;span&gt;关注这个脱发、摆摊、卖货、持续学习的程序员&lt;/span&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0ANVMicnDYSOGCEahCcIWWKWlt83TogDnw5oLxzbiaGQEZ86EZsWsMgzVibZ57zibtcmiaoNkhLCrw1hJmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1400&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;学习如何设置TypeScript和Nodemon，以提高你的生产力并轻松开发！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;设置TypeScript和Nodemon有时会有些棘手，在本文中，我将向你展示如何轻松设置TypeScript和Nodemon！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在此github仓库中找到本文的完整源代码。&lt;/span&gt;&lt;span&gt;https://github.com/talohana/typescript-nodemon-ultimate-setup&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;创建一个示例项目&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;让我们从创建一个示例项目开始，我们将通过运行以下命令来完成：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;mkdir typescript-nodemon-ultimate-setup&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;接下来，通过运行以下命令创建最小的npm packge：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;npm init -y or yarn init -y&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;注意：为减少冗长性，在本文的其余部分中，我将使用npm并省略yarn命令&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;添加所需的依赖项：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;npm i -D typescript ts-node nodemon @types/node&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;通过运行 &lt;/span&gt;&lt;code&gt;&lt;span&gt;npx tsc --init&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 初始化TypeScript&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;最后，我们需要一些源代码来工作，所以让我们创建 &lt;/span&gt;&lt;code&gt;&lt;span&gt;src/index.ts&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 文件，其中包含以下TypeScript。&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;greet&lt;/span&gt;(&lt;span&gt;name: &lt;span&gt;string&lt;/span&gt;&lt;/span&gt;): &lt;span&gt;void&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;&quot;Hello&quot;&lt;/span&gt;, name);&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; readerName = &lt;span&gt;&quot;Medium Reader&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;greet(readerName);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;添加Nodemon&lt;/h2&gt;&lt;section&gt;&lt;span&gt;Nodemon的&lt;/span&gt;&lt;strong&gt;&lt;span&gt;配置方式&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;有很多种，我准备用一个json文件来配置，在我们的项目根目录下添加 &lt;/span&gt;&lt;code&gt;&lt;span&gt;nodemon.json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{&lt;br/&gt;  &lt;span&gt;&quot;restartable&quot;&lt;/span&gt;: &lt;span&gt;&quot;rs&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;ignore&quot;&lt;/span&gt;: [&lt;span&gt;&quot;.git&quot;&lt;/span&gt;, &lt;span&gt;&quot;node_modules/&quot;&lt;/span&gt;, &lt;span&gt;&quot;dist/&quot;&lt;/span&gt;, &lt;span&gt;&quot;coverage/&quot;&lt;/span&gt;],&lt;br/&gt;  &lt;span&gt;&quot;watch&quot;&lt;/span&gt;: [&lt;span&gt;&quot;src/&quot;&lt;/span&gt;],&lt;br/&gt;  &lt;span&gt;&quot;execMap&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;ts&quot;&lt;/span&gt;: &lt;span&gt;&quot;node -r ts-node/register&quot;&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;env&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;NODE_ENV&quot;&lt;/span&gt;: &lt;span&gt;&quot;development&quot;&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;ext&quot;&lt;/span&gt;: &lt;span&gt;&quot;js,json,ts&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;让我们来看一下配置：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;restartable：我们可以用来手动重新启动程序的命令&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;ignore：不希望在更改时触发程序重新启动的文件列表&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;watch：更改时我们希望触发程序重新启动的路径列表&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;execMap：文件类型/扩展名与运行时之间的映射&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;env：要包含的环境变量&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;ext：Nodemon监视的文件扩展名&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;为了运行和调试我们的设置，请在 &lt;/span&gt;&lt;code&gt;&lt;span&gt;package.json&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 文件中添加两个脚本：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{&lt;br/&gt;  &lt;span&gt;&quot;scripts&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;dev&quot;&lt;/span&gt;: &lt;span&gt;&quot;nodemon --config nodemon.json src/index.ts&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;dev:debug&quot;&lt;/span&gt;: &lt;span&gt;&quot;nodemon --config nodemon.json --inspect-brk src/index.ts&quot;&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;注意 &lt;/span&gt;&lt;code&gt;&lt;span&gt;dev:debug&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 脚本中增加了 &lt;/span&gt;&lt;code&gt;&lt;span&gt;--inspect-brk&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 标志，这告诉node停止程序的执行直到连接上调试器，这个可以换成&lt;/span&gt;&lt;code&gt;&lt;span&gt;--inspect&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 标志来调试而不停止。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;现在，我们可以使用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;npm run dev&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 运行我们的程序，试着修改一些东西，就可以看到程序用更新的代码重新运行。&lt;/span&gt;&lt;/section&gt;&lt;mpcpc js_editor_cpcad=&quot;&quot; class=&quot;js_cpc_area cpc_iframe&quot; src=&quot;/cgi-bin/readtemplate?t=tmpl/cpc_tmpl#1603028298677&quot; data-category_id_list=&quot;48|26|49|1|55|8|47|35|5|6|7|24|37|11|50|54|53|52|42|29|43|16|51|36&quot; data-id=&quot;1603028298677&quot;/&gt;&lt;section&gt;&lt;span&gt;使用VSCode进行调试&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这个难题的最后一步是添加VSCode调试配置。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;创建包含以下配置的 &lt;/span&gt;&lt;code&gt;&lt;span&gt;.vscode/launch.json&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 文件：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{&lt;br/&gt;  &lt;span&gt;&quot;version&quot;&lt;/span&gt;: &lt;span&gt;&quot;0.2.0&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;configurations&quot;&lt;/span&gt;: [&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;node&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;request&quot;&lt;/span&gt;: &lt;span&gt;&quot;attach&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;name&quot;&lt;/span&gt;: &lt;span&gt;&quot;Attach&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;restart&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;processId&quot;&lt;/span&gt;: &lt;span&gt;&quot;${command:PickProcess}&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;现在，当我们用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;npm run dev:debug&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 启动nodemon时，程序会停止，直到我们连接到它：&lt;/span&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.11146245059288537&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0ANVMicnDYSOGCEahCcIWWKWlnoyKU3ZAYBzn4449TP5o5R3hBjk8hapu9tmN3dYPhU4J7GORPvvQbQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1265&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;附加VSCode后，它将在代码的第一行停止，你可以轻松调试程序！&lt;/span&gt;&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;更多文章&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;粉丝福利&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;114期留言中奖用户：&lt;/span&gt;&lt;span&gt;&lt;span&gt;CCC&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;，恭喜！请找我领红包5元红包，过期不候。&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;临走前留下，&lt;span&gt;今天的福利&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;福利1：&lt;/span&gt;&lt;span&gt;《Web安全从入门到“放弃”》&lt;span&gt;视频教程&lt;/span&gt; &lt;/span&gt;&lt;span&gt;获取地址和密码请在公众号中回复关键字：&lt;/span&gt;&lt;span&gt;003&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;福利2：&lt;/span&gt;&lt;span&gt;在看+留言&lt;/span&gt;&lt;span&gt;，张张会在留言区随机抽取一位认真留言的小伙伴，给他发一个红包奖励&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;1016&quot; data-ratio=&quot;1.8216168717047452&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOSWs4bajybdHHSicmRmuSnEvcAfCVicY2SvTmq8ibFPZqHm3DVgEtXPVcWoUiaazANI4UIOTlRsvL49A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1138&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;- END -&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;走心的分享更容易被抽中~&lt;br/&gt;开奖时间 下期文末&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点赞 + 在看 + 留言&lt;br/&gt;下一个幸运儿就是你&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;👇&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6ce60186b314c8f095d7175e05747cc2</guid>
<title>神经网络知识专题总结</title>
<link>https://toutiao.io/k/4wice1s</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7256637168141593&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SHf0DkybHYTy31YvlJaB2uLInEsjcVDR0k1m8chc6W7OZNMm76YGTBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1356&quot; data-backw=&quot;578&quot; data-backh=&quot;420&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结构总览&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一、神经网络简介&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于非线性分类问题（如图1所示），“非线性”意味着你无法使用形式为：&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;b + w_1 x_1 + w_2x_2&amp;#10;&quot; data-formula-type=&quot;block-equation&quot; data-tool=&quot;mdnice编辑器&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 7064.1 844&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;62&quot; d=&quot;M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(651.2, 0)&quot;&gt;&lt;path data-c=&quot;2B&quot; d=&quot;M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(1651.4, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;77&quot; d=&quot;M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(716, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(2771, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(572, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3968.8, 0)&quot;&gt;&lt;path data-c=&quot;2B&quot; d=&quot;M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(4969, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;77&quot; d=&quot;M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(716, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(6088.5, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(572, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;的模型准确预测标签。也就是说，“决策面”不是直线。之前，我们了解了对非线性问题进行建模的一种可行方法 - 特征组合。&lt;img data-ratio=&quot;0.701058201058201&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SCibjMlFcYKceEm2mncewib1PKbYuvV7BicpwajD3RXoEzNMXiaOr3jibJSQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;756&quot; data-backw=&quot;578&quot; data-backh=&quot;405&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在，请考虑以下数据集：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0067114093959733&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6So0ziaELoiaBRRHrgDXj6X4zYqjGOIUPM32vzC7gckOovPAtXIKmagLXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;596&quot; data-backw=&quot;578&quot; data-backh=&quot;582&quot;/&gt;&lt;figcaption&gt;图 2. 更难的非线性分类问题&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图 2 所示的数据集问题无法用线性模型解决。为了了解神经网络可以如何帮助解决非线性问题，我们首先用图表呈现一个线性模型：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5751445086705202&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SGUZ9SqTjX6d0U5vGUMa3abpKJ6eAkvT2TibHLbO0lbsU2IAlRxcPJvw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;692&quot; data-backw=&quot;578&quot; data-backh=&quot;332&quot;/&gt;&lt;figcaption&gt;图 3. 用图表呈现的线性模型&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个蓝色圆圈均表示一个输入特征，绿色圆圈表示各个输入的加权和。要提高此模型处理非线性问题的能力，我们可以如何更改它？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.1 隐藏层&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在下图所示的模型中，我们添加了一个表示中间值的“隐藏层”。隐藏层中的每个黄色节点均是蓝色输入节点值的加权和。输出是黄色节点的加权和。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6762402088772846&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SSTicNnQdGic680PfmD7IvVftY45OxYHyakQzV0SyYG3b6WngwjcwTbfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;766&quot; data-backw=&quot;578&quot; data-backh=&quot;391&quot;/&gt;&lt;figcaption&gt;图 4. 两层模型的图表&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此模型是线性的吗？是的，其输出仍是其输入的线性组合。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在下图所示的模型中，我们又添加了一个表示加权和的“隐藏层”。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9383033419023136&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SiavfTcUcRnukibI1t9TUrxCId6OVIUbnl0DxoKC7CvZicC6s2FPwvyFrw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;778&quot; data-backw=&quot;578&quot; data-backh=&quot;542&quot;/&gt;&lt;figcaption&gt;图 5. 三层模型的图表&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此模型仍是线性的吗？是的，没错。当你将输出表示为输入的函数并进行简化时，你只是获得输入的另一个加权和而已。该加权和无法对图 2 中的非线性问题进行有效建模。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.2 激活函数&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要对非线性问题进行建模，我们可以直接引入非线性函数。我们可以用非线性函数将每个隐藏层节点像管道一样连接起来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在下图所示的模型中，在隐藏层 1 中的各个节点的值传递到下一层进行加权求和之前，我们采用一个非线性函数对其进行了转换。这种非线性函数称为激活函数。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4652777777777778&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SSLggSyBqDNZ7tEKsYhWnabLVeLLsIq4qHd2Vk0EUUx687eiaCnJytZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;864&quot; data-backw=&quot;578&quot; data-backh=&quot;269&quot;/&gt;&lt;figcaption&gt;图 6. 包含激活函数的三层模型的图表&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在，我们已经添加了激活函数，如果添加层，将会产生更多影响。通过在非线性上堆叠非线性，我们能够对输入和预测输出之间极其复杂的关系进行建模。简而言之，每一层均可通过原始输入有效学习更复杂、更高级别的函数。如果你想更直观地了解这一过程的工作原理，请参阅 Chris Olah 的精彩博文。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;常见激活函数&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下 S 型激活函数将加权和转换为介于 0 和 1 之间的值。&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;F(x) = \frac{1}{1+e^{-x}}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot; data-tool=&quot;mdnice编辑器&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -1342 7065.6 2159.2&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;46&quot; d=&quot;M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(749, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1138, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1710, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2376.8, 0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mfrac&quot; transform=&quot;translate(3432.6, 0)&quot;&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(1566.5, 676)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mrow&quot; transform=&quot;translate(220, -735.2)&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(722.2, 0)&quot;&gt;&lt;path data-c=&quot;2B&quot; d=&quot;M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(1722.4, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;65&quot; d=&quot;M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(466, 363) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(778, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;rect x=&quot;120&quot; y=&quot;220&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;曲线图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3994082840236686&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SIT5WfTXfktu4fSrwHp3Bz05daAOfaHvyAyQS06iaumAUBu6zKTu8wsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;676&quot; data-backw=&quot;578&quot; data-backh=&quot;231&quot;/&gt;&lt;figcaption&gt;图 7. S 型激活函数&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相较于 S 型函数等平滑函数，以下修正线性单元激活函数（简称为 ReLU）的效果通常要好一点，同时还非常易于计算。&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;F(x) = max(0, x)&amp;#10;&quot; data-formula-type=&quot;block-equation&quot; data-tool=&quot;mdnice编辑器&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 7706.2 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;46&quot; d=&quot;M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(749, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1138, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1710, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2376.8, 0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(3432.6, 0)&quot;&gt;&lt;path data-c=&quot;6D&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(4310.6, 0)&quot;&gt;&lt;path data-c=&quot;61&quot; d=&quot;M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(4839.6, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(5411.6, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(5800.6, 0)&quot;&gt;&lt;path data-c=&quot;30&quot; d=&quot;M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(6300.6, 0)&quot;&gt;&lt;path data-c=&quot;2C&quot; d=&quot;M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(6745.2, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(7317.2, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ReLU 的优势在于它基于实证发现（可能由 ReLU 驱动），拥有更实用的响应范围。S 型函数的响应性在两端相对较快地减少。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3994082840236686&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SsIBiabB4iayNItGCO60KjhibFEwibujA6hQfmkJz4nTU2o3lOibLaGKjE2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;676&quot; data-backw=&quot;578&quot; data-backh=&quot;231&quot;/&gt;&lt;figcaption&gt;图 8. ReLU 激活函数&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实际上，所有数学函数均可作为激活函数。假设 σσ 表示我们的激活函数（ReLU、S 型函数等等）。因此，网络中节点的值由以下公式指定：&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\sigma(wx + b)&amp;#10;&quot; data-formula-type=&quot;block-equation&quot; data-tool=&quot;mdnice编辑器&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 4288.4 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;3C3&quot; d=&quot;M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(571, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(960, 0)&quot;&gt;&lt;path data-c=&quot;77&quot; d=&quot;M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1676, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2470.2, 0)&quot;&gt;&lt;path data-c=&quot;2B&quot; d=&quot;M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(3470.4, 0)&quot;&gt;&lt;path data-c=&quot;62&quot; d=&quot;M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3899.4, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;TensorFlow 为各种激活函数提供开箱即用型支持。但是，我们仍建议从 ReLU 着手。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.3 小结&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在，我们的模型拥有了人们通常所说的“神经网络”的所有标准组件：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;一组节点，类似于神经元，位于层中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一组权重，表示每个神经网络层与其下方的层之间的关系。下方的层可能是另一个神经网络层，也可能是其他类型的层。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一组偏差，每个节点一个偏差。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一个激活函数，对层中每个节点的输出进行转换。不同的层可能拥有不同的激活函数。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;警告：神经网络不一定始终比特征组合好，但它确实可以提供适用于很多情形的灵活替代方案。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二、训练神经网络&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本部分介绍了反向传播算法的失败案例，以及正则化神经网络的常见方法。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.1 失败案例&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多常见情况都会导致反向传播算法出错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;梯度消失&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;较低层（更接近输入）的梯度可能会变得非常小。在深度网络中，计算这些梯度时，可能涉及许多小项的乘积。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当较低层的梯度逐渐消失到 0 时，这些层的训练速度会非常缓慢，甚至不再训练。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ReLU 激活函数有助于防止梯度消失。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;梯度爆炸&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果网络中的权重过大，则较低层的梯度会涉及许多大项的乘积。在这种情况下，梯度就会爆炸：梯度过大导致难以收敛。批标准化可以降低学习速率，因而有助于防止梯度爆炸。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;ReLU 单元消失&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一旦 ReLU 单元的加权和低于 0，ReLU 单元就可能会停滞。它会输出对网络输出没有任何贡献的 0 激活，而梯度在反向传播算法期间将无法再从中流过。由于梯度的来源被切断，ReLU 的输入可能无法作出足够的改变来使加权和恢复到 0 以上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;降低学习速率有助于防止 ReLU 单元消失。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.2 丢弃正则化&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是称为丢弃的另一种形式的正则化，可用于神经网络。其工作原理是，在梯度下降法的每一步中随机丢弃一些网络单元。丢弃得越多，正则化效果就越强：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;0.0 = 无丢弃正则化。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;1.0 = 丢弃所有内容。模型学不到任何规律。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;0.0 和 1.0 之间的值更有用。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;三、多类别神经网络&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.1 一对多（OnevsAll）&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一对多提供了一种利用二元分类的方法。鉴于一个分类问题会有 N 个可行的解决方案，一对多解决方案包括 N 个单独的二元分类器，每个可能的结果对应一个二元分类器。在训练期间，模型会训练一系列二元分类器，使每个分类器都能回答单独的分类问题。以一张狗狗的照片为例，可能需要训练五个不同的识别器，其中四个将图片看作负样本（不是狗狗），一个将图片看作正样本（是狗狗）。即：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;这是一张苹果的图片吗？不是。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;这是一张熊的图片吗？不是。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;这是一张糖果的图片吗？不是。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;这是一张狗狗的图片吗？是。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;这是一张鸡蛋的图片吗？不是。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当类别总数较少时，这种方法比较合理，但随着类别数量的增加，其效率会变得越来越低下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以借助深度神经网络（在该网络中，每个输出节点表示一个不同的类别）创建明显更加高效的一对多模型。图9展示了这种方法：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6882352941176471&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SVkppeFX1T5rwEl1YupNBmuCV5k054sXLg1VRuulDydxKsrb6X1GuFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;680&quot;/&gt;&lt;figcaption&gt;图 9. 一对多神经网络&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;四、Softmax&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们已经知道，逻辑回归可生成介于 0 和 1.0 之间的小数。例如，某电子邮件分类器的逻辑回归输出值为 0.8，表明电子邮件是垃圾邮件的概率为 80%，不是垃圾邮件的概率为 20%。很明显，一封电子邮件是垃圾邮件或非垃圾邮件的概率之和为 1.0。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Softmax 将这一想法延伸到多类别领域。也就是说，在多类别问题中，Softmax 会为每个类别分配一个用小数表示的概率。这些用小数表示的概率相加之和必须是 1.0。与其他方式相比，这种附加限制有助于让训练过程更快速地收敛。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如，回到我们在图 9 中看到的图片分析示例，Softmax 可能会得出图片属于某一特定类别的以下概率：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.28396739130434784&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SUWwpn117RsQZ5vgezicU58UUCRkgfhyf5LKJ9eUBB4YE3bcib5O6R1SA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1472&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Softmax 层是紧挨着输出层之前的神经网络层。Softmax 层必须和输出层拥有一样的节点数。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7195121951219512&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SJo6MN0cCmEUVCZWHoWHhy7IKHBSGTJOpAhsD7UibpvvA5rELJMZdYLA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;492&quot;/&gt;&lt;figcaption&gt;图 10. 神经网络中的 Softmax 层&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Softmax 方程式如下所示：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.23369565217391305&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFRXXrtVw5SUtVbWmRJpib6SObibArodD84nibqlDhOPVYsiaiaWYbtQhdjqN39qAvExhIpnrKSvlKc4LA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;736&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;请注意，此公式本质上是将逻辑回归公式延伸到了多类别。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.1 Softmax 选项&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;请查看以下 Softmax 变体：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;完整 Softmax 是我们一直以来讨论的 Softmax；也就是说，Softmax 针对每个可能的类别计算概率。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;候选采样指 Softmax 针对所有正类别标签计算概率，但仅针对负类别标签的随机样本计算概率。例如，如果我们想要确定某个输入图片是小猎犬还是寻血猎犬图片，则不必针对每个非狗狗样本提供概率。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;类别数量较少时，完整 Softmax 代价很小，但随着类别数量的增加，它的代价会变得极其高昂。候选采样可以提高处理具有大量类别的问题的效率。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;五、一个标签与多个标签&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Softmax 假设每个样本只是一个类别的成员。但是，一些样本可以同时是多个类别的成员。对于此类示例：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;你不能使用 Softmax。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你必须依赖多个逻辑回归。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如，假设你的样本是只包含一项内容（一块水果）的图片。Softmax 可以确定该内容是梨、橙子、苹果等的概率。如果你的样本是包含各种各样内容（几份不同种类的水果）的图片，你必须改用多个逻辑回归。&lt;em&gt;&lt;span/&gt;&lt;/em&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>cd153723d43b8882b99246b5d652a572</guid>
<title>iOS 推送手机消息背后的技术</title>
<link>https://toutiao.io/k/qugr2s1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1575&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/j3gficicyOvasIjZpiaTNIPReJVWEJf7UGpmokI3LL4NbQDb8fO48fYROmYPXUhXFN8IdDqPcI1gA6OfSLsQHxB4w/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作者：allenzzhao，腾讯  IEG运营开发工程师&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;消息推送我们几乎每天都会用到，但你知道iOS中的消息推送是如何实现的吗？本文将从推送权限申请，到本地和远程消息推送，再到App对推送消息的处理等多个步骤，详细介绍iOS中消息推送的工作流程。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1、概述&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息推送是一种App向用户传递信息的重要方式，无论App是否正在运行，只要用户打开了通知权限就能够收到推送消息。开发者通过调用iOS系统方法就可以发起本地消息推送，例如我们最常见的闹钟应用，App能够根据本地存储的闹钟信息直接发起本地通知，因此即使没有网络也能收到闹钟提醒。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;远程消息推送则是由业务方服务器将消息内容按照固定格式发送到Apple Push Notitfication service（简称APNs），然后再经由苹果的APNs服务器推送到用户设备上，例如腾讯新闻可以向用户推送时事热点新闻，QQ邮箱可以为用户推送收到新邮件的提醒，游戏App可以通过这种方式通知玩家有新的游戏福利，既能够及时地通知用户重要信息，也能够促使用户通过推送消息打开或唤醒App，提高App的使用率。除了标题、内容、提示音和角标数字等固定推送参数以外，开发者还可以在推送消息中增加自定义参数，让用户在点击推送消息时能够直达相关新闻、邮件或福利页面，提供更好的用户体验和页面的曝光率。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5039761431411531&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvavG0DSxsc5FX0j5x4DiaedflLFzncLjJKQWs7gW07mqep02wwLgxQEskexJmYGQa0sDPSHmVFQvWQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1006&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2、XCode配置&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在使用消息推送相关功能之前，我们首先需要准备支持推送功能的证书，个人开发者可以参考&lt;a href=&quot;https://cloud.tencent.com/document/product/548/36664#.E6.AD.A5.E9.AA.A43.EF.BC.9A.E4.B8.8A.E4.BC.A0.E8.AF.81.E4.B9.A6.E5.88.B0-tpns-.E6.8E.A7.E5.88.B6.E5.8F.B0&quot; data-linktype=&quot;2&quot;&gt;腾讯云的TPNS文档&lt;/a&gt;，在苹果开发者中心中配置和导出推送证书。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，还需要在XCode的工程配置Signing &amp;amp; Capabilities配置中增加消息推送权限，在操作完成后Xcode会自动生成或更新工程的entitlements文件，增加如图所示的APS Environment字段。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7283406754772394&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvavG0DSxsc5FX0j5x4Diaedfl15CEuEF0SQY8ib9IicdAJt6AfzGOxo7pQZKKKA1BrW16YWibICRTYib5Xg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;681&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.10337078651685393&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvavG0DSxsc5FX0j5x4Diaedfl5p0BJdMLbUkx0BBeMuunn1MZAL4I7bBmOJ9icIUgibzENsV7uEGEsEvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1335&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3、申请消息推送权限&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6930147058823529&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvavG0DSxsc5FX0j5x4DiaedflpglRcd7mU4lA7LfHoqopwPtkVRvml2LzTGag86p1d1FJw51zLUHeIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1088&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;无论是本地推送还是远程推送，在推送前都必须要先向用户申请推送权限，只有用户授权后才能够收到推送消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;苹果在iOS10中引入了UserNotifications框架，将推送相关功能进行了封装和升级，除了以前UIApplication可以做到的一些基本的本地和远程消息推送功能外，还增加了撤回或修改推送消息、自定义通知UI、推送消息前台显示等功能。在iOS10及以上的版本中，苹果推荐开发者使用requestAuthorizationWithOptions:completionHandler:方法向用户申请消息推送权限，该方法需要指定一个用于描述推送权限的UNAuthorizationOptions类型参数，包括alert（消息的标题、文字等内容）、sound（消息提示音）、badge（App右上角显示的角标）；还可以在该方法的completionHandler回调方法中通过granted参数来判断用户是否允许了授权。相关代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;#import &lt;span&gt;&amp;lt;UserNotifications/UserNotifications.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;……&lt;br/&gt;[[UNUserNotificationCenter currentNotificationCenter]&lt;br/&gt;requestAuthorizationWithOptions:UNAuthorizationOptionSound|UNAuthorizationOptionAlert|UNAuthorizationOptionBadge&lt;br/&gt;completionHandler:^(&lt;span&gt;BOOL&lt;/span&gt; granted, &lt;span&gt;NSError&lt;/span&gt; * _Nullable error) {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(granted){&lt;br/&gt;        &lt;span&gt;//用户允许了推送权限申请&lt;/span&gt;&lt;br/&gt;    }&lt;span&gt;else&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//用户拒绝了推送权限申请&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;}];&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在iOS9中，直接使用UIApplication的registerUserNotificationSettings方法即可，该方法同样需要通过配置sound、alert、badge等参数，但是没有提供用于判断用户点击了授权还是拒绝的回调方法。相关代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;[[&lt;span&gt;UIApplication&lt;/span&gt; sharedApplication] registerUserNotificationSettings:&lt;br/&gt; [&lt;span&gt;UIUserNotificationSettings&lt;/span&gt; settingsForTypes:&lt;br/&gt;  (&lt;span&gt;UIUserNotificationTypeSound&lt;/span&gt; | &lt;span&gt;UIUserNotificationTypeAlert&lt;/span&gt; | &lt;span&gt;UIUserNotificationTypeBadge&lt;/span&gt;)&lt;br/&gt;                                   categories:&lt;span&gt;nil&lt;/span&gt;]];&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要注意无论是UserNotifications还是UIApplication的申请推送权限的方法，上文中的申请用户授权的系统弹窗都只会显示一次，iOS会记录用户对于该App的授权状态，不会向用户重复申请授权。消息推送是App的一项重要功能，同时也是很好的运营手段，因此很多App在启动后会检查消息推送的授权状态，如果用户拒绝了消息推送权限，仍然会以一定的频率弹窗提醒用户，在iOS的设置中心中再去打开App的推送权限。相关代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt;(@available(iOS &lt;span&gt;10.0&lt;/span&gt;,*)){&lt;br/&gt;    [[UNUserNotificationCenter currentNotificationCenter] getNotificationSettingsWithCompletionHandler:^(UNNotificationSettings * _Nonnull settings) {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (UNAuthorizationStatusDenied == settings.authorizationStatus) {&lt;br/&gt;            &lt;span&gt;//用户拒绝消息推送，弹窗提示引导用户去系统设置中进行授权&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;UIAlertController&lt;/span&gt;* alert = [&lt;span&gt;UIAlertController&lt;/span&gt; alertControllerWithTitle:&lt;span&gt;@&quot;未打开推送功能&quot;&lt;/span&gt; message:&lt;span&gt;@&quot;请在设备的\&quot;设置-App-通知\&quot;选项中，允许通知&quot;&lt;/span&gt; preferredStyle:&lt;span&gt;UIAlertControllerStyleAlert&lt;/span&gt;];&lt;br/&gt;            &lt;span&gt;UIAlertAction&lt;/span&gt;* cancel = [&lt;span&gt;UIAlertAction&lt;/span&gt; actionWithTitle:&lt;span&gt;@&quot;取消&quot;&lt;/span&gt; style:&lt;span&gt;UIAlertActionStyleCancel&lt;/span&gt; handler:^(&lt;span&gt;UIAlertAction&lt;/span&gt;* action){&lt;br/&gt;                [alert dismissViewControllerAnimated: &lt;span&gt;YES&lt;/span&gt; completion: &lt;span&gt;nil&lt;/span&gt;];&lt;br/&gt;            }];&lt;br/&gt;            &lt;span&gt;UIAlertAction&lt;/span&gt;* ok = [&lt;span&gt;UIAlertAction&lt;/span&gt; actionWithTitle:&lt;span&gt;@&quot;去设置&quot;&lt;/span&gt; style:&lt;span&gt;UIAlertActionStyleDefault&lt;/span&gt; handler:^(&lt;span&gt;UIAlertAction&lt;/span&gt;* action){&lt;br/&gt;                [alert dismissViewControllerAnimated: &lt;span&gt;YES&lt;/span&gt; completion: &lt;span&gt;nil&lt;/span&gt;];&lt;br/&gt;                &lt;span&gt;NSURL&lt;/span&gt; * url = [&lt;span&gt;NSURL&lt;/span&gt; URLWithString:&lt;span&gt;UIApplicationOpenSettingsURLString&lt;/span&gt;];&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt;([[&lt;span&gt;UIApplication&lt;/span&gt; sharedApplication] canOpenURL:url])&lt;br/&gt;                {&lt;br/&gt;                    &lt;span&gt;NSURL&lt;/span&gt;*url =[&lt;span&gt;NSURL&lt;/span&gt; URLWithString:&lt;span&gt;UIApplicationOpenSettingsURLString&lt;/span&gt;];&lt;br/&gt;                    [[&lt;span&gt;UIApplication&lt;/span&gt; sharedApplication] openURL:url];&lt;br/&gt;                }&lt;br/&gt;            }];&lt;br/&gt;            [alert addAction: cancel];&lt;br/&gt;            [alert addAction: ok];&lt;br/&gt;            [[&lt;span&gt;UIApplication&lt;/span&gt; sharedApplication].keyWindow.rootViewController presentViewController:alert animated: &lt;span&gt;YES&lt;/span&gt; completion: &lt;span&gt;nil&lt;/span&gt;];&lt;br/&gt;        }&lt;br/&gt;    }];&lt;br/&gt;}&lt;span&gt;else&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;UIUserNotificationSettings&lt;/span&gt; *setting = [[&lt;span&gt;UIApplication&lt;/span&gt; sharedApplication] currentUserNotificationSettings];&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;UIUserNotificationTypeNone&lt;/span&gt; == setting.types) {&lt;br/&gt;        &lt;span&gt;//用户拒绝消息推送，处理方式同上&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4、本地推送&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9419588875453446&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvavG0DSxsc5FX0j5x4DiaedflKTHLBPIBbNP4lZ2I66v0ibCU1wrA8K6brNib4BCzQXIIFuWjbd2YXP3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;827&quot;/&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在iOS10中，UserNotifications框架为我们提供了UNMutableNotificationContent对象描述消息推送的标题、内容、提示音、角表等内容，UNNotificationTrigger对象描述消息推送的推送时间策略，UNNotificationRequest对象整合推送内容和时间。每个Request对象都需要配置一个id来标识该条推送内容，UNUserNotificationCenter通过该id来管理（包括增加、删除、查询和修改）所有的Request。UNNotificationTrigger有四个子类，分别是UNTimeIntervalNotificationTrigger用于通过时间间隔控制消息推送，UNCalendarNotificationTrigger通过日期控制消息推送，UNLocationNotificationTrigger通过地理位置控制消息推送，UNPushNotificationTrigger远程消息推送对象。相关代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;//推送内容&lt;/span&gt;&lt;br/&gt;UNMutableNotificationContent* content = [[UNMutableNotificationContent alloc] init];&lt;br/&gt;content.title = &lt;span&gt;@&quot;推送标题&quot;&lt;/span&gt;;&lt;br/&gt;content.body = &lt;span&gt;@&quot;推送内容&quot;&lt;/span&gt;;&lt;br/&gt;content.sound = [UNNotificationSound defaultSound];&lt;span&gt;//默认提示音&lt;/span&gt;&lt;br/&gt;&lt;span&gt;//日期推送，今日15:53:00推送本地消息&lt;/span&gt;&lt;br/&gt;&lt;span&gt;NSDateComponents&lt;/span&gt;* date = [[&lt;span&gt;NSDateComponents&lt;/span&gt; alloc] init];&lt;br/&gt;date.hour = &lt;span&gt;15&lt;/span&gt;;&lt;br/&gt;date.minute = &lt;span&gt;53&lt;/span&gt;;&lt;br/&gt;UNCalendarNotificationTrigger* calendarTrigger = [UNCalendarNotificationTrigger&lt;br/&gt;       triggerWithDateMatchingComponents:date repeats:&lt;span&gt;NO&lt;/span&gt;];&lt;br/&gt;&lt;span&gt;//倒计时推送，2s后推送本地消息&lt;/span&gt;&lt;br/&gt;UNTimeIntervalNotificationTrigger *intervalTrigger = [UNTimeIntervalNotificationTrigger triggerWithTimeInterval:&lt;span&gt;2&lt;/span&gt; repeats:&lt;span&gt;NO&lt;/span&gt;];&lt;br/&gt;UNNotificationRequest* request = [UNNotificationRequest&lt;br/&gt;       requestWithIdentifier:&lt;span&gt;@&quot;testId&quot;&lt;/span&gt; content:content trigger:calendarTrigger];&lt;br/&gt;&lt;span&gt;//将推送请求添加到管理中心才会生效&lt;/span&gt;&lt;br/&gt;UNUserNotificationCenter* center = [UNUserNotificationCenter currentNotificationCenter];&lt;br/&gt;[center addNotificationRequest:request withCompletionHandler:^(&lt;span&gt;NSError&lt;/span&gt; * _Nullable error) {&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; (error != &lt;span&gt;nil&lt;/span&gt;) {&lt;br/&gt;       &lt;span&gt;NSLog&lt;/span&gt;(&lt;span&gt;@&quot;%@&quot;&lt;/span&gt;, error.localizedDescription);&lt;br/&gt;   }&lt;br/&gt;}];&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在iOS9中，UIApplication提供了presentLocalNotificationNow和scheduleLocalNotification两个本地消息推送的方法，分别表示立即推送和按照固定日期推送，UILocalNotification同时描述了消息内容和推送的时机。示例代码是一个2s后推送的本地消息，soundName属性用于描述消息的提示音，用户可以自定义提示音（需要将音频文件打包到安装包中）或者使用默认提示音乐，repeatInterval和repeatCalendar属性分别用于根据时间差和日期进行重复提示的操作。相关代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;UILocalNotification&lt;/span&gt; *notification = [[&lt;span&gt;UILocalNotification&lt;/span&gt; alloc] init];&lt;br/&gt;notification.fireDate = [&lt;span&gt;NSDate&lt;/span&gt; dateWithTimeIntervalSinceNow:&lt;span&gt;2&lt;/span&gt;];&lt;br/&gt;notification.alertTitle = &lt;span&gt;@&quot;推送标题&quot;&lt;/span&gt;;&lt;br/&gt;notification.alertBody = &lt;span&gt;@&quot;推送内容&quot;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;//notification.soundName = UILocalNotificationDefaultSoundName;&lt;/span&gt;&lt;br/&gt;notification.soundName = &lt;span&gt;@&quot;mysound.wav&quot;&lt;/span&gt;;&lt;br/&gt;[[&lt;span&gt;UIApplication&lt;/span&gt; sharedApplication] scheduleLocalNotification:notification];&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5、远程推送&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9770531400966184&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvavG0DSxsc5FX0j5x4DiaedflosIfpBZgh26icWOTUM8xenSzuCTmzc93wsaE1rEea8Jle61kC9ibZWTQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;828&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不同于本地消息推送不依赖网络请求，可以直接调用iOS系统方法，远程消息推送的实现涉及到用户设备、我们自己的业务方服务器和苹果的APNs服务的交互。不同于Android系统中远程消息推送的实现，需要App自身通过后台服务与业务服务器维持长链接通信，iOS中的消息推送是操作系统与苹果的APNs服务器直接交互实现的，App自身并不需要维持与服务器的连接。只要用户开启了推送权限，我们的业务服务器就可以随时通过调用APNs服务向用户推送通知，这样既能够为开发者和用户提供安全稳定的推送服务，也够节省系统资源消耗，提高系统流畅度和电池续航能力。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.527831094049904&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvavG0DSxsc5FX0j5x4Diaedfl7wJdk5CPK0cTbm1vvWW3BhMEDMMhyyhQhD9vibz9rIc99wMSYznSXOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2084&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;iOS客户端远程消息推送的实现可以分为以下几个流程：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;用户的iphone通过iOS的系统方法调用与苹果的APNs服务器通信，获取设备的deviceToken，它是由APNs服务分配的用于唯一标识不同设备上的不同App，可以认为是由deviceID、bundleId和安装时的相关信息生成的，App的升级操作deviceToken不变，卸载重装App、恢复和重装操作系统后的deviceToken会发生变化。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;苹果的APNs服务是基于deviceToken实现的，因此需要将设备的deviceToken发送到我们的业务服务器中，用于后续的消息推送。一个设备可能登录过多个用户，一个用户也可能在多个设备中登录过，当我们需要给不同用户推送不同的消息时，除了deviceToken之外，我们还需要保存用户的openid与deviceToken的映射关系。我们可以在用户登录成功后的时机更新openid和deviceToken的映射关系，用户退出后取消映射关系，只保存用户最后登录设备的deviceToken，避免一个设备收到多个重复通知和一个用户在不同设备收到多个通知等情况。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在新闻类App出现事实热点新闻时，后台服务就可以携带消息内容和deviceToken等内容，向苹果的APNs服务发起消息推送请求，推送消息的实现是异步的，只要请求格式和deviceToken检查通过APNs服务就不会报错，但是用户还是可能因为网络异常或者关闭了推送权限等原因收不到推送消息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;APNs服务向用户设备推送消息这一步也是异步的，在用户关机或网络异常收不到推送的情况下，APNs会为每个deviceToken保留最后一条推送消息，待网络恢复后再次推送。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5.1、获取设备deviceToken&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在App启动时，我们可以通过UIApplication的registerForRemoteNotifications方法向苹果的APNS服务器请求deviceToken，如果请求成功则didRegisterForRemoteNotificationsWithDeviceToken回调方法会被执行，为了便于业务服务器的调用，我们一般会将二进制的deviceToken转换为16进制的字符串后再进行存储；如果请求失败则didFailToRegisterForRemoteNotificationsWithError方法也会被调用，并附带具体的错误信息。相关代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;//调用系统方法请求deviceToken&lt;/span&gt;&lt;br/&gt;- (&lt;span&gt;BOOL&lt;/span&gt;)application:(&lt;span&gt;UIApplication&lt;/span&gt; *)application didFinishLaunchingWithOptions:(&lt;span&gt;NSDictionary&lt;/span&gt; *)launchOptions {&lt;br/&gt;    [[&lt;span&gt;UIApplication&lt;/span&gt; sharedApplication] registerForRemoteNotifications];&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;//deviceToken获取成功的回调&lt;/span&gt;&lt;br/&gt;- (&lt;span&gt;void&lt;/span&gt;)application:(&lt;span&gt;UIApplication&lt;/span&gt; *)application didRegisterForRemoteNotificationsWithDeviceToken:(&lt;span&gt;NSData&lt;/span&gt; *)deviceToken{&lt;br/&gt;    &lt;span&gt;NSString&lt;/span&gt; *deviceTokenStr;&lt;br/&gt;    &lt;span&gt;NSUInteger&lt;/span&gt; length = deviceToken.length;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (![deviceToken isKindOfClass:[&lt;span&gt;NSData&lt;/span&gt; &lt;span&gt;class&lt;/span&gt;]] || length == &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; &lt;span&gt;unsigned&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; *bytes = (&lt;span&gt;const&lt;/span&gt; &lt;span&gt;unsigned&lt;/span&gt; &lt;span&gt;char&lt;/span&gt; *)deviceToken.bytes;&lt;br/&gt;    &lt;span&gt;NSMutableString&lt;/span&gt; *hex = [&lt;span&gt;NSMutableString&lt;/span&gt; new];&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;NSInteger&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; deviceToken.length; i++) {&lt;br/&gt;        [hex appendFormat:&lt;span&gt;@&quot;%02x&quot;&lt;/span&gt;, bytes[i]];&lt;br/&gt;    }&lt;br/&gt;    deviceTokenStr = [hex &lt;span&gt;copy&lt;/span&gt;];&lt;br/&gt;    &lt;span&gt;NSLog&lt;/span&gt;(&lt;span&gt;@&quot;%@&quot;&lt;/span&gt;, deviceTokenStr);&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;//deviceToken获取失败的回调&lt;/span&gt;&lt;br/&gt;- (&lt;span&gt;void&lt;/span&gt;)application:(&lt;span&gt;UIApplication&lt;/span&gt; *)application didFailToRegisterForRemoteNotificationsWithError:(&lt;span&gt;NSError&lt;/span&gt; *)error{&lt;br/&gt;    &lt;span&gt;NSLog&lt;/span&gt;(&lt;span&gt;@&quot;error,%@&quot;&lt;/span&gt;,error);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5.2、后台调用APNs推送&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务方服务器调用APNs服务时首先要建立安全连接，进行开发者身份的认证，分为基于证书（Certificate-Based）和基于Token（Token-Based）的认证两种方式，比较常用的是基于证书的认证方式。推送证书分为开发环境和生产环境的证书，分别对应不同的APNs推送接口，我们从苹果开发者平台或者第三方平台导出的推送证书一般有p12和pem两种格式的文件，为了便于接口调用我们可以通过以下命令将p12格式的文件转换为pem证书。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;openssl pkcs12 -&lt;span&gt;in&lt;/span&gt; push_dev.p12 -&lt;span&gt;out&lt;/span&gt; push_dev.pem -nodes&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于证书建立TLS连接的流程如下图所示：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6738402678144428&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvavG0DSxsc5FX0j5x4DiaedflibBy1x6TW3d8z2dibuSJU6fIAY6WV4zcKORTjLeLOBwVrdWLErXZScOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2091&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;业务方服务器（Provider）向APNs服务器发起建立TLS连接的请求。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;APNs服务器返回的它的证书，供业务方服务器校验。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;业务方服务器提供自己的推送证书，供APNs服务器校验。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;APNs服务器验证业务方服务器提供的推送证书无误后，TLS连接就已经建立完成，之后业务方服务器就可以直接向APNs发送消息推送请求了。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务方与APNs建立请求的简易实现的PHP代码实现如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;$deviceToken= &lt;span&gt;&#x27;22124c450762170ca2ddb32a50381dd2c3026dbdb020f6dddcabefdca724fdd6&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;//dev params&lt;/span&gt;&lt;br/&gt;$devUrl = &lt;span&gt;&#x27;ssl://gateway.sandbox.push.apple.com:2195&#x27;&lt;/span&gt;;&lt;br/&gt;$devCertificate = &lt;span&gt;&#x27;push_dev.pem&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;//product params&lt;/span&gt;&lt;br/&gt;$proUrl = &lt;span&gt;&#x27;ssl://gateway.push.apple.com:2195&#x27;&lt;/span&gt;;&lt;br/&gt;$proCertificate = &lt;span&gt;&#x27;push_pro.pem&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;// Change 2 : If any&lt;/span&gt;&lt;br/&gt;$title = &lt;span&gt;&#x27;标题&#x27;&lt;/span&gt;;&lt;span&gt;//消息标题&lt;/span&gt;&lt;br/&gt;$content = &lt;span&gt;&#x27;消息内容&#x27;&lt;/span&gt;;&lt;span&gt;//内容&lt;/span&gt;&lt;br/&gt;$ctx = stream_context_create();&lt;br/&gt;&lt;span&gt;// Change 3 : APNS Cert File name and location.&lt;/span&gt;&lt;br/&gt;stream_context_set_option($ctx, &lt;span&gt;&#x27;ssl&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;local_cert&#x27;&lt;/span&gt;, $devCertificate);&lt;br/&gt;&lt;span&gt;// Open a connection to the APNS server&lt;/span&gt;&lt;br/&gt;$fp = stream_socket_client($devUrl, $err, $errstr, &lt;span&gt;60&lt;/span&gt;, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, $ctx);&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (!$fp)&lt;br/&gt;    &lt;span&gt;exit&lt;/span&gt;(&lt;span&gt;&quot;Failed to connect: $err $errstr&quot;&lt;/span&gt; . PHP_EOL);&lt;br/&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&#x27;Connected to APNS&#x27;&lt;/span&gt; . PHP_EOL;&lt;br/&gt;&lt;span&gt;// Create the payload body&lt;/span&gt;&lt;br/&gt;$body[&lt;span&gt;&#x27;aps&#x27;&lt;/span&gt;] = &lt;span&gt;array&lt;/span&gt;(&lt;br/&gt;    &lt;span&gt;&#x27;alert&#x27;&lt;/span&gt; =&amp;gt;&lt;span&gt;array&lt;/span&gt;(&lt;br/&gt;        &lt;span&gt;&#x27;title&#x27;&lt;/span&gt;=&amp;gt;$title,&lt;br/&gt;        &lt;span&gt;&#x27;body&#x27;&lt;/span&gt;=&amp;gt;$content&lt;br/&gt;    ),&lt;br/&gt;    &lt;span&gt;&#x27;sound&#x27;&lt;/span&gt; =&amp;gt; &lt;span&gt;&#x27;default&#x27;&lt;/span&gt;&lt;br/&gt;    );&lt;br/&gt;&lt;span&gt;//自定义内容&lt;/span&gt;&lt;br/&gt;$body[&lt;span&gt;&#x27;userInfo&#x27;&lt;/span&gt;] = &lt;span&gt;array&lt;/span&gt;(&lt;br/&gt;    &lt;span&gt;&#x27;url&#x27;&lt;/span&gt; =&amp;gt; &lt;span&gt;&#x27;https://www.qq.com&#x27;&lt;/span&gt;,&lt;br/&gt;);&lt;br/&gt;&lt;span&gt;// Encode the payload as JSON&lt;/span&gt;&lt;br/&gt;$payload = json_encode($body);&lt;br/&gt;&lt;span&gt;// Build the binary notification&lt;/span&gt;&lt;br/&gt;$msg = chr(&lt;span&gt;0&lt;/span&gt;) . pack(&lt;span&gt;&#x27;n&#x27;&lt;/span&gt;, &lt;span&gt;32&lt;/span&gt;) . pack(&lt;span&gt;&#x27;H*&#x27;&lt;/span&gt;, $deviceToken) . pack(&lt;span&gt;&#x27;n&#x27;&lt;/span&gt;, strlen($payload)) . $payload;&lt;br/&gt;&lt;span&gt;// Send it to the server&lt;/span&gt;&lt;br/&gt;$result = fwrite($fp, $msg, strlen($msg));&lt;br/&gt;&lt;span&gt;//发送多个就调用多次fwrite&lt;/span&gt;&lt;br/&gt;&lt;span&gt;//$result = fwrite($fp, $msg, strlen($msg));&lt;/span&gt;&lt;br/&gt;&lt;span&gt;echo&lt;/span&gt; $msg;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (!$result)&lt;br/&gt;    &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&#x27;Message not delivered&#x27;&lt;/span&gt; . PHP_EOL;&lt;br/&gt;&lt;span&gt;else&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&#x27;Message successfully delivered&#x27;&lt;/span&gt; . PHP_EOL;&lt;br/&gt;&lt;span&gt;// Close the connection to the server&lt;/span&gt;&lt;br/&gt;fclose($fp);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务方服务器通过证书与APNs建立安全连接后可以进行连续多次的消息推送操作，每次消息推送都要指定deviceToken和Payload参数。Payload是一个json对象，用于配置iOS在收到远程消息推送时的展现形式，aps参数包含了苹果预设的alert、sound、badge等参数，其中alert参数可以是字符串，或者包含title、body等参数的字典类型；badge参数使用整形设置App图标右上角显示的数字，badge设置为0时角标不会显示；sound参数用于设置推送的声音，不传该参数或者传递空字符串则推送不会发出提示音，设置为default时使用系统默认提示音，也可以设置为具体的音频文件名，需要提前音频文件放到项目的bundle目录，且时长不能超过30s。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了预设参数以外，我们还可以在aps的同级自定义一些参数，这些参数也可以是字典类型，再嵌套其他参数，例如示例代码中我们自定义的userInfo对象，但是一般推送消息的payload不宜过大，应控制在4K以内，建议只透传一些id和url等关键参数，具体的内容由客户端在收到推送时再去通过网络请求获取。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;    &lt;span&gt;&quot;aps&quot;&lt;/span&gt; : {&lt;br/&gt;        &lt;span&gt;&quot;alert&quot;&lt;/span&gt; : {&lt;br/&gt;            &lt;span&gt;&quot;title&quot;&lt;/span&gt; : &lt;span&gt;&quot;Game Request&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;subtitle&quot;&lt;/span&gt; : &lt;span&gt;&quot;Five Card Draw&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;body&quot;&lt;/span&gt; : &lt;span&gt;&quot;Bob wants to play poker&quot;&lt;/span&gt;,&lt;br/&gt;        },&lt;br/&gt;        &lt;span&gt;&quot;badge&quot;&lt;/span&gt; : &lt;span&gt;9&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;sound&quot;&lt;/span&gt; : &lt;span&gt;&quot;gameMusic.wav&quot;&lt;/span&gt;,&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&quot;gameID&quot;&lt;/span&gt; : &lt;span&gt;&quot;12345678&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上述payload包含了常见的推送消息的标题、副标题、内容、消息提示音、App的角标数字等预设参数，以及一个开发者自定义的gameID参数。用户点击推送消息后会自动启动或从后台唤醒App，我们可以在系统的回调方法中获取到自定义参数，并根据gameID自动为用户打开该游戏页面。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5.3、消息推送调试工具&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在进行APNs接口调试时，我们可以利用一些优秀的推送调试工具帮助我们验证payload或证书等内容的合法性。本文介绍两款比较流行的开源软件，分别是国外的Knuff和国内开发者维护的smartPush。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9854327335047129&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvavG0DSxsc5FX0j5x4Diaedfl4wMsXehKLMMzMiaM40bDvdqw6OlUNcEJwSDJydyk74iaaKHjzO6lYDlQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1167&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Knuff：https://github.com/KnuffApp/Knuff&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;SmartPush：https://github.com/shaojiankui/SmartPush&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6、App推送消息的处理&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在iOS10中，UserNotifications框架为开发者提供了UNUserNotificationCenterDelegate协议，开发者可以通过实现协议中的方法，在App接收到推送消息和用户点击推送消息时进行一些业务逻辑的处理。无论是本地推送还是远程推送的消息，App的运行状态都可能处于以下三种状态：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;App正在前台运行，此时用户正在使用App，收到推送消息时默认不会弹出消息提示框，willPresentNotification回调方法会被调用，开发者可以从UNNotification对象中获取该推送消息的payload内容，进而获取自定义参数，然后显示一个自定义弹窗提示用户收到了新的消息；也可以在willPresentNotification方法中通过completionHandler函数的调用让推送消息直接在前台显示，用户点击前台显示的推送消息时，didReceiveNotificationResponse回调方法也会被执行。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;App在后台运行，此时用户点击推送消息会将App从后台唤醒，didReceiveNotificationResponse回调方法会被执行，开发者可以在该方法中获得payload，解析自定义参数并自动打开对应的页面。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;App尚未启动，此时用户点击推送消息会打开App，开发者可以从launchOptions中获取本地或远程推送消息中的自定义参数，待页面初始化完成后进行相关页面的跳转。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;#import &lt;span&gt;&amp;lt;UserNotifications/UserNotifications.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;@interface&lt;/span&gt; &lt;span&gt;AppDelegate&lt;/span&gt; ()&amp;lt;&lt;span&gt;UNUserNotificationCenterDelegate&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@end&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;@implementation&lt;/span&gt; &lt;span&gt;AppDelegate&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;//在App启动后就将AppDelegate对象配置为NotificationCenter的delegate&lt;/span&gt;&lt;br/&gt;- (&lt;span&gt;BOOL&lt;/span&gt;)application:(&lt;span&gt;UIApplication&lt;/span&gt; *)application didFinishLaunchingWithOptions:(&lt;span&gt;NSDictionary&lt;/span&gt; *)launchOptions {&lt;br/&gt;    [UNUserNotificationCenter currentNotificationCenter].delegate = &lt;span&gt;self&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;// NSDictionary *localNotification = [launchOptions valueForKey:UIApplicationLaunchOptionsLocalNotificationKey];&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;NSDictionary&lt;/span&gt; *remoteNotification = [launchOptions valueForKey:&lt;span&gt;UIApplicationLaunchOptionsRemoteNotificationKey&lt;/span&gt;];&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(remoteNotification){&lt;br/&gt;        &lt;span&gt;//app已退出，点击拉起了app&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;NSDictionary&lt;/span&gt; *params = userInfo[&lt;span&gt;@&quot;userInfo&quot;&lt;/span&gt;];&lt;br/&gt;        &lt;span&gt;//此时NavigationController还未初始化，可以先暂存参数，稍后跳转&lt;/span&gt;&lt;br/&gt;        [PageSwitch handlePushSwitch:params];&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;//用户点击推送消息的回调&lt;/span&gt;&lt;br/&gt;- (&lt;span&gt;void&lt;/span&gt;)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(&lt;span&gt;void&lt;/span&gt; (^)(&lt;span&gt;void&lt;/span&gt;))completionHandler API_AVAILABLE(ios(&lt;span&gt;10.0&lt;/span&gt;)){&lt;br/&gt;    UNNotification *noti = ((UNNotificationResponse *)response).notification;&lt;br/&gt;    &lt;span&gt;NSDictionary&lt;/span&gt; *userInfo = noti.request.content.userInfo;&lt;br/&gt;    &lt;span&gt;NSDictionary&lt;/span&gt; *params = userInfo[&lt;span&gt;@&quot;userInfo&quot;&lt;/span&gt;];&lt;br/&gt;    &lt;span&gt;//根据消息推送中的参数，在用户点击推送时自动进行跳转&lt;/span&gt;&lt;br/&gt;    [PageSwitch handlePushSwitch:params];&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;//App在前台运行时收到推送消息的回调&lt;/span&gt;&lt;br/&gt;- (&lt;span&gt;void&lt;/span&gt;)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(&lt;span&gt;nonnull&lt;/span&gt; UNNotification *)notification withCompletionHandler:(&lt;span&gt;nonnull&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; (^)(UNNotificationPresentationOptions))completionHandler API_AVAILABLE(ios(&lt;span&gt;10.0&lt;/span&gt;)){&lt;br/&gt;    &lt;span&gt;//可以让App在前台运行时也能收到推送消息&lt;/span&gt;&lt;br/&gt;    completionHandler(UNNotificationPresentationOptionBadge|UNNotificationPresentationOptionAlert);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在iOS9中，UIApplication提供了下面三个消息推送的处理方法，分别是远程消息推送、远程静默推送和本地消息推送的回调处理方法。前两个回调方法都能够用于App远程消息推送的处理，同时使用时只有远程静默推送方法会被调用，当payload包含参数content-available=1时，该推送就是静默推送，静默推送不会显示任何推送消息，当App在后台挂起时，静默推送的回调方法会被执行，开发者有30s的时间内在该回调方法中处理一些业务逻辑，并在处理完成后调用fetchCompletionHandler。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;//远程消息推送回调方法，ios(3.0, 10.0)&lt;/span&gt;&lt;br/&gt;- (&lt;span&gt;void&lt;/span&gt;)application:(&lt;span&gt;UIApplication&lt;/span&gt; *)application didReceiveRemoteNotification:(&lt;span&gt;NSDictionary&lt;/span&gt; *)userInfo;&lt;br/&gt;&lt;span&gt;//远程静默推送回调方法，ios(7.0, *)&lt;/span&gt;&lt;br/&gt;- (&lt;span&gt;void&lt;/span&gt;)application:(&lt;span&gt;UIApplication&lt;/span&gt; *)application didReceiveRemoteNotification:(&lt;span&gt;NSDictionary&lt;/span&gt; *)userInfo &lt;br/&gt;    fetchCompletionHandler:(&lt;span&gt;void&lt;/span&gt; (^)(&lt;span&gt;UIBackgroundFetchResult&lt;/span&gt; result))completionHandler API_AVAILABLE(ios(&lt;span&gt;7.0&lt;/span&gt;));&lt;br/&gt;&lt;span&gt;//本地消息推送回调方法，ios(4.0, 10.0)&lt;/span&gt;&lt;br/&gt;-(&lt;span&gt;void&lt;/span&gt;)application:(&lt;span&gt;UIApplication&lt;/span&gt; *)application didReceiveLocalNotification:(&lt;span&gt;UILocalNotification&lt;/span&gt; *)notification;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;UIApplication中的这三个方法在：①App在前台运行时收到通知，②App在后台运行时用户点击推送消息拉起App，这两种场景下都会被调用，区别是前两种方法对应远程消息推送的接收和点击触发响应，didReceiveLocalNotification用于本地消息推送。我们可以通过UIApplication的applicationState属性来判断App是否在前台运行，然后分别实现：①用户点击消息唤起后台App并打开对应页面，②用户前台使用App时显示自定义弹窗。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;- (&lt;span&gt;void&lt;/span&gt;)application:(&lt;span&gt;UIApplication&lt;/span&gt; *)application didReceiveRemoteNotification:(&lt;span&gt;NSDictionary&lt;/span&gt; *)userInfo{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;([&lt;span&gt;UIApplication&lt;/span&gt; sharedApplication].applicationState == &lt;span&gt;UIApplicationStateActive&lt;/span&gt;){&lt;br/&gt;        &lt;span&gt;NSLog&lt;/span&gt;(&lt;span&gt;@&quot;在前台,%@&quot;&lt;/span&gt;,userInfo);&lt;br/&gt;    }&lt;span&gt;else&lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;NSLog&lt;/span&gt;(&lt;span&gt;@&quot;从后台进入前台，%@&quot;&lt;/span&gt;,userInfo);&lt;br/&gt;        &lt;span&gt;NSDictionary&lt;/span&gt; *params = userInfo[&lt;span&gt;@&quot;userInfo&quot;&lt;/span&gt;];&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt;([Tools isValidString:params[&lt;span&gt;@&quot;url&quot;&lt;/span&gt;]]){&lt;br/&gt;            &lt;span&gt;NSString&lt;/span&gt; *routeUrl = params[&lt;span&gt;@&quot;url&quot;&lt;/span&gt;];&lt;br/&gt;            [PageSwitch handlePushSwitch:params];&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7、总结&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文首先介绍了消息推送相关的工程配置和推送权限的申请，然后分别介绍了本地和远程消息推送的不同使用场景和实现方法，最后介绍了App在收到推送消息后的相关回调方法和处理逻辑。在实际的项目开发中，我们往往会选择腾讯云推送或极光推送等更加成熟的第三方消息推送平台，这些平台都提供了相对完善的推送和数据统计服务，通过接口和SDK屏蔽了底层逻辑的实现，通过对iOS消息推送的实现过程的了解也能够帮助我们更好的使用这些平台。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于时间的关系，自己的研究并不深入，如有疏漏和错误，欢迎留言指正交流～&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;8、扩展阅读&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;苹果官方技术文档，&lt;/span&gt;&lt;a href=&quot;https://developer.apple.com/documentation/usernotifications?language=objc&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;https://developer.apple.com/documentation/usernotifications&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;史上最全iOS Push技术详解，https://cloud.tencent.com/developer/article/1198303&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;iOS远程推送-APNs详解，https://juejin.im/post/6844903893592178696&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;iOS静默推送进阶知识，https://www.jianshu.com/p/c211bd295d58&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;iOS10自定义通知UI，https://www.jianshu.com/p/85ac47bdf387&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;信鸽文档-推送服务介绍，https://xg.qq.com/docs/ios_access/ios_push_introduction.html&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;浅谈iOS和Android后台实时消息推送的原理和区别，https://cloud.tencent.com/developer/article/1150967&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;浅谈基于HTTP2推送消息到APNs，http://www.linkedkeeper.com/167.html&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;PHP基于socket的ios 推送的实现，https://www.fzb.me/2015-9-7-sockect-implement-for-apns.html&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如何构建一套高可用的移动消息推送平台？，https://www.infoq.cn/article/HA-mobile-message-push-platform&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.729264475743349&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/j3gficicyOvatricjRxhpM1x45aB6doaVg7WMhINPwOiaqpskia1kH7hgibO0dicW2HLcW8HRGMzESQwehIcyckLXtwsA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;639&quot;/&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>704fcb9bf62e5b06b4bb481d88915111</guid>
<title>《我想进大厂》之 JVM 夺命连环 10 问</title>
<link>https://toutiao.io/k/swi8lo6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;span&gt;（给&lt;/span&gt;&lt;span&gt;ImportNew&lt;/span&gt;&lt;span&gt;加星标，提高Java技能）&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;作者： 科技缪缪（本文来自作者投稿）&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 说说 JVM 的内存布局？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.37890625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwFGhp07TlUR0uvZJhntKSlaX1kzmfeFkqNiaDiar0WVkM9WqfBbh6BW3EmEgTCVCW4XbhYQGBzhSXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Java 虚拟机主要包含几个区域：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;堆&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：堆是 Java 虚拟机中最大的一块内存，是线程共享的内存区域，基本上所有的对象实例数组都是在堆上分配空间。堆区细分为 Young&lt;/span&gt;&lt;span&gt; 区年轻代和 Old 区老年代，其中年轻代又分为 Eden、S0、S1 3个部分，他们默认的比例是 8:1:1 的大小。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;栈&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：栈是线程私有的内存区域，每个方法执行的时候都会在栈创建一个栈帧，方法的调用过程就对应着栈的入栈和出栈的过程。每个栈帧的结构又包含局部变量表、操作数栈、动态连接、方法返回地址。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;局部变量表用于存储方法参数和局部变量。当第一个方法被调用的时候，它的参数会被传递至从0开始的连续的局部变量表中。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;操作数栈用于一些字节码指令从局部变量表中传递至操作数栈，也用来准备方法调用的参数以及接收方法返回结果。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;动态连接用于将符号引用表示的方法转换为实际方法的直接引用。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;元数据&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：在 Java1.7 之前，包含方法区的概念，常量池就存在于方法区（永久代）中，而方法区本身是一个逻辑上的概念，在1.7之后则是把常量池移到了堆内，1.8之后移出了永久代的概念(方法区的概念仍然保留)，实现方式则是现在的元数据。它包含类的元信息和运行时常量池。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;class 文件就是类和接口的定义信息。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;运行时常量池就是类和接口的常量池运行时的表现形式。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;本地方法栈&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：主要用于执行本地 native 方法的区域。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;程序计数器&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：也是线程私有的区域，用于记录当前线程下虚拟机正在执行的字节码的指令地址。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 知道 new 一个对象的过程吗？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.40390625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwFGhp07TlUR0uvZJhntKSlOvda0KYHkCicWv9Libm8FpZgRKScK30oQxYPNIOsfMgjEvMmq8Isb6Rg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当虚拟机遇见 &lt;strong&gt;new &lt;/strong&gt;关键字时候，实现判断当前类是否已经加载。如果类没有加载，首先执行类的加载机制，加载完成后再为对象分配空间、初始化等。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;首先&lt;strong&gt;校验当前类是否被加载&lt;/strong&gt;，如果没有加载，执行类加载机制；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;加载&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：就是从字节码加载成二进制流的过程；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;验证&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：当然加载完成之后，当然需要校验 class 文件是否符合虚拟机规范，跟我们接口请求一样，第一件事情当然是先做个参数校验了；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;准备&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：为静态变量、常量赋默认值；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;解析&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：把常量池中符号引用(以符号描述引用的目标)替换为直接引用(指向目标的指针或者句柄等)的过程；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;初始化&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：执行 static 代码块 (cinit) 进行初始化，如果存在父类，先对父类进行初始化。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;注意&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：静态代码块是绝对线程安全的，只能隐式被 Java 虚拟机在类加载过程中初始化调用！(此处该有问题：&lt;strong&gt;static 代码块线程安全吗？&lt;/strong&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当类加载完成之后，紧接着就是对象分配内存空间和初始化的过程：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;首先为对象分配合适大小的内存空间；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;接着为实例变量赋默认值；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;设置对象的头信息，对象 hashcode、GC 分代年龄、元数据信息等；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;执行构造函数 (init) 初始化。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3. 知道双亲委派模型吗？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;类加载器自顶向下分为：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Bootstrap ClassLoader&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;（启动类加载器）：默认会去加载 JAVA_HOME/lib 目录下的 jar；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Extention ClassLoader&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;（扩展类加载器）：默认去加载 JAVA_HOME/lib/ext 目录下的 jar；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Application ClassLoader&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;（应用程序类加载器）：比如我们的 Web 应用，会加载 Web 程序中 ClassPath 下的类；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;User ClassLoader&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;（用户自定义类加载器）：由用户自己定义。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当我们在加载类的时候，首先都会向上询问自己的父加载器是否已经加载。如果没有则依次向上询问；如果没有加载，则从上到下依次尝试是否能加载当前类，直到加载成功。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.64609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwFGhp07TlUR0uvZJhntKSlZKccYiccqpOGYdIUwltUNPmmyib6Gz2W6IWH6FCIIxojeQpyjXpw6T5g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;4. 说说有哪些垃圾回收算法？&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;标记-清除&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;统一标记出需要回收的对象，标记完成之后统一回收所有被标记的对象。而由于标记的过程需要遍历所有的 GC ROOT，清除的过程也要遍历堆中所有的对象，所以标记-清除算法的效率低下，同时也带来了内存碎片的问题。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;复制算法&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;为了解决性能的问题，复制算法应运而生。它将内存分为大小相等的两块区域，每次使用其中的一块。当一块内存使用完之后，将还存活的对象拷贝到另外一块内存区域中，然后把当前内存清空。这样性能和内存碎片的问题得以解决。但是同时带来了另外一个问题，可使用的内存空间缩小了一半！&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;因此，诞生了我们现在的常见的&lt;strong&gt;年轻代+老年代&lt;/strong&gt;的内存结构：Eden+S0+S1 组成。因为根据 IBM 的研究显示，98%的对象都是朝生夕死，所以实际上存活的对象并不是很多，完全不需要用到一半内存浪费，所以默认的比例是 8:1:1。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这样，在使用的时候只使用 Eden 区和 S0、S1 中的一个，每次都把存活的对象拷贝另外一个未使用的 Survivor 区，同时清空 Eden 和使用的 Survivor，这样下来内存的浪费就只有10%了。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果最后未使用的 Survivor 放不下存活的对象，这些对象就进入 Old 老年代了。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;注意&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：所以有一些初级点的问题会问你，为什么要分为 Eden 区和2个 Survior 区？有什么作用？就是为了节省内存和解决内存碎片的问题。这些算法都是为了解决问题而产生的，如果理解原因你就不需要死记硬背了。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;标记-整理&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;针对老年代再用复制算法显然不合适，因为进入老年代的对象都存活率比较高了，这时候再频繁的复制对性能影响就比较大，而且也不会再有另外的空间进行兜底。所以针对老年代的特点，通过&lt;strong&gt;标记-整理&lt;/strong&gt;算法，标记出所有的存活对象，让所有存活的对象都向一端移动，然后清理掉边界以外的内存空间。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;5. 什么是 GC ROOT？有哪些 GC ROOT？&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;上面提到的标记的算法，怎么标记一个对象是否存活？简单的通过引用计数法，给对象设置一个引用计数器，每当有一个地方引用他，就给计数器+1，反之则计数器-1，但是这个简单的算法&lt;strong&gt;无法解决循环引用的问题&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Java 通过可达性分析算法来达到标记存活对象的目的，定义一系列的 GC ROOT 为起点。从起点开始向下开始搜索，搜索走过的路径称为引用链。当一个对象到 GC ROOT没有任何引用链相连的话，则对象可以判定是可以被回收的。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;而可以作为 GC ROOT 的对象包括：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;栈中引用的对象；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;静态变量、常量引用的对象；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;本地方法栈 native 方法引用的对象。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;6. 垃圾回收器了解吗？年轻代和老年代都有哪些垃圾回收器？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.41953125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwFGhp07TlUR0uvZJhntKSlS2swjribk4EibNmDPwGf1o5gqeRbkSdEKic67pibPqMEDGPf857pP2G1YA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;年轻代的垃圾收集器包含有 Serial、ParNew、Parallell。老年代则包括 Serial Old 老年代版本、CMS、Parallel Old 老年代版本和 JDK11 中全新的 G1 收集器。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;Serial&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：单线程版本收集器，进行垃圾回收的时候会 STW（Stop The World），也就是进行垃圾回收的时候其他的工作线程都必须暂停。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;ParNew&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：Serial 的多线程版本，用于和 CMS 配合使用。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;Parallel Scavenge&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：可以并行收集的多线程垃圾收集器。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;Serial Old&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：Serial 的老年代版本，也是单线程。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;Parallel Old&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：Parallel Scavenge 的老年代版本。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;CMS（Concurrent Mark Sweep）&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：CMS 收集器是以获取最短停顿时间为目标的收集器。相对于其他的收集器 STW 的时间更短暂，可以并行收集是它的特点，同时它基于&lt;strong&gt;标记-清除&lt;/strong&gt;算法。整个 GC 过程分为4步：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;初始标记&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：标记 GC ROOT 能关联到的对象，需要 STW；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;并发标记&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：从 GCRoots 的直接关联对象开始遍历整个对象图的过程，不需要 STW；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;重新标记&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：为了修正并发标记期间，因用户程序继续运作而导致标记产生改变的标记，需要 STW；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;并发清除&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：清理删除掉标记阶段判断的已经死亡的对象，不需要 STW。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;从整个过程来看，并发标记和并发清除的耗时最长，但是不需要停止用户线程。而初始标记和重新标记的耗时较短，但是需要停止用户线程。总体而言，整个过程造成的停顿时间较短，大部分时候是可以和用户线程一起工作的。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;G1（Garbage First）&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：G1 收集器是 JDK9 的默认垃圾收集器，不再区分年轻代和老年代进行回收。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;7. G1的原理了解吗？&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.54453125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwFGhp07TlUR0uvZJhntKSlclwUSgRl1TKmdLvuBoicahRpa48GWyMADXRrVQhAiaryF7LPkLCC1TeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;G1 作为 JDK9 之后的服务端默认收集器，不再区分年轻代和老年代进行垃圾回收。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;把内存划分为多个 Region，每个 Region 的大小可以通过 &lt;strong&gt;-XX：G1HeapRegionSize&lt;/strong&gt; 设置，大小为1~32M。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对于大对象的存储则衍生出 &lt;strong&gt;Humongous &lt;/strong&gt;的概念。超过 Region 大小一半的对象会被认为是大对象，而超过整个 Region 大小的对象被认为是超级大对象，将会被存储在连续的 N 个 Humongous Region 中。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;G1 在进行回收的时候会在后台维护一个优先级列表，每次根据用户设定允许的收集停顿时间优先回收收益最大的 Region。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;G1 的回收过程分为以下四个步骤：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;初始标记&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：标记 GC ROOT 能关联到的对象，需要 STW；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;并发标记&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：从 GCRoots 的直接关联对象开始遍历整个对象图的过程，扫描完成后还会重新处理并发标记过程中产生变动的对象；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;最终标记&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：短暂暂停用户线程，再处理一次，需要 STW；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;筛选回收&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：更新 Region 的统计数据，对每个 Region 的回收价值和成本排序，根据用户设置的停顿时间制定回收计划。再把需要回收的 Region 中存活对象复制到空的 Region，同时清理旧的 Region。需要 STW。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;总的来说除了并发标记之外，其他几个过程也还是需要短暂的 STW。G1 的目标是在停顿和延迟可控的情况下尽可能提高吞吐量。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;8. 什么时候会触发 YGC 和 FGC？对象什么时候会进入老年代？&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当一个新的对象来申请内存空间的时候，如果 Eden 区无法满足内存分配需求，则触发 YGC。使用中的 Survivor 区和 Eden 区存活对象送到未使用的 Survivor 区。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果 YGC 之后还是没有足够空间，则直接进入老年代分配。如果老年代也无法分配空间，触发 FGC，FGC 之后还是放不下则报出 OOM 异常。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.03125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwFGhp07TlUR0uvZJhntKSlDlicFGn9Z2ic9ABVnrxWE9qzl4p4QOrbWyeZ1nEYqxGibianVicET1BqnLA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;YGC 之后，存活的对象将会被复制到未使用的 Survivor 区。如果 S 区放不下，则直接晋升至老年代。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;而对于那些一直在 Survivor 区来回复制的对象，通过 &lt;strong&gt;-XX：MaxTenuringThreshold&lt;/strong&gt; 配置交换阈值，默认15次。如果超过次数同样进入老年代。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;此外，还有一种动态年龄的判断机制，不需要等到 MaxTenuringThreshold 就能晋升老年代。如果在 Survivor 空间中相同年龄所有对象大小的总和大于 Survivor 空间的一半，年龄大于或等于该年龄的对象就可以直接进入老年代。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;9. 频繁 FullGC 怎么排查？&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这种问题最好的办法就是结合有具体的例子举例分析，如果没有就说一般的分析步骤。发生 FGC 有可能是内存分配不合理，比如 Eden 区太小，导致对象频繁进入老年代，这时候通过启动参数配置就能看出来，另外有可能就是存在内存泄露，可以通过以下的步骤进行排查：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;1. &lt;strong&gt;jstat -gcutil&lt;/strong&gt; 或者查看 gc.log 日志，查看内存回收情况。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.35078125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwFGhp07TlUR0uvZJhntKSlNzhFQZlnLpOEIWkoPIgE4pPQYFcZ8OVdAu4ibOBtawqVJOaLficd7icXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;S0、S1 分别代表两个 Survivor 区占比；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;E 代表 Eden 区占比，图中可以看到使用了78%；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;O 代表老年代，M 代表元空间，YGC 发生54次，YGCT 代表 YGC 累计耗时，GCT 代表 GC 累计耗时。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.196875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwFGhp07TlUR0uvZJhntKSllkLHHPvwzafVdDDsvk6lPxdJPUQ5M2uV0Cch5HD8LfnjWrjBGPJj0g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;[GC&lt;/span&gt;&lt;span&gt; 或 &lt;/span&gt;&lt;span&gt;[FGC&lt;/span&gt;&lt;span&gt; 开头代表垃圾回收的类型；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;PSYoungGen: 6130K-&amp;gt;6130K(9216K)] 12274K-&amp;gt;14330K(19456K), 0.0034895 secs&lt;/span&gt;&lt;span&gt; 代表 YGC 前后内存使用情况；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Times: user=0.02 sys=0.00, real=0.00 secs&lt;/span&gt;&lt;span&gt;：user 表示用户态消耗的 CPU 时间，sys 表示内核态消耗的 CPU 时间，real 表示各种墙时钟的等待时间；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这两张图只是举例并没有关联关系。比如你从图里面看能到是否进行 FGC、FGC 的时间花费多长；GC 后老年代，年轻代内存是否有减少；得到一些初步的情况来做出判断。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. dump 出内存文件在具体分析。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如通过 jmap 命令 &lt;strong&gt;jmap -dump:format=b,file=dumpfile pid&lt;/strong&gt;。&lt;/span&gt;&lt;span&gt;导出之后再&lt;/span&gt;&lt;span&gt;通过 &lt;/span&gt;&lt;span&gt;Eclipse Memory Analyze&lt;/span&gt;&lt;span&gt;r &lt;/span&gt;&lt;span&gt;等工具进行分析，定位到代码、&lt;/span&gt;&lt;span&gt;修复。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这里还会可能存在一个提问的点，比如 &lt;strong&gt;CPU 飙高，同时 FGC 怎么办&lt;/strong&gt;？办法比较类似：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;找到当前进程的 pid，&lt;strong&gt;top -p pid -H&lt;/strong&gt; 查看资源占用，找到问题线程；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;printf “%x\n” pid&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，把线程 pid 转为16进制，比如 0x32d；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;jstack pid|grep -A 10 0x32d &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;查看线程的堆栈日志，还找不到问题继续下一步；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;dump 出内存文件用 MAT 等工具进行分析，定位到代码、修复。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;10. JVM调优有什么经验吗？&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;要明白一点，所有的调优的目的都是为了用更小的硬件成本达到更高的吞吐，JVM 的调优也是一样。通过对垃圾收集器和内存分配的调优达到性能的最佳。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;简单的参数含义&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;首先，需要知道几个主要的参数含义。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eZzl4LXykQwFGhp07TlUR0uvZJhntKSlLWMnkcBxCTMcdsOu97iaiaSbOv87f3heq6PbIWTnZOtQIaEy96HZxj8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;-Xms&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 设置初始堆的大小，&lt;strong&gt;-Xmx &lt;/strong&gt;设置最大堆的大小；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;-XX:NewSize&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 年轻代大小，&lt;strong&gt;-XX:MaxNewSize&lt;/strong&gt; 年轻代最大值，&lt;strong&gt;-Xmn&lt;/strong&gt; 则是相当于同时配置 -XX:NewSize 和 -XX:MaxNewSize 为一样的值；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;-XX:NewRatio&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 设置年轻代和年老代的比值。如果为3，表示年轻代与老年代比值为 1:3，默认值为2；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;-XX:SurvivorRatio&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 年轻代和两个 Survivor 的比值。默认值为8，代表比值为 8:1:1；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;-XX:PretenureSizeThreshold&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 当创建的对象超过指定大小时，直接把对象分配在老年代；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;-XX:MaxTenuringThreshold&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 设定对象在 Survivor 复制的最大年龄阈值，超过阈值转移到老年代；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;-XX:MaxDirectMemorySize&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 当 Direct ByteBuffer 分配的堆外内存到达指定大小后，即触发 Full GC。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;调优&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;为了打印日志方便排查问题最好开启GC日志。开启GC日志对性能影响微乎其微，但是能帮助我们快速排查定位问题。&lt;strong&gt;-XX:+PrintGCTimeStamps -XX:+PrintGCDetails -Xloggc:gc.log&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一般设置 &lt;strong&gt;-Xms=-Xmx&lt;/strong&gt;。这样可以获得固定大小的堆内存，减少 GC 次数和耗时，可以使得堆相对稳定；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 让 JVM 在发生内存溢出的时候自动生成内存快照，方便排查问题；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;-Xmn&lt;/strong&gt; 设置新生代的大小。太小会增加 YGC，太大会减小老年代大小，一般设置为&lt;strong&gt;整个堆的1/4到1/3&lt;/strong&gt;；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;设置 &lt;strong&gt;-XX:+DisableExplicitGC &lt;/strong&gt;禁止系统 System.gc()。防止手动误触发 FGC 造成问题。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;section donone=&quot;shifuMouseDownCard(&#x27;shifu_c_030&#x27;)&quot; label=&quot;Copyright Reserved by PLAYHUDONG.&quot;&gt;&lt;section&gt;&lt;span&gt;推荐阅读&lt;/span&gt;  &lt;span&gt;点击标题可跳转&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;amp;mid=2651482823&amp;amp;idx=1&amp;amp;sn=cd623fbfa900f1217b34d34f980b2e82&amp;amp;chksm=bd2506b88a528faea643840bb2613ae67252085c24faaba2359006cc37335dc4fe042f1ca66d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;关于 JVM 内存的 N 个问题&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;amp;mid=2651488039&amp;amp;idx=1&amp;amp;sn=b812f2bd8b3e0e7edfdb2bb6c050894e&amp;amp;chksm=bd2513588a529a4e02c41f59fa78adc2c064b48b112a5120d53687b8ee84aff87524acecb479&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;JVM 史上最最最完整深入解析&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;amp;mid=2651486318&amp;amp;idx=1&amp;amp;sn=a0bf7b6896cc30cff1581243193200fc&amp;amp;chksm=bd2514118a529d0769979c50eaac2c8b5fef25cb8fdf550d9e24534d211700d0bd6befae2b64&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Spring Boot项目优化和JVM调优&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看完本文有收获？请转发分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关注「ImportNew」，提升Java技能&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.9166666666666666&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;600&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;好文章，我&lt;/span&gt;&lt;span&gt;在看&lt;/span&gt;&lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>