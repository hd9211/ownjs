<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>cc84ebea0880588bb23d2282ff263f80</guid>
<title>Chrome DevTools：使用 CSS 概述面板重构和改善 CSS</title>
<link>https://toutiao.io/k/mqrzmkb</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6046875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0APKjTKulhWZ4c97ssP1iaIa16EiaE0zfjEwHur8IFmv9bPrjALgu15DIM2uWZrHGt6ibxia8Nh5pFDkog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;CSS概览面板（&lt;strong&gt;CSS Overview Panel&lt;/strong&gt;）提供了关于你的CSS的有趣信息。你可以查看高级别的CSS指标，这些指标在重构时特别有用。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;如何使用此功能&lt;/h2&gt;&lt;section&gt;&lt;span&gt;启用此功能：&lt;/span&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;从“DevTools实验（&lt;strong&gt;Experiments pane&lt;/strong&gt;）”窗格中启用&lt;strong&gt;CSS Overview&lt;/strong&gt;（Cmd + Shift + P&amp;gt;Show Experiments）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;从“DevTools”&lt;strong&gt;Command Menu&lt;/strong&gt;中选择“&lt;strong&gt;Show CSS Overview&lt;/strong&gt;”（Cmd + Shift + P）&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;span&gt;在CSS Overview面板中，您可以导航到不同的部分：&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;概述摘要（Overview Summary）&lt;/strong&gt;-CSS上有趣的指标，例如元素数量，样式表，类vs ID选择器，复杂选择器等等。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;颜色（Colors）&lt;/strong&gt;-可视化预览背景色、文字色、填充色和边框色。颜色本身是可以点击的，所以你可以准确地查看哪些元素使用了这些颜色。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;字体信息（Font info）&lt;/strong&gt; -衡量字体的使用情况以及它们在样式表中出现的频率。包括字体重量和行高指标。可以选择字体指标来显示受影响的元素。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;未使用的声明（Unused declarations）&lt;/strong&gt;-未使用的CSS声明，可以照常单击。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;媒体查询（Media queries）&lt;/strong&gt;-CSS媒体查询的细节（如最小/最大宽度值）以及它们在样式表中出现的频率。你可以点击这些来直接跳到源面板。如果你启用了源映射，你将能够看到原始样式，例如Sass。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6046875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0APKjTKulhWZ4c97ssP1iaIa1llyvX3CQZLib40Ccibzv24pJJLPvPqRicMIcGYGDBYme2y7ukWOsyewBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;何时使用此功能&lt;/h2&gt;&lt;section&gt;&lt;span&gt;当&lt;strong&gt;重构&lt;/strong&gt;你的代码，或规范各页面的品牌风格时，请使用此功能。例如，如果你注意到一种『颜色』的轻微变化散布在你的CSS中，概览面板中的这个&lt;strong&gt;颜色面板（Colors pane）&lt;/strong&gt;是识别这种东西的好地方。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;您还可以使用CSS概览面板中的媒体查询面板来检查您是否针对预期的媒体查询断点集，并确保您的页面在各种屏幕尺寸上看起来都很好。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;未使用的声明&lt;/strong&gt;面板可能会通过告知您可以删除哪些CSS来帮助改善网络和渲染&lt;strong&gt;性能&lt;/strong&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;最后，你可以使用CSS概览面板向你的前端团队的其他成员，特别是新入职者传达CSS代码的状态信息，包括可能需要重点关注的领域。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;CSS概览面板可以提供关于CSS的有价值的指标，而Lighthouse面板则提供整个网站的指标，包括JavaScript。&lt;/span&gt;&lt;/section&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;粉丝福利&lt;/h4&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;140期留言+在看幸运用户：暂无&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;临走前留下，&lt;span&gt;今天的福利&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;福利1：&lt;/span&gt;&lt;span&gt;&lt;span&gt;《JavaScript高级与设计模式》视频教程 &lt;/span&gt;&lt;span&gt;获取资源请在公众号对话框中回复关键字：&lt;/span&gt;&lt;span&gt;042，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;如果没有关注请扫下面的二维码&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;福利2：&lt;/span&gt;&lt;span&gt;在看+留言&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;我随机抽取一位认真留言的小伙伴，给他发一个5~10不等的红包奖励&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;最近文章&lt;/h4&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;- END -&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;点赞 + 在看 + 留言，下一个幸运儿就是你！&lt;br/&gt;走心的分享更容易被抽中~&lt;/span&gt;&lt;br/&gt;&lt;span&gt;开奖时间 下期文末&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5555555555555556&quot; data-type=&quot;png&quot; data-w=&quot;900&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0APOE4dXIpvXLgmGfqHMfYFFGudrHkx4trR7YbXKKmNCd3fJRlY56qIUibCibq00k2kky5DdPxrJCyWA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-type=&quot;gif&quot; data-ratio=&quot;0.1732283464566929&quot; data-w=&quot;635&quot; class=&quot;__bg_gif&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/aVp1YC8UV0fXSy8oK0h6qL36nlWgib6lHDTj0Ykkiab2FufBJIumwMrDEBZ1wHteh6pzsQiaP4007ox4ichic8pNw3Q/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>04464901717dcce2c4ac51c773630c90</guid>
<title>性能提高 15 倍！只是把 MySQL 换成了 ClickHouse</title>
<link>https://toutiao.io/k/221a7sh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;简介&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们需要存储结构化时序数据，时间间隔为5分钟或1分钟，计算&lt;code&gt;95峰值&lt;/code&gt;、&lt;code&gt;995峰值&lt;/code&gt;、&lt;code&gt;最值&lt;/code&gt;等指标，并且在网页中展示。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;MySQL&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目开发初期，为了快速开发原型，验证产品，我们使用MySQL作为整个项目的存储。带来的问题是时序数据库范围分析查询耗时很长，计算30天的数据需要30s+，到了无法容忍的地步，即便是创建索引、使用BitInt存储时间戳，几乎没有性能提升。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后来我们组其他同事说换ClickHouse来存储时序数据，于是我们就开始了替换之旅。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;ClickHouse&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ClickHouse是面向OLAP（在线分析处理）、兼容SQL标准的列式数据库，主要的不足是&lt;code&gt;不支持事务&lt;/code&gt;。因此我们目前没有把整个存储都迁移到ClickHouse上，而是只把时序数据存过来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本以为替换过程会很麻烦，可能修改大量的代码和逻辑，实际上很快，因为之前接口的逻辑设计很合理，所以只替换了数据库ORM库，从gorm换成了sqlx，花了1天时间(&lt;code&gt;前期重构逻辑花了1个星期我会乱说&lt;/code&gt;)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更重要的是，ClickHouse提供了很多聚合函数，之前计算95值需要2次查询，而现在只需要一次查询就够了，对应的SQL如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; d.en_name, &lt;span&gt;max&lt;/span&gt;(d.in_value) &lt;span&gt;as&lt;/span&gt; peak_in,&lt;br/&gt;    &lt;span&gt;max&lt;/span&gt;(d.out_value) &lt;span&gt;as&lt;/span&gt; peak_out, &lt;span&gt;max&lt;/span&gt;(d.max_value) &lt;span&gt;as&lt;/span&gt; peak_max,&lt;br/&gt;    quantileExact(&lt;span&gt;0.95&lt;/span&gt;)(d.out_value) &lt;span&gt;as&lt;/span&gt; peak_95,&lt;br/&gt;    quantileExact(&lt;span&gt;0.995&lt;/span&gt;)(d.out_value) &lt;span&gt;as&lt;/span&gt; peak_995,&lt;br/&gt;    quantileExact(&lt;span&gt;0.999&lt;/span&gt;)(d.out_value) &lt;span&gt;as&lt;/span&gt; peak_999&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; table_value d &lt;span&gt;where&lt;/span&gt; d.record_time &amp;gt;= &lt;span&gt;&#x27;2020-01-01 00:00:00&#x27;&lt;/span&gt; &lt;span&gt;and&lt;/span&gt; d.record_time &amp;lt;= &lt;span&gt;&#x27;2020-01-31 23:59:59&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;group&lt;/span&gt; &lt;span&gt;by&lt;/span&gt; d.en_name&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经验证，ClickHouse是真的牛逼，&lt;strong&gt;30天内的查询耗时从30s降到2s内，提升了15倍！！！&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图是ClickHouse的测试结果，x轴表示查询的时间范围，最大12个月，最小1个月，共测试12次。&lt;strong&gt;可以看到大部分耗时在3s内&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib3G4kbB3s93Zic7yYTPq5Zz2tLx7LkVBnyUh4QKWhog2eV0hpvpE1UnZ4ekY8xAA7ZaAQQaeEkALc6v3S826CuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图是MySQL存储中的测试结果（忽略标题），分别计算1、2、3个月范围的数据，共查询1次，耗时都在100s以上。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ib3G4kbB3s93Zic7yYTPq5Zz2tLx7LkVBnIrl5mVc5zZrIgWh86vkQMH6oLhwHOBj8d2ibQWpddI7QZt0H6yYASGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ClickHouse之所以快主要是采用&lt;strong&gt;列式存储&lt;/strong&gt;和&lt;strong&gt;数据压缩&lt;/strong&gt;，减少了&lt;strong&gt;数据扫描范围&lt;/strong&gt;和&lt;strong&gt;数据传输大小&lt;/strong&gt;；其次，利用CPU的SIMD(Single Instruction Multiple Data)技术实现向量化执行引擎，可以通过一条CPU指令对一组数据执行相同的操作，实现空间上的并行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要说明的是，MySQL和ClickHouse各有优劣，要针对自己的业务需求、场景选择合适的数据库。本文涉及的业务比较适用于ClickHouse的强项，才会比MySQL快15倍。&lt;/p&gt;&lt;section&gt;&lt;mpcps frameborder=&quot;0&quot; class=&quot;js_editor_cps&quot; data-datakey=&quot;1607824839573_0.7663749515124103&quot; data-uid=&quot;1607824839571&quot; data-type=&quot;1&quot; data-product=&quot;&quot; data-templateid=&quot;list&quot; data-pid=&quot;12886370&quot; data-categoryid=&quot;3&quot; data-appuin=&quot;3208869061&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;&gt;Stay foolish Stay hungry&lt;/p&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b8e96d3171001842c154e1f265b6c1b9</guid>
<title>架构设计：服务自动化部署和管理流程</title>
<link>https://toutiao.io/k/vggjh71</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;h1&gt;&lt;span&gt;一、分布式服务&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;从常规分布式架构系统来说，划分出十来个独立的微服务模块是很常见的，然后不同的开发人员分工几个服务块，负责日常开发和维护，微服务之间会出现版本差异也是自然的。例如用户服务需要开发版本为7.0，其他服务可能高于这个版本或者低于这个版本，所以对服务发布这块做持续集成就很有必要。&lt;/p&gt;&lt;p&gt;现在比较通用的服务自动发布和管理的技术栈：Jenkins持续集成工具、Docker容器、K8S容器管理。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;二、Jenkins集成&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;Jenkins可以很方便的整合常用的代码仓库，例如：GitHub、SVN等，提供持续集成能力，可以把整个代码构建打包，部署做成自动管理流程，代码一经提交就会自动发布到指定环境下，极大减少非必要的工作量。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5674676524953789&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvDYVrLL1CpSefDF5HpkA6nNGuZ5lpggjR6U6XIca5KUrhvibicPMWUne5sxCGDMhAOXAroibZPwOialEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1082&quot;/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;开发人员提交本地代码；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;代码仓库通过Hook机制通知Jenkins；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Jenkins获取最新代码编译打包；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;生成Docker镜像文件上传到中心仓库；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;最终触发滚动或者灰度等发布机制；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在整个代码发布过程如果出现问题，可以快速的回滚到上个版本，需要手动处理的流程极少，作为程序员这个职业，越是工作时间长，越要善用自动化的流程。系统架构越复杂，则服务部署、数据和环境隔离、容灾、灰度、动态扩容就更是需要自动管理，上述技术体系可以很轻松的解决这些问题。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;三、Docker容器&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;Docker是作为开源的应用容器引擎，有三个核心概念，Image-镜像，Container-容器、Repository-仓库；开发人员可以通过打包应用和依赖包到一个可移植的容器中，容器是完全使用沙箱机制，相互之间不会有任何接口，然后发布到任何流行的服务器上，也可以实现虚拟化。&lt;/p&gt;&lt;p&gt;上述微服务模块变多，需要持续集成工具管理；同理当Docker容器变多和复杂，管理和调度也是一个问题。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;四、K8S容器管理&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;Kubernetes简称K8S，用做灵活和便捷管理和调度Docker容器，提供应用部署、规划、更新、维护的一种机制，让部署容器化的应用简单并且高效，支持自动化部署、大规模可伸缩、应用容器化管理。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4820415879017013&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvDYVrLL1CpSefDF5HpkA6nNUFeMkI7txaGgqJSVLeRMzl4uRq7AUSUJ9NIc109seuYp5kHiacBdVWw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1058&quot;/&gt;&lt;/p&gt;&lt;p&gt;在上面的部署环境架构下，Docker可以理解为Kubernetes上的一个组件，通过K8S去统一管理。&lt;/p&gt;&lt;p&gt;这样一套服务发布和环境管理的技术体系现在非常常用，从开发的角度看，熟悉基本使用流程最好，原理逻辑不负责，但是实际操作复杂，通常由专业的运维管理，能说清楚环境的搭建思路也是面试中常见的问题。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;五、源代码地址&lt;/span&gt;&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;GitHub地址：知了一笑&lt;br/&gt;https:&lt;span&gt;//github.com/cicadasmile/spring-cloud-base&lt;/span&gt;&lt;br/&gt;GitEE地址：知了一笑&lt;br/&gt;https:&lt;span&gt;//gitee.com/cicadasmile/spring-cloud-base&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3783359497645212&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCjMheLZtcM2iaVMBOpIUKR4CDRCG9FLT5K6NmGXvG7exrW0TSuDjnTKJQ5PDq8j8Y7PHDd17Z3gicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1274&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a8d223ea16fa2c32cfca2eac52b6ce4c</guid>
<title>云原生体系下的技海浮沉与理论探索</title>
<link>https://toutiao.io/k/jij4kk0</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>679284038e3a9086360e64b39fbe0dbb</guid>
<title>React 高阶组件 Props 代理的一些小技巧</title>
<link>https://toutiao.io/k/7ma063a</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot;&gt;&lt;p&gt;高阶组件的 Props 代理有一些很常见的场景：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Props 比原组件&lt;b&gt;多&lt;/b&gt;了一些属性&lt;/li&gt;&lt;li&gt;Props 比原组件&lt;b&gt;少&lt;/b&gt;了一些属性&lt;/li&gt;&lt;li&gt;给原组件的 Props 的某些属性设置了默认值&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;那么在下面这个操作之前：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;RawComponent {...props} /&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你是否会先对 props 做一些「编辑」操作呢？比如删除某些属性，赋值某些属性。&lt;/p&gt;&lt;p&gt;其实大部分时候可以先这样去解构你的高阶组件 Props：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;newProp1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;newProp2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rawProps&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果是 ts 项目一般还可以配合：&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.typescriptlang.org/docs/handbook/utility-types.html%23omittype-keys&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Omit&lt;/a&gt;&amp;lt;原组件PropsType, &#x27;rawPropX&#x27;&amp;gt;  来移除掉不希望被用户传入的 prop&lt;/p&gt;&lt;p&gt;然后在使用的时候还可以利用属性顺序技巧来实现默认值或覆盖值：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;RawComponent rawProp1=&quot;默认值&quot; {...rawProps} rawPropX=&quot;覆盖值&quot; /&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;子属性也类似：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;RawComponent
  xxProps={{
    rawProp1: &#x27;默认值&#x27;,
    ...rawProps,
    rawPropX: &#x27;覆盖值&#x27;,
  }}
/&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以上大部分场景就不需要专门从 props 里 delete 某属性了。即使真的需要，也是建议通过 lodash 的 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//lodash.com/docs/4.17.15%23omit&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;omit&lt;/a&gt; 或 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//lodash.com/docs/4.17.15%23pick&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;pick&lt;/a&gt; 来做。&lt;/p&gt;&lt;p&gt;&lt;b&gt;顺便，业务逻辑之外的很多代码都建议先从项目已经提供的通用库里去找下，一般都不建议自己造轮子。&lt;/b&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>