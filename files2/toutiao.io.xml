<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>cb3a8058d0a1a8fd30b5801e2d60ed92</guid>
<title>为什么要鼓励重复造轮子？| 码农周刊第 327 期</title>
<link>https://toutiao.io/k/fvbrmmu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;为什么要鼓励重复造轮子？| 码农周刊第 327 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第327期（2020-12-23）&lt;/h2&gt;
        &lt;p&gt;☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=327&amp;amp;aid=20216&amp;amp;url=http%3A%2F%2Fwww.huodongxing.com%2Fevent%2F1573487912300%3Fcoupon%3DMNZK&quot; target=&quot;_blank&quot;&gt;汇聚云计算、区块链、数据等技术顶级大咖！点击抢购&lt;font&gt;限时早鸟票&lt;/font&gt;！&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;a href=&quot;https://weekly.manong.io/bounce?nid=327&amp;amp;aid=20216&amp;amp;url=http%3A%2F%2Fwww.huodongxing.com%2Fevent%2F1573487912300%3Fcoupon%3DMNZK&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/qiniu_326.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=327&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;关注云计算、数据、区块链三大技术主题，云集十余位业内大咖和顶尖技术人。&lt;font&gt;早鸟票限时抢购中&lt;/font&gt;&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;从 Druid 到 ClickHouse&lt;/p&gt;
        
        &lt;p&gt;实战总结&lt;/p&gt;
        
        &lt;p&gt;实践验证&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;能够低成本、无侵入的收集代码覆盖率数据&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;通过它可以在异常时直接 dump 出一个迷你内存快照。快照中没有任何敏感信息，更重要的是文件非常小的同时数据也相对完整，非常适合离线分析 OOM 及其他类型异常的调查定位。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;适合新手&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;在传统的计算机科学课程中，从操作系统、编程语言到机器学习，这些高大上课程和主题已经非常多了。然而有一个至关重要的主题却很少被专门讲授，而是留给学生们自己去探索。这部分内容就是：精通工具。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;干货满满&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;关注云计算、数据、区块链三大技术主题，云集十余位业内大咖和顶尖技术人。&lt;font&gt;早鸟票限时抢购中&lt;/font&gt;&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;Service Mesh 篇&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;入门介绍&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;图文并茂&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验总结&lt;/p&gt;
        
        &lt;p&gt;结合代码&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;完整代码&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;关注云计算、数据、区块链三大技术主题，云集十余位业内大咖和顶尖技术人。&lt;font&gt;早鸟票限时抢购中&lt;/font&gt;&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;值得收藏&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;背景介绍&lt;/p&gt;
        
        &lt;p&gt;深入讲解&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;一步步教你&lt;/p&gt;
        
        &lt;p&gt;一步步教你&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;结合代码&lt;/p&gt;
        
        &lt;p&gt;适合新手&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 429587 即可&lt;/p&gt;
        
        &lt;p&gt;分享OPPO前沿互联网技术及活动&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 429344 即可&lt;/p&gt;
        
        &lt;p&gt;实时分享K8S等云原生技术、教程、资讯&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 392908 即可&lt;/p&gt;
        
        &lt;p&gt;一群靠谱的人，愿为phper带来一些值得细细品味的精神食粮&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 56197 即可&lt;/p&gt;
        
        &lt;p&gt;关注系统架构，做到实现功能、可靠、易用、高效率、可维护、可移植和优雅。&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 42200 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;本书从一些经典算法出发，为读者展示了 100 个 Python 趣味编程实例。欢迎到&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;兑换阅读。&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;关注云计算、数据、区块链三大技术主题，云集十余位业内大咖和顶尖技术人。&lt;font&gt;早鸟票限时抢购中&lt;/font&gt;&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;欢迎探讨&lt;/p&gt;
        
        &lt;p&gt;经验总结&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>565a7ad78e67adb7c6110162d2e8d679</guid>
<title>漫话：如何给女朋友解释什么是 Mock？</title>
<link>https://toutiao.io/k/rqnml35</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.21739130434782608&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/mQlO20PgUDKtONJc69QACFgicXyIDlBh63BR1GkoakiaIeOyqE65A4KP4neMfV1RYqlcXqbxSfEcMSAbDRJ3jXxA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1242&quot;/&gt;&lt;/p&gt;&lt;p&gt;某天晚上，接到测试的电话，他问为什么在日常环境我的接口使用不同的用户测试返回的内容都一样，我回答他：接口数据被我mock掉了，现在返回的都是mock数据。需要调一下mock的逻辑才行。&lt;/p&gt;&lt;p&gt;挂断电话之后，女朋友满怀好奇的来问我：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.41875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWwfGo4RYrXzRzozuaYpcvNQzaTDfJxKpwOJcvcm8y4j58ausvuyTAlw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.465625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWPSyDj6ibjXnQkXGBicmwGpOBMVxSKX6ZDfsmQR6ysEZAsMr2vmMQSSew/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.41875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWqtMAtAw2gAP8DjvGTES2sDlAHJUHTCymVorspMibu3HSaicibUe7UrmTA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.41796875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWYpExxPgd3ibicGHSeibppc6qVGV6YficJRsibKI03mIyKKM9HP7ypjTpqkg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;Mock，直译过来的话是虚假的意思，但是在面向对象程序设计中，一般翻译成模拟。如接口mock、mock对象等，通常表示接口模拟、模拟对象等。&lt;/p&gt;&lt;p&gt;在程序开发中，一般在两种场景中会是用到mock技术，第一种是在单元测试的时候，第二种是在接口测试的时候。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.45625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUW2ScHUmPwtA19Uiacic12jnRCQfm1JiaHib8013LODDugborhlNQTzk1icvQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWvFiaFWF4fOXic9qOjU4ksdhxZQd55gQtvwb1gg62XFb8dAGYrsOSFR3A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;单元测试mock&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;最初，mock主要应用在单元测试中，因为单元测试的目的是只想针对自己关注的这个&quot;单元&quot;部分进行测试，所以需要对屏蔽掉一些外部依赖的影响，这时候就可以使用mock技术。&lt;/p&gt;&lt;p&gt;不仅仅是软件开发领域的单元测试，其实在很多工业测试场景中，也会使用一些Mock技术，比如常见的汽车碰撞测试。&lt;/p&gt;&lt;p&gt;汽车在上市之前都需要经过碰撞测试，并且公布测试结果。碰撞测试过程中需要通过真实撞击来评定汽车的耐撞能力以及对内部驾驶人员的保护能力。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.6651515151515152&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUW7Ps7NZul6eRYicibs3s0LSYOSaKCA22TxzEaoarZtvgYiaoaFiaQs29zcQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;660&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;但是，为了保证验证的准确性，有为了保证测试人员的安全，一般会采用假人来进行测试。这些假人都是经过特制的，他们的生物学性能一般和真人是一样的，比如体重、关节能力、组织强度等。&lt;/p&gt;&lt;p&gt;而且有时候，为了保证测试的全面性，还会采用各种各样的假人，如成年人、老人、小孩子、男性、女性等都需要充分测试到。&lt;/p&gt;&lt;p&gt;所以，这个假人其实就是一个&lt;strong&gt;Mock对象&lt;/strong&gt;。在软件单元测试中，我们也需要用到这些测试对象。目的也类似，就是为了保证测试的全面性及准确性。&lt;/p&gt;&lt;p&gt;之所以要在测试中使用Mock对象，其实有很多原因，其中最重要的原因就是真实对象的构造成本太高。这时候一般就会采用mock对象。&lt;/p&gt;&lt;p&gt;而市面上也有很多工具可以方便的帮助我们进行单元测试的mock，如Easymock、jMock、Mockito、Unitils Mock、PowerMock、JMockit等。&lt;/p&gt;&lt;p&gt;其中比较常用的就是Easymock（https://easymock.org/ ）、JMockit（https://jmockit.github.io/index.html ）和Mockito（https://site.mockito.org/ ）这三种，用起来都比较简单。&lt;/p&gt;&lt;p&gt;关于这些工具的对比，在JMockit官网中有一张图还是挺明显的，如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.6006864988558352&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUW8FYvE1tYHSKnuYPiaBe4Ya2u2Ruqkvm8H4G09mvOGA7FOYVRO1BUjUw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1748&quot; title=&quot;-w874&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWsfMuBS2LOfq2qnB3ku5eIOyvOURBMxqiccwkLiawqtiaOAqiaWZdFoR4nA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.459375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWMu0h1qNGIPHYCialzIicsoKeuuG7ps2ZENSDFuIBBnLTSicLUXSLe8aew/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.45859375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUW1XT6wQn4BeGdHE63nMc9ib9jWoEicRphibzYrgHd44dasucLdJkAJNn1A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.46328125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWBPvQDZI0icXIjYSbODEspEsCuPGjHEv1DgbtCZpbT4wQzkiaiaoV6PbBA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;接口mock&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;如我们的要测试的一个方法，其中依赖了一个RPC远程服务，因为远程服务的返回值可能是各种各样的，我们为了测试我们的接口的鲁棒性，就会针对各种边界情况进行充分测试。&lt;/p&gt;&lt;p&gt;如果把外部接口mock掉，也就是把外部接口的返回值当做一个mock对象，那么我们就可以很方便的模拟各种情况。如外部接口正常返回、异常返回、请求超时等等，都可以很方便的被测试。&lt;/p&gt;&lt;p&gt;其实，随着软件开发这么多年的发展，mock技术已经不仅仅局限于单元测试阶段了，尤其是随着微服务的兴起，应用拆分的越来越细，应用见依赖也越来越多。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.7317073170731707&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWbibPibd8Z3zDpc2sF9ToGLB6icX7y7BoC88zgxFdA2gSScdcibpWAr9LTA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1640&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;这时候Mock技术就显得尤为重要了。&lt;/p&gt;&lt;p&gt;很多时候，一个项目中，大家可能是同时开发的，而我们的很多下游依赖可能还没开完完，或者有些特殊case没办法构造，那这时候就可以利用mock技术来mock掉下游接口。&lt;/p&gt;&lt;p&gt;我们日常开发中用到的时候很多，比如日常开发环境调用支付宝，我们需要经常构造诸如协议过期、余额不足、请求超时、账户不存在等case的时候，就可以想办法将他们的接口mock掉。&lt;/p&gt;&lt;p&gt;市面上现在也有很多接口mock工具可以使用，如RAP、Yapi、Moco和DOClever等。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWQss3IiatQP6ibPhjHFJX6wicRoFUy4oYibUPQIfraJPPBwTz6wCoAImZWQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWs7Rc4dmicT9wn117bmhjibYGp6cGFrtRpN7x6SPXh75RzrjTmuys6Shg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;RAP&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;RAP是阿里团队出的一款接口管理工具，能给你提供方便的接口文档管理、Mock、导出等功能。他可以通过分析接口结构，动态生成模拟数据，校验真实接口正确性，围绕接口定义，通过一系列自动化工具提升我们的协作效率。&lt;/p&gt;&lt;p&gt;现在该项目已暂停维护，但是官方团队推出了RAP2，RAP2 是在 RAP1 基础上重做的新项目，项目地址：https://github.com/thx/rap2-delos&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.39206642066420666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWHHUAOM1DFpQicABkhx3dR9ZfJcia2giaW3w7aaUVBLyicB078elfHXBLtw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2168&quot; title=&quot;-w1084&quot;/&gt;&lt;/figure&gt;&lt;h4&gt;&lt;span&gt;YApi&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;YApi是去哪儿网移动架构组开发的一个开源项目，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 API。官网地址：https://hellosean1025.github.io/yapi/&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.7778810408921933&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWb5dNOFQHtbkflHX51Xn1zyLcVSbZriaGOZ530IJ0F4bLhqpexswxtAw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2152&quot; title=&quot;-w1076&quot;/&gt;&lt;/figure&gt;&lt;h4&gt;&lt;span&gt;Moco&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;Moco 是一个搭建模拟服务器的工具，其支持 API 和独立运行两种方式，前者通常是在 junit 等测试框架中使用，后者则是通过运行一个 jar 包开启服务。项目地址：https://github.com/dreamhead/moco&lt;/p&gt;&lt;h4&gt;&lt;span&gt;DOClever&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;DOClever是一个可视化免费开源的接口管理工具 ,可以分析接口结构，校验接口正确性， 围绕接口定义文档，通过一系列自动化工具提升我们的协作效率。主要提供接口信息管理、接口调试运行、接口Mock、自动化测试、团队协作等功能。官网地址：http://doclever.cn/controller/index/index.html&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.423046875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWwCgxO7kkZZ2VC64iaTMvYrtlIdW5OGNsicEDWczHnCia9tbgq09d0YZgQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2560&quot; title=&quot;-w1475&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.465625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWxE9O31StJD4uJcSKldZ0CEicic8EKmx9h0MAKM2uLicGWVUicX79KbhkbQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.46015625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUW9QiaSI67IATYb8KpBxYj9CcrPvbRibTNtwW07ialD2e5ZA8WlXdhILrmw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.459375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWyboZrwcfRqYNL830dUEn82tIeriazyxmEzIvECE1uhctIpnRDBV8Vgg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.46484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWkpjy6oYkMjq0QAlrr2D2gPbmfIptulM4SOEPpsJ7ricA6SvDG6mFVdg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.453125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWfhQAexyClYavG07uKcuo45rgreUKkoDiadJNzOJuPFA6aEZPpeyMN9Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.42421875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWkEcWbsSiaRbvhBrRDvafMrEUbNicxrQgfrjZVv01iccug0iaJRe0DYwe9g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5140625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWMdPOYbtAMJia8mxxe8RvCpaEc8RSaQN2djq7JKhGWBXa3TQBlotDgLw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.41640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn19aGxpBncwCcqhQWDGIBibUWNNWGrdG5Fp4tKvgbAAxYnnupnafQfXBPddGkQxSYFb9RiatujzY9CrA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; data-opacity=&quot;1&quot; data-rotate=&quot;0&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;福利时间&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;感谢大家一直以来的陪伴与支持&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;今天给大家赠送&lt;span&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;本书&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;由&lt;strong&gt;北京大学出版社&lt;/strong&gt;赞助&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.3786765&quot; data-type=&quot;jpeg&quot; data-w=&quot;544&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn18mVp5RR65grgWaluX2dP6htoxRC5vP1PpaYwlBT3EgoEK8aiaLWKH4HLmcjWgpuIc6LOATIQGYBqA/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;分布式一致性算法&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;赵辰 著&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;系统 详尽 生产级 完整&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;自己动手 从零开始编写Raft算法来实现分布式一致性算法！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;《分布式一致性算法开发实战》内容简介：本书分析了分布式一致性Raft算法以及Raft算法所依赖的理论，在此基础上讲解并实现Raft算法以及基于Raft算法的KV服务。通过本书，你可以深入了解Raft算法的运行机制，也可以学习到如何正确地实现Raft。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;本书分为11章，第一章介绍分布式一致性算法，第二章详细分析Raft算法，第三章在第二章基础上整体设计，第四章到第八章逐个讲解基于Raft算法的KV服务的各个组件的实现，第九章讲解Raft算法的主要优化之一的日志快照，第十章是生产环境必须的服务器成员变更功能，最后一章介绍其他一些相关的Raft优化。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;本书详细介绍了Raft的核心算法、服务器成员变更以及各种优化的实现，适合想尝试实现Raft算法或者在生产环境中加入Raft算法的读者，以及对于分布式一致性算法有兴趣的读者。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;也欢迎大家自行购买&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;mpcps frameborder=&quot;0&quot; class=&quot;js_editor_cps&quot; data-datakey=&quot;1608476711532_0.18409899059158574&quot; data-uid=&quot;1608476711530&quot; data-type=&quot;1&quot; data-product=&quot;&quot; data-templateid=&quot;list&quot; data-pid=&quot;28537832&quot; data-categoryid=&quot;3&quot; data-appuin=&quot;3084391334&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;本&lt;/span&gt;&lt;span&gt;次送书不需要评论，也不需要转发&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;采用最公平的抽奖方式。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;关注公众号：&lt;/span&gt;&lt;span&gt;&lt;strong&gt;码出未来&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;258&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;258&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C1uDMDqjn1ick60qic95bBVGzfaDocyiarNqJr6ptFZreFlH3admw1bma91kLAjwHzSfBxicfym287MoBDicrFQYZ8w/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;公众号后台回复：&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;送书&lt;/span&gt;&lt;/strong&gt; &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;即可参与抽奖&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6c7354be1671cbf92b65ca027ded182f</guid>
<title>数据智能的未来，是不提大数据但其无所不在的时代</title>
<link>https://toutiao.io/k/4yeshi4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4124860646599777&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8cHicoiacTv8LEYDw1vNOkQqDNWLcau8YCvEco375K13UdJ0uLAfOz4341Nacican7659BxxII4YhRoP6JpYPmoaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1794&quot;/&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;回首过去十年，我们见证了大数据从概念诞生到行业落地，逐渐发展到基于数据中台驱动决策的数据智能时代。作为后互联网时代的产物，数据智能必将是未来很长一个发展阶段的核心所在。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;每日互动（个推）作为数据智能行业的代表企业之一，于今年迎来了第一个十年。在这十年间，个推以消息推送起家，借助技术力量拓宽以数据智能为核心的业务范畴，现已成长为一家在A股上市的数据智能企业。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;但“数据智能”这个词，对于大众来说仍然相对比较陌生。&lt;strong&gt;&lt;span&gt;数据行业资深从业者如何定义“数据智能”？过去的十年间，个推经历了怎么样的发展历程？即将到来的“数据智能”新十年，个推又将以什么样的角色参与当中？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在个推十周年之际，个推 CTO 叶新江针对上述疑问，与 SegmentFault 思否展开了一次对话。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-cropselx1=&quot;40&quot; data-cropselx2=&quot;372&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;294&quot; data-ratio=&quot;0.7125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8cHicoiacTv8LEYDw1vNOkQqDNWLcau8YC2kunpxjNEjJW3T9SqHH1Fmb8rqKRH8GgogPxpHsIGSyicBMZcCMoib9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;320&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;何谓“数据智能”？&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;em&gt;随着移动互联网时代的到来，互联网内容传播和展现形式发生了巨大的变化，也让数据的量级和形态发生了改变，数据服务也随之发生了转变。传统的数据服务基本只针对于数据本身，而数据智能作为一种由数据、算力和算法等驱动的技术手段，具备着赋能企业进行管理和决策的能力。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Q1、数据智能是今年非常热门的一个话题，能否谈谈对于「数据智能」和「数据中台」的定义与理解？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;目前数据经济在国家层面是一个非常重要的发展方向，但同时也延伸出了一个亟待解决的问题 —— &lt;strong&gt;&lt;span&gt;如何把各个行业的数据作为生产要素，通过数据治理发挥出更进一步的作用。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;针对看不见摸不着的数据，需要有一个东西能进行有感管理，数据中台就是一种用来进行数据治理的产品或者平台，而数据智能则属于一个更为广义的范畴，它是以数据作为生产资料，通过结合大规模数据处理、数据挖掘、机器学习、人机交互、可视化、云计算等多种技术，从大量的数据中提炼、发掘、获取知识，为人们在制定决策时提供有效的支持，减少或者消除不确定性的解决方案。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这两个词看起来很接近，但其实是不同维度的。以我们公司来讲，数据中台更多的是一个产品，体现了我们公司的数据能力；而数据智能则包含更多技术，融合了更多的行业知识，中台是其中一个很重要的工具。打一个形象的比喻，数据中台或者平台是一个电脑的操作系统，而数据智能则是结合业务，使用这个电脑，利用多种技术进行APP开发，并且不断进行优化的过程。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Q2、您认为数据中台的「行业壁垒」和「技术壁垒」分别是什么？个推作为一个成功上市的专业数据智能服务公司，自身在这个领域内具备的最大优势是什么？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;目前市面上有很多数据中台类的产品，据我们观察，其中大部分的重点仍主要聚焦于数据治理的能力，但这可能只是数据中台的“第一步”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;对于数据中台产品来讲，技术壁垒可能并不是很高。&lt;strong&gt;&lt;span&gt;中台会应用到的技术，虽然有些功能可以通过直接使用开源产品来实现，但也有不少标准或者要求，比如安全性、实时性、可视化能力等，需要专业的技术来定制实现。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当然在数据中台层面，采用的技术架构不同、产品设计的理念不同也是可以有差异的，譬如是否容易使用、容易理解、对资源要求是否经济等。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果希望通过数据中台中来解决业务问题，实现降本增效或者发现新的业务模式，这就不是数据治理能解决的问题，需要有对行业的深度理解，也就是所谓的行业壁垒。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;个推和其他大数据公司的差别，就体现在如何挖掘数据价值的层面。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;个推的第一款产品是消息推送服务，这是一项跟数据紧密相关的业务。为了支撑这项业务的进行，实现消息推送在海量数据量下的快速响应，个推一直在尝试为企业内部打造一个业务 + 数据平台的协同闭环。这也为之后公司推出数据服务产品打下了很好的基础。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5650429799426934&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8cHicoiacTv8LEYDw1vNOkQqDNWLcau8YC2YWCVB0D6gv8Qx9lNB0Xmg21iaxf55YxznryV8sA1uQD5vpwof4q4Lw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1745&quot;/&gt;&lt;/p&gt;&lt;p&gt;在数据服务层面，个推既是服务的提供者也是使用者，这是我们在这个领域内最大的优势。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Q3、数据服务领域是否有一套标准化的判定体系？如何评定服务能力与技术水平的高低？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;数据服务领域暂时还没有一套国际或者国家权威机构提出的行业标准。&lt;strong&gt;&lt;span&gt;究其原因，是因为数据服务在不同的行业间有着很大的差别，与一般的技术体系相比，具备更强的服务属性。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;对于客户来说，挑选数据服务的时候会有几个考量的维度：&lt;/p&gt;&lt;p&gt;● 平台是否可以快速部署；&lt;/p&gt;&lt;p&gt;●  部署所耗费的资源是否合理；&lt;/p&gt;&lt;p&gt;●  能否借助数据服务快速实现业务提升；&lt;strong&gt;&lt;span&gt;譬如是否能快速开发出业务的新需求，是否能很好地完成内部各个角色之间的协同。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这三项标准会是客户选择服务时的决策依据。但在选择完之后，服务商应该如何完成、如何实现客户提出的需求，因为没有清晰的界定与评判方式，需要客户在选型时进行综合性的考虑，并在后续实际的业务场景中去感受平台的服务能力。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这种情况其实也和市场需求有关。目前国内企业提出的需求都较为“定制化”，再加上不同行业间的差异，导致国内的数据服务公司大部分是结合行业提供垂直的数据服务能力。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;个推发展的每一步，踩的都是行业需求&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;我国的数字经济发展才刚刚开始，数据智能服务的能力也在不断迭代、发展。人工智能、区块链、知识图谱、可视化等新兴技术，都可以作为底层的技术支撑为数据智能服务赋能，从而让我们的数据服务具备更强大的能力，产生更多价值。&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;Q1、个推的发展经历了多个阶段，技术也在不断迭代和演进。能否简要分享一下不同阶段的业务逻辑重点以及技术研发重点？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;个推是我们的消息推送产品，做得比较早并且比较成熟了。但其实我们公司发展到现在已经十年了，业务范畴也早就不止是消息推送了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;公司发展的第一个阶段是 2010 年到 2013年。当时我们的核心团队主要是在打磨消息推送的能力，也就是一套大规模的通信系统 + 互联网搜索系统，这是一个比较垂直但对于技术要求很高的领域。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2014年至2018年，公司进入了数据价值的“掘金”与“实践”阶段。在不断精进推送能力的同时，我们发现系统产生了非常多的数据，如何让这些数据发挥价值成为了我们需要思考和解决的问题&lt;span&gt;&lt;strong&gt;。也是从这个阶段开始，个推开始致力于大数据系统的研发。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;个推的消息推送产品每天会产生几十个 T 的数据，如何存储、清洗、建模，如何在业务场景中产生商业化的价值，这是这一阶段我们的研发重点。经过几年的业务培养与场景实践，我们将在数据服务领域沉淀下来的能力和 know how（知识、经验、流程） ，变成一种可以服务于更多行业的产品，可以说公司正式进入到了数据智能的阶段。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2019年3月，每日互动成功在A股创业板上市，也引起了数据智能领域的一次新风潮。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.6666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/8cHicoiacTv8LEYDw1vNOkQqDNWLcau8YCiaibk3x5Gbt6iaG6sicFsic5iaNSicT54DPGLnicOh4Jl9X1u71KWqkGVBAorg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在今年的疫情过程中，个推数据智能的能力得到了相当程度的验证。疫情期间，我们与李兰娟院士取得联系，与李兰娟院士团队合作成立联合战队。通过大数据技术，联合战队对疫情发展态势进行了研判，帮助疫情防控部门找到工作重点区域、重点人群和重点场景。在全国逐步有序恢复生产的时候，个推也充分发挥大数据能力并参与其中，为多个省份的疫情联防联控与民生保障、复工复产的有序统筹提供了决策参考依据。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当然，个推的数据智能服务仍然是在不断迭代发展的。随着人工智能、区块链、知识图谱、可视化等等新兴技术的发展，这项基于数据的服务也将产生更多的价值。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Q2、个推致力于打造“每日治数平台”，目标方向是什么样的？与一般的中台产品有什么区别？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;「每日治数平台」其实也是数据中台的概念，但我们提供的数据服务主要是应用于数据治理领域，所以命名为治数平台更为准确。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这个平台还有一个提炼后的名字 —— &lt;strong&gt;&lt;span&gt;DMP。D 代表了数据（DATA），M 代表了 机器（MACHINE），而 P 则代表了人（PEOPLE）和专业（PRO）。&lt;/span&gt;&lt;/strong&gt;这几个关键词也代表了我们平台的定位，即数据作为底层资料，快速专业地服务于具体业务当中。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我国的数字经济发展其实才刚刚开始，据了解，不少企业并不知道该如何进行数字化、智能化的转型，业内也缺乏专业的数据人才。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;因此，我们的目标方向和传统的数据中台不同。我们希望真正将个推 know how 的能力沉淀下来，形成客户可以复用的服务或平台产品。之所以想要打造这样的一个平台，背后其实也是基于用户的实际需求。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Q3、个推的第一个客户是哪家企业？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;个推消息推送业务的第一个客户是新浪微博。当时微博非常火，有着上亿的用户量，消息推送对他们来说是不可或缺的一项功能。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;2011年，我们主动联系了微博相关业务的负责人，表示可以提供专业的消息推送服务，用更低的成本来实现更好的效果，这也是我们能够打动他们的原因。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;之所以第一个客户就敢挑战“行业顶配”的难度，一方面是技术团队自身具备扎实的技术基础和行业基础，另一方面就是前面提到的，我们在支持自身业务的过程当中沉淀下来的数据和技术能力。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;有这样一个需求明确的大客户，让我们的技术服务能力得以更加高效地迭代，大大加快了技术进步的速度。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;接受挑战并做到“极致”，正是我们公司的工程师文化，&lt;/span&gt;&lt;/strong&gt;对此我们感觉很自豪。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Q4、目前面向的客户群体有哪些，涉及哪些领域？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;随着数据能力的增强，以及对于行业理解的不断加深，&lt;span&gt;&lt;strong&gt;我们目前的服务客户已经扩展到四大领域 —— 互联网、公共服务、风控服务和品牌营销服务。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;以金融领域为例， 很多金融机构内部有自己的 App，涉及推送、统计、分析之类非常繁复的数据和信息处理场景。我们帮他们打造了一个集成的消息平台中心，解决了消息处理的分散问题，改善了工作流程。在深度沟通之后，我们发现数据智能服务在金融行业中是一个非常重度的业务场景，为此我们也在考虑开发专门针对金融行业的治数平台。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Q5、对于数据公司来说，数据安全是红线。个推如何保障数据安全性？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;个推团队自建立之初，便非常注重对于数据安全的保障。正如问题所说，数据安全对数据公司来说是红线，&lt;strong&gt;&lt;span&gt;个推始终认为保护用户数据隐私是企业必须要坚守和捍卫的行业准则、道德底线，并要时刻保持对数据安全的敬畏之心。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;个推在严格落实合规和监管要求的同时，倡导行业自律，积极联合行业伙伴的力量，共同推动行业的健康发展。今年8月，由个推牵头起草的《信息安全技术移动互联网应用程序（App）SDK安全指南》国家标准项目，获得全国信息安全标准化技术委员会正式立项，这将有助于SDK行业在开发、运营、信息处理、安全管理等环节向更规范的方向迈进。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.3907407&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/8cHicoiacTv8LEYDw1vNOkQqDNWLcau8YCell3gJYEgOwq2fvnMlE9Sx2kpyibWPcXpS15GzWvp6Vs5YloXXwT93A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在今年的浙江省网络攻防演练当中，个推在395家参选企业中不借助外部安全公司的力量，仅凭公司自身的安全能力，便取得了第 14 名的成绩，还是很自豪的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;大数据的未来，是不提大数据但是数据又无处不在的时代，“你意识不到我的存在就是我最大的存在”&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;随着数据产业的规模越来越大，生态分工在未来将会越来越细，数据服务也将越来越细。而随着人工智能、云计算、物联网等技术的发展，大数据会不会和互联网一样，不再成为人们单独讨论的概念，而是成为像水电一样的基础设施，服务于各行各业中？&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;Q1、随着社会的发展，未来的数据会呈现多形态共存的状态。您认为未来几年大数据领域会出现什么样的一些变化？哪些因素将推动这些变化？你们的生态布局是怎么样的？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;随着 5G 的成熟，数据领域的发展将从基础的量变迎来一次质变，成为像水电一样的社会基础设施。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;近几年大家其实很少再单独讨论互联网的概念，其中的一个因素，我认为是互联网已经不再是新鲜事物，现阶段技术的发展基于互联网但又高于互联网，大数据之后的发展肯定也会这样，&lt;span&gt;&lt;strong&gt;数据智能的未来，虽然基于大数据，但是不会再单独讨论大数据的概念。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;从技术层面来看，大数据行业的发展对海量数据的存储、处理、挖掘需求肯定会越来越高，未来可能也会诞生出几个巨头，将行业进行更加明确的细分。这是一个大家已经能够观察到的趋势。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;随着数据产业的规模越来越大，生态分工在未来将会越来越明确，数据类的服务也将越来越精细化。我们打造的个推每日治数平台，就是希望能够参与到生态的建设当中，甚至围绕平台打造出一种新的生态。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Q2、业内最近有个观点：“云原生体系架构是云服务时代的数据管理方法论”，从技术角度来看，您如何评判云与数据智能间的关系？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;不同的人评价同一件事肯定会有不同的出发点，这个观点看起来应该是云服务厂商提出的（笑）。很巧，我前一阵也跟吉利公司的人在讨论这个问题，他们最近刚从一家云厂商中迁移出来。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;对企业来说，上不上云、选择公有云还是私有云、选择哪家云厂商需要考虑几个维度：&lt;span&gt;&lt;strong&gt;成本吃不吃得消、是否自主可控、当不满足业务需求或者服务需求时是否方便切换等。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;以个推为例，我们目前不会将数据放到第三方的云上，但从资源的调度、成本的控制等方面来看，云体系已经是一个公认的标准答案，所以我们也会使用云计算的相关技术，比如容器云、虚拟化等。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Q3、物联网、AI、机器学习等新技术的出现，对行业来说是机会还是挑战？个推应对技术的发展是否有做哪些前瞻性的探索？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;新技术的出现，对行业来讲既是机会也是挑战。每次新技术的出现，都能为人类解放生产力或者提高生产力提供了可能性。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;但一些技术因为过于“新”，暂时还没有找到发挥能力的场景，没办法发挥出实际的社会价值，让企业的投入与产出不成正比。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;个推还成立了数据智能研究院，目前研究的方向是探索如何将技术更好地服务于具体的业务当中。比如我们对物联网技术方向的探索，是想将自身的推送技术能力延伸到电视机、汽车等场景当中；对机器学习和区块链的探索则是为了进行一些业务模式的研究。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;技术是面向未来的，但用户的需求是现在的。&lt;/span&gt;&lt;/strong&gt;对于我们来说，目前的重点还是如何借助技术快速迭代服务能力，为用户以及行业赋能。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.74&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/8cHicoiacTv8LEYDw1vNOkQqDNWLcau8YCJn4ycqXKYeycLhW4bUDVWFt3hpTblyNWb9OJVJ9dC5JaLuU6icf8Y4w/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;300&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;回顾大数据行业和个推的发展时间线，不难发现个推成立的这十年，恰巧也是大数据从一种辅助工具向引领发展方向的核心引擎转变的十年。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;随着大数据行业的发展，国家正在大力发展数字经济，企业正在迎来一波借助数据智能实现数字化、智能化的转型新浪潮。&lt;strong&gt;&lt;span&gt;在这股浪潮中，开始“治数”的个推将会扮演一个什么样的角色？我们拭目以待。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;限时福利&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;在十周年之际，个推为广大开发者准备了重磅福利 —— &lt;strong&gt;&lt;span&gt;爆款SDK免费用1年、热门大数据产品0门槛试用！&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;点击阅读原文，&lt;/span&gt;&lt;/strong&gt;即可参与，还有丰富的惊喜礼盒限时领取！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.1111111&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/8cHicoiacTv8LEYDw1vNOkQqDNWLcau8YCWNaQqxNkpxdoTJ7zOChMOI1eQmXicHrjgKIeoe427q9P7w1KcHPlDDA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;900&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU2MDc1MjcyMQ==&amp;amp;mid=2247484780&amp;amp;idx=1&amp;amp;sn=eb3f3e453559de485c34f4905f3927df&amp;amp;chksm=fc027452cb75fd44ab0a0f9fde3d66c6cb023315d14ec1eee2f8aabffc18651ed4af0fdeee49&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.25&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8cHicoiacTv8LEYDw1vNOkQqDNWLcau8YCUeeSyHPm4j04DTdIudpJ52QZqZ6OnFU6bptMDia1dPx2NicRvIOeBMQg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU2MDc1MjcyMQ==&amp;amp;mid=2247486015&amp;amp;idx=1&amp;amp;sn=e117d4c8516166c1714badbaf663b2cf&amp;amp;chksm=fc027b01cb75f217d335734f2fb346a394b8901048cc651e9e3eb96db2600de26cadf21bba6f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.25&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8cHicoiacTv8LEYDw1vNOkQqDNWLcau8YCR7jk3TibdREDohUxSWDvmZCdPHXcllDEQE8SicUNSA1IKbOweefZzZKw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6666666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/8cHicoiacTv8JqGJmY1vPHn4JX87favPMp4hm8cibDwyJ0C0P4kvgeo97vk0etSPE6tUic4J0iaxuojABvxvlELLM0g/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.005128205128205&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/8cHicoiacTv8JVOE5ibzQy7MmiadREHZ5jdb7lnZHBwRicz7V79AywTRCpiaVb7dvLF4PtB6iaIsKNUxAuwic21BrTqiaSA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;390&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/8cHicoiacTv8LEYDw1vNOkQqDNWLcau8YCQd7NXZlYIzdHDRPdL3Om3VFmh3ppvpqrplD4Umq5SDDRRyJiaIXge0A/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;300&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;立即参与，&lt;strong&gt;&lt;span&gt;领取福利！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>40d60a84bbf611587ad67b8626240a94</guid>
<title>是时候捋一捋 Java 的深浅拷贝了</title>
<link>https://toutiao.io/k/moq9ag3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.5789473684210527&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dLdju2RRyOVZCt6JROGL4RbVO3K89gEd9AzQsXcxXJI38Id203kk5cPmcuyZAYGvmXN5hBf2TDKHZc9oOHId2A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;38&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;点击上方&lt;span data-mid=&quot;&quot;&gt;蓝字&lt;/span&gt;关注俺呀呀&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2142857142857142&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZuN7LNJw9RwRTibaY0K2FdiaA3okcYyjLJibJE4Yw0QGUNL6Cm4dlhKQj26HdY9QbY3SKBUG3Ce5X0icnvLETaSCDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;28&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;在开发、刷题、面试中，我们可能会遇到将一个对象的属性赋值到另一个对象的情况，这种情况就叫做拷贝。拷贝与Java内存结构息息相关，搞懂Java深浅拷贝是很必要的！&lt;/p&gt;&lt;p&gt;在对象的拷贝中，很多初学者可能搞不清到底是拷贝了引用还是拷贝了对象。在拷贝中这里就分为引用拷贝、浅拷贝、深拷贝进行讲述。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;引用拷贝&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;引用拷贝会生成一个新的对象引用地址，但是两个最终指向依然是同一个对象。如何更好的理解引用拷贝呢？很简单，就拿我们人来说，通常有个姓名，但是不同场合、人物对我们的叫法可能不同，但我们很清楚哪些名称都是属于&quot;我&quot;的！&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.4524053224155578&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThyibqO46LcpibicsfE5J7FLIzKcK8ibKljtrU71NbQ1HoJoVOCKticIOwtsJf2ZGHNNWkTySAYCphJQRpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1954&quot; title=&quot;image-20201216222353944&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;当然，通过一个代码示例让大家领略一下(为了简便就不写get、set等方法)：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Son&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    String name;&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; age;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;Son&lt;/span&gt;&lt;span&gt;(String name, &lt;span&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.name = name;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.age = age;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;test&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        Son s1 = &lt;span&gt;new&lt;/span&gt; Son(&lt;span&gt;&quot;son1&quot;&lt;/span&gt;, &lt;span&gt;12&lt;/span&gt;);&lt;br/&gt;        Son s2 = s1;&lt;br/&gt;        s1.age = &lt;span&gt;22&lt;/span&gt;;&lt;br/&gt;        System.out.println(s1);&lt;br/&gt;        System.out.println(s2);&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;s1的age:&quot;&lt;/span&gt; + s1.age);&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;s2的age:&quot;&lt;/span&gt; + s2.age);&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;s1==s2&quot;&lt;/span&gt; + (s1 == s2));&lt;span&gt;//相等&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出的结果为：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Son@135fbaa4&lt;br/&gt;Son@135fbaa4&lt;br/&gt;s1的&lt;span&gt;age:&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;&lt;br/&gt;s2的&lt;span&gt;age:&lt;/span&gt;&lt;span&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;浅拷贝&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;如何创建一个对象，将目标对象的内容复制过来而不是直接拷贝引用呢？&lt;/p&gt;&lt;p&gt;这里先讲一下&lt;strong&gt;浅拷贝&lt;/strong&gt;，浅拷贝会创建一个新对象，新对象和原对象本身没有任何关系，&lt;strong&gt;新对象和原对象不等，但是新对象的属性和老对象相同&lt;/strong&gt;。具体可以看如下区别：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;如果属性是基本类型(int,double,long,boolean等)，拷贝的就是基本类型的值；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果属性是引用类型，拷贝的就是内存地址（即复制引用但不复制引用的对象） ，因此如果其中一个对象改变了这个地址，就会影响到另一个对象。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;如果用一张图来描述一下浅拷贝，它应该是这样的：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.49494020239190434&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThyibqO46LcpibicsfE5J7FLIzKrXcxaxXbf1nyD6pPiazmkObU9kSCp3WotVK4oMSzGrGNyLXxwFbia6LA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2174&quot; title=&quot;image-20201217002917565&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;如何实现浅拷贝呢？也很简单，&lt;strong&gt;就是在需要拷贝的类上实现Cloneable接口并重写其clone()方法&lt;/strong&gt;。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;protected&lt;/span&gt; Object &lt;span&gt;clone&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; CloneNotSupportedException &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;super&lt;/span&gt;.clone();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在使用的时候直接调用类的clone()方法即可。具体案例如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Father&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    String name;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;Father&lt;/span&gt;&lt;span&gt;(String name)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.name=name;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; String &lt;span&gt;toString&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;Father{&quot;&lt;/span&gt; +&lt;br/&gt;                &lt;span&gt;&quot;name=&#x27;&quot;&lt;/span&gt; + name + &lt;span&gt;&#x27;\&#x27;&#x27;&lt;/span&gt; +&lt;br/&gt;                &lt;span&gt;&#x27;}&#x27;&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Son&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;Cloneable&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;int&lt;/span&gt; age;&lt;br/&gt;    String name;&lt;br/&gt;    Father father;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;Son&lt;/span&gt;&lt;span&gt;(String name,&lt;span&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.age=age;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.name = name;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;Son&lt;/span&gt;&lt;span&gt;(String name,&lt;span&gt;int&lt;/span&gt; age, Father father)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.age=age;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.name = name;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.father = father;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; String &lt;span&gt;toString&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;Son{&quot;&lt;/span&gt; +&lt;br/&gt;                &lt;span&gt;&quot;age=&quot;&lt;/span&gt; + age +&lt;br/&gt;                &lt;span&gt;&quot;, name=&#x27;&quot;&lt;/span&gt; + name + &lt;span&gt;&#x27;\&#x27;&#x27;&lt;/span&gt; +&lt;br/&gt;                &lt;span&gt;&quot;, father=&quot;&lt;/span&gt; + father +&lt;br/&gt;                &lt;span&gt;&#x27;}&#x27;&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;protected&lt;/span&gt; Son &lt;span&gt;clone&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; CloneNotSupportedException &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; (Son) &lt;span&gt;super&lt;/span&gt;.clone();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;test&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; CloneNotSupportedException &lt;/span&gt;{&lt;br/&gt;        Father f=&lt;span&gt;new&lt;/span&gt; Father(&lt;span&gt;&quot;bigFather&quot;&lt;/span&gt;);&lt;br/&gt;        Son s1 = &lt;span&gt;new&lt;/span&gt; Son(&lt;span&gt;&quot;son1&quot;&lt;/span&gt;,&lt;span&gt;13&lt;/span&gt;);&lt;br/&gt;        s1.father=f;&lt;br/&gt;        Son s2 = s1.clone();&lt;br/&gt;&lt;br/&gt;        System.out.println(s1);&lt;br/&gt;        System.out.println(s2);&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;s1==s2:&quot;&lt;/span&gt;+(s1 == s2));&lt;span&gt;//不相等&lt;/span&gt;&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;s1.name==s2.name:&quot;&lt;/span&gt;+(s1.name == s2.name));&lt;span&gt;//相等&lt;/span&gt;&lt;br/&gt;        System.out.println();&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//但是他们的Father father 和String name的引用一样&lt;/span&gt;&lt;br/&gt;        s1.age=&lt;span&gt;12&lt;/span&gt;;&lt;br/&gt;        s1.father.name=&lt;span&gt;&quot;smallFather&quot;&lt;/span&gt;;&lt;span&gt;//s1.father引用未变&lt;/span&gt;&lt;br/&gt;        s1.name=&lt;span&gt;&quot;son222&quot;&lt;/span&gt;;&lt;span&gt;//类似 s1.name=new String(&quot;son222&quot;) 引用发生变化&lt;/span&gt;&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;s1.Father==s2.Father:&quot;&lt;/span&gt;+(s1.father == s2.father));&lt;span&gt;//相等&lt;/span&gt;&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;s1.name==s2.name:&quot;&lt;/span&gt;+(s1.name == s2.name));&lt;span&gt;//不相等&lt;/span&gt;&lt;br/&gt;        System.out.println(s1);&lt;br/&gt;        System.out.println(s2);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行结果为：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Son{age=&lt;span&gt;13&lt;/span&gt;, name=&lt;span&gt;&#x27;son1&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;bigFather&#x27;&lt;/span&gt;}}&lt;br/&gt;Son{age=&lt;span&gt;13&lt;/span&gt;, name=&lt;span&gt;&#x27;son1&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;bigFather&#x27;&lt;/span&gt;}}&lt;br/&gt;s1==s2:&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;s1.name==s2.name:&lt;span&gt;true&lt;/span&gt;&lt;span&gt;//此时相等&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;s1.Father==s2.Father:&lt;span&gt;true&lt;/span&gt;&lt;br/&gt;s1.name==s2.name:&lt;span&gt;false&lt;/span&gt;&lt;span&gt;//修改引用后不等&lt;/span&gt;&lt;br/&gt;Son{age=&lt;span&gt;12&lt;/span&gt;, name=&lt;span&gt;&#x27;son222&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;smallFather&#x27;&lt;/span&gt;}}&lt;br/&gt;Son{age=&lt;span&gt;13&lt;/span&gt;, name=&lt;span&gt;&#x27;son1&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;smallFather&#x27;&lt;/span&gt;}}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不出意外，这种浅拷贝除了对象本身不同以外，各个零部件和关系和拷贝对象都是相同的，就好像双胞胎一样，是两个人，但是其开始的样貌、各种关系(父母亲人)都是相同的。&lt;strong&gt;需要注意&lt;/strong&gt;的是其中name初始&lt;code&gt;==&lt;/code&gt;是相等的，是因为初始浅拷贝它们指向一个相同的String，而后&lt;code&gt;s1.name=&quot;son222&quot;&lt;/code&gt; 则改变引用指向。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5249221183800623&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThyibqO46LcpibicsfE5J7FLIzKP60xBG4AP0u9eRxTSPx8BibPCHtBF6rHKGd5WPBsU2zrhQ9EssmGxLA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1284&quot; title=&quot;image-20201217103648400&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;深拷贝&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;对于上述的问题虽然拷贝的两个对象不同，但其内部的一些引用还是相同的，怎么样绝对的拷贝这个对象，使这个对象完全独立于原对象呢？就使用我们的深拷贝了。深拷贝：&lt;strong&gt;在对引用数据类型进行拷贝的时候，创建了一个新的对象，并且复制其内的成员变量。&lt;/strong&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.42483660130718953&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThyibqO46LcpibicsfE5J7FLIzKr4jnrsUURq6FhcG4QuznmIrwOQvueK5ia5MRCEbsIGfbgGrYonRFNAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2142&quot; title=&quot;image-20201217111300466&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;在具体实现深拷贝上，这里提供两个方式，重写clone()方法和序列法。&lt;/p&gt;&lt;h5&gt;&lt;span&gt;重写clone()方法&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;如果使用重写clone()方法实现深拷贝，那么要将类中所有自定义引用变量的类也去实现Cloneable接口实现clone()方法。对于字符类可以创建一个新的字符串实现拷贝。&lt;/p&gt;&lt;p&gt;对于上述代码，Father类实现Cloneable接口并重写clone()方法。&lt;strong&gt;son的clone()方法需要对各个引用都拷贝一遍&lt;/strong&gt;。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;//Father clone()方法&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;protected&lt;/span&gt; Father &lt;span&gt;clone&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; CloneNotSupportedException &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; (Father) &lt;span&gt;super&lt;/span&gt;.clone();&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;//Son clone()方法&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;protected&lt;/span&gt; Son &lt;span&gt;clone&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; CloneNotSupportedException &lt;/span&gt;{&lt;br/&gt;    Son son= (Son) &lt;span&gt;super&lt;/span&gt;.clone();&lt;span&gt;//待返回拷贝的对象&lt;/span&gt;&lt;br/&gt;    son.name=&lt;span&gt;new&lt;/span&gt; String(name);&lt;br/&gt;    son.father=father.clone();&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; son;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其他代码不变，执行结果如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Son{age=13, name=&lt;span&gt;&#x27;son1&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;bigFather&#x27;&lt;/span&gt;}}&lt;br/&gt;Son{age=13, name=&lt;span&gt;&#x27;son1&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;bigFather&#x27;&lt;/span&gt;}}&lt;br/&gt;s1==s2:&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;s1.name==s2.name:&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;s1.Father==s2.Father:&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;s1.name==s2.name:&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;Son{age=12, name=&lt;span&gt;&#x27;son222&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;smallFather&#x27;&lt;/span&gt;}}&lt;br/&gt;Son{age=13, name=&lt;span&gt;&#x27;son1&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;bigFather&#x27;&lt;/span&gt;}}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5&gt;&lt;span&gt;序列化&lt;/span&gt;&lt;/h5&gt;&lt;p&gt;可以发现这种方式实现了深拷贝。但是这种情况有个问题，如果引用数量或者层数太多了怎么办呢？&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.8809523809523809&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThyibqO46LcpibicsfE5J7FLIzKXucf1AtIsLFBfoLCxFMabB7c9NkWKiaQiaRPgltbGjztGIGhu3ddPiagQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1176&quot; title=&quot;image-20201217105458651&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;不可能去每个对象挨个写clone()吧？那怎么办呢？借助序列化啊。&lt;/p&gt;&lt;p&gt;因为序列化后：将二进制字节流内容写到一个媒介（文本或字节数组），然后是从这个媒介读取数据，原对象写入这个媒介后拷贝给clone对象，原对象的修改不会影响clone对象，因为clone对象是从这个媒介读取。&lt;/p&gt;&lt;p&gt;熟悉对象缓存的知道我们经常将Java对象缓存到Redis中，然后还可能从Redis中读取生成Java对象，这就用到序列化和反序列化。一般可以将Java对象存储为字节流或者json串然后反序列化成Java对象。因为序列化会储存对象的属性但是&lt;strong&gt;不会也无法存储对象在内存中地址相关信息&lt;/strong&gt;。所以在反序列化成Java对象时候会重新创建所有的引用对象。&lt;/p&gt;&lt;p&gt;在具体实现上，自定义的类&lt;strong&gt;需要实现Serializable接口&lt;/strong&gt;。在需要深拷贝的类(Son)中定义一个函数返回该类对象：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;protected&lt;/span&gt; Son &lt;span&gt;deepClone&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; IOException, ClassNotFoundException &lt;/span&gt;{&lt;br/&gt;      Son son=&lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;      &lt;span&gt;//在内存中创建一个字节数组缓冲区，所有发送到输出流的数据保存在该字节数组中&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;//默认创建一个大小为32的缓冲区&lt;/span&gt;&lt;br/&gt;      ByteArrayOutputStream byOut=&lt;span&gt;new&lt;/span&gt; ByteArrayOutputStream();&lt;br/&gt;      &lt;span&gt;//对象的序列化输出&lt;/span&gt;&lt;br/&gt;      ObjectOutputStream outputStream=&lt;span&gt;new&lt;/span&gt; ObjectOutputStream(byOut);&lt;span&gt;//通过字节数组的方式进行传输&lt;/span&gt;&lt;br/&gt;      outputStream.writeObject(&lt;span&gt;this&lt;/span&gt;);  &lt;span&gt;//将当前student对象写入字节数组中&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;      &lt;span&gt;//在内存中创建一个字节数组缓冲区，从输入流读取的数据保存在该字节数组缓冲区&lt;/span&gt;&lt;br/&gt;      ByteArrayInputStream byIn=&lt;span&gt;new&lt;/span&gt; ByteArrayInputStream(byOut.toByteArray()); &lt;span&gt;//接收字节数组作为参数进行创建&lt;/span&gt;&lt;br/&gt;      ObjectInputStream inputStream=&lt;span&gt;new&lt;/span&gt; ObjectInputStream(byIn);&lt;br/&gt;      son=(Son) inputStream.readObject(); &lt;span&gt;//从字节数组中读取&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt;  son;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用时候调用我们写的方法即可，其他不变，实现的效果为：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Son{age=13, name=&lt;span&gt;&#x27;son1&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;bigFather&#x27;&lt;/span&gt;}}&lt;br/&gt;Son{age=13, name=&lt;span&gt;&#x27;son1&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;bigFather&#x27;&lt;/span&gt;}}&lt;br/&gt;s1==s2:&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;s1.name==s2.name:&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;s1.Father==s2.Father:&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;s1.name==s2.name:&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;Son{age=12, name=&lt;span&gt;&#x27;son222&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;smallFather&#x27;&lt;/span&gt;}}&lt;br/&gt;Son{age=13, name=&lt;span&gt;&#x27;son1&#x27;&lt;/span&gt;, father=Father{name=&lt;span&gt;&#x27;bigFather&#x27;&lt;/span&gt;}}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然这是对象的拷贝，对于数组的拷贝将在下一篇进行更细致的研究！敬请期待！&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;/h2&gt;&lt;section&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247485697&amp;amp;idx=1&amp;amp;sn=2de52beeea8b5c1458a44e0086267471&amp;amp;chksm=ce1a2eb0f96da7a64aa86eb00779940f2b054127d4f2ba5eba28be6c2f6f8b966018566d0ddd&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;面试官本想拿一道求素数搞我，但被我优雅的&quot;回击&quot;了&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247485341&amp;amp;idx=1&amp;amp;sn=9322f5ea2eca0fb3f6927d87c3b532fb&amp;amp;chksm=ce1a202cf96da93a615868dba376b98d77561b88cdcc776bd58c4dd8e00d52b9b9267ad9f3a1&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;strong&gt; 16张图带你彻底搞懂基数排序&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247485575&amp;amp;idx=1&amp;amp;sn=5bf1be2af6213ee546c0435b92af149d&amp;amp;chksm=ce1a2f36f96da620957e0bf9ec87edc23087bc49800ed2456f41d3495cb16fcf7f1c2b707074&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;strong&gt;「干货总结」程序员必知必会的十大排序算法&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247485682&amp;amp;idx=1&amp;amp;sn=e7959e1367394eb6f3a8fe37aa109cb1&amp;amp;chksm=ce1a2f43f96da6554a60ab9ce7f37ad26992ed2b9791693dd4d7e50fb7efc44e88ac77b3e2c0&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;strong&gt;花5分钟看这篇之前,你才发现你不懂RESTful&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2MTE1NjA2Mg==&amp;amp;mid=2247485648&amp;amp;idx=1&amp;amp;sn=8ef9e4eb5dab360695a637b37ed488e2&amp;amp;chksm=ce1a2f61f96da6770494c1c2041efeb525ba1743cb00e733d57e62e47021f28e5da188a0d853&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;「五大常用算法」一文图解分治算法和思想&lt;/a&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;记得关注、咱们下次再见！&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3579175704989154&quot; data-type=&quot;png&quot; data-w=&quot;2766&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Lia5wemIHThxnTyOzzdibsIIhOb7FJJ4DqfczTibcsLSg6DHic9tJibhxBnjSVDDFmwpoRyQOiagY32aFxia190zIUiaLQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.9354838709677419&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/pzXcQtZJNFv2HrgJ7ZwMzgeB9QByfWTxydpkuOicXKlUjZp9HpFFlT50ibBdIicCSmkW2ibibJpb1M1d5aRe9MfcXbA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;62&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;点个&lt;span data-mid=&quot;&quot;&gt;在看&lt;/span&gt;你最好看&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.3695652173913043&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_svg/sTJptKvBQLK8kA6B8BvyhLBiaicqchp7g1uS8Rv3VRyH7IOz0icMV5eoM23cyJWbicIaSjaxhABIbHvRp2736iaFcmicTq9GXganwC/640?wx_fmt=svg&quot; data-type=&quot;svg&quot; data-w=&quot;46&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d5ecb82355fa10768cfa77dc2adcbc90</guid>
<title>[译] 从 PHP (Laravel) 迁移到 Go</title>
<link>https://toutiao.io/k/kle5cou</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;span&gt;今年早些时候，我做出了一个糟糕的商业决定，我决定用Go重写Laravel应用Boxzilla，&lt;span&gt;虽然没有遗憾，最后效果惊人。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.4725&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vbERicIdYZbAXEG5Nl71yMcutliaSYReNwaevAUPRc4yeXibx2ZjRx3AoQpPTTKKWqGx9rusktV3Z5PfjWO7wGG2g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    仅仅几个星期后我就部署了Go应用程序。构建它是我几个月来最有趣的事情，我学到了很多东西，最终结果是对旧应用程序的巨大改进、更好的性能、更容易的部署和更高的测试覆盖率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    该应用程序是一个相当简单的数据库驱动的API和包含帐户管理等应用程序，用户可以在登录以后下载产品，查看发票或更新付款方式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    Stripe和Braintree用于接受订阅付款。发票使用MoneyBird处理，一些事务性的电子邮件使用Mailgun发送。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    虽然Laravel在这方面做得足够好，但有些事情总是让我感到过于复杂。每隔几个月发布一个新的“主要”版本，如果新的版本包含重大改进，我心里也会觉得这没什么，但是很多时候，感觉都是一些非常简单的改动，例如命名和目录结构进行了更改。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;Why Go？&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;去年，我已经将几种服务转移到了Go上，所以我对这种语言并不是完全陌生。作为销售基于WordPress的产品的开发人员，我的一部分工作是在一个古老的技术堆栈中工作，该堆栈主要关注最终用户。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果我不是自雇人士，我会简单地申请一份新工作来弥补这种缺乏性感技术的现象。作为我自己的老板，我有责任使自己的日常工作变得有趣，而不仅仅是追逐更多的即时资金。如果收入允许（并且确实如此），为什么不找点乐子呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编写Go代码很高兴，工具很棒，不仅开发速度快，而且最终结果通常也很快。刚读完&lt;/span&gt;&lt;span&gt;Go项目的目的(https://golang.org/doc/faq#What_is_the_purpose_of_the_project)，就使&lt;/span&gt;&lt;span&gt;我对语言产生了浓厚的兴趣。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我认为我们会在未来几年内看到大量人从动态类型的语言（如PHP，Python和JavaScript）切换到Go。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;移植代码库&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;将代码迁移到Go中主要包括正确地进行数据库交互以及将Blade模板移植到我们可以在Go中使用的东西。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ORM总是会阻碍我的一件事，因此我选择了可模拟的数据访问层和简单的SQL查询。&lt;/span&gt;&lt;span&gt;使用Meddler&lt;/span&gt;&lt;span&gt;摆脱了一些烦恼：将查询结果映射到结构体中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了支持分层模板和&lt;/span&gt;&lt;span&gt;局部&lt;/span&gt;&lt;span&gt;，我开源了grender(https://github.com/dannyvankooten/grender)，这是基于Go的标准库html / template包的一个小包装。这使我可以相对轻松地将Blade模板文件移植到Go中，因为我可以使用相同的层次结构和部分模板。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了与Stripe集成，有官方的Stripe &lt;/span&gt;&lt;span&gt;-Go(https://github.com/stripe/stripe-go)&lt;/span&gt;&lt;span&gt;软件包。对于Braintree，有一个非正式的&lt;/span&gt;&lt;span&gt;braintree-go(https://github.com/lionelbarrow/braintree-go)&lt;/span&gt;&lt;span&gt;软件包，该软件包被忽略了一会儿，但最近又受到了新的关注。由于到目前为止，在Moneybird中还没有Go软件包来管理发票，因此我构建并开源了&lt;/span&gt;&lt;span&gt;moneybird-go(https://github.com/dannyvankooten/moneybird-go)&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;对比分析&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;由于Go是一种编译语言，具有比PHP更好的标准库，因此像我将要比较的那样比较这两种语言并不是很公平。就是说，我认为分享一些数字会很有趣。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;性能&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;wrk&lt;/span&gt;&lt;span&gt;用于为两个返回登录页面HTML的应用程序执行一些简单的HTTP基准测试。&lt;/span&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt; &lt;/th&gt;&lt;th&gt;&lt;span&gt;并发&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span&gt;平均 潜伏&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span&gt;要求/秒&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span&gt;传输/秒&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Laravel&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;3.87ms&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;261.48&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1.27MB&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;Laravel&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;100&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;108.86ms&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;917.27&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;6.04MB&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Go&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;325.72μs&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;7365.48&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;34.27MB&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Go&lt;/td&gt;&lt;td&gt;&lt;span&gt;100&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;11.63ms&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;19967.31&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;92.91MB&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Go&lt;/td&gt;&lt;td&gt;&lt;span&gt;200&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;37.68ms&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;22653.22&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;105.41MB&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;不幸的是，一旦我将并发“用户”的数量增加到100以上，Laravel应用程序（或PHP-FPM套接字）就一直崩溃。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;NetData&lt;span&gt;提供了以下图表，以查看服务器在所有这些负载下的承受能力。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;100个并发连接的Go程序&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4091666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vbERicIdYZbDro7hdC9AkzC6g4gChia5t2psawy8UKmGYxnEj9FK9pIiaKYibvLBG0MIWU1mQ9jiaDRcT5pwOV63fZQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;100个并发连接的Laravel&lt;/strong&gt; 程序&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4766666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vbERicIdYZbDro7hdC9AkzC6g4gChia5t2sfO5PfpFQmlS8EQvQUR7UlGYbl1hCMqePWuIcYhMaF99XjE1kMrKibg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;请注意，我在运行应用程序的同一台计算机上运行了基准测试，因此这会严重影响两个图表。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;代码行数&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;让我们比较两个应用程序中的代码行，包括所有的依赖项。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ find . -name &#x27;*.php&#x27; | xargs wc -l&lt;br/&gt;156289 total&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;Laravel版本包含超过156.000行代码。这还不包括要&lt;span&gt;运行&lt;span&gt;Laravel&lt;/span&gt;测试等相关的&lt;/span&gt;开发依赖包。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ find . -name &#x27;*.go&#x27; | xargs wc -l&lt;br/&gt;33624 total&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;另一方面，Go版本包含33.000行代码。这是完全相同功能的代码的五分之一。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;让我们在Laravel应用程序中排除外部依赖关系，以便知道我实际写了多少行php。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ find . -name &#x27;*.php&#x27; -not -path &quot;./vendor/*&quot; | xargs wc -l&lt;br/&gt;13921 total&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;多少行Go&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ find . -name &#x27;*.go&#x27; -not -path &quot;./vendor/*&quot; | xargs wc -l&lt;br/&gt;6750 total&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;即使仅查看托管代码行，结果也要稍微多一些。尽管如此，它还是只使用了原来完全相同的应用程序的&lt;span&gt;一半代码&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;测试范围&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;测试是Go中的头等公民，测试文件紧邻实际源文件存在。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;license.go&lt;br/&gt;license_test.go&lt;br/&gt;subscription.go&lt;br/&gt;subscription_test.go&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;这使得应用测试驱动的开发变得异常方便。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在我们的Laravel应用程序中，我们主要进行了集成测试，以检查请求处理程序是否返回正确的响应。总体测试覆盖率很低，主要是由于紧密耦合，而这又主要是我的错。再次编写相同的应用程序确实也有帮助。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;TLDR&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;做了一些您不应该做的事情：用另一种语言重写应用程序，因为我感觉很喜欢。获得了很多乐趣，并且得到了更小，更快的应用程序。&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>