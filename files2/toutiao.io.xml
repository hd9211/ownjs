<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>a4dd78ae28b2445d266bf907c0ded353</guid>
<title>架构设计：数据服务系统 0 到 1 落地实现方案</title>
<link>https://toutiao.io/k/dyd40o2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;h1&gt;&lt;span&gt;一、基于业务&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;数据服务通常有很多种业务模式，也就导致系统的架构与业务都会很复杂，不同的业务都具有自身的能力和复杂度，数据管理本身就是一件不容易的事情，所以在系统架构初期都会考虑服务能力的业务场景：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.07667731629392971&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCe68yS3kiaF7AfHpsFyTJjJdXmianGGW0QbBphib6jsArjnDlQRbc48bXDUAic70O9S8q1jP3MnemTwA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1252&quot;/&gt;&lt;/p&gt;&lt;p&gt;API服务：基于Http模式的数据服务，通过请求获取数据，例如风控模型，评分，反欺诈等各种业务；&lt;/p&gt;&lt;p&gt;平台服务：综合性的服务能力集成系统，客户的自定义服务需求很低，具有完整流程的数据服务能力，例如自动化数字营销平台，提供营销的全流程管理能力；&lt;/p&gt;&lt;p&gt;采集服务：通常客户以埋点的方式提交相关点击事件，采集系统基于全渠道进行汇总分析并向客户反馈；&lt;/p&gt;&lt;p&gt;可视化分析：这里分为两大块，数据分析与可视化，数据可以加载多方数据源联合分析，基于前端组件做高度自动化分析，例如常见的数据洞察系统；&lt;/p&gt;&lt;p&gt;工具私有化：基于积累的技术能力，把数据管理的系统直接销售给客户，部署在客户自己本地的服务上；&lt;/p&gt;&lt;p&gt;数据服务的场景，不同的业务需要各自场景下的数据支撑，但是不同的业务都需要相同的运营，结算，订单等基础功能，理解不同的业务场景，需要找出共同点与不同点，很简单的思路：相同点在公共服务中开发，业务不同点在独立的服务中开发，方便系统的不断扩展与演进。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;二、业务层架构&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;不同的数据服务能力，最大的不同点就是需要依赖核心数据的支撑，从业务层面看系统架构层，还需要的功能复杂公共功能，这些需要在架构初期就考虑好，不然随着业务发展很快就要面临重构问题。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.2733118971061093&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCe68yS3kiaF7AfHpsFyTJjJG1EwjSwZfk8ufxZVmJ5jayyXD2nO1xxXiaTffeA9eAapKia4lOx6ZCqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1244&quot;/&gt;&lt;/p&gt;&lt;p&gt;客户运营：每个客户的接入都需要一套完整的流程，服务说明，计费规则，合同管理，充值，服务开通停用，账单等一系列配套功能，通常都有两个入口：客户登录端，服务方运营端。&lt;/p&gt;&lt;p&gt;支付结算：功能最复杂的系统模块，提供支付能力，例如聚合多个支付渠道，用来解决客户的充值退款，或者服务方自己的支付需求，并提供各种结算账单的数据输出，对账平账能力。&lt;/p&gt;&lt;p&gt;订单管理：客户的每次请求，或者每个服务的使用，产生的计费动作都需要详细的订单记录，涉及单价，单号，时间很多关键因素，作为结算的核心依据，也是业务数据最集中爆发的地方。&lt;/p&gt;&lt;p&gt;权限体系：在数据服务体系中，权限系统的设计更侧重解决公司主体层面的需求，不同的商务团队负责不同的服务运营，客户管理等，所以需要清晰的体系化权限管理，给不同的角色的商务人员分配合理的权限。&lt;/p&gt;&lt;p&gt;日志集成：在详细的日志体系中，正常的业务日志数据可以用来在服务异常时的数据补全分析，异常的日志数据可以给开发用来分析系统问题和瓶颈不断的优化服务能力。&lt;/p&gt;&lt;p&gt;基于业务场景做好服务的划分和设计，以及公共服务的基础构建，确保业务层的架构合理且可扩展，是否合理的基本考量就是，不断的新增业务场景是否需要做系统的大刀阔斧的改版，如果服务能力不断丰富，系统的改造成本很小，自然架构合理。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;三、数据中心&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;不同的业务服务场景需要依赖核心数据能力，这是服务卖点，通常会把支撑服务能力的核心数据单独部署并提供各种服务场景，通常理解为数据中心，同时业务服务自身也会产生各种数据，这里会根据服务的部署方式独立存储。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.11475409836065574&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCe68yS3kiaF7AfHpsFyTJjJvNrcYd7ich5SibSqzicuw5lkuOO9icBeicKSzQQZ3kEWkIXYxfacEew36Ww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1220&quot;/&gt;&lt;/p&gt;&lt;p&gt;服务能力：数据中心作为多个业务公共依赖，不但要提供数据基础的查询能力，在处理海量数据任务时，还需要提供一定的调度和计算机制。&lt;/p&gt;&lt;p&gt;部署方式：根据数据特点通常会以集群、分库分表、OLAP引擎、数仓等多种方式存储，并根据数据特点提供统一的服务能力对业务层开放。&lt;/p&gt;&lt;p&gt;数据更新：数据是需要实时或者定时更新，数据来源通常是经过大数据计算和处理后的各种数据，还有就是业务层校验有误的数据，或者在使用过程不断优化的数据。&lt;/p&gt;&lt;p&gt;数据中心的独立架构部署是非常有必要的操作，大部分的数据都是具有联动性的，数据间的联动处理完全不用耦合到业务层面，数据的流动校正安全性管理等等都可以在数据中心统一管理，规避掉数据混合部署带来的系列复杂问题。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;四、大数据底层&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;数据服务能力的最底层需要海量数据处理的能力做支撑，所以用到很多大数据组件技术，对数据做存储、计算、分析、搬运等等操作。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.08681672025723473&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCe68yS3kiaF7AfHpsFyTJjJeIib8TEXvwcJcKTbxRjbtm8sk1V7pNSpDgVgdtn5x0wppqUxPFqKNPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1244&quot;/&gt;&lt;/p&gt;&lt;p&gt;数据存储：大数据底层最常见的存储就是文件形式，结构化的数据库存储，半结构化的日志型文件，还有一些非结构化数据。&lt;/p&gt;&lt;p&gt;计算能力：对于海量数据的处理需要依赖各种并行计算，离线任务，实时计算等多种方式，达到快速处理的目的。&lt;/p&gt;&lt;p&gt;数据搬运：数据处理完成之后并不会在底层直接提供服务能力，通常会把数据同步到上面数据中心，在对业务提供服务能力，这里搬运可以是数据输出，也可能是待处理的数据输入。&lt;/p&gt;&lt;p&gt;大数据的底层组件则是系统的核心能力，对数据的精准计算分析确保服务的能力，并且不断的对现有架构做自动化和工具化管理，这点非常重要，海量数据管理的流程人工介入越多则说明效率越低下，尤其在底层向数据中心推送数据或者数据接收的过程，需要约定好策略保证数据安全稳定的自动传输。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;五、整体考虑&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;对一个复杂系统的设计，首先最关键的就是清晰的整理出业务模式，对业务模式进行分析，根据业务特点做系统架构可以避免很多弯路，例如上面的数据服务系统：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.575&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCe68yS3kiaF7AfHpsFyTJjJgBhBtV4cKQubAInxm4yIfCelwT6MpEKTUfVZicplbIU3UuVibFEA8soQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;首先从大的层面看，系统拆分业务服务，数据中心，大数据底层能力这三大块，并且要求各个大模块之间不存在强耦合关系，确保模块之间可以独立的扩展；&lt;/p&gt;&lt;p&gt;其次确定各个模块需要的实现的核心功能，业务层保证基本的服务能力，然后把每个业务都需要的基础功能向下抽取封装，拆分出业务服务和公共服务，支撑业务能力；&lt;/p&gt;&lt;p&gt;然后确定各个模块之间协作的方式，例如业务与数据中心的通信能力，接口标准，数据安全等细节，或者数据中心与底层大数据之间的数据搬运模式，确保数据流通能力；&lt;/p&gt;&lt;p&gt;最后各个模块具体的细节实现，这里需要考量的就是根据业务模式，如果可以选择相同的组件和架构方式，尽量统一架构选型和组件依赖，降低不同模块之间的壁垒；&lt;/p&gt;&lt;p&gt;上述完整的系统架构从开始搭建到提供稳定的服务能力，大概耗时七个月的时间，期间不断的演进和升级，并且不断上线新的服务模块并进行系统监控，直至业务服务相对完善和系统相对稳定。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;六、源代码地址&lt;/span&gt;&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;GitHub地址：知了一笑&lt;br/&gt;https:&lt;span&gt;//github.com/cicadasmile/spring-cloud-base&lt;/span&gt;&lt;br/&gt;GitEE地址：知了一笑&lt;br/&gt;https:&lt;span&gt;//gitee.com/cicadasmile/spring-cloud-base&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4Njg0MzYwNw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvBCuF3zfJnqPKpUia4wfn1FUtTHpxxkR5HvbicPgOjibPicX0goMOkny1NdkLAJvBaqrYh3UdwMjiaDQMA/0?wx_fmt=png&quot; data-nickname=&quot;知了一笑&quot; data-alias=&quot;cicada_smile&quot; data-signature=&quot;积累是一个孤独且枯燥的过程&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>88d40aeb127ed0107099af935aff2f87</guid>
<title>书单：互联网企业面试案头书之架构师篇</title>
<link>https://toutiao.io/k/mvtejua</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;preview&quot;&gt;&lt;p&gt;当程序员的发展遇到一定的瓶颈时，很多人会选择架构师的发展路径。&lt;/p&gt;

&lt;p&gt;如果你也想从程序员晋升为架构师，那么希望今天分享的7本“架构”类图书能够帮到你！&lt;/p&gt;

&lt;p&gt;01&lt;/p&gt;

&lt;p&gt;▊《架构整洁之道》&lt;/p&gt;

&lt;p&gt;[美] Robert C. Martin 著&lt;/p&gt;

&lt;p&gt;孙宇聪 译&lt;/p&gt;

&lt;p&gt;鄢倩 校&lt;/p&gt;

&lt;p&gt;整洁之道再续新篇
Bob大叔封山之作
熔举世热门架构于一炉
揭通用黄金法则以真言
左耳朵耗子|余晟倾情作序&lt;/p&gt;

&lt;p&gt;善用软件架构的通用法则，即可显著提升开发者在所有软件系统全生命周期内的生产力。&lt;/p&gt;

&lt;p&gt;Martin在本书中远不只是在为我们提供选项，他几乎是在将软件世界中横跨半个世纪的各种架构类型的经验倾囊相授，目的是让读者既能阅尽所有架构选型，又可通晓其如何决定成败。Martin也的确不负厚望，本书中充满了直接而有效的解决方案，以供读者应对自己面临的真正挑战——那些或最终成就或彻底破坏项目的挑战。&lt;/p&gt;

&lt;p&gt;02&lt;/p&gt;

&lt;p&gt;▊《大型网站技术架构：核心原理与案例分析》&lt;/p&gt;

&lt;p&gt;李智慧 著&lt;/p&gt;

&lt;p&gt;大型网站技术，开山之作
业内好评爆棚，畅销经典
作者是拥有核心技术部门的一线工作经验，直接体验了大型网站构建与发展过程中的种种生与死，蜕与变，见证了一个网站架构从幼稚走向成熟稳定的历程。&lt;/p&gt;

&lt;p&gt;没有晦涩难懂的术语，没有诘屈聱牙的文句，没有故弄玄虚的观点……明明白白的语句，清清楚楚的文法，干净利落的建议——让读者直接体会网站架构的紧要处，不容马虎的关键点——这恰好是一个优秀的网站架构所必备的要素。&lt;/p&gt;

&lt;p&gt;如果说“水不在深，有龙则灵”，那么对于想了解网站架构的读者而言，这本书恰好是“书不在多，有它则行！”。&lt;/p&gt;

&lt;p&gt;03&lt;/p&gt;

&lt;p&gt;▊《从零开始学架构：照着做，你也能成为架构师》&lt;/p&gt;

&lt;p&gt;李运华 著&lt;/p&gt;

&lt;p&gt;自成一派的架构设计方法论
教你体系化的架构设计技能
架构设计是技术人员成长和晋升过程中必须掌握的技能，但目前业界缺乏架构师学习和培养方面体系化的知识和实践的指导，本书结合作者多年在架构设计方面的学习、思考、实践，提出了完整的一套架构设计方法论，包括什么是架构、架构设计的目的、架构设计原则、架构设计流程、架构设计模式和技巧、互联网公司技术演进等内容。这套架构设计方法论适合不同行业，比如互联网、企业应用等；也适合不同的技术领域，比如后端架构设计、前端架构设计、客户端架构设计、测试平台架构设计、运维平台架构设计等。&lt;/p&gt;

&lt;p&gt;04&lt;/p&gt;

&lt;p&gt;▊《业务架构 应用架构 数据架构 实战》&lt;/p&gt;

&lt;p&gt;温昱 著&lt;/p&gt;

&lt;p&gt;每一页都是实践经验的总结，参考性超强
每一页都简洁明了重点突出，可读性超强
大局＋架构＋文档，三大篇，操作性超强&lt;/p&gt;

&lt;p&gt;本书思路清晰，每一个概念、每一项方法都给出了简要透彻的阐述。同时又结合实践，给读者看得见、摸得着的项目实感，帮助读者迅速上手。本书还有一个作用，就是能提升读者对IT及其业务的认知层次，为长远职业发展提供助力。&lt;/p&gt;

&lt;p&gt;05&lt;/p&gt;

&lt;p&gt;▊《架构修炼之道：亿级网关、平台开放、分布式、微服务、容错等核心技术修炼实践》&lt;/p&gt;

&lt;p&gt;王新栋 著&lt;/p&gt;

&lt;p&gt;熟练地驾驭分布式系统设计
突破架构能力瓶颈
本书结合实际的生产实践，分别对网关、平台开放、分布式、MQ、RPC、I/O、微服务、容错的内容做了详细介绍。其中的内容不限于概念，而是会下沉到实践背后的感悟与总结。比如本书详细阐述了网关系统是如何“抗量”，又是如何容错的，以及在每次大促中的备战经验。其他内容也是如此，基于实践，源于实践，比如微服务的实战案例、MQ的各种功能场景、消息推送的实践等讲的皆是实践之道。&lt;/p&gt;

&lt;p&gt;希望读者可以通过本书了解互联网常用架构知识背后的原理及解决问题之道。&lt;/p&gt;

&lt;p&gt;06&lt;/p&gt;

&lt;p&gt;▊《架构之美：行业思想领袖揭秘软件设计之美（评注版）》&lt;/p&gt;

&lt;p&gt;[美] Diomidis Spinellis，Georgios Gousios 著&lt;/p&gt;

&lt;p&gt;张逸 译&lt;/p&gt;

&lt;p&gt;全面体现了架构设计中的简洁之美、清晰之美、风格之美、灵活之美和演进之美
评注者用评注的形式，帮助读者更进一步理解经典
这是荟萃了软件架构领域各位思想领袖真知灼见的经典之作，内容覆盖了软件架构的方方面面，包括架构理论、企业架构、系统架构、应用架构等。这些架构大师们用简洁的文本、真实的案例向读者勾勒出美丽架构的模样，并由此提出设计美丽架构的原则、实践与演进过程。&lt;/p&gt;

&lt;p&gt;07&lt;/p&gt;

&lt;p&gt;▊《软件架构设计：程序员向架构师转型必备（第2版）》&lt;/p&gt;

&lt;p&gt;温昱 著&lt;/p&gt;

&lt;p&gt;详解软件架构设计实践过程及方法
成为软件架构设计师必读书
本书围绕“软件架构设计”主题，从“程序员”成长的视角，深入浅出地讲述了架构师的修炼之道。从“基础篇”、到“设计过程篇”、到“模块划分专题”，本书覆盖了架构设计的关键技能项，并且对于架构设计过程中可能出现的各种问题给与了解答。
　　本书对于有志于成为架构师的程序员们具有非常有效的指导意义，对于已经成为架构师的同行们系统化规范架构设计也是一本很好的教材。&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>836ed1f9bd6b0caabdc32b871d780f3b</guid>
<title>开源的 Switch 模拟器：GitHub 热点速览 v.21.12</title>
<link>https://toutiao.io/k/0lpdz6g</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.66640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIHGPqX7fJEp1uf5oX9QcjRSR5icFF86Yjyj1T3mSUhYr41ALG5we258mg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;作者：HelloGitHub-小鱼干&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;脸滚键盘操作选手小鱼干这里要推荐一个超酷 Switch 模拟器，不能埋没你的游戏天赋。Ryujinx 是一个 C# 写的 Switch 模拟器，1700+ 游戏可以在上面运行。如果你访问他们 GitHub 仓库图片加载过慢，GitHub520 这个助力 GitHub 图片加载速度的项目能让你直观地 get Ryujinx 的强大。而 dotfiles 这个文件管理工具，则能让你快速找到 Ryujinx 相关文件。虽然 Ryujinx 用英文编写的 README 和文档，@ fuwafuwa 的点单——英文学习项目 English-level-up-tips-for-Chinese 能让你无压力阅读 Ryujinx 英文指南。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;以下内容摘录自微博&lt;/span&gt;&lt;span&gt;@HelloGitHub&lt;/span&gt;&lt;span&gt; 的 GitHub Trending 及 Hacker News 热帖（简称 HN 热帖），选项标准：&lt;/span&gt;&lt;code&gt;&lt;span&gt;新发布&lt;/span&gt;&lt;/code&gt;&lt;span&gt; | &lt;/span&gt;&lt;code&gt;&lt;span&gt;实用&lt;/span&gt;&lt;/code&gt;&lt;span&gt; | &lt;/span&gt;&lt;code&gt;&lt;span&gt;有趣&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，根据项目 release 时间分类，发布时间不超过 14 day 的项目会标注 &lt;/span&gt;&lt;code&gt;&lt;span&gt;New&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，无该标志则说明项目 release 超过半月。由于本文篇幅有限，还有部分项目未能在本文展示，望周知 🌝&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIHInCrMJWPjEQ2TmEIscFRUgHgfU9Mt7QtVZyQCj2xkdT34Q61jKlyHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.5022573363431151&quot; data-w=&quot;886&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;1. 本周特推&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在开始本周的特推之前，如果你有什么想要的 GitHub 项目，记得留言呀~你的留言超重要 (≧▽≦)&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1.1 Switch 模拟器：Ryujinx&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;本周 star 增长数：2,050+&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Ryujinx 使用  C# 制作的 Switch Nine 模拟器。它支持你在上面试玩 1,700 + 款可玩的 Switch 游戏，比如动森、怪物猎人等 Switch 热门游戏。【提前剧透】本周日晚 20:30，你有一个免费领走 Switch 的机会：关注我们 HelloGitHub 视频号参与 HG 五周年直播抽奖(≧▽≦)&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;GitHub 地址→&lt;/span&gt;&lt;span&gt;https://github.com/Ryujinx/Ryujinx&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIHdOthWkibgicrUbUHxh5yLaDdsaK48l5DCEDRAGEhRbcK6RVTKmNLsicJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6833333333333333&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1.2 电话号码 OSINT 工具：PhoneInfoga&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;本周 star 增长数：850+&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;PhoneInfoga 是一个老牌的电话信息收集工具，它收录了大量电话号码的公开来源情报（OSINT），能帮你检测电话号码是否可用，收集国家，线路类型和运营商等标准信息等等功能。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;GitHub 地址→&lt;/span&gt;&lt;span&gt;https://github.com/sundowndev/PhoneInfoga&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIHk46uhEQs6Jb7hBZ8ZpbicZOCUGma9W8l6aIPjianib3mWOb33rgWuXLOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.5083333333333333&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;2. GitHub Trending 周榜&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.1 好用的 Bloomberg 终端：GamestonkTerminal&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;本周 star 增长数：1,850+&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;GamestonkTerminal 一款很棒的股票和加密市场终端，作者出于好玩开发了它，虽然用上它之后股市一片绿油油，但是不妨碍它是一款高颜值、好用的 Bloomberg 终端。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;作为一个基于 Python 开发环境的软件，GamestonkTerminal 提供了大量数据科学（Pandas、Numpy、Scipy、Jupyter）、机器学习（Pytorch、Tensorflow、Sklearn、Flair）和数据采集 （Beautiful Soup，和许多第三方 API）方面的数据 library 访问权。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;GitHub 地址→&lt;/span&gt;&lt;span&gt;https://github.com/DidierRLopes/GamestonkTerminal&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.49453125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIHn0fb4NLcIPLjehtCo1apBSw8NkkpicLRIUyXolQFSrCiaqQPlic296fibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.2 当个万星 Star 贡献者：first-contributions&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;本周 star 增长数：2,550+&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;first-contributions 是一个帮助新手学习如何为开源项目做贡献的仓库，你可以往上面提交 pr 熟悉 git 操作，提交成功之后你就成为万星项目贡献者了（该项目目前标星 17k）。除此之外，first-contributions 还收录了 VS Code、GitHub 桌面版、GitKraken、IDEA 等工具的使用教程。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;GitHub 地址→&lt;/span&gt;&lt;span&gt;https://github.com/firstcontributions/first-contributions&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIH3MyIP3o67CyAPm6sqxCJJfeBsJVk7eodPbHCWbKiauT8ftHZ1872BKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.5861111111111111&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.3 文件管理：dotfiles&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;本周 star 增长数：850+&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;dotfiles 是一个老牌的文件管理工具，之所以称它为文件管理工具是因为你使用它之后，可以快速地构建自己风格的文件系统，按照自己的使用习惯设置电脑的任意文件，包括隐藏文件等。一旦你更换电脑之后，可以使用 dotfiles 一键还原你的文件设置。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;GitHub 地址→&lt;/span&gt;&lt;span&gt;https://github.com/mathiasbynens/dotfiles&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIHdUo9M2G2WoAWPsIg0pnWKwYPjLLLH9J8hwaTUGBDc1JKkyHq2TeiaIQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.5698757763975155&quot; data-w=&quot;644&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.4 脚本静态分析：shellcheck&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;本周 star 增长数：550+&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;shellcheck 是一个基于 GPLv3 协议的脚本静态分析工具。它能给出 bash/sh 脚本相应的 warning 信息和修改意见。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;GitHub 地址→&lt;/span&gt;&lt;span&gt;https://github.com/koalaman/shellcheck&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIHMU7YjA1o5EnM0Ymnl8ZmZulJgqlXwjYyJD1s2GCJ1vhH1EYFb2ZMgw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.3641304347826087&quot; data-w=&quot;552&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.5 GitHub 图片加速：GitHub520&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;本周 star 增长数：600+&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;GitHub520 是一个解决 GitHub 图片访问过慢问题的项目。你无需安装任何程序，通过修改本地 hosts 文件即可加速 GitHub 图片的加载速度。Btw，这个项目也是 HG 发起人开源的项目。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;GitHub 地址→&lt;/span&gt;&lt;span&gt;https://github.com/521xueweihan/GitHub520&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIHJ03iaJGGO97AoEvaQTbfmThOJdLGMzEjBbr3yIhbWhK1iaCFVQyqwYDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3. 你的点单&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;细心的小伙伴这时候可能发现了，为什么原先第二模块的点单系统为什么挪到了第三个模块。因为许久没开张，一时间没习惯直接 cv 了上周的文章结构。话不多说，开始处理“订单”。感谢 @fuwafuwa，@沈瑗杰，@南联 三位小伙伴的下单。本着没用过不瞎 bb 的原则，&lt;/span&gt;&lt;code&gt;&lt;span&gt;开源的轻量化的 Python gui 库&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 只能 miss 了。&lt;span&gt;本人没用过 GUI 库&lt;/span&gt;，有轻量级 Python GUI 项目推荐的大佬记得评论区留言呀~~&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.1 全面的英文学习教程：English-level-up-tips-for-Chinese&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;fuwafuwa 的点单&lt;/strong&gt; English-level-up-tips-for-Chinese 是一名开发者为备考托福的女神“指点”英文学习方法后整理的英文进阶学习资料。它会教你如何更好地学习英文，通过单词、阅读、口语、听力等四个方面多维度提升英文水平。虽然是个好教程，但是学习贵在坚持，希望 fuwafuwa 坚持，加油鸭 (^o^)/&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;GitHub 地址→&lt;/span&gt;&lt;span&gt;https://github.com/byoungd/english-level-up-tips-for-Chinese&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIH2Cp7tfUvI2pibvaKFSALoU9JIhC4vkWJeYicCSkzBibkqL4HUHaoF0IzA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.6268518518518519&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.2 新手友好的 AI 识别：faceai&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;南联的点单&lt;/strong&gt; AI 识别其实类别挺多的，比如人脸识别、车辆目标检测、文字识别等等，小鱼干这边也会整理一份 AI 识别的专题文章，在四月结束之前发布在 HG 公众号。今天先推荐一个 HG 月刊之前收录的项目 faceai，一个入门级 AI 项目以及教程，内容涵盖：人脸、视频、文字的检测和识别。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;推荐这个开源项目不是因为它的内容强大，而是它的教程写的实在太好了，真 · 入门级。手把手教你如何使用这个项目，做出上述功能来。在每篇功能文章的教程里，不仅仅写了每个功能的技术实现方案，还有具体重点关键代码的注释和解释以及具体实现，让你非常轻松的能够看懂、学习和使用。——来自 HG 月刊作者 卤蛋 的推荐语。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;GitHub 地址→&lt;/span&gt;&lt;span&gt;https://github.com/vipstone/faceai&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPmicNybo5icGOH0q3sm9pVIHPvJ6DqQZ2XvHhubKflSndwrrQD1tdAH2Mc15lKlHFIT9nIiaD2icEcKg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;1.2679738562091503&quot; data-w=&quot;306&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;4. 往期回顾&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;最后，记得你在本文留言区留下你想看的主题 Repo（限公众号），例如：量化交易，AI 换头等等。👀 和之前的送书活动类似，留言点赞 Top5 的小伙伴(&lt;span&gt;棒&lt;/span&gt;），小鱼干会努力去找 Repo 的^^&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;以上为 2021 年第 12 个工作周的 GitHub Trending 🎉如果你 Pick 其他好玩、实用的 GitHub 项目，记得来 &lt;/span&gt;&lt;span&gt;HelloGitHub&lt;/span&gt;&lt;span&gt; issue 区和我们分享下哟 🌝&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;HelloGitHub 交流群现已全面开放，添加微信号：HelloGitHub001 为好友入群，可同前端、Java、Go 等各界大佬谈笑风生、切磋技术~&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;span&gt;- END -&lt;/span&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4d19d796e32aa256a2aeee18d8ba0d90</guid>
<title>生产变更的几点感悟</title>
<link>https://toutiao.io/k/5xabuo0</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section&gt;我写文章主要写【道、法、术、器】四种内容，平时法、术、器写的多一些。本篇是道篇，有的朋友可能会觉得没啥干货，提前说明下，节约一些朋友的时间。有兴趣的朋友听我慢慢道来~~&lt;/section&gt;&lt;section&gt;说明：本文中的生产，代表软件部署的正式环境，又称线上环境或生产环境。&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;生产变更在确保稳定性方面的演进&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;8年之前，个人认为哈：中国的软件和互联网公司对生产变更还没有很高的要求。大家更关心功能是否实现、技术栈如何、架构怎样。功能上线了，也没有什么多维度的监控报警。靠的是最终用户打电话过来报bug。&lt;br/&gt;&lt;/section&gt;&lt;section&gt;其实，那时候外企是很注重测试的，&lt;span&gt;测试也细分为冒烟测试、回归测试、黑盒测试、白盒测试、&lt;/span&gt;&lt;span&gt;单元测试、集成测试、系统测试和验收测试、&lt;/span&gt;&lt;span&gt;随机测试、探索性测试和安全测试。中国也在不断的学习借鉴。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;后来，特别是随着支付领域的崛起，大家对生产更加敬畏。建立起了多套发布环境：开发环境、测试环境、预发布环境、生产环境。为了防止多个版本功能不同影响测试效果，测试环境会用【泳道】技术，保证多个环境之间互不影响。一个功能经过多个环境的重重考验才能最终上线。&lt;/section&gt;&lt;section&gt;一直在完善的自动化测试也初见成效：sonar静态代码检查、jar包漏洞扫描、安全风险扫描、单元测试扫描……再加上变更流程的规范：低峰期上线、封禁期等。&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;生产变更的薄弱环节&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;这些还不够。个人观点，从变更的稳定性上来说，有两项极为薄弱：一项是生产变更中人的因素把控，另外一项是基础数据变更的管控。&lt;/section&gt;&lt;section&gt;对于第一项，有的公司做到了，但是成本极高，不是一般公司可以承受的：所有的生产变更要经过部门专家团评审、公司专家团评审、超级专家评审。讲述变更的人并不是一线开发，而是团队的专家或者负责人。他们必须比一线开发更了解变更的内容、影响、实现、变更过程、应急预案，并且思路要清晰无破绽，说服所有人，才能证明上线是可以把影响降到最低的。&lt;/section&gt;&lt;section&gt;这对我的触动很大。之前我自己总结过怎么上线可以不出问题。我总结了三问：你确认这次变更是做正确的事吗？你确认上线不会出问题吗？如果上线出了问题怎么办？这个方法是没错的，但是这里面有个很大的问题：一个人的思维是有盲区的，一个人是总是会出现意志的薄弱期。而三层专家团就像是用最好的硬件做成多活容灾服务器集群，SLA瞬间提升好几个9。&lt;/section&gt;&lt;section&gt;基础数据举例来说：企业的加密证书号、上下游http链接、数据字典。这些数据可能是配置数据，一个系统只有一两条，比如一个系统的SSL证书。也可能有几百几千条，比如服务治理系统里存的服务名。它们的变更出现问题带来的影响可能比生产变更更大：比如我们平时看到的收款二维码代表一个收款账户，如果把某商家的收款账户改错了，导致所有的钱打到了错误的商户上。&lt;br/&gt;&lt;/section&gt;&lt;section&gt;基础数据这么重要，它的变更怎么来把控呢？&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;基础数据变更管控思考&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;基础数据需要遵循安全合规和最小够用的原则。&lt;/section&gt;&lt;section&gt;安全合规是指遵循国家法律法规、管理制度，符合国家及行业标准规范，建立健全数据安全管理长效机制和防护措施，通过技术手段将原始信息脱敏，并与关联性较高的敏感信息进行安全隔离、分散存储。严控访问权限，严防数据泄露、篡改、损毁与不当使用，依法依规保护数据主体隐私权在数据管理与应用过程中不受侵害。&lt;br/&gt;&lt;/section&gt;&lt;section&gt;最小够用是规范数据使用行为，严控数据获取和应用范围，确保数据专事专用、最小够用，杜绝过渡采集、误用、滥用数据，切实保障数据主体的数据所有权和使用权。&lt;br/&gt;&lt;/section&gt;&lt;section&gt;在上面原则基础上，下面是我对一个数据变更管控系统的规划：&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9378531073446328&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlibYcJ6ynhJEsTRMWNA5SQM3RHu2KfNzo8Es4IJDjQQ07mEG4IwtPN3ltdPtdMUvoqoL0NCVlr09Ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;708&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;后记&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;我以前有段时间，会在写文章的最后加一句话的总结。后来干脆出了几期三言，每期三句话。我的初衷有两方面：一方面是正确的理念被灌输多了，人会朝着正确的方向走。另一方面是有时候一句名言给人很大启发或者在关键时刻给人以正确的引导。后来发现，写的多了，自己都记不住，理解也很肤浅。【敬畏生产】这句话可能要花很多年的时间才能真正感受到它的分量：&lt;br/&gt;&lt;/section&gt;&lt;section&gt;敬畏生产=生存指南&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;感谢朋友们一直以来的支持，大家知道我的公众号不接广告，但是很长时间一直开启赞赏功能，开启的原因很简单：点这个按钮就不用手输作者名了，方便【捂嘴笑】。但是真的感谢大家的支持，有几个朋友的昵称我记得很清楚：休几天假再上班我会忘记下地铁从哪个出口走，但是我却记得那几个朋友的昵称。我至今为止收到的所有赞赏已经全数(我老公凑热闹给我的不算)通过XX宝爱心捐献了，这是大家的爱心，感谢。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;推荐阅读&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2/&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>828fddbd69db0a5fd04cb3687f0a983a</guid>
<title>技术展望 | 实时互动场景下，音频的技术变迁与机遇</title>
<link>https://toutiao.io/k/ba5j4qf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-id=&quot;97593&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.2173913043478262&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YO07vjlZVBEciagUfdyeF7fl6ukCHoDGhVhBh7lXTUQjb9RB9yUXdaI7w6QTR2qEapYicGVn4elicdQI3yB1ricQhA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;23&quot; data-width=&quot;100%&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p&gt;线上会议、在线教育、电商直播等多个场景的兴起，也使得实时互动技术从幕后走到台前，得到了更多人的关注。编解码、网络传输、计算机视觉等 RTE 相关的一系列技术也正焕发出更强的生命力。2021 年，在深度学习、5G 等技术的加持下，RTE 会进一步催生哪些可能？&lt;br/&gt;&lt;br/&gt;声网Agora 开发者社区联合 InfoQ 共同策划，邀请了声网Agora 开发者社区中的多位技术专家，从视频传输、计算机视觉、编解码标准发展、WebRTC、机器学习、音频技术等角度，共同撰写「2021 实时互动技术展望系列」，一窥技术新趋势。&lt;strong&gt;本文源于对声网Agora 音频体验与工程总监陈若非的采访。本系列内容由声网 Agora 开发者社区 与 InfoQ 联合策划，并由 InfoQ 审校，&lt;strong&gt;&lt;span&gt;首发于 InfoQ&lt;/span&gt;&lt;/strong&gt;。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-type=&quot;paragraph&quot;&gt;&lt;span&gt;音频技术中有很多细节会影响到实时互动的体验。&lt;/span&gt;&lt;span&gt;随着技术和应用场景的变化，音频也正在与更多的学科、技术结合。&lt;/span&gt;&lt;span&gt;在实时互动场景下，哪些因素会影响音频的体验？&lt;/span&gt;&lt;span&gt;相比于视频技术，音频技术是否发展较慢？&lt;/span&gt;&lt;span&gt;面向 RTC 场景，音频技术又需要作出哪些改变？&lt;/span&gt;&lt;span&gt;......为了解答这些问题，我们采访了声网 Agora 音频体验与工程总监陈若非，请他来聊一聊在实时互动场景下音频技术的变迁与机遇。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;Q：相对于研究网络架构、大前端等方面的工程师来讲，研究音频的工程师比较少。具体来讲，音频工程师都会研究哪些相关技术？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-type=&quot;strong&quot;&gt;陈若非：&lt;/span&gt;声音是信息和情感传递的载体，所以音频相关的研究基本会围绕如何让信息和情感更好的被传递和感知理解展开的。音频领域相对专业细分，但是我们细挖一下就会发现音频相关的研究方向其实很多，涉及到的交叉学科也很广。从交互对象来说我们可以分为两类：人机交互的音频和人人交互的音频。从交互的实时性来分，又可以分成实时的交互和非实时的交互。人机交互主要研究如何让机器更好的理解声音和生成声音，通过 ASR、MIR、TTS 等技术来实现人类希望机器完成的任务。人人交互的部分更多和人的感知系统关联，其优化目标会围绕如何让人更好的感知音频来展开。实时的人人音频交互又在此基础上提出了更多的约束条件，优化需要用更低的延时、更小的计算量和因果系统下展开。我所在的声网就主要聚焦于实时互动音频领域的研究，所以我们会从采集播放、编解码、前后处理、传输的全链路去研究如何在尽可能低的延时和计算量下提供更好的音频互动体验。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Q：聊技术变迁之前，首先梳理一下概念，在实时互动的场景下，哪些因素会影响音频的体验？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-type=&quot;strong&quot;&gt;陈若非：&lt;/span&gt;实时互动音频是端到端，嘴到耳的体验，所以全链路上所有的组成部分都有可能影响音频体验。我们可以从采、播、滤、压、传五个方面去分解技术对音频体验的影响。首先说采集，不同麦克风的声学属性差异就对音频体验有决定性的影响，从拾音的距离，方向性到精度。被拾取的声音信号经过模数转换，信号采样也会造成声音的损失，采样率越高声音的细节就会保留的更好。所以一个高质量的麦克风会从源头上提供更好的音频源。类似的，一个高质量的播放设备可以更好的保留更多声音细节。然后前后处理是音频链路上非常重要的一环，大家常听到的 3A 技术都属于这个范畴，前后处理对原始采集的信号或者即将要播放的信号做二次处理，来滤除其中的干扰信号，比如回声、噪音、杂音、啸叫等，同时对目标的音频做音量和听感上的增强。另外在一些音效玩法里，我们也会通过对信号的处理实现变声、美声等特定声音效果。再说下编解码和传输，这两者是强耦合的。原理上编码的采样率和码率越高，声音的保真度就更好，听端的体验也更好。但现实中网络的带宽是有限制的，还会经常出现丢包抖动等不利情况。好的编解码算法可以通过对声学模型和信息冗余的深入理解，在相对低的码率下实现高品质的声音保留，从而保证在各种弱网情况下的稳定表现。同时我们也需要通过开发信源信道的弱网对抗技术，在保证低延时的基础上，减少丢包抖动带来的听感影响。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Q：行业中有种看法，认为音频技术相对于视频技术，似乎发展会稍慢一些？你怎么看待目前音频技术的发展？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-type=&quot;strong&quot;&gt;陈若非：&lt;/span&gt;技术的进步都是需求推动的。电话时代的音频技术曾经经历火热的发展，一些经典理论如线性预测、自适应滤波，很好的解决了一些基础可用的问题，很多技术到今天还在被沿用。近几十年 VOIP 的技术也得到了长足的发展，我们今天看到 VOIP 的分钟数能在通信领域占据越来越大的份额，背后也离不开音频研究人员长期的扎实工作和持续进步。音频需要较高的技术门槛，全链路的木桶效应明显，设备耦合重碎片化严重，改进主观不易被感知，这些因素都决定了音频想要出成果需要坐的住冷板凳，需要长期主义的坚持。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;近些年 AI 技术的兴起给音频注入了新的活力，也给很多长时间不好解决的问题提供了新的思路。人机语音交互成为了一个音频领域新的热点，相关的技术也蓬勃发展，目前在识别、合成等领域都取得了长足的进步。而在最近的几年，也看到了不少 AI 技术和 RTC 领域结合的实践成果，让人看到了进一步提升音频体验的巨大空间。从外部环境来看，在看腻了千人一面的直播后，越来越多的人开始喜欢心理包袱更小，想象空间更大的音频社交，近期的行业里也开始出现新的浪潮。相信在这种内外因的结合下，会有更多的人开始研究实时互动音频的体验，也非常期待这个行业会给大家带来不一样的新体验。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Q：从实际来看，目前音频在实时领域还存在哪些技术挑战？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-type=&quot;strong&quot;&gt;陈若非：&lt;/span&gt;实时互动音频领域还有很多技术挑战需要我们的攻克。我这里提两个大点。第一，碎片化。传统的手机厂商是一台台调试算法和逐一通过声学测试出厂的。如果我们要在不同设备、环境、网络条件下提供一致性的高质量音频体验，我们就需要寻找新的突破。在接下来万物互联的时代，这种需求会愈加强烈，而这方面技术的突破会带来巨大的价值。第二，主观性。音频体验是一个非常主观的存在，每个人的感知差异和喜好也迥异。我们需要找到更好的方法来匹配这种个性化的喜好和提供更好的量化评价体系。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Q：基于你对业界、学界的观察，你认为音频技术面向 RTC 场景，接下来需要作出哪些改变？（如算法、技术的结合等）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-type=&quot;strong&quot;&gt;陈若非：&lt;/span&gt;我认为实时互动音频的未来应该有下面三个部分。第一，AI 和信号处理的深度融合。经典的信号处理和声学模型已经能帮我们解决很多问题，当然也不少解决不好的问题。在 AI 的有效融合下，可以有效的补充传统算法的不足，在合理的代价下更好的解决我们的问题，而非简单视 AI 为灵丹妙药包治百病。第二，符合时代的评价标准。目前很多音频标准是给通讯设计的，真正如聚一堂的互动体验需要对应的评价标准，如何更好的评价互动性，沉浸感是我们需要去探索的地方。第三，真正的沉浸感和伴随感。人们开始不满足于单纯的信息交互，进一步的追求面对面的互动体验和情感伴随，而随着网络和设备条件的进一步成熟，这种未来也成为可能。音频全链路都需要升级，从声场的采集到还原，甚至增强现实，来创造出真正沉浸式伴随的体验，这也会将会是一条漫长的探索之路。我们在声网一直致力于探索这些长年存在的行业难题，也欢迎各路有想法有追求的朋友联系我，共同交流探索，共同敲开未来音频之门。&lt;/span&gt;&lt;/section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;87704&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-bcless=&quot;darken&quot; data-bclessp=&quot;20%&quot; data-width=&quot;90%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;本系列相关阅读&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span hm_fix=&quot;313:362&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIwNzA1OTA2OQ==&amp;amp;mid=2657215253&amp;amp;idx=1&amp;amp;sn=9ec7f2da59954dfd040e97c8264c8248&amp;amp;chksm=8c8d6207bbfaeb110ff8a12cdf4ffc3be6be22cf9bb6c622803263326094ba4e2e0057a4f581&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2021 技术展望 | 走向未来的实时生成技术&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;2021 技术展望 | 走向未来的实时生成技术&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIwNzA1OTA2OQ==&amp;amp;mid=2657215309&amp;amp;idx=1&amp;amp;sn=7c25ec3689a7338ca7e58719b8f98ad0&amp;amp;chksm=8c8d625fbbfaeb492d4a10fccf0d6cb490e9b4ff642a0cbc2da425193d796dbe4c3f8b628d14&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2021 技术展望 | 弱网下的极限实时视频通信&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;2021 技术展望 | 弱网下的极限实时视频通信&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIwNzA1OTA2OQ==&amp;amp;mid=2657215314&amp;amp;idx=1&amp;amp;sn=464575d273ede0a461fdffb22c8407f8&amp;amp;chksm=8c8d6240bbfaeb5656784cc9ccbcd4411828ef0178274435f9ab7c770dde02188446cd34c439&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2021 技术展望 | 5G 将会倒闭传输协议、算法做出更多改进&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;2021 技术展望 | 5G 将会倒逼传输协议、算法做出更多改进&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIwNzA1OTA2OQ==&amp;amp;mid=2657215371&amp;amp;idx=1&amp;amp;sn=c20f0717c8c66decb63a5bcd342c786e&amp;amp;chksm=8c8d6299bbfaeb8f4b8d3aa95b8d4ab7c9ca4596152accdfb9b2f3a492352908dcc8ddcbdffa&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2021 技术展望 |AV1 在 RTC 应用实践中的现状与展望&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;2021 技术展望 |AV1 在 RTC 应用实践中的现状与展望&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-type=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3037037037037037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YO07vjlZVBEHqOZjJmEPvV8JHfEDRRkq4aQIgGKpLLGE7KUcBVJVMhkRibEKbYLzKkOYzMbia7B90GEslXrkCYUg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>