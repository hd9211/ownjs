<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>9034a34e03d66e13f69f724d3094e887</guid>
<title>[推荐] Go 业务开发中常用的几个开源库</title>
<link>https://toutiao.io/k/4hr4ykg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;哈喽，大家好，我是&lt;code&gt;asong&lt;/code&gt;。拖更了好久，这周开始更新。&lt;/p&gt;&lt;p&gt;最近总有一些初学&lt;code&gt;Go&lt;/code&gt;语言的小伙伴问我在业务开发中一般都使用什么web框架、开源中间件；所以我总结了我在日常开发中使用到的库，这些库不一定是特别完美的，但是基本可以解决日常工作需求，接下来我们就来看一下。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;Gin&lt;/code&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Gin&lt;/code&gt;是一个用&lt;code&gt;Go&lt;/code&gt;编写的&lt;code&gt;Web&lt;/code&gt;框架，它是一个类似于&lt;code&gt;martini&lt;/code&gt;但拥有更好性能的&lt;code&gt;API&lt;/code&gt;框架。基本现在每个&lt;code&gt;Go&lt;/code&gt;初学者学习的第一个&lt;code&gt;web&lt;/code&gt;框架都是&lt;code&gt;Gin&lt;/code&gt;。在网上看到一个关于对各个Go-web框架受欢迎的对比：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-fileid=&quot;100001887&quot; data-ratio=&quot;0.3218283582089552&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CqB2u93NwB8wnpZqk8mDTibMyUsE0bhGEOyI5V43z5WAshfFx69VwbI8uia30qSLQXtePLBIhJic9BM3gK6mBiajicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1072&quot;/&gt;&lt;figcaption&gt;来自网络&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以看到&lt;code&gt;Gin&lt;/code&gt;在社区受欢迎排第一，Gin 框架往往是进行 Web 应用开发的首选框架，许多公司都会选择采用&lt;code&gt;Gin&lt;/code&gt;框架进行二次开发，加入日志，服务发现等功能，像Bilibili 开源的一套 Go 微服务框架 Kratos 就采用 Gin 框架进行了二次开发。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;学习&lt;code&gt;Gin&lt;/code&gt;通过他的官方文档就可以很快入手，不过文档时英文的，这个不用担心，我曾翻译了一份中文版，可以到我的公众号后台获取，回复【gin】即可获取。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;github地址：https://github.com/gin-gonic/gin&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;zap&lt;/code&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;zap&lt;/code&gt;是&lt;code&gt;uber&lt;/code&gt;开源的日志库，选择&lt;code&gt;zap&lt;/code&gt;他有两个优势：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;它非常的快&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;它同时提供了结构化日志记录和printf风格的日志记录&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大多数日志库基本都是基于反射的序列化和字符串格式化的，这样会导致在日志上占用大量&lt;code&gt;CPU&lt;/code&gt;资源，不适用于业务开发场景，业务对性能敏感还是挺高的。&lt;code&gt;zap&lt;/code&gt;采用了不同的方法，它设计了一个无反射、零分配的 JSON 编码器，并且基础 Logger 力求尽可能避免序列化开销和分配。通过在此基础上构建高级 SugaredLogger，zap 允许用户选择何时需要计算每次分配以及何时更喜欢更熟悉的松散类型的 API。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;zap&lt;/code&gt;的基准测试如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-fileid=&quot;100001885&quot; data-ratio=&quot;0.5942275042444821&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CqB2u93NwB8wnpZqk8mDTibMyUsE0bhGEibhiattTHJRP6aXQOAYyqTUScGmfDICWABrwOPOpL0UtMBG32Nib8JiaTQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;589&quot;/&gt;&lt;figcaption&gt;来自官方文档&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看出&lt;code&gt;zap&lt;/code&gt;的效率完全高于其他日志库，选谁不用我明说了吧！！！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;github地址：https://github.com/uber-go/zap&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;jsoniter&lt;/code&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;做业务开发离不开&lt;code&gt;json&lt;/code&gt;的序列化与反序列化，标准库虽然提供了&lt;code&gt;encoding/json&lt;/code&gt;，但是它主要是通过反射来实现的，所以性能消耗比较大。&lt;code&gt;jsoniter&lt;/code&gt;可以解决这个痛点，其是一款快且灵活的 JSON 解析器，具有良好的性能并能100%兼容标准库，我们可以使用jsoniter替代encoding/json，官方文档称可以比标准库&lt;strong&gt;快6倍&lt;/strong&gt;多，后来Go官方在go1.12版本对 json.Unmarshal 函数使用 sync.Pool 缓存了 decoder，性能较之前的版本有所提升，所以现在达不到&lt;strong&gt;快6倍&lt;/strong&gt;多。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-fileid=&quot;100001884&quot; data-ratio=&quot;0.6072144288577155&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CqB2u93NwB8wnpZqk8mDTibMyUsE0bhGEMgjb8KDsdAoDnYTRRhS8AowMS6vVL7Q0DsnVaCOzSg7DBrSicKvkZJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;499&quot;/&gt;&lt;figcaption&gt;来自官方文档&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;github地址：https://github.com/json-iterator/go&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于&lt;code&gt;jsoniter&lt;/code&gt;优化原理感兴趣的可以移步这里：http://jsoniter.com/benchmark.html#optimization-used&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;gorm&lt;/code&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;gorm&lt;/code&gt;是一个使用&lt;code&gt;Go&lt;/code&gt;语言编写的&lt;code&gt;ORM&lt;/code&gt;框架，文档齐全，对开发者友好，并且支持主流的数据库：&lt;code&gt;MySQL&lt;/code&gt;, &lt;code&gt;PostgreSQL&lt;/code&gt;, &lt;code&gt;SQlite&lt;/code&gt;, &lt;code&gt;SQL Server&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;个人觉得使用&lt;code&gt;gorm&lt;/code&gt;最大的好处在于它是由国人开发，中文文档齐全，上手很快，目前大多数企业也都在使用&lt;code&gt;gorm&lt;/code&gt;。我们来一下&lt;code&gt;gorm&lt;/code&gt;的特性：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;全功能 ORM&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;关联 (Has One，Has Many，Belongs To，Many To Many，多态，单表继承)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Create，Save，Update，Delete，Find 中钩子方法&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持 &lt;code&gt;Preload&lt;/code&gt;、&lt;code&gt;Joins&lt;/code&gt; 的预加载&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;事务，嵌套事务，Save Point，Rollback To Saved Point&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Context、预编译模式、DryRun 模式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;批量插入，FindInBatches，Find/Create with Map，使用 SQL 表达式、Context Valuer 进行 CRUD&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;SQL 构建器，Upsert，数据库锁，Optimizer/Index/Comment Hint，命名参数，子查询&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;复合主键，索引，约束&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Auto Migration&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;自定义 Logger&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;灵活的可扩展插件 API：Database Resolver（多数据库，读写分离）、Prometheus…&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;每个特性都经过了测试的重重考验&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;开发者友好&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;github地址：https://github.com/go-gorm/gorm&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官方文档：https://gorm.io/zh_CN/docs/index.html&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;robfig/cron&lt;/code&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;github地址：https://github.com/robfig/cron&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务开发更离不开定时器的使用了，&lt;code&gt;cron&lt;/code&gt;就是一个用于管理定时任务的库，用 Go 实现 Linux 中&lt;code&gt;crontab&lt;/code&gt;这个命令的效果，与Linux 中&lt;code&gt;crontab&lt;/code&gt;命令相似，&lt;code&gt;cron&lt;/code&gt;库支持用 &lt;strong&gt;5&lt;/strong&gt; 个空格分隔的域来表示时间。&lt;code&gt;cron&lt;/code&gt;上手也是非常容易的，看一个官方的例子：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt;  &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&quot;time&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&quot;github.com/robfig/cron/v3&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  c := cron.New()&lt;br/&gt;&lt;br/&gt;  c.AddFunc(&lt;span&gt;&quot;@every 1s&quot;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;    fmt.Println(&lt;span&gt;&quot;tick every 1 second run once&quot;&lt;/span&gt;)&lt;br/&gt;  })&lt;br/&gt;  c.Start()&lt;br/&gt;  time.Sleep(time.Second * &lt;span&gt;10&lt;/span&gt;)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对&lt;code&gt;cron&lt;/code&gt;的使用可以参考这篇文章：https://segmentfault.com/a/1190000023029219&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前我也写了一篇&lt;code&gt;cron&lt;/code&gt;的基本使用，可以参考下：https://mp.weixin.qq.com/s/Z4B7Tn8ikFIkXVGhXNbsVA&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;wire&lt;/code&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;都&lt;code&gt;1202&lt;/code&gt;年了，应该不会有人不知道依赖注入的作用了吧。我们本身也可以自己实现依赖注入，但是这是在代码量少、结构不复杂的情况下，当结构之间的关系变得非常复杂的时候，这时候手动创建依赖，然后将他们组装起来就会变的异常繁琐，并且很容出错。Go语言社区有很多依赖注入的框架，可以分为两个类别：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;依赖反射实现的运行时依赖注入：inject、uber、dig&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用代码生成实现的依赖注入：wire&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;个人觉的使用&lt;code&gt;wire&lt;/code&gt;进行项目管理是最好的，在代码编译阶段就可以发现依赖注入的问题，在代码生成时即可报出来，不会拖到运行时才报，更便于&lt;code&gt;debug&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;wire&lt;/code&gt;的使用也是非常的简单，关于&lt;code&gt;wire&lt;/code&gt;的使用我之前也写了一篇文章，可以参考一下：https://mp.weixin.qq.com/s/Z4B7Tn8ikFIkXVGhXNbsVA&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;github地址：https://github.com/google/wire&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;code&gt;ants&lt;/code&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;某些业务场景还会使用到&lt;code&gt;goroutine&lt;/code&gt;池，&lt;code&gt;ants&lt;/code&gt;就是一个广泛使用的goroute池，可以有效控制协程数量，防止协程过多影响程序性能。&lt;code&gt;ants&lt;/code&gt;也是国人开发的，设计博文写的也很详细的，目前很多大厂也都在使用&lt;code&gt;ants&lt;/code&gt;，经历过线上业务检验的，所以可以放心使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;github地址：https://github.com/panjf2000/ants&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ants&lt;/code&gt;源码不到&lt;code&gt;1k&lt;/code&gt;行，建议大家赏析一下源码～。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文列举的几个库都是经常被使用的开源库，这几个库你都掌握了，基本的业务开发都没有啥问题了，一些初学者完全可以通过这几个库达到入门水平。还有一些库，比如：&lt;code&gt;go-redis&lt;/code&gt;、&lt;code&gt;go-sql-driver&lt;/code&gt;、&lt;code&gt;didi/gendry&lt;/code&gt;、&lt;code&gt;golang/groupcache&lt;/code&gt;、&lt;code&gt;olivere/elastic/v7&lt;/code&gt;等等，这些库也是经常使用的，入门都比较简单，就不这里详细介绍了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果大家也有经常使用的，比较好的开源库，欢迎推荐给我，我也学习学习！！！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;好啦，本文就到这里了，素质三连（分享、点赞、在看）都是笔者持续创作更多优质内容的动力！我是&lt;code&gt;asong&lt;/code&gt;，我们下期见。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;创建了读者交流群，欢迎各位大佬们踊跃入群，一起学习交流。入群方式：关注公众号获取。更多学习资料请到公众号领取。&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkyNzI1NzM5NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/CqB2u93NwB96zTfSmymj9jWokyhvSIXMRcLRAfFJsrB4uz6HBsml4T6iaia3yyCSB4aicX97icT7xBUCgw4O1PsKFQ/0?wx_fmt=png&quot; data-nickname=&quot;Golang梦工厂&quot; data-alias=&quot;AsongDream&quot; data-signature=&quot;asong是一名后端程序员，目前就职于一家电商公司，专注于Golang技术，定期分享Go语言、MySQL、Redis、Elasticsearch、计算机基础、微服务架构设计、面试等知识。这里不仅有技术，还有故事！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;推荐往期文章：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>63cd46124676d11264c5688eaec8dd68</guid>
<title>[推荐] Kafka 为什么要放弃 Zookeeper</title>
<link>https://toutiao.io/k/98g49tv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近，&lt;code&gt;confluent&lt;/code&gt;社区发表了一篇文章，主要讲述了&lt;code&gt;Kafka&lt;/code&gt;未来的&lt;code&gt;2.8&lt;/code&gt;版本将要放弃&lt;code&gt;Zookeeper&lt;/code&gt;，这对于&lt;code&gt;Kafka&lt;/code&gt;用户来说，是一个重要的改进。之前部署&lt;code&gt;Kafka&lt;/code&gt;就必须得部署&lt;code&gt;Zookeeper&lt;/code&gt;，而之后就只要单独部署&lt;code&gt;Kafka&lt;/code&gt;就行了。&lt;span/&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.Kafka简介&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Apache Kafka&lt;/code&gt;最早是由&lt;code&gt;Linkedin&lt;/code&gt;公司开发，后来捐献给了&lt;code&gt;Apack&lt;/code&gt;基金会。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Kafka&lt;/code&gt;被官方定义为分布式流式处理平台，因为具备高吞吐、可持久化、可水平扩展等特性而被广泛使用。目前&lt;code&gt;Kafka&lt;/code&gt;具体如下功能：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;消息队列,&lt;code&gt;Kafka&lt;/code&gt;具有系统解耦、流量削峰、缓冲、异步通信等消息队列的功能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分布式存储系统，&lt;code&gt;Kafka&lt;/code&gt;可以把消息持久化，同时用多副本来实现故障转移，可以作为数据存储系统来使用。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;实时数据处理，&lt;code&gt;Kafka&lt;/code&gt;提供了一些和数据处理相关的组件，比如&lt;code&gt;Kafka Streams&lt;/code&gt;、&lt;code&gt;Kafka Connect&lt;/code&gt;，具备了实时数据的处理功能。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面这张图是&lt;code&gt;Kafka&lt;/code&gt;的消息模型：&lt;span/&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.44819819819819817&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0DYO5Ln2ASVW1XuQU4X4P5Mhm7dI1sWPGd1MnSpGGolZ5XDxfc5JKfQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;888&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过上面这张图，介绍一下&lt;code&gt;Kafka&lt;/code&gt;中的几个主要概念：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;producer&lt;/code&gt;和&lt;code&gt;consumer&lt;/code&gt;: 消息队列中的生产者和消费者，生产者将消息推送到队列，消费者从队列中拉取消息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;consumer group&lt;/code&gt;:消费者集合，这些消费者可以并行消费同一个&lt;code&gt;topic&lt;/code&gt;下不同&lt;code&gt;partition&lt;/code&gt;中的消息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;broker&lt;/code&gt;：&lt;code&gt;Kafka&lt;/code&gt;集群中的服务器。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;topic&lt;/code&gt;：消息的分类。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;partition&lt;/code&gt;：&lt;code&gt;topic&lt;/code&gt;物理上的分组，一个&lt;code&gt;topic&lt;/code&gt;可以有&lt;code&gt;partition&lt;/code&gt;，每个&lt;code&gt;partition&lt;/code&gt;中的消息会被分配一个有序的&lt;code&gt;id&lt;/code&gt;作为&lt;code&gt;offset&lt;/code&gt;。每个&lt;code&gt;consumer group&lt;/code&gt;只能有一个消费者来消费一个&lt;code&gt;partition&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.Kafka和Zookeeper关系&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kafka架构如下图：&lt;img data-ratio=&quot;0.5727554179566563&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0Ebx6ta9P0zRGZO5vSbuJBQWiczib1VlHrTBuvFFrFP7J1H4gZfmrJZibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;646&quot;/&gt;从图中可以看到，&lt;code&gt;Kafka&lt;/code&gt;的工作需要&lt;code&gt;Zookeeper&lt;/code&gt;的配合。那他们到底是怎么配合工作呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看下面这张图：&lt;img data-ratio=&quot;0.5760095011876485&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ025Qu7ImfmseZVho9ibAHEJnYXyTj4iciaMDHnervzFTEWVbBLWLKBBQnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;842&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;2.1 注册中心&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;2.1.1 broker注册&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上面的图中可以看到，&lt;code&gt;broker&lt;/code&gt;分布式部署，就需要一个注册中心来进行统一管理。&lt;code&gt;Zookeeper&lt;/code&gt;用一个专门节点保存&lt;code&gt;Broker&lt;/code&gt;服务列表，也就是 &lt;code&gt;/brokers/ids&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;broker&lt;/code&gt;在启动时，向&lt;code&gt;Zookeeper&lt;/code&gt;发送注册请求，&lt;code&gt;Zookeeper&lt;/code&gt;会在&lt;code&gt;/brokers/ids&lt;/code&gt;下创建这个&lt;code&gt;broker&lt;/code&gt;节点，如&lt;code&gt;/brokers/ids/[0...N]&lt;/code&gt;，并保存&lt;code&gt;broker&lt;/code&gt;的&lt;code&gt;IP&lt;/code&gt;地址和端口。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;这个节点临时节点，一旦&lt;code&gt;broker&lt;/code&gt;宕机，这个临时节点会被自动删除。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;2.1.2 topic注册&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Zookeeper&lt;/code&gt;也会为&lt;code&gt;topic&lt;/code&gt;分配一个单独节点，每个&lt;code&gt;topic&lt;/code&gt;都会以&lt;code&gt;/brokers/topics/[topic_name]&lt;/code&gt;的形式记录在&lt;code&gt;Zookeeper&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个&lt;code&gt;topic&lt;/code&gt;的消息会被保存到多个&lt;code&gt;partition&lt;/code&gt;，这些&lt;code&gt;partition&lt;/code&gt;跟&lt;code&gt;broker&lt;/code&gt;的对应关系也需要保存到&lt;code&gt;Zookeeper&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;partition&lt;/code&gt;是多副本保存的，上图中红色&lt;code&gt;partition&lt;/code&gt;是&lt;code&gt;leader&lt;/code&gt;副本。当&lt;code&gt;leader&lt;/code&gt;副本所在的broker发生故障时，&lt;code&gt;partition&lt;/code&gt;需要重新选举&lt;code&gt;leader&lt;/code&gt;，这个需要由&lt;code&gt;Zookeeper&lt;/code&gt;主导完成。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;broker&lt;/code&gt;启动后，会把自己的&lt;code&gt;Broker ID&lt;/code&gt;注册到到对应&lt;code&gt;topic&lt;/code&gt;节点的分区列表中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们查看一个&lt;code&gt;topic&lt;/code&gt;是&lt;code&gt;xxx&lt;/code&gt;，分区编号是&lt;code&gt;1&lt;/code&gt;的信息，命令如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;[root@master] get /brokers/topics/xxx/partitions/1/state&lt;br/&gt;{&lt;span&gt;&quot;controller_epoch&quot;&lt;/span&gt;:15,&lt;span&gt;&quot;leader&quot;&lt;/span&gt;:11,&lt;span&gt;&quot;version&quot;&lt;/span&gt;:1,&lt;span&gt;&quot;leader_epoch&quot;&lt;/span&gt;:2,&lt;span&gt;&quot;isr&quot;&lt;/span&gt;:[11,12,13]}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;当&lt;code&gt;broker&lt;/code&gt;退出后，&lt;code&gt;Zookeeper&lt;/code&gt;会更新其对应&lt;code&gt;topic&lt;/code&gt;的分区列表。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;2.1.3 consumer注册&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消费者组也会向&lt;code&gt;Zookeeper&lt;/code&gt;进行注册，&lt;code&gt;Zookeeper&lt;/code&gt;会为其分配节点来保存相关数据，节点路径为&lt;code&gt;/consumers/{group_id}&lt;/code&gt;，有&lt;code&gt;3&lt;/code&gt;个子节点，如下图:&lt;img data-ratio=&quot;0.24280701754385964&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0JZNlfibAnWsLGeDVeoUa53I9r51YgicBp4UO3VVweoJaaB5kUb5XoAiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1425&quot;/&gt;这样&lt;code&gt;Zookeeper&lt;/code&gt;可以记录分区跟消费者的关系，以及分区的&lt;code&gt;offset&lt;/code&gt;。&lt;span&gt;[3]&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;2.2 负载均衡&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;broker&lt;/code&gt;向&lt;code&gt;Zookeeper&lt;/code&gt;进行注册后，生产者根据&lt;code&gt;broker&lt;/code&gt;节点来感知&lt;code&gt;broker&lt;/code&gt;服务列表变化，这样可以实现动态负载均衡。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;consumer group&lt;/code&gt;中的消费者，可以根据&lt;code&gt;topic&lt;/code&gt;节点信息来拉取特定分区的消息,实现负载均衡。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;实际上，&lt;code&gt;Kafka&lt;/code&gt;在&lt;code&gt;Zookeeper&lt;/code&gt;中保存的元数据非常多，看下面这张图：&lt;img data-ratio=&quot;0.3340184994861254&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ020I0WTKudqm8Y20XnqrjShadfkM8jhdmAE3WMYOnNkicz6OlFkiaX6og/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;973&quot;/&gt;随着broker、topic和partition增多，保存的数据量会越来越大。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.Controller介绍&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过上一节的讲述，我们看到了&lt;code&gt;Kafka&lt;/code&gt;对&lt;code&gt;Zookeeper&lt;/code&gt;的依赖非常大，&lt;code&gt;Kafka&lt;/code&gt;离开&lt;code&gt;Zookeeper&lt;/code&gt;是没有办法独立运行的。那&lt;code&gt;Kafka&lt;/code&gt;是怎么跟&lt;code&gt;Zookeeper&lt;/code&gt;进行交互的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图：&lt;span/&gt;&lt;sup&gt;[4]&lt;/sup&gt;&lt;img data-ratio=&quot;0.47101449275362317&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0Get1O7LNMia7h6KUR1vtSGL9WVcoJy7JeobdkkC0TpQYCyKeOIhzKjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;690&quot;/&gt;&lt;code&gt;Kafka&lt;/code&gt;集群中会有一个&lt;code&gt;broker&lt;/code&gt;被选举为&lt;code&gt;Controller&lt;/code&gt;负责跟&lt;code&gt;Zookeeper&lt;/code&gt;进行交互，它负责管理整个&lt;code&gt;Kafka&lt;/code&gt;集群中所有分区和副本的状态。其他&lt;code&gt;broker&lt;/code&gt;监听&lt;code&gt;Controller&lt;/code&gt;节点的数据变化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Controller&lt;/code&gt;的选举工作依赖于&lt;code&gt;Zookeeper&lt;/code&gt;，选举成功后，&lt;code&gt;Zookeeper&lt;/code&gt;会创建一个&lt;code&gt;/controller&lt;/code&gt;临时节点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Controller&lt;/code&gt;具体职责如下：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;比如当某个分区的leader出现故障时，Controller会为该分区选举新的leader。当检测到分区的ISR集合发生变化时，Controller会通知所有broker更新元数据。当某个topic增加分区时，Controller会负责重新分配分区。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;监听&lt;code&gt;topic&lt;/code&gt;相关的变化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;监听&lt;code&gt;broker&lt;/code&gt;相关的变化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;集群元数据管理&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面这张图展示了Controller、Zookeeper和broker的交互细节：&lt;img data-ratio=&quot;0.720558882235529&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ00al8icc8fR5ibV5o0vkoH5Dicy1G9COiaibxLyWJsfaM6tr5aqmOIu35LEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1002&quot;/&gt;&lt;code&gt;Controller&lt;/code&gt;选举成功后，会从&lt;code&gt;Zookeeper&lt;/code&gt;集群中拉取一份完整的元数据初始化&lt;code&gt;ControllerContext&lt;/code&gt;，这些元数据缓存在&lt;code&gt;Controller&lt;/code&gt;节点。当集群发生变化时，比如增加&lt;code&gt;topic&lt;/code&gt;分区，&lt;code&gt;Controller&lt;/code&gt;不仅需要变更本地的缓存数据，还需要将这些变更信息同步到其他&lt;code&gt;Broker&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Controller&lt;/code&gt;监听到&lt;code&gt;Zookeeper&lt;/code&gt;事件、定时任务事件和其他事件后，将这些事件按照先后顺序暂存到&lt;code&gt;LinkedBlockingQueue&lt;/code&gt;中，由事件处理线程按顺序处理，这些处理多数需要跟&lt;code&gt;Zookeeper&lt;/code&gt;交互，&lt;code&gt;Controller&lt;/code&gt;则需要更新自己的元数据。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.Zookeeper带来的问题&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Kafka&lt;/code&gt;本身就是一个分布式系统，但是需要另一个分布式系统来管理，复杂性无疑增加了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.1 运维复杂度&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用了&lt;code&gt;Zookeeper&lt;/code&gt;，部署&lt;code&gt;Kafka&lt;/code&gt;的时候必须要部署两套系统，&lt;code&gt;Kafka&lt;/code&gt;的运维人员必须要具备&lt;code&gt;Zookeeper&lt;/code&gt;的运维能力。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.2 Controller故障处理&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Kafaka&lt;/code&gt;依赖一个单一&lt;code&gt;Controller&lt;/code&gt;节点跟&lt;code&gt;Zookeeper&lt;/code&gt;进行交互，如果这个&lt;code&gt;Controller&lt;/code&gt;节点发生了故障，就需要从&lt;code&gt;broker&lt;/code&gt;中选择新的&lt;code&gt;Controller&lt;/code&gt;。如下图,新的&lt;code&gt;Controller&lt;/code&gt;变成了&lt;code&gt;broker3&lt;/code&gt;。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4723076923076923&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0qic3b3bfvqD4BfZeiaPBibDBPk2JZMIEk5KApPYxV5AP8gKux2KoozBYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;650&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;新的&lt;code&gt;Controller&lt;/code&gt;选举成功后，会重新从&lt;code&gt;Zookeeper&lt;/code&gt;拉取元数据进行初始化，并且需要通知其他所有的&lt;code&gt;broker&lt;/code&gt;更新&lt;code&gt;ActiveControllerId&lt;/code&gt;。老的&lt;code&gt;Controller&lt;/code&gt;需要关闭监听、事件处理线程和定时任务。分区数非常多时，这个过程非常耗时，而且这个过程中&lt;code&gt;Kafka&lt;/code&gt;集群是不能工作的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.3 分区瓶颈&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当分区数增加时，&lt;code&gt;Zookeeper&lt;/code&gt;保存的元数据变多，&lt;code&gt;Zookeeper&lt;/code&gt;集群压力变大，达到一定级别后，监听延迟增加，给&lt;code&gt;Kafaka&lt;/code&gt;的工作带来了影响。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，&lt;code&gt;Kafka&lt;/code&gt;单集群承载的分区数量是一个瓶颈。而这又恰恰是一些业务场景需要的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5.升级&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;升级前后的架构图对比如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9238578680203046&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0pibFmEEYyNSeh9wDibbmdFBVWToVJziaFyLicFqaEITWMKib61yekVsXs9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;591&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;KIP-500&lt;/code&gt;用&lt;code&gt;Quorum Controller&lt;/code&gt;代替之前的&lt;code&gt;Controller&lt;/code&gt;，&lt;code&gt;Quorum&lt;/code&gt;中每个&lt;code&gt;Controller&lt;/code&gt;节点都会保存所有元数据，通过&lt;code&gt;KRaft&lt;/code&gt;协议保证副本的一致性。这样即使&lt;code&gt;Quorum Controller&lt;/code&gt;节点出故障了，新的&lt;code&gt;Controller&lt;/code&gt;迁移也会非常快。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官方介绍，升级之后，&lt;code&gt;Kafka&lt;/code&gt;可以轻松支持百万级别的分区。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;Kafak团队把通过Raft协议同步数据的方式Kafka Raft Metadata mode,简称KRaft&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Kafka&lt;/code&gt;的用户体量非常大，在不停服的情况下升级是必要的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前去除&lt;code&gt;Zookeeper&lt;/code&gt;的&lt;code&gt;Kafka&lt;/code&gt;代码&lt;code&gt;KIP-500&lt;/code&gt;已经提交到&lt;code&gt;trunk&lt;/code&gt;分支，并且已经在的&lt;code&gt;2.8&lt;/code&gt;版本发布。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Kafaka&lt;/code&gt;计划在&lt;code&gt;3.0&lt;/code&gt;版本会兼容&lt;code&gt;Zookeeper Controller&lt;/code&gt;和&lt;code&gt;Quorum Controller&lt;/code&gt;，这样用户可以进行灰度测试。&lt;span/&gt;&lt;sup&gt;[5]&lt;/sup&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6.总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在大规模集群和云原生的背景下，使用&lt;code&gt;Zookeeper&lt;/code&gt;给&lt;code&gt;Kafka&lt;/code&gt;的运维和集群性能造成了很大的压力。去除&lt;code&gt;Zookeeper&lt;/code&gt;是必然趋势，这也符合大道至简的架构思想。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Reference&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;参考1: &lt;span&gt;https://www.confluent.io/blog/kafka-without-zookeeper-a-sneak-peek/&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;参考2: &lt;span&gt;https://blog.csdn.net/Zidingyi_367/article/details/110490910&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;参考3: &lt;span&gt;https://www.jianshu.com/p/a036405f989c&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;参考4: &lt;span&gt;https://honeypps.com/mq/kafka-controller-analysis/&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;p&gt;参考5: &lt;span&gt;https://mp.weixin.qq.com/s/ev6NM6hptltQBuTaCHJCQQ&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7cff58d8347fb119a5ed37e06258523c</guid>
<title>[推荐] 团队管理那点破事！OKR 绩效、核心人才、面试、技术分享、研发流程</title>
<link>https://toutiao.io/k/135ujiu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大家好，我是Tom哥~&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;今天来聊聊团队管理，可能你现在还是一线开发，没有带团队，感觉这个话题与你无关，其实不然。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;程序员的职业生涯曲折，技术更新迭代快，走技术深度，走架构师路线，势必要付出常人的时间和精力。而管理则可以更好的复用之前经验。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;知其然，知其所以然。现在，对管理拒绝的人总有一天，你会经历思想转变。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;作为管理者，我们平时都会遇到哪些问题？又是如何来解决这些问题？好的经验我们要学会借鉴，来看看今天要聊的问题概要&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003489&quot; data-ratio=&quot;0.7683923705722071&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshweUJQcqPoODQreibRwB2ibv73zhFsficibKWObzgoIgiah19mUicJuSSicPU11y6wOdr8GxvGtlyZkn4cricw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;734&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;br/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;做为团队负责人，你是如何带领团队的？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、角色认知、心态转变，“管人”和“理事”，借助团队拿结果&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、OKR、KPI考核&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、平衡好技术和业务发展矛盾&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、技术储备和未来的技术规划，为业务预留空间&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、知人善任，人才梯度培养&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;6、方向要对、格局要大，与公司战略保持一致&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;7、制定好团队目标&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;8、技术分享，培养团队的技术氛围&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;9、团建&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;10、以人为本，激发每个人的积极性&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更多内容，参考 &lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484897&amp;amp;idx=1&amp;amp;sn=69934454723b5c18b754d86d95d4a2ff&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;第一次带团队，感觉很慌怎么办？&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;开发规范流程，需要做哪些事情？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;严格约定团队的开发规范，如：IDE 代码模板、命名规范(mysql建表、redis key 前缀，以及application.properties中的各种配置项，可以参考阿里代码规约)，代码ci规范，API命名，统一日志规范，MySQL建表&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;严格的开发流程，如：需求评审、技术方案设计、方案评审、测试用例评审、编码、代码 Review、测试、发布，线上发布要注意灰度。回滚机制&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;对于一些通用的逻辑，要注意抽取公共模块&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;技术框架选型要有严格流程&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;团队未来规划，负责人要怎么做？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：这个分为两部分。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一个是了解系统状况，有哪些历史技术债务（如：架构优化、性能优化、高可用、可伸缩等）需要分阶段偿还，提前做好时间安排。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;提前了解业务规划，为了实现业务目标，我们要做哪些技术储备&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何让自己的团队高效且有战斗力？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、业务支撑。按优先级将业务分为重点项目、日常项目。优先保证核心项目所需的开发资源。另外，经常与业务同学互通业务想法，提前做好技术储备。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、骨干拉平。对团队经常组织技术培训，核心的技术骨干能轮动工作内容，每个系统都有人员互补。遇到紧急项目时，一个骨干+几个研发，就可以快速支撑一个项目。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、架构升级，为业务预留技术储备。如：分布式、服务化、中台、中心化、中间件、平台化等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、工程效率。包括动态化、配置化、工具化、自动化&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、系统稳定性。构建完善的报警监控系统、流控、熔断、降级、容灾、回滚、灰度，保障系统的稳定性。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更多内容，&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484862&amp;amp;idx=1&amp;amp;sn=70f083d3726cba543b5369e82ba90d8b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;如何打造一个高效的研发团队&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何定制高效的研发流程？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：流程可以帮助我们更规范的做事情，提高整体的工作效率，进而提高产出。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;产品层面，统一将业务需求收集到“需求池”中，每周定期 review 需求，将一些优先级较高的需求整合、立项、排期&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;RPD 方案编写，包括界面、功能、逻辑、交互等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;PRD 方案评审，包括业务准确性、技术可行性评估&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;编写技术方案，并组织评审&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;项目计划，开发任务分解，人力成本，时间评估&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;各角色（前端、后端、客户端等）进入开发阶段，组织每日站立晨会，跟进项目遇到的问题，并及时做出调整。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;代码 review，对不合理的地方及时调整&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;功能测试、性能测试、集成测试&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;预发环境检验&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;发布上线&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;项目经验总结&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何营造团队的技术氛围？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：物以类聚，人以群分。大到一个公司，小到一个团队，都有自己的味道。如果【味道】缺失，那团队的稳定性存在极大风险。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;技术分享，输出倒逼输入，锻炼分享人的演讲能力，同时还能提高团队的整体技术能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;代码CR，可以点对点审查，也可以团队成员一起审查。既能保证代码质量，还能让大家对系统进一步了解&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;代码好坏味道，组织一些活动，对于一些优秀的代码、坏代码，拿出来通晒&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;读书会。一个人的成长离不开持续的学习输入。招聘的候选人要有很强的学习热情，有较强的自律性。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;鼓励创新，紧跟市场前沿，对于一些新技术在充分验证可行性后，可以引入到工作中。当然，创新是有风险的，管理者要充分衡量利弊。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;推行自动化，工具化。管理者要鼓励工程师创造工具、引入工具，释放一些低效工作。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;建立和维护好团队的技术氛围，需要自上而下的技术导向，需要各级老板的鼎力支持，需要每位团队成员参与其中、融入其中&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何做团队的绩效管理？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：肯定要引入一些科学管理方法，比如：KPI、OKR。kpi全称 Key Performance Indicator，只看结果，不关心过程，只要结果拿到了即可，适合销售、运营等考核指标相对明确的岗位。研发岗推荐使用OKR，根据目标自己定义关键节点的Key Result，更加能激发个人的主动性。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;使用OKR工具，要关注几个点：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、如何制定OKR？目标一定要清晰明确，有很强的激励作用，振奋人心；有实际价值；通过自己的努力，短期内可以实现。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、持续跟踪OKR的落地执行，每周、每月、每季度都要定期回顾，不断优化对齐目标，做到信息透明、共享，让每位团队成员都能收获成长的快乐。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、OKR评估，分为自评、主管打分。OKR 评分 = 自我评分 x 20% + 同事评分 x 30% + 主管评分 x 50%&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、OKR复盘。考核不是最终目的，发现问题并最终解决问题才是我们的终极目标。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更多内容，参考之前文章  &lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484883&amp;amp;idx=1&amp;amp;sn=f92f9dcc0f644b20aaac385fe8bfe3ba&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;作为技术团队TL，如何运用OKR提高团队产出&lt;/span&gt;&lt;/a&gt;&lt;strong/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何做一个合格的面试官？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;首先，了解招聘岗位的工作职责，技能要求，岗位定级，清楚招聘的候选人要具备什么能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;简历筛选，对于一些不太确定的可以约现场聊聊，毕竟人才稀缺&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试前，提前浏览下候选人的简历，了解其过往项目经历，这样短期内更容易全面考察候选人&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试不应该只局限技术，关于沟通力、团队协作、职业规划、价值观等软性方面也要考察&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试尾声，可以问问候选人有什么想了解的？毕竟清楚彼此双方核心诉求，才能更长远合作&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试结束后，及时填写面试反馈，便于后续流程推进&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何招到核心人才？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：核心人才主要关注两点：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、价值观。如果员工的价值观与公司不符，即使能力再强，也很难融入集体，创造价值。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、技术能力。这个主要是通过两个方面来把控。一个是入职的技术面试，一般有2~4轮，甚至还有部门交叉面试，全方位了解候选人的技术实力。另一个是，由于候选人之前的工作经历和方向与新工作存在一定差异性，候选人能否快速适应新工作环境，所以，会有一个试用期，试用期会制定一个考核目标，直接主管和HRBP 会定期与候选人沟通，答疑解惑，帮助候选人快速投入新的工作中。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何留住核心人才？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：做产品是为了满足用户需求。内部员工也是一样，&lt;strong&gt;先成就员工，再成就团队，最后成就企业&lt;/strong&gt;。给每个员工足够的成长机会，让他对公司有归属感，找到自己的目标与追求。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对症下药，清楚了解每个员工的诉求点：提升自身技术水平、升职加薪、想带团队。。。等，工作中尽量照顾核心员工的需求，让他们工作中能保持愉悦心态，并获得成就感。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;人嘛，干什么事都要有新鲜感，也可以尝试技术轮岗，接触一些新的东西，既开阔了员工视野，也可能碰撞出一些新的火花。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当然，作为直接负责人，你就是团队成员的天花板，所以也要严格要求自己，不断提升自己的技术能力、视野和管理能力，承担更大的职责，给团队成员预留足够的上升空间。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;什么样的员工坚决开除？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;试用期制定了明确的考核目标，考核周期结束后不能很好的完成&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;踩到公司的红线，比如贪污受贿、数据泄密、威胁公司信息安全&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;态度傲慢，很难与其他同事协同工作，这种人即使能力再强，也坚决开除。因为我们是团队作战，不是搞个人英雄主义。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;不认同公司的价值观，个人的品质较差&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;什么样的员工，老板喜欢？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：有人可能说，“不要工资，干活卖力！”，严肃点，不要皮&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;做事细心，考虑问题全面，工作效率高。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;工作踏实，不挑活&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;有强烈的责任心，接手一件事情，有一杆到底的精神&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;除了做好本职工作外，还会考虑系统架构优化或产品生态建设的工作，有强烈的上进心&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;善于沟通，有很强的团队协同能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何做好团队的激励？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：人是一种复杂动物，而且每个人的诉求都不一样，如何统一激励框架就显得非常重要。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我们要找到激发员工的工作动机，用各种有效的方法来调动员工的积极性和创造性，使其完成任务。比如，现在流行的OKR 管理，自己设定目标以及关键 Key Result，并在团队中共享，做到公开透明，这样每个人都清楚了解团队的目标方向，自己在哪一个位置，起什么作用，让每个成员有强烈的参与感、掌控感，更容易激发员工的主观能动性。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;具体的激励一般有以下几种：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;精神激励。领导的信任表扬；对自身价值的认同。低成本、高效率。比如：每月之星、光荣榜、各种奖项&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;晋升激励。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;物质激励，股票、期权、项目奖、季度奖、年终奖等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;量身定做，团队成员的情况千差万别，可以结合马斯洛理论，充分了解员工的情况，为员工定制化。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;作为团队负责人，如何面对压力？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：岗位越高，承担的职责就越大，接受的挑战和压力就越大。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;分阶段、分里程碑的方式来制定计划，逐步完成事项来达成目标。给自己留一些缓冲时间，以便于应对计划的灵活性调整。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;时刻保持旺盛的精力，保持跟团队成员的沟通，了解他们的工作状态和感受&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;敢于面对上层传递下来的压力，做好缓冲，避免团队过于透支，保证有一个稳固的后方。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;做好项目时间计划表，分清项目的优先级、重要性，合理安排，统筹管理&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;学会委派工作。知人善任，合理分工，发挥团队的力量，而不是当一个超级英雄&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;放松心态，工作和生活尽量分开，保证充足的睡眠和锻炼，毕竟身体是革命的本钱。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;关于我：前阿里P7技术专家，出过专利，竞赛拿过奖，CSDN博客专家，负责过电商交易、社区生鲜、互联网金融等业务，多年团队管理经验。&lt;/span&gt;&lt;/section&gt;&lt;h1 accuse=&quot;qTitle&quot;&gt;&lt;span&gt;&lt;span&gt;关注公众号「微观技术」，后台回复 “算法” ，免费领取资料&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg2NzYyNjQzNg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPpzBoAoibbfQkhLdXfEpQgd8frHoDJDH503rv3FaMK6las2rCNQY7icr6w/0?wx_fmt=png&quot; data-nickname=&quot;微观技术&quot; data-alias=&quot;weiguanjishu&quot; data-signature=&quot;前阿里P7技术专家，研究生，出过专利。负责过电商交易、社区团购、流量营销等业务。分享后端架构技能、一线大厂面试经验、团队管理等话题。欢迎关注&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247486894&amp;amp;idx=1&amp;amp;sn=8cc0ae494a7624943665a8e9d47341e1&amp;amp;chksm=ceb9f105f9ce7813b3efa57bb0c655f47a37aab82579dda3da6d05003f97adc99d83f35b6ec7&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;JAVA那点破事！并发、IO模型、集合、线程池、死锁、非阻塞、AQS....&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247486515&amp;amp;idx=1&amp;amp;sn=62a75d90d76a7f0c4cb01a64db8f4e2e&amp;amp;chksm=ceb9f098f9ce798eafec5c1e01aaeaedc00163e5c4925931da7a1b6184365d474fb1562cb664&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Redis缓存那点破事 | 绝杀面试官 25 问！&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247486281&amp;amp;idx=1&amp;amp;sn=2c0fc614dd94c93aa1172413fb340c6d&amp;amp;chksm=ceb9f7e2f9ce7ef46b0832f69b2e6e6e66d1d10c6db94fedb381da886894a1a622086e64f68a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;MYSQL 那点破事！索引、SQL调优、事务、B+树、分表 ....&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247485888&amp;amp;idx=1&amp;amp;sn=60304679c226fb6b2ebaba5bb6ad5485&amp;amp;chksm=ceb9f56bf9ce7c7d7c87fa4aa7cb70aba7af6b4aefbf1f8b3e331d5a443ccc91b3ba2fb95b9e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;TCP网络那点破事！三次握手、四次挥手、TIME-WAIT ....&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>53dd62fea182bf9ab66d52a21aed389e</guid>
<title>[推荐] 如何高效刷 LeetCode</title>
<link>https://toutiao.io/k/ws2do5o</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;span class=&quot;RichText ztext CopyrightRichText-richText css-hnrfcf&quot; options=&quot;[object Object]&quot; itemprop=&quot;text&quot;&gt;&lt;h2 id=&quot;h_2177365491_0&quot; data-into-catalog-status=&quot;&quot;&gt;心理建设篇&lt;/h2&gt;&lt;p&gt;在讲述具体的方法之前，先要明白一件事。凡事都分『道』与『术』。本问题下面大部分回答介绍的都是『术』。而对于刷LeetCode这件事，无论你看到多少高明的的方法，如果你不能持之以恒，都没有用。所有在刷LeetCode这件事上，他的『道』就是：如何能持之以恒的保持刷题热情。我认为『道』更重要。我先谈一下这部分。&lt;/p&gt;&lt;h3 id=&quot;h_2177365491_1&quot; data-into-catalog-status=&quot;&quot;&gt;寻找标尺，让进步可衡量&lt;/h3&gt;&lt;p&gt;为什么王者荣耀有段位，有青铜、白银、黄金。以我个人的经验来看，这些都是刺激你持续玩游戏的游戏机制。通过段位，彰显个人的实力，没错，装逼是人类进步的一大动力。同时也让进步可以衡量。刷LeetCode也是同样，一般刚开始我们会关注解决了多少道题。更进一步，我们需要关心自己的排名。LeetCode也有排名机制。每刷一道题，就前进一点点。可以每周给自己做一个记录，记一下自己的排名。让自己重视排名。逐渐的自己就会把积极性调动起来，想让自己的排名越来越高，就是打排位一样。&lt;/p&gt;&lt;p&gt;除了排名，你还可以每周记录一下&lt;b&gt;通过率。&lt;/b&gt;&lt;/p&gt;&lt;h3 id=&quot;h_2177365491_2&quot; data-into-catalog-status=&quot;&quot;&gt;寻找小惊喜，给自己正反馈&lt;/h3&gt;&lt;p&gt;坚持做每日一题，LeetCode每天都有一道题，完成后，你的打卡日历就会勾上一个圈。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pica.zhimg.com/50/v2-4ff4085cc4284d82382f7274896ced6b_720w.jpg?source=1940ef5c&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;658&quot; data-rawheight=&quot;709&quot; data-default-watermark-src=&quot;https://pic3.zhimg.com/50/v2-62841d2ea95c64d5723c118fe15667e7_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-4ff4085cc4284d82382f7274896ced6b_r.jpg?source=1940ef5c&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;658&quot; data-rawheight=&quot;709&quot; data-default-watermark-src=&quot;https://pic3.zhimg.com/50/v2-62841d2ea95c64d5723c118fe15667e7_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-4ff4085cc4284d82382f7274896ced6b_r.jpg?source=1940ef5c&quot; data-actualsrc=&quot;https://pica.zhimg.com/50/v2-4ff4085cc4284d82382f7274896ced6b_720w.jpg?source=1940ef5c&quot;/&gt;&lt;/figure&gt;&lt;p&gt;如果打满一个月就会获得一个月度徽章。另外LeetCode有很多“学习计划”，每个学习计划完成后也会有一个徽章。我有段时间就喜欢收集徽章，为了收集这些小玩意，会刺激自己持续解题。其实和游戏里面也差不多。学会游戏化学习。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pica.zhimg.com/50/v2-06d7085bd091a82ba07c35ce9029feac_720w.jpg?source=1940ef5c&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;936&quot; data-rawheight=&quot;189&quot; data-default-watermark-src=&quot;https://pic3.zhimg.com/50/v2-78b5ea39d29bd51501fafe96b6bbbb7e_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-06d7085bd091a82ba07c35ce9029feac_r.jpg?source=1940ef5c&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;936&quot; data-rawheight=&quot;189&quot; data-default-watermark-src=&quot;https://pic3.zhimg.com/50/v2-78b5ea39d29bd51501fafe96b6bbbb7e_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-06d7085bd091a82ba07c35ce9029feac_r.jpg?source=1940ef5c&quot; data-actualsrc=&quot;https://pica.zhimg.com/50/v2-06d7085bd091a82ba07c35ce9029feac_720w.jpg?source=1940ef5c&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;h3 id=&quot;h_2177365491_3&quot; data-into-catalog-status=&quot;&quot;&gt;不要死磕，学会放弃&lt;/h3&gt;&lt;p&gt;开始刷LeetCode感到吃力是正常的。我这里说的学会放弃，不是说放弃刷力扣，而是说碰到自己无法解决的题目，不要死磕。赶紧看一下题解去学习，这没有什么丢人的。每个人都是从这个阶段过来的。就比如小学生无法做出高中生的题目，并不是因为小学生笨，而是因为中间有很多知识，小学生没学过。对于算法而言，自然也是如此。靠自己死磕，是很难想到很多前辈科学家们总结出来的算法。这时候去看题解学习也不为过。&lt;/p&gt;&lt;p&gt;如果遇到特别难的题，看题解也不理解。也不用纠结。就隔着它。可以把题号记下来。过段时间再回顾。&lt;/p&gt;&lt;h3 id=&quot;h_2177365491_4&quot; data-into-catalog-status=&quot;&quot;&gt;好记性不如烂笔头&lt;/h3&gt;&lt;p&gt;我是笔记强迫症患者……我现在刷LeetCode，每道做过的题，我都会记到Notion里。打上几个标签，方便回顾。记忆是有遗忘曲线的，不能因为你现在能做出一道题，就认为自己能永远做出来。小学时，老师就教导我们：&lt;/p&gt;&lt;blockquote&gt;好记性不如烂笔头&lt;/blockquote&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/50/v2-be3b36b257cbe2e34a133788d8f3f693_720w.jpg?source=1940ef5c&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1938&quot; data-rawheight=&quot;1194&quot; data-default-watermark-src=&quot;https://pic1.zhimg.com/50/v2-2fd8b5a9009e33b0ef4e999159780a69_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-be3b36b257cbe2e34a133788d8f3f693_r.jpg?source=1940ef5c&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1938&quot; data-rawheight=&quot;1194&quot; data-default-watermark-src=&quot;https://pic1.zhimg.com/50/v2-2fd8b5a9009e33b0ef4e999159780a69_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-be3b36b257cbe2e34a133788d8f3f693_r.jpg?source=1940ef5c&quot; data-actualsrc=&quot;https://pic2.zhimg.com/50/v2-be3b36b257cbe2e34a133788d8f3f693_720w.jpg?source=1940ef5c&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;讲完『道』，我也谈一下我的『术』。我这里不对具体的算法和数据结构题型做解析了，我主要给你指路。&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;b&gt;我伸手给你指路，希望你看见的是路，而不是我的手&lt;/b&gt;&lt;/blockquote&gt;&lt;h2 id=&quot;h_2177365491_5&quot; data-into-catalog-status=&quot;&quot;&gt;刷题顺序篇&lt;/h2&gt;&lt;p&gt;当然我不建议从头按顺序刷，我分为“正排”刷题和“倒排”刷题，两种策略。&lt;/p&gt;&lt;p&gt;所谓“正排刷题”可以刷LeetCode上面的题单。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/50/v2-7bd833f94705ad016aa7df711d131122_720w.jpg?source=1940ef5c&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;631&quot; data-rawheight=&quot;1083&quot; data-default-watermark-src=&quot;https://pic2.zhimg.com/50/v2-7bc22ddfa13e873db0ba039316ec26c4_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-7bd833f94705ad016aa7df711d131122_r.jpg?source=1940ef5c&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;631&quot; data-rawheight=&quot;1083&quot; data-default-watermark-src=&quot;https://pic2.zhimg.com/50/v2-7bc22ddfa13e873db0ba039316ec26c4_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-7bd833f94705ad016aa7df711d131122_r.jpg?source=1940ef5c&quot; data-actualsrc=&quot;https://pic1.zhimg.com/50/v2-7bd833f94705ad016aa7df711d131122_720w.jpg?source=1940ef5c&quot;/&gt;&lt;/figure&gt;&lt;p&gt;我个人建议从《剑指Offer》开始刷。《剑指Offer》现有出了两册，在LeetCode上都有题单。建议从《剑指Offer》刷起，碰到不会的，可以看书中的讲解。&lt;/p&gt;&lt;a data-draft-node=&quot;block&quot; data-draft-type=&quot;mcn-link-card&quot; data-mcn-id=&quot;1433578379710324736&quot;/&gt;&lt;a data-draft-node=&quot;block&quot; data-draft-type=&quot;mcn-link-card&quot; data-mcn-id=&quot;1433578591381000192&quot;/&gt;&lt;p&gt;根据书来刷题，当你刷完一本书后，常见的题目类型几乎都覆盖到了。当然同一种类型的题目数不胜数，重要是培养一下各种题型大概的思路。这属于“正排”刷题。&lt;/p&gt;&lt;p&gt;“倒排”刷题，是打破常规，不根据题目类型或按照某种顺序来做题。玩的就是措手不及。比如坚持做&lt;b&gt;每日一题&lt;/b&gt;。坚持一个月你就会见到各种各样的题型，有的甚至很刁钻。方便查漏补缺。另外如果有信心的话，可以参加一下周赛，进一步给自己惊喜。&lt;/p&gt;&lt;h2 id=&quot;h_2177365491_6&quot; data-into-catalog-status=&quot;&quot;&gt;网站/APP使用篇&lt;/h2&gt;&lt;h3 id=&quot;h_2177365491_7&quot; data-into-catalog-status=&quot;&quot;&gt;自定义测试用例&lt;/h3&gt;&lt;p&gt;不要着急提交代码。多用测试用例自测。如果是提交之后发现某个case不过，调试的时候一定要在测试用例这里调试。不要用重复提交代码的方式调试。每次提交代码都会跑N多个case，时间慢。另外就是会降低你在LeetCode上的“通过率”&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/50/v2-2c63c5e6f80eacc55e808ec74eb1b8df_720w.jpg?source=1940ef5c&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;893&quot; data-rawheight=&quot;417&quot; data-default-watermark-src=&quot;https://pic2.zhimg.com/50/v2-e6d17fcaa87fc627ee635c82a6aba414_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pica.zhimg.com/v2-2c63c5e6f80eacc55e808ec74eb1b8df_r.jpg?source=1940ef5c&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;893&quot; data-rawheight=&quot;417&quot; data-default-watermark-src=&quot;https://pic2.zhimg.com/50/v2-e6d17fcaa87fc627ee635c82a6aba414_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pica.zhimg.com/v2-2c63c5e6f80eacc55e808ec74eb1b8df_r.jpg?source=1940ef5c&quot; data-actualsrc=&quot;https://pic1.zhimg.com/50/v2-2c63c5e6f80eacc55e808ec74eb1b8df_720w.jpg?source=1940ef5c&quot;/&gt;&lt;/figure&gt;&lt;h3 id=&quot;h_2177365491_8&quot; data-into-catalog-status=&quot;&quot;&gt;高效安排刷题时间&lt;/h3&gt;&lt;p&gt;如果你是学生，那么恭喜你有一大把的时间用来刷题。但是如果你是已工作人士，则需要高效利用时间了。由于我经常做每日一题，而每日一题，是零点更新。有时候躺在床上没睡，就用力扣APP打开看一眼题目，如果题目不难，就直接用APP刷了。另外你也可以利用上下班通勤的时间、出去玩乘坐地铁、公交的时间来用手机看看题解，或者直接用手机刷。比如我坐长途车从家里回北京的路上就用手机刷过题。&lt;/p&gt;&lt;p&gt;手机刷题，其实官方APP，有很多编程语言中的特殊符号的候选功能，提升不少速度。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/50/v2-38d952f62f964c3d70392fc8d8f5bed3_720w.jpg?source=1940ef5c&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1242&quot; data-rawheight=&quot;1443&quot; data-default-watermark-src=&quot;https://pic2.zhimg.com/50/v2-217862778bed21dfed649ba32a4820e8_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-38d952f62f964c3d70392fc8d8f5bed3_r.jpg?source=1940ef5c&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1242&quot; data-rawheight=&quot;1443&quot; data-default-watermark-src=&quot;https://pic2.zhimg.com/50/v2-217862778bed21dfed649ba32a4820e8_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-38d952f62f964c3d70392fc8d8f5bed3_r.jpg?source=1940ef5c&quot; data-actualsrc=&quot;https://pic3.zhimg.com/50/v2-38d952f62f964c3d70392fc8d8f5bed3_720w.jpg?source=1940ef5c&quot;/&gt;&lt;/figure&gt;&lt;p&gt;另外你可以给你的输入法用自定义，加入一些常用的代码。&lt;/p&gt;&lt;figure data-size=&quot;small&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/50/v2-1bfe4dba7115a5cd1e021f42bc4c1f1a_720w.jpg?source=1940ef5c&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1242&quot; data-rawheight=&quot;698&quot; data-default-watermark-src=&quot;https://pic2.zhimg.com/50/v2-5b478c5285431ac108cde03896209037_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-1bfe4dba7115a5cd1e021f42bc4c1f1a_r.jpg?source=1940ef5c&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1242&quot; data-rawheight=&quot;698&quot; data-default-watermark-src=&quot;https://pic2.zhimg.com/50/v2-5b478c5285431ac108cde03896209037_720w.jpg?source=1940ef5c&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-1bfe4dba7115a5cd1e021f42bc4c1f1a_r.jpg?source=1940ef5c&quot; data-actualsrc=&quot;https://pic3.zhimg.com/50/v2-1bfe4dba7115a5cd1e021f42bc4c1f1a_720w.jpg?source=1940ef5c&quot;/&gt;&lt;/figure&gt;&lt;h2 id=&quot;h_2177365491_9&quot; data-into-catalog-status=&quot;&quot;&gt;Trick篇&lt;/h2&gt;&lt;h3 id=&quot;h_2177365491_10&quot; data-into-catalog-status=&quot;&quot;&gt;修改函数参数&lt;/h3&gt;&lt;p&gt;leetcode的参数名，有时候很长，你可以改名字，减少输入的字符数。当然正常在网站上刷题有补全功能。但是改一下名字，还是简化不少。另外就是有两个例外情况是没有补全的：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;手机刷题（力扣手机APP可以刷题，但是没有补全功能）&lt;/li&gt;&lt;li&gt;参加周赛（周赛IDE，无自动补全功能）&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&quot;h_2177365491_11&quot; data-into-catalog-status=&quot;&quot;&gt;调用待补全函数自身&lt;/h3&gt;&lt;p&gt;如果函数的参数是等价的，但是你根据某种策略，把他们分出来差别。但是你不确定哪个参数是满足的。比如这道：415. 字符串相加&lt;/p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//leetcode-cn.com/problems/add-strings/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-text=&quot;力扣&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;p&gt;官方给出的代码是这样：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addStrings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;num1和num2在题目中含义是等价的。但是我们希望以长度长的那个num作为base，来叠加长度短的那个num。这样可以方便处理。你可以直接去判断长度，然后再搞两个变量出来。比如：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后让base再去加delta。。但其实没必要这么麻烦，直接这样：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addStrings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addStrings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 调用自身
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// num1长度 肯定大于等于num2
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;        &lt;span class=&quot;n&quot;&gt;stringstream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&#x27;0&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;&#x27;0&#x27;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;h3 id=&quot;h_2177365491_12&quot; data-into-catalog-status=&quot;&quot;&gt;给解题函数增加默认值&lt;/h3&gt;&lt;p&gt;每道题，LeetCode都会给出一个待补全的函数，这个函数，你是可以增加默认值的。&lt;/p&gt;&lt;p&gt;对于某些递归的解法，可以少定义一个函数.&lt;/p&gt;&lt;h2 id=&quot;h_2177365491_13&quot; data-into-catalog-status=&quot;&quot;&gt;官方库提升刷题效率（C++）&lt;/h2&gt;&lt;p&gt;因为我是C++程序员所以下面就值介绍C++了。&lt;/p&gt;&lt;p&gt;一定要学好STL！&lt;/p&gt;&lt;h3 id=&quot;h_2177365491_14&quot; data-into-catalog-status=&quot;&quot;&gt;swap替代手写交换&lt;/h3&gt;&lt;p&gt;不要在自己写三行式去写交换了。直接用swap。&lt;/p&gt;&lt;p&gt;针对链表的Node也使用哦。比如，226. 翻转二叉树：&lt;/p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//leetcode-cn.com/problems/invert-binary-tree/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-text=&quot;力扣&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**
&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt; * Definition for a binary tree node.
&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt; * struct TreeNode {
&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt; *     int val;
&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt; *     TreeNode *left;
&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt; *     TreeNode *right;
&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt; *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt; * };
&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TreeNode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mirrorTree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TreeNode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;mirrorTree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mirrorTree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;h_2177365491_15&quot; data-into-catalog-status=&quot;&quot;&gt;pair替代二元数据结构&lt;/h3&gt;&lt;p&gt;有时候我们可能需要一些临时的数据结构。如果这个数据结构只有两个成员变量，那么你大可不必定义出来一个struct或class。直接上pair！&lt;/p&gt;&lt;p&gt;比如这道：38. 外观数列&lt;br/&gt; &lt;/p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//leetcode-cn.com/problems/count-and-say/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-text=&quot;力扣&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;countAndSay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;say&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;say&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 直接用pair
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;        &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emplace_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emplace_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// pair对emplace友好
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;stringstream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;pa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;&#x27;0&#x27;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;pair还有其他好处，那就是它自带 operator&amp;lt; 比较运算符。如果你的自定义类型需要排序的话，那么pair就不需要你自己写这个比较函数了。而自定义类型则需要。&lt;/p&gt;&lt;p&gt;而且pair的构造函数可以直接接受first和second的值做参数。这对于emplace或者emplace_back都很友好！&lt;/p&gt;&lt;h3 id=&quot;h_2177365491_16&quot; data-into-catalog-status=&quot;&quot;&gt;accumulate求数组的和&lt;/h3&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accumulate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nums&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;h_2177365491_17&quot; data-into-catalog-status=&quot;&quot;&gt;partial_sum 部分求和&lt;/h3&gt;&lt;p&gt;对于某些“前缀和”相关的题目，可以简化代码&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;    &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;partial_sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;back_inserter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;h3 id=&quot;h_2177365491_18&quot; data-into-catalog-status=&quot;&quot;&gt;min()和max()&lt;/h3&gt;&lt;p&gt;比如我们一般怎么求最小值呢？&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以直接用std::min()来简化if else：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;工作中不太需要，刷题适合。如果你需要从三个数字中求最小值呢？加一层{}&lt;/p&gt;&lt;p&gt;&lt;b&gt;如果求最大值就用std::max()&lt;/b&gt;&lt;/p&gt;&lt;h3 id=&quot;h_2177365491_19&quot; data-into-catalog-status=&quot;&quot;&gt;max_element()和min_element()&lt;/h3&gt;&lt;p&gt;如果要从一个数组中找出最大值呢？&lt;/p&gt;&lt;p&gt;一般我们可能这么写：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 假设-1是肯定小于dp[i]的
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// dp是vector&amp;lt;int&amp;gt; 类型
&lt;/span&gt;&lt;span class=&quot;c1&quot;/&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;太长了，可以直接：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot;&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;max_element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 这样写的前提是能保证dp不是空的，否则段错误！
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;h_2177365491_20&quot; data-into-catalog-status=&quot;&quot;&gt;二分查找相关&lt;/h3&gt;&lt;p&gt;upper_bound()和lower_bound()有时可以极大简化你手写二分法。&lt;/p&gt;&lt;h3 id=&quot;h_2177365491_21&quot; data-into-catalog-status=&quot;&quot;&gt;持续更新……&lt;/h3&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>74b14750810ef889a0d7be802d3f1c7f</guid>
<title>[推荐] 亿级流量架构演进实战：从零构建亿级流量 API 网关（一）</title>
<link>https://toutiao.io/k/gez059v</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left&quot; aria-describedby=&quot;js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI3MDU5OTU0MA==&amp;amp;action=getalbum&amp;amp;album_id=2087433865563832322#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;2087433865563832322&quot; data-tag_source=&quot;0&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#亿级流量架构演进实战&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;2个&lt;span class=&quot;weui-hidden_abs&quot;&gt;内容&lt;/span&gt;&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;这不是一个讲概念的专栏，而且我也不擅长讲概念，每一篇文章都是一个故事，我希望你可以通过这些故事了解我当时在实际工作中遇到问题和背后的思考，架构设计是种经验，我有幸参与到多个亿级系统的架构设计中，有所收获的同时也希望把这些收获分享与大家。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;2013年，我在做 APP 服务端的平台化转型，故事就从这里开始。&lt;/p&gt;&lt;p&gt;在最开始做网关时，我并没有一开始就明确说要做个 API 网关，而是做着做着发现这是个网关。因为当时我是在做服务端的平台化转型，最开始时只是提供了客户端登录、获取插件列表、插件启动授权几个简单的 API，其中客户端登录是通过 RSA 和 AES 非对称加密算法来实现，登录之后平台颁发 token 给客户端，有了 token 之后，客户端就通过 OAuth 2.0 协议来调用获取插件列表、插件启动授权等 API，不过由于最开始没想清楚，提供出去的 API 接口定义和格式不统一，虽然都是 json 格式，但几乎每个 API 都有自己的的格式定义，即每个 method 在服务端都实现了一个 Servlet 服务，客户端天天是要这接口要那接口，搞了上百个接口还是被客户端碾着走，更糟糕的是代码越来越臃肿还老出问题。&lt;/p&gt;&lt;p&gt;后来就想为何不把接口定义和格式统一了，就只提供一个 Serlvet 服务，通过解析 API 接口参数在后端进行服务的分发，这样至少可以减少每个 API 都写一遍 Servlet 的工作，当时的这个架构是 C/S 的架构，客户端通过公网访问弹内的服务器，这个功能上线其实是上线了一个新的 API，之后客户端的新功能都必须使用新的 API，老的 API 在客户端线上的版本逐步下线后，服务端再对老的 API 进行清理，当整个架构逐渐形成之后，服务端的开发效率得到了显著的提升，也是这时，我觉得这其实是个网关的雏形，所以整个平台演进的过程，在这一阶段我总结为：统一服务接口。&lt;/p&gt;&lt;h1&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.440625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FAeR52xeN391DpyUN48jy9BsjXmbZ31icnwibraJ4bhdZ5xRp76lvx4B8SZiax3zjOwcAT3RANbL9MAPF5cibcJUrg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;1。什么是网关？&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;现在来谈谈 API 网关，关于 API 网关的定义，有很多的说法，其字面意思就是系统的统一 API 入口。说白了，&lt;strong&gt;就是将客户端的所有请求统一通过 API 网关接入服务端，并完成认证、授权、安全、流控、熔断、调度、转发、监&lt;/strong&gt;控等处理过程。API 网关的价值，就是为实现更加安全、高效和稳定的 API 调用提供服务保障。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;就我当时负责的平台而言，统一了服务接口还不能说是做了一个网关，因为这仅仅是实现了网关统一接入组件的一个点，那网关的统一接入组件又是什么？下面我们先聊下网关的每一个组件，以及每一个组件的职责。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;API 网关的核心组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从 API 调用的过程来看，我把 API 网关划分为四个组件：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;统一接入组件，管理所有的请求接入，负责认证鉴权、安全、校验、限流、降级和熔断等，它就像 API 网关的护城河；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务调度组件，管理请求的路由和调度，负责协议解析、路由、转换、映射和服务编排等，它是外部请求调度后端服务的中间枢纽，也是 API 网关的大脑（只有大脑才知道哪个 API 应去哪里调度）；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务发布组件，管理 API 的注册和订阅，负责服务发现、服务订阅和服务更新等，它是 API 网关的心脏（心脏会不断的把 API 信息同步给网关）；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务监控组件，是对所有 API 请求的统一监控，负责日志、监控、告警和统计分析等，它是 API 网关的守卫。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;这里我画了一张 API 网关的架构示意图。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.39296875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FAeR52xeN391DpyUN48jy9BsjXmbZ31icqiaYUn6A9SXSxweIicnOOeHqztpF5ascdgVaDqjMFIJYqgMLQ2tuF20Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;统一接入组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当时，统一了服务接口的确实现了 API 的统一接入点，但很快也暴露出了新的问题 —— 这个接入点很快就过热了，之前的登录 API 和插件 API 都是分开的，现在统一后，有些 API 出故障后影响面很大，印象非常深刻的一次是客户端上线了一个定时查询待出库订单数的功能，结果整个服务端全面打爆，服务重启很快又被打爆，这其实是统一之后服务端没有及时跟上必要的限流、熔断等防御手段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，那次之后，服务端进行了第一次的系统拆分 —— 网关和服务中心。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;2。分层架构&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.45625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FAeR52xeN391DpyUN48jy9BsjXmbZ31icTDMvv3ibqTDSklwjOBCokKOdibvHOXCQr94hsNTECWYb4s7I9vH9CxoQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;平台提供的所有端能力进行服务下沉，搭建服务中心新系统，原系统作为网关将重点负责 API 接入、安全、流控、熔断、路由、分发、调度、监控等功能。除了垂直拆分，还做了水平拆分，即对平台 API 和业务 API 进行了隔离，简单说，就是提供了两个 Servlet。当时，还没有微服务化的概念，只是想着隔离平台调用与业务调用的相互影响，能解决当时的问题。后来，在认识了微服务之后，有一种后知后觉的感觉，这次系统的拆分使得平台整体的稳定性得到很大的提升，不过后来玩微服务有点玩坏了，而这就是后话了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;重构之后的网关架构比较整洁，在实现上，统一接入组件采用的是类似于责任链的方式，由于这时期的 API 调用主要是 HTTP 请求，所以网关是基于 Servlet 来提供 API 服务的，通过拦截器进行安全、流控、熔断等功能的实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4796875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FAeR52xeN391DpyUN48jy9BsjXmbZ31icm7NsoSSotia6dnAVGz6EibIC0t91gYzWPy21EP1RO22DcYP0OIBj8QIw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中 FrequencyPipe 是负责流控和熔断的拦截器，这里必须得说一下，毕竟是这里栽了跟头。常见的限流算法有漏斗算法和令牌桶算法，我的理解，令牌桶常用于控制并发，无论何时，令牌的总数是固定的，每次调用开始都需要申请，调用结束都需要释放；漏桶适用于控制 QPS，漏桶可以在每秒生成 m 个令牌，每次调用开始都需要申请，但调用结束不需要释放，不过问题就是如果上一秒的调用没有结束，实际调用会大于当前生成的 m 个令牌控制的调用量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在实现上，当时了解 Guava 的 RateLimiter 与 Semaphore 都可以实现，通过对比，网关使用的是 Guava 的 Semaphore 令牌桶策略来控制并发数，不过，遇到的问题就是每次重启都会有瞬时的流量超过并发数。而在后来随着微服务与网关越来越火，又有 Hystrix 或 Sentinel 提供了更强大的功能，比如 Hystrix 的线程熔断和 Sentinel 的异常熔断等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;3。高可用架构&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;日志的作用不言而言，网关的调用日志是必不可少的。而且下定决心要做全链路的日志，是已经被各种查问题逼的不胜其烦的情况下了，你能想象到的，尤其是莫名被拉到一个群里，被@有个问题要查网关一次调用的一个参数对不对或有没有，没有个日志服务平台，不仅要亲自操刀上阵，更悲催的是还只能去每台服务器上去找日志。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;服务端在拆分了网关和服务中心之后，系统都开始往微服务架构的方向演进，一次 API 调用就需要有全局唯一的标识进行串联，网关采用的是 UUID，在 API 每次调用时都会生成一个 UUID 传递给上游并返回给客户端，这样当有问题需要查询时，就可以通过 UID 准确查找相关日志了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;怎么进行日志的采集、查询、统计，以及如何基于日志实现监控告警？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通常来讲，大多数系统打印日志采用的是 Log4j，网关也是，再通过集团提供的日志服务系统，比如 Scribe、Flume 等进行日志采集，然后就可以在日志系统或监控系统里看到数据了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不过，日志采集看着简单，做起来还是个技术活，网关的调用量本身是很大的，先不看记录网关日志会有多大的存储量，关键点是看打印日志会对网关性能有多大的影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先谈一下 Log4j，我们知道 Log4j 1.x 会引发线程 BLOCKED，所以 Log4j 1.x 不适合高并发的场景，解决方法一种是升级到 log4j2 或者更换为 logback，另一种是通过设置 BufferedIO 或者使用 AsyncAppender 来缓解出现 BLOCKED 的概率。遗憾的是，网关采用的是后者，这主要是依赖冲突导致的，不过这只是做日志采集里的一个小点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;基于 MMap、Kafka、Storm、ElasticSearch 实现日志服务平台&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;除此之外，网关自己还实现了一套日志服务系统，这主要是开放给平台用户的，当时集团的日志系统还不对外开发，所以自己就又搞了一套。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当时技术选型没有选择 Scribe、Flume，而是自己基于 MMap 技术来实现，这也受限于服务器 agent 权限，所以，基本思路是通过 Kafka 进行日志收集，然后 Storm 接收后写到 ElasticSearch 提供服务查询，这里有个技术点，最开始写日志是直接发 Kafka，不过线上发现网络的抖动会影响写 Kafka 的 RT，后来，我们尝试了2种方案，第一种是采用线程池异步写，另一种是基于 MMap 技术将日志先落盘，然后再异步的读文件发 Kafka，相比之下，第二种方案更不会丢数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;日志打不好，找问题不仅抓瞎，弄不好系统还要扑街？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说到最后，也谈谈打日志出的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一，throw Exception，这点尤其注意，微服务架构里，如果服务提供方服务异常，一定不要将异常堆栈也传给服务调用方，虽然通过异常信息可以快速定位问题，但异常信息会占用大量的网络资源，严重的就变成服务不可用了，这里，我是有血的教训的，所以，我推荐的方式是定义返回结果对象里的返回值和错误码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;基于多维度的限流熔断策略，构建实时 API 成功率监控能力&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上文说了全链路日志和实时监控，本文就说下限流降级，这里都是故事。网关系统，需要对调用 API 进行实时的性能监控和错误码监控，由于是实时计算，所以采用了 NoSQL 来缓存数据，因为是对 API 进行监控，所以将 API 接口名作为缓存 Key，可当 API 调用异常猛增时，缓存热定问题就出现了，很快就出现了 failover，然后服务不可用。所以，在处理数据时一定要考虑好数据热点问题，无论是 NoSQL 还是 MySQL。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;4。总结&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;言而总之，本篇文章重点讲述了API网关的统一接入、分层架构、高可用架构。下篇文章，我将继续介绍流量调度的配置中心、泛化调用。如果你觉得有收获，欢迎你把今天的内容分享给更多的朋友。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;5。扩展阅读&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事1：从零构建亿级流量API网关&lt;/strong&gt;&lt;br/&gt;01 | API网关：统一接入、分层架构、高可用架构&lt;br/&gt;02 | 流量调度：配置中心、泛化调用&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事2：架构演进构建TCP长连接网关&lt;/strong&gt;&lt;br/&gt;03 | TCP网关：Netty框架、Protobuf格式、业务线程池&lt;br/&gt;04 | TCP长连接：心跳、Session管理、断线重连&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事3：架构演进重构消息PUSH系统&lt;/strong&gt;&lt;br/&gt;05 | 消息PUSH：消息推送、消息送达率、APNs&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事4：从焦油坑爬出来的交易系统&lt;/strong&gt;&lt;br/&gt;06 | 交易平台：订单管道、订单状态机、服务编排、任务引擎&lt;br/&gt;07 | 微服务化：服务治理、领域设计&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事5：烦人的焦油开始到处都是&lt;/strong&gt;&lt;br/&gt;08 | 新老系统：业务整合、数据融合、系统迁移&lt;br/&gt;09 | 高可用架构：隔离部署、系统监控与日志、可灰度、可降级&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事6：稳定性架构与大促保障&lt;/strong&gt;&lt;br/&gt;10 | 大道至简：系统复杂度、三明治架构&lt;br/&gt;11 | 大促保障：自动化测试、故障演练、性能压测&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>