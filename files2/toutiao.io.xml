<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>ad5745381a9c1b7947750066369392e2</guid>
<title>困在内卷里的工程师 | 码农周刊第 322 期</title>
<link>https://toutiao.io/k/mb7u8g0</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;困在内卷里的工程师 | 码农周刊第 322 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第322期（2020-10-21）&lt;/h2&gt;
        &lt;p&gt;☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=322&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3220&quot; target=&quot;_blank&quot;&gt;薪资翻番如何实现？程序员的涨薪秘诀&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;a href=&quot;https://weekly.manong.io/bounce?nid=322&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3220&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_321.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=322&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;业界实战&lt;/p&gt;
        
        &lt;p&gt;实战经验&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;工作地点：成都 | 薪资：15-30K | 简历投递邮箱：xiexiaofang@huobi.com&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;功能强大、配置简单、完全开源。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;第三代 AI 发展的思路是把第一代的知识驱动和第二代的数据驱动结合起来，通过利用知识、数据、算法和算力等 4 个要素，构造更强大的 AI……&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;斯坦福教授、Tcl 语言发明者 John Ousterhout 的著作《A Philosophy of Software Design》，自出版以来，好评如潮。&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;实战经验&lt;/p&gt;
        
        &lt;p&gt;适合新手&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;试试吧&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;
        
        &lt;p&gt;图文并茂&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;实用&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;一步步教你&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 448635 即可&lt;/p&gt;
        
        &lt;p&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 429587 即可&lt;/p&gt;
        
        &lt;p&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 412364 即可&lt;/p&gt;
        
        &lt;p&gt;编程、成长、正能量！&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 381811 即可&lt;/p&gt;
        
        &lt;p&gt;分享Go语言相关内容&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 133906 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=322&amp;amp;aid=20030&amp;amp;url=https%3A%2F%2Fitem.jd.com%2F12972072.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/book_322.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;欢迎讨论&lt;/p&gt;
        
        &lt;p&gt;部分适用于百度&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>27c4c24bc532e901e21b4a7f2b9cfc59</guid>
<title>Redis + Nginx + 设计模式 + Spring 全家桶 + Dubbo + 阿里技术精选文档</title>
<link>https://toutiao.io/k/zp8ncvc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;最近有一些粉丝私聊我，有没有技术文档，然后我这边经过一段时间收集，终于整理好了这套技术文档，里面包含了Redis、Nginx、设计模式、spring全家桶、Dubbo等关于Java架构方面的资料，一并分享给大家。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;img data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5625&quot; data-type=&quot;jpeg&quot; data-w=&quot;1600&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C5z5LG0MRMlzpTnynVCNP80picCNY1NZQ5ju9yDdp28GWPMKnntibNibTZQU2EHdem8LBibbrX5T5MDlmqckN54euw/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;技术文档已经整理好储存在网盘里面&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;这份资料包括：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;193&quot; data-source-title=&quot;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;IDEA、Java语法、面向对象、异常、常用类、集合、IO流、多线程、网络编程、JUnit、枚举、注解、反射机制、CSS、HTML、JavaScript、JQuery、ajax、Javaweb、MySQL、JavaEE、SSM框架、springboot、算法、Git、maven、Linux、设计模式、多线程与高并发、视频教程、视频源码、实战项目、电子书、简历模板、高频面试题等等资源。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;资料目录&lt;/span&gt;&lt;/strong&gt; &lt;/span&gt;&lt;br/&gt;—————————————————————————————&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;开发手册系列：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Java核心知识点整理手册&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;阿里巴巴开发手册（汇总）&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;....&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;268&quot; data-backw=&quot;552&quot; data-ratio=&quot;0.4849673202614379&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;765&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/V0Q3M5IicQd4sBhcWKe8Zzd1ov8HtEnRsPgorJprjswKPglXLDlko2VP6mn56PCFKXaAvv2nal1vZ1JGO0KTn8A/640?wx_fmt=png&quot;/&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;300&quot; data-backw=&quot;552&quot; data-ratio=&quot;0.5425925925925926&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9cHGeGOCicSFG95YMCAm0DxqStrgwpSwwRbvAC3BSqOtibd0hdYqzA5gxOUCykqD7MibkDu02pziaqys7HL2zeB5LA/640?wx_fmt=png&quot;/&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;面试系列：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;PDF文档&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;系列&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;87&lt;/span&gt;页的Spring+Boot核心笔记&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;17页的Mybatis面试专题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;43页的多线程专题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;22页的数据库专题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;86页的JVM专题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;13页的设计模式专题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;473页的&lt;span&gt;&lt;span&gt;Spring&lt;/span&gt;专题&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;127页的大厂面试题库&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.42891278375149344&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;837&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/V0Q3M5IicQd5kLCxLZQWoLOlCBOen6HetwxGFujCNEJwWfoaMHicibiaFRViac2FPTRFoln62cHoaAMDKvJh7jnzXPw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（这些PDF文档都是非常不错的，&lt;/span&gt;&lt;span&gt;值得大家研读，也可结合思维导图找到学习的方向&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;针对这些技术我已经整理好了相关的文档以及资料，如果感兴趣的话可以扫码获取&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;strong&gt;资料获取方法&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按扫码，领取资料&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;遇到扫码频繁，请再次识别&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/V0Q3M5IicQd6Xccib24AI1GARdeCBNnE8EJiaHPbNHNoJ52kRM1Jls8DDY2Op8JMkMduuWmp7Q1FMYOzguWLJwSWg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot;/&gt;&lt;br/&gt;&lt;span/&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;所有资料扫码免费领取！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;Java精品技术教程&lt;/span&gt;&lt;/strong&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6113033448673587&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;867&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/V0Q3M5IicQd5kLCxLZQWoLOlCBOen6Hetcr4COQK415rtXGLNFqrJnm7hQsEmOuge3uSibDiaZic409LnGwDe0wBEQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;互联网企业面试真题&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;243&quot; data-backw=&quot;558&quot; data-ratio=&quot;0.4353932584269663&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1068&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/V0Q3M5IicQd4sBhcWKe8Zzd1ov8HtEnRsib3S39RCbOOYpiacxH2J4XsQGicXTwvxOhgYWYbicIvGaKKY9xlUl3baIQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;Java核心技术总结（283页）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5416666666666666&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1920&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/V0Q3M5IicQd5kLCxLZQWoLOlCBOen6HetMH5MibEcQrHM6h3Wiazspg6QztNzlicRSMFfQ6dOA32rJ5eel4hsXYw4A/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;已经将所有资料整理好（源码，笔记，PPT，学习视频）&lt;/span&gt;&lt;strong&gt;&lt;span&gt;免费领取&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;资料获取方法&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;长按扫码，领取资料&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;遇到扫码频繁，请再次识别&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/V0Q3M5IicQd6Xccib24AI1GARdeCBNnE8EJiaHPbNHNoJ52kRM1Jls8DDY2Op8JMkMduuWmp7Q1FMYOzguWLJwSWg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot;/&gt;&lt;br/&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;所有资料扫码免费领取！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c977179f100b1173d5470874f42c622a</guid>
<title>想自己写框架？不会写 Java 注解可不行</title>
<link>https://toutiao.io/k/9j801i6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;img data-ratio=&quot;0.5107066381156317&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EoF5meUibw0yzDr8WJvWZZdqOIIwTs8SQTGtujhpO4wUf2bPiaCMDMfPJBydvqLFYSAFEHHOLekPcIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1868&quot;/&gt;&lt;/h1&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;用注解一时爽，一直用一直爽&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java后端开发进入spring全家桶时代后，开发一个微服务提供简单的增删改查接口跟玩泥巴似的非常简单，一顿操作猛如虎，回头一看代码加了一堆注解：@Controller @Autowired @Value，面向注解编程变成了大家不可缺少的操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想象一下如果没有注解Java程序员可以要哭瞎😭&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;既然注解（annotation）这么重要，用的这么爽，那注解的实现原理你知道么？我猜你只会用注解不会自己写注解（手动滑稽）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，下面的内容带大家从零开始写一个注解，揭开注解神秘的面纱。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;原来注解不神秘&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注解用大白话来说就是一个标记或者说是特殊的注释，如果没有解析这些标记的操作那它啥也不是。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注解的格式如同类或者方法一样有自己特殊的语法，这个语法下文会详细介绍。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那如何去解析注解呢？这就要用到Java强大的反射功能了。反射大家应该都用过，可以通过类对象获取到这个类的各种信息比如成员变量、方法等，那注解标记能不能通过反射获取呢？当然可以了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以注解的原理其实很简单，本质上是通过反射功能动态获取注解标记，然后按照不同的注解执行不同的操作，比如@Autowired可以注入一个对象给变量赋值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到这里是不是很躁动啊，来吧自己也撸一个注解。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;造火箭啦，自己动手写一个注解&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;便于大家理解，这里先引入一个场景：在线教育火了，经理让我写一个模块实现学生信息管理功能，考虑到分布式并发问题，经理让我务必加上分布式锁。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经理问我几天能搞定？我说至少3天。如是脑补了以下代码：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6792452830188679&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EoF5meUibw0yzDr8WJvWZZdqqlLKjLNNCtPCHibIuk1mn2diaf8Klgconujc6bl0oUkt0LnwnBZkFiarQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1060&quot;/&gt;&lt;figcaption&gt;未使用注解前&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经理走后我在思考，我能不能只花一天时间写完，剩下两天时间用来写博客划水呢？突然灵感来了，我可以把重复的代码逻辑抽出来用注解实现不就节省代码了，哈哈，赶紧写。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用注解之后整个方法清爽了很多，HR小姐姐都夸我写的好呢。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.34057971014492755&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EoF5meUibw0yzDr8WJvWZZdqEmXvlkS1Os6hgkYAP7icgjSbNhw9dZY3kANTX6G2rGklJibFJDEkPE1w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1104&quot;/&gt;&lt;figcaption&gt;使用注解后&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码已经写完上库了，现在我在划水写博客呢。是不是很简洁很优雅很牛逼，怎么做到的呢，主要分为三步：&lt;span&gt;1打开冰箱门，2把大象放进去，3把冰箱门关好&lt;/span&gt;。好了，扯远了，大家接着往下看。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第一步定义一个注解&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5019455252918288&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EoF5meUibw0yzDr8WJvWZZdqMZ5FFRhuPEK5IFahHnN9HVuDN0Fg8g5dHTct84u3q32SWqVUl9hMWg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1028&quot;/&gt;&lt;figcaption&gt;注解的三大组成部分&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个注解可以简单拆解为三个部分：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一部分：注解体&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注解的定义有点类似于接口（interface），只不过前面一个加了一个@符号，这个千万不能省。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第二部分：注解变量&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注解变量的语法有点类似于接口里面定义的方法，变量名后面带一对括号，不同的是注解变量后面可以有默认值。另外返回值只能是Java基本类型、String类型或者枚举类，不可以是对象类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第三部分：元注解&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;元注解（meta-annotation）说白了就是给注解加注解的注解，是不是有点晕了，这种注解是JDK提前内置好的，可以直接拿来用的。不太懂也没有关系反正数量也不多，总共就4个，我们背下来吧：@Target @Retention @Documented @Inherited&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来描述注解的使用范围，即被修饰的注解可以用在什么地方 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注解可以用于修饰 packages、types（类、接口、枚举、注解类）、类成员（方法、构造方法、成员变量、枚举值）、方法参数和本地变量（如循环变量、catch参数），在定义注解类时使用了@Target 能够更加清晰的知道它能够被用来修饰哪些对象，具体的取值范围定义在ElementType.java 枚举类中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如上面我们写的Redis锁的注解就只能用于方法上了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来描述注解保留的时间范围，即注解的生命周期。在 RetentionPolicy 枚举类中定义了三个周期：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;enum&lt;/span&gt; RetentionPolicy {&lt;br/&gt;    SOURCE, &lt;span&gt;// 源文件保留&lt;/span&gt;&lt;br/&gt;    CLASS,  &lt;span&gt;// 编译期保留，默认值&lt;/span&gt;&lt;br/&gt;    RUNTIME &lt;span&gt;// 运行期保留，可通过反射去获取注解信息&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;像我们熟知的@Override注解就只能保留在源文件中，代码编译后注解就消失了。比如上面我们写的Redis锁的注解就保留到了运行期，运行的时候可以通过反射获取信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来描述在使用 javadoc 工具为类生成帮助文档时是否要保留其注解信息，很简单不多解释了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;被Inherited注解修饰的注解具有继承性，如果父类使用了被@Inherited修饰的注解，则其子类将自动继承该注解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，这一步我们已经将注解定义好了，但是这个注解如何工作呢？接着看。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第二步实现注解的业务逻辑&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在第一步中我们发现定义的注解（@EnableRedisLock）中没有业务逻辑，只有一些变量，别忘了我们的注解是要使能Redis分布式锁的功能，那这个注解到底是怎么实现加锁和释放锁的功能呢？这个就需要我们借助反射的强大功能了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8320987654320988&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EoF5meUibw0yzDr8WJvWZZdqUn3Q8519JibztRk3QLv37icMBdN7k9bGpbUSHaa1aWTxXc2Vv8z8JHXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1620&quot;/&gt;&lt;figcaption&gt;注解的操作&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里借助了切面的功能，将EnableRedisLock注解作为一个切点，只要方法上标注了这个注解就会自动执行这里的代码逻辑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过反射机制拿到注解对象后就可以执行加锁解锁的常用逻辑啦。Redis实现分布式锁相信大家已经很熟悉了，这里就不在啰嗦了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;第三步在业务代码中尽情的使用注解&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@EnableRedisLock&lt;/span&gt;(lockKey = &lt;span&gt;&quot;student&quot;&lt;/span&gt;, expireTime = &lt;span&gt;10&lt;/span&gt;, timeUnit = TimeUnit.SECONDS, retryTimes = &lt;span&gt;5&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;method1&lt;/span&gt;&lt;span&gt;(Student student)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// 这里写业务逻辑&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在需要加锁的方法上直接加上注解就可以啦，怎么样是不是很简单呀，赶紧在你的项目中运用起来吧。 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，自己写一个注解的内容就介绍到这里了，学会了吗？&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>20a24c20159ab9b4fff14c891707084a</guid>
<title>PyTorch 学习笔记汇总</title>
<link>https://toutiao.io/k/hx2qti3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot;&gt;&lt;h2&gt;&lt;b&gt;PyTorch 学习笔记&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;这篇文章是我学习 PyTorch 过程中所记录的学习笔记汇总，包括 &lt;b&gt;25&lt;/b&gt; 篇文章，是我学习&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//ai.deepshare.net/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;深度之眼&lt;/a&gt;&lt;/b&gt; &lt;b&gt;PyTorch&lt;/b&gt; 框架版课程期间所记录的内容。课程地址：&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//ai.deepshare.net/detail/p_5df0ad9a09d37_qYqVmt85/6&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;ai.deepshare.net/detail&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;/p_5df0ad9a09d37_qYqVmt85/6&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt;&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;学习笔记的结构遵循课程的顺序，共分为 8 周，循序渐进，&lt;b&gt;力求通俗易懂&lt;/b&gt;。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;代码&lt;/b&gt; &lt;/h2&gt;&lt;p&gt;配套代码：&lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/zhangxiann/PyTorch_Practice&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/zhangxiann/P&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;yTorch_Practice&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;所有代码均在 PyCharm 中通过测试，建议通过 git 克隆到本地运行。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;数据&lt;/b&gt; &lt;/h2&gt;&lt;p&gt;由于代码中会用到一些第三方的数据集，这里给出百度云的下载地址（如果有其他更好的数据托管方式，欢迎告诉我）。&lt;/p&gt;&lt;p&gt;数据下载地址： 链接：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1f9wQM7gvkMVx2x5z6xC9KQ&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;pan.baidu.com/s/1f9wQM7&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;gvkMVx2x5z6xC9KQ&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt; 提取码：w7xt&lt;/p&gt;&lt;h2&gt;&lt;b&gt;面向读者&lt;/b&gt; &lt;/h2&gt;&lt;p&gt;本教程假定读你有一定的机器学习和深度学习基础。&lt;/p&gt;&lt;p&gt;如果你没有学习过机器学习或者深度学习，建议先观看 Andrew ng 的深度学习（Deep Learning）课程，课程地址： &lt;b&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//mooc.study.163.com/university/deeplearning_ai%23/c&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;mooc.study.163.com/univ&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ersity/deeplearning_ai#/c&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt;&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;然后再学习本教程，效果会更佳。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;学习计划&lt;/b&gt; &lt;/h2&gt;&lt;p&gt;这个学习笔记共 25 章，分为 8 周进行的，每周大概 3 章（当然你可以根据自己的进度调整），每章花费的时间约 30 分钟到 2 个小时之间。&lt;/p&gt;&lt;p&gt;目录大纲如下：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Week 2（图片处理与数据加载）&lt;/b&gt; &lt;/li&gt;&lt;li&gt;&lt;b&gt;Week 3（模型构建）&lt;/b&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Week 4（模型训练）&lt;/b&gt; &lt;/li&gt;&lt;li&gt;&lt;b&gt;Week 5（可视化与 Hook）&lt;/b&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Week 6（正则化）&lt;/b&gt; &lt;/li&gt;&lt;li&gt;&lt;b&gt;Week 7（模型其他操作）&lt;/b&gt; &lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br/&gt;&lt;/b&gt;&lt;br/&gt;如果这份 PyTorch 学习笔记对你有帮助，欢迎 star：&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/zhangxiann/PyTorch_Practice&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/zhangxiann/P&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;yTorch_Practice&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;如果你觉得这篇文章对你有帮助，不妨点个赞，让我有更多动力写出好文章。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9efb9de282e77cad548b4d6417fd5549</guid>
<title>天啦撸！打印日志竟然只晓得 Log4j？</title>
<link>https://toutiao.io/k/8hug5ul</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;p&gt;空了的时候，我都会在群里偷偷摸摸地潜水，对小伙伴们的一举一动、一言一行筛查诊断。一副班主任的即时感，让我感到非常的快乐，&lt;strong&gt;略微夹带一丝丝的枯燥&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;这不，我在战国时代读者群里发现了这么一串聊天记录：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1.6898047722342733&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpl0dY4BVrTdPYiafibEgPDia9nhNKQibU1UOVgKibcBr8EVSU4VHWx3efYPJDib3QsVTpczCWRMsAYdsb8A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;922&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;竟然有小伙伴不知道“打日志”是什么意思，不知道该怎么学习，还有小伙伴回答说，只知道 Log4j！&lt;/p&gt;&lt;p&gt;有那么一刻，我遭受到了一万点暴击，内心莫名的伤感，犹如一匹垂头丧气的狗。因为网络上总有一些不怀好意的人不停地攻击我，说我写的文章入门，毫无深度——他们就是我命中注定的黑子，不信你到脉脉上搜“沉默王二”，就能看到他们毫无新意的抨击。&lt;/p&gt;&lt;p&gt;我就想问一下，怎么了，入门的文章有入门的群体需要，而我恰好帮助了这么一大批初学者，我应该受到褒奖好不好？&lt;/p&gt;&lt;p&gt;（说好的不在乎，怎么在乎起来了呢？手动狗头）&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1.0078740157480315&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpl0dY4BVrTdPYiafibEgPDia9nDndmBbib5dObWFUiaxCK6HicueicFYVgv01uKiaI7HYLharpu15vh7ZpWDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;254&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;管他呢，&lt;strong&gt;我行我素&lt;/strong&gt;吧，保持初心不改就对了！这篇文章就来说说 Log4j，这个打印日志的鼻祖。Java 中的日志打印其实是个艺术活，我保证，这句话绝不是忽悠。&lt;/p&gt;&lt;p&gt;事实证明，打印日志绝逼会影响到程序的性能，这是不可否认的，毕竟多做了一项工作。尤其是在交易非常频繁的程序里，涌现大量的日志确实会比较低效。&lt;/p&gt;&lt;p&gt;基于性能上的考量，小伙伴们很有必要认认真真地学习一下如何优雅地打印 Java 日志。毕竟，&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIxNzQwNjM3NA==&amp;amp;mid=2247489213&amp;amp;idx=1&amp;amp;sn=8802c2f512305084128c9fd4be80a353&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;性能&lt;/a&gt;是一个程序员优不优秀的重要考量。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;01、为什么需要在 Java 中打印日志&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;System.out.println()&lt;/code&gt; 恐怕是我们在学习 Java 的时候，最常用的一种打印日志的方式了，几乎每个 Java 初学者都这样干过，甚至一些老鸟。&lt;/p&gt;&lt;p&gt;之所以这样打印日志，是因为很方便，上手难度很低，尤其是在 IDEA 的帮助下，只需在键盘上按下 &lt;code&gt;so&lt;/code&gt; 两个字母就可以调出 &lt;code&gt;System.out.println()&lt;/code&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.28383458646616544&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpl0dY4BVrTdPYiafibEgPDia9nBVLjsGFLhOhCd6iakMNcz3W3Q0mgbkRicrEq6M4XRELD2XrwTTZhY7HQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1064&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;在本地环境下，使用 &lt;code&gt;System.out.println()&lt;/code&gt; 打印日志是没问题的，可以在控制台看到信息。但如果是在生产环境下的话，&lt;code&gt;System.out.println()&lt;/code&gt; 就变得毫无用处了。&lt;/p&gt;&lt;p&gt;控制台打印出的信息并没有保存到日志文件中，只能即时查看，在一屏日志的情况下还可以接受。如果日志量非常大，控制台根本就装不下。所以就需要更高级的日志记录 API（比如 Log4j 和 java.util.logging）。&lt;/p&gt;&lt;p&gt;它们可以把大量的日志信息保存到文件中，并且控制每个文件的大小，如果满了，就存储到下一个，方便查找。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;02、选择不同日志级别的重要性&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;使用 Java 日志的时候，一定要注意日志的级别，比如常见的 DEBUG、INFO、WARN 和 ERROR。&lt;/p&gt;&lt;p&gt;DEBUG 的级别最低，当需要打印调试信息的话，就用这个级别，不建议在生产环境下使用。&lt;/p&gt;&lt;p&gt;INFO 的级别高一些，当一些重要的信息需要打印的时候，就用这个。&lt;/p&gt;&lt;p&gt;WARN，用来记录一些警告类的信息，比如说客户端和服务端的连接断开了，数据库连接丢失了。&lt;/p&gt;&lt;p&gt;ERROR 比 WARN 的级别更高，用来记录错误或者异常的信息。&lt;/p&gt;&lt;p&gt;FATAL，当程序出现致命错误的时候使用，这意味着程序可能非正常中止了。&lt;/p&gt;&lt;p&gt;OFF，最高级别，意味着所有消息都不会输出了。&lt;/p&gt;&lt;p&gt;这个级别是基于 Log4j 的，和 java.util.logging 有所不同，后者提供了更多的日志级别，比如说 SEVERE、FINER、FINEST。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpl0dY4BVrTdPYiafibEgPDia9nZ3zHRefwS0aX0k2qSetYiajbtaT3lzSkwPTJKl5qPLNrMGKHHIVmXJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;180&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;03、错误的日志记录方式是如何影响性能的&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;为什么说错误的日志记录方式会影响程序的性能呢？因为日志记录的次数越多，意味着执行文件 IO 操作的次数就越多，这也就意味着会影响到程序的性能，能 get 吧？&lt;/p&gt;&lt;p&gt;虽然说普通硬盘升级到固态硬盘后，读写速度快了很多，但磁盘相对于内存和 CPU 来说，还是太慢了！就像马车和奔驰之间的速度差距。&lt;/p&gt;&lt;p&gt;这也就是为什么要选择日志级别的重要性。对于程序来说，记录日志是必选项，所以能控制的就是日志的级别，以及在这个级别上打印的日志。&lt;/p&gt;&lt;p&gt;对于 DEBUG 级别的日志来说，一定要使用下面的方式来记录：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt;(logger.isDebugEnabled()){ &lt;br/&gt;    logger.debug(&lt;span&gt;&quot;DEBUG 是开启的&quot;&lt;/span&gt;); &lt;br/&gt;} &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当 DEBUG 级别是开启的时候再打印日志，这种方式在你看很多源码的时候就可以发现，很常见。&lt;/p&gt;&lt;p&gt;切记，在生产环境下，一定不要开启 DEBUG 级别的日志，否则程序在大量记录日志的时候会变很慢，还有可能在你不注意的情况下，悄悄地把磁盘空间撑爆。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1.0201612903225807&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpl0dY4BVrTdPYiafibEgPDia9n3gIdkgYWjiaf0wAe0HUJOYQBHWFK6vmb7qe3WDHmlJTS53PerEGThhg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;248&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;04、为什么选择 Log4j 而不是 java.util.logging&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;java.util.logging 属于原生的日志 API，Log4j 属于第三方类库，但我建议使用 Log4j，因为 Log4j 更好用。java.util.logging 的日志级别比 Log4j 更多，但用不着，就变成了多余。&lt;/p&gt;&lt;p&gt;Log4j 的另外一个好处就是，不需要重新启动 Java 程序就可以调整日志的记录级别，非常灵活。可以通过 log4j.properties 文件来配置 Log4j 的日志级别、输出环境、日志文件的记录方式。&lt;/p&gt;&lt;p&gt;Log4j 还是线程安全的，可以在多线程的环境下放心使用。&lt;/p&gt;&lt;p&gt;先来看一下 java.util.logging 的使用方式：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.itwanger;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.io.IOException;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.logging.FileHandler;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.logging.Logger;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.logging.SimpleFormatter;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt; * &lt;span&gt;@author&lt;/span&gt; 微信搜「沉默王二」，回复关键字 PDF&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;JavaUtilLoggingDemo&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{&lt;br/&gt;        Logger logger = Logger.getLogger(&lt;span&gt;&quot;test&quot;&lt;/span&gt;);&lt;br/&gt;        FileHandler fileHandler = &lt;span&gt;new&lt;/span&gt; FileHandler(&lt;span&gt;&quot;javautillog.txt&quot;&lt;/span&gt;);&lt;br/&gt;        fileHandler.setFormatter(&lt;span&gt;new&lt;/span&gt; SimpleFormatter());&lt;br/&gt;        logger.addHandler(fileHandler);&lt;br/&gt;        logger.info(&lt;span&gt;&quot;细小的信息&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序运行后会在 target 目录下生成一个名叫 javautillog.txt 的文件，内容如下所示：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.12834224598930483&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpl0dY4BVrTdPYiafibEgPDia9nqbLZJ1owOjTzW80PZYlRlq427ob7gFeBsUbicSV3VyIIzTyS4J25YKg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1122&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;再来看一下 Log4j 的使用方式。&lt;/p&gt;&lt;p&gt;第一步，在 pom.xml 文件中引入 Log4j 包：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;log4j&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;log4j&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.2.17&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;第二步，在 resources 目录下创建 log4j.properties 文件，内容如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;### 设置###&lt;/span&gt;&lt;br/&gt;log4j.rootLogger = debug,stdout,D,E&lt;br/&gt;&lt;br/&gt;&lt;span&gt;### 输出信息到控制台 ###&lt;/span&gt;&lt;br/&gt;log4j.appender.stdout = org.apache.log4j.ConsoleAppender&lt;br/&gt;log4j.appender.stdout.Target = System.out&lt;br/&gt;log4j.appender.stdout.layout = org.apache.log4j.PatternLayout&lt;br/&gt;log4j.appender.stdout.layout.ConversionPattern = [%-&lt;span&gt;5&lt;/span&gt;p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n&lt;br/&gt;&lt;br/&gt;&lt;span&gt;### 输出DEBUG 级别以上的日志到=debug.log ###&lt;/span&gt;&lt;br/&gt;log4j.appender.D = org.apache.log4j.DailyRollingFileAppender&lt;br/&gt;log4j.appender.D.File = debug.log&lt;br/&gt;log4j.appender.D.Append = true&lt;br/&gt;log4j.appender.D.Threshold = DEBUG &lt;br/&gt;log4j.appender.D.layout = org.apache.log4j.PatternLayout&lt;br/&gt;log4j.appender.D.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n&lt;br/&gt;&lt;br/&gt;&lt;span&gt;### 输出ERROR 级别以上的日志到=error.log ###&lt;/span&gt;&lt;br/&gt;log4j.appender.E = org.apache.log4j.DailyRollingFileAppender&lt;br/&gt;log4j.appender.E.File =error.log &lt;br/&gt;log4j.appender.E.Append = true&lt;br/&gt;log4j.appender.E.Threshold = ERROR &lt;br/&gt;log4j.appender.E.layout = org.apache.log4j.PatternLayout&lt;br/&gt;log4j.appender.E.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;1）配置根 Logger&lt;/strong&gt;，语法如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;log4j.rootLogger = [ level ] , appenderName, appenderName, …&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;level 就是日志的优先级，从高到低依次是 ERROR、WARN、INFO、DEBUG。如果这里定义的是 INFO，那么低级别的 DEBUG 日志信息将不会打印出来。&lt;/p&gt;&lt;p&gt;appenderName 就是指把日志信息输出到什么地方，可以指定多个地方，当前的配置文件中有 3 个地方，分别是 stdout、D、E。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）配置日志输出的目的地&lt;/strong&gt;，语法如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;log4j.appender.appenderName = fully.qualified.&lt;span&gt;name&lt;/span&gt;.&lt;span&gt;of&lt;/span&gt;.appender.&lt;span&gt;class&lt;/span&gt;  &lt;br/&gt;log4j.appender.appenderName.option1 = value1  &lt;br/&gt;…  &lt;br/&gt;log4j.appender.appenderName.option = valueN&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Log4j 提供的目的地有下面 5 种：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;org.apache.log4j.ConsoleAppender：控制台&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;org.apache.log4j.FileAppender：文件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;org.apache.log4j.DailyRollingFileAppender：每天产生一个文件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;org.apache.log4j.RollingFileAppender：文件大小超过阈值时产生一个新文件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;org.apache.log4j.WriterAppender：将日志信息以流格式发送到任意指定的地方&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;3）配置日志信息的格式&lt;/strong&gt;，语法如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;log4j.appender.appenderName.layout = fully.qualified.&lt;span&gt;name&lt;/span&gt;.&lt;span&gt;of&lt;/span&gt;.layout.&lt;span&gt;class&lt;/span&gt;  &lt;br/&gt;log4j.appender.appenderName.layout.option1 = value1  &lt;br/&gt;…  &lt;br/&gt;log4j.appender.appenderName.layout.option = valueN&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Log4j 提供的格式有下面 4 种：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;org.apache.log4j.HTMLLayout：HTML 表格&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;org.apache.log4j.PatternLayout：自定义&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;org.apache.log4j.SimpleLayout：包含日志信息的级别和信息字符串&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;org.apache.log4j.TTCCLayout：包含日志产生的时间、线程、类别等等信息&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;自定义格式的参数如下所示：&lt;/p&gt;&lt;p&gt;第三步，写个使用 Demo：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.itwanger;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.apache.log4j.LogManager;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.apache.log4j.Logger;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt; * &lt;span&gt;@author&lt;/span&gt; 微信搜「沉默王二」，回复关键字 PDF&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Log4jDemo&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger logger = LogManager.getLogger(Log4jDemo.class);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;// 记录debug级别的信息&lt;/span&gt;&lt;br/&gt;        logger.debug(&lt;span&gt;&quot;debug.&quot;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;// 记录info级别的信息&lt;/span&gt;&lt;br/&gt;        logger.info(&lt;span&gt;&quot;info.&quot;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;// 记录error级别的信息&lt;/span&gt;&lt;br/&gt;        logger.error(&lt;span&gt;&quot;error.&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;1）获取 Logger 对象&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;要使用 Log4j 的话，需要先获取到 Logger 对象，它用来负责日志信息的打印。通常的格式如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger logger = LogManager.getLogger(Log4jDemo.class);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2）打印日志&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;有了 Logger 对象后，就可以按照不同的优先级打印日志了。常见的有以下 4 种：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Logger.debug() ;  &lt;br/&gt;Logger.info() ;  &lt;br/&gt;Logger.warn() ;  &lt;br/&gt;Logger.error() ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序运行后会在 target 目录下生成两个文件，一个名叫 debug.log，内容如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;2020&lt;span&gt;-10-20&lt;/span&gt; 20&lt;span&gt;:53&lt;/span&gt;&lt;span&gt;:27&lt;/span&gt;  &lt;span&gt;[ main:0 ]&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;[ DEBUG ]&lt;/span&gt;  &lt;span&gt;debug&lt;/span&gt;.&lt;br/&gt;2020&lt;span&gt;-10-20&lt;/span&gt; 20&lt;span&gt;:53&lt;/span&gt;&lt;span&gt;:27&lt;/span&gt;  &lt;span&gt;[ main:3 ]&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;[ INFO ]&lt;/span&gt;  &lt;span&gt;info&lt;/span&gt;.&lt;br/&gt;2020&lt;span&gt;-10-20&lt;/span&gt; 20&lt;span&gt;:53&lt;/span&gt;&lt;span&gt;:27&lt;/span&gt;  &lt;span&gt;[ main:3 ]&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;[ ERROR ]&lt;/span&gt;  &lt;span&gt;error&lt;/span&gt;.&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;另外一个名叫 error.log，内容如下所示：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;2020&lt;span&gt;-10-20&lt;/span&gt; 20&lt;span&gt;:53&lt;/span&gt;&lt;span&gt;:27&lt;/span&gt;  &lt;span&gt;[ main:3 ]&lt;/span&gt; &lt;span&gt;-&lt;/span&gt; &lt;span&gt;[ ERROR ]&lt;/span&gt;  &lt;span&gt;error&lt;/span&gt;.&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;05、打印日志的 8 个小技巧&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;1）在打印 DEBUG 级别的日志时，切记要使用 &lt;code&gt;isDebugEnabled()&lt;/code&gt;！那小伙伴们肯定非常好奇，为什么要这样做呢？&lt;/p&gt;&lt;p&gt;先来看一下 &lt;code&gt;isDebugEnabled()&lt;/code&gt; 方法的源码：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;isDebugEnabled&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(repository.isDisabled( Level.DEBUG_INT))&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; Level.DEBUG.isGreaterOrEqual(&lt;span&gt;this&lt;/span&gt;.getEffectiveLevel());&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;内部使用了 &lt;code&gt;isDisabled()&lt;/code&gt; 方法进行了日志级别的判断，如果 DEBUG 是禁用的话，就 return false 了。&lt;/p&gt;&lt;p&gt;再来看一下 &lt;code&gt;debug()&lt;/code&gt; 方法的源码：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;void&lt;/span&gt; &lt;span&gt;debug&lt;/span&gt;&lt;span&gt;(Object message)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(repository.isDisabled(Level.DEBUG_INT))&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(Level.DEBUG.isGreaterOrEqual(&lt;span&gt;this&lt;/span&gt;.getEffectiveLevel())) {&lt;br/&gt;      forcedLog(FQCN, Level.DEBUG, message, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;咦，不是也用 &lt;code&gt;isDisabled()&lt;/code&gt; 方法判断吗？难道使用 &lt;code&gt;isDebugEnabled()&lt;/code&gt;不是画蛇添足吗？直接用 &lt;code&gt;logger.debug()&lt;/code&gt; 不香吗？我来给小伙伴们解释下。&lt;/p&gt;&lt;p&gt;如果我们在打印日志信息的时候需要附带一个方法去获取参数值，就像下面这样：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;logger.debug(&lt;span&gt;&quot;用户名是：&quot;&lt;/span&gt; + getName());&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;假如 &lt;code&gt;getName()&lt;/code&gt; 方法需要耗费的时间长达 6 秒，那完了！尽管配置文件里的日志级别定义的是 INFO，&lt;code&gt;getName()&lt;/code&gt; 方法仍然会倔强地执行 6 秒，完事后再 &lt;code&gt;debug()&lt;/code&gt;，这就很崩了！&lt;/p&gt;&lt;p&gt;明明 INFO 的时候 &lt;code&gt;debug()&lt;/code&gt; 是不执行的，意味着 &lt;code&gt;getName()&lt;/code&gt; 也不需要执行的，偏偏就执行了 6 秒，是不是很傻？&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt;(logger.isDebugEnabled()) {&lt;br/&gt;    logger.debug(&lt;span&gt;&quot;用户名是：&quot;&lt;/span&gt; + getName());&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;换成上面这种方式，那确定此时 &lt;code&gt;getName()&lt;/code&gt; 是不执行的，对吧？&lt;/p&gt;&lt;p&gt;为了程序性能上的考量，&lt;code&gt;isDebugEnabled()&lt;/code&gt; 就变得很有必要了！假如说 &lt;code&gt;debug()&lt;/code&gt; 的时候没有传参，确实是不需要判断 DEBUG 是否启用的。&lt;/p&gt;&lt;p&gt;2）慎重选择日志信息的打印级别，因为这太重要了！如果只能通过日志查看程序发生了什么问题，那必要的信息是必须要打印的，但打印得太多，又会影响到程序的性能。&lt;/p&gt;&lt;p&gt;所以，该 INFO 的 &lt;code&gt;info()&lt;/code&gt;，该 DEBUG 的 &lt;code&gt;debug()&lt;/code&gt;，不要随便用。&lt;/p&gt;&lt;p&gt;3）使用 Log4j 而不是 &lt;code&gt;System.out&lt;/code&gt;、&lt;code&gt;System.err&lt;/code&gt; 或者 &lt;code&gt;e.printStackTrace()&lt;/code&gt; 来打印日志，原因之前讲过了，就不再赘述了。&lt;/p&gt;&lt;p&gt;4）使用 log4j.properties 文件来配置日志，尽管它不是必须项，使用该文件会让程序变得更灵活，有一种我的地盘我做主的味道。&lt;/p&gt;&lt;p&gt;5）不要忘记在打印日志的时候带上类的全名和线程名，在多线程环境下，这点尤为重要，否则定位问题的时候就太难了。&lt;/p&gt;&lt;p&gt;6）打印日志信息的时候尽量要完整，不要太过于缺省，尤其是在遇到异常或者错误的时候（信息要保留两类：案发现场信息和异常堆栈信息，如果不做处理，通过 throws 关键字往上抛），免得在找问题的时候都是一些无用的日志信息。&lt;/p&gt;&lt;p&gt;7）要对日志信息加以区分，把某一类的日志信息在输出的时候加上前缀，比如说所有数据库级别的日志里添加 &lt;code&gt;DB_LOG&lt;/code&gt;，这样的日志非常大的时候可以通过 &lt;code&gt;grep&lt;/code&gt; 这样的 Linux 命令快速定位。&lt;/p&gt;&lt;p&gt;8）不要在日志文件中打印密码、银行账号等敏感信息。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z40lCFUAHpl0dY4BVrTdPYiafibEgPDia9nfXGTJrZfMVAibc0bJzNq7R2jlLeoEbWiaynJMhqFggzQxeqm2sSDOAmg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;255&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;06、 总结&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;打印日志真的是一种艺术活，搞不好会严重影响服务器的性能。最可怕的是，记录了日志，但最后发现屁用没有，那简直是苍了个天啊！尤其是在生产环境下，问题没有记录下来，但重现有一定的随机性，到那时候，真的是叫天天不应，叫地地不灵啊！&lt;/p&gt;&lt;p&gt;嗯哼，我猜留言区一定会有小伙伴让我用 SLF4J 或者 Logback，要是没有的话，那特么真尴了个尬啦。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>