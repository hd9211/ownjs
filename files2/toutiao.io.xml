<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>ba05d170a8fc174e1585768adf08074f</guid>
<title>Redis 只能做缓存？太 out 了</title>
<link>https://toutiao.io/k/l84n965</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;174&quot; data-backw=&quot;365&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4767123287671233&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/cvQbJDZsKLp6wejHtKTRbqqQyt0wMk9K1wNtuwRqQTJAPOJ1KiaqSeSRbIJRTicVicKpDKRndBodY2DBNN20tvWwA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;365&quot;/&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原创：小姐姐味道（微信公众号ID：xjjdog），欢迎分享，转载请保留出处。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大多数数据库，由于经常和磁盘打交道，在高并发场景下，响应会非常的慢。为了解决这种速度差异，大多数系统都习惯性的加入一个缓存层，来加速数据的读取。redis由于它优秀的处理能力和丰富的数据结构，已经成为了事实上的分布式缓存标准。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，如果你以为redis只能做缓存的话，那就太小看它了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis丰富的数据结构，使得它的业务使用场景非常广泛，加上rdb的持久化特性，它甚至能够被当作落地的数据库使用。在这种情况下，redis能够撑起大多数互联网公司，尤其是社交、游戏、直播类公司的半壁江山。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. Redis能够胜任存储工作&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis提供了非常丰富的集群模式：&lt;code&gt;主从&lt;/code&gt;、&lt;code&gt;哨兵&lt;/code&gt;、&lt;code&gt;cluster&lt;/code&gt;，满足服务高可用的需求。同时，redis提供了两种持久化方式：&lt;code&gt;aof&lt;/code&gt;和&lt;code&gt;rdb&lt;/code&gt;，常用的是rdb。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过&lt;code&gt;bgsave&lt;/code&gt;指令，主进程会fork出新的进程，回写磁盘。bgsave相当于做了一个快照，由于它并没有WAL日志和checkpoint机制，是无法做到实时备份的。如果机器突然断电，那就很容易丢失数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;幸运的是，redis是内存型的数据库，主丛同步的速度是非常快的。如果你的集群维护的好，内存分配的合理，那么除非机房断电，否则redis的SLA，会一直保持在非常高的水平。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.42724458204334365&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/cvQbJDZsKLpC5qoRiaAwsMjYQOG6yQkGDy1oiaMheyDZKdLtoTYwrfjNdlG9KDNRZgtrCzxIprh9MmALibw4ciaOGw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;646&quot;/&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;听起来不是绝对可靠啊，有丢失数据的可能！这在一般CRUD的业务中，是无法忍受的。但为什么redis能够满足大多数互联网公司的需求？这也是由业务属性所决定的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在决定最大限度拥抱redis之前，你需要确认你的业务是否有以下特点：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了核心业务，是否大多数业务对于数据的可靠性要求较低，丢失一两条数据是可以忍受的？&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;面对的是C端用户，可根据用户ID快速定位到一类数据，数据集合普遍较小？无大量范围查询需求？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;是否能忍受内存型数据的成本需求？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;是否业务几乎不需要事务操作？&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很幸运的是，这类业务需求特别的多。比如常见的社交，游戏、直播、运营类业务，都是可以完全依赖Redis的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. Reids应用场景&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis具有松散的文档结构，丰富的数据类型，能够适应千变万化的scheme变更需求，接下来我将介绍Redis除缓存外的大量的应用场景。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6873198847262247&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/cvQbJDZsKLpC5qoRiaAwsMjYQOG6yQkGDRfEHdQibTLHlnudfPJ9INn10XREDlheqtkJWPtcE3bNFnbB1icrdpz1Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;694&quot;/&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1 基本用户数据存储&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在传统的数据库设计中，用户表是非常难以设计的，变更的时候会伤筋动骨。使用Redis的&lt;code&gt;hash&lt;/code&gt;结构，可以实现松散的数据模型设计。某些不固定，验证型的功能属性，可以以JSON接口直接存储在hash的value中。使用hash结构，可以采用HGET和HMGET等指令，只获取自己所需要的数据，在使用上也是非常便捷的。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;gt;HSET user:199929 sex m&lt;br/&gt;&amp;gt;HSET user:199929 age 22&lt;br/&gt;&amp;gt;HGETALL user:199929&lt;br/&gt;1) &lt;span&gt;&quot;sex&quot;&lt;/span&gt;&lt;br/&gt;2) &lt;span&gt;&quot;m&quot;&lt;/span&gt;&lt;br/&gt;3) &lt;span&gt;&quot;age&quot;&lt;/span&gt;&lt;br/&gt;4) &lt;span&gt;&quot;22&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种非统计型的、读多写少的场景，是非常适合使用KV结构进行存储的。Redis的hash结构提供了非常丰富的指令，某个属性也可以使用&lt;code&gt;HINCRBY&lt;/code&gt;进行递增递减，非常的方便。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2 实现计数器&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面稍微提了一下HINCRBY指令，而对于Redis的Key本身来说，也有&lt;code&gt;INCRBY&lt;/code&gt;指令，实现&lt;code&gt;某个值&lt;/code&gt;的递增递减。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如以下场景：统计某个帖子的点赞数；存放某个话题的关注数；存放某个标签的粉丝数；存储一个大体的评论数；某个帖子热度；红点消息数；点赞、喜欢、收藏数等。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;gt; INCRBY feed:e3kk38j4kl:like 1&lt;br/&gt;&amp;gt; INCRBY feed:e3kk38j4kl:like 1&lt;br/&gt;&amp;gt; GET feed:e3kk38j4kl:like&lt;br/&gt;&lt;span&gt;&quot;2&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;像微博这样容易出现热点的业务，传统的数据库，肯定是撑不住的，就要借助于内存数据库。由于Redis的速度非常快，就不用再采用传统DB非常慢的&lt;code&gt;count&lt;/code&gt;操作，所有这种递增操作都是毫秒级别的，而且效果都是实时的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3 排行榜&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;排行榜能提高参与者的积极性，所以这项业务非常常见，它本质上是一个topn的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis中有一个叫做zset的数据结构，使用跳表实现的有序列表，可以很容易实现排行榜一类的问题。当存入zset中的数据，达到千万甚至是亿的级别，依然能够保持非常高的并发读写，且拥有非常棒的平均响应时间（5ms以内）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用&lt;code&gt;zadd&lt;/code&gt; 可以添加新的记录，我们会使用排行相关的分数，作为记录的score值，然后使用&lt;code&gt;zrevrange&lt;/code&gt;指令即可获取实时的排行榜数据，而&lt;code&gt;zrevrank&lt;/code&gt;则可以非常容易的获取用户的实时排名。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;gt;ZADD sorted:xjjdog:2021-07  55 dog0&lt;br/&gt;&amp;gt;ZADD sorted:xjjdog:2021-07  89 dog1&lt;br/&gt;&amp;gt;ZADD sorted:xjjdog:2021-07  32 dog2&lt;br/&gt;&amp;gt;ZCARD sorted:xjjdog:2021-07&lt;br/&gt;&amp;gt;3&lt;br/&gt;&amp;gt; ZREVRANGE  sorted:xjjdog:2021-07  0 -10 WITHSCORES &lt;span&gt;# top10排行榜&lt;/span&gt;&lt;br/&gt;1) &lt;span&gt;&quot;dog1&quot;&lt;/span&gt;&lt;br/&gt;2) &lt;span&gt;&quot;89&quot;&lt;/span&gt;&lt;br/&gt;3) &lt;span&gt;&quot;dog0&quot;&lt;/span&gt;&lt;br/&gt;4) &lt;span&gt;&quot;55&quot;&lt;/span&gt;&lt;br/&gt;5) &lt;span&gt;&quot;dog2&quot;&lt;/span&gt;&lt;br/&gt;6) &lt;span&gt;&quot;32&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.4 好友关系&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;set&lt;/code&gt;结构，是一个没有重复数据的集合，你可以将某个用户的关注列表、粉丝列表、双向关注列表、黑名单、点赞列表等，使用独立的zset进行存储。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用&lt;code&gt;ZADD&lt;/code&gt;、&lt;code&gt;ZRANK&lt;/code&gt;等，将用户的黑名单使用ZADD添加，ZRANK使用返回的sorce值判断是否存在黑名单中。使用&lt;code&gt;sinter&lt;/code&gt;指令，可以获取A和B的共同好友。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了好友关系，有着明确黑名单、白名单业务场景的数据，都可以使用set结构进行存储。这种业务场景还有很多，比如某个用户上传的通讯录，计算通讯录的好友关系等等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在实际使用中，使用zset存储这类关系的更多一些。zset同set一样，都不允许有重复值，但zset多了一个score字段，我们可以存储一个时间戳，用来标明关系建立所发生的时间，有更明确的业务含义。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.5 统计活跃用户数&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;类似统计每天的活跃用户、用户签到、用户在线状态，这种零散的需求，实在是太多了。如果为每一个用户存储一个bool变量，那占用的空间就太多了。这种情况下，我们可以使用&lt;code&gt;bitmap&lt;/code&gt;结构，来节省大量的存储空间。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;gt;SETBIT online:2021-07-23 3876520333 1&lt;br/&gt;&amp;gt;SETBIT online:2021-07-24 3876520333 1&lt;br/&gt;&amp;gt;GETBIT online:2021-07-23 3876520333&lt;br/&gt;1&lt;br/&gt;&amp;gt;BITOP AND active online:2021-07-23 online:2021-07-24&lt;br/&gt;&amp;gt;GETBIT active 3876520333&lt;br/&gt;1&lt;br/&gt;&amp;gt;DEBUG OBJECT online:2021-07-23&lt;br/&gt;Value at:0x7fdfde438bf0 refcount:1 encoding:raw serializedlength:5506446 lru:16410558 lru_seconds_idle:5&lt;br/&gt;(0.96s)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意，如果你的id很大，你需要先进行一次预处理，否则它会占用非常多的内存。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;bitmap包含一串连续的2进制数字，使用1bit来表示真假问题。在bitmap上，可以使用and、or、xor等位操作(&lt;code&gt;bitop&lt;/code&gt;)。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.6 分布式锁&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis的分布式锁，是一种轻量级的解决方案。虽然它的可靠性比不上Zookeeper之类的系统，但Redis分布式锁有着极高的吞吐量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个最简陋的加锁动作，可以使用redis带nx和px参数的set指令去完成。下面是一小段简单的分布式样例代码。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;public String lock(String key, int timeOutSecond) {&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (; ; ) {&lt;br/&gt;        String stamp = String.valueOf(System.nanoTime());&lt;br/&gt;        boolean exist = redisTemplate.opsForValue().setIfAbsent(key, stamp, timeOutSecond, TimeUnit.SECONDS);&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (exist) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; stamp;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;public void unlock(String key, String stamp) {&lt;br/&gt;    redisTemplate.execute(script, Arrays.asList(key), stamp);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;删除操作的lua为。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;local&lt;/span&gt; stamp = ARGV[1]&lt;br/&gt;&lt;span&gt;local&lt;/span&gt; key = KEYS[1]&lt;br/&gt;&lt;span&gt;local&lt;/span&gt; current = redis.call(&lt;span&gt;&quot;GET&quot;&lt;/span&gt;,key)&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; stamp == current &lt;span&gt;then&lt;/span&gt;&lt;br/&gt;    redis.call(&lt;span&gt;&quot;DEL&quot;&lt;/span&gt;,key)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;OK&quot;&lt;/span&gt;&lt;br/&gt;end&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redisson的RedLock，是使用最普遍的分布式锁解决方案，有读写锁的差别，并处理了多redis实例情况下的异常问题。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.7 分布式限流&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用计数器去实现简单的限流，在Redis中是非常方便的，只需要使用incr配合expire指令即可。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; incr key&lt;br/&gt; expire key 1&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种简单的实现，通常来说不会有问题，但在流量比较大的情况下，在时间跨度上会有流量突然飙升的风险。根本原因，就是这种时间切分方式太固定了，没有类似滑动窗口这种平滑的过度方案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同样是redisson的RRateLimiter，实现了与&lt;code&gt;guava&lt;/code&gt;中类似的分布式限流工具类，使用非常便捷。下面是一个简短的例子：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; RRateLimiter limiter = redisson.getRateLimiter(&lt;span&gt;&quot;xjjdogLimiter&quot;&lt;/span&gt;);&lt;br/&gt; // 只需要初始化一次&lt;br/&gt; // 每2秒钟5个许可&lt;br/&gt; limiter.trySetRate(RateType.OVERALL, 5, 2, RateIntervalUnit.SECONDS);&lt;br/&gt; &lt;br/&gt; // 没有可用的许可，将一直阻塞    &lt;br/&gt; limiter.acquire(3);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.8 消息队列&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis可以实现简单的队列。在生产者端，使用LPUSH加入到某个列表中；在消费端，不断的使用RPOP指令取出这些数据，或者使用阻塞的BRPOP指令获取数据，适合小规模的抢购需求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis还有PUB/SUB模式，不过pubsub更适合做消息广播之类的业务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在Redis5.0中，增加了stream类型的数据结构。它比较类似于Kafka，有主题和消费组的概念，可以实现多播以及持久化，已经能满足大多数业务需求了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2..9 LBS应用&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;早早在Redis3.2版本，就推出了GEO功能。通过&lt;code&gt;GEOADD&lt;/code&gt;指令追加lat、lng经纬数据，可以实现坐标之间的距离计算、包含关系计算、附近的人等功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于GEO功能，最强大的开源方案是基于PostgreSQL的PostGIS，但对于一般规模的GEO服务，redis已经足够用了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.10 更多扩展应用场景&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要看redis能干什么，就不得不提以下java的客户端类库redisson。redisson包含丰富的分布式数据结构，全部是基于redis进行设计的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redisson提供了比如Set、 SetMultimap、 ScoredSortedSet、 SortedSet, Map、 ConcurrentMap、 List、 ListMultimap、 Queue、BlockingQueue等非常多的数据结构，使得基于redis的编程更加的方便。在github上，可以看到有上百个这样的数据结构：https://github.com/redisson/redisson/tree/master/redisson/src/main/java/org/redisson/api。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于某个语言来说，基本的数组、链表、集合等api，配合起来能够完成大部分业务的开发。Redis也不例外，它拥有这些基本的api操作能力，同样能够组合成分布式的、线程安全的高并发应用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于Redis是基于内存的，所以它的速度非常快，我们也会把它当作一个中间数据的存储地去使用。比如一些公用的配置，放到redis中进行分享，它就充当了一个配置中心的作用；比如把JWT的令牌存放到Redis中，就可以突破JWT的一些限制，做到安全登出。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. 一站式Redis面临的挑战&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的数据结构丰富，一般不会在功能性上造成困扰。但随着请求量的增加，SLA要求的提高，我们势必会对Redis进行一些改造和定制性开发。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.1 高可用挑战&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis提供了主从、哨兵、cluster等三种集群模式，其中cluster模式为目前大多数公司所采用的方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，redis的cluster模式，有不少的硬伤。redis cluster采用虚拟槽的概念，把所有的key映射到 0～16383个整数槽内，属于无中心化的架构。但它的维护成本较高，slave也不能够参与读取操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它的主要问题，在于一些批量操作的限制。由于key被hash到多台机器上，所以mget、hmset、sunion等操作就非常的不友好，经常发生性能问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的主从模式是最简单的模式，但无法做到自动failover，通常在主从切换后，还需要修改业务代码，这是不能忍受的。即使加上haproxy这样的负载均衡组件，复杂性也是非常高的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;哨兵模式在主从数量比较多的时候，能够显著的体现它的价值。一个哨兵集群，能够监控成百上千个集群，但是哨兵集群本身的维护是比较困难的。幸运的是，redis的文本协议非常简单，在netty中，甚至直接提供了redis的codec。自研一套哨兵系统，加强它的功能，是可行的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.2 冷热数据分离&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的特点是，不管什么数据，都一股脑地搞到内存里做计算，这对于有时间序列概念，有冷热数据之分的业务，造成了非常大的成本考验。为什么大多数开发者喜欢把数据存放在MySQL中，而不是Redis中？除了事务性要求以外，很大原因是历史数据的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常，这种冷热数据的切换，是由中间件完成的。我们上面也谈到了，Redis是一个文本协议，非常简单。做一个中间件，或者做一个协议兼容的Redis模拟存储，是比较容易的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如我们Redis中，只保留最近一年的活跃用户。一个好几年不活跃的用户，突然间访问了系统，这时候我们获取数据的时候，就需要中间件进行转换，从容量更大，速度更慢的存储中查找。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个时候，Redis的作用，更像是一个热库，更像是一个传统cache层做的事情，发生在业务已经上规模的时候。但是注意，直到此时，我们的业务层代码，一直都是操作的redis的api。它们使用这众多的函数指令，并不关心数据到底是真正存储在redis中，还是在ssdb中。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.3 功能性需求&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis还能玩很多花样。举个例子，全文搜索。很多人都会首选es，但redis生态就提供了一个模块：RediSearch，可以做查询，可以做filter。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但我们通常还会有更多的需求，比如统计类、搜索类、运营效果分析等。这类需求与大数据相关，即使是传统的DB也不能胜任。这时候，我们当然要把redis中的数据，导入到其他平台进行计算啦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你选择的是redis数据库，那么dba打交道的，就是rdb，而不是binlog。有很多的rdb解析工具(比如redis-rdb-tools)，能够定期把rdb解析成记录，导入到hadoop等其他平台。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时，rdb成为所有团队的中枢，成为基本的数据交换格式。导入到其他db后的业务，该怎么玩怎么玩，完全不会因为业务系统选用了redis就无法运转。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. 总结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大多数业务系统，跑在redis上，这是很多一直使用MySQL做业务系统的同学所不能想象的。看完了上面的介绍，相信你能够对redis能够实现的存储功能有个大体的了解。打开你的社交app、游戏app、视频app，看一下它们的功能，能够涵盖多少呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我这里要强调的是，某些数据，并不是一定要落地到RDBMS才算安全，它们并不是一个强需求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那既然redis这么厉害，为什么还要有mysql、tidb这样的存储呢？关键还在于业务属性上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果一个业务系统，每次交互的数据，都是一个非常大的结果集，并涉及到非常复杂的统计、过滤工作，那么RDBMS是必须的；但如果一个系统，能够通过某个标识，快速定位到一类数据，这一类数据在可以预见的未来，是有限的，那就非常适合Redis&lt;code&gt;存储&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个电商系统，选用redis做存储就是作死，但一个社交系统就快活的多。在合适的场景选用合适的工具，才是我们应该做的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是一个系统，能否在产品验证期，就能快速的响应变化，快速开发上线，才是成功的关键。这也是使用redis做数据库，所能够带来的最大好处。千万别被那概率极低的丢数据场景，给吓怕了。比起产品成功，你的系统即使是牢如钢铁，也一文不值。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;小姐姐味道&lt;/strong&gt;  (xjjdog)，一个不允许程序员走弯路的公众号。聚焦基础架构和Linux。十年架构，日百亿流量，与你探讨高并发世界，给你不一样的味道。我的个人微信xjjdog0，欢迎添加好友，进一步交流。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;推荐阅读：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA4MTc4NTUxNQ==&amp;amp;action=getalbum&amp;amp;album_id=1551616798431690754#wechat_redirect&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;1. 玩转Linux&lt;/a&gt;&lt;br/&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA4MTc4NTUxNQ==&amp;amp;action=getalbum&amp;amp;album_id=1339444055490592770#wechat_redirect&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;2. 什么味道专辑&lt;/a&gt;&lt;/p&gt;&lt;p&gt;3. &lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4MTc4NTUxNQ==&amp;amp;mid=2650521059&amp;amp;idx=1&amp;amp;sn=d6742140c684f16cb4435508bdb5a418&amp;amp;scene=21#wechat_redirect&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;蓝牙如梦&lt;/a&gt;&lt;br/&gt;4. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MTc4NTUxNQ==&amp;amp;mid=2650520865&amp;amp;idx=1&amp;amp;sn=ff7a751a092000a9aec8e47df35ab25a&amp;amp;chksm=8780bae5b0f733f3bd75575ef9c14e548bd833bf2ba1289b6f77fd0bbcc5fbc264c19c8cb04a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;杀机！&lt;/a&gt;&lt;br/&gt;5. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MTc4NTUxNQ==&amp;amp;mid=2650521932&amp;amp;idx=1&amp;amp;sn=2a171aaaeb1e6124c86f39a46075363c&amp;amp;chksm=8780c688b0f74f9e25baf3495883dfe50541068dc4e4c1ae8d45ead7daee208a94563af74312&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;失联的架构师，只留下一段脚本&lt;/a&gt;&lt;br/&gt;6. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MTc4NTUxNQ==&amp;amp;mid=2650521617&amp;amp;idx=1&amp;amp;sn=86e4bee100fa78ccc94e24bb27f0e71a&amp;amp;chksm=8780c7d5b0f74ec36bd0a06167f5b84777ecb2d48b57f3d96e3ce3c4575e6b777dda0188376f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;架构师写的BUG，非比寻常&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>62d65eeb4d697faeee0891b2c0308ae8</guid>
<title>Java 14 新功能介绍</title>
<link>https://toutiao.io/k/rr6rsbq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.425&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/4lfok2icUkibRHXd6icYwcrcTFllkzYjfU2iaqtDZHALeqmNBLZTnSzmPbibXibnx4QsVnah1TdLseg1RgFYtPicS1zfQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1000&quot;/&gt;&lt;figcaption&gt;Java 14, 图片来自 medium.com&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java 14 早在 2019 年 9 月就已经发布，虽然不是长久支持版本，但是也带来了不少新功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java 14 官方下载：https://jdk.java.net/archive/&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java 14 官方文档：https://openjdk.java.net/projects/jdk/14/&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Java 14 新功能：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;305:instanceof 类型判断（预览）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;343:打包工具（孵化）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;345:G1 支持 NUMA（非统一内存访问）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;358:更有用的 NullPointerExceptions&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;359:Records (预览)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;361:Switch 表达式 (标准)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;362:废弃对 Solaris 和 SPARC 端口支持&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;363:移除 CMS 垃圾收集器&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;364:macOS 的 ZGC&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;365:Windows 的 ZGC&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;366:弃用 ParallelScavenge + SerialOld GC 组合&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;367:删除 Pack200 Tools 和 API&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;368:文本块 (二次预览)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;370:Foreign-Memory Access API (Incubator)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;349:JFR Event Streaming&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;352:Non-Volatile Mapped Byte Buffers&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;注意：&lt;/strong&gt; 如果一个功能为预览版，那么在编译和运行时需要打开预览功能。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;./javac --enable-preview --release 14 Test.java&lt;br/&gt;./java --enable-preview Test&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;此文章属于 &lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI1MDIxNjQ1OQ==&amp;amp;action=getalbum&amp;amp;album_id=1361567479981621248#wechat_redirect&quot; textvalue=&quot;Java 新特性教程&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Java 新特性教程&lt;/a&gt; 系列，会介绍 Java 每个版本的新功能，可以点击浏览。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. JEP 305：instanceof 类型判断（预览）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Java 14 之前，使用 &lt;code&gt;instanceof&lt;/code&gt; 进行类型判断之后，需要进行对象类型转换后才能使用。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.wdbyte;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.ArrayList;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.List;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Java14BeaforInstanceof&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        Object obj = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (obj &lt;span&gt;instanceof&lt;/span&gt; ArrayList) {&lt;br/&gt;            ArrayList list = (ArrayList)obj;&lt;br/&gt;            list.add(&lt;span&gt;&quot;www.wdbyte.com&quot;&lt;/span&gt;);&lt;br/&gt;        }&lt;br/&gt;        System.out.println(obj);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而在 Java 14 中，可以在判断类型时指定变量名称进行类型转换，方便了使用。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.wdbyte;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.ArrayList;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Java14Instanceof&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        Object obj = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (obj &lt;span&gt;instanceof&lt;/span&gt; ArrayList list) {&lt;br/&gt;            list.add(&lt;span&gt;&quot;www.wdbyte.com&quot;&lt;/span&gt;);&lt;br/&gt;        }&lt;br/&gt;        System.out.println(obj);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到，在使用 instanceof 判断类型成立后，会自动强制转换类型为指定类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出结果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[www.wdbyte.com]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个特性在 Java 14 中还是预览功能，在 Java 16 中正式转正。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. JEP 343：打包工具（孵化）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Java 14 中，引入了打包工具，命令是 &lt;code&gt;jpackage&lt;/code&gt;，使用 &lt;code&gt;jpackage&lt;/code&gt; 命令可以把 JAR 包打包成不同操作系统支持的软件格式。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;jpackage --name myapp --input lib --main-jar main.jar --main-class myapp.Main&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见平台格式如下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Linux: &lt;code&gt;deb&lt;/code&gt; and &lt;code&gt;rpm&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;macOS: &lt;code&gt;pkg&lt;/code&gt; and &lt;code&gt;dmg&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Windows: &lt;code&gt;msi&lt;/code&gt; and &lt;code&gt;exe&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要注意的是，&lt;code&gt;jpackage&lt;/code&gt; 不支持交叉编译，也就是说在 windows 平台上是不能打包成 macOS 或者 Linux 系统的软件格式的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3. JEP 345：G1 支持 NUMA（非统一内存访问）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;G1 收集器现在可以感知 &lt;code&gt;NUMA&lt;/code&gt; 内存分配方式，以提高 G1 的性能，可以使用 &lt;code&gt;+XX:+UseNUMA&lt;/code&gt; 启用这项功能。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;扩展阅读：https://openjdk.java.net/jeps/345&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4. JEP 358：更有用的 NullPointerExceptions&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt; 一直都是一个比较常见的异常，但是在 Java 14 之前，如果一行有多个表达式时，这时报了空指针后，单纯的从报错信息来看，可能并不知道是哪个对象为 &lt;code&gt;NULL&lt;/code&gt; ，下面是一个演示。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.wdbyte;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Java14NullPointerExceptions&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        String content1 = &lt;span&gt;&quot;www.wdbyte.com&quot;&lt;/span&gt;;&lt;br/&gt;        String content2 = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; length = content1.length() + content2.length();&lt;br/&gt;        System.out.println(length);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Java 14 之前，从下面的报错中我们只能得到错误出现的行数，但是并不能确定是 &lt;code&gt;conteng1&lt;/code&gt; 还是 &lt;code&gt;content2&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Exception &lt;span&gt;in&lt;/span&gt; thread &lt;span&gt;&quot;main&quot;&lt;/span&gt; java.lang.NullPointerException&lt;br/&gt; at com.alibaba.security.astralnet.console.controller.ApiChartsTest.main(Java14NullPointerExceptions.java:8)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是在 Java 14 中，会清晰的告诉你 &lt;code&gt;because &quot;content2&quot; is null&lt;/code&gt; 。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Exception &lt;span&gt;in&lt;/span&gt; thread &lt;span&gt;&quot;main&quot;&lt;/span&gt; java.lang.NullPointerException: &lt;br/&gt; Cannot invoke &lt;span&gt;&quot;String.length()&quot;&lt;/span&gt; because &lt;span&gt;&quot;content2&quot;&lt;/span&gt; is null&lt;br/&gt; at com.wdbyte.Java14NullPointerExceptions.main(Java14NullPointerExceptions.java:8)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5. JEP 359：Records (预览)&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;record&lt;/code&gt; 是一种全新的类型，它本质上是一个 &lt;code&gt;final&lt;/code&gt; 类，同时所有的属性都是 &lt;code&gt;final&lt;/code&gt; 修饰，它会自动编译出 &lt;code&gt;public get&lt;/code&gt; &lt;code&gt;hashcode&lt;/code&gt; 、&lt;code&gt;equals&lt;/code&gt;、&lt;code&gt;toString&lt;/code&gt; 等方法，减少了代码编写量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例：编写一个 Dog record 类，定义 name 和 age 属性。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.wdbyte;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; record &lt;span&gt;Dog&lt;/span&gt;&lt;span&gt;(String name, Integer age)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Record 的使用。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; com.wdbyte;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Java14Record&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        Dog dog1 = &lt;span&gt;new&lt;/span&gt; Dog(&lt;span&gt;&quot;牧羊犬&quot;&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;        Dog dog2 = &lt;span&gt;new&lt;/span&gt; Dog(&lt;span&gt;&quot;田园犬&quot;&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;);&lt;br/&gt;        Dog dog3 = &lt;span&gt;new&lt;/span&gt; Dog(&lt;span&gt;&quot;哈士奇&quot;&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;);&lt;br/&gt;        System.out.println(dog1);&lt;br/&gt;        System.out.println(dog2);&lt;br/&gt;        System.out.println(dog3);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出结果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Dog[name=牧羊犬, age=1]&lt;br/&gt;Dog[name=田园犬, age=2]&lt;br/&gt;Dog[name=哈士奇, age=3]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个功能在 Java 15 中进行二次预览，在 Java 16 中正式发布。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6. JEP 361：Switch 表达式 (标准)&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Switch 表达式改进从 Java 12 就已经开始了，Java 12 让 switch 支持了 &lt;code&gt;L-&amp;gt;&lt;/code&gt; 语法，Java 13 引入了 &lt;code&gt;yield&lt;/code&gt; 关键词用于返回结果，但是在 Java 12 和 13 中功能都是预览版的，而在 Java 14 中，正式转正。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// 通过传入月份，输出月份所属的季节&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; String &lt;span&gt;switchJava12&lt;/span&gt;&lt;span&gt;(String month)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;switch&lt;/span&gt; (month) {&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;march&quot;&lt;/span&gt;, &lt;span&gt;&quot;april&quot;&lt;/span&gt;, &lt;span&gt;&quot;may&quot;&lt;/span&gt;            -&amp;gt; &lt;span&gt;&quot;春天&quot;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;june&quot;&lt;/span&gt;, &lt;span&gt;&quot;july&quot;&lt;/span&gt;, &lt;span&gt;&quot;august&quot;&lt;/span&gt;           -&amp;gt; &lt;span&gt;&quot;夏天&quot;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;september&quot;&lt;/span&gt;, &lt;span&gt;&quot;october&quot;&lt;/span&gt;, &lt;span&gt;&quot;november&quot;&lt;/span&gt; -&amp;gt; &lt;span&gt;&quot;秋天&quot;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;december&quot;&lt;/span&gt;, &lt;span&gt;&quot;january&quot;&lt;/span&gt;, &lt;span&gt;&quot;february&quot;&lt;/span&gt;  -&amp;gt; &lt;span&gt;&quot;冬天&quot;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;default&lt;/span&gt; -&amp;gt; &lt;span&gt;&quot;month erro&quot;&lt;/span&gt;;&lt;br/&gt;    };&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;// 通过传入月份，输出月份所属的季节&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; String &lt;span&gt;switchJava13&lt;/span&gt;&lt;span&gt;(String month)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;switch&lt;/span&gt; (month) {&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;march&quot;&lt;/span&gt;, &lt;span&gt;&quot;april&quot;&lt;/span&gt;, &lt;span&gt;&quot;may&quot;&lt;/span&gt;:&lt;br/&gt;            yield &lt;span&gt;&quot;春天&quot;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;june&quot;&lt;/span&gt;, &lt;span&gt;&quot;july&quot;&lt;/span&gt;, &lt;span&gt;&quot;august&quot;&lt;/span&gt;:&lt;br/&gt;            yield &lt;span&gt;&quot;夏天&quot;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;september&quot;&lt;/span&gt;, &lt;span&gt;&quot;october&quot;&lt;/span&gt;, &lt;span&gt;&quot;november&quot;&lt;/span&gt;:&lt;br/&gt;            yield &lt;span&gt;&quot;秋天&quot;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;december&quot;&lt;/span&gt;, &lt;span&gt;&quot;january&quot;&lt;/span&gt;, &lt;span&gt;&quot;february&quot;&lt;/span&gt;:&lt;br/&gt;            yield &lt;span&gt;&quot;冬天&quot;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;default&lt;/span&gt;:&lt;br/&gt;            yield &lt;span&gt;&quot;month error&quot;&lt;/span&gt;;&lt;br/&gt;    };&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;扩展阅读：Java 12 新特性介绍，Java 13 新功能介绍，JEP 325: Switch 表达式&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7. JEP 368：文本块（二次预览）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文本块是 Java 13 引入的语法，在 Java 14 中对其进行了增强。文本块依旧是预览功能，这次更新增加了两个转义符。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;\&lt;/code&gt;  结尾不换行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;\s&lt;/code&gt; 表示一个空格&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例：文本块体验&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;String content = &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;&lt;br/&gt;        {&lt;br/&gt;            &quot;&lt;/span&gt;upperSummary&lt;span&gt;&quot;: null,\&lt;br/&gt;            &quot;&lt;/span&gt;sensitiveTypeList&lt;span&gt;&quot;: null,&lt;br/&gt;            &quot;&lt;/span&gt;gmtModified&lt;span&gt;&quot;: &quot;&lt;/span&gt;&lt;span&gt;2011&lt;/span&gt;-&lt;span&gt;08&lt;/span&gt;-&lt;span&gt;05&lt;/span&gt;\s10:&lt;span&gt;50&lt;/span&gt;:&lt;span&gt;09&lt;/span&gt;&lt;span&gt;&quot;,&lt;br/&gt;        }&lt;br/&gt;         &quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;;&lt;br/&gt;System.out.println(content);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出结果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{&lt;br/&gt;    &lt;span&gt;&quot;upperSummary&quot;&lt;/span&gt;: null,    &lt;span&gt;&quot;sensitiveTypeList&quot;&lt;/span&gt;: null,&lt;br/&gt;    &lt;span&gt;&quot;gmtModified&quot;&lt;/span&gt;: &lt;span&gt;&quot;2011-08-05 10:50:09&quot;&lt;/span&gt;,&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;em&gt;文本块功能在 Java 15 中正式发布。&lt;/em&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;其他更新&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;JEP 362：废弃对 Solaris 和 SPARC 端口支持&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从 Java 14 开始，放弃对 Solaris/SPARC, Solaris/x64, 和 Linux/SPARC 端口的支持，放弃一部分开发这势必会加快 Java 整体的开发节奏。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相关阅读：https://openjdk.java.net/jeps/362&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;JEP 363：移除 CMS 垃圾收集器&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;移除对 CMS（Concurrent Mark Sweep） 垃圾收集器的支持，其实早在 Java 9 就开始移除 CMS 垃圾收集器了，只不过在 Java 14 中被正式删除。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;JEP 364：macOS 上的 ZGC（实验性）&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java 11 在 Linux 上引入了 Z 垃圾收集器 (ZGC)，现在它可以移植到 macOS。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;JEP 365：Windows 上的 ZGC（实验性）&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java 11 在 Linux 上引入了 Z 垃圾收集器 (ZGC)，现在它可以移植到 Windows 上（版本大于 1803）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;JEP 366：弃用 ParallelScavenge + SerialOld GC 组合&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于使用场景不多，维护工作太大，废弃之。相关阅读：https://openjdk.java.net/jeps/366&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;JEP 367：删除 Pack200 工具和 API&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;参考&lt;/span&gt;&lt;/h2&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;https://openjdk.java.net/projects/jdk/14/&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;https://openjdk.java.net/jeps/366&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;https://openjdk.java.net/jeps/362&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9e09a94b661e20fa59722825649f5a09</guid>
<title>Goland 这些实操技巧，你可能还不会</title>
<link>https://toutiao.io/k/sg16k5k</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工欲善其事必先利其器。对于开发工程师同样如此，一个合适的开发工具能够有效提升我们的开发效率和定位问题的能力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Golang IDE 被 Gopher 接受的其实不太多，Goland 和 VSCode 应该是占比重最大的。vim-go 真心就不推荐了，入门曲线太过陡峭，太过华而不实（vim 党不要喷我），我们就写程序而已，何苦为难自己呢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我日常开发中，Goland，Vscode 一般会配合使用。对于 VsCode 来说，我唯一觉得不方便的是 VSCode 的 Debug 功能，配置起来麻烦，而且总有种很卡的感觉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本篇文章我会介绍一点 Goland 开发中比较常见的一些技巧，帮助你快速入门 Goland。&lt;span/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Goland Debug 调试&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里首先吐槽下 delve，对于用惯 gdb 的人来说，delve 简直弱爆了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子，gdb 有个非常强大的 &lt;span&gt; &lt;/span&gt;&lt;span&gt;x&lt;/span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;span&gt; &lt;/span&gt;功能，能够去观察变量内存分布情况。delve 在 1.7.0 版本才提供这个功能，简单试用了一下，没有达到想象中的效果，不过也是可以使用的。这里就不在详细介绍，有兴趣的可以 delve help x 去查看。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更多时候我喜欢使用 goland 调试代码，基本满足日常的开发需求。这里分享几种进入 debug 模式的方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于后端开发来说，一个趁手的接口调试工具是不可缺少的。在介绍如何 debug 接口之前，先推荐几款比较不错的接口调试工具。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;REST &lt;span&gt;Postman&lt;/span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;GRPC &lt;span&gt;Bloomrpc&lt;/span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;GraphQL &lt;span&gt;Insomnia&lt;/span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;如&lt;span&gt;何调试接口这里就不再文字介绍了，具体步骤提供了动图。&lt;/span&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5498821681068342&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/picLDrXZzloaXM8xnUHERv3pWBX5hNGjjlYS4bDfcVOuw3xYFKrfu3RgWAsNSDz7n1lWAGOVV7dPQU8ibAEo3oaw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2546&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要步骤：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;打断点&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;点击 debug 按钮启动程序&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Postman 调用接口&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;单步调试&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有些情况下，我们封装完底层基础函数后，接口调用该函数一直报错。如果从外面一层一层的 debug 进来，会特别麻烦，使用单测函数作为 debug 的入口也是特别方便的事情。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5508550855085509&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/picLDrXZzloaXM8xnUHERv3pWBX5hNGjjNnbESYRJ5N0POfd0eVe9cic4O3JuIwC1lDLH53cyicmAXeJhKu4fGNXg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2222&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;设置参数&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般情况下，不管我们使用 Goland 启动程序还是 Debug，都会遇到让输入参数的情况的。这个是个蛮重要的功能，但是很多同学不会设置。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5718875502008032&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/picLDrXZzloaXM8xnUHERv3pWBX5hNGjjatIPX6HCiaRzBDy0sumBUH3dF2u896hat0yicMVjZXvMTIhVzU9ib8CMQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2490&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要步骤：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;点击右上角：Edit Configuration ...&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在弹出的框里选择正确的 Working Directory&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在 Program arguments 里填写对应的参数即可&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;go 工具链引入&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 Vscode 的同学会注意到，当我们打开 Go 源码文件时，会提示我们安装一套完整的工具链，在这一点上 Vscode 比 Goland 优秀太多了。Goland 不但没有一键导入的功能，而且每个工程都需要引入一遍，着实太坑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Goland 可以引入 gofmt, goimport，当然还可以自定义其他相关的工具。不过根据我的使用来看，开着 gofmt 就可以了。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6674622116149562&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/picLDrXZzloaXM8xnUHERv3pWBX5hNGjjKLkUHkGJHgC9a67dTE0LzOZTaRZH8lMpBVTPeug1QVKaHX2jPvd0Lg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2514&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;推荐一些好用的插件&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;ideaVim&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Material Theme UI&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Monokai Pro theme&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Goland 莫名其妙的 Index 失效&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Goland 在使用的过程中，可能会遇到莫名其妙的 Index 失效的情况。你可以通过下面的步骤来重新生成 Index。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;go mod tidy&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;go build .&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Goland -&amp;gt; Preferences -&amp;gt; Go -&amp;gt; Go Modules -&amp;gt; Enable Go Modules integration -&amp;gt; 配置 goproxy&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;右键点击项目根目录-&amp;gt;Mark Directory as -&amp;gt; Resource root&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;重启 Goland&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果上面这些步骤执行完毕后，你的程序能够正常构建，但是 Goland 仍然提示 &quot;Unresolved reference &quot;， 那么恭喜你中奖了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Goland 有很低概率会遇到 Index 完全失效，而且无法恢复，目测这是 Goland 的 Bug，遇到的概率不太高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;解决方案：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实没有啥解决方案。我通常会这么做：彻底删除 Goland，再重新安装。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本篇文章中关于 Goland 的使用技巧，你是否感兴趣呢？欢迎留言评论，如果反响不错我会继续发出后续篇章（包括vscode）。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3193403298350825&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/picLDrXZzlobxuxyQCwWmICDmQzibQLzzADasPRk5nCgLesREsmZp4vicj8JyjQMJp7oaGaxXlp4HoGmXveh6SAuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;667&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;欢迎关注公众号。更多学习学习资料分享，关注公众号回复指令：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;回复 0，获取 《Go 面经》&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;回复 1，获取 《Go 源码流程图》&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;x: &lt;span&gt;https://visualgdb.com/gdbreference/commands/x&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;Postman: &lt;span&gt;https://www.postman.com/&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;Bloomrpc: &lt;span&gt;https://github.com/uw-labs/bloomrpc&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;Insomnia: &lt;span&gt;https://support.insomnia.rest/&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>93472294d3362a48753d845a667b3114</guid>
<title>一个基于 Beego 开发的社交商城博客系统</title>
<link>https://toutiao.io/k/e6lhm5y</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;article class=&quot;markdown-body entry-content container-lg&quot; itemprop=&quot;text&quot;&gt;&lt;h4&gt;&lt;a id=&quot;user-content-go-blog&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#go-blog&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Go Blog&lt;/h4&gt;
&lt;p&gt;一个基于Beego开发的社交商城博客系统&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://starchart.cc/1920853199/go-blog&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/eae767242f2fdcab105c6b8acc305e270e3b503018033cf78ac2e6972f639637/68747470733a2f2f7374617263686172742e63632f313932303835333139392f676f2d626c6f672e737667&quot; alt=&quot;Go Blog Stargazers over time&quot; data-canonical-src=&quot;https://starchart.cc/1920853199/go-blog.svg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/1920853199/go-blog/stargazers&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/e6fc420dde91ad84a727fec68a2c463972a79ec5d53a70e086e63c880c31917c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f313932303835333139392f676f2d626c6f67&quot; alt=&quot;GitHub stars&quot; data-canonical-src=&quot;https://img.shields.io/github/stars/1920853199/go-blog&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/1920853199/go-blog/network&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/9eb4183048dbe08864dead55c02ae5f97109b527594458d86c72ec0ef290600f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f313932303835333139392f676f2d626c6f67&quot; alt=&quot;GitHub forks&quot; data-canonical-src=&quot;https://img.shields.io/github/forks/1920853199/go-blog&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/1920853199/go-blog/master/LICENSE&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/419f08a143b3ab3013a8bdf6792c591611f0ba1a05f054fe428d480186bbeae7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f313932303835333139392f676f2d626c6f67&quot; alt=&quot;GitHub license&quot; data-canonical-src=&quot;https://img.shields.io/github/license/1920853199/go-blog&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前台演示站点(社区) &lt;a href=&quot;https://nihongdengxia.com/&quot; rel=&quot;nofollow&quot;&gt;https://nihongdengxia.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://user-images.githubusercontent.com/28426364/128692732-d92d8de8-8174-4447-9be9-57ba14a8de2a.png&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/28426364/128692732-d92d8de8-8174-4447-9be9-57ba14a8de2a.png&quot; alt=&quot;image&quot;/&gt;&lt;/a&gt;
&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://user-images.githubusercontent.com/28426364/129147083-29c15731-f90e-4146-8bcb-aaa42c92bab3.png&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/28426364/129147083-29c15731-f90e-4146-8bcb-aaa42c92bab3.png&quot; alt=&quot;image&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前台演示站点(社区) &lt;a href=&quot;https://nihongdengxia.com/&quot; rel=&quot;nofollow&quot;&gt;https://nihongdengxia.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-系统功能&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#系统功能&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;系统功能&lt;/h3&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;/1920853199/go-blog/blob/master/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD.png&quot;&gt;&lt;img src=&quot;/1920853199/go-blog/raw/master/%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD.png&quot; alt=&quot;系统功能&quot; title=&quot;系统功能&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-install&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#install&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h3&gt;
&lt;h4&gt;&lt;a id=&quot;user-content-方式1-docker-安装推荐&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#方式1-docker-安装推荐&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;方式1 docker 安装（推荐）&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;先安装&lt;code&gt;docker&lt;/code&gt;以及&lt;code&gt;docker-compose&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;把根目录下的&lt;code&gt;docker-compose.yml&lt;/code&gt;赋值到你需要运行的&lt;code&gt;Go Blog&lt;/code&gt;项目的目录下，执行&lt;code&gt;docker-compose up -d&lt;/code&gt;.（会报找不到数据库的错误，忽略，在步骤3导入数据后就正常了）&lt;/li&gt;
&lt;li&gt;登录&lt;code&gt;docker&lt;/code&gt;启动的&lt;code&gt;mysql&lt;/code&gt;，新建数据库&lt;code&gt;go-blog&lt;/code&gt;,导入&lt;code&gt;go-blog/database/blog-mysql.sql&lt;/code&gt;数据。&lt;/li&gt;
&lt;li&gt;访问url&lt;code&gt;http://127.0.0.0:8080&lt;/code&gt;,后台url&lt;code&gt;http://127.0.0.0:8080/admin&lt;/code&gt;,默认账户:&lt;code&gt;user&lt;/code&gt;,密码:&lt;code&gt;123456&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id=&quot;user-content-方式二-源码安装&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#方式二-源码安装&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;方式二 源码安装&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;把Go Blog项目拉到本地&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;snippet-clipboard-content position-relative&quot; data-snippet-clipboard-copy-content=&quot;https://github.com/1920853199/go-blog.git&amp;#10;&quot;&gt;&lt;pre&gt;&lt;code&gt;https://github.com/1920853199/go-blog.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;新建数据库，导入数据库文件，数据库文件/database/blog.sql&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改项目配置信息&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;snippet-clipboard-content position-relative&quot; data-snippet-clipboard-copy-content=&quot;#conf/app.conf&amp;#10;&amp;#10;appname = go-blog&amp;#10;httpport = 8088&amp;#10;runmode = dev&amp;#10;EnableAdmin = false&amp;#10;sessionon = true&amp;#10;url = 127.0.0.1:8088&amp;#10;&amp;#10;[db]&amp;#10;dbType = mysql&amp;#10;dbUser = root&amp;#10;dbPass = root&amp;#10;dbHost = 127.0.0.1&amp;#10;dbPort = 3306&amp;#10;dbName = blog&amp;#10;&amp;#10;[redis]&amp;#10;rHost = 127.0.0.1&amp;#10;rPort = 6379&amp;#10;&amp;#10;&amp;#10;&quot;&gt;&lt;pre&gt;&lt;code&gt;#conf/app.conf

appname = go-blog
httpport = 8088
runmode = dev
EnableAdmin = false
sessionon = true
url = 127.0.0.1:8088

[db]
dbType = mysql
dbUser = root
dbPass = root
dbHost = 127.0.0.1
dbPort = 3306
dbName = blog

[redis]
rHost = 127.0.0.1
rPort = 6379


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;
&lt;p&gt;在bo-blog 根目录下执行bee run ，访问 &lt;a href=&quot;http://127.0.0.1:8888&quot; rel=&quot;nofollow&quot;&gt;http://127.0.0.1:8888&lt;/a&gt; 即可&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;守护进程模式运行 可以了解PM2的相关信息，配置可查看start.sh 文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nginx代理示例&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;snippet-clipboard-content position-relative&quot; data-snippet-clipboard-copy-content=&quot;server {&amp;#10;        listen 80;&amp;#10;        server_name go-blog.cn;&amp;#10;        root    /home/data/go-blog;&amp;#10;&amp;#10;        location ~ \.(txt|xml)$ {&amp;#10;                root /home/data/go-blog;&amp;#10;        }&amp;#10;&amp;#10;        location / {&amp;#10;            proxy_pass http://127.0.0.1:8889;&amp;#10;            #proxy_redirect off;&amp;#10;            proxy_http_version    1.1;&amp;#10;            proxy_cache_bypass    $http_upgrade;&amp;#10;            proxy_set_header Upgrade            $http_upgrade;&amp;#10;            proxy_set_header Connection         &amp;quot;upgrade&amp;quot;;&amp;#10;            proxy_set_header Host               $host;&amp;#10;            proxy_set_header X-Real-IP          $remote_addr;&amp;#10;            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;&amp;#10;            proxy_set_header X-Forwarded-Proto  $scheme;&amp;#10;            proxy_set_header X-Forwarded-Host   $host;&amp;#10;            proxy_set_header X-Forwarded-Port   $server_port;&amp;#10;        }&amp;#10;&amp;#10;        access_log    /home/wwwlogs/go-blog.access.log;&amp;#10;}&amp;#10;&amp;#10;&quot;&gt;&lt;pre&gt;&lt;code&gt;server {
        listen 80;
        server_name go-blog.cn;
        root    /home/data/go-blog;

        location ~ \.(txt|xml)$ {
                root /home/data/go-blog;
        }

        location / {
            proxy_pass http://127.0.0.1:8889;
            #proxy_redirect off;
            proxy_http_version    1.1;
            proxy_cache_bypass    $http_upgrade;
            proxy_set_header Upgrade            $http_upgrade;
            proxy_set_header Connection         &quot;upgrade&quot;;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
            proxy_set_header X-Forwarded-Host   $host;
            proxy_set_header X-Forwarded-Port   $server_port;
        }

        access_log    /home/wwwlogs/go-blog.access.log;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-互动交流&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#互动交流&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;互动交流&lt;/h3&gt;
&lt;h4&gt;&lt;a id=&quot;user-content-与作者对话&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#与作者对话&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;与作者对话&lt;/h4&gt;
&lt;p&gt;该项目是利用业余时间进行开发的，开发思路主要是源于自己的项目积累及个人思考，如果您有更好的想法和建议请与我进行沟通，一起探讨，畅聊技术人生，相互学习，一起进步。我非常期待！下面是我的微信二维码（如果此项目对您提供了帮助也可以请作者喝杯咖啡 (*￣︶￣)，聊表心意，一起星巴克「续杯」~嘿嘿 ）：&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;user-content-end&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#end&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;END&lt;/h2&gt;
&lt;p&gt;感谢您关注此项目 : )，如果有好的想法欢迎 Issue or PR。&lt;/p&gt;
&lt;/article&gt;
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f2c03e2e7cabcaac60e53c524af7dceb</guid>
<title>Shell 脚本常用命令</title>
<link>https://toutiao.io/k/0d485tf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Linux常用命令&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;ls常用命令&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ls -a 列举出当前目录所有文件，包括隐藏文件&lt;br/&gt;&lt;br/&gt;ls -r 正常列举顺序反序列化输出&lt;br/&gt;&lt;br/&gt;ls -t 按照文件修改时间排序输出&lt;br/&gt;&lt;br/&gt;ls -S 按照文件大小排序输出&lt;br/&gt;&lt;br/&gt;ls -l 列举出文件名、文件的权限、所有者、文件大小等信息&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;cd常用命令&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;cd&lt;/span&gt; /usr/&lt;span&gt;local&lt;/span&gt;/src   切换到指定路径(使用绝对路径方式)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;cd&lt;/span&gt; ~ 进入当前用户的家目录&lt;br/&gt;&lt;br/&gt;&lt;span&gt;cd&lt;/span&gt; - 进入上次目录&lt;br/&gt;&lt;br/&gt;&lt;span&gt;cd&lt;/span&gt; .. 进入上一级目录&lt;br/&gt;&lt;br/&gt;&lt;span&gt;cd&lt;/span&gt; . 进入当前目录&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;rm常用命令&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;rm 文件名 删除文件&lt;br/&gt;&lt;br/&gt;rm -r 目录名 删除当前目录下所有数据，包括当前目录文件&lt;br/&gt;&lt;br/&gt;rm -f 文件名 强制删除文件&lt;br/&gt;&lt;br/&gt;rm -rf 目录名 强制删除当前目录下所有文件，包括当前目录文件&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;grep常用命令&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;grep命令用于查找文件里符合条件的字符串。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;grep &amp;lt;指令名称&amp;gt; &amp;lt;需要匹配的字符串&amp;gt; &amp;lt;文件路径&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;常用指令名称&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「-A」&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;「--after-context」&lt;/strong&gt;&lt;br/&gt;显示符合范本样式的那一行之外及该行之后的内容&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;aaaa\nbbbb\ncccc\ndddd&quot;&lt;/span&gt; | grep -A 1 aaaa &lt;br/&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;aaaa\nbbbb\ncccc\ndddd&quot;&lt;/span&gt; | grep --after-context 1 aaaa&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出内容:&lt;br/&gt;&lt;span&gt;aaaa&lt;/span&gt; // 该行高亮&lt;br/&gt;bbbb&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「-b」&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;「--byte-offset」&lt;/strong&gt;&lt;br/&gt;输出匹配行并且在在该行前展示第几行&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;aaaa\nbbbb\ncccc\ndddd&quot;&lt;/span&gt; | grep -b aaaa&lt;br/&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;aaaa\nbbbb\ncccc\ndddd&quot;&lt;/span&gt; | grep --byte-offset aaaa&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出内容：&lt;br/&gt;0:&lt;span&gt;aaaa&lt;/span&gt;&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「-c」&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;「--count」&lt;/strong&gt;&lt;br/&gt;输出符合匹配字符串的行数&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;aaaa\nbbbb\ncccc\ndddd&quot;&lt;/span&gt; | grep -c aaaa&lt;br/&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;aaaa\nbbbb\ncccc\ndddd&quot;&lt;/span&gt; | grep --count aaaa&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出内容:&lt;br/&gt;1&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;其他命令&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;pwd&lt;/span&gt; 展示当前页面全路径&lt;br/&gt; &lt;br/&gt;mkdir 创建空文件夹&lt;br/&gt;&lt;br/&gt;rmdir 删除空文件夹&lt;br/&gt;&lt;br/&gt;touch 创建空文件&lt;br/&gt;&lt;br/&gt;cat 文件名 查看当前文件内容&lt;br/&gt;&lt;br/&gt;cat -n 文件名   查看当前文件内容并在行首列出行号&lt;br/&gt;&lt;br/&gt;cp 源文件地址 目标地址 将文件复制到新地址&lt;br/&gt;&lt;br/&gt;mv 源文件地址 目标地址 将文件移动到新地址&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Android常用命令&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;adb命令&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「获取当前界面元素」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb shell dumpsys activity top&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「获取任务列表」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb shell dumpsys activity activities&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「app入口」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb logcat | grep -i displayed&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「启动应用」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb shell am start -W -n com.xxx.android/.view.WelcomeActivity -S&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「列出当前已连接的设备」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb devices -l&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出内容：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;List of devices attached  &lt;br/&gt;7d97e1fa                device usb:336871424X product:umi model:Mi_10 device:umi&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「连接指定设备」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb -s &amp;lt;SERIAL&amp;gt; shell&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例：(SERIAL的值为adb devices -l 输出的值)&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb -s 7d97e1fa shell&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「屏幕截图」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb shell screencap /sdcard/screen.png&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「获取屏幕截图」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb pull /sdcard/screen.png &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「录制视频」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb shell screenrecord /sdcard/demo.mp4&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「获取录制视频」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb pull /sdcard/demo.mp4&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;dumpsys命令&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「测试界面性能」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出中会包含录制阶段所发生的动画帧的相关性能信息。以下命令使用 gfxinfo 收集指定软件包名称的界面性能数据：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb shell dumpsys gfxinfo package-name&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出最近帧性能信息&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb shell dumpsys gfxinfo package-name framestats&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「检查网络诊断信息」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;netstats&lt;/span&gt; 服务可提供自设备上次启动以来收集的网络使用情况统计信息&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb shell dumpsys netstats detail&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「检查电池诊断信息」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;batterystats&lt;/span&gt; 服务会生成关于设备电池用量的统计数据&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb shell dumpsys batterystats options&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;options列表&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;option&lt;/th&gt;&lt;th&gt;简介&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--checkin&lt;/span&gt;&lt;/td&gt;&lt;td&gt;生成签入报告的输出&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;-c&lt;/span&gt;&lt;/td&gt;&lt;td&gt;以签入格式写入当前统计信息&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--proto&lt;/span&gt;&lt;/td&gt;&lt;td&gt;以 proto 格式写入当前的汇总统计信息（没有历史记录）&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--history&lt;/span&gt;&lt;/td&gt;&lt;td&gt;只显示历史数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--history-start &amp;lt; num &amp;gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;仅显示从给定时间偏移量开始的历史数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--history-create-events &amp;lt; num &amp;gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;创建 &amp;lt; num &amp;gt;个电池历史事件。&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--charged&lt;/span&gt;&lt;/td&gt;&lt;td&gt;仅输出自上次充电以来的数据。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--daily&lt;/span&gt;&lt;/td&gt;&lt;td&gt;只输出完整的每日数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--reset&lt;/span&gt;&lt;/td&gt;&lt;td&gt;重置统计数据，清除所有当前数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--write&lt;/span&gt;&lt;/td&gt;&lt;td&gt;强制将当前收集的统计信息写入磁盘&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--new-daily&lt;/span&gt;&lt;/td&gt;&lt;td&gt;立即创建并写入新的每日统计记录。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--read-daily&lt;/span&gt;&lt;/td&gt;&lt;td&gt;读取加载上次写入的每日统计信息。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--settings&lt;/span&gt;&lt;/td&gt;&lt;td&gt;转储与 Batterystats 相关的设置键/值&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;--cpu&lt;/span&gt;&lt;/td&gt;&lt;td&gt;转储 cpu 统计数据用于调试目的&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用以下命令以计算机可读的 CSV 格式生成 batterystats 输出：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;adb shell dumpsys batterystats --checkin&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出内容：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;9,0,i,vers,35,187,QKQ1.191117.002,RKQ1.200826.002&lt;br/&gt;9,0,i,uid,1000,com.miui.screenrecorder&lt;br/&gt;9,0,i,uid,1000,com.android.dynsystem&lt;br/&gt;9,0,i,uid,1000,com.miui.powerkeeper&lt;br/&gt;9,0,i,uid,1000,com.miui.qr&lt;br/&gt;9,0,i,uid,1000,com.miui.contentcatcher&lt;br/&gt;9,0,i,uid,1000,com.xiaomi.powerchecker&lt;br/&gt;9,0,i,uid,1000,com.bsp.catchlog&lt;br/&gt;9,0,i,uid,1000,miui.systemui.plugin&lt;br/&gt;9,0,i,uid,1000,com.xiaomi.mi_connect_service&lt;br/&gt;9,0,i,uid,1000,com.android.networkstack.inprocess&lt;br/&gt;9,0,i,uid,1000,com.miui.securitycenter&lt;br/&gt;9,0,i,uid,1000,com.miui.thirdappassistant&lt;br/&gt;9,0,i,uid,1000,com.xiaomi.aiasst.vision&lt;br/&gt;9,0,i,uid,1000,com.miui.notification&lt;br/&gt;9,0,i,uid,1000,com.miui.daemon&lt;br/&gt;9,0,i,uid,1000,com.wapi.wapicertmanage&lt;br/&gt;...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更多详细信息见官网：https://developer.android.com/studio/command-line/dumpsys?hl=zh-cn#ui&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5555555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ibrHfPdM8YzYKVexRj5jtKdkptNwODzwU5qUHvRut10ldibC7ibD9Nh8vJ5PNp3mXc81icgrc0W04bKEGJg40p4Iiaw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>