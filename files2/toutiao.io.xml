<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>b8aac4f8e7c207e41019d2c03121cde2</guid>
<title>3+1 保障：高可用系统稳定性是如何炼成的？</title>
<link>https://toutiao.io/k/u8lcu6b</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>722870d8cf9ad13c4ee60732a6ae257e</guid>
<title>不要让追求完美阻碍你做决策</title>
<link>https://toutiao.io/k/mah7i09</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section&gt;&lt;p&gt;平时大家做研发的过程中，肯定经常遇到需要自己做决策的时候。不管是技术决策，还是团队管理上的决策。有时候为了追求完美经常迟迟难下决定，导致实际工作反而难以推进。&lt;/p&gt;&lt;p&gt;前几天团队就遇到一个这样的问题：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;项目中有个技术难题交给同事A，并且项目进度非常紧急，结果过了两天迟迟没有开展。所以就询问了一下情况。原来A同事为了方便后续扩展，一直苦思冥想方案的兼容性。然而考虑的扩展功能可能很难规划到产品中。另一方面是迫在眉睫的deadline。&lt;/p&gt;&lt;p&gt;所以我就建议他考虑一下另一种方案，先把目前的问题解决。虽然最后采用了这个建议，但是说服过程相当困难，还有点不愉快。事后我也有一点自我怀疑，我的决定真的正确吗？好在后来我找到了答案。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;极客时间的《研发效率破局之道》专栏“Facebook的10x程序员效率心法”提到一个快速迭代的原则：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;不要追求完美，不要过度计划，而是要尽快实现功能，通过不断迭代来完善。&lt;/strong&gt;优秀的架构往往不是设计出来的，而是在实现过程中逐步发展、完善起来的。&lt;/p&gt;&lt;p&gt;Facebook 有一条常见的海报标语，叫作“Done is better than perfect”，意思就是完成比完美要重要。要实现快速迭代，我们在设计和实现功能时都要注意简单化。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;有些开发者过于追求技术，投入了大量时间去设计精美、复杂的系统。这样做没有问题，但一定要有一个度，切忌杀鸡用牛刀。&lt;/strong&gt;因为复杂的系统虽然精美，但往往不容易理解，维护成本也比较高，修改起来更是不容易。&lt;/p&gt;&lt;p&gt;所以，在 Facebook 进行开发的时候，尽量使用简单实用的设计，然后快速进行版本迭代。&lt;/p&gt;&lt;p&gt;亨利·明茨伯格《写给管理者的睡前故事》有一章《决策：与你的想法不同》写的很有意思，下面是部分节选，祝开卷有益。&lt;/p&gt;&lt;p&gt;我们是怎么做决策的？很简单。首先诊断，接下来设计（可能的解决方案），然后决定，最后执行（把选择付诸行动）。换句话说，我们是先思考后行动，我把这个叫作思考先行。&lt;/p&gt;&lt;p&gt;你一生中最重要的决策可能是：寻找伴侣。你是思考先行的吗？我们以一位男性寻找女性伴侣为例，使用下面这个模式：首先列出你希望未来伴侣拥有的一些品质，如聪颖、漂亮、羞涩；接下来列出所有的可能人选；然后进行分析，根据上述标准给每位候选人打分；最后把分数加起来看谁胜出，并告知这位幸运的女士。&lt;/p&gt;&lt;p&gt;可是，她却告诉你：“你在忙活这些的时候，我结婚了，现在已经有几个孩子了。”看来，思考先行还是有缺点的。&lt;/p&gt;&lt;p&gt;所以，你可能会用其他方式来寻找伴侣，就像我的父亲那样。有一天，他跟我的奶奶说：“今天，我遇到了一个我想跟她结婚的女孩！”我跟你保证，这个决策里面真的没有多少分析，不过它的结局很圆满。我父母的婚姻长久而幸福。&lt;/p&gt;&lt;p&gt;我们把这称为“一见钟情”。作为一种决策模式，我称之为视觉先行。如果你知道有多少重要的决策是这么来的，可能会大吃一惊。比如，面试不到两秒钟就决定聘用某人，或者购买某设备的原因仅仅是你看上了这个地方。这些决策不一定是一时心血来潮，有可能是真知灼见。&lt;/p&gt;&lt;p&gt;但是，不要仓促下结论：&lt;strong&gt;还有另外一种更明智的决策方式，我称之为行动先行。&lt;/strong&gt;你可以想象如何用这种模式来寻找理想的伴侣。这么说吧，不管是做大决策还是小决策，当你不确定该怎么做的时候，你可能需要先行动后思考，而不是先思考后行动。你先进行小幅度的尝试性行动，看看是否奏效，如果没效果，就换另一种方式，直到找到有效的方式，再放开手去做。也就是摸石头过河。&lt;/p&gt;&lt;p&gt;当然，这种方式也有它的弊端。研究决策的特里·康诺利教授对此曾有妙语：“核战争和生孩子这样的事情就不适合用‘摸石头过河’的战略。”但是，在众多决策方式中，这种决策方式应该是一种完美的方式。例如，你本来打算把一个产品染成蓝色，但最后，你可能卖出的是彩虹色的产品。&lt;/p&gt;&lt;p&gt;你现在需要做一个重要的决策吗？好，先不要想了，明天四处看看！然后干点儿什么！到那个时候，你可能就会发现你的想法完全变了。&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;大师幽默的口吻在其它章节也处处可见，大家感兴趣可以看看，微信读书就有。&lt;br/&gt;大家如果有启发，可以关注铁柱，大家进群交流一下日常开发中遇到的问题。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/bymGBmLC3zGctwqKP4fLPhjJWtjKdqcr8nLEcXTHRibCshlQPYkuURiaxcdkoFmmNwo8hSVI8HDicLO9DiaIic0iaAhA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7b386a83097439a81662491bf0bf6b18</guid>
<title>如何评估大二计算机学生的认知能力？</title>
<link>https://toutiao.io/k/x1wu11p</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;看到团队最近做的一个技术实习生面试实例，很有意思。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;面试官是我们创新工场南京研究院的冯霁博士。来面试的是一个刚读完大二上学期计算机课程的学生。冯霁的面试题挺简单的：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;梯度下降已经二百年了，为什么上世纪80年代的反向传播算法会被认为是人工智能技术发展的里程碑？前人难道不知道梯度下降？与硬做梯度下降相比，1986年提出的反向传播算法多了些什么？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这本是一个AI算法面试的热身题。熟悉深度学习基础知识的随口就可说出标准答案。没想到小伙子虽来自计算机专业，却还没来得及系统学习机器学习、深度学习知识。如果就此结束面试，给小伙子一封拒信，似乎也说得过去。但冯霁换了个处理方法：给小伙子一晚上时间去调研并写出报告。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;小伙子连夜查资料、做调研，知道反向传播是通过动态规划来做梯度下降，复杂度由此降低到了线性。第二天，他给出了一份四页纸的报告。报告的逻辑很清晰，从问题描述，到扼要回答，再到具体算法梳理，时间复杂度推理，最后还附上了历史资料及其他类似目的的优化算法简述。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.3054347826086956&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/KP3aBdicVfJMuWORqKeCln9tHAMa8fxNXeb6iaFE9zHgJC0gicrD88L18cEicZIibm1qunibkl6n206XDx7WWj74Q5Lw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;920&quot;/&gt;&lt;/p&gt;&lt;p&gt;其实，用一晚上时间做出调研并给出答案不算啥难事，任何一所大学计算机专业的本科学生都应具备这项基本素质。但这位同学所写的报告不仅给出了答案，还展示了很不错的信息梳理和表达能力——通过网络查询到的知识，被他组织成了自己的语言和逻辑，废话不多，条理清晰，其中的手绘示意图和手写公式、注释也挺见功力。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.2483516483516484&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/KP3aBdicVfJMuWORqKeCln9tHAMa8fxNXo4xcp4EI0xfqI07x5CzOichfjBicicZGm4Z8mOVGHpn9NEtzyzufUiabuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;910&quot;/&gt;&lt;/p&gt;&lt;p&gt;大一大二学生，都是计算机科学领域的新手，正在入门和构建知识体系的阶段。我们很难通过一大批知识性问题来简单评估他们的能力水平。换句话说，这个阶段的孩子，最重要的不是学过和记住什么样的知识，而是是否掌握了快速学习知识并构建适合于自己的认知框架，以便将知识梳理成有序脉络的技能。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.2839224629418473&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/KP3aBdicVfJMuWORqKeCln9tHAMa8fxNXAc553ZJBWO1DQULbC1toWO6BEAfiazzK9PMiazFAibzw1V9Yick7R7GIRQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;877&quot;/&gt;&lt;/p&gt;&lt;p&gt;冯霁面试的本就是个知识性问题，但候选人答不出时，冯霁转而考察候选人快速学习知识、有序梳理知识、清晰表达知识的能力——这是面试官应该做的事情。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我自己在很多年前也大量带实习生。那时，有一批来自北大清华等名校的大一大二实习生，他们从能力特质上可明显分成两类：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;不会学习也不会梳理知识的；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;既会学习又会梳理知识的。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;头一类实习生看上去什么都会一点儿，但明显缺少系统化的学习方法和适合自己的认知框架。比如，有位大二的实习生写代码很快，做一个复杂的数据流逻辑时，东看看Stack Overflow，西看看Code Search，不一会儿就把七八个数据处理环节写好，拼装成完整的数据工作流。但他做出来的数据处理流程效率太低，既耗时又耗资源。我当时建议他系统学习一下分布式数据处理的基础知识与成熟的理论技巧，然后从整体角度思考下有没有根本性的优化方法，而不是每个环节各自为战，相互掣肘。可惜那个实习生缺少耐心，每次都是翻翻相关网页，就回头改写代码，一直游离在合理的解决问题思路之外。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;第二类实习生无论当前掌握的知识多少，他们都有能力在短时间内进入到一个新的领域，建立起适合自己的知识脉络。比如，我曾经带着一位大二的实习生写Wikitext（就是Wikipedia内容写作时使用的标记语言）的语义分析器和宏扩展器。那位实习生从没接触过标记语言的解析算法，也没深入学习过编译原理之类的系统知识，一开始仿照现成的代码做工作，总是不得其法，欲速而不达。没多久，他就悟出磨刀不误砍柴工的道理，先暂停编程，花了四五天的工夫去系统学习标记语言解析相关的技术，做了好几个练习用的小程序。我记得，他也像冯霁面试的实习生候选人那样，整理出了一份有逻辑，表达清晰，层次分明的学习笔记。后续的工作，他做起来就既快又好了。他甚至还根据自己的学习笔记提出了一项不错的算法改进建议并付诸实践。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果有两个软件研发团队，前一个团队经验丰富，但学习知识和梳理知识的能力不足，后一个团队初出茅庐，但学习知识和梳理知识的能力较强，那我是更愿意带后一个团队的。要做最前沿、最有挑战、最容易形成技术壁垒的事情，单靠死记硬背的知识以及熬时间熬出来的经验是没太大用处的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;顺便说一下：提这个案例并不是想说明冯霁面试的那个小伙子的能力水平究竟如何。冯霁的题目很基础，难以完整考察一个人的真正实力。其实，那位候选人来自世界最顶尖的名校——这一方面说明头部计算机专业并不会在大一大二就把深度学习之类的热门知识“灌”进学生脑子里，另一方面也说明候选人自身的聪明程度和综合素质绝对不差，冯霁可以在这个预设条件的基础上判断自己是否要聘用他。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;最后，回想起我们家九岁的小朋友，目前在学习时就大致处在泛泛而学，感兴趣的领域就博闻强记（不感兴趣的领域连起码的记忆也不肯），但几乎不具备任何知识梳理能力的阶段。小孩子当然和大一大二的学生之间没有可比性，但换个角度，是不是可以设计一些小游戏、小实验，让他们在玩的过程里积累些信息梳理、知识梳理的初步经验呢？比如：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5NjM1MDI5Mg==&amp;amp;mid=2652284063&amp;amp;idx=1&amp;amp;sn=00f515dac7ebddff89271ec9f356b690&amp;amp;chksm=8b537da4bc24f4b2b45debd12fb4371d104647bb1c6c4c1c8da26aa3df1487de547784288bbc&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;小朋友的调研小游戏：从数据到洞察&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;有空时，我得多琢磨琢磨。&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b7b5ccce261e8a34edca633da5db4fb0</guid>
<title>Go embed 简明教程</title>
<link>https://toutiao.io/k/c3jscng</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;article-entry&quot; itemprop=&quot;articleBody&quot;&gt;
      
      
      
      &lt;p&gt;Go编译的程序非常适合部署，如果没有通过CGO引用其它的库的话，我们一般编译出来的可执行二进制文件都是单个的文件，非常适合复制和部署。在实际使用中，除了二进制文件，可能还需要一些配置文件，或者静态文件，比如html模板、静态的图片、CSS、javascript等文件，如何这些文件也能打进到二进制文件中，那就太美妙，我们只需复制、按照单个的可执行文件即可。&lt;/p&gt;
&lt;p&gt;一些开源的项目很久以前就开始做这方面的工作，比如&lt;a href=&quot;https://github.com/gobuffalo/packr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gobuffalo/packr&lt;/a&gt;、&lt;a href=&quot;https://github.com/markbates/pkger&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markbates/pkger&lt;/a&gt;、&lt;a href=&quot;https://github.com/rakyll/statik&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rakyll/statik&lt;/a&gt;、&lt;a href=&quot;https://github.com/knadh/stuffbin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;knadh/stuffbin&lt;/a&gt;等等，但是不管怎么说这些都是第三方提供的功能，如果Go官方能内建支持就好了。2019末一个提案被提出&lt;a href=&quot;https://github.com/golang/go/issues/35950&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;issue#35950&lt;/a&gt;,期望Go官方编译器支持嵌入静态文件。后来Russ Cox专门写了一个设计文档&lt;a href=&quot;https://go.googlesource.com/proposal/+/master/design/draft-embed.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Go command support for embedded static assets&lt;/a&gt;, 并最终实现了它。&lt;/p&gt;
&lt;p&gt;Go 1.16中包含了go embed的功能，而且Go1.16基本在一个月左右的时间就会发布了，到时候你可以尝试使用它，如果你等不及了，你也可以下载Go 1.16beta1尝鲜。&lt;/p&gt;
&lt;p&gt;本文将通过例子，详细介绍go embed的各个功能。&lt;/p&gt;
&lt;a id=&quot;more&quot;/&gt;
&lt;h2 id=&quot;嵌入&quot;&gt;嵌入&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;对于单个的文件，支持嵌入为字符串和 byte slice&lt;/li&gt;
&lt;li&gt;对于多个文件和文件夹，支持嵌入为新的文件系统FS&lt;/li&gt;
&lt;li&gt;比如导入 &quot;embed&quot;包，即使无显式的使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;go:embed&lt;/code&gt;指令用来嵌入，必须紧跟着嵌入后的变量名&lt;/li&gt;
&lt;li&gt;只支持嵌入为string, byte slice和embed.FS三种类型，这三种类型的别名(alias)和命名类型(如type S string)都不可以&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;嵌入为字符串&quot;&gt;嵌入为字符串&lt;/h3&gt;
&lt;p&gt;比如当前文件下有个hello.txt的文件，文件内容为&lt;code&gt;hello,world!&lt;/code&gt;。通过&lt;code&gt;go:embed&lt;/code&gt;指令，在编译后下面程序中的s变量的值就变为了&lt;code&gt;hello,world!&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;_ &lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(s)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;嵌入为byte_slice&quot;&gt;嵌入为byte slice&lt;/h3&gt;
&lt;p&gt;你还可以把单个文件的内容嵌入为slice of byte，也就是一个字节数组。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;_ &lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b []&lt;span class=&quot;typename&quot;&gt;byte&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(b)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;嵌入为fs-FS&quot;&gt;嵌入为fs.FS&lt;/h3&gt;
&lt;p&gt;甚至你可以嵌入为一个文件系统，这在嵌入多个文件的时候非常有用。&lt;br/&gt;比如嵌入一个文件：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;嵌入本地的另外一个文件hello2.txt, 支持同一个变量上多个&lt;code&gt;go:embed&lt;/code&gt;指令(嵌入为string或者byte slice是不能有多个&lt;code&gt;go:embed&lt;/code&gt;指令的):&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello2.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ = f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;hello2.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;    fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当前重复的&lt;code&gt;go:embed&lt;/code&gt;指令嵌入为embed.FS是支持的，相当于一个:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;还可以嵌入子文件夹下的文件：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed p/hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed p/hello2.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;p/hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ = f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;p/hello2.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;还可以支持模式匹配的方式嵌入，下面的章节专门介绍。&lt;/p&gt;
&lt;h2 id=&quot;同一个文件嵌入为多个变量&quot;&gt;同一个文件嵌入为多个变量&lt;/h2&gt;
&lt;p&gt;比如下面的例子，s和s2变量都嵌入hello.txt的文件。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;18&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;_ &lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s2 &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(s)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(s2)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;exported/unexported的变量都支持&quot;&gt;exported/unexported的变量都支持&lt;/h2&gt;
&lt;p&gt;Go可以将文件可以嵌入为exported的变量，也可以嵌入为unexported的变量。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;18&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;_ &lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello2.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; S &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(s)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(S)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;package级别的变量和局部变量都支持&quot;&gt;package级别的变量和局部变量都支持&lt;/h2&gt;
&lt;p&gt;前面的例子都是package一级的的变量，即使是函数内的局部变量，也都支持嵌入：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;_ &lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s2 &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(s, s2)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;局部变量s的值在编译时就已经嵌入了，而且虽然s和s2嵌入同一个文件，但是它们的值在编译的时候会使用初始化字段中的不同的值：&lt;/p&gt;
&lt;figure class=&quot;highlight assemble&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0x0021&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00033&lt;/span&gt; (/Users&lt;span class=&quot;subst&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;/main&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;go:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)        MOVQ    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;embed&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;(SB), AX&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0x0028&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00040&lt;/span&gt; (/Users&lt;span class=&quot;subst&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;/main&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;go:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)        MOVQ    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;embed&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;(SB), CX&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0x002f&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00047&lt;/span&gt; (/Users&lt;span class=&quot;subst&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;/main&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;go:&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;)        MOVQ    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;embed&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;(SB), DX&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0x0036&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00054&lt;/span&gt; (/Users&lt;span class=&quot;subst&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;/main&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;go:&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;)        MOVQ    DX, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;s2&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;ptr&lt;span class=&quot;subst&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;72&lt;/span&gt;(SP)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0x003b&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00059&lt;/span&gt; (/Users&lt;span class=&quot;subst&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;/main&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;go:&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;)        MOVQ    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;embed&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;(SB), BX&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;embed&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt; SDATA size&lt;span class=&quot;subst&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;       &lt;span class=&quot;number&quot;&gt;0x0000&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;d &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;  &lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;       rel &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; t&lt;span class=&quot;subst&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; go&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;embed&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt; SDATA size&lt;span class=&quot;subst&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;       &lt;span class=&quot;number&quot;&gt;0x0000&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;d &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;  &lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;       rel &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; t&lt;span class=&quot;subst&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; go&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注意s和s2的变量的值是在编译期就确定了，即使在运行时你更改了hello.txt的文件，甚至把hello.txt都删除了也不会改变和影响s和s2的值。&lt;/p&gt;
&lt;h2 id=&quot;只读&quot;&gt;只读&lt;/h2&gt;
&lt;p&gt;嵌入的内容是只读的。也就是在编译期嵌入文件的内容是什么，那么在运行时的内容也就是什么。&lt;/p&gt;
&lt;p&gt;FS文件系统值提供了打开和读取的方法，并没有write的方法，也就是说FS实例是线程安全的，多个goroutine可以并发使用。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; FS&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (f FS) Open(name &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) (fs.File, error)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (f FS) ReadDir(name &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) ([]fs.DirEntry, error)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (f FS) ReadFile(name &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) ([]&lt;span class=&quot;typename&quot;&gt;byte&lt;/span&gt;, error)&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;go:embed指令&quot;&gt;go:embed指令&lt;/h2&gt;
&lt;h3 id=&quot;go:embed指令支持嵌入多个文件&quot;&gt;go:embed指令支持嵌入多个文件&lt;/h3&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt hello2.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;data, _ = f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;hello2.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当然你也可以像前面的例子一样写成多行&lt;code&gt;go:embed&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;18&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed hello2.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;data, _ = f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;hello2.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;支持文件夹&quot;&gt;支持文件夹&lt;/h3&gt;
&lt;p&gt;文件夹分隔符采用正斜杠&lt;code&gt;/&lt;/code&gt;,即使是windows系统也采用这个模式。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed p&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;p/hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;data, _ = f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;p/hello2.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;使用的是相对路径&quot;&gt;使用的是相对路径&lt;/h3&gt;
&lt;p&gt;相对路径的根路径是go源文件所在的文件夹。&lt;/p&gt;
&lt;p&gt;支持使用双引号&lt;code&gt;&quot;&lt;/code&gt;或者反引号的方式应用到嵌入的文件名或者文件夹名或者模式名上，这对名称中带空格或者特殊字符的文件文件夹有用。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed &quot;he llo.txt&quot; `hello-2.txt`&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;he llo.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;匹配模式&quot;&gt;匹配模式&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;go:embed&lt;/code&gt;指令中可以只写文件夹名，此文件夹中除了&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;_&lt;/code&gt;开头的文件和文件夹都会被嵌入，并且子文件夹也会被递归的嵌入，形成一个此文件夹的文件系统。&lt;/p&gt;
&lt;p&gt;如果想嵌入&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;_&lt;/code&gt;开头的文件和文件夹， 比如p文件夹下的.hello.txt文件，那么就需要使用&lt;code&gt;*&lt;/code&gt;，比如&lt;code&gt;go:embed p/*&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt;不具有递归性，所以子文件夹下的&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;_&lt;/code&gt;不会被嵌入，除非你在专门使用子文件夹的&lt;code&gt;*&lt;/code&gt;进行嵌入:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed p/*&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;p/.hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;data, _ = f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;p/q/.hi.txt&quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 没有嵌入 p/q/.hi.txt&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;嵌入和嵌入模式不支持绝对路径、不支持路径中包含&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;..&lt;/code&gt;,如果想嵌入go源文件所在的路径，使用&lt;code&gt;*&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed *&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;data, _ = f.ReadFile(&lt;span class=&quot;string&quot;&gt;&quot;.hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;文件系统&quot;&gt;文件系统&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;embed.FS&lt;/code&gt;实现了 &lt;code&gt;io/fs.FS&lt;/code&gt;接口，它可以打开一个文件，返回&lt;code&gt;fs.File&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed *&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;helloFile, _ := f.Open(&lt;span class=&quot;string&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;stat, _ := helloFile.Stat()&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(stat.Name(), stat.Size())&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;它还提供了ReadFileh和ReadDir功能，遍历一个文件下的文件和文件夹信息：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed *&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;dirEntries, _ := f.ReadDir(&lt;span class=&quot;string&quot;&gt;&quot;p&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; _, de := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; dirEntries {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(de.Name(), de.IsDir())&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;因为它实现了&lt;code&gt;io/fs.FS&lt;/code&gt;接口，所以可以返回它的子文件夹作为新的文件系统：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;18&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;embed&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;io/fs&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;io/ioutil&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//go:embed *&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f embed.FS&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;ps, _ := fs.Sub(f, &lt;span class=&quot;string&quot;&gt;&quot;p&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;hi, _ := ps.Open(&lt;span class=&quot;string&quot;&gt;&quot;q/hi.txt&quot;&lt;/span&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;data, _ := ioutil.ReadAll(hi)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;(data))&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;应用&quot;&gt;应用&lt;/h2&gt;
&lt;h3 id=&quot;net/http&quot;&gt;net/http&lt;/h3&gt;
&lt;p&gt;先前，我们提供一个静态文件的服务时，使用：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;http.Handle(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;, http.FileServer(http.Dir(&lt;span class=&quot;string&quot;&gt;&quot;/tmp&quot;&lt;/span&gt;)))&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;现在，&lt;code&gt;io/fs.FS&lt;/code&gt;文件系统也可以转换成http.FileServer的参数了:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; FileSystem&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; FS(fsys fs.FS) FileSystem&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Handler&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; FileServer(root FileSystem) Handler&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;所以，嵌入文件可以使用下面的方式:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;http.Handle(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;, http.FileServer(http.FS(fsys)))&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;text/template和html/template-&quot;&gt;text/template和html/template.&lt;/h3&gt;
&lt;p&gt;同样的,template也可以从嵌入的文件系统中解析模板：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; ParseFS(fsys fs.FS, patterns ...&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) (*Template, error)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (t *Template) ParseFS(fsys fs.FS, patterns ...&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) (*Template, error)&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


      
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ea6f3b6027240968f334490cd941b4e8</guid>
<title>[译] 使用 QueryDSL 过程中你肯定遇到过的问题</title>
<link>https://toutiao.io/k/az1umqg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;header class=&quot;post-header&quot;&gt;
        &lt;h1 class=&quot;post-title&quot; itemprop=&quot;name headline&quot;&gt;
          使用QueryDSL过程中你肯定遇到过的问题
        &lt;/h1&gt;

        &lt;p class=&quot;post-meta&quot;&gt;
            &lt;span class=&quot;post-meta-item&quot;&gt;
              &lt;span class=&quot;post-meta-item-icon&quot;&gt;
                &lt;i class=&quot;far fa-calendar&quot;/&gt;
              &lt;/span&gt;
              &lt;span class=&quot;post-meta-item-text&quot;&gt;发表于&lt;/span&gt;

              &lt;time title=&quot;创建时间：2019-10-28 00:00:00&quot; itemprop=&quot;dateCreated datePublished&quot; datetime=&quot;2019-10-28T00:00:00+00:00&quot;&gt;2019-10-28&lt;/time&gt;
            &lt;/span&gt;
              &lt;span class=&quot;post-meta-item&quot;&gt;
                &lt;span class=&quot;post-meta-item-icon&quot;&gt;
                  &lt;i class=&quot;far fa-calendar-check&quot;/&gt;
                &lt;/span&gt;
                &lt;span class=&quot;post-meta-item-text&quot;&gt;更新于&lt;/span&gt;
                &lt;time title=&quot;修改时间：2021-02-05 09:55:14&quot; itemprop=&quot;dateModified&quot; datetime=&quot;2021-02-05T09:55:14+00:00&quot;&gt;2021-02-05&lt;/time&gt;
              &lt;/span&gt;

          
            &lt;span class=&quot;post-meta-item&quot; title=&quot;阅读次数&quot; id=&quot;busuanzi_container_page_pv&quot;&gt;
              &lt;span class=&quot;post-meta-item-icon&quot;&gt;
                &lt;i class=&quot;fa fa-eye&quot;/&gt;
              &lt;/span&gt;
              &lt;span class=&quot;post-meta-item-text&quot;&gt;阅读次数：&lt;/span&gt;
              &lt;span id=&quot;busuanzi_value_page_pv&quot;/&gt;
            &lt;/span&gt;&lt;br/&gt;
            &lt;span class=&quot;post-meta-item&quot; title=&quot;本文字数&quot;&gt;
              &lt;span class=&quot;post-meta-item-icon&quot;&gt;
                &lt;i class=&quot;far fa-file-word&quot;/&gt;
              &lt;/span&gt;
                &lt;span class=&quot;post-meta-item-text&quot;&gt;本文字数：&lt;/span&gt;
              &lt;span&gt;4.5k&lt;/span&gt;
            &lt;/span&gt;
            &lt;span class=&quot;post-meta-item&quot; title=&quot;阅读时长&quot;&gt;
              &lt;span class=&quot;post-meta-item-icon&quot;&gt;
                &lt;i class=&quot;far fa-clock&quot;/&gt;
              &lt;/span&gt;
                &lt;span class=&quot;post-meta-item-text&quot;&gt;阅读时长 ≈&lt;/span&gt;
              &lt;span&gt;9 分钟&lt;/span&gt;
            &lt;/span&gt;

        &lt;/p&gt;
      &lt;/header&gt;

    
    
    
    &lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;

      
        &lt;p&gt;&lt;em&gt;来自官网的介绍（翻译版）&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;/&gt;前言&lt;/h3&gt;&lt;p&gt;Querydsl是一个框架，可用于构造静态类型的类似SQL的查询。可以通过诸如Querydsl之类的流畅API构造查询，而不是将查询编写为内联字符串或将其外部化为XML文件。&lt;/p&gt;
&lt;a id=&quot;more&quot;/&gt;

&lt;p&gt;例如，与简单字符串相比，使用流利的API的好处是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在IDE中使用代码完成；会有代码提示和自动补全，较为高效&lt;/li&gt;
&lt;li&gt;(几乎)语法安全；&lt;/li&gt;
&lt;li&gt;可以安全地引用域类型和属性；可以直接使用领域模型进行操作，毕竟本质就是面向对象&lt;/li&gt;
&lt;li&gt;更好地重构域类型的更改；&lt;/li&gt;
&lt;li&gt;跟写SQL一样的方便；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-简介&quot;&gt;&lt;a href=&quot;#1-简介&quot; class=&quot;headerlink&quot; title=&quot;1. 简介&quot;/&gt;1. 简介&lt;/h3&gt;&lt;h4 id=&quot;1-1-背景&quot;&gt;&lt;a href=&quot;#1-1-背景&quot; class=&quot;headerlink&quot; title=&quot;1.1. 背景&quot;/&gt;1.1. 背景&lt;/h4&gt;&lt;p&gt;Querydsl是出于以类型安全的方式维护HQL查询的需要而诞生的。HQL查询的增量构造需要String连接，并导致难以阅读的代码。通过纯字符串对域类型和属性的不安全引用是基于字符串的HQL构造的另一个问题。&lt;/p&gt;
&lt;p&gt;随着域模型的不断变化，类型安全性在软件开发中带来了巨大的好处。域更改直接反映在查询中，而查询构造中的自动完成功能使查询构造更快，更安全。&lt;/p&gt;
&lt;p&gt;用于Hibernate的HQL是Querydsl的第一种目标语言，但如今它支持JPA，JDO，JDBC，Lucene，Hibernate Search，MongoDB，Collections和RDFBean作为后端。&lt;/p&gt;
&lt;h4 id=&quot;1-2-原则&quot;&gt;&lt;a href=&quot;#1-2-原则&quot; class=&quot;headerlink&quot; title=&quot;1.2. 原则&quot;/&gt;1.2. 原则&lt;/h4&gt;&lt;p&gt;&lt;em&gt;类型安全&lt;/em&gt; 是Querydsl的核心原则。查询是根据生成的反映查询类型的属性来构造的。函数/方法调用也以完全类型安全的方式构造。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;一致性&lt;/em&gt; 是另一个重要原则。在所有实现中，查询路径和操作都是相同的，而且Query接口具有公共的基本接口。&lt;/p&gt;
&lt;p&gt;要了解Querydsl查询和表达式类型的表达能力，请访问javadocs并进行探索&lt;code&gt;com.querydsl.core.Query&lt;/code&gt;，&lt;code&gt;com.querydsl.core.Fetchable&lt;/code&gt; 以及&lt;code&gt;com.querydsl.core.types.Expression&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果是初次使用QueryDSL的同学建议去这篇博客：&lt;/strong&gt;&lt;a href=&quot;https://blog.csdn.net/phapha1996/article/details/83614975&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SpringDataJPA+QueryDSL玩转态动条件/投影查询&lt;/a&gt;，&lt;/p&gt;
&lt;p&gt;本文针探讨的是使用时遇到的一些问题&lt;/p&gt;
&lt;h3 id=&quot;2-拓展示例&quot;&gt;&lt;a href=&quot;#2-拓展示例&quot; class=&quot;headerlink&quot; title=&quot;2. 拓展示例&quot;/&gt;2. 拓展示例&lt;/h3&gt;&lt;h4 id=&quot;1-Projections简化代码，使代码更优雅&quot;&gt;&lt;a href=&quot;#1-Projections简化代码，使代码更优雅&quot; class=&quot;headerlink&quot; title=&quot;1. Projections简化代码，使代码更优雅&quot;/&gt;1. Projections简化代码，使代码更优雅&lt;/h4&gt;&lt;p&gt;使用Projections方法可以更简单更方便的返回自定义的参数属性&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;QHajOrderDetails orderDetails = QHajOrderDetails.hajOrderDetails;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; jpaQueryFactory.select(&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;Projections.bean(&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;CommoditySalesDto&lt;span class=&quot;class&quot;&gt;.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;                  // 取别名，与&lt;span class=&quot;title&quot;&gt;CommoditySalesDto&lt;/span&gt;实体中字段相同&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;orderDetails.number.sum().as(&quot;sales&quot;),&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;orderDetails.commodityNo&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;).from(orderDetails)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.where(orderDetails.commodityNo.in(commodityNos))&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.groupBy(orderDetails.commodityNo)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.fetch();&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Projections的bean方法第一个属性是要查询对象的泛型类，对象中orderDetails.“commodityNo”属性就是CommoditySalesDto对应属性，大小写相同。如属性不同时可以使用as来为指定结果集添加别名对应dto内属性。&lt;/p&gt;
&lt;h4 id=&quot;2-关联同一张表两次进行查询&quot;&gt;&lt;a href=&quot;#2-关联同一张表两次进行查询&quot; class=&quot;headerlink&quot; title=&quot;2. 关联同一张表两次进行查询&quot;/&gt;2. 关联同一张表两次进行查询&lt;/h4&gt;&lt;p&gt;有时遇到一些查询需要在同一张表关联查询两次或多次，知道在sql中怎么写，但是在querydsl中就不知道怎么下手了，方法其实很简单&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;QHajCommodityType type1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QHajCommodityType(&lt;span class=&quot;string&quot;&gt;&quot;type1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;QHajCommodityType type2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QHajCommodityType(&lt;span class=&quot;string&quot;&gt;&quot;type2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; jPAQueryFactory.select(type2.id)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    .from(type1)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    .join(type2).on(type1.id.eq(type2.parentId))&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.fetch();&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;创建对应对象和别名，这样关联查询时才会区分。&lt;/p&gt;
&lt;h4 id=&quot;3-格式化字段进行查询&quot;&gt;&lt;a href=&quot;#3-格式化字段进行查询&quot; class=&quot;headerlink&quot; title=&quot;3. 格式化字段进行查询&quot;/&gt;3. 格式化字段进行查询&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取到每日订单数量&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;QHajOrder order = QHajOrder.hajOrder;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//格式化字段，按每日格式化&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;StringTemplate dateExpr = Expressions.stringTemplate(&lt;span class=&quot;string&quot;&gt;&quot;DATE_FORMAT({0},&#x27;%Y-%m-%d&#x27;)&quot;&lt;/span&gt;, order.createTime);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; jpaQueryFactory.select(dateExpr,order.id.count())&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.from(order)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.orderBy(order.id.desc())&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.groupBy(dateExpr)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.limit(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.fetch();&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;4-可添加判断逻辑，根据业务需要拼接，在代码中书写更便捷&quot;&gt;&lt;a href=&quot;#4-可添加判断逻辑，根据业务需要拼接，在代码中书写更便捷&quot; class=&quot;headerlink&quot; title=&quot;4. 可添加判断逻辑，根据业务需要拼接，在代码中书写更便捷&quot;/&gt;4. 可添加判断逻辑，根据业务需要拼接，在代码中书写更便捷&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;QHajOrder order = QHajOrder.hajOrder;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;JPAQuery&amp;lt;Integer&amp;gt; jpaQuery = jpaQueryFactory.select(order.id.sum()).from(order);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;Integer count;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ObjectUtil.isNotNull(type)) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    count = jpaQuery.where(order.status.eq(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)).fetchOne();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;} &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    count = jpaQuery.where(order.status.eq(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)).fetchOne();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 数据为空时，值为null&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ObjectUtil.isNull(count)) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; count;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;5-分页处理&quot;&gt;&lt;a href=&quot;#5-分页处理&quot; class=&quot;headerlink&quot; title=&quot;5. 分页处理&quot;/&gt;5. 分页处理&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;HajOrder&amp;gt; &lt;span class=&quot;title&quot;&gt;getOrderListByPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Pager page)&lt;/span&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;QHajOrder order = QHajOrder.hajOrder;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;QueryResults&amp;lt;HajOrder&amp;gt; queryResults = jpaQueryFactory&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.selectFrom(order)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.where(order.status.eq(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;// 分页逻辑&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.offset((page.getCurrentPage() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * page.getPageSize())&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.limit(page.getPageSize())&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;.fetchResults();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 总条数&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;page.setRecordTotal((&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) queryResults.getTotal());&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; queryResults.getResults();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;6-多数据源配置使用&quot;&gt;&lt;a href=&quot;#6-多数据源配置使用&quot; class=&quot;headerlink&quot; title=&quot;6.多数据源配置使用&quot;/&gt;6.多数据源配置使用&lt;/h4&gt;&lt;p&gt;如果你还没配置多数据源使用，可以参照这个博客 &lt;a href=&quot;http://blog.didispace.com/spring-boot-learning-21-3-8/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Spring Boot 2.x基础教程：Spring Data JPA的多数据源配置&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之前一直是单数据源使用，在多数据源中使用可能会报这样的错&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: * is not mapped&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:&lt;span class=&quot;number&quot;&gt;350&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;at com.sun.proxy.$Proxy119.createQuery(Unknown Source)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;at com.querydsl.jpa.impl.AbstractJPAQuery.createQuery(AbstractJPAQuery.java:&lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;at com.querydsl.jpa.impl.AbstractJPAQuery.fetchResults(AbstractJPAQuery.java:&lt;span class=&quot;number&quot;&gt;211&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;配置多个实体管理器EntityManager&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@SpringBootApplication&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;@EnableJpaAuditing&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;public class ApiApplication {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;public static void main(String[] args) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;SpringApplication.run(ThirdApiApplication.class, args);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; * Spring管理JPAQueryFactory&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; * 默认&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; * @param entityManager&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; * @return&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;@Bean&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;public JPAQueryFactory jpaQueryFactory(@Qualifier(&quot;entityManagerPrimary&quot;) EntityManager entityManager) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;return new JPAQueryFactory(entityManager);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; * 新配置数据源wmsJpaQueryFactory&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; * @param entityManager&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; * @return&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;@Bean&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;public JPAQueryFactory wmsJpaQueryFactory(@Qualifier(&quot;entityManagerSecondary&quot;) EntityManager entityManager) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;return new JPAQueryFactory(entityManager);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;业务使用中按如下操作就可以了&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//默认的数据源&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; JPAQueryFactory jpaQueryFactory;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//新的数据源&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; JPAQueryFactory wmsJpaQueryFactory;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;QCustomer customer = QCustomer.customer;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    Customer bob = wmsJpaQueryFactory.select(customer)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      .from(customer)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      .where(customer.firstName.eq(&lt;span class=&quot;string&quot;&gt;&quot;Bob&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;      .fetchOne();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;资料：&quot;&gt;&lt;a href=&quot;#资料：&quot; class=&quot;headerlink&quot; title=&quot;资料：&quot;/&gt;资料：&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/querydsl/querydsl/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github-querydsl资源&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.querydsl.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Querydsl官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.querydsl.com/static/querydsl/latest/reference/html/ch02.html#jpa_integration&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网querydsl-jpa示例&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.querydsl.com/static/querydsl/4.1.3/reference/html_single/#preface&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Querydsl参考指南&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;

    
    
    

 

      &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>