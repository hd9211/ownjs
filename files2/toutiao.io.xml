<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>0c0c82a0021ecac8857893f1345e8a2b</guid>
<title>卧槽，SQL 注入竟然把我们的系统搞挂了</title>
<link>https://toutiao.io/k/5rmy079</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近我在整理安全漏洞相关问题，准备在公司做一次分享。恰好，这段时间团队发现了一个sql注入漏洞：在一个公共的分页功能中，排序字段作为入参，前端页面可以自定义。在分页sql的&lt;code&gt;mybatis&lt;/code&gt; &lt;code&gt;mapper.xml&lt;/code&gt;中，&lt;code&gt;order by&lt;/code&gt;字段后面使用&lt;code&gt;$&lt;/code&gt;符号动态接收计算后的排序参数，这样可以实现动态排序的功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，如果入参传入：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;id; &lt;span&gt;select &lt;/span&gt; &lt;span&gt;1 &lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终执行的sql会变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; user &lt;span&gt;order &lt;/span&gt; &lt;span&gt;by &lt;/span&gt; &lt;span&gt;id&lt;/span&gt;; &lt;span&gt;select &lt;/span&gt; &lt;span&gt;1 &lt;/span&gt; &lt;span&gt;-- limit 1,20&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;--&lt;/code&gt;会把后面的&lt;code&gt;limit&lt;/code&gt;语句注释掉，导致分页条件失效，返回了所有数据。攻击者可以通过这个漏洞一次性获取所有数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;动态排序这个功能原本的想法是好的，但是却有&lt;code&gt;sql注入的风险&lt;/code&gt;。值得庆幸的是，这次我们及时发现了问题，并且及时解决了，没有造成什么损失。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，几年前在老东家的时候，就没那么幸运了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;一次sql注入直接把我们支付服务搞挂了。&lt;/strong&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. 还原事故现场&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有一天运营小姐姐跑过来跟我说，有很多用户支付不了。这个支付服务是一个老系统，转手了3个人了，一直很稳定没有出过啥问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我二话不说开始定位问题了，先看服务器日志，发现了很多报数据库连接过多的异常。因为支付功能太重要了，当时为了保证支付功能快速恢复，先找运维把支付服务2个节点重启了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5分钟后暂时恢复了正常。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我再继续定位原因，据我当时的经验判断一般出现数据库连接过多，可能是因为&lt;code&gt;连接忘了关闭&lt;/code&gt;导致。但是仔细排查代码没有发现问题，我们当时用的数据库连接池，它会自动回收空闲连接的，&lt;code&gt;排除了这种可能&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;过了会儿，又有一个节点出现了数据库连接过多的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但此时，还没查到原因，逼于无奈，只能让运维再重启服务，不过这次把数据库&lt;code&gt;最大连接数调大&lt;/code&gt;了，默认是100，我们当时设置的500，后面调成了1000。（其实现在大部分公司会将这个参数设置成&lt;code&gt;1000&lt;/code&gt;）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用命令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;set&lt;/span&gt; &lt;span&gt;GLOBAL&lt;/span&gt; max_connections=&lt;span&gt;500&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;能及时生效，不需要重启mysql服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这次给我争取了更多的时间，找dba帮忙一起排查原因。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用&lt;code&gt;show processlist;&lt;/code&gt;命令查看当前线程执行情况：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2024793388429752&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDGic5kWbspxudyYa1ab9KQpgQLFj9iaViczcFsjTgsnVHa3AVicfD5NicbyOBn3OLn9PMFnkC36uegibbRQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1452&quot;/&gt;还可以查看当前的连接状态帮助识别出有问题的查询语句。（需要特别说明的是上图只是我给的一个例子，线上真实的结果不是这样的）&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;id 线程id&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;User 执行sql的账号&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Host 执行sql的数据库的ip和端号&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;db 数据库名称&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Command 执行命令，包括：Daemon、Query、Sleep等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Time 执行sql所消耗的时间&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;State 执行状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;info 执行信息，里面可能包含sql信息。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;果然，发现了一条不寻常的查询sql，执行了差不多1个小时还没有执行完。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;dba把那条sql复制出来，发给我了。然后&lt;code&gt;kill -9&lt;/code&gt; 杀掉了那条执行耗时非常长的sql线程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后面，数据库连接过多的问题就没再出现了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我拿到那条sql仔细分析了一下，发现一条订单查询语句被攻击者注入了很长的一段sql，肯定是高手写的，有些语法我都没见过。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;但可以确认无误，被人sql注入了。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过那条sql中的信息，我很快找到了相关代码，查询数据时入参竟然用的&lt;code&gt;Statment&lt;/code&gt;，而非&lt;code&gt;PrepareStatement&lt;/code&gt;预编译机制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知道原因就好处理了，将查询数据的地方改成&lt;code&gt;preparestatement&lt;/code&gt;预编译机制后问题得以最终解决。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.为什么会导致数据库连接过多？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我相信很多同学看到这里，都会有一个疑问：sql注入为何会导致数据库连接过多？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我下面用一张图，给大家解释一下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5091352009744214&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDGic5kWbspxudyYa1ab9KQpgl7bheCs6w18GZnzqTFO7fa3O1Mz4YN2dX7F9vQzkJn0eCM8BJmscVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1642&quot;/&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;攻击者sql注入了类似这样的参数：&lt;code&gt;-1;锁表语句--&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其中&lt;code&gt;;&lt;/code&gt;前面的查询语句先执行了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;由于&lt;code&gt;--&lt;/code&gt;后面的语句会被注释，接下来只会执行锁表语句，把表锁住。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;正常业务请求从数据库连接池成功获取连接后，需要操作表的时候，尝试获取表锁，但一直获取不到，直到超时。注意，这里可能会累计大量的数据库连接被占用，没有及时归还。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据库连接池不够用，没有空闲连接。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;新的业务请求从数据库连接池获取不到连接，报数据库连接过多异常。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;sql注入导致数据库连接过多问题，最根本的原因是长时间锁表。&lt;/strong&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.预编译为什么能防sql注入？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;preparestatement&lt;/code&gt;预编译机制会在sql语句执行前，对其进行语法分析、编译和优化，其中参数位置使用占位符&lt;code&gt;?&lt;/code&gt;代替了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当真正运行时，传过来的参数会被看作是一个纯文本，不会重新编译，不会被当做sql指令。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样，即使入参传入sql注入指令如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;id; &lt;span&gt;select &lt;/span&gt; &lt;span&gt;1 &lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终执行的sql会变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; user &lt;span&gt;order &lt;/span&gt; &lt;span&gt;by &lt;/span&gt; &lt;span&gt;&#x27;id; select 1 --&#x27; &lt;/span&gt; &lt;span&gt;limit &lt;/span&gt; &lt;span&gt;1&lt;/span&gt;,&lt;span&gt;20&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样就不会出现sql注入问题了。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.预编译就一定安全？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不知道你在查询数据时有没有用过like语句，比如：查询名字中带有“苏”字的用户，就可能会用类似这样的语句查询：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user &lt;/span&gt; &lt;span&gt;where &lt;/span&gt; &lt;span&gt;name &lt;/span&gt; &lt;span&gt;like &lt;/span&gt; &lt;span&gt;&#x27;%苏%&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;正常情况下是没有问题的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但有些场景下要求传入的条件是必填的，比如：name是必填的，如果注入了：&lt;code&gt;%&lt;/code&gt;，最后执行的sql会变成这样的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user &lt;/span&gt; &lt;span&gt;where &lt;/span&gt; &lt;span&gt;name &lt;/span&gt; &lt;span&gt;like &lt;/span&gt; &lt;span&gt;&#x27;%%%&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况预编译机制是正常通过的，但sql的执行结果不会返回包含&lt;code&gt;%&lt;/code&gt;的用户，而是返回了所有用户。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;name字段必填变得没啥用了，攻击者同样可以获取用户表所有数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么会出现这个问题呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;%&lt;/code&gt;在mysql中是关键字，如果使用&lt;code&gt;like &#x27;%%%&#x27;&lt;/code&gt;，该like条件会失效。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何解决呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要对&lt;code&gt;%&lt;/code&gt;进行转义：&lt;code&gt;/%&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;转义后的sql变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user &lt;/span&gt; &lt;span&gt;where &lt;/span&gt; &lt;span&gt;name &lt;/span&gt; &lt;span&gt;like &lt;/span&gt; &lt;span&gt;&#x27;%/%%&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只会返回包含&lt;code&gt;%&lt;/code&gt;的用户。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5.有些特殊的场景怎么办？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在java中如果使用&lt;code&gt;mybatis&lt;/code&gt;作为持久化框架，在&lt;code&gt;mapper.xml&lt;/code&gt;文件中，如果入参使用&lt;code&gt;#&lt;/code&gt;传值，会使用预编译机制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般我们是这样用的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;lt;sql id=&quot;query&quot;&amp;gt;&lt;br/&gt;   &lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; &lt;span&gt;user&lt;/span&gt; &lt;br/&gt;   &amp;lt;&lt;span&gt;where&lt;/span&gt;&amp;gt;&lt;br/&gt;     &lt;span&gt;name&lt;/span&gt; = &lt;span&gt;#{name}&lt;/span&gt;&lt;br/&gt;   &amp;lt;/&lt;span&gt;where&lt;/span&gt;&amp;gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;sql&lt;/span&gt;&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;绝大多数情况下，鼓励大家使用&lt;code&gt;#&lt;/code&gt;这种方式传参，更安全，效率更高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是有时有些特殊情况，比如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;lt;sql id=&quot;orderBy&quot;&amp;gt;&lt;br/&gt;   order by ${sortString}&lt;br/&gt;&amp;lt;/sql&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;sortString字段的内容是一个方法中动态计算出来的，这种情况是没法用&lt;code&gt;#&lt;/code&gt;，代替&lt;code&gt;$&lt;/code&gt;的，这样程序会报错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用&lt;code&gt;$&lt;/code&gt;的情况就有sql注入的风险。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么这种情况该怎办呢？&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;自己写个util工具过滤掉所有的注入关键字，动态计算时调用该工具。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果数据源用的阿里的druid的话，可以开启filter中的wall（防火墙），它包含了防止sql注入的功能。但是有个问题，就是它默认不允许多语句同时操作，对批量更新操作也会拦截，这就需要我们自定义filter了。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6.表信息是如何泄露的？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有些细心的同学，可能会提出一个问题：在上面锁表的例子中，攻击者是如何拿到表信息的？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;方法1：盲猜&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就是攻击者根据常识猜测可能存在的表名称。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设我们有这样的查询条件：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; t_order &lt;span&gt;where &lt;/span&gt; &lt;span&gt;id&lt;/span&gt; = ${&lt;span&gt;id&lt;/span&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传入参数：&lt;code&gt;-1;select * from user&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终执行sql变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; t_order &lt;span&gt;where &lt;/span&gt; &lt;span&gt;id&lt;/span&gt; = &lt;span&gt;-1&lt;/span&gt;;&lt;span&gt; select&lt;/span&gt; * &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果该sql有数据返回，说明user表存在，被猜中了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建议表名不要起得过于简单，可以带上适当的前缀，比如：t_user。这样可以增加盲猜的难度。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;方法2：通过系统表&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实mysql有些系统表，可以查到我们自定义的数据库和表的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设我们还是以这条sql为例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; code,&lt;span&gt;name &lt;/span&gt; &lt;span&gt;from&lt;/span&gt; t_order &lt;span&gt;where &lt;/span&gt; &lt;span&gt;id&lt;/span&gt; = ${&lt;span&gt;id&lt;/span&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一步，获取数据库和账号名。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传参为：&lt;code&gt;-1 union select database(),user()#&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终执行sql变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; code,&lt;span&gt;name &lt;/span&gt; &lt;span&gt;from&lt;/span&gt; t_order &lt;span&gt;where &lt;/span&gt; &lt;span&gt;id&lt;/span&gt; = &lt;span&gt;-1 &lt;/span&gt; &lt;span&gt;union &lt;/span&gt; &lt;span&gt;select &lt;/span&gt; &lt;span&gt;database&lt;/span&gt;(),&lt;span&gt;user&lt;/span&gt;()&lt;span&gt;#&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;会返回当前 数据库名称：&lt;code&gt;sue&lt;/code&gt; 和 账号名称：&lt;code&gt;root@localhost&lt;/code&gt;。&lt;img data-ratio=&quot;0.3192771084337349&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDGic5kWbspxudyYa1ab9KQpgoWOiaOpAI5Z2KBsGTLKibAIDw5iaAmRKoXic7beaicI6icqeKPL8mw4yIibOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;332&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第二步，获取表名。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传参改成：&lt;code&gt;-1 union select table_name,table_schema from information_schema.tables where table_schema=&#x27;sue&#x27;#&lt;/code&gt;最终执行sql变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; code,&lt;span&gt;name &lt;/span&gt; &lt;span&gt;from&lt;/span&gt; t_order &lt;span&gt;where &lt;/span&gt; &lt;span&gt;id&lt;/span&gt; = &lt;span&gt;-1 &lt;/span&gt; &lt;span&gt;union &lt;/span&gt; &lt;span&gt;select&lt;/span&gt; table_name,table_schema &lt;span&gt;from&lt;/span&gt; information_schema.tables &lt;span&gt;where&lt;/span&gt; table_schema=&lt;span&gt;&#x27;sue&#x27;&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;会返回数据库&lt;code&gt;sue&lt;/code&gt;下面所有表名。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDGic5kWbspxudyYa1ab9KQpgia1aZpfgsAMA7jbQldxgK1ypeXzED5VJSD1KiaAmYDCMdRNbs86ys6Og/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;352&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;建议在生成环境程序访问的数据库账号，要跟管理员账号分开，一定要控制权限，不能访问系统表。&lt;br/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7.sql注入到底有哪些危害？&lt;/span&gt;&lt;/h1&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 核心数据泄露&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大部分攻击者的目的是为了赚钱，说白了就是获取到有价值的信息拿出去卖钱，比如：用户账号、密码、手机号、身份证信息、银行卡号、地址等敏感信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他们可以注入类似这样的语句：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-1; &lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user&lt;/span&gt;; &lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就能轻松把用户表中所有信息都获取到。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，建议大家对这些敏感信息加密存储，可以使用&lt;code&gt;AES&lt;/code&gt;对称加密。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 删库跑路&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也不乏有些攻击者不按常理出牌，sql注入后直接把系统的表或者数据库都删了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他们可以注入类似这样的语句：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-1; &lt;span&gt;delete &lt;/span&gt; &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user&lt;/span&gt;; &lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上语句会删掉user表中所有数据。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-1; &lt;span&gt;drop &lt;/span&gt; &lt;span&gt;database &lt;/span&gt; &lt;span&gt;test&lt;/span&gt;; &lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上语句会把整个test数据库所有内容都删掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;正常情况下，我们需要控制线上账号的权限，只允许DML（data manipulation language）数据操纵语言语句，包括：select、update、insert、delete等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不允许DDL（data definition language）数据库定义语言语句，包含：create、alter、drop等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也不允许DCL（Data Control Language）数据库控制语言语句，包含：grant,deny,revoke等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDL和DCL语句只有dba的管理员账号才能操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;顺便提一句：如果被删表或删库了，其实还有补救措施，就是从备份文件中恢复，可能只会丢失少量实时的数据，所以一定有备份机制。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. 把系统搞挂&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有些攻击者甚至可以直接把我们的服务搞挂了，在老东家的时候就是这种情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他们可以注入类似这样的语句：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-1;锁表语句;&lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把表长时间锁住后，可能会导致数据库连接耗尽。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时，我们需要对数据库线程做监控，如果某条sql执行时间太长，要邮件预警。此外，合理设置数据库连接的超时时间，也能稍微缓解一下这类问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上面三个方面，能看出sql注入问题的危害真的挺大的，我们一定要避免该类问题的发生，不要存着侥幸的心理。如果遇到一些不按常理出票的攻击者，一旦被攻击了，你可能会损失惨重。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;8. 如何防止sql注入？&lt;/span&gt;&lt;/h1&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 使用预编译机制&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尽量用预编译机制，少用字符串拼接的方式传参，它是sql注入问题的根源。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 要对特殊字符转义&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有些特殊字符，比如：&lt;code&gt;%&lt;/code&gt;作为&lt;code&gt;like&lt;/code&gt;语句中的参数时，要对其进行转义处理。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. 要捕获异常&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要对所有的异常情况进行捕获，切记接口直接返回异常信息，因为有些异常信息中包含了sql信息，包括：库名，表名，字段名等。攻击者拿着这些信息，就能通过sql注入随心所欲的攻击你的数据库了。目前比较主流的做法是，有个专门的网关服务，它统一暴露对外接口。用户请求接口时先经过它，再由它将请求转发给业务服务。这样做的好处是：能统一封装返回数据的返回体，并且如果出现异常，能返回统一的异常信息，隐藏敏感信息。此外还能做限流和权限控制。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. 使用代码检测工具&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用sqlMap等代码检测工具，它能检测sql注入漏洞。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. 要有监控&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要对数据库sql的执行情况进行监控，有异常情况，及时邮件或短信提醒。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6. 数据库账号需控制权限&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对生产环境的数据库建立单独的账号，只分配&lt;code&gt;DML&lt;/code&gt;相关权限，且不能访问系统表。切勿在程序中直接使用管理员账号。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;7. 代码review&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建立代码review机制，能找出部分隐藏的问题，提升代码质量。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;8. 使用其他手段处理&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于不能使用预编译传参时，要么开启&lt;code&gt;druid&lt;/code&gt;的&lt;code&gt;filter&lt;/code&gt;防火墙，要么自己写代码逻辑过滤掉所有可能的注入关键字。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f9cea8442502396fb7017d1ee7c8d92e</guid>
<title>2021 春节书单：110 位 CEO 心中的 NO.1</title>
<link>https://toutiao.io/k/p6kzudl</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;罗伯特·艾格的企业管理理念和为人处事的方式很具有启发和学习的价值。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——&lt;span&gt;陈威，&lt;/span&gt;52TOYS创始人、CEO&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;因为做传媒投资的缘故，我一直对迪士尼很关注，这是一个传统传媒企业运作成功的经典案例。我在阅读这本书时，有三点艾格给我留下了非常深刻的印象。分别是勤奋、真诚和创新。深入了解迪士尼，从阅读该书开始。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——陈杭，中国文化产业基金投资管理公司总裁&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;强烈推荐，借用书单狗的话描述阅读体验：惊心动魄，受益匪浅。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——邵振兴，君联资本董事总经理&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;艾格在这本书记述了迪士尼如何批量打造超级IP的经营哲学，如何率领迪士尼从被收购的边缘成长为一个价值万亿的娱乐帝国。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——王曦梓，壹同制作副总经理&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;艾格最大的武器是能看清和坚守“价值”，选认为最有价值的人、公司、IP，好的文化产品很多早期并不赚钱，但你是否能认定它独一无二的价值？好的文化产品也很慢，做一个战略需要5年、10年甚至更久去实现，坚定这个价值，是更大的考验。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——匿名动画大咖&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>51977d20a7436dc476a0b74127c155e3</guid>
<title>最好的 IDEA debug 长文？看完我佛了</title>
<link>https://toutiao.io/k/c2t9cp9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5032154340836013&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4XC6iatIYuXALlh9qVlnHGYEOqzH5Vkb3qBlIiaz58Er7h7hUSNuqNGQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;622&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你好，我是A哥(YourBatman)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近写了几篇IntelliJ IDEA系列的文章，反响蛮好。我想了下，因为并非是分享什么破解方法、推荐插件、主题这种蛋炒饭式哗众取宠的文章，而是真实对工作有帮助，对提高工作效率很有用的内容。同学们对使用IDEA还是有不少痛点，或者姿势不够正确优雅，一直以来A哥坚持写些不随波逐流、有一定深度专栏文章，哪怕只是个工具IDEA而已。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI0MTUwOTgyOQ==&amp;amp;mid=2247492591&amp;amp;idx=1&amp;amp;sn=86307e0b2c21052db1fb0ba5b2005d60&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;上篇文章&lt;/a&gt; 文末做了说明，本计划IDEA系列告一段落，但有收到几条上百字的留言和私信，觉得有些读者确实很用心在看，所以决定宠粉再干几篇。对于IDEA系列，工具嘛，研究原理没有意义，而是站在使用者的角度，介绍正确姿势和最佳实践，用工具提效是唯一目的。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;当然，也有私信问我我的主题咋设置的挺好看？用了哪些好用的插件？自定义的插件如何开发？之类的，我认为这种确实没必要单独分享喽，因为用谷歌百度一下就可以找到一推拉，各行大佬写的文章多了去了&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本篇介绍IDEA调试debug，因为它确实很重要。&lt;strong&gt;会不会debug，有没有debug的意识，懂不懂 debug 的技巧，是有没有入门编程的重要标志。&lt;/strong&gt; 关于IDEA debug调试的文章我在CSDN里早已发表过，反响还不错（看来有痛点的人不少呀）：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2702702702702703&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV48aDW0uv33iaiaZUiaMYDd5ib7OLFfrLHRK9RNAtJHNvPlvUwYkmLPZxiaFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;185&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天我就把它“搬过来”，并做“增强”改动分享出来，希望你喜欢。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;本文提纲&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.2589605734767024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4y4BgQHOI5TSGMYPmOQv33skT692D4TSlQEYBIHiaib9lSMdwkcSavibwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1116&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;版本约定&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小插曲：IDEA刚发布了其2020.3.2这个小版本，启动图换成了&lt;strong&gt;20周年&lt;/strong&gt;图，&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI0MTUwOTgyOQ==&amp;amp;mid=2247492482&amp;amp;idx=1&amp;amp;sn=79fbb525cf5fd5212010a880035ed0d8&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;IntelliJ IDEA 20周岁啦，为期2天的周年庆活动对开发者免费开放&lt;/a&gt;，感受一下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4vEGKiaqHbNuXyaTCffwYxmIjry2FAKMBqTEibibvSxBEsfw1ia7W7nVXIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;正文&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Debug调试对IT从业者不是个陌生概念，工作中经常会用到它，这无关乎于初级、中级、高级程序员。调试程序的方式有多种，如：输出日志、增加辅助变量、拆分函数体、断点调试等等，本文将介绍的是&lt;strong&gt;断点调试&lt;/strong&gt; -- 一种最行之有效的调试方法。准确的讲，本文讲述是使用IntelliJ IDEA断点调试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Debug用来追踪代码的运行流程，通常在程序运行过程中出现异常时，启用Debug模式可以分析定位异常发生的位置，以及在运行过程中参数的变化。除此之外，我们也可以使用Debug模式来跟踪代码的运行流程来学习优秀的开源框架。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;断点调试有多重要？&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;俗话说&lt;strong&gt;编码5分钟，debug2小时&lt;/strong&gt;，从这句话就能体现出调试的重要性，毕竟它占据你“大部分”的时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了真实的体现出它的重要性，我“引经据典”，找来了几个资深行业经验的大佬用引用他们的话来表述：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;调试技巧比编码技巧&lt;strong&gt;更为重要&lt;/strong&gt;，因为花费在调试上的时间往往比编码还多，学到的东西比编码中学到的更丰富&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;调试技能重要性甚⾄&lt;strong&gt;超过&lt;/strong&gt;学习⼀门语⾔&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不会调试的程序员，&lt;strong&gt;肯定&lt;/strong&gt;编制不出任何好的软件&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我把关键词都加粗划重点了，其重要性可见一斑。大佬尚且这么认为，何况是我等？所以，本文好好阅读O(∩_∩)O哈哈~&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;什么是断点？&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;突然被这么一问，是不是脑袋懵懵的？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4Ul2ywZALQcfLqpUwbI0vkYcaz953YUMy688YREmMUXOBlY9y2MBgpg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;690&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个天天都在用的“东西”，若是真要你对它下个定义说给别人听，估计一时半会还解释不清。当然喽，大道至简，领会其要义能熟练使用才是硬道理。本文作为一篇“严肃”的技术文章，自然需要先把断点这个概念用文字描述出来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;断点&lt;/strong&gt;：为了调试而&lt;strong&gt;故意&lt;/strong&gt;让程序暂停的地方。它是一种附加在&lt;strong&gt;源代码上面&lt;/strong&gt;的特殊&lt;strong&gt;标记&lt;/strong&gt;，在debug模式下可以触发&lt;strong&gt;特定动作&lt;/strong&gt;，如暂停执行、打印线程堆栈、计算表达式的值、变量跟踪等等。断点的设置和取消全人为手动管理，若不手动处理（删除）将会和项目一直存在。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;如果你看过前两篇文章，一定能解释为何它会一直存在项目里。建议你前往参阅，&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI0MTUwOTgyOQ==&amp;amp;mid=2247492529&amp;amp;idx=1&amp;amp;sn=a1e16e835c234b0b9da256805d20adfe&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;电梯直达&lt;/a&gt;&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可见，断点的核心要义是暂停程序，从而在暂停那时刻就可以看到上线文的变量情况、IO情况、线程情况等信息，进而更深入的了解程序，及时发现问题和追踪到错误的根源。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;断点参数&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;断点并不是孤立存在的，它也可以有参数，从而定制出不同的断点行为，让其能在不同条件下生效，这个参数就叫&lt;strong&gt;断点参数&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们平时用得比较多的&lt;strong&gt;条件断点&lt;/strong&gt;，它就是断点参数的最典型应用。当然除了条件断点，其它的断点类型也是可以定制化参数的。那到底有哪些断点类型可以使用和定制呢？那么接下来就步入到本文主体内容，开始进入更有意思的部分啦。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;断点的基本使用&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应该没人不会打断点吧，即使你是产品经理（产品经理莫名躺枪，手动狗头~）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;打断点最简单最直接的方式就是在你想设置断点的哪一行代码的&lt;strong&gt;最左边窗栏&lt;/strong&gt;鼠标左键单击一下，完成后能看到一个小红点，就表示断点设置成功啦，再点击一下就取消。形如这样：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4EX5DyDickibVWv3KBUzBb7X7GY1zZohmHyr3dZ8Hpa3FeBOMjZuH4mfA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为我的IDEA界面简洁，尽可能的去掉了“按钮”，所以平时我自己是使用到大量的快捷键来操作IDEA，打断点也是如此经常用快捷键去完成。当然喽，很多时候也用鼠标的啦，毕竟鼠标处理还是有其很大优势的。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;说明：我的快捷键是Ctrl + Shift + B，仅供给你参考&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;管理断点&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;管理断点包括新增、删除断点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于少量断点来讲，鼠标一个个的点击给它删除掉是可以的。但若打了“大量”的断点在代码里（比如看xxx源码的时候），这时让去一个个找来删除是不太现实的，毕竟你可能自己都忘了哪儿有断点。这个时候一个管理页面/窗口就显得格外的重要了，在IDEA中提供了这样的窗口，你有多种方式打开它：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;菜单栏方式：Run -&amp;gt; view breakpoints，缺点是路径太长太麻烦&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Actions方式：双击shift调出Actions窗口，输入view breakpoints即可打开&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;任意断点处鼠标右键：选择more即可打开管理窗口。缺点是：你至少得找到一个断点作为抓手（当然喽你可以任意处随意打一个点进去也成）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;调试窗口：该打开方式下面会提到&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;快捷键方式&lt;/strong&gt;：毫无疑问，这是我最为推荐的方式喽&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4c4uoU1XQwANwAKwleVJVqugSw7QmnpoomZpLPZ5dmKunJibpcq5UJdg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个管理页面，你可以对断点进行&lt;strong&gt;增删改&lt;/strong&gt;。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;说明：我的快捷键是Ctrl + Shift + F8，仅供给你参考&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;如何debug模式运行？&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;额，这讲得是不是有点过于简单了点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;启动Debug模式运行的方式有多种，比如工具栏的虫子小图标按钮、程序方法入口左键点击、菜单栏、右键菜单栏等等，下面简单演示下：&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;66&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;&lt;span&gt;G&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;太&lt;/span&gt;&lt;span&gt;大了&lt;/span&gt;&lt;span&gt;放&lt;/span&gt;&lt;span&gt;不&lt;/span&gt;&lt;span&gt;上&lt;/span&gt;&lt;span&gt;来，查阅地址&lt;/span&gt;：https://img-blog.csdnimg.cn/20210128073454666.gif&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;据我了解，很多同学最常用的方式是点击上方工具栏右上角的&lt;strong&gt;虫子图标&lt;/strong&gt;，因为我“没有”这个图标，所以“教程”中就不演示了。A哥平时99%情况下都是使用快捷键方式启动程序，因为我认为那是最迅速和便捷的（当然不一定适合你）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此功能我的快捷键分为两大类&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;运行右上角当前选中的入口类。它有一组快捷键&lt;/section&gt;&lt;/li&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Ctrl + Shift + Alt + enter：Run运行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Ctrl + Shift + Alt + \：Debug运行&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;section&gt;因为很多时候需要从&lt;strong&gt;新的入口&lt;/strong&gt;启动程序，做Spring Boot工程开发可能体会不到（入口只有一个），但在做教程、Demo的时候程序入口是经常变化的，所以不可能每次都还人肉去改启动类，效率太低。为此我就新设置了这组快捷键&lt;/section&gt;&lt;/li&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Ctrl + Shift + Alt + [：Run运行，&lt;strong&gt;鼠标焦点所在&lt;/strong&gt;作为入口&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Ctrl + Shift + Alt + ]：Debug运行，&lt;strong&gt;鼠标焦点所在&lt;/strong&gt;入口&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，若要区分本次是Run运行还是Debug运行，除了看右上角小虫子图标外，更好的方式看底部控制台窗口激活的是哪个。这样看的优点是：即使同一份应用启动多次，也能快速看出来哪些debug哪些run。&lt;img data-ratio=&quot;0.6972789115646258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV41jgE5dHaic60bysGsMwtrO8ib0iblKicvhOTJ2ibdQETdfyzcT9SpZuoq4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;294&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9764705882352941&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4ia27jEdZhyyuCmfibRTf7pP3YaPGIu3cTG5tAZCFd6bS76WUh7B4JFlQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;255&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;Debug模式运行&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;值得一提的是：debug模式运行，若没有任何断点被激活（比如你压根就没打断点），效果和run模式启动是一样（但控制台窗口不一样，因此日志输出的位置也就不一样）。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;调试窗口详解&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;调试窗口是我们断点调试的&lt;strong&gt;操作面板&lt;/strong&gt;，熟练的使用此面板推提高效率和掌握更多技巧非常重要。先来认识下它：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6236442516268981&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV439kJJvdngBxUKf78kHgbouGG1fzNMu4hHBhicnU5dG4EnY001kiaziaRg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;922&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此操作面板上按钮不少，对Debug调试有多熟练很大程度上是由操作此面板的熟练度决定的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;调试按钮&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最常用的一排按钮，入门必备。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2734375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4CzMlywOlGjFQASnekcZnAV2k1cMeopdPeUEzMsRhIhbNo8ictFQIFVA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;256&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一共9个按钮，从左往右依次解释下： &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1.&lt;img data-ratio=&quot;1.15&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4A0c2ZEchSicCksVgCm8CADlVxM3xczL5QSicbDsvG95lMJIxgCz2DywA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;20&quot;/&gt;Show Execution Point：回到当前激活的断点处。效果：若你鼠标现在在别的页面/别的类上面，点击它快速“归位” &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2.&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV48G8NhLZ52vT7rZVLvibIlwczMQfscBUgMJvtb7jxw31pbdvGib0EMmHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;20&quot;/&gt; Step Over步过：也叫单步调试，一行一行往下走，若这一行是方法也不会进入里面去。这个应该是平时使用得最多的按钮了，没有之一。所以，建议记住你的快捷键来提高效率哈 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3.&lt;img data-ratio=&quot;1.05&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4mQRzI02XT99clJ0aMhfN7WPjFdHcBoQxmMKicUibuDXiapsKralty4eXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;20&quot;/&gt;Step Into步入：进入方法体内部。这里的方法指的你自定义的方法or三方库的方法，不会进入到JDK官方的方法里（如上面的System.out.println()这种它是不会进去的） &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4.&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4urxkSichZFLticGDa7gRDFibFbAdQp5FLeIdqReyvub63nVTLNXv15uxg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;21&quot;/&gt;Force Step Into强制步入：能进入任何方法，包括JDK的。一般查看底层源码才会用到它 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5.&lt;img data-ratio=&quot;1.0476190476190477&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4HE3AgLcBvcDb2AUrprpYRa1t3ELqDPbgPDTHgfKhF45SrNOOP1dE7g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;21&quot;/&gt;Step Out步出：它是搭配(Force) Step Into一起使用的，当通过step into进入到方法体内部想出来时，一般有两种方案：单步调试慢慢出来，另一个就是step out（推荐） &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;6.&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4T17ngUpOl4tEtKqprHEuic9uaEubKwE5w2VBzpKUT9cUDMiagsolzVFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;22&quot;/&gt;Drop frame：回到当前方法的&lt;strong&gt;调用处&lt;/strong&gt;，同时上下文内所有的变量的值也回到那个时候。该按钮能够点击的前提条件是：当前所处的方法有上级方法，如果你是main方法里，那么按钮就是灰色喽 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;7.&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4H4gmnjYmalQCCWje5jibg2u2xbEFG5BSwnxhlqdwMmMdg5bPx4jLDow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;22&quot;/&gt;Run to Cursor运行到光标处：你想要代码在哪里停一下，就把光标放在哪就成。这个功能实在太好用了，大大缓解了密密麻麻的断点，强烈推荐 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;8.&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4xhxRrico2aECl6LheFTzjL9XUG2K38RenHhhMa2PGQf8WfvF30Hw7WQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;22&quot;/&gt;&lt;/p&gt;&lt;p&gt;Evaluate Expression表达式计算器：看图标就是个计算器嘛，所以你可以在这里执行&lt;strong&gt;任何&lt;/strong&gt;合法的表达式&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.49795918367346936&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4VmWsARsYWXtyFo847CDhgabkZDloaCArwzHJgLGoFluJb6micU2ToBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;490&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;9&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9565217391304348&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4nMc7U04rDH7TSNcmnfdteqe00kjgSJ0UHlC8X9daznZKFAVnaflNXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;23&quot;/&gt;Trace Current Stream Chain跟踪当前Stream流：只有代码停在Stream流语句上，此图标才点亮可以被点击。这是IDEA提供的由于调试Stream流的杀手锏级别的功能，放在文下详细解释&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一排按钮非常重要，甚至是最重要，一定要熟练掌握，可以大大提高调试代码的效率，亲测有效。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;服务按钮&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把最左边一竖排定义为服务按钮，为调试过程提供服务。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;5.90566037735849&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV48iahQibQVGY61dK2QzTFVs8uLiaCj8lPUhLOTYKYNOh6gjw1gnmdjYpFA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;53&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一共10个，但都比较简单和好理解。同样的从上到下过一遍：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Rerun xxx：关闭当前程序，重新运行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Modify Run Configuration：顾名思义，修改运行的配置。点击此按钮的效果同点击右上角的框框：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.27044025157232704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4WhdPUic12jCibWibFiadCfC5BicRu9AaVwLRMuI82uZO1czlsYANmThZicfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;318&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;点击会弹出这个配置窗口：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6383495145631068&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4CyqVqhJCtTLKH4MqvnqkBd9ibIic6Wfm6vN6icW4sSiaHxYx3yvDszCH0g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;824&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每份运行期配置都是具名且唯一的，互相隔离。运行配置可修改的项非常多，大概如下：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;说明：我截图的页面可能和你不一样，因为我用的是最新版的IDEA，此页面在2020.3版本做了改版&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.337696335078534&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4y66ic32mdAGPJ64jPl8p2JGs2uedd0iatia0F1BvPRvm5PjJXJYh9Pwrg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;382&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Resume Program：恢复程序。当断点激活时程序“停止”了，点击这个按钮就是恢复的意思。它给到的效果是：&lt;strong&gt;跳到下一个断点&lt;/strong&gt;（用这句话解释貌似更容易理解些），若后面没有断点就直接运行结束了。这个按钮&lt;strong&gt;非常常用&lt;/strong&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Pause Program：暂停程序。嗯，只要你现在“卡”在断点处，那么状态就是Pause的状态。这时候就有疑问了，难道这个按钮一直是灰色不可点状态？有啥用呢？我网络上看了看，几乎&lt;strong&gt;没人&lt;/strong&gt;能够解释它的作用，这里A哥尝试给你解释下，用张图给你整得明明白白，服服帖帖：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4WlslwgHHVpticPokMKnW4KZ0LF5cN1biaDT4m9giaI6wDKKwRV2V5UZhg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;6&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Stop xxx：不解释&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;View Breakpoints：打开断点管理窗口。文上已详细解释了此窗口的用法&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Mute Breakpoints：这个按钮挺有意思的，作用是让所有断点变为灰色，也就是说让它们&lt;strong&gt;失效&lt;/strong&gt;。它是一个批量操作，操作对象是所有断点，而不可针对于某一个。若你现在不想把所有断点删除，但又不想它们阻拦你，那么可用这个按钮实现&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Get Thread Dump：拿到&lt;strong&gt;当前线程&lt;/strong&gt;的dump，可以查看到当前线程的状态。如下图：&lt;img data-ratio=&quot;0.1649269311064718&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4mcuia29dsHF7svejibwP2Bkf4DXC8S7rWwZHsucJRo71iaoRfKmtQrAGQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;479&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.12643678160919541&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV469pmxLJ7qyUGx496XrNSxNqPnqFHG4Mrw2EHRM3YyvYLP045KIv7TA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;609&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;子线程当前状态为Runnable&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Settings：打开设置菜单。属于高级使用，每一项开启后有什么效果，放在文下解释&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5378787878787878&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV496h3Y6To09IOicTVEGmnWVnVSITsicKHqCIAzVuhVmdibOzsAib8CwPGVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;264&quot;/&gt;&lt;/figure&gt;&lt;ol start=&quot;11&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Pin tab：如果你这会调试xxx这个程序很频繁，那么把它“钉”上会更有助于效率提升&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;方法调用栈&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;显示&lt;strong&gt;当前方法&lt;/strong&gt;（位于栈顶）所经过的所有方法。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4sTzlt26UQRHUZWV5u5ARCicpMJB1YFSiafMMCOCIDty6jjAKib3l75RvQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说明：点击右上角的小漏斗图标可以不显示类库的方法，只显示你自己写的方法，方便调试&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;变量区Variables&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在此区域可以查看当前断点上下文范围内的所有变量值（即使不在本类内也可以点过去查看哦），包括static静态的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4ziayiazsb0NfmZDWlgsL7M8Jl8okmBfunoxq7NiaxHyvUib5BDkdERJFBQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;值得注意：此区域里的变量IDEA会自动调用其&lt;code&gt;toString()&lt;/code&gt;方法，因此若你遇到正常运行只输出一句日志，debug输出多句这种case很可能就是这个情况哦。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;Watches变量跟踪&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有的时候变量很多，而只需要&lt;strong&gt;重点关注&lt;/strong&gt;某几个变量，就可以使用Watches。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4pDsv5LsOJicCIbv1QUiauk7cjBWic2Rwf7YDdLSkFGokxgGKCg9aLepCA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了以上这些，还有什么动态改变变量值set Value，跳转到源码处jump to source等都是非常实用的功能，这就留你自己开发和实验哈。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;为何调试窗口没自动打开？&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有同学遇到过这个情况：明明断点激活了（程序暂停了），但是那个“操作面板”并没有出来，怎么破？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;话不多说，检查你的这个配置项是勾选状态即可。这个状态IDEA默认是勾选上的，一般不用操心。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5590659340659341&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4wJTUzf2KC7umYshWXjBkJIt44nS0CY9Eg6yaU0ql52Zxnaqdj8PIXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;728&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;断点调试的奇淫巧技&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，站在使用层面，介绍些非常实用的“奇淫巧技”给你，这些小技巧可拿来就用。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;强制返回(中断debug)&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;场景描述：调试时，当我走到第三步就发现了问题，这个时候并不希望走完后续流程（比如因为前面有bug后续流程会有删除数据操作等等），这个时候怎么处理？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;咔嚓，Stop程序。是的，很长一段时间里我也是这么干的，确实能达到目的。直到我发现了一个更优雅的方法：&lt;strong&gt;Force Return&lt;/strong&gt;，效果为：强制返回方法返回值（自己给个值）来避免后续的流程。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7703703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV40CEKIUvScFaptSibicPG5WPK9IRkQetvr7aTOdjuJMMrSia7YsFNibVhaw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;945&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;条件断点&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;指定断点的激活条件，都能称作条件断点。一般情况下，在行断点下给定一个计算表达式，结果为true就激活断点这是最常用的方式。因为上面已有案例，这里省略&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;多线程调试&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多线程程序的好处固然不用多说，但总所周知它调试起来是比较困难的，比如这段：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// 共放3个&quot;令牌&quot;&lt;/span&gt;&lt;br/&gt;    CyclicBarrier cyclicBarrier = &lt;span&gt;new&lt;/span&gt; CyclicBarrier(&lt;span&gt;3&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 模拟多个线程去抢&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;10&lt;/span&gt;; i++) {&lt;br/&gt;        &lt;span&gt;new&lt;/span&gt; Thread(() -&amp;gt; {&lt;br/&gt;            &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;                String name = Thread.currentThread().getName();&lt;br/&gt;&lt;br/&gt;                System.out.println(name + &lt;span&gt;&quot;，准备抢令牌&quot;&lt;/span&gt;);&lt;br/&gt;                cyclicBarrier.await();&lt;br/&gt;                System.out.println(name + &lt;span&gt;&quot;，已抢到&quot;&lt;/span&gt;);&lt;br/&gt;            } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;            }&lt;br/&gt;        }, &lt;span&gt;&quot;线程&quot;&lt;/span&gt; + i).start();&lt;br/&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个时候如果你想研究&lt;code&gt;await()&lt;/code&gt;方法的实现，需要具备的前提条件是多个线程进入，因此需要hold住&lt;strong&gt;多个线程&lt;/strong&gt;。若只是在await()这一行打个普通的行断点，那结果是这样子的：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.611731843575419&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV43xJ3jHHS1S6qDl1iakP0F6NyiaBJmBh5MBx4NKnp9sW5zFYoX0caNyKg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;358&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所有线程都是Running状态，显示这是不可能的，因为总共只有3个另外，拿完了其它的都得等待才对，所以这个根本就不是&lt;strong&gt;真实的执行场景&lt;/strong&gt;，也就不可能跟踪到await()方法里面去探究其实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了模拟出这种场景进行调试，就对断点阻塞条件设置为这样：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4254807692307692&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4cbiaIPS6UCBu1Lo5MuHgOt9OUJxVPicpCic0IegibsmBmwMUOic2ia1R25kg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;416&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再次运行程序，线程情况如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7366771159874608&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4feksPg8iaQPic8icic9gv8nuNwHuhD78YX44iblLFwXWCS11LQOhWjuANDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;319&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;快速计算表达式&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;都知道调试面板里的Evaluate Expression可以计算表达式/变量的值，但那毕竟还得弹个窗稍显麻烦，其实还有更为方便的方式：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7703703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4Pons198ic4PPG3wVwKsia5w7NGjRcwlVvO8A3EBUN2SibUjX42NKfgwzg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;945&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用鼠标操作，效率指数级提升。这个操作方式是：&lt;strong&gt;鼠标指针选中表达式（IDEA智能自动选中） + 鼠标左键单击&lt;/strong&gt;。当然喽，如果你想执行自定义的不存在于代码中的表达式，那必须调起窗口来操作。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;Stream流调试&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java 8的流行，彻底让流式编程走进我们的视野。使用Stream编程的好处众多，但一直被大家诟病的是难以阅读和&lt;strong&gt;难以调试&lt;/strong&gt;，特别是后者。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了调试它，我们经常需要插入其它断点，并分析流中的每个转换，不可为不麻烦。还好IDEA提供了处理该痛点的“能力”：当调试器在Stream API调用链&lt;strong&gt;之前或之内停止时&lt;/strong&gt;，点击Trace Current Stream Chain这个图标即可以“非常好看”的图形化方式展示出来，一目了然：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7703703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4BYZNoaJ5uEiaWZErXpT5TxKdiaFrv7y96gD23ib4zUiaMIbSg362ibVD4Fg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;945&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;主动抛出异常&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需求场景：你写了一个全局异常组件，现在想测试它生效情况如何，那么时候你就需要主动抛出这种异常，一般的做法是形如这样：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 自己在程序内主动throw一个&lt;/span&gt;&lt;br/&gt;&lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; NullPointerException();&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// 或者构建个表达式&lt;/span&gt;&lt;br/&gt;&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;1&lt;/span&gt;/&lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种做法均有一定的代码侵入性，用后还得删除。其实IDEA还提供了一种更为优雅的解决方案：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7703703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4T63W1P4Z0hOu4ZmZPyib0Gxu3rRbFp8Q0hibh4dhEJ0VZ9YmEGBGzyyg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;945&quot;/&gt;&lt;/figure&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;掌握了IDEA断点调试的基本技能，下面进入到本文深水区：断点类型。难度不高，依旧是使用层面的事，但由于很多同学并不知道，因此是用于你超车的好材料。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;四大断点类型&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于打断点，估计大部分同学都只会左边鼠标单击这种最基础的方式。所以，看到这个小标题估计你得再懵一次吧。what？断点还有种类？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;若你也是只在代码左边鼠标单击打上“小红点”，然后嘎嘎就是干，空中转体720度向后翻腾三周半......一把唆的选手，那么接下来就坐稳喽，准备发车。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.593103448275862&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4gchhk0fjLAaVSichiaTibH9IwDf8KMlR6XNI3v2aicUqLexgTTsezfI70Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;580&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这么个姿势也许能帮你定位50%以上的问题，但还有另外一半的case呢？如for循环调试，Stream流调试，lambda调试、异常调试等这些场景，用那“&lt;strong&gt;一把唆&lt;/strong&gt;”的方式就很难搞定甚至说搞不定了。断点是帮我们&lt;strong&gt;快速定位&lt;/strong&gt;问题的，不同的场景打上合适的断点将能事半功倍。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;殊不知，IDEA给我们开发者提供了非常的断点类型，以应对不同场景下的调试。在对应的场景下使用合适正确的断点类型，能够大大提高调试的效率，从而&lt;strong&gt;别人加班你下班&lt;/strong&gt;，效率就是时间，而时间就是生命。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5985401459854015&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4ibPibnp81kznnyshzicqHpoIZbz276zcl61gzonuayEb4ffP62e14Bggg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;411&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如图，IDEA把断点分为四大类型（截图中只有三类）：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Line breakpoint(行断点)&lt;/strong&gt;：图中红色小圆圈。顾名思义，在指定代码行设置断点&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Field watchpoint(属性断点)&lt;/strong&gt;：图中红色小眼睛。打在类的属性(static or 非static)上的断点，作用是在该属性&lt;strong&gt;读取和写入&lt;/strong&gt;时激活&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Method breakpoint(方法断点)&lt;/strong&gt;：图中红色小菱形。标记在方法签名的那一行，在该方法执行的入口/出口处被激活&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Exception breakpoint(异常断点)&lt;/strong&gt;：红色小闪电。这是一个特殊但很好用的断点，当程序抛出&lt;strong&gt;指定异常&lt;/strong&gt;时会激活异常断点。和其它断点不同，异常断点是项目&lt;strong&gt;全局的&lt;/strong&gt;，它不需要打在具体某一行上&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面就到了“啃硬骨”的时候了，来吧。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;行断点Line breakpoint&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用得最最最广泛的断点类型，平时大部分情况下都使用此种断点。&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;67&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;Gif太大了放不上来，查阅地址：https://img-blog.csdnimg.cn/20210128011543377.gif&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从“教程”中可以看到该断点有很多的设置项，也就是有很多的断点参数可以配置，来了解下。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;断点参数&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为这是第一个介绍断点参数的类型，因此会说得详细些，这样子后面相同功能的参数就不用再赘述了。对照这个截图页：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7683089214380826&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4Zrq7w7iasdZ8cY5Cuo1HcJ8TsWRXlrmy2TT2o9MHtFINg5tCwLXZ2aA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;751&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Enabled&lt;/strong&gt;：不解释。但需注意：若此项不勾选上，小红点并不会消失，而是由实心的变为&lt;strong&gt;空心的&lt;/strong&gt;，当然喽，一般情况下并不会动此项&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Suspend&lt;/strong&gt;：众所周知，断点激活时会阻塞程序的继续运行，从而阻塞当前线程。但是当你发现它是个复选框的时候，有没有被诧异到？并且，并且，并且你还可以根本就不勾选它，有何区别：&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;All&lt;/strong&gt;（默认）：阻塞该程序内所有线程&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;Thread&lt;/strong&gt;：只阻塞&lt;strong&gt;当前断点&lt;/strong&gt;所在线程&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4h8JgkMEpJd9TtYn3vlJevCRE15pSibsoOfFY37mRg7BkI3HVcqrX0Qg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/p&gt;&lt;p&gt;如上图，不勾选Suspend：线程14和线程15正常运行，“畅通无阻”&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;70&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;&lt;span&gt;G&lt;/span&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;太&lt;/span&gt;&lt;span&gt;大了&lt;/span&gt;&lt;span&gt;放&lt;/span&gt;&lt;span&gt;不&lt;/span&gt;&lt;span&gt;上&lt;/span&gt;&lt;span&gt;来，查阅地址&lt;/span&gt;：https://img-blog.csdnimg.cn/20210128062330308.gif&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如上图，勾选Suspend-All：在断点处，&lt;strong&gt;所有线程&lt;/strong&gt;都被阻塞了，统一给我等待。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;若不勾选选中：此断点相关活动（如打日志等）依旧正常进行，只是&lt;strong&gt;不阻塞进程&lt;/strong&gt;了&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;若勾选中：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4feAw7kDo2VOjZyyCWFPDdPrmW4RkIJrpFwcUvM5libfia7E0TT30hprg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;      如上图，勾选Suspend-Thread：method1的线程被阻塞，但是并不影响另外一个线程调用method2。&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;试想一下，既然“勾选Suspend-Thread”影响更小，那为何IDEA默认帮你选择All而不是Thread呢？原因是这样子的：调试的目的就是让程序“慢下来”，最好是静止下来方便分析问题。否则，其它线程如果仍旧继续保持执行的话，可能一会这个请求改掉这个数据一会改掉那个数据，增加了不可控性。不确定的增加从而大大增加调试难度和定位问题的难度，所以索性上个“同步锁”来得省心，因此默认选中Suspend-All是合理为之。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;说明：很多时候我们需要用本机连接测试环境打断点进行远程调试，若在这个case下强烈建议你使用Thread模式，否则你懂的&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Condition&lt;/strong&gt;：断点被激活的条件。你可以在此处书写表达式，只有表达式返回&lt;strong&gt;true&lt;/strong&gt;时此断点才会被激活&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;条件断点严格来讲不属于一种断点类型，属于断点参数决定的，很多类型的断点都可加条件&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4JT1iacoEWiak7R87oT2T7DYCPAnRIHfaoucRHZD2m87ibJFsGxeiaC6DVw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Log&lt;/strong&gt;：它有三个选项，是checkbox哦。也就是说可都选，也可都不选，默认一个都不选&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Breakpoint hit message：断点激活时输出提示日志&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Stack trace：断点激活时输出程序调用栈信息&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Evaluate and log：选择需要输出计算表达式的值。你可选择当前可达的变量，如本例的main函数入参args等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;remove once hit&lt;/strong&gt;：断点激活一次后就立马给移除喽，也就是所谓的临时行断点，下面来介绍下它&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有窗口里最右边的这块条件：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.1421052631578947&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV41lnj3yJz6kHcwq9atSBLlkcUxrVuEJ5yoiawft3gAOQDyiazad6DeSiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;190&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;见名之意，一系列过滤器：过滤实例、过滤类、过滤调用者等等，一般这些们几乎不会使用（至少我目前是还没用过的），所以就一笔带过。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;使用场景&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;行断点一般配合单步调试一起使用，在看框架源码、定位基础问题等使用得特别多，是最需要掌握的一种断点类型，没得商量。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;临时行断点Temporary line breakpoint&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它也属于行断点的一种，只是参数不一样而已。由于它比较特殊，所以单摘出来说道说道。创建普通行断点，然后把&lt;strong&gt;Remove once hit&lt;/strong&gt;复选框勾选上即是一个临时行断点，效果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV44Fmicb8MSEEmqteFON4sxuClBcpvbD4kRnafLqmSGZIepAXv9v1WCVw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种断点类型，实际使用场景其实很少。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;属性断点Field watchpoint&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此类断点是打在属性上的，成员属性和静态属性均可。它不是小红点，而是个红色“小眼睛”。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6970802919708029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4B9MAhxgE8F2ibkmaLzcqAFMAxhSgIiaWhkoZ3ba1BkC8hA3picnX7taYg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1096&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;断点参数&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8062992125984252&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4ZA6McEATPQDOkYxydmpzfbmUcPkgRWaIPVTroT6icjZk9FvWmu7yyUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;635&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如图，此种断点类型&lt;strong&gt;特有&lt;/strong&gt;个watch参数，两个可选值的含义为：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Filed Access：读取此属性时（写入时不管）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Filed madification：写入此属性时（读取时不管）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;使用场景&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当想知道xxx属性的赋值是谁时，由于程序太庞杂没法知道断点打哪儿从哪开始跟踪，这个时候使用属性类型的断点一下子就搞定了，非常的方便。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;方法断点Method breakpoint&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;断点必须打在方法签名的那一行，颜色形状是个红色的小菱形。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7703703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4J8F2iaoOiaQFZVHWLJ1QOgmxgssgF6SEqMzjg7RqHEica6anDjeWkDBibQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;945&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;断点参数&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.24700239808153476&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4oDfVz0j2KNFwgXDBfmeOR22LySo5tl5DRIeexibesSZ3QG2LRGiclkicw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;417&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Watch有三个可选值：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Emulated：仿真。作用：提高调试性能，因此默认情况下使用。官方建议：仅在调试远程代码或在没有行号信息的native方法或&lt;strong&gt;类中&lt;/strong&gt;设置断点时，才建议禁用此选项&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Method entry：进入方法时激活断点&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Method exit：出去方法时激活断点&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;若entry和exit都勾选，那在进入之后和出去之前都会激活断点&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;使用场景&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于此种断点类型，可能你会说没啥卵用。毕竟自己在方法头尾打个行断点就能达到同样效果，没必要单独搞个类型嘛。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实，它的&lt;strong&gt;杀手锏级&lt;/strong&gt;使用场景是把此种类型断点打在&lt;strong&gt;接口方法&lt;/strong&gt;上，这样子不管哪个实现类方法被调用，都会激活断点，是不是特别给力。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;异常断点Exception breakpoint&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比较小众，但并不代表不重要。在我理解它比较小众，可能大多数同学不知道如何打一个异常断点，因为它不是鼠标单击就能轻松搞定。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面介绍了异常断点它是一种&lt;strong&gt;全局断点类型&lt;/strong&gt;，因此并不能在代码处直接单击，而是只能在管理窗口里统一添加：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7703703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4BqL6Se9ATpW7iaQU4avYeKHq7PU24u5mibkqgAWgynEGvZmm83MeVxtg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;945&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和其它断点类型相比，至少有如下不一样：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;创建断点只能通过断点管理窗口创建，而不能通过鼠标点击方式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;创建完成后，代码栏处不会有任何显示（没有红色小图标），直到它被激活时才会出现红色小闪电&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;异常断点作用于全局：本例中任何地方抛出了NullPointException都会激活此断点&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;断点参数&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.336734693877551&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4rVicicbT5rYpNageJAeDLrbCAQolibuhUXJicKPNbENCzhICicOvKyN7YeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;294&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Notification有两个可选值：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Catch excetion：只有当你自己try-catch了这个异常才会激活断点&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Uncatch excetion：只有当你自己不try-catch时才会激活断点&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;默认情况下这两个都会被勾选上，也就是说任何情况下发生此异常，都会激活断点。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;使用场景&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知晓了异常断点的作用和触发条件，使用场景就有啦。比如当你的程序抛出了一个异常，但是一时半会你并不知道是哪行代码引起的，这个时候通过增加异常断点的方式可以实现&lt;strong&gt;迅速的&lt;/strong&gt;问题定位。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;4种断点图标对比&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每种断点类型都有自己对应的图标，且有不同的状态。我从官网趴了一张对比图，总结得特别好，在这里一并分享给你：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7286821705426356&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4NdY0QgmFIZeYsEibIswtIia7IZhmrScIceNibk3myIBZVsGSpewYebVicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;903&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;远程调试（远程Debug）&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在大都是微服务架构方式，每个微服务一般会有N多个上/下游依赖，如此以至于给调试带来了很大困难，毕竟你几乎不可能在本地同时把依赖都启起来用IDEA做调试。所以，远程调试来了，它是调试分布式系统的一个利器。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;远程调试：顾名思义，使用本地IDEA调试远程代码（一般为QA环境，线上环境不可能开启调试端口的）。那么如何开启远程调试呢？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;开启步骤&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开启远程调试只需要两步即可：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;第一步：让远程部署的那个应用支持远程调试，也就是暴露远程调试端口&lt;/strong&gt;。方式方法为在应用启动时加上对应的JVM参数即可，JDK版本不同参数也不一样&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;JDK 9+：-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:${debug_port}&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;JDK 5-8：-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${debug_port}&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;JDK 4：-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${debug_port}&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;JDK 3-：-Xnoagent -Djava.compiler=NONE -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${debug_port}&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;第二步：用IDEA创建一个remote运行配置，填上远程主机的ip + 暴露的调试端口即可&lt;/strong&gt;。操作路径为：&lt;code&gt;Edit Configurations -&amp;gt; Add New Configuration -&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3814919735599622&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4ic0SVu6fJtATbC5Su4iaRwt5TX5iaDkqyRmB0M5H815AUyCtBa7e7FuYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1059&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;万事俱备，点击debug运行，控制台里能看到如下字样就证明你链接成功了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.09647979139504563&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4PfrW7MDatKJ43LwplBujVqB8wFU4I33rmib6hKeKKm0m0z93QBdI1Zg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;767&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;值得注意的是：远程调试时请确保你本地代码和远程代码&lt;strong&gt;一模一样&lt;/strong&gt;，已达到最佳效果。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;传统Tomcat如何开启远程调试？&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;若你是个Spring Boot应用，那么在jar -jar时加上JVM参数即可，那么如果是要使用传统的tomcat方式部署呢？这个时候找到传统tomcat的启动脚本&lt;code&gt;startup.sh&lt;/code&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/bin/sh&lt;/span&gt;&lt;br/&gt;os400=false&lt;br/&gt;&lt;br/&gt;...&lt;br/&gt;&lt;br/&gt;PRGDIR=`dirname &quot;$PRG&quot;`&lt;br/&gt;EXECUTABLE=catalina.sh&lt;br/&gt;&lt;br/&gt;...&lt;br/&gt;&lt;br/&gt;exec &quot;$PRGDIR&quot;/&quot;$EXECUTABLE&quot; start &quot;$@&quot;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了加上咱们的JVM参数，只需要在&lt;code&gt;exec xxx&lt;/code&gt;之前添加一个变量值即可（以JDK8为例）：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;JPDA_OPTS=&lt;span&gt;&#x27;-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=具体的端口号’&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;注意：这个key名称必须是JPDA_OPTS。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有好奇心的你可能不禁就要问了：为何加个JPDA_OPTS参数就行了呢？也没见&lt;code&gt;exec xxx&lt;/code&gt;使用它呀，其实不然，下面简单解释下，不展开。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;exec&lt;/code&gt;执行时引用了变量 $EXECUTABLE，它代表的是就是&lt;code&gt;catalina.sh&lt;/code&gt;这个文件，该文件里面有大量变量判断脚本，当然包括负责对JPDA_OPTS解释：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt;!/bin/sh&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;cygwin=false&lt;br/&gt;darwin=false&lt;br/&gt;...&lt;br/&gt;if [ &quot;$1&quot; = &quot;jpda&quot; ] ; then&lt;br/&gt;  if [ -z &quot;$JPDA_TRANSPORT&quot; ]; then&lt;br/&gt;    JPDA_TRANSPORT=&quot;dt_socket&quot;&lt;br/&gt;  fi&lt;br/&gt;  if [ -z &quot;$JPDA_ADDRESS&quot; ]; then&lt;br/&gt;    JPDA_ADDRESS=&quot;localhost:8000&quot;&lt;br/&gt;  fi&lt;br/&gt;  if [ -z &quot;$JPDA_SUSPEND&quot; ]; then&lt;br/&gt;    JPDA_SUSPEND=&quot;n&quot;&lt;br/&gt;  fi&lt;br/&gt;  if [ -z &quot;$JPDA_OPTS&quot; ]; then&lt;br/&gt;    JPDA_OPTS=&quot;-agentlib:jdwp=transport=$JPDA_TRANSPORT,address=$JPDA_ADDRESS,server=y,suspend=$JPDA_SUSPEND&quot;&lt;br/&gt;  fi&lt;br/&gt;  CATALINA_OPTS=&quot;$JPDA_OPTS $CATALINA_OPTS&quot;&lt;br/&gt;  shift&lt;br/&gt;fi&lt;br/&gt;...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;关于JVM调试平台JPDA更多知识点，可自行用谷歌百度一下学习学习&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;嵌入式Tomcat如何开启远程调试？&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这不就是Spring Boot应用形式麽？所以，如何开启，不用再废话了吧~&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;人和动物的最大区别之一是人会使用工具，且善于使用工具。工具被创造出来，使命就是提效的，毕竟我们不可能用记事本去写Java程序吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;IntelliJ IDEA作为最为流行的JVM平台IDE，我们应该尽可能的去挖掘出它的效用，既然作为集成开发环境，其实很多功能都可以一站式搞定，在一个平台里做很多数据都能打通。比如IDEA的rest接口调试、数据库映射、Shell终端等等，应付平时的开发一般搓搓有余，推荐使用，毕竟软件启得越多电脑越卡不是。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用IDEA和会用IDEA是两个层次，除了代码本身，最常用的开发工具也是值得花番心思的。大道至简，知易行难，知行合一，得到功成！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;本文思考题&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文所属专栏：&lt;strong&gt;IDEA&lt;/strong&gt;，后台回复专栏名即可获取全部内容，已被&lt;span&gt;https://www.yourbatman.cn&lt;/span&gt;收录。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;看完了不一定懂，看懂了不一定会&lt;/strong&gt;。来，文末3个思考题帮你复盘：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;断点能打在类上吗？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;IDEA能设置哪几种类型的断点呢？各有什么场景？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何用IDEA debug调试测试环境的应用？&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9831460674157303&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/crPesQVeyKIDpMNsGuHFOcYFyZZTMibV4iatRVILlA1GPM521kL7POvIvpB8G3iaNgKJBf4e7qclAD8mD6owsZQDA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;178&quot;/&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;System.out.println(&lt;span&gt;&quot;点个赞吧!&quot;&lt;/span&gt;);&lt;br/&gt;print_r(&lt;span&gt;&#x27;关注【BAT的乌托邦】！&#x27;&lt;/span&gt;);&lt;br/&gt;var_dump(&lt;span&gt;&#x27;私聊A哥：fsx1056342982&#x27;&lt;/span&gt;);&lt;br/&gt;console.log(&lt;span&gt;&quot;点个赞吧！&quot;&lt;/span&gt;);&lt;br/&gt;NSLog(@&lt;span&gt;&quot;关注【BAT的乌托邦】！&quot;&lt;/span&gt;);&lt;br/&gt;print(&lt;span&gt;&quot;私聊A哥：fsx1056342982&quot;&lt;/span&gt;);&lt;br/&gt;echo(&lt;span&gt;&quot;点个赞吧！&quot;&lt;/span&gt;);&lt;br/&gt;cout &amp;lt;&amp;lt; &lt;span&gt;&quot;关注【BAT的乌托邦】！&quot;&lt;/span&gt; &amp;lt;&amp;lt; endl;&lt;br/&gt;printf(&lt;span&gt;&quot;私聊A哥：fsx1056342982&quot;&lt;/span&gt;);&lt;br/&gt;Console.WriteLine(&lt;span&gt;&quot;点个赞吧！&quot;&lt;/span&gt;);&lt;br/&gt;fmt.Println(&lt;span&gt;&quot;关注【BAT的乌托邦】！&quot;&lt;/span&gt;);&lt;br/&gt;Response.Write(&lt;span&gt;&quot;私聊A哥：fsx1056342982&quot;&lt;/span&gt;);&lt;br/&gt;alert(&lt;span&gt;&quot;点个赞吧！&quot;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作者简介：A哥(YourBatman)，Spring Framework/Boot开源贡献者，Java架构师，领域专家，DDD驱动设计。&lt;strong&gt;非常注重基本功修养&lt;/strong&gt;，底层基础决定上层建筑，才能焕发程序员更强生命力。擅长结构化拆解专题，抽丝剥茧颇具深度。这些专题也许可能大概是&lt;strong&gt;全网最好或独一份&lt;/strong&gt;哦，欢迎自取。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>369016f49b79ffbf9dc3b03e3a1e1b34</guid>
<title>你引以为傲的经验还奏效吗？</title>
<link>https://toutiao.io/k/xwpfz4c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说说最近发生的一个事吧，前两天去了趟国家森林公园，发现两个有意思的植物，因为之前是没有见过，所以才会出现想不明白的情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先看第一张图，你看完之后不知道你有什么想法？&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.3333333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/EwukgicNDWBtN6rPlZtxPV92rVmJqniacc1G29aAyp5Uksjd8CwR4hGricT4qZ4HuhQiaaqWknQFTZ0eZticSVBGC7w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一反应是这样的树长在水里面，不死才怪（我认为这是一种松树）。不过松树属多数常青，理应有叶子，不过这个光秃秃的也说不过去。很像水棚走近一看，发现真实的名字叫池杉，是生长在水里的一种高大落叶乔木。树干基部膨大，枝条向上形成狭窄的树冠，尖塔形，形状优美。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再看另一个竹子，先上图。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/EwukgicNDWBtN6rPlZtxPV92rVmJqniacceZVaTysTtXLfaOAs93dibm9UVY6onkrJoD427cvVTIYHTMD7hgothLg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-ratio=&quot;1.4887892376681615&quot; data-w=&quot;892&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一感觉是，这竹子估计枯死了，杆都黄了，找到吊牌发现叫黄皮竹。在我以前的认知里，竹子都是绿色的，黄色的就是枯死了。后面转了一圈，我还发现了红色的、紫色的竹子，数了数近30个品种，只能说我对竹子了解的太少。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;特别是黄皮竹，犹如一只黑天鹅，击溃了所有关于竹子的认识。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;社会节奏越来越快，我们过往的经验到底能不能给予未来的发展一些指导意义，真的是有待商榷。你引以为荣经验积累，有时候价值可能并不大。在有些情况下非但不能帮助你加快对一些事物的认识，反而会阻碍你对一些新事物的认识。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“行而不得，反求诸己。”这是一个内求的过程，向自己要结果，希望自己反思总结，升华进阶。但有时候，自我的一些知识储备容量不够大，再要结果，这个结果也不会很亮眼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时候，就需要求外，向外寻求帮助，哪怕是去散步、与人闲谈、酒桌上喝酒吹水等，都有可能打破禁锢，灵光乍现。不管是求内，还是求外，你都必须抱有一种终身学习的成长心态才可以接纳新事物，学习新知识。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本篇只是一个引子，希望能引发你的思考，进而得出一些新的启示。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages __bg_gif&quot; data-ratio=&quot;0.18524332810047095&quot; data-type=&quot;gif&quot; data-w=&quot;637&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/pia7eNKm5ribqUytKORCNqLeBt05FGia804Dvp5iaPybs893QB9yC6sM0KuFeJmoYEhBmicSQkJ5vU6aIpKZhyMOeEA/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;&gt;独乐乐不如众乐乐&lt;/p&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7e41c264c0f39203ed0931567f9af7b2</guid>
<title>如何用 Vue 实现简易的富文本编辑器，并支持 Markdown 语法</title>
<link>https://toutiao.io/k/3v8f2zn</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前端开发经常会用到富文本编辑器，比如CKEditor，动不动一个库几十M的代码量，其中涉及许多你可能用不到的功能特性和相关设置，CKEditor最新版本的代码仓库就有接近2000个JS文件，300,000行代码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可是如果你只需要一个简易版的编辑器，真的值得引入这么一个庞大的库吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天我们从实现一个简易版的编辑器带大家了解一下其背后涉及到的原理。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;开始&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个编辑器将要使用到&lt;code&gt;markdown&lt;/code&gt;：一个简洁语法并且自带样式的语言，而且远比纯HTML的输入输出要安全得多。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，我们需要一些依赖包。 @ts-stack/markdown 和 turndown，&lt;code&gt;@ts-stack/markdown&lt;/code&gt;是用来将markdown语法转化为HTML代码显示用的，而&lt;code&gt;turndown&lt;/code&gt;是将HTML代码转化为markdown语言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，创建一个基础的Vue组件，命名为&lt;code&gt;WysiwygEditor.vue&lt;/code&gt;，在组件中添加一个div元素，并且将它的&lt;code&gt;contenteditable&lt;/code&gt;属性设置为&lt;code&gt;true&lt;/code&gt;，然后添加一些Tailwind样式去美化一下。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;!-- WysiwygEditor.vue --&amp;gt;&lt;br/&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;div&amp;gt;&lt;br/&gt;    &amp;lt;div&lt;br/&gt;      @input=&lt;span&gt;&quot;onInput&quot;&lt;/span&gt;&lt;br/&gt;      v-html=&lt;span&gt;&quot;innerValue&quot;&lt;/span&gt;&lt;br/&gt;      contenteditable=&lt;span&gt;&quot;true&quot;&lt;/span&gt;&lt;br/&gt;      class=&lt;span&gt;&quot;wysiwyg-output outline-none border-2 p-4 rounded-lg border-gray-300 focus:border-green-300&quot;&lt;/span&gt;&lt;br/&gt;    /&amp;gt;&lt;br/&gt;  &amp;lt;/div&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&lt;br/&gt;&amp;lt;script&amp;gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default {&lt;br/&gt;  name: &lt;span&gt;&#x27;WysiwygEditor&#x27;&lt;/span&gt;,&lt;br/&gt;&lt;br/&gt;  props: [&lt;span&gt;&#x27;value&#x27;&lt;/span&gt;],&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;data&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;      innerValue: this.value&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;  methods: {&lt;br/&gt;    onInput(event) {&lt;br/&gt;      this.&lt;span&gt;$emit&lt;/span&gt;(&lt;span&gt;&#x27;input&#x27;&lt;/span&gt;, event.target.innerHTML)&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后使用该组件：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;!-- Some other component --&amp;gt;&lt;br/&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;  &amp;lt;wysiwyg-editor v-model=&lt;span&gt;&quot;someText&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&amp;lt;!-- ... --&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看起来像这样&lt;img data-ratio=&quot;0.1875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIjoPaWrwxk3JHaGN5Ez3TG5pkOia5icKSUuBfUXA3fgBHVqLicAia2atcAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在这个div元素的样式看起来像&lt;code&gt;textarea&lt;/code&gt; 标签的效果了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;让文本变为富文本&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在编辑器的上面会有一些带有bold，italic，underlined，headings，lists等文本的编辑按钮。并且上面会有对应功能的图标。可以通过安装fontawesome icon来实现。然后对按钮进行一些样式设置。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;.button {&lt;br/&gt;  @apply border-2;&lt;br/&gt;  @apply border-gray-300;&lt;br/&gt;  @apply rounded-lg;&lt;br/&gt;  @apply px-3 py-1;&lt;br/&gt;  @apply mb-3 mr-3;&lt;br/&gt;}&lt;br/&gt;.button:hover {&lt;br/&gt;  @apply border-green-300;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先将这些按钮添加鼠标点击后的监听方法，后面我们会去实现每一个方法里的具体执行。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;!-- WysiwygEditor.vue --&amp;gt;&lt;br/&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;    &amp;lt;div class=&lt;span&gt;&quot;flex flex-wrap&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyBold&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;bold&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyItalic&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;italic&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyHeading&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;heading&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyUl&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;list-ul&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyOl&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;list-ol&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;undo&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;undo&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;redo&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;redo&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;    &amp;lt;/div&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&amp;lt;!-- ... --&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编辑器现在看起来是这样了&lt;img data-ratio=&quot;0.16136363636363638&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIiakEZ2cEh9mkjDMsBhPeVapoAPOuDFzqlYYfEz41rQO2ZqLhVJzATmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在看起来是不是越来越接近了。还缺少按钮动作的执行方法。这里要用到&lt;code&gt;document.execCommand&lt;/code&gt;，虽然MDN已经宣称将废弃该特性，但是大部分浏览器仍然支持。我们暂且还是使用它。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们通过它来实现applyBold方法&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;methods: {&lt;br/&gt;  // ...&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;applyBold&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;bold&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;  // ...&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;非常简洁明了，同样，我们来实现其它方法&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// ...&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;applyItalic&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;italic&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;applyHeading&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;formatBlock&#x27;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;&#x27;&amp;lt;h1&amp;gt;&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;applyUl&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;insertUnorderedList&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;applyOl&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;insertOrderedList&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;undo&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;undo&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;redo&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;redo&#x27;&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  // ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里唯一需要说明的是&lt;code&gt;applyHeading&lt;/code&gt;，因为我明确需要在此处指定所需的元素。使用这些命令后，可以预先对输出的元素标签进行一些样式设置&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;.wysiwyg-output h1 {&lt;br/&gt;  @apply text-2xl;&lt;br/&gt;  @apply font-bold;&lt;br/&gt;  @apply pb-4;&lt;br/&gt;}&lt;br/&gt;.wysiwyg-output p {&lt;br/&gt;  @apply pb-4;&lt;br/&gt;}&lt;br/&gt;.wysiwyg-output p {&lt;br/&gt;  @apply pb-4;&lt;br/&gt;}&lt;br/&gt;.wysiwyg-output ul {&lt;br/&gt;  @apply ml-6;&lt;br/&gt;  @apply list-disc;&lt;br/&gt;}&lt;br/&gt;.wysiwyg-output ol {&lt;br/&gt;  @apply ml-6;&lt;br/&gt;  @apply list-decimal;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了一定样式后，在输入框中输入一些内容&lt;img data-ratio=&quot;0.45&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIJfjVbtqpHnsQfKOuMnicKCNGevlZvGda9TAgNOIU8MhJsc9D2KBricQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了使得更美观一点，把空行用空的段落标签代替，以回车结束的内容归为一个段落&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; // ...&lt;br/&gt;  &lt;span&gt;&lt;span&gt;data&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;      innerValue: this.value || &lt;span&gt;&#x27;&amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&#x27;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;mounted&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;defaultParagraphSeparator&#x27;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;&#x27;p&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  // ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;添加markdown支持&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我想直接在编辑器里写markdown语法，暂时还不支持&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# Hello, world!&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;**Lorem ipsum dolor** _sit amet_&lt;br/&gt;&lt;br/&gt;* Some&lt;br/&gt;* Unordered&lt;br/&gt;* List&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;1. Some&lt;br/&gt;1. Ordered&lt;br/&gt;1. List&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果看起来是这样&lt;img data-ratio=&quot;0.13636363636363635&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIeafVMRbwEIOiawrWSpbNNG0NiaDHQ08OpKeb9UBGg9ESiceia3WoG1U7IA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;完全没有任何样式。别忘了，前面我们安装了&lt;code&gt;@ts-stack/markdown&lt;/code&gt;库，现在可以使用了&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;import { Marked } from &lt;span&gt;&#x27;@ts-stack/markdown&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default {&lt;br/&gt;  name: &lt;span&gt;&#x27;WysiwygEditor&#x27;&lt;/span&gt;,&lt;br/&gt;&lt;br/&gt;  props: [&lt;span&gt;&#x27;value&#x27;&lt;/span&gt;],&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;data&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;      innerValue: Marked.parse(this.value) || &lt;span&gt;&#x27;&amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&#x27;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;// ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们把输入的内容markdown语法转化为HTML代码之后，看起就正常了&lt;img data-ratio=&quot;0.3659090909090909&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIu6jGAiaVmKajBrrSQTYMhsIuiaXiaksUYoPq89t622zDcib2N9icnWh2noQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时还需要在组件传出本文编辑器数据的时候，进行转化，这里要用到前面安装的&lt;code&gt;turndown&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;import TurndownService from &lt;span&gt;&#x27;turndown&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default {&lt;br/&gt;&lt;br/&gt;// ...&lt;br/&gt;&lt;br/&gt;  methods: {&lt;br/&gt;    onInput(event) {&lt;br/&gt;      const turndown = new TurndownService({&lt;br/&gt;        emDelimiter: &lt;span&gt;&#x27;_&#x27;&lt;/span&gt;,&lt;br/&gt;        linkStyle: &lt;span&gt;&#x27;inlined&#x27;&lt;/span&gt;,&lt;br/&gt;        headingStyle: &lt;span&gt;&#x27;atx&#x27;&lt;/span&gt;&lt;br/&gt;      })&lt;br/&gt;&lt;br/&gt;      this.&lt;span&gt;$emit&lt;/span&gt;(&lt;span&gt;&#x27;input&#x27;&lt;/span&gt;, turndown.turndown(event.target.innerHTML))&lt;br/&gt;    },&lt;br/&gt;// ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们把编辑器中输入的markdown语法文本在页面中通过模板输出后的效果&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;!-- Some other component --&amp;gt;&lt;br/&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;  &amp;lt;wysiwyg-editor v-model=&lt;span&gt;&quot;someText&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;&lt;br/&gt;  &amp;lt;pre class=&lt;span&gt;&quot;p-4 bg-gray-300 mt-12&quot;&lt;/span&gt;&amp;gt;{{ someText }}&amp;lt;/pre&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同步输入输出，内容是一致的，没有任何问题&lt;img data-ratio=&quot;0.9488636363636364&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIUv6ghLdTMtSgcdNI4a2ekcQSqcYEBviaupB4yG4cAo3gamJPx2AX2wg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;img data-ratio=&quot;0.6816666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIEuc9u5pdKINxVZia4vEqupbtbdICMSvMf0wwjDRniarqmQ0Bs8bfkjicA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看起来一切正常，达到了我们想要的效果。下面是全部的代码&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;div&amp;gt;&lt;br/&gt;    &amp;lt;div class=&lt;span&gt;&quot;flex flex-wrap&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyBold&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;bold&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyItalic&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;italic&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyHeading&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;heading&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyUl&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;list-ul&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyOl&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;list-ol&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;undo&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;undo&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;redo&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;redo&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;    &amp;lt;/div&amp;gt;&lt;br/&gt;&lt;br/&gt;    &amp;lt;div&lt;br/&gt;      @input=&lt;span&gt;&quot;onInput&quot;&lt;/span&gt;&lt;br/&gt;      v-html=&lt;span&gt;&quot;innerValue&quot;&lt;/span&gt;&lt;br/&gt;      contenteditable=&lt;span&gt;&quot;true&quot;&lt;/span&gt;&lt;br/&gt;      class=&lt;span&gt;&quot;wysiwyg-output outline-none border-2 p-4 rounded-lg border-gray-300 focus:border-green-300&quot;&lt;/span&gt;&lt;br/&gt;    /&amp;gt;&lt;br/&gt;  &amp;lt;/div&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&lt;br/&gt;&amp;lt;script&amp;gt;&lt;br/&gt;import { Marked } from &lt;span&gt;&#x27;@ts-stack/markdown&#x27;&lt;/span&gt;&lt;br/&gt;import TurndownService from &lt;span&gt;&#x27;turndown&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default {&lt;br/&gt;  name: &lt;span&gt;&#x27;WysiwygEditor&#x27;&lt;/span&gt;,&lt;br/&gt;&lt;br/&gt;  props: [&lt;span&gt;&#x27;value&#x27;&lt;/span&gt;],&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;data&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;      innerValue: Marked.parse(this.value) || &lt;span&gt;&#x27;&amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&#x27;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;mounted&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;defaultParagraphSeparator&#x27;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;&#x27;p&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;  methods: {&lt;br/&gt;    onInput(event) {&lt;br/&gt;      const turndown = new TurndownService({&lt;br/&gt;        emDelimiter: &lt;span&gt;&#x27;_&#x27;&lt;/span&gt;,&lt;br/&gt;        linkStyle: &lt;span&gt;&#x27;inlined&#x27;&lt;/span&gt;,&lt;br/&gt;        headingStyle: &lt;span&gt;&#x27;atx&#x27;&lt;/span&gt;&lt;br/&gt;      })&lt;br/&gt;      this.&lt;span&gt;$emit&lt;/span&gt;(&lt;span&gt;&#x27;input&#x27;&lt;/span&gt;, turndown.turndown(event.target.innerHTML))&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;applyBold&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;bold&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;applyItalic&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;italic&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;applyHeading&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;formatBlock&#x27;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;&#x27;&amp;lt;h1&amp;gt;&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;applyUl&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;insertUnorderedList&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;applyOl&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;insertOrderedList&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;undo&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;undo&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;redo&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;redo&#x27;&lt;/span&gt;)&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;结论&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只需要87行代码便实现了一个简易的富文本编辑器。虽然功能还是太简单，但是最起码我们知道了实现一个富文本编辑器后面的原理。后面需要增加功能就不是什么难事了。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>