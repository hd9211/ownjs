<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>c8b059f5f26433adcc75d813abff2fbb</guid>
<title>基于 Gmail 的 CRM 浏览器插件，年收入 1000 万美金</title>
<link>https://toutiao.io/k/vczjfdp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; role=&quot;option&quot; title=&quot;链接&quot; class=&quot;article-tag__list single-tag__wrp js_single&quot; data-len=&quot;1&quot;&gt;
                                            
                                                                                    &lt;span class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MjM5OTM3NzAwNg==&amp;amp;action=getalbum&amp;amp;album_id=1857680644290478080#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;1857680644290478080&quot; data-tag_source=&quot;4&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;&lt;span aria-hidden=&quot;true&quot;&gt;#&lt;/span&gt;独立开发变现周刊&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span class=&quot;article-tag-card__right&quot;&gt;&lt;span class=&quot;weui-hidden_abs&quot;&gt;,&lt;/span&gt;19个&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;&lt;span&gt;分享独立开发产品变现相关有价值的内容，每周五发布。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目录&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;1、Listnr：简单的Podcast Sass工具，1年从0做到了$15万&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;2、快写鸭：一键多平台分发新媒体工具&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;3、Corey Haines: 关于Saas产品增长我所总结的经验&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;4、YICHI: 帮助学习汉语发音的App&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;5、Streak: 基于Gmail的CRM浏览器插件，年收入1000万美金&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;1、Listnr：简单的Podcast Sass工具，1年从0做到了$15万&lt;/h2&gt;&lt;p&gt;创始人Anan Batra想做一个Podcast，但是没找到市场上合适的工具。于是就萌生了自己做一个的想法。这个产品解决：录制，编辑、存放、分发和变现的功能。&lt;/p&gt;&lt;p&gt;但是中间遇到了不少的障碍，首先是开发的问题，最后找到了3个实习生一起做这个产品。2020年5月份开发，到8月中旬开发出了原型产品。放到了Pitchground平台上准备发布，用户付费可以终身使用。但是一上线，出现了很多意向不到的问题，后台挂掉、页面打不开等，当时就有点蒙了，从来没遇到过这种情况。得到了很多的一星评价。我们花了几个通宵的时间来解决Bug问题。&lt;/p&gt;&lt;p&gt;最早的V1版本是这样子的：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.595&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/G4umk62oPLoiaS7VU80CzQWnByvlx67rRh9mCC4MAzk5JATaODmGsHcKRXgAu5VTbqpFeiakcmEQzK2ApZpmR8hg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;现在V2版本已经是这样了：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5566666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/G4umk62oPLoiaS7VU80CzQWnByvlx67rRWML5IkibC3sYKwfmAKLiabKV3YE8qK5ULf6fyxgwL7Y1wctbLXtibjvoQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;因为在发布过程中所面临的困难，我们决定暂时停止Lifetime协议，并致力于进一步完善产品! 在一次又一次地完善产品并发性后，我们获得了足够的反馈，确保产品运行良好。&lt;/p&gt;&lt;p&gt;发布的头4个月对Listnr来说是非常痛苦的，因为产品还没有准备好公开测试，我们应该等几个月再发布。为了获得尽可能多的反馈，我们在不同的平台上发行了Lifetime Deal，并且没有投入任何营销费用，最终获得了6000名用户和15万美元的收益。&lt;/p&gt;&lt;p&gt;Listnr的从0到15万美金&lt;sup&gt;[1]&lt;/sup&gt;&lt;/p&gt;&lt;h2&gt;2、快写鸭：一键多平台分发新媒体工具&lt;/h2&gt;&lt;p&gt;写文章的同学通常需要在多个媒体渠道发布文章，诸如掘金、SegmentFault、CSDN 、知乎、简书、微信公众号等。但是，发布文章到这么多平台费时费力，需要不断地复制粘贴和修改排版，快写鸭就是解决这样的用户痛点。只需要一处编写，一键分发。有Mac版和Window版本的应用。&lt;/p&gt;&lt;p&gt;实现的技术原理，就是通过 Electron 和 Puppeteer 的通信，编写「自动化脚本」来进行一键发布。目前已经有一些网站平台的脚本代码。可以拿来直接使用。&lt;/p&gt;&lt;p&gt;Puppeteer是一个无头Chrome浏览器，可以实现对网页的加载、爬取、Dom操作等&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.685&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/G4umk62oPLoiaS7VU80CzQWnByvlx67rRmkDbIS50YF3iagyndUHoXPHtic2pekn00ia21NNicuFgINN1myUhiaUr2Og/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;脚本预览：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.685&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/G4umk62oPLoiaS7VU80CzQWnByvlx67rRvoTocr6ljwZRCPl9gBJjNXsQQ14VprBPEIWr2fAt8nMKbZovtdlgOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;快写鸭官网&lt;sup&gt;[2]&lt;/sup&gt;&lt;/p&gt;&lt;h2&gt;3、Corey Haines: 关于Saas产品增长我所总结的经验&lt;/h2&gt;&lt;p&gt;以下是我所学到的方法。增长是一个相互依赖的系统，由你的: • 市场 • 产品 • 模型 • 传递 &amp;amp; 定位 • 渠道&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5233333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/G4umk62oPLoiaS7VU80CzQWnByvlx67rRkUSnrsQLJ7micVhyuIib7H4d6OFTUwavPJ9mdfWTXNaEYMIyKl6RvAgg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;你的增长策略可以归纳为五个问题: • 谁是你的客户? • 你能帮助他们实现什么目标? • 你如何吸引他们，盈利并留住他们? • 为什么你是最好的解决方案? • 你在哪里可以找到他们并与他们交流?&lt;/p&gt;&lt;p&gt;Corey Haines的经验分享&lt;sup&gt;[3]&lt;/sup&gt;&lt;/p&gt;&lt;h2&gt;4、YICHI: 帮助学习汉语发音的App&lt;/h2&gt;&lt;p&gt;YICHI是一个帮助学习汉语发音的App。创造者是Song YiYi，在给来自不同国家的数千名学习者教授普通话之后，发现很多学生一直在为普通话单词/短语的发音而挣扎，即使是通过HSK 4-5级(汉语水平考试)的高级学习者，在发音(声母、韵母、声调)和在对话中识别和理解声调方面也很吃力。为了解决这个问题，开发了YICHI。这个App解决的问题很明确就是发音问题，可以将学习者的普通话发音分解为声母、韵母和声调(以及它们的流利程度)，并立即给出准确的分数。它能够帮助学习者更好地理解他们的语音，并在需要改进的地方进行准确的练习。&lt;/p&gt;&lt;p&gt;随着中国在国际上的影响力增加，越来越多的人开始学习汉语，我们的眼光也应该更宽广些。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.4683333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/G4umk62oPLoiaS7VU80CzQWnByvlx67rR804Re6TqjDYuEVljahqWnGO2aUb6LYicwGTaKsos2leO2xhnqSWib0NQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;YICHI官网&lt;sup&gt;[4]&lt;/sup&gt;&lt;/p&gt;&lt;h2&gt;5、Streak: 基于Gmail的CRM浏览器插件，年收入1000万美金&lt;/h2&gt;&lt;p&gt;Streak是一个对Gmail邮件进行CRM管理的软件工具，主要是使用Chrome的浏览器扩展对现有的邮件内容进行管理、分类、收集等。将邮件联系人、内容进行更加系统化的跟踪管理。国外习惯用邮件的方式进行沟通，所以用户的使用量很大。创始人Aleem Mawani说最早拿了VC的种子轮融资，后来因为一直在赚钱，所以也没有继续进行融资，目前已经达到了年收入$10M。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.8233333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/G4umk62oPLoiaS7VU80CzQWnByvlx67rRia38yZoV44gf8ia6nsADYD4vkGsrvsjiagbPib5mxibakh5TCPOyTFbDAhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;从0到1000美元只用了两天。但不是你想的那样。&lt;/p&gt;&lt;p&gt;我们最初推出的是一款完全免费的产品。我们的理由是，客户关系管理是一个众所周知的类别，人们习惯于花大价钱购买(比如Salesforce)。我们并不想开始致力于收费。&lt;/p&gt;&lt;p&gt;所以我们在前3年都是免费的，只是专注于创造最好的产品和获得“用户”。我们之所以能做到这一点，只是因为我们的消耗非常低(只雇佣了1-2人)。最终，随着银行余额的减少，我们决定引入付费计划，并开始向免费用户收费，在头几周便获得了3万美元的MRR。从那以后，我们的收入一直在增长。&lt;/p&gt;&lt;p&gt;我还会做同样的事吗?这很难说。可能不会。是的，我们的用户习惯了为CRM软件付费，所以不存在盈利风险，但回想起来，如果我们早点开始收费，我们会做出更好的产品。我们在建造一些有点野外的东西时有点分心，有些成功了，有些没有。&lt;/p&gt;&lt;p&gt;最重要的是，我认为如果我们早点有收入，我们就会更积极地招聘员工。招聘是一个企业最困难的部分，我们应该更加积极。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.7666666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/G4umk62oPLoiaS7VU80CzQWnByvlx67rRER0Y63iakh9AYr48FDhwiaGnCVTFDvGaT4Npeq7TeOrC89LNY8TbQcHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们的第一批用户只是我们网络中的其他创始人。因为我们正在开发自己需要的产品，所以我们也认识很多像我们这样的人(大部分来自YC)。&lt;/p&gt;&lt;p&gt;在那之后，我们很幸运地找到了一个未被充分利用的分销渠道——Chrome网络商店。那时候，类似我们的扩展数量并不多。从而获取了巨大的流量。&lt;/p&gt;&lt;p&gt;后来主要是通过口耳相传——人们告诉别人他们使用的好产品。我们所做的一件独特的事情是提供电子邮件跟踪和邮件合并等自动化工具，这些工具可以独立于我们的CRM而免费使用。我们的想法是将其作为付费CRM产品的先导。目前，我们10%的收入来自那些在转向CRM之前几个月免费使用我们的电子邮件跟踪工具的用户。&lt;/p&gt;&lt;p&gt;Streak创始人的分享&lt;sup&gt;[5]&lt;/sup&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;Listnr的从0到15万美金: https://listnrco.medium.com/how-we-scaled-our-saas-from-0-to-6000-users-and-150k-in-revenue-in-1-year-837208b98d63&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;快写鸭官网: https://kuaixieya.com/&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Corey Haines的经验分享: https://twitter.com/coreyhainesco/status/1432417854394142725&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;YICHI官网: https://yichi.app/&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Streak创始人的分享: https://www.indiehackers.com/post/i-founded-a-10m-arr-saas-and-made-40m-in-sales-over-10-years-de4909bb7c&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5OTM3NzAwNg==&amp;amp;mid=2649283177&amp;amp;idx=1&amp;amp;sn=97d1bd8459151c2eb85852cb5ea08192&amp;amp;chksm=bf201b688857927eb0d461413103f6ff439e5595a2d725a596396c234f45372f6d16e4e5a0b2&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;（第 18 期）：一个通过短信进行购物的网站平台&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5OTM3NzAwNg==&amp;amp;mid=2649283162&amp;amp;idx=1&amp;amp;sn=6f64968ad9a8e8c778f7084506cb3d07&amp;amp;chksm=bf201b5b8857924d7e098293b99a97e4f760cbebb3490d5086fc4e0d0552920342eec173512e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;（第 17 期）：为了活下去，如何获取前200个付费用户？&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5OTM3NzAwNg==&amp;amp;mid=2649282837&amp;amp;idx=1&amp;amp;sn=1d69c18ca63644d37503f76d1b1f5837&amp;amp;chksm=bf201814885791022a0b034063e4e4b0bc534fafa63702b00befea34a787d8b2810105aea76d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;课程上线：Chrome扩展插件开发 - 构建自己的效率工具和盈利产品&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.52&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/G4umk62oPLreAJeFqhwhr5x2CVZkgNaIjhHdL2SZTB8x8677GL0gtaYrNM0Qia7ibAeBwheB9q01RURlChwR4GibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;加入知识星球，和我一起做自己产品的独立变现&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f3854a65574023806a8ea5a23e62da47</guid>
<title>前端进阶之 JS 运行原理和机制详解</title>
<link>https://toutiao.io/k/pzrhjf5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;之前我们一直说要介绍下前端的知识点，一直没空总结，这不来了；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;js运行机制，来一篇总结&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;一、js的基础知识点介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;js作为浏览器脚本语言，它的主要用途是与用户互动，以及操作DOM，因此js是单线程，也避免了同时操作同一个DOM的矛盾问题；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;为了利用多核CPU的计算能力，H5的Web Worker实现的“多线程”实际上指的是“多子线程”，完全受控于主线程，且不允许操作DOM；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;js引擎存在monitoring process进程，会持续不断的检查主线程执行栈是否为空，一旦为空，就会去Event Queue那里检查是否有等待被调用的函数。这个过程是循环不断的，所以整个的这种运行机制又称为Event Loop（事件循环）；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果在微任务执行期间微任务队列加入了新的微任务，会将新的微任务加入队列尾部，之后也会被执行；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;二、相关概念&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、JS为什么是单线程的？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;JavaScript语言的一大特点就是单线程，也就是说，同一个时间只能做一件事。那么，为什么JavaScript不能有多个线程呢？这样能提高效率啊。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;JavaScript的单线程，与它的用途有关。作为浏览器脚本语言，JavaScript的主要用途是与用户互动，以及操作DOM。这决定了它只能是单线程，否则会带来很复杂的同步问题。比如，假定JavaScript同时有两个线程，一个线程在某个DOM节点上添加内容，另一个线程删除了这个节点，这时浏览器应该以哪个线程为准？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;所以，为了避免复杂性，从一诞生，JavaScript就是单线程，这已经成了这门语言的核心特征，将来也不会改变；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;为了利用多核CPU的计算能力，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。所以，这个新标准并没有改变JavaScript单线程的本质；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、JS为什么需要异步?&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果JS中不存在异步，只能自上而下执行，如果上一行解析时间很长，那么下面的代码就会被阻塞。对于用户而言，阻塞就意味着&quot;卡死&quot;，这样就导致了很差的用户体验；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3、JS单线程又是如何实现异步的呢？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;既然JS是单线程的，只能在一条线程上执行，又是如何实现的异步呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;是通过的事件循环(event loop)，理解了event loop机制，就理解了JS的执行机制。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4、任务队列&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&quot;任务队列&quot;是一个事件的队列（也可以理解成消息的队列），IO设备完成一项任务，就在&quot;任务队列&quot;中添加一个事件，表示相关的异步任务可以进入&quot;执行栈&quot;了。主线程读取&quot;任务队列&quot;，就是读取里面有哪些事件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&quot;任务队列&quot;中的事件，除了IO设备的事件以外，还包括一些用户产生的事件（比如鼠标点击、页面滚动等等）。只要指定过回调函数，这些事件发生时就会进入&quot;任务队列&quot;，等待主线程读取。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;所谓&quot;回调函数&quot;（callback），就是那些会被主线程挂起来的代码。异步任务必须指定回调函数，当主线程开始执行异步任务，就是执行对应的回调函数；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&quot;任务队列&quot;是一个先进先出的数据结构，排在前面的事件，优先被主线程读取。主线程的读取过程基本上是自动的，只要执行栈一清空，&quot;任务队列&quot;上第一位的事件就自动进入主线程。但是，由于存在后文提到的&quot;定时器&quot;功能，主线程首先要检查一下执行时间，某些事件只有到了规定的时间，才能返回主线程。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;读取到一个异步任务，首先是将异步任务放进事件表格（Event table）中，当放进事件表格中的异步任务完成某种事情或者说达成某些条件（如setTimeout事件到了，鼠标点击了，数据文件获取到了）之后，才将这些异步任务推入事件队列（Event Queue)中，这时候的异步任务才是执行栈中空闲的时候才能读取到的异步任务；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;5、Event Loop&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;6、setTimeout(fn,0)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;setTimeout(fn,0)的含义是，指定某个任务在主线程最早可得的空闲时间执行，也就是说，尽可能早得执行。它在&quot;任务队列&quot;的尾部添加一个事件，因此要等到同步任务和&quot;任务队列&quot;现有的事件都处理完，才会得到执行。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;HTML5标准规定了setTimeout()的第二个参数的最小值（最短间隔），不得低于4毫秒，如果低于这个值，就会自动增加。在此之前，老版本的浏览器都将最短间隔设为10毫秒。另外，对于那些DOM的变动（尤其是涉及页面重新渲染的部分），通常不会立即执行，而是每16毫秒执行一次。这时使用requestAnimationFrame()的效果要好于setTimeout()。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;需要注意的是，setTimeout()只是将事件插入了&quot;任务队列&quot;，必须等到当前代码（执行栈）执行完，主线程才会去执行它指定的回调函数。要是当前代码耗时很长，有可能要等很久，所以并没有办法保证，回调函数一定会在setTimeout()指定的时间执行&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;三、js执行机制介绍&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、javascript的同步和异步&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果排队是因为计算量大，CPU忙不过来，倒也算了，但是很多时候CPU是闲着的，因为IO设备（输入输出设备）很慢（比如Ajax操作从网络读取数据），不得不等着结果出来，再往下执行。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;JavaScript语言的设计者意识到，这时主线程完全可以不管IO设备，挂起处于等待中的任务，先运行排在后面的任务。等到IO设备返回了结果，再回过头，把挂起的任务继续执行下去。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;于是，所有任务可以分成两种，一种是同步任务（synchronous），另一种是异步任务（asynchronous）。同步任务指的是，在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务；异步任务指的是，不进入主线程、而进入&quot;任务队列&quot;（task queue）的任务，只有&quot;任务队列&quot;通知主线程，某个异步任务可以执行了，该任务才会进入主线程执行。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.8580060422960725&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kyDL16ViavhEKEXqcCIIj39VmyTKnkN91jMXib9hFlEicqp8EmOj30EAQcJbzMOPBEicLvxPwCovjibztakyextb5LQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;662&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;同步和异步任务分别进入不同的执行&quot;场所&quot;，同步的进入主线程，异步的进入Event Table并注册函数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当Event Table中指定的事情完成时，会将这个函数移入Event Queue。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;主线程内的任务执行完毕为空，会去Event Queue读取对应的函数，进入主线程执行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上述过程会不断重复，也就是常说的Event Loop(事件循环)。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们不禁要问了，那怎么知道主线程执行栈为空啊？js引擎存在monitoring process进程，会持续不断的检查主线程执行栈是否为空，一旦为空，就会去Event Queue那里检查是否有等待被调用的函数；&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2、JavaScript的宏任务与微任务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你是否觉得同步异步的执行机制流程就是JavaScript执行机制的全部？不是的，JavaScript除了广义上的的同步任务何异步任务，其对任务还有更精细的定义：&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;list&quot;/&gt;&lt;p&gt;&lt;span&gt;不同类型的任务会进入对应的Event Queue。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;事件循环的顺序，决定js代码的执行顺序。进入整体代码(宏任务)后，开始第一次循环。接着执行所有的微任务。然后再次从宏任务开始，找到其中一个任务队列执行完毕，再执行所有的微任务&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.8588957055214724&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kyDL16ViavhEKEXqcCIIj39VmyTKnkN919zxzFQtg3uFHX7yTbGWftML1jsd26GOmxFcKwLFYP3X4oTdjQDicFEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;652&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3、实例来说明JavaScript的执行机制&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt; 3.1、同步&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.2、同步和异步&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;setTimeout(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;},&lt;span class=&quot;code-snippet__number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.3、异步任务进一步分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;setTimeout(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;},&lt;span class=&quot;code-snippet__number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;setTimeout(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;},&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.4、宏任务和微任务&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;setTimeout(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;},&lt;span class=&quot;code-snippet__number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    resolve();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;).then(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.5、是否彻底理解JavaScript执行机制实例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;1&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;setTimeout(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;2&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    process.nextTick(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;3&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    })&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;4&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        resolve();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }).then(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;5&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    })&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;process.nextTick(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;6&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;7&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    resolve();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}).then(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;8&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;setTimeout(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;9&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    process.nextTick(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;10&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    })&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;resolve&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;11&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        resolve();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }).then(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;12&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    })&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;javascript是一门单线程语言；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Event Loop是javascript的执行机制；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;客户端也是要学习前端语言的，以后我们会讲解一些前端的知识点&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e1ed46329a7ee9d0f4d7b30d27f54f18</guid>
<title>中国移动基于 Kubernetes 的物联网边缘计算应用实践</title>
<link>https://toutiao.io/k/q3k517i</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;作者：何毓川，中移物联网，云计算开发高级工程师&lt;/p&gt;&lt;p&gt;本文是作者根据在 CIC 大会 KubeSphere Meetup 上的分享内容整理而成。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6667620137299771&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/u5Pibv7AcsEVojYwibtV9S0CaxQD52tMdcicLHBwQ76nXv3ibE9SPY9sf5w2DagSl0yTb7cqrfFF1kPfS7lHRc043Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;3496&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;mp-miniprogram data-miniprogram-appid=&quot;wx7564fd5313d24844&quot; data-miniprogram-path=&quot;pages/video/video?__preload_=16312565583901&amp;amp;__key_=16312565583902&amp;amp;avid=504628879&quot; data-miniprogram-nickname=&quot;哔哩哔哩&quot; data-miniprogram-avatar=&quot;http://mmbiz.qpic.cn/mmbiz_png/9gYq0FHZpd0YyuQ2ZWFlMiat21cmISmjSnWJiaz3xS5HzoeXRGQndzm1VgwmiaZHuE1ibaBTzUGMjiaYWpYWU3bBtRw/640?wx_fmt=png&amp;amp;wxfrom=200&quot; data-miniprogram-title=&quot;中国移动基于 K8s 的物联网边缘计算应用实践&quot; data-miniprogram-imageurl=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/u5Pibv7AcsEVojYwibtV9S0CaxQD52tMdc3ibqibYK0CcKOaP8jjZqRJF4Zgngib0B3PN1OZnjSoJtDvOf7u8uPlvZA/0?wx_fmt=jpeg&quot; data-miniprogram-type=&quot;card&quot; data-miniprogram-servicetype=&quot;0&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;EdgeBox 简介&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;中移物联网是中国移动集团在物联网方向的专业研发子公司，在各个垂直行业都有非常丰富和完成的解决方案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文通过中移物联网的物联网边缘计算解决方案：OneCyber 5G 边缘网关，简称 OneCyber EdgeBox (下文统称为 EdgeBox)，介绍中国移动在基于 Kubernetes 的物联网边缘计算应用实践。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先对边缘计算做一个简要的介绍，边缘计算是一种在数据源头侧提供运算、存储、网络等的 IT 能力，用以降低数字化转型的成本、提高资源利用率、增强业务的灵活性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图展示了边缘计算的总览和分类。图中上半部分称为轻边缘，也叫远边缘，因为边缘计算的算力距离用户和现场比较近，经常作为物联网的网关设备呈现在用户面前。而图中下半部分称为重边缘，也叫近边缘，也就是我们通常所说的 MEC，MEC 的运算、存储、网络等 IT 能力都比轻边缘强的多，在 MEC 部署的业务的应用就在边缘端处理用户请求和流量，不能处理的才继续上行到中心 DC 或云端。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5707376058041113&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/u5Pibv7AcsEVojYwibtV9S0CaxQD52tMdcZIicjPjiao1J4rmEN1ia4ZCQjVTWMLUcW86CcB9cVhIRHqevrSbpD7bdw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;827&quot;/&gt;&lt;figcaption&gt;边缘计算总览&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文介绍的 EdgeBox 就是远边缘的典型应用，以智能边缘硬件的形式部署在用户现场，和云端的边缘计算管理平台进行云边协同，将云端的应用和能力延伸到边缘侧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;EdgeBox 作为中国移动旗下的远边缘计算整体解决方案，提供以下的核心能力：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;智能边缘硬件(支持 5G)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;边缘基础设施管理&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;边缘容器应用管理&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;云边协同能力&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;边缘应用商城&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;IoT 设备多协议接入服务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据集成/数据分析服务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;丰富的行业 AI 算法&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图展示了 EdgeBox 解决方案的构成，包括智能边缘硬件和物联网边缘计算平台。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5567129629629629&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/u5Pibv7AcsEVojYwibtV9S0CaxQD52tMdcKIXDjfcvKGdjR6rrMsVk0x7rAG45myZVX5GUybbm1OKrptUNnOqdhQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;864&quot;/&gt;&lt;figcaption&gt;EdgeBox 整体构成&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;智能边缘硬件在边缘侧提供设备接入，边缘应用等能力，并通过云边协同能力和云端的物联网边缘计算平台进行交互。物联网边缘计算平台在云端提供应用商城，边缘管理等能力，并通过标准接口和第三方平台进行对接。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;智能边缘硬件主要分为 EdgeBox-A 系列和 EdgeBox-V 系列。EdgeBox-A 系列定位为通用边缘 APP 一体机，基于通用 CPU 和标准操作系统，侧重于承载边云一体化应用。而 EdgeBox-V 系列则定位为 AI 机器视觉一体机，通过配置神经网络 ASIC，侧重边缘侧的视频和图像分析。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;物联网边缘计算平台&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前文简要介绍了 EdgeBox 解决方案的构成，主要包括边缘端的智能边缘硬件和云端的物联网边缘计算平台。从本章节开始，将详细介绍物联网边缘计算平台的构成，能力，和技术架构等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下图展示了 EdgeBox 解决方案中物联网边缘计算平台的组件构成。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7747395833333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/u5Pibv7AcsEVojYwibtV9S0CaxQD52tMdcZTqEQqRZOAezs1IeVxpibj7H8Ss45yfL5TRZGTeaHusdbpbt7qUO3ibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;768&quot;/&gt;&lt;figcaption&gt;物联网边缘计算平台&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图中，物联网边缘计算平台主要由蓝色部分的边缘计算基础设施能力和红色部分的由应用带来的扩展能力构成。边缘计算基础设施能力的部分称之为边缘计算平台，而由应用带来的扩展能力的部分称之为应用使能平台。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;边缘计算平台主要提供以下能力：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;边缘基础设施管理&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;边缘容器应用管理&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;云边协同能力&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;边缘应用商城&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;丰富的行业 AI 算法&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用使能平台则主要提供以下能力：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;边缘计算平台和应用使能平台，共同构成了 EdgeBox 解决方案中云端的物联网边缘计算平台。下面就分别对这两个平台进行详细的说明。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;边缘计算平台&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;边缘计算平台在 EdgeBox 整体解决方案中作为边缘计算的底座，提供边缘基础设施和应用的基础管理能力。有了边缘计算平台，才可以通过应用等方式扩展整个解决方案的能力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;边缘计算平台主要提供以下六大类基础能力：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;边缘节点管理：统一管理边缘计算硬件，提供认证、监控、配置下发等功能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;云边协同能力：所有边缘硬件资源纳入统一资源池进行协同管理；为边缘应用提供云边数据通道和云边管理通道，让业务在云和边之间无缝协同。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;容器镜像管理：镜像仓库可以在用户维度进行容器镜像管理。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;边缘应用管理：统一管理边缘应用，提供应用部署、配置下发、应用监控、远程调试。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;边缘应用市场：统一收纳客户边缘业务应用，方便维护应用版本、部署模板。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;云端集群管理：统一管理云端多 K8s 集群，提供统一视图并有效扩展业务规模。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了提供上述的六大类边缘计算的基础能力，边缘计算平台的架构需要相应的组件和模块进行支撑。边缘计算平台的技术架构如下图所示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5259975816203144&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/u5Pibv7AcsEVojYwibtV9S0CaxQD52tMdcB2ULiarfa2x4p08yMy81SznZKYfT7WNkib8O4xZU9v0D6pkib33IPbPmQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;827&quot;/&gt;&lt;figcaption&gt;边缘计算平台架构&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图中，主要的组件和模块的作用解释如下。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;北向 API 层：边缘计算的资源建模，包括边缘节点，边缘应用等，同时负责向用户和第三方平台提供北向 REST API，以及持久化和缓存处理。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;多集群容器云平台：向北向 API 层提供节点，容器，和多集群的管理能力，南向管理 EdgeBox 的云端代理和承载云端代理的 K8s 集群。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;EdgeBox 云端代理：云边协同的云端代理服务，部署在云端 K8s 集群中，提供边缘节点接入和向边缘端的资源同步等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;EdgeBox 边缘管理：云边协同的边缘代理服务，安装在智能边缘硬件上，提供边缘应用的运行环境和向云端的资源同步等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;应用市场：管理镜像和边缘应用。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据以上的架构设计，EdgeBox 的边缘计算平台在部分组件上需要集成开源软件来避免重复造轮子。其中多集群容器云平台和 EdgeBox 的云端以及边缘代理是选型的重点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终边缘计算平台的选型结果如下图所示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6444981862152358&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/u5Pibv7AcsEVojYwibtV9S0CaxQD52tMdcUuH8rYFYWlghF297kKphFic4sMqLjnnXvfmnN8kqj4KWzibInQ73ySoQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;827&quot;/&gt;&lt;figcaption&gt;边缘计算平台选型&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;多集群容器云平台的选型最终敲定为 KubeSphere，理由是 KubeSphere 有如下的优势和能力：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;无缝集成 KubeEdge&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;边缘资源监控/运维&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;北向 API 完备丰富&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;开源社区比较活跃&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用户多商用案例多&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;EdgeBox 云端代理和边缘代理的选型最终敲定为 KubeEdge，理由是 KubeEdge 拥有如下的优势和能力：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于 KubeSphere 和 KubeEdge 的既有能力，EdgeBox 解决方案也自研和增强了一部分特性，当前包括如下六大类：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;节点管理：包括边缘节点纳管增强认证，边缘节点的属主信息，边缘节点的预置应用下发，边缘节点的数字连接关联等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;节点组：包括节点加入/退出节点组，应用在节点组内自动调度，节点故障时应用重调度，亲和/反亲和调度规则指定。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;应用市场：包括适用于边缘场景的应用市场，应用审核，应用上下架，合作伙伴开发丰富行业应用，用户购买第三方提供应用。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;云边消息：包括云边用户消息和数据通道，云边 REST 和 MQTT 双向通道，云边 REST 和 REST 双向通道。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;云边文件传输：基于云边消息的文件传输服务。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;公有云运维监控：引入 IPAM 的 IP 冲突解决，提供用户边缘容器运维/监控。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;综本章节所述，边缘计算平台通过基于 KubeSphere 和 KubeEdge 的开源框架，及规划的自研特性和能力，为 EdgeBox 解决方案提供了边缘计算的基础设施管理和云边协同能力，为物联网应用和平台提供了基础和底座。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;应用使能平台&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上一章节介绍了物联网边缘计算平台中的边缘计算平台，包括边缘计算平台的能力，架构，选型以及自研能力等。本章节将简要介绍物联网边缘计算平台中的应用使能平台。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用使能平台基于边缘计算平台，通过物联网或其他垂直行业的边缘应用，以及相应的云端平台或服务，向用户提供完整的具有云边协同能力的行业解决方案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本章节着重介绍应用使能平台的两种套件，数字连接套件和数据集成套件。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;数字连接套件&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数字连接套件提供物联网设备接入、多协议解析、协议转换、命令下发等一站式连接能力。支持电信级可靠、海量接入、跨机房部署。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数字连接套件的技术架构如下图所示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7864583333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/u5Pibv7AcsEVojYwibtV9S0CaxQD52tMdcV5lBokkA3R9xj5XXr6G55mqXRscKcEHgnWaDEWCr0riaQ8ZrNeDatsQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;768&quot;/&gt;&lt;figcaption&gt;数字连接套件&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数字连接套件的适用场景，包括但不限于公有协议设备直连接入，私有协议设备接入，设备管理通用能力等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;套件的能力包括：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;支持各种协议设备接入，如 MQTT、LWM2M 和其他私有协议。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;提供完整的设备生命周期管理功能，支持设备创建、功能定义、数据解析、在线调试等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持产品物模型，对产品添加属性、事件和服务。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;数据集成套件&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据集成套件作为适配中间件，用于异构平台之间的数据对接，提供多种数据源采集能力和数据目的推送能力，以及数据缓存、抽取、变形等处理能力，打通个各业务孤岛，实现数据互联互通，助力企业数字化转型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据集成套件的技术架构如下图所示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6556442417331813&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/u5Pibv7AcsEVojYwibtV9S0CaxQD52tMdcPsGHEagG6jAM8kZQ9MLuL0SAm5p5PDXbjQBuqprBA8TQic7uzc3q9gw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;877&quot;/&gt;&lt;figcaption&gt;数据集成套件&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据集成套件的适用场景，包括但不限于异构系统之间需要数据同步，场景联动，事件触发动作，以及作为规则引擎对采集的数据进行条件过滤等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;套件的能力包括：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;支持多种异构数据源间的同步，如 HTTP、Kafka、MQS、数字连接设备属性、状态等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持按时间（定时、周期、实时）、同步方式（主动调用、被动监听）等任务触发规则来调度任务。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持数据路由、数据转换等丰富的数据处理控件和内置函数。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;后记&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文介绍了中国移动在物联网边缘计算赛道上的应用实践，也就是 5G 边缘网关 EdgeBox 解决方案。EdgeBox 基于 KubeSphere 和 KubeEdge，再加以规划和自研的强大特性和能力，给物联网边缘计算领域带来了开箱即用的整体解决方案。未来，得益于 EdgeBox 开放和易扩展的技术架构，必定能够赋能各行各业，为 5G 新基建和数字化转型添砖加瓦。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d798664ef0b14724985bbc57ddb38298</guid>
<title>Quine 自产生程序之 Java</title>
<link>https://toutiao.io/k/1up00n2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;code&gt;Quine&lt;/code&gt; 以哲学家&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://en.wikipedia.org/wiki/Willard_Van_Orman_Quine&quot;&gt;奎恩（Willard Van Orman Quine）&lt;/a&gt;命名，指的是输出结果为程序自身源码的程序，也称为 &lt;code&gt;自产生程序&lt;/code&gt;。有点类似于代码中的不动点，举一个例子&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;figcaption&gt;&lt;span&gt;quine.py&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;exec(s:=&lt;span class=&quot;string&quot;&gt;&#x27;print(&quot;exec(s:=%r)&quot;%s)&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;那么以下命令全部输出 &lt;code&gt;exec(s:=&#x27;print(&quot;exec(s:=%r)&quot;%s)&#x27;)&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python quine.py&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;python -c $(python quine.py)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;python -c $(python -c $(python quine.py))&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;理论上图灵完备的语言都可以构造出 &lt;code&gt;Quine&lt;/code&gt;，那么如何在 Java 中构造呢？&lt;/p&gt;
&lt;a id=&quot;more&quot;/&gt;

&lt;h2 id=&quot;维基百科的例子&quot;&gt;&lt;a href=&quot;#维基百科的例子&quot; class=&quot;headerlink&quot; title=&quot;维基百科的例子&quot;/&gt;维基百科的例子&lt;/h2&gt;&lt;p&gt;下面的例子来自维基百科 &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://en.wikipedia.org/wiki/Quine_(computing)&quot;&gt;https://en.wikipedia.org/wiki/Quine_(computing)&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Quine&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;/&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;  &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; q = &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;;      &lt;span class=&quot;comment&quot;&gt;// Quotation mark character&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    String[] l = {    &lt;span class=&quot;comment&quot;&gt;// Array of source code&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;public class Quine&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;{&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;  public static void main(String[] args)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;  {&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    char q = 34;      // Quotation mark character&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    String[] l = {    // Array of source code&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    &quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    };&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 0; i &amp;lt; 6; i++)           // Print opening code&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        System.out.println(l[i]);&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 0; i &amp;lt; l.length; i++)    // Print string array&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        System.out.println(l[6] + q + l[i] + q + &#x27;,&#x27;);&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 7; i &amp;lt; l.length; i++)    // Print this code&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        System.out.println(l[i]);&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;  }&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;}&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;; i++)           &lt;span class=&quot;comment&quot;&gt;// Print opening code&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(l[i]);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; l.length; i++)    &lt;span class=&quot;comment&quot;&gt;// Print string array&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(l[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;] + q + l[i] + q + &lt;span class=&quot;string&quot;&gt;&#x27;,&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;; i &amp;lt; l.length; i++)    &lt;span class=&quot;comment&quot;&gt;// Print this code&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(l[i]);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;大概的原理是（是一个通用的模式）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在代码中预留一个字符串数组，每个元素代表一行代码&lt;/li&gt;
&lt;li&gt;先输出代码到数组之前 &lt;code&gt;String[] l = {&lt;/code&gt; 的行&lt;/li&gt;
&lt;li&gt;再输出数组（需要处理缩进）&lt;/li&gt;
&lt;li&gt;再输出剩下的行&lt;/li&gt;
&lt;li&gt;最后把这个代码粘贴到数组中&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;还有一个 Java 15 及以上（&lt;code&gt;text blocks&lt;/code&gt;）的例子&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Quine&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;String textBlockQuotes = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[]{&lt;span class=&quot;string&quot;&gt;&#x27;&quot;&#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#x27;&quot;&#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#x27;&quot;&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; newLine = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;String source = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;public class Quine {&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;public static void main(String[] args) {&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;String textBlockQuotes = new String(new char[]{&#x27;&quot;&#x27;, &#x27;&quot;&#x27;, &#x27;&quot;&#x27;});&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;char newLine = 10;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;String source = %s;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;System.out.print(source.formatted(textBlockQuotes + newLine + source + textBlockQuotes));&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;System.out.print(source.formatted(textBlockQuotes + newLine + source + textBlockQuotes));&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;转义字符&quot;&gt;&lt;a href=&quot;#转义字符&quot; class=&quot;headerlink&quot; title=&quot;转义字符&quot;/&gt;转义字符&lt;/h2&gt;&lt;p&gt;上面的例子是通过 %s 替换自身代码来完成的，之前的 Java 版本中需要对换行和双引号进行转义。按照这个思路可以替换成如下实现（通过 char 跳过转义）&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Quine&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; quote = &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[] replace = {&lt;span class=&quot;number&quot;&gt;92&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#x27;n&#x27;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#x27;+&#x27;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;};&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        String source = &lt;span class=&quot;string&quot;&gt;&quot;public class Quine {\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            + &lt;span class=&quot;string&quot;&gt;&quot;    public static void main(String[] args) {\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            + &lt;span class=&quot;string&quot;&gt;&quot;        char quote = 34;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            + &lt;span class=&quot;string&quot;&gt;&quot;        char[] replace = {92,&#x27;n&#x27;,34,10,32,32,32,32,32,32,32,32,32,32,32,32,&#x27;+&#x27;,32,34};\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            + &lt;span class=&quot;string&quot;&gt;&quot;        String source = %s;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            + &lt;span class=&quot;string&quot;&gt;&quot;        String self = source.replace(String.valueOf((char)10), new String(replace));\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            + &lt;span class=&quot;string&quot;&gt;&quot;        System.out.print(String.format(source, quote + self + quote));\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            + &lt;span class=&quot;string&quot;&gt;&quot;    }\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            + &lt;span class=&quot;string&quot;&gt;&quot;}&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        String self = source.replace(String.valueOf((&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;)&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(replace));&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.print(String.format(source, quote + self + quote));&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;代码会有点麻烦（为了保留格式），上面 replace 代码相当于&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;source.replace(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;\\n\&quot;\n            + \&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果不考虑格式和换行的话（只能写在一行了）&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Q&lt;/span&gt;&lt;/span&gt;{&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[]a)&lt;/span&gt;&lt;/span&gt;{String s=&lt;span class=&quot;string&quot;&gt;&quot;class Q{public static void main(String[]a){String s=%c%s%1$c;System.out.printf(s,34,s);}}&quot;&lt;/span&gt;;System.out.printf(s,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,s);}}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里还有更多的例子 &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;http://www.nyx.net/~gthompso/self_java.txt&quot;&gt;http://www.nyx.net/~gthompso/self_java.txt&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;还有一种更加通用的方案，通过编码的方式绕过转义字符的影响，参考 &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://www.zhihu.com/question/22006572/answer/47923822&quot;&gt;https://www.zhihu.com/question/22006572/answer/47923822&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;先写一个通用的代码&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Quine&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        String s = &lt;span class=&quot;string&quot;&gt;&quot;__&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 通过 URLDecoder&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(java.net.URLDecoder.decode(s).replaceFirst(&lt;span class=&quot;string&quot;&gt;&quot;__&quot;&lt;/span&gt;, s));&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后把上面的代码通过 &lt;code&gt;URLEncoder&lt;/code&gt; 编码，然后替换引号里面&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Quine&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        String s = &lt;span class=&quot;string&quot;&gt;&quot;public+class+Quine+%7B%0A++++public+static+void+main%28String%5B%5D+args%29+%7B%0A++++++++String+s+%3D+%22__%22%3B%0A++++++++%2F%2F+%E9%80%9A%E8%BF%87+URLDecoder%0A++++++++System.out.println%28java.net.URLDecoder.decode%28s%29.replaceFirst%28%22__%22%2C+s%29%29%3B%0A++++%7D%0A%7D&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 通过 URLDecoder&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(java.net.URLDecoder.decode(s).replaceFirst(&lt;span class=&quot;string&quot;&gt;&quot;__&quot;&lt;/span&gt;, s));&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;同理&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Quine&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        String s = &lt;span class=&quot;string&quot;&gt;&quot;cHVibGljIGNsYXNzIFF1aW5lIHsKICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHsKICAgICAgICBTdHJpbmcgcyA9ICJfXyI7CiAgICAgICAgLy8g6YCa6L+HIEJhc2U2NAogICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihuZXcgU3RyaW5nKGphdmEudXRpbC5CYXNlNjQuZ2V0RGVjb2RlcigpLmRlY29kZShzKSkucmVwbGFjZUZpcnN0KCJfXyIsIHMpKTsKICAgIH0KfQ==&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 通过 Base64&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(java.util.Base64.getDecoder().decode(s)).replaceFirst(&lt;span class=&quot;string&quot;&gt;&quot;__&quot;&lt;/span&gt;, s));&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Ouroboros-programs&quot;&gt;&lt;a href=&quot;#Ouroboros-programs&quot; class=&quot;headerlink&quot; title=&quot;Ouroboros programs&quot;/&gt;Ouroboros programs&lt;/h2&gt;
&lt;div class=&quot;ouroboros&quot;&gt;
&lt;div&gt;

&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Quine&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;/&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;  &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; q = &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    String[] l = {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    &quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;=============&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; C++ Code &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;=============&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;#include &amp;lt;iostream&amp;gt;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;#include &amp;lt;string&amp;gt;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;using namespace std;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;int main(int argc, char* argv[])&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;{&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    char q = 34;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    string l[] = {&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    };&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 20; i &amp;lt;= 25; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        cout &amp;lt;&amp;lt; l[i] &amp;lt;&amp;lt; endl;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 0; i &amp;lt;= 34; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        cout &amp;lt;&amp;lt; l[0] + q + l[i] + q + &#x27;,&#x27; &amp;lt;&amp;lt; endl;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 26; i &amp;lt;= 34; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        cout &amp;lt;&amp;lt; l[i] &amp;lt;&amp;lt; endl;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    return 0;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;}&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;=============&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Java Code &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;==========&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;public class Quine&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;{&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;  public static void main( String[] args )&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;  {&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    char q = 34;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    String[] l = {&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    };&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 2; i &amp;lt;= 9; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        System.out.println(l[i]);&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 0; i &amp;lt; l.length; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        System.out.println( l[0] + q + l[i] + q + &#x27;,&#x27; );&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 10; i &amp;lt;= 18; i++))&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        System.out.println(l[i]);&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;  }&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;}&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;; i++)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(l[i]);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; l.length; i++)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println( l[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + q + l[i] + q + &lt;span class=&quot;string&quot;&gt;&#x27;,&#x27;&lt;/span&gt; );&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;; i++)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(l[i]);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/div&gt;
&lt;div&gt;

&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* argv[])&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;/&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; q = &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; l[] = {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    &quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;=============&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; C++ Code &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;=============&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;#include &amp;lt;iostream&amp;gt;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;#include &amp;lt;string&amp;gt;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;using namespace std;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;int main(int argc, char* argv[])&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;{&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    char q = 34;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    string l[] = {&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    };&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 20; i &amp;lt;= 25; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        cout &amp;lt;&amp;lt; l[i] &amp;lt;&amp;lt; endl;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 0; i &amp;lt;= 34; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        cout &amp;lt;&amp;lt; l[0] + q + l[i] + q + &#x27;,&#x27; &amp;lt;&amp;lt; endl;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 26; i &amp;lt;= 34; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        cout &amp;lt;&amp;lt; l[i] &amp;lt;&amp;lt; endl;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    return 0;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;}&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;=============&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Java Code &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;=============&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;public class Quine&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;{&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;  public static void main(String[] args)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;  {&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    char q = 34;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    String[] l = {&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    };&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 2; i &amp;lt;= 9; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        System.out.println( l[i] );&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 0; i &amp;lt; l.length; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        System.out.println(l[0] + q + l[i] + q + &#x27;,&#x27;);&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;    for(int i = 10; i &amp;lt;= 18; i++)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;        System.out.println(l[i]);&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;  }&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;}&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;; i++)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; l[i] &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;; i++)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; l[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + q + l[i] + q + &lt;span class=&quot;string&quot;&gt;&#x27;,&#x27;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;; i++)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; l[i] &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;这个例子来自维基百科  &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://en.wikipedia.org/wiki/Quine_(computing)&quot;&gt;https://en.wikipedia.org/wiki/Quine_(computing)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;两段代码结构上非常相似，而且跟第一个例子也很像。Java 的代码输出 C++ 的代码，C++ 的代码输出 Java 的代码，循环生成。&lt;/p&gt;
&lt;p&gt;也可以用上面占位符的思路，这里演示多个 Java 代码相互生成的例子，&lt;code&gt;class A&lt;/code&gt; -&amp;gt; &lt;code&gt;class B&lt;/code&gt; -&amp;gt; &lt;code&gt;class C&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        String s = &lt;span class=&quot;string&quot;&gt;&quot;public+class A+%7B%0A++++public+static+void+main%28String%5B%5D+args%29+%7B%0A++++++++String+s+%3D+%22__%22%3B%0A++++++++String+code+%3D+java.net.URLDecoder.decode%28s%29.replaceFirst%28%22__%22%2C+s%29%3B%0A++++++++String+a+%3D+%22class+%22+%2B+%22A%22%3B%0A++++++++String+b+%3D+%22class+%22+%2B+%22B%22%3B%0A++++++++String+c+%3D+%22class+%22+%2B+%22C%22%3B%0A++++++++if+%28code.contains%28a%29%29+%7B%0A++++++++++++code+%3D+code.replaceAll%28a%2C+b%29%3B%0A++++++++%7D+else+if+%28code.contains%28b%29%29+%7B%0A++++++++++++code+%3D+code.replaceAll%28b%2C+c%29%3B%0A++++++++%7D%0A++++++++System.out.println%28code%29%3B%0A++++%7D%0A%7D&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        String code = java.net.URLDecoder.decode(s).replaceFirst(&lt;span class=&quot;string&quot;&gt;&quot;__&quot;&lt;/span&gt;, s);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        String a = &lt;span class=&quot;string&quot;&gt;&quot;class &quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        String b = &lt;span class=&quot;string&quot;&gt;&quot;class &quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;B&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        String c = &lt;span class=&quot;string&quot;&gt;&quot;class &quot;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (code.contains(a)) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            code = code.replaceAll(a, b);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (code.contains(b)) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            code = code.replaceAll(b, c);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(code);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;其他语言的例子&quot;&gt;&lt;a href=&quot;#其他语言的例子&quot; class=&quot;headerlink&quot; title=&quot;其他语言的例子&quot;/&gt;其他语言的例子&lt;/h2&gt;&lt;p&gt;下面的例子来自 &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://rosettacode.org/wiki/Quine&quot;&gt;https://rosettacode.org/wiki/Quine&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;figcaption&gt;&lt;span&gt;C&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;*c=&lt;span class=&quot;string&quot;&gt;&quot;#include &amp;lt;stdio.h&amp;gt;%cint main(){char*c=%c%s%c;printf(c,10,34,c,34,10);return 0;}%c&quot;&lt;/span&gt;;&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(c,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,c,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight go&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Go&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;a := &lt;span class=&quot;string&quot;&gt;&quot;package main\n\nimport \&quot;fmt\&quot;\n\nfunc main() {\n\ta := %q\n\tfmt.Printf(a, a)\n}\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;fmt.Printf(a, a)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight js&quot;&gt;&lt;figcaption&gt;&lt;span&gt;JavaScript&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Quine-Relay&quot;&gt;&lt;a href=&quot;#Quine-Relay&quot; class=&quot;headerlink&quot; title=&quot;Quine Relay&quot;/&gt;Quine Relay&lt;/h2&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://github.com/mame/quine-relay&quot;&gt;https://github.com/mame/quine-relay&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a Ruby program that generates Rust program that generates Scala program that generates …(through 128 languages in total)… REXX program that generates the original Ruby code again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;多种语言的 &lt;code&gt;Quine&lt;/code&gt; 循环， &lt;code&gt;Ruby&lt;/code&gt; -&amp;gt;  &lt;code&gt;Rust&lt;/code&gt; -&amp;gt; &lt;code&gt;Scala&lt;/code&gt; -&amp;gt; &lt;code&gt;...&lt;/code&gt; -&amp;gt; &lt;code&gt;Ruby&lt;/code&gt; 最终生成跟原来相同的 &lt;code&gt;Ruby&lt;/code&gt; 程序，一共 &lt;code&gt;128&lt;/code&gt; 种语言。原理可以参考 &lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://www.zhihu.com/question/21568155&quot;&gt;https://www.zhihu.com/question/21568155&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/2021/quine-java.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;/&gt;参考&lt;/h2&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://en.wikipedia.org/wiki/Quine_(computing)&quot;&gt;https://en.wikipedia.org/wiki/Quine_(computing)&lt;/a&gt;&lt;br/&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;http://www.nyx.net/~gthompso/quine.htm&quot;&gt;http://www.nyx.net/~gthompso/quine.htm&lt;/a&gt;&lt;br/&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://www.zhihu.com/question/22006572&quot;&gt;https://www.zhihu.com/question/22006572&lt;/a&gt;&lt;br/&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://github.com/mame/quine-relay&quot;&gt;https://github.com/mame/quine-relay&lt;/a&gt;&lt;br/&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://rosettacode.org/wiki/Quine&quot;&gt;https://rosettacode.org/wiki/Quine&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c1a4e03cba903832391c1105963d472f</guid>
<title>周末过得太快？别荒废啦！</title>
<link>https://toutiao.io/k/uibgt7e</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>