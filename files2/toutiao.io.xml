<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>f8028b4fcba6fdffdceecadd411cf538</guid>
<title>欢迎加入读者圈子，一起交流！</title>
<link>https://toutiao.io/k/c0mnyrh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                           autoTypeSetting24psection&amp;#10;                          &quot; id=&quot;js_content&quot;&gt;
            &lt;p&gt;&lt;span&gt;&lt;strong&gt;欢迎加入读者圈子，一起交流！&lt;br/&gt;↓↓↓&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;307&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNavich3VaNkKeiaAwUhz7TQbQmic4fFsr58X9PAYleYzxqc1K1vZjeBoZDMUsmia0xH67EQYINGRvNOtLmA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;圈子剧透&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1、600+圈子成员，以中高级程序员为主，更有架构师、CTO坐镇交流；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、1000+优质主题，数十G独家资料，每日分享，精挑细选；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、全年52期专属邮件周报，让你轻松掌握业界资讯、技术干货，提升认知水平；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4、全年52本好书共读，让你花最少的时间，获取更好的知识；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;心动不如行动，赶快加入吧！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e74671518c01657ccb409310036c38f2</guid>
<title>如何运营好技术相关的自媒体？</title>
<link>https://toutiao.io/k/qehceai</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content e-content&quot; itemprop=&quot;description articleBody&quot;&gt;
            &lt;h2&gt;一、前言&lt;/h2&gt;
&lt;p&gt;今天带来的分享是：如何运营好技术相关的自媒体？&lt;/p&gt;
&lt;p&gt;这次我会从「理论」和「实践」两块去小小分享：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;「理论」分享清楚里面的商业底层逻辑和框架。对于每个赚钱的案例，底层逻辑和理论都是相通的。分享给大家，自媒体这块底层逻辑，方便大家在自己的行业里面，赚更多的钱&lt;/li&gt;
&lt;li&gt;「实践」分享清楚自媒体如何实践赚钱，如何落地的去执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;知之为知之，不知为不知。我知无不言言无不尽。大家有问题可以评论，多多交流一起学习&lt;/p&gt;
&lt;p&gt;自媒体每个方向都34是通的，这边分享下技术自媒体的商业模式。&lt;/p&gt;
&lt;h2&gt;二、技术自媒体的商业模式&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;2.1 聊一聊商业模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;技术自媒体，属于自媒体行业，为什么说是门生意？我认为是因为其中产生了交易。任何有交易的地方，就有生意，就有商业模式。比如你上街去某个车店买个车，去某个房屋中介买个房等等&lt;/p&gt;
&lt;p&gt;有人买有人卖，产生了交易，就是一门生意。如果在买卖中间，插入一个环节，就可以获取交易中产生的利润：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;买车，本来你可以从造车厂直接买。但是特别麻烦，车店给你挂牌、车贷等全包服务，你买的开心，买的放心。那么车店拿一辆车是批发价，给你是零售价，两个价格之差，就是利润收入。&lt;/li&gt;
&lt;li&gt;买房，本来原房东直接卖给你即可。但是你怎么找得到呢？各种手续流程，麻烦吧。房屋中介，帮你搞定，收你中介费，这就是利润收入。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种案例太多了，大家拆解下，其实底层逻辑都是一样的。那自媒体行业是不是这样的？答案：肯定是的。&lt;/p&gt;
&lt;p&gt;为什么说有生意，才持续？大家这个答案肯定是知道的。因为公益或者免费是不会长期持续的。只有良好的交易，才能双方获益，就会持续长久。整体来看，交易越多，国家越繁荣昌盛；生意越多，发展肯定越来越好。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.2 技术自媒体行业的商业模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;商业模式的类型，有很多种。技术自媒体的商业模式属于客户关系管理类型，属于：免费的商业模式。这种案例很常见，比如广告、报纸免费还是不免费、Flickr 图片分享网站等等&lt;/p&gt;
&lt;p&gt;技术自媒体的商业模式是这样的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;免费：长期提供给用户粉丝内容价值，并产生粘性和信任：比如 Java 技术相关的公号，长期为 Java 工程师提供最新最干货的技术内容&lt;/li&gt;
&lt;li&gt;收入：用广告位，赚流量的广告费。比如一篇文章、菜单栏、新人关注自动回复等都可以是广告位，流量变现，这就是利润收入。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体说个例子，比如极客时间出了一个 Java 架构师牛逼的付费课程，但需要潜在付费用户。作为 Java 工程师，可以直接去极客时间买。&lt;/p&gt;
&lt;p&gt;可是谁知道有这个好的课程呢？这时候自媒体主，就可以在公众号推荐这个课程。如果粉丝经过推荐买了这个课程，自媒体主就可以收到了极客时间广告商的广告费和课程的返佣。&lt;/p&gt;
&lt;h2&gt;三、流量的价值和竞品分析&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;3.1 如何获取流量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;赚钱：第一步，获取流量、第二步，转化沉淀私域流量&lt;/p&gt;
&lt;p&gt;获取流量，先确定这个市场的量级，就是整理流量的大小以及评估出这些流量一年能赚多少钱。如何评估呢？有两个方式：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.2 如何评估流量的价值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如可以看行业报告，看出技术人群在中国有多少用户量&lt;/p&gt;
&lt;p&gt;比如可以通过巨量引擎，看看极客时间 APP 有多少用户量&lt;/p&gt;
&lt;p&gt;比如可以看看某个公号报价，一篇技术广告文章推广费多少，对应的阅读量是多少&lt;/p&gt;
&lt;p&gt;那么就知道一个用户带来的广告费是多少？换算一下，就知道一年能赚多少钱。然后通过分析，发现技术自媒体行业，竞争对手多不多，那你就有很大的机会在里面赚到钱。比如哪些市场，竞争太大，你进去很难赚到钱。&lt;/p&gt;
&lt;p&gt;研究竞争对手，还有很多好处，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你知道流量是哪里来？是哪个渠道来的&lt;/li&gt;
&lt;li&gt;你知道竞争对手流量是怎么转化的&lt;/li&gt;
&lt;li&gt;拿不准就“抄”对手，人家怎么做，你就怎么做&lt;/li&gt;
&lt;li&gt;把自己想象成你要获取的流量，这些用户。他们在哪里？在干什么？你就在那边获取流量&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;四、技术自媒体如何运营&lt;/h2&gt;
&lt;p&gt;没有技术的人，可以不需要技术，就能挣钱。有技术的人，觉得技术能改变一切。但往往这是错觉！任何东西都需要经营，你要做自媒体时，就需要运营。比如运营你的渠道？运营你的社群？运营你的粉丝？&lt;/p&gt;
&lt;p&gt;下面具体聊聊自媒体运营，希望给大家一些参考：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;流量永远是漏斗型&lt;/li&gt;
&lt;li&gt;收入结构层层会有&lt;/li&gt;
&lt;li&gt;运营全靠输出：内容型（图文、音频、视频等）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;比如技术自媒体，我的运营目前有三大块：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一层（弱关系）：技术博客网站&lt;/li&gt;
&lt;li&gt;第二层（强关系）：好友 + 公众号 + 社群 = 微信生态。还有 QQ 生态、钉钉生态等等&lt;/li&gt;
&lt;li&gt;第三层（超强关系）：付费产品星球社群&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;第一层：收入来自谷歌广告&lt;/h3&gt;
&lt;p&gt;这一层，流量来自 SEO。第一保证高质量的原创内容，比如 Java 入门系列教程等等；第二让网站内容多多的曝光，并且引流到自己的技术博客上。比如你的技术 IP 叫：程序员二哥。你可以将内容分发到各个技术平台和通用平台：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;技术平台：CSDN、博客园、掘金等等&lt;/li&gt;
&lt;li&gt;通用平台：知乎、脉脉等等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是图文内容，但还有音频和视频。如果你有这块能力的话，就渠道会更多：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;音频：喜马拉雅等等&lt;/li&gt;
&lt;li&gt;视频：B站、抖音、快手、微信短视频等等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记住你的用户在哪，你的内容就在哪。小技巧有这些：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以勾搭运营帮忙加精推荐&lt;/li&gt;
&lt;li&gt;可以文章内部挂原创博客链接导流&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里的收入很简单。谷歌广告类似的长期广告，挂着就行啦。案例参考： 阮一峰 技术网站的广告&lt;/p&gt;
&lt;h3&gt;第二层：收入来自广告商广告费&lt;/h3&gt;
&lt;p&gt;上面各种渠道和个人博客渠道，会有源源不断的粉丝转化到第二层。强关系可以带给你公号粉丝、好友、微信群。记得可以相互备份，裂变活动增长。&lt;/p&gt;
&lt;p&gt;加你好友，自动回复，让人家关注公号分享最近一篇好文章到朋友圈，拉人家如入微信群。大家找到合适的流量获取平台，就研究，单点突破即可。无非是看用户需要什么内容（图文、视频、音频、工具），那就提供之，并且带上钩子&lt;/p&gt;
&lt;p&gt;钩子，就是比现有内容更有价值的东西，让人家关注公号领取，加好友领取等等。俗话叫钩子，其实是转化，涉及到转化流程（文案）、转化承接。钩子，需要要饵料，主要得有饵料。&lt;/p&gt;
&lt;p&gt;这一层收入也很明显：公号软文广告、CPS 等等。等你有流量，广告商会自动找你投放广告&lt;/p&gt;
&lt;h3&gt;第三层：收入来自付费产品 - 星球社群&lt;/h3&gt;
&lt;p&gt;你有了初始流量池子，里面的用户会有很多痛点和痒点。满足他们，给他们提供价值，你就可以有收入。&lt;/p&gt;
&lt;p&gt;这一层就是卖服务，类似咨询等等。需要产生更牛逼的内容 + 服务。让第二层的用户付费。没有套路，只有干货持续不断的精华干货内容。这就是增值服务。&lt;/p&gt;
&lt;p&gt;比如技术人员成长、跳槽、简历都是痛点&lt;/p&gt;
&lt;p&gt;最后一层收益最大，最难做。是做一个产品，分为几个阶段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一心落在产品和服务上&lt;/li&gt;
&lt;li&gt;一心落在推广和增长上&lt;/li&gt;
&lt;li&gt;一心落在付费用户上&lt;/li&gt;
&lt;li&gt;一心落在人性探究上&lt;/li&gt;
&lt;li&gt;一心从人性出发来研究消费者，然后找出满足人性某个需求的产品&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;人性是什么？人的需求又是什么？说到底，所以这些东西都在解决一个问题：如何让人变得更懒，让用户怎么用着更舒服，更爽。&lt;/p&gt;
&lt;h2&gt;五、小结&lt;/h2&gt;
&lt;p&gt;综上，没有技术的人，他可以不需要技术，就能挣钱。有技术的人，觉得技术能改变一切。但往往这是错觉！&lt;/p&gt;
&lt;p&gt;自媒体的商业模式与增长，无非两点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;做好内容，内容为王&lt;/li&gt;
&lt;li&gt;做好流量，流量就是用户在哪，我就在哪&lt;/li&gt;
&lt;/ul&gt;
            &lt;p class=&quot;clear&quot;/&gt;

&lt;div&gt;
&lt;center&gt;&lt;p&gt;（本文完）&lt;/p&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&quot;https://www.bysocket.com/wp-content/uploads/2022/07/微信号.png&quot;/&gt;&lt;/center&gt;
&lt;center&gt;&lt;p&gt;加个微信，送你一份我整理的《100+ 个内容运营工具资料包》&lt;/p&gt;&lt;/center&gt;
&lt;/div&gt;

        &lt;/div&gt;
        
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>01da146ee47b16aa55989a9cbddc7b88</guid>
<title>req: 即将支持 HTTP3 !</title>
<link>https://toutiao.io/k/ojt7tnh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;重磅新闻&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为一款设计优秀，简单易用的 golang http 请求库，req 即将引入 HTTP3 的支持。为了支持 HTTP3，req 的内部代码进行了一些重构，所以目前代码在单独的 http3 分支上提交。等到足够稳定后，会合并到主分支，然后发布版本 v3.14.0。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;距正式发布还需要一段时间，不过现在大家已经可以提前尝鲜试用，本文将介绍如何在 req 中使用 HTTP3。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;安装&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果要启用 HTTP3 支持，请确保您的 go 版本在 go1.16 和 go1.18 之间，然后您可以使用以下 Go 命令安装支持 HTTP3 的 req：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;go get -u github.com/imroc/req/v3@http3&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;用法&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;调用 client 的 &lt;code&gt;EnableHTTP3()&lt;/code&gt; 来启用 HTTP3 的支持:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt;  &lt;span&gt;&quot;github.com/imroc/req/v3&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  req.EnableDebugLog().EnableHTTP3()&lt;br/&gt;  &lt;span&gt;// req.EnableDumpAll() // uncomment this to see all dump content.&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; i := &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;4&lt;/span&gt;; i++ {&lt;br/&gt;    req.MustGet(&lt;span&gt;&quot;https://www.cloudflare.com&quot;&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看看 debug 日志的输出:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;2022/07/02 10:37:52.876009 DEBUG [req] HTTP/2 GET https://www.cloudflare.com&lt;br/&gt;2022/07/02 10:37:53.029690 DEBUG [req] HTTP/2 GET https://www.cloudflare.com&lt;br/&gt;2022/07/02 10:37:53.122675 DEBUG [req] detected that the server www.cloudflare.com:443 supports http3, will try to use http3 protocol in subsequent requests&lt;br/&gt;2022/07/02 10:37:53.171431 DEBUG [req] HTTP/3 GET https://www.cloudflare.com&lt;br/&gt;2022/07/02 10:37:53.440928 DEBUG [req] HTTP/3 GET https://www.cloudflare.com&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我来解释一下：启用 HTTP3 的支持后，req 会先正常发起 HTTP2 或 HTTP/1.1 请求（走 TCP）。在请求过程中，如果检测到服务器端支持 HTTP3，那么后续的所有请求都会使用 HTTP3 协议（走 UDP），就跟浏览器的行为是一样的。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>bf112f00279ca3c14df6d6bcc0685c34</guid>
<title>Android 中 利用 AccessibilityService 辅助服务 模拟点击事件</title>
<link>https://toutiao.io/k/w3u8bpa</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content&quot;&gt;&lt;p&gt;在 Android 中想要执行一些模拟点击操作，在无法修改页面源码的情况下，通常只能使用 adb 和借助辅助功能两种方式。&lt;/p&gt;
&lt;h2&gt;Adb 方式&lt;/h2&gt;
&lt;p&gt;借助 adb shell 的命令，我们可以使用下面的方式模拟一个执行点击坐标的操作。&lt;/p&gt;
&lt;figure class=&quot;code&quot;&gt;&lt;figcaption&gt;&lt;span/&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;line&quot;&gt;adb shell input tap x y
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;但是 adb 操作有一些门槛&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要一台电脑执行adb 命令（终端执行）&lt;/li&gt;
&lt;li&gt;需要一个数据线&lt;/li&gt;
&lt;li&gt;目标设备（手机）需要开启开发者模式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有 adb 操作的问题就是无法借助一台设备独立完成。所以可以借助辅助服务来实现单一设备独立完成。&lt;/p&gt;

&lt;h2&gt;辅助功能&lt;/h2&gt;
&lt;p&gt;Android中的辅助功能是一个极具黑科技的技术。借助下面的代码，我们可以实现 对于 基于坐标的点击。&lt;/p&gt;
&lt;figure class=&quot;code&quot;&gt;&lt;figcaption&gt;&lt;span/&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;7&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;8&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;9&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;11&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;12&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;13&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;14&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;15&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;16&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;17&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;18&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;19&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;21&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;22&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;23&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;24&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;25&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;26&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;kotlin&quot;&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;n&quot;&gt;@RequiresApi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERSION_CODES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AccessibilityService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispatchClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;middleVertically&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;middleHorizontally&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;n&quot;&gt;dispatchClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;n&quot;&gt;@RequiresApi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERSION_CODES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AccessibilityService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispatchClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;n&quot;&gt;smartLogD&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;s&quot;&gt;&quot;dispatchClick x=$x y=$y&quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GestureDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addStroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GestureDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StrokeDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;n&quot;&gt;ViewConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getTapTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toLong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dispatchGesture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码如果无法找到对应的引用，可以引用这个库 &lt;a href=&quot;https://github.com/androidyue/coobox&quot;&gt;https://github.com/androidyue/coobox&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;开始使用&lt;/h2&gt;
&lt;p&gt;1.在项目根目录下的 build.gradle 增加仓库配置&lt;/p&gt;
&lt;figure class=&quot;code&quot;&gt;&lt;figcaption&gt;&lt;span/&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;line&quot;&gt;allprojects &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;    repositories &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;        jcenter&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;        maven &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; url &lt;span class=&quot;s2&quot;&gt;&quot;https://jitpack.io&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;2.在模块下的 build.gradle 增加依赖引用&lt;/p&gt;
&lt;figure class=&quot;code&quot;&gt;&lt;figcaption&gt;&lt;span/&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;line&quot;&gt;dependencies &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;    implementation &lt;span class=&quot;s1&quot;&gt;&#x27;com.github.androidyue:coobox:0.8.5&#x27;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;注: 请手动替换 x.y.z 为最新的版本信息&lt;/p&gt;
&lt;img src=&quot;https://asset.droidyue.com/image/2020_05/droidyue_gzh_green_png.png&quot; class=&quot;no_boarder_class&quot;/&gt;
&lt;/div&gt;

&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>347df8abdae8cacca9e0de26ea0ede4f</guid>
<title>Kratos微服务框架下实现CQRS架构模式</title>
<link>https://toutiao.io/k/ntrn4p9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在特定的场景下，它可以提供更好的性能。但是，在强一致性方面，它并不能够保证。而且，还会带来认知负担。所以，实际运用上，需要谨慎。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;什么是 CQRS&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个概念出自于 &lt;strong&gt;命令与查询分离（CQS, Command Query Separation）&lt;/strong&gt;，出自于 1987 年 Bertrand Meyer 的&lt;object-oriented software=&quot;&quot; construction=&quot;&quot;&gt;《面向对象软件构造》一书，其原始概念是我们可以把对象操作分为：命令（Command）和 查询（Query）两种形式。&lt;/object-oriented&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;命令（Command）：在执行之后，会改变对象的状态。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;查询（Query）：仅仅是查看对象的数据，而不会对对象产生改变。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 &lt;strong&gt;命令查询的责任分离 Command Query Responsibility Segregation&lt;/strong&gt; (简称 CQRS)模式是一种架构体系模式，能够使改变模型的状态的命令和模型状态的查询实现分离。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在单体应用时代，它是读写分离:&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.433252427184466&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DicvG64GianWhPeELXyYpEPJfpokPER3fz7gJ7A2nKxLVqSWWNoc0dxZOR68taEVM21xbiaoXcED8JkP01MqPsgiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;824&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而在微服务的时代，就变成了命令查询的责任分离:&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5648584905660378&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DicvG64GianWhPeELXyYpEPJfpokPER3fzqfqdfAFoeOrdYzdb2Io9aSVyiaHhSQ0d3haOxia0xAN9t5KL6YtBTpfw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;848&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;读写分离解决了什么？&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据库的读写分离就是：将数据库分为了主从库，一个主库用于写数据，多个从库完成读数据的操作，主从库之间通过某种机制进行数据的同步。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大多数互联网业务，往往读多写少。这时候，数据库的读会首先成为数据库的瓶颈。这时，如果我们希望能够线性的提升数据库的读性能，消除读写锁冲突从而提升数据库的写性能，那么就可以使用读写分离的架构：主从，主主等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL 用的最多的就是主从，主数据库通过 BinLog 同步到从数据库。这就产生了一个问题，数据不一致问题。如果写数据的压力很大，binlog 就会拥塞，从库数据更新不及时，就会读到老旧的脏数据。所以这个方案局限了它的应用范围：只有对一致性要求不高的场景才好使。比如，日志查询，报表等。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;实现 CQRS&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这里讨论是物联网的时序数据的存取场景。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们分为两个微服务：&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;日志查询服务(kratos.logger.service)&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要是开放了 API 用于查询数据库，获取日志数据。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;日志写入服务(kratos.logger.job)&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;订阅 Kafka 的日志数据写入 Topic，写入到时序数据库中去。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Docker 部署开发服务器&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;TimeScaleDB&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;docker pull timescale/timescaledb:latest-pg14&lt;br/&gt;docker pull timescale/timescaledb-postgis:latest-pg13&lt;br/&gt;docker pull timescale/pg_prometheus:latest-pg11&lt;br/&gt;&lt;br/&gt;docker run -itd \&lt;br/&gt;    --name timescale-test \&lt;br/&gt;    -p 5432:5432 \&lt;br/&gt;    -e POSTGRES_PASSWORD=123456 \&lt;br/&gt;    timescale/timescaledb-postgis:latest-pg13&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Kafka&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;docker pull bitnami/kafka:latest&lt;br/&gt;docker pull bitnami/zookeeper:latest&lt;br/&gt;docker pull hlebalbau/kafka-manager:latest&lt;br/&gt;&lt;br/&gt;docker run -itd \&lt;br/&gt;    --name zookeeper-test \&lt;br/&gt;    -p 2181:2181 \&lt;br/&gt;    -e ALLOW_ANONYMOUS_LOGIN=yes \&lt;br/&gt;    bitnami/zookeeper:latest&lt;br/&gt;&lt;br/&gt;docker run -itd \&lt;br/&gt;    --name kafka-standalone \&lt;br/&gt;    --link zookeeper-test \&lt;br/&gt;    -p 9092:9092 \&lt;br/&gt;    -v /home/data/kafka:/bitnami/kafka \&lt;br/&gt;    -e KAFKA_BROKER_ID=1 \&lt;br/&gt;    -e KAFKA_LISTENERS=PLAINTEXT://:9092 \&lt;br/&gt;    -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092 \&lt;br/&gt;    -e KAFKA_ZOOKEEPER_CONNECT=zookeeper-test:2181 \&lt;br/&gt;    -e ALLOW_PLAINTEXT_LISTENER=yes \&lt;br/&gt;    --user root \&lt;br/&gt;    bitnami/kafka:latest&lt;br/&gt;&lt;br/&gt;docker run -itd \&lt;br/&gt;     -p 9000:9000  \&lt;br/&gt;     -e ZK_HOSTS=&quot;localhost:2181&quot; \&lt;br/&gt;     hlebalbau/kafka-manager:latest&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Consul&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;docker pull bitnami/consul:latest&lt;br/&gt;&lt;br/&gt;docker run -itd \&lt;br/&gt;    --name consul-server-standalone \&lt;br/&gt;    -p 8300:8300 \&lt;br/&gt;    -p 8500:8500 \&lt;br/&gt;    -p 8600:8600/udp \&lt;br/&gt;    -e CONSUL_BIND_INTERFACE=&#x27;eth0&#x27; \&lt;br/&gt;    -e CONSUL_AGENT_MODE=server \&lt;br/&gt;    -e CONSUL_ENABLE_UI=true \&lt;br/&gt;    -e CONSUL_BOOTSTRAP_EXPECT=1 \&lt;br/&gt;    -e CONSUL_CLIENT_LAN_ADDRESS=0.0.0.0 \&lt;br/&gt;    bitnami/consul:latest&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Jaeger&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;docker pull jaegertracing/all-in-one:latest&lt;br/&gt;&lt;br/&gt;docker run -d \&lt;br/&gt;    --name jaeger \&lt;br/&gt;    -e COLLECTOR_ZIPKIN_HOST_PORT=:9411 \&lt;br/&gt;    -p 5775:5775/udp \&lt;br/&gt;    -p 6831:6831/udp \&lt;br/&gt;    -p 6832:6832/udp \&lt;br/&gt;    -p 5778:5778 \&lt;br/&gt;    -p 16686:16686 \&lt;br/&gt;    -p 14268:14268 \&lt;br/&gt;    -p 14250:14250 \&lt;br/&gt;    -p 9411:9411 \&lt;br/&gt;    jaegertracing/all-in-one:latest&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;测试&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;下载工具&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Postman&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Offset Explorer&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;进行测试&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;测试写&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 Offset Explorer 模拟设备，向 Topic &lt;code&gt;logger.sensor.ts&lt;/code&gt; 发送 JSON 数据:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;[{&lt;span&gt;&quot;ts&quot;&lt;/span&gt;: &lt;span&gt;1646409307&lt;/span&gt;, &lt;span&gt;&quot;sensor_id&quot;&lt;/span&gt;: &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;&quot;temperature&quot;&lt;/span&gt;:&lt;span&gt;30&lt;/span&gt;, &lt;span&gt;&quot;cpu&quot;&lt;/span&gt;:&lt;span&gt;20&lt;/span&gt;}]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;测试读&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 Postman 向日志服务发起 gRPC 请求进行查询。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;技术栈&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Kratos&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;TimeScaleDB&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Kafka&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Consul&lt;/span&gt;&lt;sup&gt;[6]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Jaeger&lt;/span&gt;&lt;sup&gt;[7]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Entgo&lt;/span&gt;&lt;sup&gt;[8]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;实例代码&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;Postman: &lt;em&gt;https://www.postman.com/downloads/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;Offset Explorer: &lt;em&gt;https://www.kafkatool.com/download.html&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;Kratos: &lt;em&gt;https://go-kratos.dev/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;TimeScaleDB: &lt;em&gt;https://www.timescale.com/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;p&gt;Kafka: &lt;em&gt;https://kafka.apache.org/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[6]&lt;/span&gt;&lt;p&gt;Consul: &lt;em&gt;https://www.consul.io/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[7]&lt;/span&gt;&lt;p&gt;Jaeger: &lt;em&gt;https://www.jaegertracing.io/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[8]&lt;/span&gt;&lt;p&gt;Entgo: &lt;em&gt;https://entgo.io/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[9]&lt;/span&gt;&lt;p&gt;Kratos Examples: &lt;em&gt;https://github.com/go-kratos/examples/tree/main/cqrs&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[10]&lt;/span&gt;&lt;p&gt;淺談 CQRS 的實現方法: &lt;em&gt;https://medium.brobridge.com/%E6%B7%BA%E8%AB%87-cqrs-%E5%AF%A6%E7%8F%BE%E6%96%B9%E6%B3%95-3b4fcb8d5c86&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[11]&lt;/span&gt;&lt;p&gt;淺談微服務拆分原理: &lt;em&gt;https://medium.brobridge.com/%E6%B7%BA%E8%AB%87%E5%BE%AE%E6%9C%8D%E5%8B%99%E6%8B%86%E5%88%86%E5%8E%9F%E7%90%86-d43fbb33e722&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[12]&lt;/span&gt;&lt;p&gt;详解 CQRS 架构模式: &lt;em&gt;https://www.infoq.cn/article/wdlpjosudoga34jutys9&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>