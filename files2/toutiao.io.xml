<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>ec01c865a461a815aa3c9cf81ed5839f</guid>
<title>网易数据治理工具产品实践</title>
<link>https://toutiao.io/k/nzo9kek</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPrNu9nX4CQ5LWZo92nujVmphoLhP3tCsiaB8DeOEv1XNRfBB4yQViblGA/0?wx_fmt=jpeg&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;880&quot; data-cropy1=&quot;85.25951557093425&quot; data-cropy2=&quot;456.74740484429066&quot; data-fileid=&quot;100003453&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.42159090909090907&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPCmibT7Q4eibfclyPCaNkGjZGpCK4z2Mqnxq6GfB8GziboUIfTE4GgX6icg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;10月中旬，在DataFunSummit的数据产品在线峰会上，我分享了有关数据治理工具的产品实践，从公司内部过往数据治理回顾、当前的治理痛点，针对痛点产品的整体策略以及对于数据治理工具的未来规划四个方面进行了分享，分享收到了在线用户较好的反馈，有关文稿内容整理记录如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;听众收益：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在公司内部，业务线经常面临数据有哪些、质量如何、是否可用、能产生多大价值的困惑，并且，随着数据量的增加，计算和存储资源面临瓶颈。本次分享将围绕数据治理重点关注的计算、存储等方面，分享数据治理的产品实践。通过分享，一方面可以了解当前业务线主要面临的待治理的数据问题，另一方面，从计算、存储等主要方面，了解数据治理需要重点关注的内容，同时，对数据治理的整体产品实践有宏观的认识，对内部业务线的数据治理提供针对性的建议。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;分享正文：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;大家好，&lt;/span&gt;&lt;span&gt;下面由我来给大家分享数据治理工具的产品实践&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;整个分享我将从下面这四个方面进行介绍，分别是网易内部业务线过往的数据治理回顾，当前面临的数据治理痛点，针对痛点，数据治理平台整体的产品策略以及未来的规划。&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003459&quot; data-ratio=&quot;0.5571120689655172&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcP8SV52sVjKXr9mo5AicgnBcWHgPbC5zOBueP2m2qFdAuW2LCaLnicq2Pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;928&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86134&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-original-title=&quot;&quot; title=&quot;&quot;&gt;1&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;20%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p hm_fix=&quot;360:461&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;span&gt;过往数据治理回顾&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003461&quot; data-ratio=&quot;0.5709421112372304&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPdEdMiaia5Axz7xYoVF9x2X7GzUviaDbCYLBLsGMVjLh29FbqctwBiaXiakQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;881&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先，对于内部业务线，包括严选、传媒和音乐，都做过数据治理专项活动，也取得了初步的成效。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003463&quot; data-ratio=&quot;0.5714285714285714&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcP5Q3pp2aHWJ4wY4JlmAMh3VXpkNqBrb8VyBMiakUvXocfDww3gVicZNicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;882&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于进行数据治理专项活动的背景，一方面随着业务的发展，内部业务线的计算和存储达到瓶颈，但业务方很难判断，是应该继续扩容增加资源，还是对劣质数据进行治理来降低资源危机，但这个过程中，如何定义劣质数据，定义了劣质资源后，要怎么对其进行治理，都是亟待确定和解决的问题；另一方面，数据本身的加工链路长，数据的加工处理没有统一的标准，整个团队内到底有哪些数据，数据的负责人是谁，这些数据是通过哪些任务产出的，这些数据有没有被有效的使用，数据的存在是否有意义，这些都是管理者比较关心的问题，但数据团队都很难回答。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003464&quot; data-ratio=&quot;0.5655913978494623&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPcFrsXGZJpCUfzVY4ddZaaSO9ADWL1XvEyYGkN59mmO4NI20uPT6Ttw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;930&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于各个业务线面临的共同问题，在专项治理活动中，我们给出了针对性的策略。首先将表和任务具体化到责任人，由责任人进行资产梳理，对于没有人认领的资产，比如没有负责人、负责人离职或者负责人为项目等情况，那么就由各个业务线指定专门的治理负责人进行专项治理；然后对于存储资源，首先对无用数据进行规则定义，明确到底达到什么指标可以作为无用数据，比如近90天访问次数均为0等，确定好无用数据的规则后，将项目内无用数据扫描出来，业务方对无用数据进行二次确认，产品上提供操作入口快速下线，同时提供下线列表或累计下线数据等，进行闭环分析；对于计算资源，会对离线任务、自助查询任务消耗的成本进行分析，包括任务的执行时长、预估消耗的费用、消耗的CU等内容，便于业务进行优化，也给任务的下线治理提供依据，成本分析会默认保留近半年的数据，在对任务进行优化后，也可以进行对比分析；最后，对于存储和计算优化后，治理效果要可量化和评估，比如确认下线的存储有多少，对任务优化后节约的资源有多少，便于管理者和治理负责人对治理成果进行评估。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003465&quot; data-ratio=&quot;0.5689851767388826&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcP1cZ7RJy3loqF5rLaQTl7VGP14mdqZoQVq9vCVmEVNgGCKibMWicrd36w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;877&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于治理效率量化可评估这一策略，我们内部有一套自己的成本度量体系。基于底层的表信息、计算任务信息和任务/表之间的血缘信息，汇总为计算、存储的元数据仓库，结合网易内部自己的账单体系，体系中对计算和存储均进行了定价，从而将调度任务、自助查询每次执行消耗的计算成本预估出来，对于存储成本，一方面包含数据表本身的存储成本，另一方面产出该表的计算任务也会分摊该数据表的成本，最终得到数据表总的存储成本。将计算和存储成本转化为费用，更加一目了然的对治理效果进行量化评估。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003466&quot; data-ratio=&quot;0.5678879310344828&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPSyTrfv1PwZp1CZHBd4aMWNZKTBjFz5ysvTdouicdu18JCvicRiaIgHialg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;928&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上述专项治理中提到的策略，在数据治理工具平台均进行了产品功能的落地，通过平台化的功能，进一步提高治理效率。&lt;/span&gt;&lt;span&gt;对任务/表具体化到责任人策略，平台提供项目内所有表的列表，支持查询、转交责任人等功能；&lt;/span&gt;&lt;span&gt;对于无用数据下线功能，平台基于对无用数据的规则定义进行扫描，提供对无用数据下线的入口，确认下线后，默认会将数据表移到灰度空间保存一定时间，到期之后，平台才真正对数据进行删除；&lt;/span&gt;&lt;span&gt;对于数据表的生命周期管理，提供功能入口，针对内外部表均可设置，并且对于外部表，支持可选是否删除目录文件；&lt;/span&gt;&lt;span&gt;对于计算任务的成本分析，对项目内所有调度和Query任务进行扫描，分析任务成本，默认保留近半年的成本记录，便于对任务优化前后进行对比分析。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003467&quot; data-ratio=&quot;0.5689851767388826&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcP1LibeiaqMbNxdfbvVEfedHKz91phSGwC9GlJF1OyPh9gy8WnEH2Gibqvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;877&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在治理效果衡量体系中，提供待治理和已治理的负责人红黑榜单，便于管理员和个人进行查看，对于产生的费用和下线的存储等内容，从项目和个人角度，提供资产大盘，更加清晰的了解治理的效果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003468&quot; data-ratio=&quot;0.5710928319623971&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPlE7jRNXF6hcictNyRic9n7c94JWBJ6wEwQcd7Qnv9ibFlEVKgFjISicjlg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;851&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;同时，为了更好地触达负责人进行数据治理，建立了邮件和内部工具的通知机制，通知内容分为了两个视角，一方面是治理负责人，可以了解当前自己还有哪些数据需要进行治理，治理后可以给项目节省多少年费用；&lt;/span&gt;&lt;span&gt;另一方面是项目的管理员/负责人，可以知道当前项目下一共还有多少数据需要治理，治理后总共可以节省多少年费用，也可以知道整个项目中治理做的好的负责人Top5，以及还有哪些人占据的成本最多，可以以此为依据，催促负责人进行治理工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003469&quot; data-ratio=&quot;0.5694117647058824&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcP2bGxJtpwibU9xBvjS8pjIqZMg1wg8199W1laeGnicQxY8FTxUOd557qw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;850&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在专项治理活动中，通过上述的多种策略，初步取得了治理成效。2020年，为云音乐和严选分别优化了47.6%和61%的表，也为传媒业务线节省了约38%的计算资源，数据治理各个业务线的专项活动策略得到了业务方的肯定。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86134&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-original-title=&quot;&quot; title=&quot;&quot;&gt;2&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;20%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p hm_fix=&quot;360:461&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;span&gt;当前的数据治理痛点&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003470&quot; data-ratio=&quot;0.5657142857142857&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPqGdhJD0iays7OswLVgdoawhLYPLo7KGbpzcaWJibAYxFTyx6uMjCKib5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;875&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一章主要讲解了内部业务线数据治理专项活动采取的策略以及初步取得的成效，接下来重点阐述当前数据治理仍然面临的痛点和那些怎么也填不完的数据&quot;坑&quot;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003471&quot; data-ratio=&quot;0.572992700729927&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPhth7FibLGG9iaKibaJKbAicEZciawMT6d2dG9OUHgGiaTJApgCUj54ibRN6HQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;822&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当前的业务数据治理，主要面临这样几个关键的痛点：&lt;/span&gt;&lt;span&gt;首先业务数据本身没有规范化创建和管理，比如外部表定义目录不规范，有些分区目录location的是表的目录，在对表生命周期进行管理时，若选择删除目录，那么文件就会有被误删的风险；&lt;/span&gt;&lt;span&gt;数据开发团队人员更换频繁，面对众多的业务需求，疲态应对，处于只开发不治理的循环中，数据治理的动力不足，项目内遗留大量的历史数据；&lt;/span&gt;&lt;span&gt;还有就是当计算和存储等资源达到瓶颈后，被领导催着进行治理，缺乏长效的数据治理机制，导致阶段性治理和资源告急循环往复；&lt;/span&gt;&lt;span&gt;然后是治理的效果量化指标粗糙，哪些负责人下线了哪些数据，为项目节省了多少存储，具体节省了多少费用，没有有效的可评估的数据，这也衍生了治理者的消极心态。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003472&quot; data-ratio=&quot;0.571590909090909&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPdia6NGAt39yBPxb7LbayfCUhKo5Rq3ntXKUYh1ZCqFlHUOGSMnPNcyA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然在上一章也有讲到，数据治理专项活动取得了初步的成效，但依然还存有很多成本问题需要持续进行治理，包括严选、传媒和云音乐都各自有一定比重的表处于待下线状态，占据了相当一部分的存储空间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003473&quot; data-ratio=&quot;0.5699658703071673&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPEDybB7zqs0rLbj9bRhrJRiaIATAZBoY0ia5NMHBZxNiayMHAuwPRia1NkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;879&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据治理这条道路，真的可以用前路漫漫，道阻且长来形容了。&lt;/span&gt;&lt;span&gt;针对成本，包括计算和存储成本，数据量持续在增加，源源不断的带来存储成本，队列的资源也持续紧张，任务优化也亟待解决；&lt;/span&gt;&lt;span&gt;对于质量，数据的加工链路长，任何一个环节都可能带来质量问题；&lt;/span&gt;&lt;span&gt;对于规范，基于ODS、DWD层直接制作的报表数量居高不下，模型的复用率低；&lt;/span&gt;&lt;span&gt;对于安全，项目内的管理员数量众多，太多人有比较高的权限，权限太大应该要怎么控制，以及离职等人员闲置下来的权限应该怎么收回；&lt;/span&gt;&lt;span&gt;对于价值，API、BI等这些下游应用系统，引用表和计算成本要如何进行估量，怎么根据下游应用来量化数据价值。&lt;/span&gt;&lt;span&gt;这些都是在数据治理过程中需要持续关注和解决的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86134&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-original-title=&quot;&quot; title=&quot;&quot;&gt;3&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;20%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p hm_fix=&quot;360:461&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;span&gt;产品整体策&lt;/span&gt;&lt;span&gt;略&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003474&quot; data-ratio=&quot;0.571917808219178&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPiasMsdLdp2VGH0Y065UDicslJCNueEDPkwGoD6g41YGKqeribFKtAorFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;876&quot;/&gt;第二章讲到了当前面临的数据治理痛点，以及从成本、质量、规范、安全和价值各个方面都有亟待解决的问题。本章将针对上述面临的问题，提出治理方案，并将数据治理过程进行体系化建设，整体形成闭环。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003475&quot; data-ratio=&quot;0.5700110253583242&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPtvSPhyNl0eG7MnVy2COKObraia635YppWsYrlmeYx5YCY1Q7n2F7PXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;907&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据治理本就是一个阶段化的工作，做不到一口能吃个&quot;胖子&quot;，达不到一开始就能把治理工作做到极致，数据治理整体可以分为这样三个阶段：&lt;/span&gt;&lt;span&gt;治理的范围、治理的价值和体系化的治理。&lt;/span&gt;&lt;span&gt;首先要让决策者能够看见和关注，对数据治理的范围进行系统性的梳理，明确需要进行数据治理的范围；&lt;/span&gt;&lt;span&gt;其次需要有一套抓手，能够让真正做治理工作的负责人看到问题，并且有可量化的体系，对治理成效可评估；&lt;/span&gt;&lt;span&gt;最后将治理过程中的策略能够落地到产品功能上，通过短期业务线的宣传运营和长期的闭环机制，整体达到体系化的治理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003477&quot; data-ratio=&quot;0.5694760820045558&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcP2xcD9S2cTVUKfAlWRgGsrUNJwv4rA5FicHRwXICSxJR63Y9vt9M9aqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;878&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面针对上述提到的阶梯化治理的各个过程进行详细的介绍。&lt;/span&gt;&lt;span&gt;初阶段是明确治理范围，整个是围绕数据的全生命周期展开的，在数据生产阶段，需要对需求进行分析，明确业务口径，对数据进行规范采集、任务开发和监控运维；&lt;/span&gt;&lt;span&gt;在数据消费阶段，涉及到快速的查找数据，对数据的分析和对数据质量的探查；&lt;/span&gt;&lt;span&gt;在数据管理过程中，包含权限和成本管理等。&lt;/span&gt;&lt;span&gt;整个流程涉及到成本、标准、质量、安全和价值，各个阶段都会面临对数据的治理工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003479&quot; data-ratio=&quot;0.5701254275940707&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPM0JHncSQkCFDwtNpSW0wdxk3rS47VhBPeJg7gxv66fUWZ77pGZvc0Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;877&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;明确了数据治理范围后，然后是对于数据治理价值的量化。&lt;/span&gt;&lt;span&gt;基于数据的全生命周期，包含了成本、质量、安全、标准和价值五个方面，针对每个方面，都要有可量化的指标项，对于成本，包括计算和存储成本的费用量化，对无用数据的下线治理等；&lt;/span&gt;&lt;span&gt;对于价值，需要能够评估每个数据模型、数据报告和API的价值；&lt;/span&gt;&lt;span&gt;对于质量，会包含监控任务覆盖了多少稽核规则，涵盖了多少强弱规则；&lt;/span&gt;&lt;span&gt;对于标准，需要对指标和模型进行规范化定义；&lt;/span&gt;&lt;span&gt;对于安全，会包含数据安全登记和数据权限的治理等工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003480&quot; data-ratio=&quot;0.5689851767388826&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPD6q02uUVqyTWuRO2rb0jdib4SzNJwYQ3ptQxc8IKQTInuGib1nkwweHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;877&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数&lt;/span&gt;&lt;span&gt;据治理不是一个临时性要做的工作，从数据生命周期的全过程到治理体系的健康运行，需要一个长效的治理机制来保证，最后就是体系化的数据治理。&lt;/span&gt;&lt;span&gt;最开始是发现问题，包含成本、标准、质量、安全和价值五个方面，明确需要进行治理的内容；&lt;/span&gt;&lt;span&gt;然后基于需要治理的内容配套专题的治理工具，比如对无用数据的推荐下线，对表生命周期的管理，对计算任务的优化等；&lt;/span&gt;&lt;span&gt;最后在治理工作过程中，持续有治理抓手，包括推送整个项目、个人的资产账单，数据治理的红黑榜，并将资产健康分和个人的任务优先级或资源申请等挂钩，然后内部也举办了数据治理大赛、业务线专项治理活动等来持续运营产品功能。&lt;/span&gt;&lt;span&gt;整体通过发现问题--&amp;gt;解决手段--&amp;gt;持续运营和持续沉淀形成资产治理的闭环。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86134&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-original-title=&quot;&quot; title=&quot;&quot;&gt;4&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-width=&quot;20%&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p hm_fix=&quot;360:461&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;span&gt;未来规划 &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003481&quot; data-ratio=&quot;0.5743473325766175&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPOoo7f9m3CjYhSopOKTrc77Qk4xyeNmeWR02YibUHoiaWL6SYI8nMI4pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;881&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第三章主要基于之前提到的数据治理痛点，给出了治理的整体策略方案，下面讲一下数据治理工具的未来规划。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003482&quot; data-ratio=&quot;0.5699658703071673&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOXA9MjpHPU87yaJia4XzZWcPC15HTDsrS6cgvOPEC69SKUdyjhuPTjN5YuSJp2ybzyde8pyF8Wm7QQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;879&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关于资产治理产品的架构，绘制了一个房子图，如图所示，数据资产治理平台的使命是降本提效、省钱省力，愿景是能够打造成一款全流程、自动化、可落地、高质量的大数据评估和优化工具，成为数据治理的利刃。在这个过程中，以资产健康分为主要抓手，涵盖成本、质量、安全、标准和价值，各个模块均包含需要治理的内容，并且针对资产健康分的不同等级，也会和任务的优先级、申请资源等权限挂钩。&lt;/span&gt;&lt;span&gt;同时配合通知机制，从管理员和用户个人不同角度，对资产治理工作进行触达，调动治理的积极性，提供便捷的治理入口，形成体系化的治理体系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上就是本次有关于网易数据治理工具产品实践的分享，感谢大家~&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;101582&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;作者简介&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-autoskip=&quot;1&quot;&gt;&lt;p hm_fix=&quot;322:369&quot;&gt;云水谣，网易有数产品经理，主要负责数据服务、指标系统和数据治理相关内容。从0到1构建数据服务平台，从1到1.1实现数据治理整体闭环，有丰富的数据平台产品经验。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIwNTUxNTI1Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/sYBGQlzfEOV4Bfic2e5zqTMCl0XxmMuVq1XpDOBrbXicVB4KmrEXglsWcnMREoQXfX24sscdvQIR74ic3SiciaLoMFA/0?wx_fmt=png&quot; data-nickname=&quot;网易有数&quot; data-alias=&quot;Youdata_Netease&quot; data-signature=&quot;网易有数致力于帮助用户快速在业务场景中应用大数据，助力业务发展和产业升级，让数据更高效地驱动生产力。网易有数旗下包含有数BI，大数据平台，标签画像、CDP、AI机器学习平台等子产品&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/sYBGQlzfEOXECeWKgyIia3c7bom7Ir4rh4qI4XdxuRW4lyHudFyglytmLrOM4yYOWs3XNqqj0XlXTEw8icZ2Eb1Q/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;400&quot; data-fileid=&quot;100003451&quot;/&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; hm_fix=&quot;317:401&quot;&gt;分享，点赞，在看，安排一下？&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7f1fd9bf065e6e93623afef0b1c07938</guid>
<title>Go：使用 sync.Map 来解决 map 的并发操作问题</title>
<link>https://toutiao.io/k/hk038xd</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left&quot; aria-describedby=&quot;js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MjM5NDM4MDIwNw==&amp;amp;action=getalbum&amp;amp;album_id=1338087502032470016#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;1338087502032470016&quot; data-tag_source=&quot;4&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#Go 语言入门到实战&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;39个&lt;span class=&quot;weui-hidden_abs&quot;&gt;内容&lt;/span&gt;&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;文章目录：&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;前言&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;map 并发操作出现问题&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;sync.Map 解决并发操作问题&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;计算 map 长度&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;计算 sync.Map 长度&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;小结&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;推荐阅读&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;前言&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 &lt;code&gt;Golang&lt;/code&gt; 中 &lt;code&gt;map&lt;/code&gt; 不是并发安全的，自 1.9 才引入了 &lt;code&gt;sync.Map&lt;/code&gt; ，&lt;code&gt;sync.Map&lt;/code&gt; 的引入确实解决了 &lt;code&gt;map&lt;/code&gt; 的并发安全问题，不过 &lt;code&gt;sync.Map&lt;/code&gt; 却没有实现 &lt;code&gt;len()&lt;/code&gt; 函数，如果想要计算 &lt;code&gt;sync.Map&lt;/code&gt; 的长度，稍微有点麻烦，需要使用 &lt;code&gt;Range&lt;/code&gt; 函数。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;map 并发操作出现问题&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func &lt;span&gt;&lt;span&gt;main&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt; demo := make(map[int]int)&lt;br/&gt;&lt;br/&gt; go &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; j := 0; j &amp;lt; 1000; j++ {&lt;br/&gt;   demo[j] = j&lt;br/&gt;  }&lt;br/&gt; }()&lt;br/&gt;&lt;br/&gt; go &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; j := 0; j &amp;lt; 1000; j++ {&lt;br/&gt;   fmt.Println(demo[j])&lt;br/&gt;  }&lt;br/&gt; }()&lt;br/&gt;&lt;br/&gt; time.Sleep(time.Second * 1)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行输出：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;fatal error: concurrent map &lt;span&gt;read&lt;/span&gt; and map write&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;sync.Map 解决并发操作问题&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func &lt;span&gt;&lt;span&gt;main&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt; demo := sync.Map{}&lt;br/&gt;&lt;br/&gt; go &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; j := 0; j &amp;lt; 1000; j++ {&lt;br/&gt;   demo.Store(j, j)&lt;br/&gt;  }&lt;br/&gt; }()&lt;br/&gt;&lt;br/&gt; go &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; j := 0; j &amp;lt; 1000; j++ {&lt;br/&gt;   fmt.Println(demo.Load(j))&lt;br/&gt;  }&lt;br/&gt; }()&lt;br/&gt;&lt;br/&gt; time.Sleep(time.Second * 1)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行输出：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;nil&amp;gt; &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;1 &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;...&lt;br/&gt;&lt;br/&gt;999 &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;计算 map 长度&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func &lt;span&gt;&lt;span&gt;main&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt; demo := make(map[int]int)&lt;br/&gt;&lt;br/&gt; &lt;span&gt;for&lt;/span&gt; j := 0; j &amp;lt; 1000; j++ {&lt;br/&gt;  demo[j] = j&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; fmt.Println(&lt;span&gt;&quot;len of demo:&quot;&lt;/span&gt;, len(demo))&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行输出：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;len of demo: 1000&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;计算 sync.Map 长度&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func &lt;span&gt;&lt;span&gt;main&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt; demo := sync.Map{}&lt;br/&gt; &lt;br/&gt; &lt;span&gt;for&lt;/span&gt; j := 0; j &amp;lt; 1000; j++ {&lt;br/&gt;  demo.Store(j, j)&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; lens := 0&lt;br/&gt; demo.Range(func(key, value interface{}) bool {&lt;br/&gt;  lens++&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt; })&lt;br/&gt;&lt;br/&gt; fmt.Println(&lt;span&gt;&quot;len of demo:&quot;&lt;/span&gt;, lens)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行输出：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;len of demo: 1000&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;小结&lt;/h2&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Load&lt;/code&gt; 加载 key 数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Store&lt;/code&gt; 更新或新增 key 数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Delete&lt;/code&gt; 删除 key 数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Range&lt;/code&gt; 遍历数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;LoadOrStore&lt;/code&gt; 如果存在 key 数据则返回，反之则设置&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;LoadAndDelete&lt;/code&gt; 如果存在 key 数据则删除&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上，希望对你能够有所帮助。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;推荐阅读&lt;/h2&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MjM5NDM4MDIwNw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/go9jpG3BuhQHrM0sshKxdaibyDNjXooZvnwwy0yRjdhlXrtVUkJSvQib4Ppwib1v5HucaRc8WPtgvhPBicMeiadAv9Q/0?wx_fmt=png&quot; data-nickname=&quot;新亮笔记&quot; data-alias=&quot;XinLiangTalk&quot; data-signature=&quot;程序猿的打怪升级之路。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;318&quot; data-backw=&quot;578&quot; data-fileid=&quot;301352370&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/go9jpG3BuhSP7wibS4BHtlu4hduFYq8VbSAgRic8ib6hdd6qTRGxYSic7UFF9yPyGd4pGUw1XicibFRlGHBe9RJ09Smw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot; aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_title&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p role=&quot;option&quot; aria-labelledby=&quot;js_a11y_reward_qr_word js_a11y_comma js_a11y_reward_qr_title js_a11y_reward_qr_money&quot; aria-describedby=&quot;js_a11y_reward_qr_tips &quot; class=&quot;reward_tips&quot; id=&quot;js_a11y_reward_qr_word&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img alt=&quot;赞赏二维码&quot; class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_tips&quot; class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3f58d9496ea0789128618a3b60166cb5</guid>
<title>使用 Menger 进行大规模分布式强化学习</title>
<link>https://toutiao.io/k/q0liq0b</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;p&gt;在过去十年中，强化学习(RL) 已成为机器学习中最有前途的研究领域之一，并且在解决复杂的现实世界问题（例如芯片放置和资源管理）以及解决具有挑战性的游戏（例如，去、Dota 2和捉迷藏）。简单来说，强化学习基础设施是一个数据收集和训练循环，参与者探索环境并收集样本，然后将其发送给学习者训练和更新模型。大多数当前的 RL 技术需要对环境中数百万个样本的批次进行多次迭代才能学习目标任务（例如，Dota 2 每 2 秒从 200 万帧的批次中学习）。因此，RL 基础设施不仅应该有效地扩展（例如，增加参与者的数量）并收集大量样本，而且还应该能够在训练期间快速迭代这些大量样本。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000446&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHiciczqZLkHIGLzNr5XgxtvkuCdibEcS9gQNGU2S4XuGTSGkAyw9B1kYzm88qPV9EB31ptFyh2INHHg/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;今天我们介绍 Menger 1，这是一个具有本地化推理的大规模分布式 RL 基础设施，可在多个处理集群（例如Borg 单元）中扩展到数千个参与者，从而减少芯片放置任务的整体训练时间。在这篇文章中，我们描述了我们如何使用Google TPU 加速器实现 Menger 以进行快速训练迭代，并展示其在具有挑战性的芯片放置任务中的性能和可扩展性。门格尔减少达8.6训练时间X与基线相比实现。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;Menger 系统设计&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;有各种分布式 RL 系统，例如Acme和SEED RL，每个都专注于优化分布式强化学习系统空间中的单个特定设计点。例如，虽然 Acme 对每个参与者使用本地推理，并从学习者那里频繁检索模型，但 SEED RL 通过分配一部分 TPU 内核来执行批量调用，从而受益于集中式推理设计。这些设计点之间的权衡是（1）支付向/从集中推理服务器发送/接收观察和动作的通信成本或支付从学习器检索模型的通信成本和（2）对参与者的推理成本（例如，CPU）与加速器（例如，TPU/GPU）的比较。由于我们的目标应用程序的要求（例如，观察的大小、动作和模型大小），Menger 以类似于 Acme 的方式使用局部推理，但将参与者的可扩展性推向了几乎无限的限制。在加速器上实现大规模可扩展性和快速培训的主要挑战包括：&lt;/p&gt;&lt;p&gt;1.为模型检索提供从参与者到学习器的大量读取请求很容易限制学习器，并随着参与者数量的增加迅速成为主要瓶颈（例如，显着增加收敛时间）。2.TPU 性能通常受到将训练数据馈送到 TPU 计算核心的输入管道效率的限制。随着 TPU 计算内核数量的增加（例如TPU Pod），输入管道的性能对于整个训练运行时间变得更加重要。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;高效的模型检索&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;为了解决第一个挑战，我们在 TensorFlow 中优化并由Reverb（在Dota 中使用的类似方法）支持的学习者和参与者之间引入了透明和分布式缓存组件。缓存组件的主要职责是在来自参与者的大量请求和学习者工作之间取得平衡。添加这些缓存组件不仅显着降低了学习器为读取请求提供服务的压力，而且还进一步将 actor 分布到多个Borg 单元中，并且通信开销很小。在我们的研究中，我们表明对于具有 512 个参与者的 16 MB 模型，引入的缓存组件将平均读取延迟降低了约 4.0 倍x导致更快的训练迭代，特别是对于PPO等基于策略的算法。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000443&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHiciczqZLkHIGLzNr5XgxtvkPL6SfLGlAfYYibBSibJ8Tyzh0FbVSPvfIe4vGdyXicVQDjBDpSSOZpKUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000444&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHiciczqZLkHIGLzNr5XgxtvkNG7y7qeqAfJgOGEvZ4abOMcicRiaYGPOlBFlZQ18dObC6EhX6KcdBP0w/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;高吞吐量输入管道&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;为了提供高吞吐量的输入数据管道，Menger 使用Reverb，这是一个最近开源的数据存储系统，专为机器学习应用程序设计，提供了一个高效灵活的平台来实现各种 on-policy/off 的体验回放- 策略算法。然而，在具有数千个 actor 的分布式 RL 设置中，使用单个 Reverb 重播缓冲区服务目前不能很好地扩展，并且在来自 actor 的写入吞吐量方面变得效率低下。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000447&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHiciczqZLkHIGLzNr5XgxtvkicbUx3vUceH6QvbvSLQI4TN7xcFgRa2nzGmcOmq4ZjxHCicbdFsDJSZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;为了更好地了解分布式设置中重播缓冲区的效率，我们评估了从 16 MB 到 512 MB 的各种有效负载大小和从 16 到 2048 个不等的参与者的平均写入延迟。我们在重播缓冲区和演员被放置在同一个博格牢房中。随着参与者数量的增加，平均写入延迟也显着增加。扩大行动者的数目为16〜2048，由〜6.2倍的平均写入延迟增加X和〜18.9 X为有效载荷大小16 MB和512 MB，分别。写入延迟的增加会对数据收集时间产生负面影响，并导致整体训练时间效率低下。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000445&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHiciczqZLkHIGLzNr5XgxtvkTlyq56Zvvfu3EcocXBXKSlxK8UdkN5hn1KMtwAbTeLFicb3poaicS5sw/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;为了缓解这种情况，我们使用Reverb提供的分片功能来增加参与者、学习者和重播缓冲区服务之间的吞吐量。分片在多个重播缓冲区服务器上平衡来自大量参与者的写入负载，而不是限制单个重播缓冲区服务器，并且还最小化了每个重播缓冲区服务器的平均写入延迟（因为更少的参与者共享同一服务器）。这使 Menger 能够有效地扩展到多个 Borg 单元中的数千个参与者。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000449&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHiciczqZLkHIGLzNr5XgxtvkTsBBzpttLsVGO1QuibuHbVjLMeujAibqeshxGRqsO6ONJOzIVPn5Cmxw/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;案例研究：芯片布局&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;我们研究了 Menger 在大型网表芯片布局的复杂任务中的优势。使用512个TPU芯，门格尔实现了在训练时间显著改进（达〜8.6 X，减少从〜训练时间8.6小时下来仅仅一小时最快配置）相比，较强的基线。虽然 Menger 针对 TPU 进行了优化，但这种性能提升的关键因素是架构，我们希望在针对 GPU 进行定制时看到类似的提升。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000448&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceHiciczqZLkHIGLzNr5XgxtvkOy2a1eGJcriblCxwBy3EV3hUufhvGvKtLcX0Sx6BLADPxW3ViaYibeeYw/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们相信，Menger 基础设施及其在复杂的芯片放置任务中取得的有希望的结果展示了进一步缩短芯片设计周期的创新路径，并且不仅有可能在芯片设计过程中实现进一步创新，而且还有其他具有挑战性的现实世界任务也是如此。&lt;/p&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ffee5e5597eee987e2c36b29aaf431be</guid>
<title>关于缓存更新的一些可借鉴套路</title>
<link>https://toutiao.io/k/nif5tvl</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-mpa-category=&quot;背景&quot; data-mpa-template=&quot;t&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h3 data-pm-slice=&quot;1 1 []&quot;&gt;&lt;span&gt;hello，大家好，我是张张，「架构精进之路」公号作者。&lt;/span&gt;&lt;/h3&gt;&lt;h3 data-pm-slice=&quot;1 1 []&quot;&gt;&lt;span&gt;&lt;strong&gt;一、背景&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;目前随着缓存架构方案越来越成熟化，通常做法是引入「缓存」来提高读性能，架构模型就变成了这样：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;301282633&quot; data-ratio=&quot;0.4928131416837782&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQMfpw6cUPWibWevU6ed3icDvMuV5EyBgMIddFF9daXqbJS7XbaZKkR2GjraI5He1f9QPic6UgxlTdKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;974&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;先来看一下什么时候创建缓存，前端请求的读操作先从缓存中查询数据，如果没有命中数据，则查询数据库，从数据库查询成功后，返回结果，同时更新缓存，方便下次操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在数据不发生变更的情况下，这种方式没有问题，如果数据发生了更新操作，就必须要考虑如何操作缓存，保证一致性。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;如何保证缓存和数据库的一致性&lt;/span&gt;&lt;span&gt;，这算得上是个老生常谈的话题啦，看到好多技术新人在写更新缓存数据代码，采用了非常复杂甚至“诡异”的方案，甚为不解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;今天就一起花点儿时间来聊聊吧~&lt;/span&gt;&lt;/p&gt;&lt;h3 data-pm-slice=&quot;1 1 []&quot;&gt;&lt;span&gt;&lt;strong&gt;二、缓存和数据库数据一致性问题&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1）先更新缓存，后更新数据库&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果缓存更新成功了，但数据库更新失败，那么此时缓存中是最新值，但数据库中是「旧值」。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然此时读请求可以命中缓存，拿到正确的值，但是，一旦缓存「失效」，就会从数据库中读取到「旧值」，重建缓存也是这个旧值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这时用户会发现自己之前修改的数据又「变回去」了，对业务造成影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2）先更新数据库，后更新缓存&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果数据库更新成功了，但缓存更新失败，那么此时数据库中是最新值，缓存中是「旧值」。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;之后的读请求读到的都是旧数据，只有当缓存「失效」后，才能从数据库中得到正确的值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这时用户会发现，自己刚刚修改了数据，但却看不到变更，一段时间过后，数据才变更过来，对业务也会有影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可见，上面两种情况，无论谁先谁后，但凡后者发生异常，就会对业务造成影响。那怎么解决这个问题呢？&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;三、&lt;span&gt;缓存更新Design Pattern&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;介绍几个也许有效的套路给大家吧~ 希望有帮助。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;1）Cache Aside Pattern&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img data-fileid=&quot;301282632&quot; data-ratio=&quot;0.31333333333333335&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQMfpw6cUPWibWevU6ed3icDvh0aW3a13AmFRWyhus8F50n90hEmFwTaq1OSibRrsYBsaIogcCOsqNlg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;301282630&quot; data-ratio=&quot;0.31&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQMfpw6cUPWibWevU6ed3icDv27FhGOEFfFNISv0UzAgn503ZOpqD9J6PO6ic9sL4jUZJq2bFXVDibOpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如上图所示，一个是查询操作，一个是更新操作的并发。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先，没有了删除cache数据的操作了，而是先更新了数据库中的数据，此时，缓存依然有效，所以，并发的查询操作拿的是没有更新的数据，但是，更新操作马上让缓存的失效了，后续的查询操作再把数据从数据库中拉出来。而不会像文章开头的那个逻辑产生的问题，后续的查询操作一直都在取旧数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那么，&lt;/span&gt;&lt;span&gt;是不是Cache Aside这个就不会有并发问题了？&lt;/span&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;89&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;不是的。&lt;/section&gt;&lt;section&gt;比如，一个是读操作，但是没有命中缓存，然后就到数据库中取数据，此时来了一个写操作，写完数据库后，让缓存失效，然后，之前的那个读操作再把老的数据放进去，所以，会造成脏数据。&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;2）Read/Write Through Pattern&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;Read Through 套路就是在查询操作中更新缓存，也就是说，当缓存失效的时候（过期或LRU换出），Cache Aside是由调用方负责把数据加载入缓存，而Read Through则用缓存服务自己来加载，从而对应用方是透明的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Write Through 套路和Read Through相仿，不过是在更新数据时发生。当有数据更新的时候，如果没有命中缓存，直接更新数据库，然后返回。如果命中了缓存，则更新缓存，然后再由Cache自己更新数据库（这是一个同步操作）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;操作逻辑如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;301282631&quot; data-ratio=&quot;1.3478260869565217&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQMfpw6cUPWibWevU6ed3icDvvRxxKtv7vhD35F2cgicSmFkNMAYmNOGIc3iavCmVUlibfia32pcBm3NwHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;460&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）Write Behind Caching Pattern&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基本逻辑如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;301282634&quot; data-ratio=&quot;1.28125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQMfpw6cUPWibWevU6ed3icDvuohXp7Ig9cLDeC3stOfDckJibaKAY1BXpqHWw6vWN5bNkXibibtEOZ0WQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Write Behind 又叫 Write Back。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;简单说就是，在更新数据的时候，只更新缓存，不更新数据库，而我们的缓存会异步地批量更新数据库。这个设计的好处就是让数据的I/O操作飞快无比（直接操作内存的嘛 ），因为异步，write backg还可以合并对同一个数据的多次操作，所以性能的提高是相当可观的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但是，其带来的问题是，数据不是强一致性的，而且可能会丢失（我们知道Unix/Linux非正常关机会导致数据丢失，类似这种情况）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外，Write Back实现逻辑比较复杂，因为他需要track有哪些数据是被更新了的，需要刷到持久层上。操作系统的write back会在仅当这个cache需要失效的时候，才会被真正持久起来，比如，内存不够了，或是进程退出了等情况，这又叫lazy write。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;四、总结&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;对于这个老生常谈的问题，分析起来其实并不简单。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;额外分享几点自己心得给你：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1、性能和一致性不能同时满足，为了性能考虑，通常会采用「最终一致性」的方案；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、掌握缓存和数据库一致性问题，核心问题有 3 点：缓存利用率、并发、缓存 + 数据库一起成功问题；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、失败场景下要保证一致性，常见手段就是「重试」，同步重试会影响吞吐量，所以通常会采用异步重试的方案；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4、订阅变更日志的思想，本质是把权威数据源（例如 MySQL）当做 leader 副本，让其它异质系统（例如 Redis / Elasticsearch）成为它的 follower 副本，通过同步变更日志的方式，保证 leader 和 follower 之间保持一致。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🎉&lt;/span&gt; 福利&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;关注公众号回复关键字：&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Redis&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，即可免费获取&lt;strong&gt;《&lt;span&gt;Redis设计与实现&lt;/span&gt;》电子书&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;·················· &lt;/span&gt;&lt;span&gt;END&lt;/span&gt;&lt;span&gt; ··················&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;关注公众号，免费领学习资料&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA3MDg5MDkzOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQmUQ0Aca9qSYNFn0tQEXQc5EibBkqQLYtibYBj1hXuagwXkNc3kVwplHxIl7KQfBIiagysgn9GDUUibw/0?wx_fmt=png&quot; data-nickname=&quot;架构精进之路&quot; data-alias=&quot;jiagou_jingjin&quot; data-signature=&quot;十年研发风雨路，大厂架构师，CSDN博客专家，InfoQ写作平台签约作者。专注软件架构研究，技术学习与职业成长，坚持分享接地气儿的架构技术干货文章！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;十年研发路，大厂架构师，&lt;/span&gt;&lt;span&gt;CSDN博客专家&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;专注架构技术学习及分享，职业与认知升级&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;坚持分享接地气儿的干货，&lt;span&gt;期待与你一起成长&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98311&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-fileid=&quot;301282636&quot; data-ratio=&quot;0.5555555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgTqLjdQBs7fV8zqHRaQhA2ibia13fFn6ibS5qr5PpmZoxd8nlhAyJu7d1CjLicAruicOEb7uxibEGM476xg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;87502&quot;&gt;&lt;p&gt;&lt;span&gt;「架构精进之路」专注架构研究，技术分享&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;97708&quot;&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;点“赞”和“在看”哦&lt;/span&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.5925925925925926&quot; data-type=&quot;gif&quot; data-w=&quot;135&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/noz2jw2hPlWiaCrGuJxBicU5mcib3QapDLyo6eKnNVm9dPTV4Z1SicHLtrCCwOG9gblMBFlKf7p9cvwL6wIkZJvamg/640?wx_fmt=gif&quot; data-fileid=&quot;301282635&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5d3f451a78b928d95321b96521b3f88a</guid>
<title>[译] eBPF 如何简化服务网格</title>
<link>https://toutiao.io/k/dzr6vic</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;501902305&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.30362116991643456&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/06ULcDvaIGnaRwT6XuR8ZWiaQWo1vZjGcFrQWsfQ8By4gOTZ7yyIlO5uymPjbdRtv8wx19icw0g3JVAMabibCE7gA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1077&quot;/&gt;&lt;/p&gt;&lt;p&gt;本文译自 &lt;span&gt;How eBPF Streamlines the Service Mesh&lt;sup&gt;[1]&lt;/sup&gt;&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;今天有几个服务网格的产品和项目，承诺简化应用微服务之间的连接，同时提供额外的功能，如安全连接、可观察性和流量管理。但正如我们在过去几年中反复看到的那样，对服务网格的兴奋已经被对&lt;span&gt;额外的&lt;sup&gt;[2]&lt;/sup&gt;&lt;/span&gt;&lt;span&gt;复杂性&lt;sup&gt;[3]&lt;/sup&gt;&lt;/span&gt;和&lt;span&gt;开销的&lt;sup&gt;[4]&lt;/sup&gt;&lt;/span&gt;实际&lt;span&gt;担忧所抑制&lt;sup&gt;[5]&lt;/sup&gt;&lt;/span&gt;。让我们来探讨一下 &lt;span&gt;eBPF&lt;sup&gt;[6]&lt;/sup&gt;&lt;/span&gt; 是如何让我们精简&lt;span&gt;服务网格&lt;sup&gt;[7]&lt;/sup&gt;&lt;/span&gt;，使服务网格的数据平面更有效率，更容易部署。&lt;/p&gt;&lt;h2&gt;Sidecar 问题&lt;/h2&gt;&lt;p&gt;今天的 Kubernetes 服务网格解决方案要求你在每一个应用 pod 上添加一个代理 sidecar 容器，如 &lt;span&gt;Envoy&lt;sup&gt;[8]&lt;/sup&gt;&lt;/span&gt; 或 &lt;span&gt;Linkerd-proxy&lt;sup&gt;[9]&lt;/sup&gt;&lt;/span&gt;。这是正确的：即使在一个非常小的环境中，比如说有 20 个服务，每个服务运行五个 pod，分布在三个节点上，你也有 100 个代理容器。无论代理的实现多么小和有效，这种纯粹的重复都会耗费资源。&lt;/p&gt;&lt;p&gt;每个代理使用的内存与它需要能够通信的服务数量有关。Pranay Singhal 写了他配置 Istio 的&lt;span&gt;经验&lt;sup&gt;[10]&lt;/sup&gt;&lt;/span&gt;，将每个代理的消耗从 1GB 左右减少到更合理的 60-70MB。但是，即使在我们的小环境中，在三个节点上有 100 个代理，这种优化配置仍然需要每个节点 2GB 左右。&lt;/p&gt;&lt;figure&gt;&lt;img data-fileid=&quot;501902717&quot; data-ratio=&quot;0.44027721157766003&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/06ULcDvaIGmJwZb5UM8YIs4vbND8cHTT3FcGrJ2VfBjWjNfNjaOJImrI3pB1I58TjlNwzBHUp885L7ysJcZnDw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2453&quot; title=&quot;null&quot;/&gt;&lt;figcaption&gt;来自redhat.com/architect/why-when-service-mesh——每个微服务都有自己的代理sidecar&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;为什么我们需要所有这些 sidecar？这种模式允许代理容器与 pod 中的应用容器共享一个网络命名空间。网络命名空间是 Linux 内核的结构，它允许容器和 pod 拥有自己独立的网络堆栈，将容器化的应用程序相互隔离。这使得应用之间互不相干，这就是为什么你可以让尽可能多的 pod 在 80 端口上运行一个 web 应用 —— 网络命名空间意味着它们各自拥有自己的 80 端口。代理必须共享相同的网络命名空间，这样它就可以拦截和处理进出应用容器的流量。&lt;/p&gt;&lt;h2&gt;引入 eBPF&lt;/h2&gt;&lt;p&gt;&lt;span&gt;eBPF&lt;sup&gt;[11]&lt;/sup&gt;&lt;/span&gt; 是一种内核技术，允许自定义程序在内核中运行。这些程序在响应事件时运行，有成千上万个可能的事件，eBPF 程序可以被附加到这些事件上。这些事件包括轨迹点、进入或退出任何功能（在内核或用户空间）或对服务网格来说很重要的 —— 抵达的网络数据包。&lt;/p&gt;&lt;p&gt;重要的是，&lt;strong&gt;每个节点只有一个内核&lt;/strong&gt;；在一个节点上运行的所有容器（也就是所有的 pod）共享同一个内核。如果你在内核中添加一个 eBPF 程序到一个事件中，它将被触发，无论哪个进程引起该事件，无论它是在应用容器中运行还是直接运行在主机上。&lt;/p&gt;&lt;figure&gt;&lt;img data-fileid=&quot;501902714&quot; data-ratio=&quot;0.5966850828729282&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/06ULcDvaIGmJwZb5UM8YIs4vbND8cHTTZ2L4B5HBzIQJwe9BVLXqtdu85GibYrZnibjqucibktX8b2Iciaia7mJ40xg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1810&quot; title=&quot;null&quot;/&gt;&lt;figcaption&gt;每台主机一个内核&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这就是为什么 eBPF 对于 Kubernetes 中的任何一种 instrumentation 来说都是如此令人兴奋的技术 —— 你只需要在每个节点上添加一次 instrumentation ，所有的应用程序 pod 都会被覆盖。无论你是在寻求可观察性、安全性还是网络，由 eBPF 驱动的解决方案都可以在不需要 sidecar 的情况下对应用进行检测。&lt;/p&gt;&lt;p&gt;基于 eBPF 的 &lt;span&gt;Cilium&lt;sup&gt;[12]&lt;/sup&gt;&lt;/span&gt; 项目（最近 &lt;span&gt;以孵化级别加入云计算基金会&lt;sup&gt;[13]&lt;/sup&gt;&lt;/span&gt;）将这种 “无 sidecar” 模式带到了服务网格的世界。除了传统的 sidecar 模型，Cilium 还支持每个节点使用一个 Envoy 代理实例运行服务网格的数据平面。使用我们前面的例子，这就把代理实例的数量从 100 个减少到只有 3 个。&lt;/p&gt;&lt;figure&gt;&lt;img data-fileid=&quot;501902715&quot; data-ratio=&quot;0.4297652208515718&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/06ULcDvaIGmJwZb5UM8YIs4vbND8cHTTsGoicPiciad48HCAgME4PETtqTNAUDYUxCRpnAVKcQRUBSJ3WPpIiaSfzg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2513&quot; title=&quot;null&quot;/&gt;&lt;figcaption&gt;用无sidecar代理模式减少代理实例&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;减少 YAML&lt;/h2&gt;&lt;p&gt;在 sidecar 模型中，指定每个应用 pod 的 YAML 需要被修改以添加 sidecar 容器。这通常是自动化的 —— 例如，使用一个 mutating webhook，在每个应用 pod 部署的时候注入 sidecar。&lt;/p&gt;&lt;p&gt;以 Istio 为例，这需要&lt;span&gt;标记&lt;sup&gt;[14]&lt;/sup&gt;&lt;/span&gt; Kubernetes 命名空间和 / 或 pod，以定义是否应该注入 sidecar—— 当然也需要为集群启用 mutating webhook。&lt;/p&gt;&lt;p&gt;但如果出了问题怎么办？如果命名空间或 pod 的标签不正确，那么 sidecar 将不会被注入，pod 将不会被连接到服务网格。更糟糕的是，如果攻击者破坏了集群，并能够运行一个恶意的工作负载 —— 例如，一个加密货币矿工，他们将不太可能标记它，以便它加入服务网格。它不会通过服务网格提供的流量观察能力而被发现。&lt;/p&gt;&lt;p&gt;相比之下，在支持 eBPF 的无 sidecar 代理模型中，pod 不需要任何额外的 YAML 就可以被检测。相反，一个 CRD 被用来在集群范围内配置服务网格。即使是已经存在的 pod 也可以成为服务网格的一部分，而不需要重新启动。&lt;/p&gt;&lt;p&gt;如果攻击者试图通过直接在主机上运行工作负载来绕过 Kubernetes 编排，eBPF 程序可以检测并控制这一活动，因为这一切都可以从内核看到。&lt;/p&gt;&lt;h2&gt;eBPF 支持的网络效率&lt;/h2&gt;&lt;p&gt;支持 eBPF 的网络允许数据包走捷径，绕过内核的部分网络堆栈，这可以使 Kubernetes 网络的&lt;span&gt;性能得到显著改善&lt;sup&gt;[15]&lt;/sup&gt;&lt;/span&gt;。让我们看看这在服务网格数据平面中是如何应用的。&lt;/p&gt;&lt;figure&gt;&lt;img data-fileid=&quot;501902716&quot; data-ratio=&quot;0.4819277108433735&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/06ULcDvaIGmJwZb5UM8YIs4vbND8cHTTDuFqltp0KOhBOftLyw0B7VoVv5q0JOILQDd6f9YicN4VF99vqoqjJCA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2241&quot; title=&quot;null&quot;/&gt;&lt;figcaption&gt;在eBPF加速、无sidecar的服务网格模型中，网络数据包通过的路径要短得多&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;在服务网格的情况下，代理在传统网络中作为 sidecar 运行，数据包到达应用程序的路径相当曲折：入站数据包必须穿越主机 TCP/IP 栈，通过虚拟以太网连接到达 pod 的网络命名空间。从那里，数据包必须穿过 pod 的网络堆栈到达代理，代理将数据包通过回环接口转发到应用程序。考虑到流量必须在连接的两端流经代理，与非服务网格流量相比，这将导致延迟的&lt;span&gt;显著增加&lt;sup&gt;[16]&lt;/sup&gt;&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;基于 eBPF 的 Kubernetes CNI 实现，如 Cilium，可以使用 eBPF 程序，明智地钩住内核中的特定点，沿着更直接的路线重定向数据包。这是可能的，因为 Cilium 知道所有的 Kubernetes 端点和服务的身份。当数据包到达主机时，Cilium 可以将其直接分配到它所要去的代理或 Pod 端点。&lt;/p&gt;&lt;h2&gt;网络中的加密&lt;/h2&gt;&lt;p&gt;如果一个网络解决方案能够意识到 Kubernetes 服务，并在这些服务的端点之间提供网络连接，那么它能够提供服务网格数据平面的能力就不足为奇。但这些能力可以超越基本的连接。一个例子是透明加密。&lt;/p&gt;&lt;p&gt;通常使用服务网格来确保所有的应用流量都是经过认证和加密的。这是通过双向 TLS（mTLS）实现的；服务网格代理组件作为网络连接的端点，并与其远程对等物协商一个安全的 TLS 连接。这种连接对代理之间的通信进行加密，而不需要对应用程序做任何改变。&lt;/p&gt;&lt;p&gt;但在应用层管理的 TLS 并不是实现组件间认证和加密流量的唯一方法。另一个选择是在网络层加密流量，使用 &lt;span&gt;IPSec 或 WireGuard&lt;sup&gt;[17]&lt;/sup&gt;&lt;/span&gt;。因为它在网络层操作，这种加密不仅对应用程序完全透明，而且对代理也是透明的 —— 它可以在有或没有服务网格时启用。如果你使用服务网格的唯一原因是提供加密，你可能想考虑网络级加密。它不仅更简单，而且还可以用来验证和加密节点上的任何流量 —— 它不只限于那些启用了 sidecar 的工作负载。&lt;/p&gt;&lt;h2&gt;eBPF 是服务网格的数据平面&lt;/h2&gt;&lt;p&gt;现在，eBPF 在 Linux 生产发行版使用的内核版本中得到广泛支持，企业可以利用它来获得更有效的网络解决方案，并作为服务网格的更有效的数据平面。&lt;/p&gt;&lt;p&gt;去年，我代表 &lt;span&gt;CNCF&lt;sup&gt;[18]&lt;/sup&gt;&lt;/span&gt; 的技术监督委员会，对服务网格领域的整合和清晰化做了一些 &lt;span&gt;预测&lt;sup&gt;[19]&lt;/sup&gt;&lt;/span&gt;。在同一主题演讲中，我谈到 eBPF 有可能成为更多项目和更广泛部署能力的基础。这两个想法现在正结合在一起，因为 eBPF 似乎是服务网格数据平面的自然路径。&lt;/p&gt;&lt;h4&gt;引用链接&lt;/h4&gt;&lt;p&gt;&lt;code&gt;[1]&lt;/code&gt; How eBPF Streamlines the Service Mesh: &lt;em&gt;https://thenewstack.io/how-ebpf-streamlines-the-service-mesh/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[2]&lt;/code&gt; 额外的: &lt;em&gt;https://nowei.github.io/projects/svc_mesh_measurement_final_report.pdf&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[3]&lt;/code&gt; 复杂性: &lt;em&gt;https://engineering.hellofresh.com/everything-we-learned-running-istio-in-production-part-2-ff4c26844bfb&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[4]&lt;/code&gt; 开销的: &lt;em&gt;https://pklinker.medium.com/performance-impacts-of-an-istio-service-mesh-63957a0000b&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[5]&lt;/code&gt; 担忧所抑制: &lt;em&gt;https://medium.com/geekculture/watch-out-for-this-istio-proxy-sidecar-memory-pitfall-8dbd99ea7e9d&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[6]&lt;/code&gt; eBPF: &lt;em&gt;https://ebpf.io/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[7]&lt;/code&gt; 服务网格: &lt;em&gt;https://thenewstack.io/category/service-mesh/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[8]&lt;/code&gt; Envoy: &lt;em&gt;https://www.envoyproxy.io/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[9]&lt;/code&gt; Linkerd-proxy: &lt;em&gt;https://linkerd.io/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[10]&lt;/code&gt; 经验: &lt;em&gt;https://medium.com/geekculture/watch-out-for-this-istio-proxy-sidecar-memory-pitfall-8dbd99ea7e9d&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[11]&lt;/code&gt; eBPF: &lt;em&gt;http://ebpf.io/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[12]&lt;/code&gt; Cilium: &lt;em&gt;http://cilium.io/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[13]&lt;/code&gt; 以孵化级别加入云计算基金会: &lt;em&gt;https://www.cncf.io/blog/2021/10/13/cilium-joins-cncf-as-an-incubating-project/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[14]&lt;/code&gt; 标记: &lt;em&gt;https://istio.io/latest/docs/setup/additional-setup/sidecar-injection/#controlling-the-injection-policy&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[15]&lt;/code&gt; 性能得到显著改善: &lt;em&gt;https://cilium.io/blog/2021/05/11/cni-benchmark&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[16]&lt;/code&gt; 显著增加: &lt;em&gt;https://linkerd.io/2021/05/27/linkerd-vs-istio-benchmarks/#latency-at-20-rps&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[17]&lt;/code&gt; IPSec 或 WireGuard: &lt;em&gt;https://cilium.io/blog/2021/05/11/cni-benchmark#the-cost-of-encryption---wireguard-vs-ipsec&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[18]&lt;/code&gt; CNCF: &lt;em&gt;https://cncf.io/?utm_content=inline-mention&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[19]&lt;/code&gt; 预测: &lt;em&gt;https://youtu.be/bESogtuHwX0&lt;/em&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;501902718&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/06ULcDvaIGmJwZb5UM8YIs4vbND8cHTTMtxxHtEWky0u47GxqeazlLr1oTtia79zicxlmzKVSDhTsvhDcyq8Qyibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1920&quot;/&gt;&lt;/section&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;3934837&quot; data-style-type=&quot;&quot;&gt;&lt;section data-v-09862f0b=&quot;&quot; data-tools=&quot;新媒体排版&quot;&gt;&lt;section data-id=&quot;90196&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;3934821&quot; data-style-type=&quot;&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-xmtstyleindex=&quot;0&quot; data-xmt-x1=&quot;381.5&quot; data-xmt-y1=&quot;4647.640625&quot; data-xmt-x2=&quot;1058.5&quot; data-xmt-y2=&quot;5940.220625&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-darkmode-color-16026770102743=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16026770102743=&quot;rgb(0,0,0)&quot; data-style=&quot;margin-top: -10px; padding-right: 10px; padding-left: 10px; font-size: 16px; color: black; line-height: 1.6; letter-spacing: 0px; word-break: break-word; overflow-wrap: break-word; text-align: left; font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;&quot; data-xmt-x1=&quot;381.5&quot; data-xmt-y1=&quot;4647.640625&quot; data-xmt-x2=&quot;1038.5&quot; data-xmt-y2=&quot;5940.220625&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot; data-darkmode-color-16026770102743=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16026770102743=&quot;rgb(0,0,0)&quot; data-darkmode-bgcolor-16026770102743=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16026770102743=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; letter-spacing: 0.544px; background-color: rgb(255, 255, 255); font-family: 微软雅黑; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; data-xmt-x1=&quot;391.5&quot; data-xmt-y1=&quot;5894.640625&quot; data-xmt-x2=&quot;1048.5&quot; data-xmt-y2=&quot;5940.218725&quot;&gt;&lt;section data-role=&quot;paragraph&quot; data-darkmode-color-16026770102743=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16026770102743=&quot;rgb(0,0,0)&quot; data-darkmode-bgcolor-16026770102743=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16026770102743=&quot;rgb(255, 255, 255)&quot; data-xmt-x1=&quot;391.5&quot; data-xmt-y1=&quot;5894.640625&quot; data-xmt-x2=&quot;1048.5&quot; data-xmt-y2=&quot;5940.218725&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot; data-darkmode-color-16026770102743=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16026770102743=&quot;rgb(0,0,0)&quot; data-darkmode-bgcolor-16026770102743=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16026770102743=&quot;rgb(255, 255, 255)&quot; data-xmt-x1=&quot;391.5&quot; data-xmt-y1=&quot;5894.640625&quot; data-xmt-x2=&quot;1048.5&quot; data-xmt-y2=&quot;5940.218725&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94252&quot; data-darkmode-color-16026770102743=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16026770102743=&quot;rgb(0,0,0)&quot; data-darkmode-bgcolor-16026770102743=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16026770102743=&quot;rgb(255, 255, 255)&quot; data-xmt-x1=&quot;391.5&quot; data-xmt-y1=&quot;5894.640625&quot; data-xmt-x2=&quot;1048.5&quot; data-xmt-y2=&quot;5940.218725&quot;&gt;&lt;section data-darkmode-color-16026770102743=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16026770102743=&quot;rgb(0,0,0)&quot; data-darkmode-bgcolor-16026770102743=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16026770102743=&quot;rgb(255, 255, 255)&quot; data-xmt-x1=&quot;391.5&quot; data-xmt-y1=&quot;5894.640625&quot; data-xmt-x2=&quot;1048.5&quot; data-xmt-y2=&quot;5940.218725&quot;&gt;&lt;section data-darkmode-color-16026770102743=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16026770102743=&quot;rgb(0,0,0)&quot; data-darkmode-bgcolor-16026770102743=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16026770102743=&quot;rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-color-16026770102743=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16026770102743=&quot;rgb(0,0,0)&quot; data-darkmode-bgcolor-16026770102743=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16026770102743=&quot;rgb(255, 255, 255)&quot;&gt;&lt;h4&gt;关于云原生社区&lt;/h4&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;3934837&quot; data-style-type=&quot;&quot;&gt;&lt;section data-v-09862f0b=&quot;&quot; data-tools=&quot;新媒体排版&quot;&gt;&lt;section data-id=&quot;90196&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;3934837&quot; data-style-type=&quot;&quot;&gt;&lt;section data-v-09862f0b=&quot;&quot; data-tools=&quot;新媒体排版&quot;&gt;&lt;section data-id=&quot;90196&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;云原生社区是国内最大的独立第三方云原生终端用户和泛开发者社区，由 CNCF 大使、开源意见领袖共同发起成立于 2020 年 5 月 12 日，提供云原生专业资讯，促进云原生产业发展。云原生社区基于成员兴趣创建了多个 SIG（特别兴趣小组），如 &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649382008&amp;amp;idx=2&amp;amp;sn=8329de15872f67151e76e4dc2ece84eb&amp;amp;chksm=f224d617c5535f015e3d71a3d21c234bc333653792c85646c13b2a260a4ac2381e06fc0bf8f4&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Kubernetes&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;Kubernetes&lt;/a&gt;、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649384221&amp;amp;idx=2&amp;amp;sn=04c5062a448e9696e9296a02e82837c3&amp;amp;chksm=f224ef72c553666444b33121ae42dbf4e7609574c29e4c55b84f9f6e2cb5bae88a037f2248d2&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;Istio&lt;/a&gt;、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649384308&amp;amp;idx=2&amp;amp;sn=6188dfb44c7a7313a252879a0044b406&amp;amp;chksm=f224ef1bc553660df3b77ff63bd969a4aec56fc5a64a5cf202fb56a507fa0b13588f56384b4e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;Envoy&lt;/a&gt;、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649384308&amp;amp;idx=3&amp;amp;sn=c144874967206a7d0abe0b66e36cc03f&amp;amp;chksm=f224ef1bc553660d9f32e206c5a9e1424a60f49ced76b3d5925d0bffa09eacbe14b1da8b512a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;Dapr&lt;/a&gt;、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649384269&amp;amp;idx=2&amp;amp;sn=baaa3c95835c663c7141406b8ac1293b&amp;amp;chksm=f224ef22c553663436fcbeab26d97abe166f82b8880fc5531d2157ab89b760457ba8664a1d39&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;OAM&lt;/a&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649384175&amp;amp;idx=1&amp;amp;sn=ea9058418afd668967e28a3ba211d649&amp;amp;chksm=f224ee80c5536796af57f48c8ee7e242a2b1478645ce823d711be263587576362744eac8121d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;边缘计算&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649384137&amp;amp;idx=1&amp;amp;sn=d14055b1b5408a30db96d8e132a046ab&amp;amp;chksm=f224eea6c55367b0058a971ea579e9b1f7cb70e3d39eb4f36b64f9cab924a2b4c3fc845681f2&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;机器学习&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649383872&amp;amp;idx=1&amp;amp;sn=b6a3c43ce750ea923fed04592c5b7cfd&amp;amp;chksm=f224e9afc55360b912fd2e0d1a9ab4cc66a22deb81db8f07bc3a83146f370cb388ae53c44ef6&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;可观察性&lt;/a&gt;&lt;span&gt;、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649384467&amp;amp;idx=3&amp;amp;sn=9a8fe5c24d9458d0113c59604b6ab5e8&amp;amp;chksm=f224ec7cc553656aa33f3304608cc24423d3aca7f0d64ae9e50da2850ce5c4df0d4ff9cc013f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;稳定性&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;稳定性&lt;/a&gt;、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649385565&amp;amp;idx=2&amp;amp;sn=e3a6a1adf84c3ac9e552ba0c2b18d162&amp;amp;chksm=f224e032c5536924c330945872154b83245b19f91c401e21eddd882791c64b914d68fd51a93e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;安全&lt;/a&gt;等&lt;/span&gt;&lt;span&gt;。&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NTE2NDE2MA==&amp;amp;mid=2649383149&amp;amp;idx=3&amp;amp;sn=6012d51c80d0b8f84db58e514448ad11&amp;amp;chksm=f224ea82c553639460af375bb1f172ba94502c5599eb2a4e4df52287f98db29e3858ae09373d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;点击了解我们&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;点击了解我们&lt;/a&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI1NTE2NDE2MA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/06ULcDvaIGmqt5TicIcR8qFEjicfezMe4YuBlNbN8vl8Mh1fePHOrPibvlqJseGaG4ctibamAhKHMP3xOEW3ByibOjw/0?wx_fmt=png&quot; data-nickname=&quot;Cloud Native Community&quot; data-alias=&quot;CloudNativeCN&quot; data-signature=&quot;云原生社区是国内最大的独立第三方云原生终端用户和泛开发者社区，由 CNCF 大使、开源意见领袖共同发起成立于 2020 年 5 月 12 日，提供云原生专业资讯，促进云原生产业发展。社区官网 https://cloudnative.to&quot; data-from=&quot;1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-v-09862f0b=&quot;&quot; data-tools=&quot;新媒体排版&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;点击下方“阅读原文”查看更多&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>