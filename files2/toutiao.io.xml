<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>9f39f6a6b656813809020e351bc5e53b</guid>
<title>我提升开发效率的经验</title>
<link>https://toutiao.io/k/eesee1q</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot;&gt;&lt;p&gt;大家好，我是流沙，一名近六年工作经验的程序员。我的工作经历里，包含了整体文化、氛围差别非常大的公司，和很多不同类型的人合作过，观察到过很多没效率的现象。同时，我一直觉得我自己的开发效率是非常高的。整个职业经历里，我很少在八小时的工作时间外处理任务性的事项。即使有时迫于公司制度不得不进行加班，也是在执行自己的学习计划，或者进行一些深层的思考。因此，我想做一个系统性的关于开发效率的总结，分享给大家。&lt;/p&gt;&lt;p&gt;首先，列两个非常没效率的场景。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;小A开发过程中碰到一个没见过的报错，于是抱着电脑去找团队里的大牛小X, 小X努力的搜集相关的各种必要信息。与此同时，小A就在旁边看着，并且不时的和小X还有旁边的小Y聊着天。&lt;/li&gt;&lt;li&gt;小C拿到一个大型需求，匆匆看了一遍，接着就开始开发。开发一半了，发现产品稿上有个点看不明白，又去和产品问。问的过程中产品又想起来别的事，又说了起来。最后聊了半天，小C发现自己之前的工作基本白做了。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;虽然有夸张的成分，但是这些事也是确实每时每刻都在发生的。造成这些现象的原因很多，我们今天就好好剖析一下。在剖析效率问题之前，我们需要先看看程序员日常都要做哪些事。其中对工作效率影响比较大的，我把他们主要归为三类：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;日常开发&lt;/li&gt;&lt;li&gt;沟通&lt;/li&gt;&lt;li&gt;排查和解决问题&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;接下来，我们就对这三项逐一分析，如何提升工作效率。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;日常开发&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;日常开发中都有什么情况会造成效率下降呢，我列举几个：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;像上边小C一样的返工行为&lt;/li&gt;&lt;li&gt;日常工作中大量重复劳动，比如写sql，写模板代码&lt;/li&gt;&lt;li&gt;本来是一个很小的改动点，改了才发现这也要改，那也要改；更严重的是，根本不知道「那也要改」，结果一改就崩&lt;/li&gt;&lt;li&gt;个人注意力不集中，老走神&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;可以看到，这里边大部分是和代码设计有关的。对于设计，其实就两句话，一是要设计，二是要设计好。&lt;/p&gt;&lt;p&gt;也就是说，首先，你得知道开发之前是得有设计这么个环节的。软件工程是一门科学，它有概要设计、详细设计这些步骤是有道理的。要设计到什么程度再进开发呢？我的观点是越细越好，理论上，除了实际把代码码出来，其他所有事都可以在设计阶段做完。&lt;/p&gt;&lt;p&gt;关于设计的好不好，一个重要的评价标准，就是后续改起来是否容易。如果一个变化的原因会导致多处代码修改，那就是一个不好的设计。如何提升这一点，需要去学习设计模式、架构方面的知识，没有速成之路。&lt;/p&gt;&lt;p&gt;另外，关于注意力的问题，当然大家可以借助番茄钟这样的工具。但是工具永远都只能是辅助，最重要的还是自己去提升主观上的自控力。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;沟通&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;接着说沟通这块，沟通分主动沟通和被动沟通。主动沟通就是你自己这边发起，要去找其他人问问题、讨论；被动沟通则是别人发起，来问你问题或者讨论事。&lt;/p&gt;&lt;p&gt;主动沟通的主要问题就是越聊越远，聊着聊着就不知道聊哪去了。这里我给两个建议，一是发起沟通前一定要想清楚自己想通过这次沟通达到什么目的，不能有个模糊的想法就迷迷糊糊的去了，这种沟通就是最大的时间杀手；二是可以列一个沟通清单，沟通过程中话题扩散其实是个常见的现象，我觉得没必要刻意去杜绝这种事，关键是要保证自己本来想聊的聊出结果来，这就需要一个可以用来check的清单。&lt;/p&gt;&lt;p&gt;被动沟通其实是一种很容易打乱工作节奏的事，但是很多情况下无法避免，比如突然又线上问题要处理，领导有事找你，等等。我们能做的就只有减少不必要的被动沟通次数。比如自己提供的功能，写好文档和注释，其他人就不需要靠问你就能看明白。方法名、返回值等团队内要建立起一些固有约定，大家都遵守，也就不需要问才能了解了。&lt;/p&gt;&lt;p&gt;另外还有一点是做好任务的拆分，做若干个小任务，而不是做一个大任务。这样，当被迫打断工作时，「切换上下文」的成本会低一些。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;排查和解决问题&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;这也是很重要的一个方面。对有些人来说，查Bug改Bug的时间，可能会远高于开发新需求。对于这个，我们的主要目标就是降低排查难度，减少排查时间。可以从下面几个方面做。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;设法尽早暴露问题，比如通过写单元测试。同样一个问题，出现在一个小模块里，和出现在一个复杂系统中，排查难度是不言而喻的。&lt;/li&gt;&lt;li&gt;要有足够多的信息，比如日志，比如各类监控数据。就像我们体检一样，只有先看得到那些异常指标，才能再去针对性的详细排查。否则什么指标没有，就只能两眼抓瞎乱查了。&lt;/li&gt;&lt;li&gt;再一个就是排查方式，每个人都需要逐渐积累经验，建立起相对固定的排查问题的套路。比如我，习惯就是遇到问题先把各种能看到的信息都扫一遍，从中发现异常指标，指标看不懂的话就借助搜索引擎或者他人来理解，然后根据指标思考有什么可能原因，再逐步去验证。这里边很重要的一点就是什么样的问题要自己思考，什么样的问题应该借助于他人或者搜索引擎。像上边小A的做法，就是非常不可取的，问别人或者搜索引擎的问题，一定是非常具体的，你随手一个报错发过来，别人首先得花大量时间搜集信息。一个1小时搞得定的问题，强行去问别人，很可能要花掉两个人一下午。&lt;br/&gt;什么叫具体呢，比如遇到一个ClassNotFoundException, 如果你压根不知道它是什么意思，那去搜一下没有问题。而假如你已经知道它的意思就是找不到类，那再去搜索就没有任何意义，这是要做的是思考这个类为什么找不到，有哪些可能原因。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;除了上边这些之外，其实还有一类原因，就是996大环境大家主动选择的摸鱼。对这一点，我还是建议大家快速干完活之后腾出时间提升自己，摸鱼无益。再一点就是用脚投票，多去找没有加班文化的公司、团队，用自己的努力让他们发展的更好。&lt;/p&gt;&lt;p&gt;大家有想法也可以在评论区、知乎或者公众号和我交流。&lt;/p&gt;&lt;p&gt;原文地址: &lt;a href=&quot;https://link.zhihu.com/?target=http%3A//lichuanyang.top/posts/3423/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;lichuanyang.top/posts/3&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;423/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4ccce1114c28d2330a84c875d68043e9</guid>
<title>前端八大灵感设计，代码变为现实</title>
<link>https://toutiao.io/k/rgcqaw6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我们都知道掌握编程技术是一项很难的事情，没有捷径可走。&lt;/span&gt;&lt;span&gt;需要我们在日复一日的工作中去锻炼。&lt;/span&gt;&lt;span&gt;如果想要达到擅长甚至需要长年累月的积累。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面列举了一些可以给你带来编码灵感的例子，相信你看到会有想去写代码的冲动。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为一个好的工程师，是不惧怕任何挑战的，好的想法只会带来更大的动力。而把想法变为现实便是每一个工程师的使命。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事不宜迟，看看有哪些让眼前一亮的创意想法。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1.动态菜单&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个切换菜单时顶部伴有流动效果的设计&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIdQRe8XuLWVd0gRnulhE6Zj2icSEpMZR6760N8c9zMIG284ctoFgk4vw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-ratio=&quot;0.5092307692307693&quot; data-w=&quot;650&quot;/&gt;&lt;figcaption&gt;by abxlfazl khxrshidi&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你可通过CSS动画属性或者JavaScript来实现平滑过渡的60FPS动画效果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个例子中你将学会：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如何灵活地使用HTML，CSS，和JavaScript创建菜单&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;学会怎样使用SVG，CSS动画，以及两者如何有效结合&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.赛博朋克2077主题按钮&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7269565217391304&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LI1Dc8lLqPSjnT2CiaNAc0m8iaTLia7BGvdkVN8KKlaacHUoI7X8yoIia5YA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;575&quot;/&gt;&lt;figcaption&gt;by Jhey&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;漂亮的朋克风格的按钮。尤其注意鼠标放上去的效果。尝试去实现它，如果不确定该怎么做，再去查资料。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你将通过赛博朋克2077风格按钮的例子学到：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如何使用CSS变量，动画帧，以及clip-paths属性&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何创建复杂的鼠标悬停动画&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.棋盘和棋子&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.9868667917448405&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIyerULNoAf3AZJZsYg2dnHK1Pf5Oaygsx0VWOUBfIk9UiaArKfxMNmmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;533&quot;/&gt;&lt;figcaption&gt;by Jake Albaugh&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;女王的甘比特（The Queen&#x27;s Gambit）取得成功后，人们对国际象棋的兴趣直线上升，这是根据沃尔特·特维斯（Walter Tevis）1983年的小说改编的迷你剧。如果您还没有看的话，我强烈建议您观看！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;积分奖励：棋盘游戏互动手段&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你将通过棋盘游戏学到：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如何通过CSS Grid特性创建8x8网格&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用CSS实现雕刻的棋子&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用JavaScript实现游戏的互动&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.项目管理控制台UI&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5818181818181818&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIgZcib7eLMhwEcSvXhoMdiaVtuprNjZDvFiaVrMRIIE32XMrqsuxERarZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;figcaption&gt;Aybüke Ceylan&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个用户项目管理的控制台，用于监控项目进度并提供客户在线交流的平台。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从这个项目中你将学到：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;使用CSS和HTML实现清爽简洁的页面&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何使用WebSocket协议创建一个在线聊天室&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5.变形动画&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.664804469273743&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIpycLX4boqibcUjia836GqP1AF5u4iaFDFtBAaX4hcWzTz3cAYm4J8ia1tA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;537&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;by masuwa&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;“同构（或新拟同构）是对Web元素，框架，屏幕等设计风格的现代迭代。” — GitHub&lt;/p&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过构建同构动画，你将学到：&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;6.HTML实现地球模型&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.75139146567718&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIicDoRVAPRKoT1NChfs66ukZSVJ81YCJet1S98yAUWHd8s20Q1ZE2icYw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;539&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;by Joe Pea&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们重新创建一个地球，顺便说一下，你有没有注意到当地球从太阳前面经过的时候，倒影在地球表面上月球的阴影。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过地球的例子，你将学到：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如何使用LUME库。根据GitHub的说法，LUME是“一种工具包，可简化从移动设备到台式机再到AR / VR的任何设备的丰富交互式2D或3D体验的创建。”&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何通过HTML，CSS和JavaScript实现2D和3D模型&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;7.流式Tab按钮动画&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;549&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;413&quot; data-ratio=&quot;0.7522768670309654&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIcu91upSftEcnkX6TYx476bDvnXAIbTt844BhdgSklUuu43j4KjrgGw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;549&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;by Aaron Iker&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意以上选项卡切换时的动画&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你将学到：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;使用CSS transform属性创建60FPS动画&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何使用CSS结合JavaScript创建复杂的动画&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;8.杯子里的水&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.961038961038961&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIBGicqSBaibk5Xbvxfte1yZMSx5rOgcdPyEl4TQvGLEhbbDTjQNrr8b0g/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;770&quot;/&gt;&lt;figcaption&gt;by Zane Wesley&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是不是很神奇，和现实中杯子里流动的水很相似，不禁让人想喝一口。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个挑战中你将学到：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如何使用CSS创建流畅的60FPS动画&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何使用CSS的transfrom属性和伪选择器&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c9b9541d7b35b21c84d20db2f14ff296</guid>
<title>Lucene 倒排索引原理</title>
<link>https://toutiao.io/k/ew5ozjp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;点击蓝字 关注我们&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.4693201&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMzEW7LMjXFRSHWaY2IhXoDOlibqwcw55nZoribDp5ujjroNvpIxUnDjSg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;603&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;高沛&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;2018年7月加入去哪儿网，目前负责酒店搜索、门票搜索、大搜等搜索相关业务，曾参与基于Lucene的搜索召回服务搭建，个人对搜索引擎、分布式技术比较感兴趣，喜欢探究技术内幕、深入了解底层原理。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;1 前言&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;Lucene 作为 Apache 开源的一款搜索工具，一直以来是实现搜索功能的神兵利器，现今火热的 Solr 和 Elasticsearch 均基于该工具包进行开发，我们搜索召回组这边也是基于 Lucene 实现了一套索引构建机制，用于酒店搜索、门票搜索、大搜等搜索相关业务。&lt;/p&gt;&lt;p&gt;而 Lucene 之所以能在搜索中发挥至关重要的作用正是因为倒排索引。&lt;/p&gt;&lt;p&gt;因此，本文将介绍一下倒排索引的概念以及倒排索引在 Lucene 中的实现。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;2 基本原理&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;2.1 什么是倒排索引&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;搜索的核心需求是全文检索，全文检索简单来说就是要在大量文档中找到包含某个单词出现的位置，在传统关系型数据库中，数据检索只能通过 like 来实现，例如需要在酒店数据中查询名称包含公寓的酒店，需要通过如下 sql 实现：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; hotel_table &lt;span class=&quot;code-snippet__keyword&quot;&gt;where&lt;/span&gt; hotel_name &lt;span class=&quot;code-snippet__keyword&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;%公寓%&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这种实现方式实际会存在很多问题：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;搜索的核心目标实际上是保证搜索的效果和性能，为了高效的实现全文检索，我们可以通过倒排索引来解决。&lt;/p&gt;&lt;p&gt;倒排索引是区别于正排索引的概念：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.39609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMKHjojnvefPJic6fvxbtUTPia17GBKPAqVThK00Wia7MFqBMG5ocwYKjHA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;下面通过一个例子来说明下倒排索引的生成过程。&lt;/section&gt;&lt;p&gt;假设目前有以下两个文档内容：&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;15&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;苏州街维亚大厦 &lt;/p&gt;&lt;p&gt;桔子酒店苏州街店&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;其处理步骤如下：&lt;/p&gt;&lt;p&gt;1、正排索引给每个文档进行编号，作为其唯一的标识。&lt;/p&gt;&lt;table interlaced=&quot;disabled&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;文档 id&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;content&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;1&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;苏州街维亚大厦&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;&lt;td valign=&quot;middle&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; align=&quot;center&quot;&gt;桔子酒店苏州街店&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;2、生成倒排索引&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;     a.首先要对字段的内容进行分词，分词就是将一段连续的文本按照语义拆分为多个单词，这里两个文档包含的关键词有：&lt;em&gt;苏州街、维亚大厦&lt;/em&gt;.....       &lt;/p&gt;&lt;p&gt;     b.然后按照单词来作为索引，对应的文档 id 建立一个链表，就能构成上述的倒排索引结构。&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;span&gt;Word&lt;br/&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;span&gt;文档 id&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;苏州街&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;1,2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;维亚大厦&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;1&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;维亚&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;桔子&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;酒店&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;2&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;大赛&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;1&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;有了倒排索引，能快速、灵活地实现各类搜索需求。整个搜索过程中我们不需要做任何文本的模糊匹配。&lt;/p&gt;&lt;p&gt;例如，如果需要在上述两个文档中查询 &lt;em&gt;&lt;span&gt;苏州街桔子&lt;/span&gt;&lt;/em&gt; ，可以通过分词后通过 &lt;span&gt;&lt;em&gt;苏州街 &lt;/em&gt;&lt;/span&gt;查到 &lt;span&gt;&lt;em&gt;1、2&lt;/em&gt;&lt;/span&gt;，通过 &lt;em&gt;&lt;span&gt;桔子 &lt;/span&gt;&lt;/em&gt; 查到&lt;em&gt;&lt;span&gt; 2&lt;/span&gt;&lt;/em&gt;，然后再进行&lt;strong&gt;取交取并&lt;/strong&gt;等操作得到最终结果。 &lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMhZib7tQOqoNWKJmlJkTA3382j5tzCKXnP1jJHajRtiavtYGltaBJuBzA/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1280&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;292.31833910034607&quot; data-ratio=&quot;0.22890625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMeOO2hAf258PnewibRWJ2jlXteQUBgBtSZYaUJaAEwpiaGyGlQcslM8Rw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;2.2 倒排索引的结构&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;根据倒排索引的概念，我们可以用一个 Map&lt;string&gt;来简单描述这个结构。这个 Map 的 Key 的即是分词后的单词，这里的单词称为 Term，这一系列的 Term 组成了倒排索引的第一个部分 —— Term Dictionary (索引表，可简称为 Dictionary)。&lt;/string&gt;&lt;/p&gt;&lt;p&gt;倒排索引的另一部分为 Postings List（记录表），也对应上述 Map 结构的 Value 部分集合。&lt;/p&gt;&lt;p&gt;记录表由所有的 Term 对应的数据（Postings） 组成，它不仅仅为文档 id 信息，可能包含以下信息：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;文档 id（DocId, Document Id），包含单词的所有文档唯一 id，用于去正排索引中查询原始数据。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;词频（TF，Term Frequency），记录 Term 在每篇文档中出现的次数，用于后续相关性算分。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;位置（Position），记录 Term 在每篇文档中的分词位置（多个），用于做词语搜索（Phrase Query）。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;偏移（Offset），记录 Term 在每篇文档的开始和结束位置，用于高亮显示等。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMxvuibdEtRdTibjUOCj6JIZHUXIOMOW20JjnqTmyCjXLMuDdX9uTSsx8A/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1178&quot; data-cropy1=&quot;97.82698961937716&quot; data-cropy2=&quot;711.2837370242214&quot; data-ratio=&quot;0.5203735144312394&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMGAianhs93uxRMEJ13vxeTPYPEOvz5kRMPaBPvIib4GO9vhkULX35aFzQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1178&quot;/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;3 Lucene 倒排索引实现&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;全文搜索引擎在海量数据的情况下是需要存储大量的文本，所以面临以下问题：&lt;/p&gt;&lt;p&gt;因此上面说的基于 Map 的实现方式几乎是不可行的。&lt;/p&gt;&lt;p&gt;在海量数据背景下，倒排索引的实现直接关系到存储成本以及搜索性能。&lt;/p&gt;&lt;p&gt;为此，Lucene 引入了多种巧妙的数据结构和算法。其倒排索引实现拥有以下特性：&lt;/p&gt;&lt;p&gt;下面将根据倒排索引的结构，按 Posting List 和 Terms Dictionary 两部分来分析 Lucene 中的实现。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;3.1 Posting List 实现&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;PostingList 包含文档 id、词频、位置等多个信息，这些数据之间本身是相对独立的，因此 Lucene 将 Postings List 被拆成三个文件存储：&lt;/p&gt;&lt;p&gt;基本所有的查询都会用 .doc 文件获取文档 id，且一般的查询仅需要用到 .doc 文件就足够了，只有对于近似查询等位置相关的查询则需要用位置相关数据。&lt;/p&gt;&lt;p&gt;三个文件整体实现差不太多，这里以.doc 文件为例分析其实现。&lt;/p&gt;&lt;p&gt;.doc 文件存储的是每个 Term 对应的文档 Id 和词频。每个 Term 都包含一对 TermFreqs 和 SkipData 结构。&lt;/p&gt;&lt;p&gt;其中 TermFreqs 存放 docId 和词频信息，SkipData 为跳表信息，用于实现 TermFreqs 内部的快速跳转。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMcqTpHo5b68DLlWnjAFRVTjBt9aLgTVTbiaZj6cbG5pP23Vxb9xzqTFA/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1240&quot; data-cropy1=&quot;34.325259515570934&quot; data-cropy2=&quot;272.4567474048443&quot; data-ratio=&quot;0.19274193548387097&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMebceub2LfRicw1Z3KMU49q0wGnhpylZ0zsfTiaU6nXAsFOMiaIVibIaHqQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1240&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.1.1 TermFreqs&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;TermFreqs 存储文档号和对应的词频，它们两是一一对应的两个 int 值。Lucene 为了尽可能的压缩数据，采用的是混合存储 ，由 PackedBlock 和 VIntBlocks 两种结构组成。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;PackedBlock&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;其采用 PackedInts 结构将一个 int[] 压缩打包成一个紧凑的 Block。它的压缩方式是取数组中最大值所占用的 bit 长度作为一个预算的长度，然后将数组每个元素按这个长度进行截取，以达到压缩的目的。&lt;/p&gt;&lt;p&gt;例如：一个包含128个元素的 int 数组中最大值的是 2，那么预算长度为2个 bit, PackedInts 的长度仅是 2 * 128 / 8 = 32个字节，然后就可以通过4个 long 值存储。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMUC1lc8H4k9DibyWhe8iah0KxNLX5dRjIgcq5lrYgFqZpGCCRudSgZHkg/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1090&quot; data-cropy1=&quot;81.08996539792388&quot; data-cropy2=&quot;473.33910034602076&quot; data-ratio=&quot;0.3605504587155963&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMibRXsTom8BmPPhLC4OvInRuRkMC53kicWKFGzuvJZjrO3gEg7LhLSDQQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1090&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;VIntBlock&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;VIntBlock 是采用 VInt 来压缩 int 值，对于绝大多数语言，int 型都占4个字节，不论这个数据是1、100、1000、还是1000,000。VInt 采用可变长的字节来表示一个整数。数值较大的数，使用较多的字节来表示，数值较少的数，使用较少的字节来表示。每个字节仅使用第1至第7位(共7 bits)存储数据，第8位作为标识，表示是否需要继续读取下一个字节。&lt;/p&gt;&lt;p&gt;举个例子：&lt;/p&gt;&lt;p&gt;整数130为 int 类型时需要4个字节，转换成 VInt 后仅用2个字节，其中第一个字节的第8位为1，标识需要继续读取第二个字节。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4220665499124343&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMWia0yjHJzXviaA3pLKArbiam2B5aK9pV1yZVv9SrQPVLuCK4jplhs84YQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1142&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;根据上述两种 Block 的特点，Lucene 会每处理包含 Term 的128篇文档，将其对应的 DocId 数组和 TermFreq 数组分别处理为 PackedDocDeltaBlock 和 PackedFreqBlock 的 PackedInt 结构，两者组成一个 PackedBlock，最后不足128的文档则采用 VIntBlock 的方式来存储。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMSeoic1WUiaSibBNqjO2e2Tt7Aq8Gia7RRgibQsmaVf5kl5Ubg5GC1HGYpng/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.1.2 SkipData&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;在搜索中存在将每个 Term 对应的 DocId 集合进行取交集的操作，即判断某个 Term 的 DocId 在另一个 Term 的 TermFreqs 中是否存在。TermFreqs 中每个 Block 中的 DocId 是有序的，可以采用顺序扫描的方式来查询，但是如果 Term 对应的 doc 特别多时搜索效率就会很低，同时由于 Block 的大小是不固定的，我们无法使用二分的方式来进行查询。因此 Lucene 为了减少扫描和比较的次数，采用了 SkipData 这个跳表结构来实现快速跳转。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;跳表&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;跳表是在原有的有序链表上面增加了多级索引，通过索引来实现快速查找。&lt;/p&gt;&lt;p&gt;实质就是一种可以进行二分查找的有序链表。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMBkO0hibYutyQeWiaEQVNialmFOfRuNBdu3odOUhUQmCzgLAubjO5nq8Qg/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1280&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;403.044982698962&quot; data-ratio=&quot;0.3140625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoM2pZibjJSKMVd0NPGibvNgiavSA6Tx7qrib7I0LqVd6MrHcuQPZLJqscthw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;SkipData结构&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;在 TermFreqs 中每生成一个 Block 就会在 SkipData 的第0层生成一个节点，然后第0层以上每隔 N 个节点生成一个上层节点。&lt;/section&gt;&lt;p&gt;每个节点通过 Child 属性关联下层节点，节点内 DocSkip 属性保存 Block 的最大的 DocId 值，DocBlockFP、PosBlockFP、PayBlockFP 则表示 Block 数据对应在 .pay、.pos、.doc 文件的位置。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4578125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMb4CXMubcCOyksgNKeqGcz5jg6VuwSrSmJv9tnYRGM9NBb0uPwjeCxg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.1.3 Posting 最终数据&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Posting List 采用多个文件进行存储，最终我们可以得到每个 Term 的如下信息：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;SkipOffset：用来描述当前 term 信息在 .doc 文件中跳表信息的起始位置。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;DocStartFP：是当前 term 信息在 .doc 文件中的文档 ID 与词频信息的起始位置。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;PosStartFP：是当前 term 信息在 .pos 文件中的起始位置。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;PayStartFP：是当前 term 信息在 .pay 文件中的起始位置。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.2 Term Dictionary 实现&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Terms Dictionary（索引表）存储所有的 Term 数据，同时它也是 Term 与 Postings 的关系纽带，存储了每个 Term 和其对应的 Postings 文件位置指针。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.41796875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMlp7icbEdRqEtu4QXiaM3m3Ot89azgg5ic2NEfA1LQUxd0iciadUrF5BLuNw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;span&gt;&lt;strong&gt;3.2.1 数据存储&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Terms Dictionary 通过 .tim 后缀文件存储，其内部采用 NodeBlock 对 Term 进行压缩前缀存储，处理过程会将相同前缀的的 Term 压缩为一个 NodeBlock，NodeBlock 会存储公共前缀，然后将每个 Term 的后缀以及对应 Term 的 Posting 关联信息处理为一个 Entry 保存到 Block。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.54765625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMMiaOFJSuichu6pAkfQGTJLUKr3tewicQNlJ6h6rribB8h10Y6W1utcscuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;span&gt;在上图中可以看到 Block 中还包含了 Block，这里是为了处理包含相同前缀的 Term 集合内部部分 Term 又包含了相同前缀。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;举个例子，在下图中为公共前缀为 a 的 Term 集合，内部部分 Term 的又包含了相同前缀 ab，这时这部分 Term 就会处理为一个嵌套的 Block。&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMJ2DSfBH3OnlL2icqHVcflsSI7OlQ03EHFAIibJuGPc1LZ4NrlA1SrKTg/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;956&quot; data-cropy1=&quot;33.0795847750865&quot; data-cropy2=&quot;550.7750865051903&quot; data-ratio=&quot;0.5418410041841004&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMLiamgTtePIztELGF7eibzOKpRl58yb40YFNwT0rjDWaespA9YbCEpsng/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;956&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.2.2 数据查找&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Terms Dictionary 是按 NodeBlock 存储在.tim 文件上。当文档数量越来越多的时，Dictionary 中的 Term 也会越来越多，那查询效率必然也会逐渐变低。&lt;/p&gt;&lt;p&gt;因此需要一个很好的数据结构为 Dictionary 建构一个索引，这就是 Terms Index(.tip文件存储)，Lucene 采用了 FST 这个数据结构来实现这个索引。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;FST&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;FST, 全称 Finite State Transducer（有限状态转换器）。&lt;/p&gt;&lt;p&gt;它具备以下特点：&lt;/p&gt;&lt;p&gt;如下图为 mon/1，thrus/4，tues/2 生成的 FST，可以看到 thrus 和 tues 共享了前缀 t 以及后缀 s。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoM3a3jsiadJUmP6vJYnDqNcLeR5mbjAOc2kIfL9kl5dJ2bibR6iaULWibClQ/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1280&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;427.4048442906575&quot; data-ratio=&quot;0.33359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMc6IcuajvynThQb5kRNRldFa0ZrjSRqSZZJMHQiapQtia14ict92LLAqKw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;根据 FST 就可以将需要搜索 Term 作为 Input，对其途径的边上的值进行累加就可以得到 output，下述为以 input 为 thrus 的读取逻辑：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;初始状态0&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;输入t， FST 从0 -&amp;gt; 3， output=2&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;输入h，FST 从3 -&amp;gt; 4， output=2+2=4&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;输入r， FST 从4 -&amp;gt; 5， output=4+0&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;输入u，FST 从5 -&amp;gt; 7， output=4+0&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;输入s， FST 到达终止节点，output=4+0=4&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;那么 Term Dictionary 生成的 FST 对应 input 和 output 是什么呢？可能会误认为 FST 的 input 是 Dictionary 中所有的 Term，这样通过 FST 就可以找到具体一个 Term 对应的 Posting 数据。&lt;/p&gt;&lt;p&gt;实际上 FST 是通过 Dictionary 的每个 NodeBlock 的前缀构成，所以通过 FST 只可以直接找到这个 NodeBlock 在 .tim 文件上具体的 File Pointer, 然后还需要在 NodeBlock 中遍历 Entry 匹配后缀进行查找。&lt;/p&gt;&lt;p&gt;因此它在 Lucene 中充当以下功能：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;快速试错，即是在 FST 上找不到可以直接跳出不需要遍历整个 Dictionary，类似于 BloomFilter。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;快速定位 Block 的位置，通过 FST 是可以直接计算出 Block 的在文件中位置。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;FST 也是一个 Automation(自动状态机)。这是正则表达式的一种实现方式，所以 FST 能提供正则表达式的能力。通过 FST 能够极大的提高近似查询的性能，包括通配符查询、SpanQuery、PrefixQuery 等。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;3.3 倒排查询逻辑&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;在介绍了索引表和记录表的结构后，就可以得到 Lucene 倒排索引的查询步骤：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;通过 Term Index 数据（.tip文件）中的 StartFP 获取指定字段的 FST&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;通过 FST 找到指定 Term 在 Term Dictionary（.tim 文件）可能存在的 Block&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;将对应 Block 加载内存，遍历 Block 中的 Entry，通过后缀（Suffix）判断是否存在指定 Term&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;存在则通过 Entry 的 TermStat 数据中各个文件的 FP 获取 Posting 数据&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果需要获取 Term 对应的所有 DocId 则直接遍历 TermFreqs，如果获取指定 DocId 数据则通过 SkipData 快速跳转&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.9453125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMyty6RYdSFlQTqGEd04jZTUvpcdA1HxfkwrVEkbK9NPzvs9zGBkNFsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;4 Lucene 数值类型处理&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;上述 Terms Dictionary 与 Posting List 的实现都是处理字符串类型的 Term，而对于数值类型，如果采用上述方式实现会存在以下问题：&lt;/p&gt;&lt;p&gt;所以 Lucene 为了支持高效的数值类或者多维度查询，引入了 BKDTree。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.1 KDTree&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;BKDTree 是基于 KDTree，KDTree 实现起来很像是一个二叉查找树。主要的区别是，KDTree 在不同的层使用的是不同的维度值。&lt;/p&gt;&lt;p&gt;下面是一个2维树的样例 ，其第一层以 x 为切分维度，将 x&amp;gt;30的节点传递给右子树，x&amp;lt;30的传递给左子树，第二层再按 y 维度切分，不断迭代到所有数据都被建立到 KD Tree 的节点上为止。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5402777777777777&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMhjQUWFfEtBUQ7OTkP2CbRn5sczbFkbEowico6sh1awg4zvxXEYqwWZg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;720&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.2 BKDTree&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;BKD 树是 KD 树和 B+ 树的组合，拥有以下特性：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;内部 node 必须是一个完全二叉树&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;叶子节点存储点数据，降低层高度，减少磁盘 IO&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.43515625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7ns6DlibRuNqYJU1TlYicAEoMSAL3iaM9BFLPrZm93UjmLebRx3W8zzOGGrCcIy8nywTMH02Pctmx3ww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;5 总结&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;本文先介绍了倒排索引的概念和结构，然后对 Lucene 倒排索引的 Terms Dictionary 和 Posting List 的整体结构以及倒排索引的查询逻辑，最后介绍了 Lucene 对数值类型所做的处理。&lt;/p&gt;&lt;p&gt;倒排索引有效的解决了搜索中的很多问题，而 Lucene 对倒排索引的实现包含了很多巧妙的结构和设计，对数据存储压缩以及查询很有借鉴意义，值得深入学习。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;179&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;Lucene 源码分析：https://www.amazingkoala.com.cn/Lucene/ &lt;/p&gt;&lt;p&gt;Lucene BKD 树：https://www.shenyanchao.cn/blog/2018/12/04/lucene-bkd/ &lt;/p&gt;&lt;p&gt;Lucene 查询原理及解析 ：https://www.infoq.cn/article/ejEG02VRoeGVaLw4j_LL&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;126&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;Lucene 倒排索引探秘：https://www.6aiq.com/article/1564413040138
Lucene&lt;/p&gt;&lt;p&gt;词典 FST 深入剖析：https://www.shenyanchao.cn/blog/2018/12/04/lucene-fst/&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;END&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;2.5&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YE1dmj1Pw7nrrNGMD7K9qS7a1xMIZLAQTzQn9WiaQhM3NNAuBcsHB0L7cKzia7mAQZJ4O2gOzZk5NjqRPYcS6luQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4746666666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YE1dmj1Pw7kHzy1SrRjYH9EcoXiajkGibuiaGDf8vY6MYrx7ogmojhMBwn19H8fGH2FVoYibicib8xV0F7bUGCqh3Hhw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.47421875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YE1dmj1Pw7kHzy1SrRjYH9EcoXiajkGibuHR9iclficyhaNrMJ14LUHee2iam1ZEdfuydEwsKiaV0lG8ASj1iafibLBicRA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d2389e675920b3e7a798baec09364dc3</guid>
<title>2021 年 Elasticsearch 生态和技术峰会干货总结</title>
<link>https://toutiao.io/k/mwjay43</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;h1&gt;&lt;span&gt;1、引言&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;2021年 Elasticsearch 生态和技术峰会已完美闭幕，本次峰会可谓大咖云集，精彩纷呈。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文仅就下午场技术部分做一下梳理、提炼、总结，希望对没有来得及参加线上技术峰会的广大 Elastic 爱好者提供帮助。错过直播，但依然收获技术干货！&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;2、峰会技术关键词词云&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4972875226039783&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq32pVk1icPaqZJic8UeeibmibSxl1zKLpETwQojcyVUvvckXsiaoUlWqnABfA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;553&quot;/&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;3、技术会议主题&lt;/span&gt;&lt;/h1&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;吴斌老师（Elastic中文社区副主席）：基于流式计算平台搭建实时分析应用&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;李猛老师（力萌科技数据专家）：Elasticsearch 基于 Pipeline 窗口函数实现实时聚合计算&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;白凡老师（尚德机构资深工程师）：基于 Elasticsearch 的容器化编排实践&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;刘征老师（Elastic社区布道师）：如何规划和执行威胁狩猎&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;魏子珺老师（阿里巴巴技术专家）：Elasticsearch云原生内核建设之路&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1&gt;&lt;span&gt;4、基于流式计算平台搭建实时分析应用（吴斌）&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;4.1 为什么要面向开源进行架构设计？&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;轻松定制化、业务专注、低学习成本。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;由于代码公开，所以安全、合规、透明。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;高度灵活性，无平台绑定。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;4.2 流式计算平台架构剖析&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;如图所示，流式计算平台主要由分布式消息队列、分布式计算引擎、数据引擎三部分构成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5268571428571428&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3Gldr4onG7MK30pJnqpia9Jleu8k4KLLoCVbQv1JiaKjm7bxvw3eXoDAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;875&quot;/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;4.2.1 分布式消息队列&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;4.2.2 分布式计算引擎&lt;/span&gt;&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;早期：MapReduce、Storm&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;当下主流：Flink、Storm2.0&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持热更新 / 弹性伸缩&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;计算引擎核心任务：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;数据校验（数据格式、合法性、脏数据等）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;数据清洗（数据 ETL 转换）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;数据丰富（多维数据Join，以辅助数据分析）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;4.2.3 数据引擎&lt;/span&gt;&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;热数据存储在 Elasticsearch、HBase。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;其中 HBase 存储热数据非完全必要，除非高 IO 存储需要引入。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一般情况下，数据的分析：Elasticsearch 就能搞定。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;温数据（&lt;span&gt;超过 7天的数&lt;/span&gt;&lt;span&gt;据&lt;/span&gt;）存储选型：&lt;br/&gt;1）MPP&lt;br/&gt;2）Hive，GreenPlum&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;4.2.4 分布式存储&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;云端的对象存储&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;文件输出、明细错误数据落地&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;快照 snapshot 等&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5779610194902549&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3UP54YaRtQgPJHQTuINOhA3F6mzu28nPb62wNyicM4Hbh63juWn0fuicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1334&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1）数据来源（server Application）：服务器日志、监控、业务数据采集（如用户行为、购买记录、社交记录）。&lt;br/&gt;2）数据发送到消息队列 （MSG G）。&lt;br/&gt;3）消息队列数据写入 Beam Streaming 开源驱动引擎框架。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4）拉取RDB业务维表与实时数据Join。&lt;br/&gt;5）对有问题数据输出到 Object 对象 / File 文件系统备份。&lt;br/&gt;6）实时数据注入 Elasticsearch。&lt;br/&gt;7）高 IO 数据写入 HBase（KV引擎）。&lt;br/&gt;8）Beam Batch 批量处理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;核心Tips: &lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;HBase  +  Elasticsearch 组合使用，以打车场景为例：&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;4.3 Elasticsearch 在流式平台中的角色功能&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5081256771397616&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3KG3OiajYy68OJe5UuxdRVfQeUtbHvCuBic1WkJxCUBticnpPTgL7W0vxg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;923&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（1）文本检索&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（2）已知数据计算&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;已知数据定义：Mapping是我们自定义的。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实时指标计算。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;场景：固定报表、大屏展示。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;（3）未知线索探索&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;指标计算&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;复杂过滤条件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;adhoc 查询&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;关联性、归因等&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;4.4 云原生与k8s集群管理经验分享（核心）&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5384615384615384&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3ofWiavvu1y4IcsYo51kFJeYMFlgqrsgwbTQPnGos5JOWJheYX7KCrXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;884&quot;/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;lass / On-prem：自己部署（实体机、虚拟机）大集群：维护升级麻烦，出错恢复周期非常长。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Sass：运维简单，具备弹性；&lt;/span&gt;&lt;span&gt;缺点&lt;/span&gt;&lt;span&gt;：细节不透明，网络拓扑受限，入口/网关性能、灵活性差，升级麻烦。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Pass (平台服务) / K8s&lt;br/&gt;（1）优点：运维简单、yaml文件决定部署、弹性好、独享资源、官方operator。&lt;br/&gt;（2）&lt;/span&gt;&lt;span&gt;缺点&lt;/span&gt;&lt;span&gt;：受限于K8s、开源版本，官方未来会推出商业版本。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐&lt;/span&gt;&lt;span&gt;：基于云托管K8s搭建ES集群。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;为 Elasticsearch 量身定制的网关产品——极限网关&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;极限网关特性：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;转发性能好。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持多集群之间数据分流、同步。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持网关级限流。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6037117903930131&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3CQicqOJgWQpichic5ibCicu5VkicogdSQR1o2ud9D8MAgmD0s6UiatFD44fGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;916&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;4.5 相关资源&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;https://github.com/elasticsearch-cn/elastic-on-gke/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/cloudymoma/raycom&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http://gateway.infini.sh/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/medcl/infini-gateway&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.528960223307746&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq32caTxWPz3bCIOZib9icv4P4B6Ij9lrhmabW2snmPJCxLBVmYp2mPALJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1433&quot;/&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;5、Elasticsearch 基于 Pipeline 窗口函数实现实时聚合计算（李猛）&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;5.1 Pipeline 实时计算模型&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;pipeline 管道——输入、处理、输出。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4706533776301218&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3dNIB53k7DXPkX2ZINnBhiauR6DR0DuS9zSKP12Pr6xTPuEBfjMECn1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;903&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;类似：logstash 中的三个核心：input、filter、output。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现有流计算的问题：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5544554455445545&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3janftVCibPHJoqL4iaYCYNj228gAgzAo3szoiasItVg43BOzqDEypnkicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;707&quot;/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Kafka：上游。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Flink：中间实时计算。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Storage：下游实时存储。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;现有流计算架构问题总结如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现有产品架构体系不够简化，能不能不是三件套，而是单件套？&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;5.2 ES - Pipeline 实时计算能力&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5406032482598608&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq39Jg17fOD4RhojuX4V0hGE6LEEavxTUO0FqLnfTtaAaibDNtibnQM1fog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;862&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用 Ingest pipeline 解决数据预处理问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;前提：业务场景不复杂。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;思考：Kafka、Flink 合并到用 Elasticsearch 实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5542328042328042&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq33gPgmangNftX4GxrQuTJkNicNHgOLjAT6BfrI5RYYcG55mQunMPrgkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;756&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Rollup 核心：基于时间维度实现数据转换、压缩、折叠。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Transform：自己定义脚本或者函数实现数据转换。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4105378704720088&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3oZgJk66S2E3o1Sgc33od23maLIhbjtvpNnXQm6YhqPazoqCcT20wQA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;911&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;聚合 + pipeline 二次聚合，可以将结果写回到：索引。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4448123620309051&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3iask1SwTLjW3NG3oSS1kIBdK52icXdicmqYoGp0xqC0OzjrmREYZ4trtw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;906&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;5.3 ES + X实时计算畅想&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;认知前提：ES 具备一定的实时计算能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.555735056542811&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3ic6Tk9uhF3icxz4rmCwWY4mh6MM6kOFKhZqpTmIQAuypLTkc7BNKwiaibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;619&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6242424242424243&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3a2SHV54LhibkSP3WMQxQQXQHbHaXduwZdolHQq8DafVIDCNoRJfIhBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;660&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ALL in One（大白话意思：“Elasticsearch 一统江湖”）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5309672929714684&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3hID8xyZIzbNUp3Loy5pv2vEoW26QGzvB3GOT7FABa9JWNOO4j1OiaVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1437&quot;/&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;6、基于 Elasticsearch 的容器化编排实践（白凡）&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;6.1、为什么使用容器？&lt;/span&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务方使用 ES 需求不一样。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;资源隔离。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;较虚拟机相对轻量级。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;敏感业务数据：物理机集群存储。&lt;br/&gt;不敏感业务数据：容器集群存储。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;6.2、容器化优点&lt;/span&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;容易构建、迁移、部署。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;工具链的标准化和快速部署。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;开发、测试、生产 ES 版本统一化。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;底层参数以及 ES配置 标准化。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;轻量 + 高效。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;6.3、由代码到上线的可追溯流程&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5411284840244731&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3jGCsW4icMMndoPT20jEYvF4XC75OBA8AoBoG0Ll0USy0RZ4dhVLkmwA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1471&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;使用了：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;Gerrit 代码审查工具。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Jenkins 自动化打包工具。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;6.4、容器化中常见问题及解决方案&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.44222222222222224&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3Ya748e1FEKml21llgf2zHn57ocbNtlib7nQesXdnIR9Uxp4ZrxnROUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5298611111111111&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3Fsq8h3R3FTRLV9OQ0YaaFRbW1eibLjKVoibJ4puMoUok0RK1SEt3cJSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1440&quot;/&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;7、如何规划和执行威胁狩猎？（刘征）&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;威胁狩猎&lt;/span&gt;&lt;span&gt;本质&lt;/span&gt;&lt;span&gt;：安全分析中高阶、顶层威胁情报集成、管理工作。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;7.1 安全问题无处不在&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;7.2 基于现有模块构建 Elastic 安全体系&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;Elastic 内置了监测规则、监测引擎、监测告警等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6561085972850679&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3Ouia1xZ3etibR2MvrnEqGSpjH80es9ictGoCZ1p5VG7btKWa9lEeEg6Qw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;663&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;7.3 安全威胁建模四个步骤组成：&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4033078880407125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3GsNPxoQibClvgicLQYWKoEvNmExzPJsBkrUw6ObnZMicXUPKZjEaT11Cg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;786&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在 kibana SIEM 中创建监测规则，形成基于 KQL的威胁探测规则。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;7.4 安全狩猎核心步骤&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;第一步：通过 beats 收集日志。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.46144721233689207&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3vyxmmwL2n4hBAIAb6DCwYx16Qy7eK7zTmc2xOvwyXbd7aVIhTnJCoQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;843&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二步：通过数据丰富提高威胁情报的质量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.530562347188264&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3x5BVoESGFQkEPciaK1GG7nbJpr1K3adDgtQXR41O4HxyA8TS4ZlFYHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;818&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第三步：通过 Elastic SIEM 工具实现安全狩猎。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.484201537147737&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3pKzPt58YF2PL0hxYGNXeorSuHgTicUolAoiap1daSZ60HoByUndvicuyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1171&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以上，人为对已知攻击的分析、判断。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可不可以对未知隐患发现？可以的，人工 + 机器学习实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.36180308422301305&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq31dPZThPfMnBM0LXxYWve62UhFOydEg7RhVia5cA1o8cicww3HVwJP5sA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;843&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;7.5 推荐使用：MITRE ATTCK （内置于：Elastic SIEM）的全方位防护。&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2894736842105263&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3Er3ibmtsficLRnxLbf0icI4jPbwDmAbuQgjZpIm9ZRfmGAbQ31j5PJ2Uw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;684&quot;/&gt;&lt;/p&gt;&lt;p&gt;上面一句话很简练，是为总结。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;8、阿里云 Elasticsearch 云原生内核建设之路（魏子珺）&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;8.1 阿里云 Elasticsearch 内核概览&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;8.1.1 阿里云Elasticsearch内核优势&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;阿里云内核 VS 开源内核：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5274869109947644&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3K32AkP6BPCR3OLHIsowQMVWeZmRddIw42DAcpekyZdtwXHWiad7alRw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;764&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;8.1.2 阿里云 Elasticsearch 内核需求&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;8.1.3 阿里云 Elasticsearch 内核成果&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.47058823529411764&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3icQaicqbec4DGg3ricVibKzwlRfC6t82cU5wtN8q5YHHT5VlUzBBpLUibBQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;799&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;成本节约：计算存储分离、冷热分离、Indexing service、索引数据压缩。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;性能优化：ElasticBuild、物理复制、 bulk 聚合插件、时序查询剪枝。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;稳定性提升：集群Qos限流、慢查询隔离池、协调节点流控、kmonitor全方位监控。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;功能增强：向量检索插件、NLP分词插件（1GB 海量词库），OSS Snapshot 插件，场景化推荐模板。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;8.2、云原生 Elasticsearch 如何定义？&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;8.3、云原生 Elasticsearch 内核如何设计？&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;8.3.1 热节点计算存储分离——分布式文件系统&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;挑战1：分布式文件系统自身的稳定性。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;挑战2：ES 一写多读，如何防止出现多读情况。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;挑战3：读写分片内存状态，如何保障数据一致性？&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;8.3.2 冷热分离——冷节点对象存储&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;挑战1：冷节点使用对象存储，只有http接口，无 POSIX 接口，需要 Lucene 底层适配。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;挑战2：单次IO的延时非常高。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;挑战3：无法使用操作系统 pagecache 和预读能力。&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;8.3.3 Serverless：让用户关心从集群下沉到索引。&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;挑战1：如何解决多租户共享和平衡隔离问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;挑战2：如何实现与原生ES一致的体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;挑战3：如何评估索引的使用资源。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;8.4 、阿里云云原生 Elasticsearch 实践&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;8.4.1 热节点计算存储分离&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3688989784335982&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3e4jT6PF7pyNvegJDicjKrph75WWZN0UF5gXLtpkdIjhrPB6MytxuHFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;881&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;核心诉求：彻底弹性。不止是原生的动态添加节点、动态分片数据迁移。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;核心需求：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5180327868852459&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3iajebep6qBV4ytQBNyNFdpW5vnnic9AuuwjPMyq3hcWsPSPHUB5dgGWA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;915&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;彻底弹性的&lt;/span&gt;&lt;span&gt;本质&lt;/span&gt;&lt;span&gt;：分片的搬迁、副本的扩充，底层数据都是不动的，只需要调整的是 DataNode 到分片的映射。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;热节点计算存储分离的&lt;/span&gt;&lt;span&gt;本质&lt;/span&gt;&lt;span&gt;是：不再需要分片的副本保证数据的高可靠性（原生 ES 需要），而是借助：分布式文件系统保障数据的可靠性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;核心技术之一：内存物理复制，实现 replica 的近实时访问。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;核心技术之二：两阶段 io fence，主备切换数据一致性保证以及防止网络异常时的数据多写。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.45675675675675675&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3hjpibib1BJEAMhZfWicda3HSDWIX6qG2jORWndBPo0NXGmuQ028jOQsyA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;740&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;计算存储分离&lt;/span&gt;&lt;span&gt;优势&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;8.4.2  Serverless——Indexing service&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;2021 年 2 月上线&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.509719222462203&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3uYualib8OQr4S9RJv92GVllfCcFLKrJZ1sX9vyOXQUiapcOuicw4pllnw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;926&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.499455930359086&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3HVVv71nq8JF1kNMV55IVicVXJDPZgBAceQg2twF4b4CbDE9HiaaOCLEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;919&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4049586776859504&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3kC3OCxav7icpLkEibaYg7kraRrH32zkVaXY1ZVNBRE4Q9N6Wt6MwZ5Xg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;847&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一句话概括Indexing Service &lt;/span&gt;&lt;span&gt;本质&lt;/span&gt;&lt;span&gt;：写入托管服务，也就是说：针对时序、日志场景数据，用户无需再关系写入细节、写入优化、运维等操作，全权由阿里云托管搞定。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5275645498953245&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9ZDicTyB0vrnurm0tmCyKVq3icfRCYIcIrG7BAKsia3vxfnJWiah5yTp7dxT1tCOLJfcZGg86f7A94iboQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1433&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;9、小结&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;各位分享大咖的视频都值得看，建议大家结合自己的业务场景去看。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;更多细节内容，推荐大家看视频，视频地址：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://developer.aliyun.com/topic/esanniv3rd?userCode=qzgc9fkf&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247484608&amp;amp;idx=1&amp;amp;sn=6afe56c91aad3c9ab73c22aa42e8cead&amp;amp;chksm=eaa82ce8dddfa5fe54b2045b3ce6fbe0114a138e73d4bcfefc5d4a8595db950cc96f055ed5a8&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247485259&amp;amp;idx=1&amp;amp;sn=066fe9147a4fecabebe613a2bbb5a1f9&amp;amp;chksm=eaa82f63dddfa67599abdb15eac15c2ed8954c9ed3c332d30dd47508b8c91b89e923f66272f1&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Elasticsearch， 你值得拥有！—— 云栖大会 Elasticsearch 场景化应用全景回顾&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247484608&amp;amp;idx=1&amp;amp;sn=6afe56c91aad3c9ab73c22aa42e8cead&amp;amp;chksm=eaa82ce8dddfa5fe54b2045b3ce6fbe0114a138e73d4bcfefc5d4a8595db950cc96f055ed5a8&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Elastic中国开发者大会2019干货分享&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247484263&amp;amp;idx=1&amp;amp;sn=2984ccacf8ef53f73fa64ee510266d0b&amp;amp;chksm=eaa82b4fdddfa2591e74607083886b1ae43c21c5429dd92287aa1b56dbfd276530a70f6bcccf&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;干货 | 2018 Elastic 中国开发者大会笔记&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d6100fa59c13242bd272a616cc49b1f9</guid>
<title>没错！100% 解决浏览器内存占用大的问题</title>
<link>https://toutiao.io/k/fi5wji4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;342&quot; data-backw=&quot;546&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;342&quot; data-ratio=&quot;0.6255555555555555&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjYA6w8kATLQozqakeicm5FCBwQGXTWiagJ2Em0cvux8sictwKiap2cQ1ribDR9DMWLQW9Z6zpibiaJY5b5sQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;span&gt;&lt;span&gt;1、阅读本文预计需要 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 分钟，并提供了资源下载。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2、本文是&lt;strong&gt;「&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;网上冲浪指南&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;」&lt;/strong&gt;专题&lt;/span&gt;&lt;span&gt;&lt;strong&gt; i26&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 篇&lt;/span&gt;&lt;span&gt;&lt;strong&gt;首次更新&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、第一时间获取更新，欢迎关注「&lt;/span&gt;&lt;span&gt;&lt;strong&gt;奔跑中的奶酪&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;」。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;导读&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当你觉得&lt;strong&gt;浏览器内存占用太大&lt;/strong&gt;，然后到网上找解决方法，得到的回答通常是这样的：&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;“&lt;strong&gt;内存不够就加内存啊”！&lt;br/&gt;“内存是拿来用，不是拿来看的&lt;/strong&gt;”！&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;的确，&lt;strong&gt;内存是电脑流畅运行的基础&lt;/strong&gt;，内存的作用就好比我们吃饭的时候是用碗（&lt;strong&gt;内存&lt;/strong&gt;）装着吃的，而不是用锅（&lt;strong&gt;硬盘&lt;/strong&gt;）来吃。&lt;br/&gt;&lt;br/&gt;按现在的电脑水平，内存怎么也要在 &lt;strong&gt;8G&lt;/strong&gt; 以上。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.42535787321063395&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTjYA6w8kATLQozqakeicm5FCBbzQQusGqQfdCwbTow4MWaiaiciaVLsCpsJVGuGDchUSOQZT1jWlBRz3AQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;978&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;但回答显示没有考虑到&lt;strong&gt;笔记本电脑&lt;/strong&gt;。&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;先不说有些笔记本电脑无法加内存，即使内存够用，当内存占用过大时，&lt;strong&gt;笔记本的&lt;/strong&gt;&lt;strong&gt;发热就会增加，耗电量&lt;strong&gt;也会&lt;/strong&gt;随即增加。&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;而且，当浏览器内存占用过大时，就会面临崩溃丢失数据的风险。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;所以本期内容就是要彻底解决这个问题。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;浏览器内存占用大的原因&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;先说说原因，影响浏览器内存占用的因素有两个：&lt;strong&gt;&lt;br/&gt;&lt;br/&gt;一是打开网页的大小，二是打开网页的数量&lt;/strong&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;网页大小，是指&lt;strong&gt;打开网页需要加载的资源大小&lt;/strong&gt;。像视频、直播、瀑布流式网页都会占用很大的内存，因为是&lt;strong&gt;网页会不停地加载数据&lt;/strong&gt;，不样一般的网页加载完成就结束了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;网页数量的因素，则是因为现在的浏览器普通都采用了&lt;strong&gt;多进程处理方式&lt;/strong&gt;，每个扩展和标签页都会单独打开一个进程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5366666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTjYA6w8kATLQozqakeicm5FCBlL7InEnlibmzBSkeQpyCnF57oicSnrxSfCp0Thn5gib2vujXftvzlhxrw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot;/&gt;&lt;span&gt;这样做的好处是更快也更安全，即使有网页崩溃了，也不会造成浏览器的崩溃，坏处则是内存会成倍数增加。&lt;br/&gt;&lt;br/&gt;此外，如果浏览器还&lt;strong&gt;额外安装了扩展和脚本&lt;/strong&gt;，那么也会叠加影响内存的占用。&lt;br/&gt;&lt;br/&gt;所以，理论上浏览器的内存开销是没有上限的，有多少它就能给用多少。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;内存占用大的解决方法&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;解决浏览器内存占用过大的问题，就是从上面提到的两个因素下手。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1、冻结标签页&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;我们知道 iOS 有着很好的&lt;strong&gt;内存管理机制&lt;/strong&gt;，不需要很大的内存也能流畅运行，原因是 iOS 会&lt;strong&gt;自动冻结不活动的应用来释放内存。&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们所看到的后台，其实只是应用程序最后活动状态的一张缩略图，点击切换时需要重新加载。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.3438395415472779&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTjYA6w8kATLQozqakeicm5FCBk6kmsrk7DIHW0IzQAMEFicxsJjoxLXXKcicXiaYFcPdJDlmKD1M6zq72Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1396&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;事实上，现在浏览器也加入了类似的功能，也就是自动冻结不活动的标签页，以达到清理内存的效果。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但现在功能还不够完善，我们可以用拓展 &lt;strong&gt;Auto Tab Discard&lt;/strong&gt; 来更好的实现。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;除了可以设置自动冻结的时间（&lt;strong&gt;默认为 10 分钟后&lt;/strong&gt;）和数量（&lt;strong&gt;不超过 6 个时不冻结&lt;/strong&gt;），拓展还可以设置排除白名单。&lt;br/&gt;&lt;br/&gt;比如&lt;strong&gt;编辑中的标签页、固定的标签页、播放中的标签页&lt;/strong&gt;都不会被冻结。&lt;br/&gt;&lt;br/&gt;甚至我们还可以指定某个标签页在退出浏览器前永不自动冻结，所以不用担心自动冻结标签页会影响到工作。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5885558583106267&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTjYA6w8kATLQozqakeicm5FCBU2QZXwfoHtjDs3ibR0p5bicQibe9qrPL4JNNl43scyvGiboicQ960uFQ9cg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1835&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;strong&gt;冻结标签页还有一个妙用：&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如我们打开了一个视频网页，内存占有较大，如果暂时不想看了，通常的做法是关闭该网页，然后等需要了再重新打开。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们可以手动冻结这个标签页（&lt;strong&gt;设置快捷键&lt;/strong&gt; &lt;strong&gt;Ctrl+Alt+D&lt;/strong&gt;），这样既能释放内存占用，也不用关闭标签页，而且还能记住最后的浏览位置。&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2、搁置标签页&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;控制内存占用的另一个方法，是控制标签页数量。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;有一款叫做 &lt;strong&gt;OneTab&lt;/strong&gt; 的扩展，号称能节省浏览器 95% 的内存。&lt;br/&gt;&lt;br/&gt;它的思路是将当前打开的标签页全部关闭，然后保存到一个列表里，需要什么再打开什么。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;307&quot; data-backw=&quot;546&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjbfhBsGvF0oRF0CgfRImDJ3zKtQE7icUbPiar8feeBW15MY0wcQPcUoyKnKLxbDVYIl1FHLbS1YQ0zQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但这个做法并不高明，有点“&lt;strong&gt;把垃圾藏在床底下&lt;/strong&gt;”的意思。&lt;br/&gt;&lt;br/&gt;当你重新打开这些标签页时，减少的内存又会重新的回来，而且它无法保存最后的会话状态。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另一款叫做  &lt;strong&gt;Tab Session Manager&lt;/strong&gt; 扩展做得更好，无论是手动保存、自动保存、是弹窗式的设计，都要比 &lt;strong&gt;OneTab&lt;/strong&gt; 做得更好。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.6070640176600441&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTjYA6w8kATLQozqakeicm5FCBoexMibV1NlmKy4u6yjw608iaZMYDBDoSTerQkal3vNyLWyWlCIMwMnZg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;906&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;快速关闭标签页&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相比上面的两个方法，关闭不需要的标签页是减少内存占用最直接的方法，下面是常用的方法：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1、双击关闭&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点击关闭按钮是最传统的关闭方法，但它需要精准选择操作。我们可以设置“&lt;strong&gt;双击标签页&lt;/strong&gt;”来关闭标签页，省去选择的过程。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2、快捷键 Ctrl+W&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Ctrl+W 是关闭标签页的快捷键，特别是笔记本用户更知道它的重要性。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但按快捷键 Ctrl+W 时的手是扭曲的，不是很方便，我们可以使用快捷键工具 &lt;strong&gt;HotkeyP&lt;/strong&gt; 来修改快捷键。（具体回复关键字 &lt;strong&gt;C05&lt;/strong&gt;）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如分别设置 &lt;strong&gt;F1、Alt+F1、Alt+F2、Alt+F3&lt;/strong&gt; 为新建标签页、关闭标签页、关闭右侧标签页和关闭左侧标签页，操作起来更方便。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.6061899679829242&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTjYA6w8kATLQozqakeicm5FCB0XMvricMuxqktpVwHwRwno23D1273GdQ2TeEyoQbV0GLOszS2B519Fw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;937&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3、鼠标手势（下右）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;鼠标手势同样也是一种不需要精准选择的操作，只需要按住划出“&lt;strong&gt;L&lt;/strong&gt;”形轨迹（&lt;strong&gt;下右&lt;/strong&gt;）就可以关闭当前标签页。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;设置“&lt;strong&gt;Z&lt;/strong&gt;”形轨迹（右下右）还可以一键关闭右侧的标签页。（详细回复关键字 &lt;strong&gt;C09&lt;/strong&gt;）&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4、鼠标中键点击&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过鼠标中键点击也可以关闭当前标签页，但因为中键点击需要花费的力气更大，所以使用的人群不太多。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不过，中键是一个通用性很强的操作，比如使用中键点击链接和书签，都可以让它们在&lt;strong&gt;新标签中打开&lt;/strong&gt;。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;5、Shift 连选、Ctrl 点选&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;按 &lt;strong&gt;Shift&lt;/strong&gt; 键可以用于&lt;strong&gt;连续选择标签页&lt;/strong&gt;，就像按 Shift 可以连续选择文件一样，而如果要点选标签页，则可以使用 &lt;strong&gt;Ctrl&lt;/strong&gt; 键来选择。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;351&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.6066066066066066&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjbfhBsGvF0oRF0CgfRImDJ3Bf3QkJ6wbavrtiahpyAymBVNic4MHVOknlcjxqYNAwLH9dQJu2Yz7BKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2664&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;选中后，不管是&lt;strong&gt;点击关闭按钮&lt;/strong&gt;，还是使用&lt;strong&gt;快捷键 Ctrl+W&lt;/strong&gt;，又或者是&lt;strong&gt;使用鼠标手势“下右”&lt;/strong&gt;，都可以一键关闭这些选中的标签页。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;6、其他方法&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;此外，关闭标签页还可以用“&lt;strong&gt;鼠标右键点击&lt;/strong&gt;”，&quot;&lt;strong&gt;页面空白处双击&lt;/strong&gt;&quot;等方法，但它改&lt;/span&gt;&lt;span&gt;变了浏览器的操作逻辑，&lt;span&gt;所以我并不建议&lt;/span&gt;这样操作&lt;/span&gt;&lt;span&gt;。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;结尾&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;内存占用大的问题，说到底是&lt;strong&gt;因为软件的发展速度大于硬件导致&lt;/strong&gt;。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个现象还被称之为“&lt;strong&gt;安迪-比尔定律&lt;/strong&gt;”。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;安迪，指的是英特尔公司 CEO 安迪·格罗夫，比尔，则指的是微软公司创始人比尔·盖茨，他们分别代表&lt;strong&gt;硬件厂商和软件公司&lt;/strong&gt;。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;硬件厂商通过“&lt;strong&gt;摩尔定律&lt;/strong&gt;”提升了硬件的性能，而软件公司会不断地开发出更庞大、更消耗资源的软件，把硬件提升的性能给抵消了。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;What Andy gives, Bill takes away.&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，你五前年买的顶配电脑，到现在可能已经跑不动最新的英雄联盟了。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/5VykXMQgTjbfhBsGvF0oRF0CgfRImDJ3Xr6AP9O4Sib6IyMtAw7iaBPRJoZwicE990D52rutqAp8OU0auQRMOruqg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1920&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但随着“&lt;strong&gt;摩尔定律&lt;/strong&gt;”逐渐失效，软件不再可能肆无忌惮地占用电脑资源，软件就需要进行自我优化。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;今天就从浏览器开始吧！&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;span&gt;回复关键字&lt;br/&gt;&lt;span&gt;&lt;strong&gt;i&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;查看本系列的所有文章，&lt;br/&gt;回复关键字&lt;br/&gt;&lt;span&gt;&lt;strong&gt; i26&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;获取本文提到的所有资源&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;最近文章：&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwMjUyNzYxMw==&amp;amp;mid=2247487593&amp;amp;idx=1&amp;amp;sn=14d56c0fd1ddf00d05255d8b461029b5&amp;amp;chksm=9ac8487badbfc16d38103ac7c5fbd9912658006bccbb877f7c10d109d68e7a7f4829a5189a89&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-backh=&quot;96&quot; data-backw=&quot;546&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;96&quot; data-ratio=&quot;0.175&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjYA6w8kATLQozqakeicm5FCBYtjmYxGCErN0F8RIf1lkiaFicciaIvyZqVbny75VdHibjNh5pHBuV2kibRA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwMjUyNzYxMw==&amp;amp;mid=2247487443&amp;amp;idx=1&amp;amp;sn=0ca7bf1039e9496258ae7ccca4deddd3&amp;amp;chksm=9ac857c1adbfded7b12f5007467deba0359cb9ee90c5dbc46701fe562cf7f7ad5e66c0df7bd7&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-backh=&quot;96&quot; data-backw=&quot;546&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;96&quot; data-ratio=&quot;0.175&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjYWzIGwsibbSFlM8aC8SR7I7l0ibHWJ2tlg9E2Nyw99I5zbgFbRibBMSiaUpIYPcUYiaZAAPxuu9H6ibQkQ/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwMjUyNzYxMw==&amp;amp;mid=2247487574&amp;amp;idx=1&amp;amp;sn=79e1dbed23be6a79122dd5826f2b2273&amp;amp;chksm=9ac84844adbfc1526de3fefb75986c4023689cc299923016f395265a7453695047cf1edd4ec8&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-backh=&quot;96&quot; data-backw=&quot;546&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;546&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;96&quot; data-ratio=&quot;0.175&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjYnpnC6b3YWpfHZRVcp2ZR3SURqMr3dcxFWAemFsOvibDqLwicMla18iaPtukTEOB4vWg2SvaBtnbWKw/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;看完文章：&lt;/strong&gt;&lt;strong&gt;&lt;br/&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;点在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，帮助更多的人看到这篇文章。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;2、&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;写留言&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，对文章进行评论，我会尽可能回复。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;3、&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;点关注&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，关注我并星标，第一时间获取更新。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.47&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5VykXMQgTjb9IjZa7tpqzzqKpIpXpS41526J4ZCxbmcyls9rrnbvAtDTaNZj8mibmYJ8vhchSed53h2BKN1OlKQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;900&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>