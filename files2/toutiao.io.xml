<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>bafd3512452739856feed3f1661b0411</guid>
<title>计算广告与推荐系统有哪些区别？使用的主流模型有哪些？</title>
<link>https://toutiao.io/k/p3df6c4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;27&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;27&quot; data-custom=&quot;#1e9be8&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;点击标题下「&lt;em&gt;&lt;strong&gt;搜索与推荐Wiki&lt;/strong&gt;&lt;/em&gt;」可快速关注&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;93040&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;92886&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;▼&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;精彩推荐&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;▼&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;1、&lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDU3OTgyOQ==&amp;amp;mid=2247489084&amp;amp;idx=1&amp;amp;sn=8f383581223304d93ca925cf672597f8&amp;amp;chksm=ea66dea6dd1157b01662d93a854f9fee6a80ad677ddfb1adeb10510ae47f8eaf2f8ab6cc1260&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;最差的算法工程师也不过如此了&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;2、&lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDU3OTgyOQ==&amp;amp;mid=2247488827&amp;amp;idx=1&amp;amp;sn=6248ecc4422d5f0afe29e81ddb796936&amp;amp;chksm=ea66dda1dd1154b7ff30410061f2541a6dba008017bcfebd44c61d507a8d09c4462f2e3ea34c&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;算法工程师的数学基础｜如何理解概率分布函数和概率密度函数&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;3、&lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDU3OTgyOQ==&amp;amp;mid=2247488336&amp;amp;idx=1&amp;amp;sn=c0235b26b1cd9a1a5a1ee72d49f4093e&amp;amp;chksm=ea66dbcadd1152dc04337b956e27e37b2eccc14aef9f31b403874d0333b2c4b7acbb07361ccd&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;特征工程｜连续特征的常见处理方式（含实例）&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;4、&lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDU3OTgyOQ==&amp;amp;mid=2247488050&amp;amp;idx=1&amp;amp;sn=5cbc4b48dc49f541d96a418769263d22&amp;amp;chksm=ea66daa8dd1153be05fffc0826136244e12fbce9f3f7ce056a11e7e2b4720cc7fde606adcade&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;论文｜从DSSM语义匹配到Google的双塔深度模型召回和广告场景中的双塔模型思考&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;导读：&quot;计算广告与推荐系统有哪些区别？&quot;、&quot;&lt;strong&gt;&lt;span&gt;目前各公司广告算法使用的主流模型有哪些&lt;/span&gt;&lt;/strong&gt;？&quot;&lt;/strong&gt;&lt;span&gt;，又到了小编逛知乎的日子^_^，今天为大家带来2条来自知乎大佬王喆和付鹏老师的解答，希望对从事和即将从事计算广告或推荐领域的小伙伴有所帮助~&lt;/span&gt;&lt;strong/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;01&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;计算广告与推荐系统有哪些区别？&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;来自王喆老师的解答：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1702970297029703&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjgl93AcYb6Yd09DYib3bLGgyV5IBQGS2CtF9RYPiaZbRuPwSv16lGYW1jiaT375K2hKHtmTecHJWCug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;505&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这是个好问题，但两年前看到这个问题的时候还不太敢回答，总觉得对于两块业务理解的还不够，今天尝试着答一下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我工作后最开始四年是做计算广告算法和系统的，最近两年逐渐转到推荐系统领域。感觉这两个领域的联系大于区别，区别的根本在于两个领域尝试解决的问题是不同的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;正是因为要处理问题的不同，导致了两个领域思考方式的不同。比如同样是构建一个CTR模型：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对于计算广告系统来说，站的角度更多的是用这个CTR模型产生更多的收益，那么在使用的时候就更偏向于将CTR高的广告全都排在前面。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;而对于推荐系统来说，在使用CTR模型的时候，就不适宜全部按照CTR来进行内容排序。而是要兼顾内容的多样性，新颖性，和流行度。因为推荐系统的核心是用户体验，如果涸泽而渔的全部用根据用户行为历史生成的推荐内容，很容易让用户疲倦、透支用户的兴趣。那么为了照顾用户的整体体验并挖掘用户的长期兴趣，就要考虑用户在不同体验阶段的感受和行为特点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;再回到计算广告，由于广告系统处理的是一个三方利益的协调问题，那么为了&quot;协调&quot;，就诞生了很多相关且必要的技术。比如，&quot;协调&quot;的本质其实一种博弈方式，广告主和媒体关于价格的博弈，广告主之间的价格博弈，正是这种博弈的存在，使得计算广告一定要去关注基于博弈论的bidding策略。而且为了&quot;协调&quot;广告主、媒体的相关操作，诞生了支持性的相应模块，去处理广告排期、定向、预算控制等模块，这里面当然涉及大量算法和模型，比如处理广告排期需要最优化理论的支持，定向需要各类预测模型，预算控制需要控制论的一些知识等等。这些都是推荐系统里不存在的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果列举出两个领域重点要考虑的技术问题，大家也能体会到二者的不同 ( 排名大致分先后 )：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然，具体的技术问题这里肯定会有遗漏，但大家肯定也能感觉出来计算广告问题涉及的方向更广、需要各模块相互配合，协调；而推荐系统则涉及的问题更细，需要把所有技术都糅合在最终的推荐列表中，但要同时照顾多方面的体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后谈一下作为&quot;计算广告算法工程师&quot;和&quot;推荐系统算法工程师&quot;的区别。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我的答案是没有区别，都是那种领域知识学到死，业界更新快到飞，时刻游走在被淘汰和马上被淘汰边缘的职业体验。。。共勉。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;02&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;目前各公司广告算法使用的主流模型有哪些？&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;听说由于涉及钱，大多数还都是简单用个LR，然后堆特征，真是这样吗？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;来自付鹏老师的解答：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.19759036144578312&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjgl93AcYb6Yd09DYib3bLGgSEAgcZskxcJKFkib9HhG6IKiad2n0iaGA31d7P7wIOicl4cW2geyhoIKLg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;415&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不是这样的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个说法从有NN开始一直说到今天，起初，它还有一定的道理，牺牲可解释性和稳定性带来的一点性能提升的trade-off是否值得在早些年是值得探讨的。然而，慢慢的，时代变了，NN的性能显著高于LR，这时再没有人管可解释性了，毕竟，能赚钱的model才是好model。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面介绍一些模型，选取标准是：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;由工业界提出的实战模型&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;一经发表即引发大量关注的”明星模型“&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;经过工业界考验，大家普遍认可的&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;文中提到的模型基本都是召回和排序的模型，计算广告领域的其他业务，如定价、匹配、流量分发等等，用到的技术会有区别。大体上来讲，神经网络大体有如下几个山头（并不严格正交）：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DNN / Wide and Deep / 加入Attention 的 model / Multi-task 的 model&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;具体地，现在主流使用的模型和方法包括（部分久经考验、不需介绍的经典模型省略介绍）：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 传统机器学习模型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 深度学习模型&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;① 纯DNN模型：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DNN在CNN制霸ImageNet后，就不断有NN在排序模型的尝试，在Google放出自己youtube的排序模型是纯粹的DNN&lt;/span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;span&gt;之前，DNN就已经成为主流了，这篇工作放出来后，就更少有人和神经网络过不去了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.8292158968850698&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjgl93AcYb6Yd09DYib3bLGgkR8ZhOOcJEcCRRkEnnV5Ve9hO1aoydqOUhWgQ90lU5GtTf1pHRbxwA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;931&quot; data-backw=&quot;578&quot; data-backh=&quot;479&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Youtube DNN(2016)，简单的vector pooling加上手工特征工程concat直接送入DNN，是大多数工业界早期尝试DNN的通用做法&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;② 双塔系列模型：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DSSM及变种&lt;/span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;span&gt;：DSSM模型是微软发表的一篇工作，本用于语义匹配，后被移植至排序模型--这个intuition是很自然的，毕竟语义匹配本质上也是一类排序问题。双塔模型的最大特点就是user和item是独立的两个子网络，对工业界十分友好，两个塔可以各自缓存，线上infer只需要取出缓存做有限的运算即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6318785578747628&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjgl93AcYb6Yd09DYib3bLGg3Fkw6vjbTPWJpeMegEziaYhXS6s2gBMgEFINK5nWVZ6Af2xnfgMLwcw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1054&quot; data-backw=&quot;578&quot; data-backh=&quot;365&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;朴素的DSSM双塔模型(2015)，每个塔互相独立，可各自缓存&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;③ Wide and Deep 系列模型[5]：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Wide and Deep及后续的模型家族是现在业界应用最广泛的深度学习模型，其主要原因在于模型结构就融合了传统机器学习模型和DNN，从而能够既有LR的记忆性，又有DNN的泛化性，加上模型复杂度加强，其上限是远高于LR的。对于有DNN PTSD的人来说，有一个LR在模型中，也显得可靠许多。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.21490196078431373&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjgl93AcYb6Yd09DYib3bLGgEzvkpVicyicLHfQXEDWiaZAZIGibAjQBHxHia3UGl1OYLibohh5uw1xhicnmQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1275&quot; data-backw=&quot;578&quot; data-backh=&quot;124&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Wide and Deep(2016)，清晰明了的模型图。有一说一，Google的网络结构图都画得很漂亮&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.49464668094218417&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjgl93AcYb6Yd09DYib3bLGgEj2iaR5oxzZBT9RS4kiaSSVRQ6GY9wnibG9nfurOxlIstOrKicHIlv5zWw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;934&quot; data-backw=&quot;578&quot; data-backh=&quot;286&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;④ Deep Interest Network（DIN）[7]：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;阿里妈妈的工作，是Attention风行以来较热门的一篇，简单地说，把DNN中的sum pooling/mean pooling的工作换成了自己的Attention实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5240793201133145&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjgl93AcYb6Yd09DYib3bLGgibqNJFlhKMfic0NUSUIhyQD4iaSUSRgz4ytDCQEvmLNDl2SS4my7e2eicw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1412&quot; data-backw=&quot;578&quot; data-backh=&quot;303&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;⑤ 其他：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面罗列一些思想值得借鉴，但因种种原因尚未广泛被采纳的模型：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Deep Cross Network（DCN）[8]：我很喜欢这篇文章的创意，源自Wide and Deep，deep端引入了类似resnet的残差结构，以及无限的特征交叉，带来了理论上任意高阶的特征交叉能力，但工作本身算不上经典，故不放图了，有兴趣可去参考文献自寻。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Deep Interest Evolution Network（DIEN）[9]：阿里妈妈在DIN上的后续工作把DIN中的attention + sum pooling部分换成了sequential model + attention，然而一个问题是，RNN是不能并行的，且参数量巨大的，所以截止2019年底，几乎所有的RNN based paper都沦为paper work，并没有大规模上线的能力，故不放图。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;BST[10]:阿里手淘工作，Transformer 引入 recsys，详略。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;强化学习模型：强化学习是不好评价的，在强化学习的一些工作中，我们无法明确，究竟是模型起了作用，还是精心构造的reward起了作用，更多的工作甚至无法说服自己满足MDP的基本假设。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Youtube的强化学习(2019)[11]：号称youtube近年最大提升，使用强化学习，网络结构十分简单。在bilibili上有youtube相关人员的分享，可以参考：https://www.bilibili.com/video/av47720781/，但是建议思考一下为什么Youtube的交互场景能够使用强化学习，自己的场景是否能够使用强化学习？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;以上模型和工作，如果让我只挑选最经典的话，我选择：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对工业界而言，这三个模型依次适用于从小到大的业务规模。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;小编：小伙伴们，你们的公司目前采用的什么模型呢？有没有一些实践的经验分享呢？欢迎大家在留言区进行讨论哦！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;03&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;原文及参考链接&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;原文链接：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.zhihu.com/question/19662693/answer/757347092&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.zhihu.com/question/352306163/answer/902698330&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;参考资料：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.Practical Lessons from Predicting Clicks on Ads at Facebook&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://quinonero.net/Publications/predicting-clicks-facebook.pdf&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.Deep Neural Networks for YouTube Recommendations&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://static.googleusercontent.com/media/research.google.com/zh-CN//pubs/archive/45530.pdf&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.Learning Deep Structured Semantic Models for Web Search using Clickthrough Data&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/cikm2013_DSSM_fullversion.pdf&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4.A Multi-View Deep Learning Approach for Cross Domain User Modeling in Recommendation Systems&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/frp1159-songA.pdf&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5.Wide &amp;amp; Deep Learning for Recommender Systems&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://arxiv.org/abs/1606.07792&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;6.DeepFM: A Factorization-Machine based Neural Network for CTR Prediction&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.ijcai.org/proceedings/2017/0239.pdf&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;7.Search Results Web results Deep Interest Network for Click-Through Rate Prediction&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://arxiv.org/pdf/1706.06978.pdf&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;8.Deep &amp;amp; Cross Network for Ad Click Predictions&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://arxiv.org/abs/1708.05123&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;9.Prediction&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://arxiv.org/abs/1809.03672&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;10.Behavior Sequence Transformer for E-commerce Recommendation in Alibaba&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://arxiv.org/pdf/1905.06874.pdf&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;11.Top-K Off-Policy Correction for a REINFORCE Recommender System&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http://alexbeutel.com/papers/wsdm2019_reinforce_recs.pdf&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;今天的分享就到这里，谢谢大家。&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;关于我：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;【Thinkgamer】&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;《推荐系统开发实战》作者，CSDN博客专家，推荐算法工程师！搜索与推荐Wiki公众号维护者！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;【搜索与推荐Wiki】&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;专注于搜索和推荐系统，以系列分享为主，持续打造精品内容！&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;img data-backh=&quot;68&quot; data-backw=&quot;548&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/US10Gcd0tQE78f7dkJNjBgeibxuxoocvlffpMYExnaMsoibbMSK8LKYTwX96ATu94u3AVTWEB4ibIvYf5jSibN7kIA/0&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1257.0609318996414&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;155.9856630824373&quot; data-ratio=&quot;0.12410501193317422&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/c6gqmhWiafypu8xMx0VGdz69F9YhVguXuME1NXHKBJvbXrGQUqA33gM6papce4MI1p7licuSL2uPbw5oXkA0YXWQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1257&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-id=&quot;15650&quot; data-md5=&quot;75556&quot;&gt;&lt;section label=&quot;Powered by xmyeditor.com&quot; data-tools=&quot;小蚂蚁编辑器&quot; data-md5=&quot;75556&quot;&gt;&lt;section data-id=&quot;15679&quot; data-md5=&quot;d2aaa&quot;&gt;&lt;section label=&quot;Powered by xmyeditor.com&quot; data-tools=&quot;小蚂蚁编辑器&quot; data-md5=&quot;d2aaa&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;d2aaa&quot;&gt;&lt;section powered-by=&quot;xmyeditor.com&quot; data-md5=&quot;d2aaa&quot;&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.1875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/BwrOLGIZh5VJ5cTognH6VYpqmmNdicGuk37yuQiafTlDm8sxlPHyMaw8uIOXr4lNOb7zetTSGDV3HiaDVM50uKGxw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;128&quot; data-width=&quot;10%&quot;/&gt;&lt;span&gt;   &lt;/span&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.1875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/BwrOLGIZh5VJ5cTognH6VYpqmmNdicGuk37yuQiafTlDm8sxlPHyMaw8uIOXr4lNOb7zetTSGDV3HiaDVM50uKGxw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;128&quot; data-width=&quot;10%&quot;/&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;95390&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;3735&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88589&quot;&gt;&lt;section data-width=&quot;98%&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;p&gt;真正的努力，&lt;span&gt;都&lt;/span&gt;&lt;span&gt;不喧&lt;/span&gt;&lt;span&gt;嚣！&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;40%&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/02kicEWsInicjw3UYDKaIRFbgdoWpOzJ4sxvNrGv2k5Pbob5icVWmsfFgrbc2RiaABlhrCJH51d7aZc6AiaTcFKHIfg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;344&quot; data-width=&quot;100%&quot;/&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;搜索与推荐Wiki&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;span&gt;All In CTR、DL、ML、RL、NLP&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;95390&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;94250&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;91842&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/02kicEWsInicj3oK9alStElyMzciafsRKaV1hV9PFP4icRkALfLsbJOsRbYgoh6S4tryiaY2EiauhrtZsH3f3tBDn6aQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;400&quot;/&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;分享，点赞，在看，安排一下？&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ef071c0211747bd9efd50fe77f2da0e5</guid>
<title>分布式事务精华总结篇，实打实的干货</title>
<link>https://toutiao.io/k/xdryz90</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>87aae7134f6ac7e63a8339f52cb3d45a</guid>
<title>架构设计：基于 Seata 中间件，微服务模式下事务管理</title>
<link>https://toutiao.io/k/dud78g9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;h1&gt;&lt;span&gt;一、Seata简介&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;1、Seata组件&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;Seata是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。Seata将为用户提供了AT、TCC、SAGA、XA事务模式，为用户打造一站式的分布式解决方案。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;2、支持模式&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;AT 模式&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;基于支持本地 ACID 事务的关系型数据库。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Java应用，通过 JDBC 访问数据库。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;一阶段：业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。&lt;/p&gt;&lt;p&gt;二阶段：提交异步化，非常快速地完成。回滚通过一阶段的回滚日志进行反向补偿。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;TCC模式&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;一个分布式的全局事务，整体是两阶段提交的模型，全局事务是由若干分支事务组成的，分支事务要满足两阶段提交的模型要求，即需要每个分支事务都具备自己的：&lt;/p&gt;&lt;p&gt;一阶段 prepare 行为&lt;/p&gt;&lt;p&gt;二阶段 commit 或 rollback 行为&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Saga模式&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Saga模式是SEATA提供的长事务解决方案，在Saga模式中，业务流程中每个参与者都提交本地事务，当出现某一个参与者失败则补偿前面已经成功的参与者，一阶段正向服务和二阶段补偿服务都由业务开发实现。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;XA模式&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;XA是一个分布式事务协议，对业务无侵入的分布式事务解决方案，XA提交协议需要事务参与者的数据库支持，XA事务具有强一致性，在两阶段提交的整个过程中，一直会持有资源的锁，性能不理想的缺点很明显。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;二、服务端部署&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;1、下载组件包&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;1.2版本：seata-server-1.2.0.zip&lt;/p&gt;&lt;p&gt;解压目录&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;bin：存放服务端运行启动脚本;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;lib：存放服务端依赖的资源jar包；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;conf：配置文件目录。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;2、修改配置&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;file.conf配置&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;mode:db 即使用数据库存储事务信息，这里还可以选择file存储方式。&lt;/p&gt;&lt;p&gt;file模式为单机模式，全局事务会话信息内存中读写并持久化本地文件root.data，性能较高;&lt;/p&gt;&lt;p&gt;db模式为高可用模式，全局事务会话信息通过db共享，相应性能差些;&lt;/p&gt;&lt;p&gt;redis模式Seata-Server 1.3及以上版本支持,性能较高,存在事务信息丢失风险,请提前配置合适当前场景的redis持久化配置.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;store&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;## store mode: file、db&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;mode&lt;/span&gt; = &lt;span&gt;&quot;db&quot;&lt;/span&gt;&lt;br/&gt;  db {&lt;br/&gt;    &lt;span&gt;datasource&lt;/span&gt; = &lt;span&gt;&quot;druid&quot;&lt;/span&gt;&lt;br/&gt;    dbType = &lt;span&gt;&quot;mysql&quot;&lt;/span&gt;&lt;br/&gt;    driverClassName = &lt;span&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;&lt;br/&gt;    url = &lt;span&gt;&quot;jdbc:mysql://127.0.0.1:3306/seata_server&quot;&lt;/span&gt;&lt;br/&gt;    user = &lt;span&gt;&quot;root&quot;&lt;/span&gt;&lt;br/&gt;    password = &lt;span&gt;&quot;123456&quot;&lt;/span&gt;&lt;br/&gt;    minConn = &lt;span&gt;5&lt;/span&gt;&lt;br/&gt;    maxConn = &lt;span&gt;30&lt;/span&gt;&lt;br/&gt;    globalTable = &lt;span&gt;&quot;global_table&quot;&lt;/span&gt;&lt;br/&gt;    branchTable = &lt;span&gt;&quot;branch_table&quot;&lt;/span&gt;&lt;br/&gt;    lockTable = &lt;span&gt;&quot;lock_table&quot;&lt;/span&gt;&lt;br/&gt;    queryLimit = &lt;span&gt;100&lt;/span&gt;&lt;br/&gt;    maxWait = &lt;span&gt;5000&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;registry.conf配置&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这里选择eureka作为注册中心，seata-server也要作为一个服务添加到注册中心，不使用配置中心所以config配置默认即可。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;registry&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;# file 、nacos 、eureka、redis、zk、consul、etcd3、sofa&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;type&lt;/span&gt; = &lt;span&gt;&quot;eureka&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  eureka {&lt;br/&gt;    &lt;span&gt;serviceUrl&lt;/span&gt; = &lt;span&gt;&quot;http://localhost:8761/eureka&quot;&lt;/span&gt;&lt;br/&gt;    application = &lt;span&gt;&quot;default&quot;&lt;/span&gt;&lt;br/&gt;    weight = &lt;span&gt;&quot;1&quot;&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;3、事务管理表&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;需要在seata-server即上述配置的MySQL库中建立3张事务管理表：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;全局事务：global_table&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;分支事务：branch_table&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;全局锁：lock_table&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;事务回滚：undo_log&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;SQL脚本：mysql-script目录&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;4、启动命令&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;Linux环境：sh seata-server.sh&lt;/p&gt;&lt;h1&gt;&lt;span&gt;三、业务服务搭建&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;1、代码结构&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7702020202020202&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCZAyTWOm1vgOZGibh8EiaPqwWia50bpWlouVdxdE9ZRE4XcgSDLVlaVsOtCAh3f3ONCHqzZCSXF43aQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;792&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;请求链路&lt;/strong&gt;：客户端-&amp;gt;订单-&amp;gt;账户+库存，测试整个流程的分布式事务问题。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;2、数据库结构&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.35658914728682173&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCZAyTWOm1vgOZGibh8EiaPqwaMnXMRsIf5GKrHtIKicPlobFXW7j8oLPHfW2kgicbbcGdnQnZRgAVHEg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;516&quot;/&gt;&lt;/p&gt;&lt;p&gt;各个库脚本位置：mysql-script/data-biz.sql&lt;/p&gt;&lt;h2&gt;&lt;span&gt;3、启动服务&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;依次启动：注册中心，库存服务，账户服务，订单服务，客户端服务；&lt;/p&gt;&lt;p&gt;Eureka服务列表如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.2359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCZAyTWOm1vgOZGibh8EiaPqwRLXpBfnyF3FC4uZrectMgkwoW7yJ095qia5EdAUT4A4age6xT9z7hWw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;四、Seata用法详解&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span&gt;1、Seata基础配置&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.8852941176470588&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCZAyTWOm1vgOZGibh8EiaPqwxfjUTRWBOhWfhwgetgDIZlk45yF3pQ5glXP7a5YTWStVic6Yib5vNHibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;680&quot;/&gt;&lt;/p&gt;&lt;p&gt;几个基础服务的配置方式一样。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;conf配置&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;file.conf重点关注下面内容，事务组的名称，需要在yml文件中使用。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;my_test_tx_group&lt;/span&gt; = &lt;span&gt;&quot;default&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;registry.conf&lt;/strong&gt;：是注册中心的选择。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;2、数据库配置&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;注意这里的事务组名称配置。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;spring:&lt;br/&gt;  &lt;span&gt;# 事务组的名称&lt;/span&gt;&lt;br/&gt;  cloud:&lt;br/&gt;    alibaba:&lt;br/&gt;      seata:&lt;br/&gt;        tx-service-&lt;span&gt;group&lt;/span&gt;: my_test_tx_group&lt;br/&gt;  &lt;span&gt;# 数据源配置&lt;/span&gt;&lt;br/&gt;  datasource:&lt;br/&gt;    type: com.alibaba.druid.pool.DruidDataSource&lt;br/&gt;    druid:&lt;br/&gt;      driverClassName: com.mysql.jdbc.Driver&lt;br/&gt;      url: jdbc:mysql:&lt;span&gt;//127.0.0.1:3306/seata_account&lt;/span&gt;&lt;br/&gt;      username: root&lt;br/&gt;      password: &lt;span&gt;123456&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将数据库整体由Seata进行代理管理，核心API：DataSourceProxy。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;SeataAccountConfig&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Value&lt;/span&gt;(&lt;span&gt;&quot;${spring.application.name}&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; String applicationName;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; GlobalTransactionScanner &lt;span&gt;globalTransactionScanner&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; GlobalTransactionScanner(applicationName, &lt;span&gt;&quot;test-tx-group&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@ConfigurationProperties&lt;/span&gt;(prefix = &lt;span&gt;&quot;spring.datasource.druid&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; DruidDataSource &lt;span&gt;druidDataSource&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; DruidDataSource() ;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Primary&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;(&lt;span&gt;&quot;dataSource&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; DataSourceProxy &lt;span&gt;dataSourceProxy&lt;/span&gt;&lt;span&gt;(DataSource druidDataSource)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; DataSourceProxy(druidDataSource);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; SqlSessionFactory &lt;span&gt;sqlSessionFactory&lt;/span&gt;&lt;span&gt;(DataSourceProxy dataSourceProxy)&lt;/span&gt;&lt;span&gt;throws&lt;/span&gt; Exception&lt;/span&gt;{&lt;br/&gt;        SqlSessionFactoryBean sqlSessionFactoryBean = &lt;span&gt;new&lt;/span&gt; SqlSessionFactoryBean();&lt;br/&gt;        sqlSessionFactoryBean.setDataSource(dataSourceProxy);&lt;br/&gt;        sqlSessionFactoryBean.setMapperLocations(&lt;span&gt;new&lt;/span&gt; PathMatchingResourcePatternResolver()&lt;br/&gt;                .getResources(&lt;span&gt;&quot;classpath*:/mapper/*.xml&quot;&lt;/span&gt;));&lt;br/&gt;        sqlSessionFactoryBean.setTransactionFactory(&lt;span&gt;new&lt;/span&gt; SpringManagedTransactionFactory());&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; sqlSessionFactoryBean.getObject();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;3、业务代码&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;核心注解：GlobalTransactional，管理整体的分布式事务。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;OrderServiceImpl&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;OrderService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; Logger LOGGER = LoggerFactory.getLogger(OrderServiceImpl.class);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; OrderMapper orderMapper ;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; AccountFeign accountFeign ;&lt;br/&gt;    &lt;span&gt;@Resource&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; InventoryFeign inventoryFeign ;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@GlobalTransactional&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Integer &lt;span&gt;createOrder&lt;/span&gt;&lt;span&gt;(String orderNo)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        LOGGER.info(&lt;span&gt;&quot;Order 生成中 &quot;&lt;/span&gt;+orderNo);&lt;br/&gt;        &lt;span&gt;// 本服务下订单库&lt;/span&gt;&lt;br/&gt;        Integer insertFlag = orderMapper.insert(orderNo) ;&lt;br/&gt;        &lt;span&gt;// 基于feign接口处理账户和库存&lt;/span&gt;&lt;br/&gt;        accountFeign.updateAccount(&lt;span&gt;10L&lt;/span&gt;) ;&lt;br/&gt;        inventoryFeign.updateInventory(&lt;span&gt;10&lt;/span&gt;) ;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; insertFlag ;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;测试流程：在任意服务下抛出异常，观察整体的事务状态，观察是否有整体的事务控制效果。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;五、源代码地址&lt;/span&gt;&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;GitHub地址：知了一笑&lt;br/&gt;https:&lt;span&gt;//github.com/cicadasmile/spring-cloud-base&lt;/span&gt;&lt;br/&gt;GitEE地址：知了一笑&lt;br/&gt;https:&lt;span&gt;//gitee.com/cicadasmile/spring-cloud-base&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3783359497645212&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uUIibyNXbAvCjMheLZtcM2iaVMBOpIUKR4CDRCG9FLT5K6NmGXvG7exrW0TSuDjnTKJQ5PDq8j8Y7PHDd17Z3gicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1274&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9ca6762a8d13441ab344e492c17e5509</guid>
<title>[译] React Hooks 的丑陋一面</title>
<link>https://toutiao.io/k/eja38bo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6672413793103448&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/WYoaOn5t0AMsYJz5eLgH2GjqtZzCZOV8pd56T8Ucibkpo5fIShCQHDptCsPD2VicwFfvEVjIem0mzBia3EkDHpwag/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;580&quot;/&gt;&lt;span&gt;来源：https://medium.com/swlh，作者：Nir Yosef&lt;/span&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这篇文章中，我将分享我对React Hooks的观点，正如这篇文章的标题所暗示的那样，我不是一个忠实的粉丝。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们来分析一下React官方的文档中描述的放弃类而使用钩子的动机。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;动机1：class令人困惑&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;我们发现，class可能是学习React的一大障碍，你必须了解 &lt;code&gt;this&lt;/code&gt; 在JavaScript中的工作方式，这与大多数语言中的工作方式截然不同。你必须记住要绑定事件处理程序，代码会非常啰嗦，React中函数和类组件之间的区别，以及何时使用每个组件，甚至在有经验的React开发人员之间也会导致分歧。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好吧，我可以同意 &lt;code&gt;this&lt;/code&gt; 在你刚开始使用Javascript的时候可能会有点混乱，但是箭头函数解决了混乱，把一个已经被Typescript开箱即用支持的第三阶段功能称为“不稳定的语法建议”，这纯粹是煽动性的。React团队指的是class字段语法，该语法已经被广泛使用并且可能很快会得到正式支持：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Foo&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;.&lt;span&gt;Component&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  onPress = &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;this&lt;/span&gt;.props.someProp);&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  render() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;Button&lt;/span&gt; &lt;span&gt;onPress&lt;/span&gt;=&lt;span&gt;{this.onPress}&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如你所见，通过使用class字段箭头函数，你无需在构造函数中绑定任何内容，并且它始终指向正确的上下文。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果Class令人困惑，那么对于新的钩子函数我们能说些什么呢？钩子函数不是常规函数，因为它具有状态，看起来很奇怪的&lt;code&gt;this&lt;/code&gt;（又名&lt;code&gt;useRef&lt;/code&gt;），并且可以具有多个实例。但这绝对不是类，介于两者之间，从现在开始，我将其称为&lt;strong&gt;Funclass&lt;/strong&gt;。那么，对于人类和机器而言，那些Funclass会更容易吗？我不确定机器，但我真的不认为Funclass从概念上比类更容易理解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;类是一个众所周知的思想概念，每个开发人员都熟悉 &lt;code&gt;this&lt;/code&gt; 的概念，即使在javascript中也有所不同。另一方面，Funclass是一个新概念，一个很奇怪的概念。它们让人感觉更神奇，而且它们过于依赖惯例而不是严格的语法。你必须遵循一些严格而奇怪的规则，你需要小心你的代码放在哪里，而且有很多陷阱。还要准备好一些可怕的命名，比如 &lt;code&gt;useRef&lt;/code&gt; ( &lt;code&gt;this&lt;/code&gt; 的花哨名字)、&lt;code&gt;useEffect&lt;/code&gt; 、&lt;code&gt;useMemo&lt;/code&gt;、&lt;code&gt;useImperativeHandle&lt;/code&gt;(说什么呢？)等等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;类的语法是为了处理多实例的概念和实例范围的概念（&lt;code&gt;this&lt;/code&gt; 的确切目的）而专门发明的。Funclass只是一种实现相同目标的奇怪方式，许多人将Funclass与函数式编程相混淆，但Funclass实际上只是变相的类。类是一个概念，而不是语法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;在React中，函数和类组件之间的区别，以及何时使用每一种组件，甚至在有经验的React开发人员之间也会产生分歧。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到目前为止，这种区别非常明显——如果需要状态或生命周期方法，则使用类，否则，使用函数或类实际上并不重要。就我个人而言，我很喜欢这样的想法：当我偶然发现一个函数组件时，我可以立即知道这是一个没有状态的“哑巴组件”。遗憾的是，随着Funclasses的引入，情况不再是这样了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;mpcpc js_editor_cpcad=&quot;&quot; class=&quot;js_cpc_area cpc_iframe&quot; src=&quot;/cgi-bin/readtemplate?t=tmpl/cpc_tmpl#1600584760838&quot; data-category_id_list=&quot;1|11|16|17|24|26|29|31|35|36|37|42|43|47|48|49|5|50|51|52|53|54|55|7|8&quot; data-id=&quot;1600584760838&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;动机2：很难在组件之间重用有状态逻辑&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具有讽刺意味吗？至少在我看来，React最大的问题是它没有提供一个开箱即用的状态管理方案，让我们对应该如何填补这个空白的问题争论了很久，也为Redux等一些非常糟糕的设计模式打开了一扇门。所以在经历了多年的挫折之后，React团队终于得出了一个结论：组件之间很难共享有状态逻辑......谁能想到呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;无论如何，勾子会使情况变得更好吗？答案是不尽然。钩子不能和类一起工作，所以如果你的代码库已经用类来编写，你还是需要另一种方式来共享有状态的逻辑。另外，钩子只解决了每个实例逻辑共享的问题，但如果你想在多个实例之间共享状态，你仍然需要使用stores和第三方状态管理解决方案，正如我所说，如果你已经使用它们，你并不真正需要钩子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，与其只是治标不治本，或许React是时候行动起来，实现一个合适的状态管理工具，同时管理全局状态（stores）和本地状态（每个实例），从而彻底扼杀这个漏洞。&lt;span/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;动机3：复杂的组件变得难以理解&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你已经在使用stores，这种说法几乎没有意义，让我们看看为什么。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Foo&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;.&lt;span&gt;Component&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  componentDidMount() {&lt;br/&gt;    doA();&lt;br/&gt;    doB();&lt;br/&gt;    doC();&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个例子中，你可以看到，我们可能在 &lt;code&gt;componentDidMount&lt;/code&gt; 中混合了不相关的逻辑，但这是否会使我们的组件膨胀？不完全是。整个实现位于类之外，而状态位于store中，没有store 所有状态逻辑都必须在类内部实现，而该类确实会臃肿。但看起来React又解决了一个问题，这个问题大多存在于一个没有状态管理工具的世界里。实际上，大多数大型应用程序已经在使用状态管理工具，并且该问题已得到缓解。另外，在大多数情况下，我们也许可以将这个类分解成更小的组件，并将每个 &lt;code&gt;doSomething()&lt;/code&gt; 放在子组件的 &lt;code&gt;componentDidMount&lt;/code&gt; 中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用Funclass，我们可以编写如下代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;Foo&lt;/span&gt;(&lt;span/&gt;) &lt;/span&gt;{&lt;br/&gt;  useA();&lt;br/&gt;  useB();&lt;br/&gt;  useC();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看起来有点干净，但是是吗？我们还需要在某个地方写3个不同的useEffect钩子，所以最后我们要写更多的代码，看看我们在这里做了什么——有了类组件，你可以一目了然地知道组件在mount上做什么。在Funclass的例子中，你需要按照钩子并尝试搜索带有空依赖项数组的&lt;code&gt;useEffect&lt;/code&gt;，以了解组件在mount上做什么。生命周期方法的声明性本质上是一件好事，我发现研究Funclasss的流程要困难得多。我见过很多案例是Funclasses让开发者更容易写出糟糕的代码，我们后面会看到一个例子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是首先，我必须承认 &lt;code&gt;useEffect&lt;/code&gt; 有一些好处，请看以下示例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;useEffect(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  subscribeToA();&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    unsubscribeFromA();&lt;br/&gt;  };&lt;br/&gt; }, []);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;useEffect&lt;/code&gt; 钩子让我们将订阅和退订逻辑配对在一起。这其实是一个非常整洁的模式，同样的，把 &lt;code&gt;componentDidMount&lt;/code&gt; 和&lt;code&gt;componentDidUpdate&lt;/code&gt; 配对在一起也是如此。以我的经验，这些情况并不常见，但它们仍然是有效的用例，在这里 &lt;code&gt;useEffect&lt;/code&gt; 确实很有用。问题是，为什么我们必须使用Funclass才能获得 &lt;code&gt;useEffect&lt;/code&gt;？为什么我们的Class不能有类似的东西？答案是我们可以：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Foo&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;.&lt;span&gt;Component&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;   someEffect = effect(&lt;span&gt;(&lt;span&gt;value1, value2&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;     subscribeToA(value1, value2);&lt;br/&gt;     &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;        unsubscribeFromA();&lt;br/&gt;     };&lt;br/&gt;   })&lt;br/&gt;   render(){&lt;br/&gt;    &lt;span&gt;this&lt;/span&gt;.someEffect(&lt;span&gt;this&lt;/span&gt;.props.value1, &lt;span&gt;this&lt;/span&gt;.state.value2);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;Text&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello world&lt;span&gt;&amp;lt;/&lt;span&gt;Text&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;   &lt;br/&gt;   }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;effect&lt;/code&gt; 函数将记住给定的函数，并且仅当其参数之一已更改时才会再次调用它。通过从我们的render函数内部触发效果，我们可以确保它在每次渲染/更新时都被调用，但只有当它的一个参数被改变时，给定的函数才会再次运行，所以我们在结合 &lt;code&gt;componentDidMount&lt;/code&gt; 和 &lt;code&gt;componentDidUpdate&lt;/code&gt; 方面实现了类似 &lt;code&gt;useEffect&lt;/code&gt; 的效果，但遗憾的是，我们仍然需要在 &lt;code&gt;componentWillUnmount&lt;/code&gt; 中手动进行最后的清理。另外，从render内调用效果函数也有点丑。为了得到和useEffect完全一样的效果，React需要增加对它的支持。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最重要的是 &lt;code&gt;useEffect&lt;/code&gt; 不应该被认为是进入funclass的有效动机，它本身就是一个有效的动机，也可以为类实现。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;动机4：性能&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;React团队说类很难优化和最小化，funclass应该以某种方式改进，关于这件事，我只有一件事要说——&lt;strong&gt;给我看看数字&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我至今找不到任何论文，也没有我可以克隆并运行以比较Funclasses VS Class的性能的基准演示应用程序。事实上，我们没有看到这样的演示并不奇怪——Funclasses需要以某种方式实现这个功能（如果你喜欢的话，也可以用Ref），所以我很期待那些让类难以优化的问题，也会影响到Funclasses。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不管怎么说，所有关于性能的争论，在不展示数据的情况下实在是一文不值，所以我们真的不能把它作为论据。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;动机5：Funclass不太冗长&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你可以找到很多通过将Class转换为Funclass来减少代码的例子，但大多数甚至所有的例子都利用了 &lt;code&gt;useEffect&lt;/code&gt; 钩子，以便将 &lt;code&gt;componentDidMount&lt;/code&gt; 和 &lt;code&gt;componentWillUnmount&lt;/code&gt; 结合在一起，从而达到极大的效果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但正如我前面所说，&lt;code&gt;useEffect&lt;/code&gt; 不应该被认为是Funclass的优势，如果忽略它所实现的代码减少，那么只会留下非常小的影响。而且，如果你尝试使用 &lt;code&gt;useMemo&lt;/code&gt;，&lt;code&gt;useCallback&lt;/code&gt; 等来优化Funclass，你甚至可能得到比等效类更冗长的代码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当比较小而琐碎的组件时，Funclasses毫无疑问地赢了，因为类有一些固有的模板，无论你的类有多小你都需要付出。但在比较大的组件时，你几乎看不出差别，有时正如我所说，类甚至可以更干净。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，我不得不对 &lt;code&gt;useContext&lt;/code&gt; 说几句：useContext其实比我们目前原有的类的context API有很大的改进。但是再一次，为什么我们不能为类也有这样漂亮而简洁的API呢？为什么我们不能做这样的事情。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;//inside &quot;./someContext&quot; :&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; someContext = React.Context({&lt;span&gt;helloText&lt;/span&gt;: &lt;span&gt;&#x27;bla&#x27;&lt;/span&gt;});&lt;br/&gt;&lt;br/&gt;&lt;span&gt;//inside &quot;Foo&quot;:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; {someContext} &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./someContext&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Foo&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;React&lt;/span&gt;.&lt;span&gt;component&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;   render() {&lt;br/&gt;      &amp;lt;View&amp;gt;&lt;br/&gt;        &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;Text&lt;/span&gt;&amp;gt;&lt;/span&gt;{someContext.helloText}&lt;span&gt;&amp;lt;/&lt;span&gt;Text&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;      &amp;lt;&lt;span&gt;/View&amp;gt;&lt;br/&gt;   }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当上下文中的 &lt;code&gt;helloText&lt;/code&gt; 发生变化时，组件应该重新渲染以反映这些变化。就是这样，不需要丑陋的高阶组件（HOC）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，为什么React团队选择只改进useContext API而不是常规content API？我不知道，但这并不意味着Funclass本质上更干净。这意味着React应该通过为类实现相同的API改进来做得更好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此，在提出有关动机的问题之后，让我们看一下我不喜欢的有关Funclass的其他内容。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;隐藏的副作用&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在Funclasses的 &lt;code&gt;useEffect&lt;/code&gt; 实现中，最让我困扰的一件事，就是没有弄清楚某个组件的副作用是什么。对于类，如果你想知道一个组件在挂载时做了什么，你可以很容易地检查 &lt;code&gt;componentDidMount&lt;/code&gt; 中的代码或检查构造函数。如果你看到一个重复的调用，你可能应该检查一下 &lt;code&gt;componentDidUpdate&lt;/code&gt;，有了新的 &lt;code&gt;useEffec&lt;/code&gt; t钩子，副作用可以深深地嵌套在代码中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设我们检测到一些不必要的服务器调用，我们查看可疑组件的代码，然后看到以下内容：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; renderContacts = &lt;span&gt;(&lt;span&gt;props&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; [contacts, loadMoreContacts] = useContacts(props.contactsIds);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; (&lt;br/&gt;    &lt;span&gt;&lt;span&gt;&amp;lt;&lt;span&gt;SmartContactList&lt;/span&gt; &lt;span&gt;contacts&lt;/span&gt;=&lt;span&gt;{contacts}/&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;  )&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里没什么特别的，我们应该研究 &lt;code&gt;SmartContactList&lt;/code&gt;，还是应该深入研究 &lt;code&gt;useContacts&lt;/code&gt;？让我们深入研究一下 &lt;code&gt;useContacts&lt;/code&gt; 吧：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; useContacts = &lt;span&gt;(&lt;span&gt;contactsIds&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; {loadedContacts, loadingStatus}  = useContactsLoader();&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; {isRefreshing, handleSwipe} = useSwipeToReresh(loadingStatus);&lt;br/&gt;  &lt;span&gt;// ... many other useX() functions&lt;/span&gt;&lt;br/&gt;  useEffect(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;//** 很多代码，都与一些加载联系人的动画有关。*//&lt;/span&gt;&lt;br/&gt;  &lt;br/&gt;  }, [loadingStatus]);&lt;br/&gt;  &lt;br/&gt;  &lt;span&gt;//..rest of code&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好的，开始变得棘手。隐藏的副作用在哪里？如果我们深入研究 &lt;code&gt;useSwipeToRefresh&lt;/code&gt;，我们将看到：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; useSwipeToRefresh = &lt;span&gt;(&lt;span&gt;loadingStatus&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;// ..lot&#x27;s of code&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;  &lt;br/&gt;  useEffect(&lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(loadingStatus === &lt;span&gt;&#x27;refresing&#x27;&lt;/span&gt;) {&lt;br/&gt;       refreshContacts(); &lt;span&gt;// bingo! 我们隐藏的副作用&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }); &lt;span&gt;//&amp;lt;== 我们忘记了依赖项数组！&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们发现了我们的隐藏效果，&lt;code&gt;refreshContacts&lt;/code&gt; 会在每个组件渲染时意外地调用fetch contacts。在大型代码库和某些结构不良的组件中，嵌套的 &lt;code&gt;useEffect&lt;/code&gt; 可能会造成麻烦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我并不是说你不能用类编写糟糕的代码，但是Funclasses更容易出错，而且没有严格定义生命周期方法的结构，更容易做糟糕的事情。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;膨胀的API&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过在类的同时增加钩子API，React的API实际上增加了一倍。现在每个人都需要学习两种完全不同的方法，我必须说，新API比旧API晦涩得多。一些简单的事情，如获得之前的props和state，现在都成了很好的面试材料。你能写一个钩子获得之前得 props 在不借助google的情况下？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;像React这样的大型库必须非常小心地在API中添加如此巨大的更改，这样做的动机甚至是不合理的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;mpcpc js_editor_cpcad=&quot;&quot; class=&quot;js_cpc_area cpc_iframe&quot; src=&quot;/cgi-bin/readtemplate?t=tmpl/cpc_tmpl#1600584742726&quot; data-category_id_list=&quot;1|11|16|17|24|26|29|31|35|36|37|42|43|47|48|49|5|50|51|52|53|54|55|7|8&quot; data-id=&quot;1600584742726&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;缺乏说明性&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在我看来，Funclass比类更混乱。例如，要找到组件的切入点就比较困难——用classes只需搜索 &lt;code&gt;render&lt;/code&gt; 函数，但用Funclasses就很难发现主return语句。另外，要按照不同的 useEffect 语句来理解组件的流程是比较困难的，相比之下，常规的生命周期方法会给你一些很好的提示，让你知道自己的代码需要在哪里寻找。如果我正在寻找某种初始化逻辑，我将跳转（VSCode中的cmd + shift + o）到 &lt;code&gt;componentDidMount&lt;/code&gt;，如果我正在寻找某种更新机制，则可能会跳到 &lt;code&gt;componentDidUpdate&lt;/code&gt; 等。通过Funclass，我发现很难在大型组件内部定位。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;约定驱动的API&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;钩子的主要规则（可能也是最重要的规则）之一是使用前缀约定。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;就是感觉不对&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你知道有什么不对劲的感觉吗？这就是我对钩子的感觉。有时我能准确地指出问题所在，但有时只是一种普遍的感觉，即我们走错了方向。当你发现一个好的概念时，你可以看到事情是如何很好地结合在一起的，但是当你在为错误的概念而苦恼的时候，发现你需要添加更多更具体的东西和规则，才能让事情顺利进行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了钩子，就会有越来越多奇怪的东西跳出来，有更多“有用的”钩子可以帮助你做一些琐碎的事情，也有更多的东西需要学习。如果我们需要这么多的utils在我们的日常工作中，只是为了隐藏一些奇怪的复杂，这是一个巨大的迹象，说明我们走错了路。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;几年前，当我从Angular 1.5转到React时，我惊讶于React的API是如此简单，文档是如此的薄。Angular曾经有庞大的文档，你可能要花上几天的时间才能涵盖所有内容——消化机制、不同的编译阶段、transclude、绑定、模板等等。光是这一点就给我很大的启示，而React它简洁明了，你可以在几个小时内把整个文档看一遍就可以了。在第一次，第二次以及以后的所有次尝试使用钩子的过程中，我发现自己有义务一次又一次地使用文档。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我讨厌成为聚会的扫兴者，但我真的认为Hooks可能是React社区发生的第2件最糟糕的事情（第一名仍然由Redux占据）。它给已经脆弱的生态系统增加了另一场毫无用处的争论，目前尚不清楚钩子是否是推荐的使用方式，还是只是另一个功能和个人品味的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我希望React社区能够醒来，并要求在Funclass和class的功能之间保持平衡。我们可以在类中拥有更好的Context API，并且可以为类提供诸如useEffect之类的东西。如果需要，React应该让我们选择继续使用类，而不是通过仅为Funclass添加更多功能而强行杀死它而将类抛在后面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，早在2017年底，我就曾以《Redux的丑陋面》为题发表过一篇文章，如今连Redux的创造者Dan Abramov都已经承认Redux是一个巨大的错误。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.47157190635451507&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AMsYJz5eLgH2GjqtZzCZOV8ksnU25cuJvM0Jw8fcdM5CnxcRevWCx19ic2fs20XuzQgzZpkCXPHnGQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1196&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只是历史在重演吗？时间会证明一切。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;无论如何，我和我的队友决定暂时坚持用类，并使用基于Mobx的解决方案作为状态管理工具。我认为，在独立开发人员和团队工作人员之间，Hooks的普及率存在很大差异——Hooks的不良性质在大型代码库中更加明显，你需要在该代码库中处理其他人的代码。我个人真的希望React能把 &lt;code&gt;ctrl+z&lt;/code&gt; 的钩子全部放在一起。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我打算开始着手制定一个RFC，为React提出一个简单、干净、内置的状态管理方案，一劳永逸地解决共享状态逻辑的问题，希望能用一种比Funclasses不那么笨拙的方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;粉丝福利资源&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;Web安全从入门到“放弃”视频教程&lt;br/&gt;&lt;/span&gt;&lt;span&gt;https://pan.baidu.com/s/1XdBdKk9zjGM0Dr5SxX2mcQ  密码: llgl&lt;br/&gt;&lt;/span&gt;&lt;span&gt;更多资源请查看本公众号“发现”菜单&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.34814814814814815&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/WYoaOn5t0AOnxwCdHdrTo0A5kdQHEueWvHaibBfamvyTMmpgtF624KSh1y6CEticXOMgydXV1muz2QFHL237GRGg/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;推荐阅读&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;如果对你有帮助，还可以&lt;/span&gt;&lt;span&gt;在看、留言、&lt;/span&gt;&lt;span&gt;转发&lt;/span&gt;&lt;span&gt;，这是对作者最大的帮助&lt;/span&gt;&lt;/span&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5555555555555556&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;900&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0ANYZYgbKALtGxMUZ5pIXNgmK3cst7LdVicHeiciaibBpKeTX6eCVnwby76RObVOfPIrhWUiauZmKytXjDg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>984a75641ef8d8e8cd4dce1607c0d36a</guid>
<title>WICC 2020 重磅来袭！你关心的通信前沿技术都在这里！</title>
<link>https://toutiao.io/k/fwudviq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2413793103448276&quot; data-type=&quot;gif&quot; data-w=&quot;638&quot; data-backw=&quot;578&quot; data-backh=&quot;140&quot; data-before-oversubscription-url=&quot;https://mmbiz.qpic.cn/mmbiz_gif/AUS4TZmVkaEY7hxNFbvia18U3jCictMrnoZ3B9marXlrRpKImKoMDIKQSianz68PAaAEQEJUiaqtvsSMlEMblU62Dw/0?wx_fmt=gif&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/AUS4TZmVkaEY7hxNFbvia18U3jCictMrnoZ3B9marXlrRpKImKoMDIKQSianz68PAaAEQEJUiaqtvsSMlEMblU62Dw/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;&lt;p&gt;随着信息技术的不断发展，以云计算技术理念和服务模式所提供的 IP 通信能力，已经开始被广泛应用于互联网应用、企业级应用和新兴的智能硬件场景中。毋庸置疑的是，以云方式来实现话音、视频、消息等能力的运营、维护和管理，并以服务的方式向应用提供支持，将带来业务运营和产品体验上的显著升级和突破。&lt;/p&gt;&lt;p&gt;如今，面对开发者企业对通信的新诉求，通信的场景正由单一走向多样化。尤其是在新基建及 5G 技术的浪潮下，通信云将在提升互联网应用及企业通信开发和使用的效率、降低成本方面发挥出巨大的价值。不在变革中兴起，就在沉默中灭亡。&lt;span&gt;&lt;strong&gt;10 月 31 日，WICC 2020 全球互联网通信云大会&lt;/strong&gt;&lt;/span&gt;将于深圳前海华侨城 JW 万豪酒店拉开帷幕，本届大会将以“融汇通信，云启未来”为主题，探讨在新基建、5G 生态等国家发展战略中，通信云技术未来所发挥的价值与作用。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;WICC 2020 将汇聚全球通信云技术领袖和行业领导企业，开展技术及行业的巅峰对话，同时现场将以多形式进行互动交流，为开发者提供更多的行业发展、前沿技术趋势，以及一线实践经验。&lt;/strong&gt;&lt;/span&gt;此外，在现场还将有丰富的礼品以及免费自助午宴值得期待~&lt;/p&gt;&lt;section&gt;&lt;span&gt;1&lt;/span&gt;作为一场通信领域的全球技术盛会，本次大会将有哪些重磅干货？&lt;/section&gt;&lt;p&gt;当前，通信云正在从传统通信迈向互联网通信时代，5G、云计算等技术的迅猛发展，更加速了这一变革。在这样的时代浪潮下，我们更需要洞悉未来趋势，把握机遇，明确发展方向。&lt;/p&gt;&lt;section&gt;&lt;span/&gt; 行业新风向&lt;/section&gt;&lt;p&gt;来自信息通信领域的专家将为你解读新基建下的国家通信云生态建设；华为 5G 通信技术专家将从前台通信到架构构建，详细剖析 5G 生态的关键技术挑战；还有通信领域投资人带你洞悉通信云产业的格局与未来发展趋势！&lt;/p&gt;&lt;p&gt;此外，本次大会将围绕 5G 下的新通信技术突破、实时音视频新应用场景和通信技术在业务架构中的演进三大主题展开讨论，并关注 VR、IoT、AI、国产化等热点领域下正在发生的通信技术变革，解读通信云技术在后疫情时代下的机遇与挑战。&lt;/p&gt;&lt;section&gt;&lt;span/&gt; 技术最解码&lt;/section&gt;&lt;p&gt;VR、车联网等新应用场景将成为 5G 大有可为之领域。在此次全球互联网通信云大会上，行业领军企业将揭秘 VR 沉浸式体验背后的低延迟通信技术。车联网优秀企业也将带来 5G 出行时代高互动性能实现路径的前沿探索与分享。与此同时，互联网巨头将现场解读实时音视频直播的架构建设，解读国产化统一操作系统架构下的多边技术融合，也会带来在亿级终端数据体量下的高并发架构的深度解析 ，从技术角度解码“架构”。&lt;/p&gt;&lt;section&gt;&lt;span/&gt; 实践出真知&lt;/section&gt;&lt;p&gt;随着网络基础设施的优化和底层技术的成熟，实时音视频在互联网通信中的地位逐渐提升，并能够与即时通讯结合发挥协同效应。实时音视频云服务可以满足用户对线上实时音频、视频交流的需求，除了高质量的音视频通话外，还可应用于视频会议、无接触服务、智能硬件等诸多场景中。对于用户来讲，极致的体验才是“王道”，而通信技术能力的优劣直接关系到用户的使用体验。&lt;strong&gt;本次大会将探讨实时音视频背后的场景实践及技术发展策略，并展现头部厂商在远程会议、电商、在线教育等领域为用户带来的全新体验与技术突破。&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;2&lt;/span&gt;参与这次全球技术盛会，你将收获什么？&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;洞见通信云领域的前沿趋势，了解通信技术在新基建、5G 生态下的机遇与挑战；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;技术领袖巅峰对话，为你照亮通信云的未来发展之路；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;深入了解音视频领域在多种新场景下的最新实践与技术应用；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;丰富的开发者互动环节，现场多种形式的深度交流，让你与志同道合者分享经验与心得，一起进行思维碰撞；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;礼品丰厚，五星酒店免费自助午餐，现场福利不断，在提升认知、开拓思维和眼界的同时，尽情享受福利，把礼品带回家！&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;全球通信云时代已经到来！你还在等待什么？&lt;/p&gt;&lt;p&gt;点击&lt;span&gt;阅读原文&lt;/span&gt;或扫描下方&lt;span&gt;海报二维码&lt;/span&gt;，快速报名：&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://wicc.rongcloud.cn/?utm_source=wechat&amp;amp;utm_term=wicc&quot; textvalue=&quot;你已选中了添加链接的内容&quot; tab=&quot;outerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;562&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;312&quot; data-ratio=&quot;0.5555555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AUS4TZmVkaHfKkvpcm0tzib5cDaVNSEuGCPHnEXibeOWvexFXvjhOgGlWavZyooyDfjaAn5Yp0fxGguh0EPg4enQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section label=&quot;Copyright © 2014 playhudong All Rights Reserved.&quot; donone=&quot;shifuMouseDownOther(&#x27;shifu_o_028&#x27;)&quot;&gt;&lt;img data-ratio=&quot;0.45454545454545453&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/AUS4TZmVkaE7mKqiamP9Qc99skibiaMM3kqt2wASCXHaP3QmZGLQjlqrZibduRfqQPz7epcVaXgEtXt7HA8gbpL0bQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;22&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;section xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;section label=&quot;Copyleft 2018 iPaiban All lefts Reserved （本样式已做版权保护，未经正式授权不允许任何第三方编辑器、企业、个人使用，违者必纠）&quot; donone=&quot;shifuMouseDownPayStyle(&#x27;shifu_qmi_015&#x27;)&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;往 届 WICC 精 彩 推 荐 &lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;【PPT 下载】走进 WICC 2019 预见互联网通信云未来技术&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI1MTIyNTU2MQ==&amp;amp;mid=2247485988&amp;amp;idx=2&amp;amp;sn=d0f176b2d7fbcc0dad95d32a646519ea&amp;amp;chksm=e9f77e92de80f7845a20092af36408f70c88e3b9df5da01e533c21e4bc5e0bdb8f26db5c79a5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; tab=&quot;outerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-backh=&quot;167&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;167&quot; data-ratio=&quot;0.28923076923076924&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AUS4TZmVkaHfKkvpcm0tzib5cDaVNSEuGPVGfIp0miaY6DicTPerVpfBYdS67Y5UmOnEcmXz2KYVecib80dIYaOicNw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;650&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一张图领略 WICC 精彩看点&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI1MTIyNTU2MQ==&amp;amp;mid=2247485988&amp;amp;idx=3&amp;amp;sn=a14a851c979170ee3533ba9cd5e9b2c6&amp;amp;chksm=e9f77e92de80f78419b97f3c51486d75426ab7139df2355ba7e7a7e78eb69774e292ae7a0f3d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; tab=&quot;outerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-backh=&quot;167&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;167&quot; data-ratio=&quot;0.28923076923076924&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AUS4TZmVkaHfKkvpcm0tzib5cDaVNSEuGREKhkPAdKuvYkFEnwQzicw3PwHDZcnEiak3PKyuSqUicQS3oBCqAwSnrg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;650&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;WICC 2019：融云首次解密全球通信网底层基础架构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI1MTIyNTU2MQ==&amp;amp;mid=2247486025&amp;amp;idx=1&amp;amp;sn=013248f0e94261c506a4c1da6f21b085&amp;amp;chksm=e9f77effde80f7e9599bb645dd51a3b15c2d94df2dc9e83ddb2dadd119ab404ab23d173275e3&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; tab=&quot;outerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-backh=&quot;167&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;167&quot; data-ratio=&quot;0.28923076923076924&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AUS4TZmVkaHfKkvpcm0tzib5cDaVNSEuG7vzTo8OmNeadibSRDEzGauIMgianBvia0XPdE7MoqbQnLWEK9ichUdo9jA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;650&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5712050078247262&quot; data-type=&quot;gif&quot; data-w=&quot;639&quot; data-backw=&quot;578&quot; data-backh=&quot;330&quot; data-before-oversubscription-url=&quot;https://mmbiz.qpic.cn/mmbiz_gif/AUS4TZmVkaEY7hxNFbvia18U3jCictMrnomGCQ2sj4hJTSLIzpPIE0GJHG7dAQAoG1icLhyichyMIctPn2T1yOszTg/0?wx_fmt=gif&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/AUS4TZmVkaEY7hxNFbvia18U3jCictMrnomGCQ2sj4hJTSLIzpPIE0GJHG7dAQAoG1icLhyichyMIctPn2T1yOszTg/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;点击阅读原文&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;立刻免费报名&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;↓↓&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>