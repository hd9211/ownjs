<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>96962434624f61055e5d1fcb129abeb5</guid>
<title>面渣逆袭：线程池夺命连环十八问</title>
<link>https://toutiao.io/k/g3u1qkm</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是老三，很高兴又和大家见面。线程池是面试必问的知识点，这节我们来对线面试官，搞透线程池。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1. 什么是线程池？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;线程池：&lt;/strong&gt; 简单理解，它就是一个管理线程的池子。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;它帮我们管理线程，避免增加创建线程和销毁线程的资源损耗&lt;/strong&gt;。因为线程其实也是一个对象，创建一个对象，需要经过类加载过程，销毁一个对象，需要走GC垃圾回收流程，都是需要资源开销的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;提高响应速度。&lt;/strong&gt; 如果任务到达了，相对于从线程池拿线程，重新去创建一条线程执行，速度肯定慢很多。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;重复利用。&lt;/strong&gt; 线程用完，再放回池子，可以达到重复利用的效果，节省资源。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2. 能说说工作中线程池的应用吗？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前我们有一个和第三方对接的需求，需要向第三方推送数据，引入了多线程来提升数据推送的效率，其中用到了线程池来管理线程。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.33366141732283466&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79bsScMzCic59GgDqL9Z8tNmjcLoBZQLo7ianF0ibeJuIvz7KNIGiaialzaZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1016&quot;/&gt;&lt;figcaption&gt;业务示例&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要代码如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.9267578125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79hnYibsw6ILTxib3LSPgic25HbiaDYVgX9NAfQG1hYR2zLibDAvQJPgYhXmQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2048&quot;/&gt;&lt;figcaption&gt;主要代码&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;完整可运行代码地址：https://gitee.com/fighter3/thread-demo.git&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程池的参数如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;corePoolSize：线程核心参数选择了CPU数×2&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;maximumPoolSize：最大线程数选择了和核心线程数相同&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;keepAliveTime：非核心闲置线程存活时间直接置为0&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;unit：非核心线程保持存活的时间选择了 TimeUnit.SECONDS 秒&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;workQueue：线程池等待队列，使用 LinkedBlockingQueue阻塞队列&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时还用了synchronized 来加锁，保证数据不会被重复推送：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;  &lt;span&gt;synchronized&lt;/span&gt; (PushProcessServiceImpl&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;) &lt;/span&gt;{}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ps:这个例子只是简单地进行了数据推送，实际上还可以结合其他的业务，像什么数据清洗啊、数据统计啊，都可以套用。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.能简单说一下线程池的工作流程吗？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用一个通俗的比喻：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有一个营业厅，总共有六个窗口，现在开放了三个窗口，现在有三个窗口坐着三个营业员小姐姐在营业。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老三去办业务，可能会遇到什么情况呢？&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;老三发现有空间的在营业的窗口，直接去找小姐姐办理业务。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.28717201166180756&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79ltPz1QhGeWIddMCZumlODqEzriaF81efsO1iaH6sAX6SsGcWOrnXpf7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;686&quot;/&gt;&lt;figcaption&gt;直接办理&lt;/figcaption&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;2&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;老三发现没有空闲的窗口，就在排队区排队等。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.32954545454545453&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79UfcGnGdA5LVQibMiaefvJ8wZicOaXl6edibvK9hF5DHibyg6WTF39HxDTXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;704&quot;/&gt;&lt;figcaption&gt;排队等待&lt;/figcaption&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;3&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;老三发现没有空闲的窗口，等待区也满了，蚌埠住了，经理一看，就让休息的小姐姐赶紧回来上班，等待区号靠前的赶紧去新窗口办，老三去排队区排队。小姐姐比较辛苦，假如一段时间发现他们可以不用接着营业，经理就让她们接着休息。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4326424870466321&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79ianibZZZBOTeKv1iaKDUekGb57DG9xXptNtg7GHvgRVUY6HgcKlA5b4WQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;772&quot;/&gt;&lt;figcaption&gt;排队区满&lt;/figcaption&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;4&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;老三一看，六个窗口都满了，等待区也没位置了。老三急了，要闹，经理赶紧出来了，经理该怎么办呢？&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40234375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79oeFQ9CNiaFlibEpcrbIoAAM2RIibytppMOofakCRQjRSX3beBj1dhSdGQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;768&quot;/&gt;&lt;figcaption&gt;等待区，排队区都满&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;我们银行系统已经瘫痪&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;谁叫你来办的你找谁去&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;看你比较急，去队里加个塞&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;今天没办法，不行你看改一天&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的这个流程几乎就跟 JDK 线程池的大致流程类似，&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;营业中的 3个窗口对应核心线程池数：corePoolSize&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;总的营业窗口数6对应：maximumPoolSize&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;打开的临时窗口在多少时间内无人办理则关闭对应：unit&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;排队区就是等待队列：workQueue&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;无法办理的时候银行给出的解决方法对应：RejectedExecutionHandler&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;threadFactory 该参数在 JDK 中是 线程工厂，用来创建线程对象，一般不会动。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以我们线程池的工作流程也比较好理解了：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;线程池刚创建时，里面没有一个线程。任务队列是作为参数传进来的。不过，就算队列里面有任务，线程池也不会马上执行它们。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当调用 execute() 方法添加一个任务时，线程池会做如下判断：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果正在运行的线程数量小于 corePoolSize，那么马上创建线程运行这个任务；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果正在运行的线程数量大于或等于 corePoolSize，那么将这个任务放入队列；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果这时候队列满了，而且正在运行的线程数量小于 maximumPoolSize，那么还是要创建非核心线程立刻运行这个任务；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果队列满了，而且正在运行的线程数量大于或等于 maximumPoolSize，那么线程池会根据拒绝策略来对应处理。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6517482517482518&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC790qL0wxFL1N5xfsyvOFOuBby10zeC8wjnHxWpZiaeyz1lGf4ibNCMUNiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;715&quot;/&gt;&lt;figcaption&gt;线程池执行流程&lt;/figcaption&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;3&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;当一个线程完成任务时，它会从队列中取下一个任务来执行。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;当一个线程无事可做，超过一定的时间（keepAliveTime）时，线程池会判断，如果当前运行的线程数大于 corePoolSize，那么这个线程就被停掉。所以线程池的所有任务完成后，它最终会收缩到 corePoolSize 的大小。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.线程池主要参数有哪些？&lt;/span&gt;&lt;/h1&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;corePoolSize&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此值是用来初始化线程池中核心线程数，当线程池中线程池数&amp;lt; &lt;code&gt;corePoolSize&lt;/code&gt;时，系统默认是添加一个任务才创建一个线程池。当线程数 = corePoolSize时，新任务会追加到workQueue中。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;2&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;maximumPoolSize&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;maximumPoolSize&lt;/code&gt;表示允许的最大线程数 = (非核心线程数+核心线程数)，当&lt;code&gt;BlockingQueue&lt;/code&gt;也满了，但线程池中总线程数 &amp;lt; &lt;code&gt;maximumPoolSize&lt;/code&gt;时候就会再次创建新的线程。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;3&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;keepAliveTime&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;非核心线程 =(maximumPoolSize - corePoolSize ) ,非核心线程闲置下来不干活最多存活时间。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;4&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;unit&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程池中非核心线程保持存活的时间的单位&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;TimeUnit.DAYS;天&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TimeUnit.HOURS;小时&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TimeUnit.MINUTES;分钟&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TimeUnit.SECONDS;秒&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TimeUnit.MILLISECONDS;  毫秒&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TimeUnit.MICROSECONDS;  微秒&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TimeUnit.NANOSECONDS;  纳秒&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;5&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;workQueue&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程池等待队列，维护着等待执行的&lt;code&gt;Runnable&lt;/code&gt;对象。当运行当线程数= corePoolSize时，新的任务会被添加到&lt;code&gt;workQueue&lt;/code&gt;中，如果&lt;code&gt;workQueue&lt;/code&gt;也满了则尝试用非核心线程执行任务，等待队列应该尽量用有界的。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;6&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;threadFactory&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建一个新线程时使用的工厂，可以用来设定线程名、是否为daemon线程等等。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;7&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;handler&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;corePoolSize&lt;/code&gt;、&lt;code&gt;workQueue&lt;/code&gt;、&lt;code&gt;maximumPoolSize&lt;/code&gt;都不可用的时候执行的饱和策略。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5.线程池的拒绝策略有哪些？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;类比前面的例子，无法办理业务时的处理方式，帮助记忆：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9244992295839753&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79vhYJ5Nn53icXdttWEZiaf75Gbjukibqtn4kogiaFhZiamic2NY6Ejfp3oYiaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;649&quot;/&gt;&lt;figcaption&gt;四种策略&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;AbortPolicy ：直接抛出异常，默认使用此策略&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;CallerRunsPolicy：用调用者所在的线程来执行任务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;DiscardOldestPolicy：丢弃阻塞队列里最老的任务，也就是队列里靠前的任务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;DiscardPolicy ：当前任务直接丢弃&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想实现自己的拒绝策略，实现RejectedExecutionHandler接口即可。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;6.线程池有哪几种工作队列？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常用的阻塞队列主要有以下几种：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;ArrayBlockingQueue：ArrayBlockingQueue（有界队列）是一个用数组实现的有界阻塞队列，按FIFO排序量。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;LinkedBlockingQueue：LinkedBlockingQueue（可设置容量队列）是基于链表结构的阻塞队列，按FIFO排序任务，容量可以选择进行设置，不设置的话，将是一个无边界的阻塞队列，最大长度为Integer.MAX_VALUE，吞吐量通常要高于ArrayBlockingQuene；newFixedThreadPool线程池使用了这个队列&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;DelayQueue：DelayQueue（延迟队列）是一个任务定时周期的延迟执行的队列。根据指定的执行时间从小到大排序，否则根据插入到队列的先后排序。newScheduledThreadPool线程池使用了这个队列。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;PriorityBlockingQueue：PriorityBlockingQueue（优先级队列）是具有优先级的无界阻塞队列&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;SynchronousQueue：SynchronousQueue（同步队列）是一个不存储元素的阻塞队列，每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于LinkedBlockingQuene，newCachedThreadPool线程池使用了这个队列。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;7.线程池提交execute和submit有什么区别？&lt;/span&gt;&lt;/h1&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;execute 用于提交不需要返回值的任务&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;threadsPool.execute(&lt;span&gt;new&lt;/span&gt; Runnable() { &lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt; &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;run&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{ &lt;br/&gt;        &lt;span&gt;// TODO Auto-generated method stub } &lt;/span&gt;&lt;br/&gt;    });&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;2&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;submit()方法用于提交需要返回值的任务。线程池会返回一个future类型的对象，通过这个 future对象可以判断任务是否执行成功，并且可以通过future的get()方法来获取返回值&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Future&amp;lt;Object&amp;gt; future = executor.submit(harReturnValuetask); &lt;br/&gt;&lt;span&gt;try&lt;/span&gt; { Object s = future.get(); } &lt;span&gt;catch&lt;/span&gt; (InterruptedException e) { &lt;br/&gt;    &lt;span&gt;// 处理中断异常 &lt;/span&gt;&lt;br/&gt;} &lt;span&gt;catch&lt;/span&gt; (ExecutionException e) { &lt;br/&gt;    &lt;span&gt;// 处理无法执行任务异常 &lt;/span&gt;&lt;br/&gt;} &lt;span&gt;finally&lt;/span&gt; { &lt;br/&gt;    &lt;span&gt;// 关闭线程池 executor.shutdown();&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;8.线程池怎么关闭知道吗？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以通过调用线程池的&lt;code&gt;shutdown&lt;/code&gt;或&lt;code&gt;shutdownNow&lt;/code&gt;方法来关闭线程池。它们的原理是遍历线程池中的工作线程，然后逐个调用线程的interrupt方法来中断线程，所以无法响应中断的任务可能永远无法终止。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;shutdown() 将线程池状态置为shutdown,并不会立即停止：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;停止接收外部submit的任务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;内部正在跑的任务和队列里等待的任务，会执行完&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;等到第二步完成后，才真正停止&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;2&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;shutdownNow() 将线程池状态置为stop。一般会立即停止，事实上不一定：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;和shutdown()一样，先停止接收外部提交的任务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;忽略队列里等待的任务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;尝试将正在跑的任务interrupt中断&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;返回未执行的任务列表&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;shutdown 和shutdownnow简单来说区别如下：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;shutdownNow()能立即停止线程池，正在跑的和正在等待的任务都停下了。这样做立即生效，但是风险也比较大。shutdown()只是关闭了提交通道，用submit()是无效的；而内部的任务该怎么跑还是怎么跑，跑完再彻底停止线程池。&lt;/p&gt;&lt;/blockquote&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;9.线程池的线程数应该怎么配置？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程在Java中属于稀缺资源，线程池不是越大越好也不是越小越好。任务分为计算密集型、IO密集型、混合型。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;计算密集型：大部分都在用CPU跟内存，加密，逻辑操作业务处理等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;IO密集型：数据库链接，网络通讯传输等。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;计算密集型一般推荐线程池不要过大，一般是CPU数 + 1，+1是因为可能存在&lt;strong&gt;页缺失&lt;/strong&gt;(就是可能存在有些数据在硬盘中需要多来一个线程将数据读入内存)。如果线程池数太大，可能会频繁的 进行线程上下文切换跟任务调度。获得当前CPU核心数代码如下：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Runtime.getRuntime().availableProcessors();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; start=&quot;2&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;IO密集型：线程数适当大一点，机器的Cpu核心数*2。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;混合型：可以考虑根据情况将它拆分成CPU密集型和IO密集型任务，如果执行时间相差不大，拆分可以提升吞吐量，反之没有必要。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然，实际应用中没有固定的公式，需要结合测试和监控来进行调整。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;10.有哪几种常见的线程池？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要有四种，都是通过工具类Excutors创建出来的，阿里巴巴《Java开发手册》里禁止使用这种方式来创建线程池。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;newFixedThreadPool  (固定数目线程的线程池)&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;newCachedThreadPool (可缓存线程的线程池)&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;newSingleThreadExecutor (单线程的线程池)&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;newScheduledThreadPool (定时及周期执行的线程池)&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;11.能说一下四种常见线程池的原理吗？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前三种线程池的构造直接调用ThreadPoolExecutor的构造方法。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;newSingleThreadExecutor&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; ExecutorService &lt;span&gt;newSingleThreadExecutor&lt;/span&gt;&lt;span&gt;(ThreadFactory threadFactory)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; FinalizableDelegatedExecutorService&lt;br/&gt;            (&lt;span&gt;new&lt;/span&gt; ThreadPoolExecutor(&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;,&lt;br/&gt;                                    &lt;span&gt;0L&lt;/span&gt;, TimeUnit.MILLISECONDS,&lt;br/&gt;                                    &lt;span&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;Runnable&amp;gt;(),&lt;br/&gt;                                    threadFactory));&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;线程池特点&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;核心线程数为1&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最大线程数也为1&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;阻塞队列是无界队列LinkedBlockingQueue，可能会导致OOM&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;keepAliveTime为0&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46943231441048033&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79nGiaeynUBPYUd3jgzOGKKM0F1O8icOzmQo1SlDEfZPsCZAmX4GAw5Y1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;916&quot;/&gt;&lt;figcaption&gt;SingleThreadExecutor运行流程&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工作流程：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;提交任务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;线程池是否有一条线程在，如果没有，新建线程执行任务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果有，将任务加到阻塞队列&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当前的唯一线程，从队列取任务，执行完一个，再继续取，一个线程执行任务。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;适用场景&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;适用于串行执行任务的场景，一个任务一个任务地执行。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;newFixedThreadPool&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; ExecutorService &lt;span&gt;newFixedThreadPool&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; nThreads, ThreadFactory threadFactory)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ThreadPoolExecutor(nThreads, nThreads,&lt;br/&gt;                                      &lt;span&gt;0L&lt;/span&gt;, TimeUnit.MILLISECONDS,&lt;br/&gt;                                      &lt;span&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;Runnable&amp;gt;(),&lt;br/&gt;                                      threadFactory);&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;线程池特点：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;核心线程数和最大线程数大小一样&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;没有所谓的非空闲时间，即keepAliveTime为0&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;阻塞队列为无界队列LinkedBlockingQueue，可能会导致OOM&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5287588294651867&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79CPOIbjQicj01ILvjia6LpwZauPUEIRhoTiaz2giblKAYIADA94tzwvicARQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;991&quot;/&gt;&lt;figcaption&gt;FixedThreadPool&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工作流程：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;提交任务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果线程数少于核心线程，创建核心线程执行任务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果线程数等于核心线程，把任务添加到LinkedBlockingQueue阻塞队列&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果线程执行完任务，去阻塞队列取任务，继续执行。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;使用场景&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;FixedThreadPool 适用于处理CPU密集型的任务，确保CPU在长期被工作线程使用的情况下，尽可能的少的分配线程，即适用执行长期的任务。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;newCachedThreadPool&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;   &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; ExecutorService &lt;span&gt;newCachedThreadPool&lt;/span&gt;&lt;span&gt;(ThreadFactory threadFactory)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; ThreadPoolExecutor(&lt;span&gt;0&lt;/span&gt;, Integer.MAX_VALUE,&lt;br/&gt;                                      &lt;span&gt;60L&lt;/span&gt;, TimeUnit.SECONDS,&lt;br/&gt;                                      &lt;span&gt;new&lt;/span&gt; SynchronousQueue&amp;lt;Runnable&amp;gt;(),&lt;br/&gt;                                      threadFactory);&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;线程池特点：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;核心线程数为0&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最大线程数为Integer.MAX_VALUE，即无限大，可能会因为无限创建线程，导致OOM&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;阻塞队列是SynchronousQueue&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;非核心线程空闲存活时间为60秒&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当提交任务的速度大于处理任务的速度时，每次提交一个任务，就必然会创建一个线程。极端情况下会创建过多的线程，耗尽 CPU 和内存资源。由于空闲 60 秒的线程会被终止，长时间保持空闲的 CachedThreadPool 不会占用任何资源。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.745928338762215&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79Wtr7SzpTAZtvSFUibAcicZ1ZaLVxroESsmxOR1kUEwVkv6CjA9NIU4Bg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;921&quot;/&gt;&lt;figcaption&gt;CachedThreadPool执行流程&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工作流程：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;提交任务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;因为没有核心线程，所以任务直接加到SynchronousQueue队列。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;判断是否有空闲线程，如果有，就去取出任务执行。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果没有空闲线程，就新建一个线程执行。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;执行完任务的线程，还可以存活60秒，如果在这期间，接到任务，可以继续活下去；否则，被销毁。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;适用场景&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用于并发执行大量短期的小任务。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;newScheduledThreadPool&lt;/span&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;ScheduledThreadPoolExecutor&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; corePoolSize)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;super&lt;/span&gt;(corePoolSize, Integer.MAX_VALUE, &lt;span&gt;0&lt;/span&gt;, NANOSECONDS,&lt;br/&gt;              &lt;span&gt;new&lt;/span&gt; DelayedWorkQueue());&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;线程池特点&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;最大线程数为Integer.MAX_VALUE，也有OOM的风险&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;阻塞队列是DelayedWorkQueue&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;keepAliveTime为0&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;scheduleAtFixedRate() ：按某种速率周期执行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;scheduleWithFixedDelay()：在某个延迟后执行&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5436991869918699&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79N6pXLFyK1EwibXT8rGic1LO3hfo9ib6QiabmLwbFGbLQFwJNp4WGib6SAQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;984&quot;/&gt;&lt;figcaption&gt;ScheduledThreadPool执行流程&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;工作机制&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;线程从DelayQueue中获取已到期的ScheduledFutureTask（DelayQueue.take()）。到期任务是指ScheduledFutureTask的time大于等于当前时间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;线程执行这个ScheduledFutureTask。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;线程修改ScheduledFutureTask的time变量为下次将要被执行的时间。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;线程把这个修改time之后的ScheduledFutureTask放回DelayQueue中（DelayQueue.add()）。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5269978401727862&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79PfSZnTw5hriadcMGP9znx5xHd3b4YoTBfWpp9jl86CddicEf4RszSdlA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;926&quot;/&gt;&lt;figcaption&gt;ScheduledThreadPoolExecutor执行流程&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;使用场景&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;周期性执行任务的场景，需要限制线程数量的场景&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;12.使用无界队列的线程池会导致什么问题吗？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如newFixedThreadPool使用了无界的阻塞队列LinkedBlockingQueue，如果线程获取一个任务后，任务的执行时间比较长，会导致队列的任务越积越多，导致机器内存使用不停飙升，最终导致OOM。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;13.线程池异常怎么处理知道吗？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在使用线程池处理任务的时候，任务代码可能抛出RuntimeException，抛出异常后，线程池可能捕获它，也可能创建一个新的线程来代替异常的线程，我们可能无法感知任务出现了异常，因此我们需要考虑线程池异常情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见的异常处理方式：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7060478199718706&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79E3ht5iaUmqs38KSd0jZFr7gWt593beK0V7Nr7Bib4j19nCNDZyNN1tlA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;711&quot;/&gt;&lt;figcaption&gt;线程池异常处理&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;14.能说一下线程池有几种状态吗？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;线程池有这几个状态：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RUNNING,SHUTDOWN,STOP,TIDYING,TERMINATED。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;   &lt;span&gt;//线程池状态&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; RUNNING    = -&lt;span&gt;1&lt;/span&gt; &amp;lt;&amp;lt; COUNT_BITS;&lt;br/&gt;   &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; SHUTDOWN   =  &lt;span&gt;0&lt;/span&gt; &amp;lt;&amp;lt; COUNT_BITS;&lt;br/&gt;   &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; STOP       =  &lt;span&gt;1&lt;/span&gt; &amp;lt;&amp;lt; COUNT_BITS;&lt;br/&gt;   &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; TIDYING    =  &lt;span&gt;2&lt;/span&gt; &amp;lt;&amp;lt; COUNT_BITS;&lt;br/&gt;   &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; TERMINATED =  &lt;span&gt;3&lt;/span&gt; &amp;lt;&amp;lt; COUNT_BITS;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程池各个状态切换图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29161882893226176&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC794jS4pribZWSC7Cgeeia1pkSUlk2ZDdZzoib3ZEiaKbibfo8zUTHnPgAztGQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;871&quot;/&gt;&lt;figcaption&gt;线程池状态切换图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;RUNNING&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;该状态的线程池会接收新任务，并处理阻塞队列中的任务;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;调用线程池的shutdown()方法，可以切换到SHUTDOWN状态;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;调用线程池的shutdownNow()方法，可以切换到STOP状态;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;SHUTDOWN&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;该状态的线程池不会接收新任务，但会处理阻塞队列中的任务；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;队列为空，并且线程池中执行的任务也为空,进入TIDYING状态;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;STOP&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;该状态的线程不会接收新任务，也不会处理阻塞队列中的任务，而且会中断正在运行的任务；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;线程池中执行的任务为空,进入TIDYING状态;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;TIDYING&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;该状态表明所有的任务已经运行终止，记录的任务数量为0。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;terminated()执行完毕，进入TERMINATED状态&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;TERMINATED&lt;/strong&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;15.线程池如何实现参数的动态修改？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程池提供了几个  setter方法来设置线程池的参数。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.21178343949044587&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79qbOSlnIdVdd51URIlazXQvfhlWibSQHI1PZyuQ2EezMRYJPwvFYUthA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1256&quot;/&gt;&lt;figcaption&gt;JDK 线程池参数设置接口来源参考[7]&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里主要有两个思路：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.547798066595059&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79Yvic8gRBCJodwWM2YJFgdAicPQ63PBzByYibEhBWBn0XTKd5VKeT44KPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;931&quot;/&gt;&lt;figcaption&gt;动态修改线程池参数&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;在我们微服务的架构下，可以利用配置中心如Nacos、Apollo等等，也可以自己开发配置中心。业务服务读取线程池配置，获取相应的线程池实例来修改线程池的参数。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果限制了配置中心的使用，也可以自己去扩展&lt;strong&gt;ThreadPoolExecutor&lt;/strong&gt;，重写方法，监听线程池参数变化，来动态修改线程池参数。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;16.线程池调优了解吗？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程池配置没有固定的公式，通常事前会对线程池进行一定评估，常见的评估方案如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5942249240121581&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79LSmicDTfa5p1VoBrUan2oKrONVicZ359rUanicdX5IVjnmME8kA1gA6zA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1316&quot;/&gt;&lt;figcaption&gt;线程池评估方案 来源参考[7]&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上线之前也要进行充分的测试，上线之后要建立完善的线程池监控机制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事中结合监控告警机制，分析线程池的问题，或者可优化点，结合线程池动态参数配置机制来调整配置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事后要注意仔细观察，随时调整。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3566333808844508&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79VtZXsgTeG90VVicSQQiaWDaRwVE7P5TTbdZEics5M9fd2hronjibMet5fA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;701&quot;/&gt;&lt;figcaption&gt;线程池调优&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体的调优案例可以查看参考[7]美团技术博客。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;17.你能设计实现一个线程池吗？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;⭐这道题在阿里的面试中出现频率比较高&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程池实现原理可以查看 &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247488521&amp;amp;idx=1&amp;amp;sn=66b0ae23ef24ba47f4487aa8a3646886&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;要是以前有人这么讲线程池，我早就该明白了！&lt;/a&gt;  ，当然，我们自己实现， 只需要抓住线程池的核心流程-参考[6]：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46633416458852867&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdAYWG4If7L9tmzFqHEOC79NymHOXN0AUMWKCVkJ1gFvRlB9Uw8lq2AlqbXR9ExL7b3jr2BFelfGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;802&quot;/&gt;&lt;figcaption&gt;线程池主要实现流程&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们自己的实现就是完成这个核心流程：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;线程池中有N个工作线程&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;把任务提交给线程池运行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果线程池已满，把任务放入队列&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最后当有空闲时，获取队列中任务来执行&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实现代码[6]：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MyThreadPoolExecutor&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;Executor&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//记录线程池中线程数量&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; AtomicInteger ctl = &lt;span&gt;new&lt;/span&gt; AtomicInteger(&lt;span&gt;0&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//核心线程数&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; corePoolSize;&lt;br/&gt;    &lt;span&gt;//最大线程数&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;volatile&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; maximumPoolSize;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//阻塞队列&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; BlockingQueue&amp;lt;Runnable&amp;gt; workQueue;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;MyThreadPoolExecutor&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; corePoolSize, &lt;span&gt;int&lt;/span&gt; maximumPoolSize, BlockingQueue&amp;lt;Runnable&amp;gt; workQueue)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.corePoolSize = corePoolSize;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.maximumPoolSize = maximumPoolSize;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.workQueue = workQueue;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 执行&lt;br/&gt;     *&lt;br/&gt;     * &lt;span&gt;@param&lt;/span&gt; command&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;execute&lt;/span&gt;&lt;span&gt;(Runnable command)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//工作线程数&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; c = ctl.get();&lt;br/&gt;        &lt;span&gt;//小于核心线程数&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (c &amp;lt; corePoolSize) {&lt;br/&gt;            &lt;span&gt;//添加任务失败&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (!addWorker(command)) {&lt;br/&gt;                &lt;span&gt;//执行拒绝策略&lt;/span&gt;&lt;br/&gt;                reject();&lt;br/&gt;            }&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;//任务队列添加任务&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (!workQueue.offer(command)) {&lt;br/&gt;            &lt;span&gt;//任务队列满，尝试启动线程添加任务&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (!addWorker(command)) {&lt;br/&gt;                reject();&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 饱和拒绝&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;reject&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//直接抛出异常&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RuntimeException(&lt;span&gt;&quot;Can not execute!ctl.count：&quot;&lt;/span&gt;&lt;br/&gt;                + ctl.get() + &lt;span&gt;&quot;workQueue size：&quot;&lt;/span&gt; + workQueue.size());&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 添加任务&lt;br/&gt;     *&lt;br/&gt;     * &lt;span&gt;@param&lt;/span&gt; firstTask&lt;br/&gt;     * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;addWorker&lt;/span&gt;&lt;span&gt;(Runnable firstTask)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (ctl.get() &amp;gt;= maximumPoolSize) &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;        Worker worker = &lt;span&gt;new&lt;/span&gt; Worker(firstTask);&lt;br/&gt;        &lt;span&gt;//启动线程&lt;/span&gt;&lt;br/&gt;        worker.thread.start();&lt;br/&gt;        ctl.incrementAndGet();&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 线程池工作线程包装类&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Worker&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;Runnable&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;final&lt;/span&gt; Thread thread;&lt;br/&gt;        Runnable firstTask;&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;Worker&lt;/span&gt;&lt;span&gt;(Runnable firstTask)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;            &lt;span&gt;this&lt;/span&gt;.thread = &lt;span&gt;new&lt;/span&gt; Thread(&lt;span&gt;this&lt;/span&gt;);&lt;br/&gt;            &lt;span&gt;this&lt;/span&gt;.firstTask = firstTask;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;run&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;            Runnable task = firstTask;&lt;br/&gt;            &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;                &lt;span&gt;//执行任务&lt;/span&gt;&lt;br/&gt;                &lt;span&gt;while&lt;/span&gt; (task != &lt;span&gt;null&lt;/span&gt; || (task = getTask()) != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;                    task.run();&lt;br/&gt;                    &lt;span&gt;//线程池已满，跳出循环&lt;/span&gt;&lt;br/&gt;                    &lt;span&gt;if&lt;/span&gt; (ctl.get() &amp;gt; maximumPoolSize) {&lt;br/&gt;                        &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;                    }&lt;br/&gt;                    task = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;                }&lt;br/&gt;            } &lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;                &lt;span&gt;//工作线程数增加&lt;/span&gt;&lt;br/&gt;                ctl.decrementAndGet();&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;/**&lt;br/&gt;         * 从队列中获取任务&lt;br/&gt;         *&lt;br/&gt;         * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt;         */&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&lt;span&gt;private&lt;/span&gt; Runnable &lt;span&gt;getTask&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;            &lt;span&gt;for&lt;/span&gt; (; ; ) {&lt;br/&gt;                &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;                    System.out.println(&lt;span&gt;&quot;workQueue size:&quot;&lt;/span&gt; + workQueue.size());&lt;br/&gt;                    &lt;span&gt;return&lt;/span&gt; workQueue.take();&lt;br/&gt;                } &lt;span&gt;catch&lt;/span&gt; (InterruptedException e) {&lt;br/&gt;                    e.printStackTrace();&lt;br/&gt;                }&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//测试&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        MyThreadPoolExecutor myThreadPoolExecutor = &lt;span&gt;new&lt;/span&gt; MyThreadPoolExecutor(&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;,&lt;br/&gt;                &lt;span&gt;new&lt;/span&gt; ArrayBlockingQueue&amp;lt;Runnable&amp;gt;(&lt;span&gt;10&lt;/span&gt;));&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;int&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;10&lt;/span&gt;; i++) {&lt;br/&gt;            &lt;span&gt;int&lt;/span&gt; taskNum = i;&lt;br/&gt;            myThreadPoolExecutor.execute(() -&amp;gt; {&lt;br/&gt;                &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;                    Thread.sleep(&lt;span&gt;1500&lt;/span&gt;);&lt;br/&gt;                } &lt;span&gt;catch&lt;/span&gt; (InterruptedException e) {&lt;br/&gt;                    e.printStackTrace();&lt;br/&gt;                }&lt;br/&gt;                System.out.println(&lt;span&gt;&quot;任务编号：&quot;&lt;/span&gt; + taskNum);&lt;br/&gt;            });&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样，一个实现了线程池主要流程的类就完成了。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;18.单机线程池执行断电了应该怎么处理？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;我们可以对正在处理和阻塞队列的任务做事务管理或者对阻塞队列中的任务持久化处理，并且当断电或者系统崩溃，操作无法继续下去的时候，可以通过回溯日志的方式来撤销&lt;code&gt;正在处理&lt;/code&gt;的已经执行成功的操作。然后重新执行整个阻塞队列。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是：阻塞队列持久化；正在处理任务事务控制；断电之后正在处理任务的回滚，通过日志恢复该次操作；服务器重启后阻塞队列中的数据再加载。&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;big&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/big&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[1]. 《Java并发编程的艺术》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[2]. 《Java并发编程实战》&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[3]. 讲真 这次绝对让你轻松学习线程池：https://mp.weixin.qq.com/s/dTMH1TdxiCKy5yotQ7u7cA)&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[4]. 面试必备：Java线程池解析：https://juejin.cn/post/6844903889678893063&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[5]. 面试官问：“在项目中用过多线程吗？”你就把这个案例讲给他听！：https://juejin.cn/post/6936457087505399821&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[6]. 小傅哥 《Java面经手册》&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[7]. Java线程池实现原理及其在美团业务中的实践：https://tech.meituan.com/2020/04/02/java-pooling-pratice-in-meituan.html&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>36b1ae46d7c1646ff47a99aaf8f9387e</guid>
<title>这一次，Google 终于对 Web 自动化下手了</title>
<link>https://toutiao.io/k/m9b3lkl</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p class=&quot;js_darkmode__0&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(168, 168, 168)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(62, 62, 62)&quot;&gt;&lt;span data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(0, 0, 0)&quot; data-style=&quot;widows: 1; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 13px; text-indent: 0em; visibility: visible; color: rgb(0, 0, 0);&quot; class=&quot;js_darkmode__1&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;js_darkmode__0&quot;&gt;&lt;span data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(168, 168, 168)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(62, 62, 62)&quot;&gt;&lt;span data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(0, 0, 0)&quot; data-style=&quot;widows: 1; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 13px; text-indent: 0em; visibility: visible; color: rgb(0, 0, 0);&quot; class=&quot;js_darkmode__1&quot;&gt;点击上方“&lt;/span&gt;&lt;span data-style=&quot;widows: 1; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; color: rgb(0, 122, 170); font-size: 13px; text-indent: 0em; visibility: visible;&quot; class=&quot;js_darkmode__2&quot; data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(21, 189, 255)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(0, 122, 170)&quot;&gt;&lt;strong data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(21, 189, 255)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(0, 122, 170)&quot;&gt;AirPython&lt;/strong&gt;&lt;/span&gt;&lt;span data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(0, 0, 0)&quot; data-style=&quot;widows: 1; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; font-size: 13px; text-indent: 0em; visibility: visible; color: rgb(0, 0, 0);&quot; class=&quot;js_darkmode__3&quot;&gt;”，选择“星标”公众号&lt;/span&gt;&lt;br data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(168, 168, 168)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(62, 62, 62)&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(0, 0, 0)&quot; data-style=&quot;font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; white-space: normal; caret-color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); font-size: 16px; text-align: left; text-size-adjust: auto; color: rgb(0, 0, 0);&quot; class=&quot;js_darkmode__4&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot; data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(0, 0, 0)&quot;&gt;&lt;p&gt;&lt;span data-darkmode-bgcolor-15920528676302=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15920528676302=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15920528676302=&quot;rgb(230, 230, 230)&quot; data-darkmode-original-color-15920528676302=&quot;rgb(0, 0, 0)&quot;&gt;重磅干货，第一时间送达&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;542&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;361&quot; data-fileid=&quot;100006882&quot; data-ratio=&quot;0.66640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/atOH362BoyuyWRULEibaJje0YxSeHv0ERCFMsreoQwxWCic5Jia0ylP8KhoVySgMliac6YHLULUFqaDnbXPG9m03aw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;大家好，我是安果！&lt;/p&gt;&lt;p&gt;最近 Goog&lt;span&gt;le 对 Chrom&lt;/span&gt;e 进行了一次比较大的更新，其中一项是脚本录制回放功能，它可以非常方便我们处理一些自动化场景&lt;/p&gt;&lt;p&gt;我们可以在 Chrome 官网下载 Chrome Canary 的最新版本进行尝鲜&lt;/p&gt;&lt;p&gt;PS：&lt;span&gt;Chrome 正式版本是 95，暂时还未集成&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下载地址：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.google.com/intl/zh-CN/chrome/canary/thank-you.html?statcb=1&amp;amp;installdataindex=empty&amp;amp;defaultbrowser=0&lt;/span&gt;&lt;/p&gt;&lt;p&gt;下面聊一下具体的使用步骤&lt;span/&gt;&lt;/p&gt;&lt;p&gt;1 - &lt;span&gt;录制&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先，打开 Chrome Canary 软件，F12 进入到 Devtools 开发者工具悬浮窗&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;选择右上角的更多工具 - Recorder，进入到「 &lt;/span&gt;&lt;span&gt;自动化流程列表界面&lt;/span&gt;&lt;span&gt; 」&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7083032490974729&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/atOH362BoyuyWRULEibaJje0YxSeHv0ERBAjBGicwlReRKM6FiaUyuZAN2eNEHTN0zS58A8t3ybtRuQzM8XHTyicicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2770&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点击「 &lt;/span&gt;&lt;span&gt;Start new recording&lt;/span&gt;&lt;span&gt; 」按钮，输入待录制流程的名称，就可以开始录制操作了&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;默认会以当前 Tab 页面生成一个初始 Step&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如，我是从百度首页创建的录制步骤，这里默认添加了一个初始 Step，url 指向当前 URL&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7061371841155235&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/atOH362BoyuyWRULEibaJje0YxSeHv0ERZCiaq6vhOiaqibMCPFgtZfwJPLBtLZ9fOxibgQUZf4BZfllzBAYBBLXBwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2770&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在左侧浏览器中模拟一次搜索操作，即：在输入框中输入内容，并点击搜索按钮&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在右侧的录制页面会同步记录下操作的流程步骤&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;PS：&lt;/span&gt;&lt;span&gt;点击底部的 End recording 按钮后，我们可以对 url、asserted events 中断言内容进行更新&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7083032490974729&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/atOH362BoyuyWRULEibaJje0YxSeHv0ERrxTvicHA5avppoAZZ7zOxplX6TcwWxg7dTLAdOQ3icF4m0zGhBibgtiaIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2770&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2 - &lt;/span&gt;&lt;span&gt;编辑&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在完成录制操作后，我们可以针对某一个操作进行二次编辑，可以在前、后添加一个步骤，或者删除该步骤&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如，这里在「 点击输入框 」前添加了一个步骤，该步骤类型为等待元素出现，使用元素选择器选择目标元素&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;395&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6640190627482129&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/atOH362BoyuyWRULEibaJje0YxSeHv0EReUf1nLd5xk7IvV8Kl0rkoOy6nTYwUCU9zlsL18HeztZ6a9VuImQ8gw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2518&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3 - &lt;/span&gt;&lt;span&gt;重放&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;录制、编辑完成之后，点击右上角的「 &lt;/span&gt;&lt;span&gt;Replay &lt;/span&gt;&lt;span&gt;」按钮即可以回放，并且会在录制页面会展示回放步骤及结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7083032490974729&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/atOH362BoyuyWRULEibaJje0YxSeHv0EREOWR4oyoDqJa0VbMysfw7bJibxnjFEZtmv5Xdicsjexd9JJVFore0Rsw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2770&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4 - &lt;/span&gt;&lt;span&gt;更多说明&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在录制页面回放操作时，可以设置模拟网速，内置了 3 种方式，分别为：No throttling、Slow 3G、Fast 3G&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中，No throttling 为回放默认的网速设置&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5701624815361891&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/atOH362BoyuyWRULEibaJje0YxSeHv0ERlKxWJCncQ2PlRuxqNJN1v9FdVVoot1URRJibgibfKP7qIfmibibPiasHvpg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1354&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点击左上角的导出按钮可以将当前自动化步骤以 JS 文件的形式保存到本地&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们查看源码发现 Chrome &lt;span&gt;Recorder&lt;/span&gt; 录制回放实际上基于「 &lt;/span&gt;&lt;span&gt;puppeteer&lt;/span&gt;&lt;span&gt; 」来实现的&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; puppeteer = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;puppeteer&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;(&lt;span&gt;&lt;span&gt;async&lt;/span&gt; (&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; browser = &lt;span&gt;await&lt;/span&gt; puppeteer.launch();&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; page = &lt;span&gt;await&lt;/span&gt; browser.newPage();&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;async&lt;/span&gt; &lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;waitForSelectors&lt;/span&gt;(&lt;span&gt;selectors, frame&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;      &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;const&lt;/span&gt; selector &lt;span&gt;of&lt;/span&gt; selectors) {&lt;br/&gt;        &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;          &lt;span&gt;return&lt;/span&gt; &lt;span&gt;await&lt;/span&gt; waitForSelector(selector, frame);&lt;br/&gt;        } &lt;span&gt;catch&lt;/span&gt; (err) {&lt;br/&gt;          &lt;span&gt;console&lt;/span&gt;.error(err);&lt;br/&gt;        }&lt;br/&gt;      }&lt;br/&gt;      &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Error&lt;/span&gt;(&lt;span&gt;&#x27;Could not find element for selectors: &#x27;&lt;/span&gt; + &lt;span&gt;JSON&lt;/span&gt;.stringify(selectors));&lt;br/&gt;    }&lt;br/&gt;...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相比直接使用 &lt;/span&gt;&lt;span&gt;puppeteer&lt;/span&gt;&lt;span&gt; 编码自动化脚本，Chrome Recorder 录制自动化流程更加方便快捷！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;推荐阅读&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-style-type=&quot;5&quot; data-tools=&quot;新媒体排版&quot; data-id=&quot;746064&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1OTI0NjI1NQ==&amp;amp;mid=2247490541&amp;amp;idx=1&amp;amp;sn=3aa8298e15232e4287e4ae67da594dea&amp;amp;chksm=fc1b652dcb6cec3b773a85a61451fd6db29b3b628a3117998a7868e3e58791d636dc1560da71&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;移动端自动化 AutoJS 快速入门指南（上）&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;移动端自动化 AutoJS 快速入门指南（上）&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1OTI0NjI1NQ==&amp;amp;mid=2247489603&amp;amp;idx=1&amp;amp;sn=a6a34a12eef296daebd26c48b73f5eec&amp;amp;chksm=fc1b6683cb6cef95ee4691327982c98d3432221f4bb434f96bbf17f408907b00c581352a1188&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;小技巧 | Get 到一个 Web 自动化方案，绝了！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;小技巧 | Get 到一个 Web 自动化方案，绝了！&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1OTI0NjI1NQ==&amp;amp;mid=2247488615&amp;amp;idx=1&amp;amp;sn=d422c71f5be57aa39b2b395e799ecce9&amp;amp;chksm=fc1b6aa7cb6ce3b13214f81188f9d851faf13c957150fe5bac4d2792390bcb0f7bcbc3b8d718&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;阿里最强 Python 自动化工具开源了！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;阿里最强 Python 自动化工具开源了！&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1OTI0NjI1NQ==&amp;amp;mid=2247489692&amp;amp;idx=1&amp;amp;sn=b37828376f5cd3c928d5ffe32bc30fba&amp;amp;chksm=fc1b665ccb6cef4ac88131da24374763618fe6a2643ae42827272821e8c93cf70ddbc50beb20&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;聊聊 PC 端自动化最佳方案 - Pywinauto&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1OTI0NjI1NQ==&amp;amp;mid=2247489653&amp;amp;idx=1&amp;amp;sn=3332989d96b12f909ce895d5823fe2ed&amp;amp;chksm=fc1b66b5cb6cefa3f63fd3ef3915386aa1e408ec049195c1099db131ff4686891ef962d978c1&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;聊聊 PC 端自动化最佳方案 - WinAppDriver&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1OTI0NjI1NQ==&amp;amp;mid=2247490580&amp;amp;idx=1&amp;amp;sn=71ed838dc1619c117eaade0348f0bf1b&amp;amp;chksm=fc1b62d4cb6cebc209d294e519a4096dd5eb1b3f868e1963e4ffbcb720efc55fe92ad6e194c7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;厉害了！推荐一个 Web 端自动化神器 - Automa&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;厉害了！推荐一个 Web 端自动化神器 - Automa&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;89428&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;END&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU1OTI0NjI1NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/atOH362BoyuUe1icelWmbMyTCRwoFPScmosYQheSZ9wsmr61Bfr2rvNav9j9QpDnUulNpCotEiaAoLzSAm4jZTjA/0?wx_fmt=png&quot; data-nickname=&quot;AirPython&quot; data-alias=&quot;AirPython&quot; data-signature=&quot;专注于Python爬虫/自动化/Web原创技术干货！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>49d1dc3aa98c34000fafb45fb8a19e49</guid>
<title>看了同事写的代码，我竟然开始默默的模仿了</title>
<link>https://toutiao.io/k/nv44xil</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;背景&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事情是这样的，目前我正在参与 XXXX 项目的搭建，需要与第三方对接接口。在对方的接口中存在几个异步通知，为了接口的安全性，需要对接口的参数进行验签处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了方便大家对异步通知返回参数的处理，Z 同事提出要将该验签功能进行统一封装，到时候大家只需要关注自己的业务逻辑即可。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Z同事的解决方案&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Z 同事选择的是“自定义参数解析器”的解决方案，接下来我们通过代码来了解一下。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;自定义注解&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Documented&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;br/&gt;&lt;span&gt;@Target&lt;/span&gt;({ElementType.PARAMETER})&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;@interface&lt;/span&gt; RsaVerify {&lt;br/&gt;    &lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 是否启用验签功能，默认验签&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;verifySign&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;default&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;自定义方法参数解析器&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@AllArgsConstructor&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Component&lt;/span&gt;&lt;br/&gt;&lt;span&gt;//实现 HandlerMethodArgumentResolver 接口&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;RsaVerifyArgumentResolver&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;HandlerMethodArgumentResolver&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; SecurityService securityService;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 此方法用来判断本次请求的接口是否需要解析参数，&lt;br/&gt;     * 如果需要返回 true，然后调用下面的 resolveArgument 方法,&lt;br/&gt;     *  如果不需要返回 false&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;supportsParameter&lt;/span&gt;&lt;span&gt;(MethodParameter parameter)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; parameter.hasParameterAnnotation(RsaVerify&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 真正的解析方法，将请求中的参数值解析为某种对象&lt;br/&gt;     * parameter 要解析的方法参数&lt;br/&gt;     * mavContainer 当前请求的 ModelAndViewContainer（为请求提供对模型的访问）&lt;br/&gt;     * webRequest 当前请求&lt;br/&gt;     * WebDataBinderFactory 用于创建 WebDataBinder 的工厂&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Object &lt;span&gt;resolveArgument&lt;/span&gt;&lt;span&gt;(MethodParameter parameter, ModelAndViewContainer mavContainer, NativeWebRequest webRequest, WebDataBinderFactory binderFactory)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        RsaVerify parameterAnnotation = parameter.getParameterAnnotation(RsaVerify&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (!parameterAnnotation.verifySign()) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; mavContainer.getModel();&lt;br/&gt;        }&lt;br/&gt;        &lt;br/&gt;        &lt;span&gt;//对参数进行处理并验签的逻辑&lt;/span&gt;&lt;br/&gt;        ......&lt;br/&gt;        &lt;br/&gt;        &lt;span&gt;//返回处理后的实体类参数&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; ObjectMapperFactory&lt;br/&gt;                .getDateTimeObjectMapper(&lt;span&gt;&quot;yyyyMMddHHmmss&quot;&lt;/span&gt;)&lt;br/&gt;                .readValue(StringUtil.queryParamsToJson(sb.toString()), parameter.getParameterType());&lt;br/&gt;    }&lt;br/&gt;   &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;创建配置类&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@AllArgsConstructor&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;PayTenantWebConfig&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;WebMvcConfigurer&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; RsaVerifyArgumentResolver rsaVerifyArgumentResolver;&lt;br/&gt;    &lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 将自定义的方法参数解析器加入到配置类中&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;addArgumentResolvers&lt;/span&gt;&lt;span&gt;(List&amp;lt;HandlerMethodArgumentResolver&amp;gt; resolvers)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        resolvers.add(rsaVerifyArgumentResolver);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;使用&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用方法非常简单，只需要在参数上引入注解就可以了&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@RestController&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Slf&lt;/span&gt;4j&lt;br/&gt;&lt;span&gt;@RequestMapping&lt;/span&gt;(&lt;span&gt;&quot;/xxx&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;XxxCallbackController&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * &lt;span&gt;@param&lt;/span&gt; params&lt;br/&gt;     * &lt;span&gt;@return&lt;/span&gt;&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@PostMapping&lt;/span&gt;(&lt;span&gt;&quot;/callback&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; String &lt;span&gt;callback&lt;/span&gt;&lt;span&gt;(@RsaVerify CallbackReq params)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        log.info(&lt;span&gt;&quot;receive callback req={}&quot;&lt;/span&gt;, params);&lt;br/&gt;  &lt;span&gt;//业务逻辑处理&lt;/span&gt;&lt;br/&gt;  .....&lt;br/&gt;  &lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;success&quot;&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;问题&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;问题一&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到这，细心的朋友应该会有所疑问：既然这边用到了自定义的注解，为什么不用&lt;strong&gt;切面&lt;/strong&gt;来实现，而是使用自定义的参数解析器呢？Very Good！这也是阿Q提出的疑问，同事说是因为 &lt;code&gt;jackson&lt;/code&gt; 的反序列化动作优先级远&lt;strong&gt;高于&lt;/strong&gt;切面的优先级，所以还没进入切面就已经报反序列化失败的错误了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;问题二&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么在 &lt;code&gt;controller&lt;/code&gt; 中注解 &lt;code&gt;@RequestBody&lt;/code&gt; 不见了?&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要回答这个问题，我们就得了解下&lt;code&gt;HandlerMethodArgumentResolverComposite&lt;/code&gt;这个类了，以下简称&lt;code&gt;Composite&lt;/code&gt;。&lt;code&gt;SpringMVC&lt;/code&gt; 在启动时会将所有的参数解析器放到 &lt;code&gt;Composite&lt;/code&gt; 中，&lt;code&gt;Composite&lt;/code&gt; 是所有参数的一个集合。当对参数进行解析时就会从该参数解析器集合中选择一个支持对 &lt;code&gt;parameter&lt;/code&gt; 解析的参数解析器，然后使用该解析器进行参数解析。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;又因为&lt;code&gt;@RequestBody&lt;/code&gt;所以使用的参数解析器&lt;code&gt;RequestResponseBodyMethodProcessor&lt;/code&gt;优先级高于我们自定义的参数解析器，所以如果共用会被前者拦截解析，所以为了正常使用，我们需要将&lt;code&gt;@RequestBody&lt;/code&gt; 注解去掉。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * Find a registered {&lt;span&gt;@link&lt;/span&gt; HandlerMethodArgumentResolver} that supports&lt;br/&gt; * the given method parameter.&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Nullable&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; HandlerMethodArgumentResolver &lt;span&gt;getArgumentResolver&lt;/span&gt;&lt;span&gt;(MethodParameter parameter)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    HandlerMethodArgumentResolver result = &lt;span&gt;this&lt;/span&gt;.argumentResolverCache.get(parameter);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (result == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; (HandlerMethodArgumentResolver resolver : &lt;span&gt;this&lt;/span&gt;.argumentResolvers) {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (resolver.supportsParameter(parameter)) {&lt;br/&gt;                result = resolver;&lt;br/&gt;                &lt;span&gt;this&lt;/span&gt;.argumentResolverCache.put(parameter, result);&lt;br/&gt;                &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; result;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;C同事的解决方案&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上边 Z 同事的方案已经可以解决该问题了，但是该方案还有两个不足之处：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;需要每一个回调都去创建自己的 &lt;code&gt;controller&lt;/code&gt; 层，没有一个对外的统一入口；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;需要在方法上添加自定义注解，侵入性比较强；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此经过我们的商议，决定摒弃该方案，但是该方案的思想值得我们学习。接下来让我们分析一下新的解决方案：&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;定义业务接口类&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务接口类包含两个方法：具体业务处理的类型；业务的具体处理方法。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;interface&lt;/span&gt; &lt;span&gt;INotifyService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;/**&lt;br/&gt;  * 处理类型&lt;br/&gt;  */&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&lt;span&gt;public&lt;/span&gt; String &lt;span&gt;handleType&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt; &lt;span&gt;/**&lt;br/&gt;  * 处理具体业务&lt;br/&gt;  */&lt;/span&gt;&lt;br/&gt; &lt;span&gt;Integer &lt;span&gt;handle&lt;/span&gt;&lt;span&gt;(String notifyBody)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;异步通知统一入口&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@AllArgsConstructor&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@RestController&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@RequestMapping&lt;/span&gt;(value = &lt;span&gt;&quot;/notify&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;NotifyController&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;private&lt;/span&gt; IService service;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@PostMapping&lt;/span&gt;(value = &lt;span&gt;&quot;/receive&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; String &lt;span&gt;receive&lt;/span&gt;&lt;span&gt;(@RequestBody String body)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//处理通知&lt;/span&gt;&lt;br/&gt;        Integer status = service.handle(body);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;success&quot;&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Iservice 中做两个步骤：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;在 spring 启动之后，收集所有的类型为 &lt;code&gt;INotifyService&lt;/code&gt;的类并放入&lt;code&gt;map&lt;/code&gt;中;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将参数进行处理转化，并验签处理；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;private&lt;/span&gt; ApplicationContext applicationContext;&lt;br/&gt;&lt;span&gt;private&lt;/span&gt; Map&amp;lt;String,INotifyService&amp;gt; notifyServiceMap;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt; * 启动加载&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@PostConstruct&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;init&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt; Map&amp;lt;String,INotifyService&amp;gt; map = applicationContext.getBeansOfType(INotifyService&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt; Collection&amp;lt;INotifyService&amp;gt; services = map.values();&lt;br/&gt; &lt;span&gt;if&lt;/span&gt;(CollectionUtils.isEmpty(services)){&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt; }&lt;br/&gt; notifyServiceMap = services.stream().collect(Collectors.toMap(INotifyService::handleType, x -&amp;gt; x));&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; Map&amp;lt;String, INotifyService&amp;gt; &lt;span&gt;getNotifyServiceMap&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; notifyServiceMap;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; Integer &lt;span&gt;handle&lt;/span&gt;&lt;span&gt;(String body)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;//参数处理+验签逻辑&lt;/span&gt;&lt;br/&gt;    ......&lt;br/&gt;        &lt;br/&gt; &lt;span&gt;//获取具体的业务实现类&lt;/span&gt;&lt;br/&gt; INotifyService notifyService=notifyServiceMap.get(notifyType);&lt;br/&gt; Integer status=&lt;span&gt;null&lt;/span&gt;;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt;(Objects.nonNull(notifyService)) {&lt;br/&gt;  &lt;span&gt;//执行具体业务&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;   status=notifyService.handle(JSON.toJSONString(requestParameter));&lt;br/&gt;  } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;   e.printStackTrace();&lt;br/&gt;  }&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;//后续逻辑处理&lt;/span&gt;&lt;br/&gt;    ......&lt;br/&gt;        &lt;br/&gt; &lt;span&gt;return&lt;/span&gt; status;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;业务具体实现&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;NotifySignServiceImpl&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;INotifyService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; String &lt;span&gt;handleType&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;type_sign&quot;&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Transactional&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Integer &lt;span&gt;handle&lt;/span&gt;&lt;span&gt;(String notifyBody)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//具体的业务处理&lt;/span&gt;&lt;br/&gt;        ......&lt;br/&gt;    ｝&lt;br/&gt;｝&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;小结&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;此方案提供统一的异步通知入口，把公共的参数处理和验签逻辑与业务逻辑剥离。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;利用 java 动态加载类的特性，将实现类通过类型进行收集。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;利用 java 多态的特性，通过不同的实现类来处理不同的业务逻辑。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到这，相信大家已经对这两种实现方案有了一定的理解，大家可以试着在以后的项目中应用一下，体验一把！&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;福利篇&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近我在掘金获得了两个小册&lt;strong&gt;5折&lt;/strong&gt;优惠码，不知道大家有没有兴趣。在本文下留言“说出你对阅读同事代码的感受”即可参与活动，阿Q会从留言中选出两位读者免费赠送。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8409893992932862&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/55HPQyguvpOvFM7veWAB1tsZ7uS1ez9M5Xfjpib2qy0SEYpCRwtdypowJctFL508S8VVpobUAjVVxzWiaT6SJUMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;849&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是今天的全部内容了，如果你有不同的意见或者更好的&lt;code&gt;idea&lt;/code&gt;，欢迎联系阿Q，添加阿Q可以加入技术交流群参与讨论呦！&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI5MDg2NjEzNA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/55HPQyguvpMAn4Ha81WVBfsKnC9ficVemZff27LiaSoKX83JqwnNmrNhb4D4oAjW7wiaDwtkLTTCRs1A1hanfNu9g/0?wx_fmt=png&quot; data-nickname=&quot;阿Q说代码&quot; data-alias=&quot;AQ_Shuo&quot; data-signature=&quot;专注于后端技术栈分享：文章风格多变、配图通俗易懂、故事生动有趣&quot; data-from=&quot;1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3305ed65f5f15f3539479304873264da</guid>
<title>快速上手搜索引擎的秘密武器：Lucene</title>
<link>https://toutiao.io/k/qiiapck</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这篇文章介绍下这个 &lt;strong&gt;Lucene&lt;/strong&gt;，下篇写写 &lt;strong&gt;ElasticSearch&lt;/strong&gt; , 然后再继续填 &lt;strong&gt;Spring&lt;/strong&gt; 的坑 🕳&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;内容的话就很基础啦🐖，希望能帮你快速入门，了解下它&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;目录&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6983568075117371&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBCGJRunBwDh6t5dsuTt44DqUdiabPia7qwYBuiaK3hpVoEiaHwcfekUvt8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;852&quot;/&gt;&lt;figcaption&gt;image-20210930071825137&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为啥要介绍这个 &lt;strong&gt;Lucene&lt;/strong&gt; 呢？毕竟它是搜索引擎核心中的核心&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实是因为我想体验下这个工具包，试着感受下 &lt;strong&gt;ElasticSearch&lt;/strong&gt; 为啥要封装它？以及他们之间的联系~ 等🐖&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Lucene&lt;span/&gt;&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Lucene 是一个开源的，&lt;strong&gt;全文索引工具包&lt;/strong&gt;。有 &lt;strong&gt;索引，搜索，分词&lt;/strong&gt; 等功能&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是 &lt;strong&gt;ElasticSearch&lt;/strong&gt; 和 &lt;strong&gt;Apache Solr&lt;/strong&gt; 的核心。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 MySQL 中，Innodb 和 MyISAM 的索引结构都是 &lt;strong&gt;B+树&lt;/strong&gt;， 而到了 &lt;strong&gt;Lucene&lt;/strong&gt; , 就不得不说下这个&lt;strong&gt;倒排索引&lt;/strong&gt;了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;倒排索引&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个就是通过  value ——&amp;gt; Key ，感觉有点像 &lt;strong&gt;MySQL&lt;/strong&gt; 的回表操作🐖，但是这里还有 &lt;strong&gt;分词，文档&lt;/strong&gt; 等概念。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如我们平时在 百度，Google ，电商平台等中进行搜索时，就是通过这个 &lt;strong&gt;关键字&lt;/strong&gt; 找到相应的 &lt;strong&gt;文档&lt;/strong&gt; 内容出来&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;概念&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面会介绍下这些概念 👇&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7777777777777778&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBP5R0lnDXUkGZvZ1lhbVnhNicODtP4F0PEC41ibgVvFAlzk47nKvN6J4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;369&quot;/&gt;&lt;figcaption&gt;概念一览&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他们之间的关系就用这个来表示啦，这个也是本文的重点🐖&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6066098081023454&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUB1FdQteVDB2AiaU1WiaFMfCltDSLTE7iakxJ8JrP6icgZm3O5d8fqe8WibTA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;938&quot;/&gt;&lt;figcaption&gt;概念图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面开始一一介绍啦😄&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;文档&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对应 &lt;strong&gt;Document&lt;/strong&gt; 对象 👇&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;文档&lt;/strong&gt; 是 &lt;strong&gt;Lucene&lt;/strong&gt; 内部的数据结构，索引文档时，会按照一定规则去创建索引，生成倒排索引文件。&lt;/p&gt;&lt;p&gt;查询时就直接搜索到对应的索引文件，获取数据，效率非常高！&lt;/p&gt;&lt;p&gt;&lt;strong&gt;它是搜索和索引的单位，也是字段的集合。&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.29077117572692796&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBjfYNhU78kR5EkACzKicqoT3kCtQHteBiaYzSd5PcPG3qHgmB2USBs7qA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;791&quot;/&gt;&lt;figcaption&gt;image-20210929070420233&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;字段&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对应 &lt;strong&gt;Field&lt;/strong&gt; 对象 👇 ，由三部分组成 ：&lt;strong&gt;name，type，value&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;name&lt;/strong&gt; ：&lt;strong&gt;字段域名&lt;/strong&gt;， 可以看作我们创建的 Model 的属性名称，如 name，age，id 等等，在同个索引库中是唯一的&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;value&lt;/strong&gt;  :  &lt;strong&gt;字段值&lt;/strong&gt;， 存储文档的部分内容，如&lt;code&gt;name：Java4ye&lt;/code&gt; 这个 &lt;strong&gt;Field&lt;/strong&gt; 中的值  &lt;strong&gt;Java4ye&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;type&lt;/strong&gt;   :  &lt;strong&gt;字段类型&lt;/strong&gt;，如 是否分词，索引，存储 等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5483476132190942&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUB33ZJgOKwqianlj5hv2laVK0DzwT7r2roEdbpxB2bsx8ibzPtqpOetrEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;817&quot;/&gt;&lt;figcaption&gt;image-20210929070834194&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;词汇&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对应 &lt;strong&gt;Term&lt;/strong&gt; 对象 👇 ，由两部分组成 ：&lt;strong&gt;name，value&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;name&lt;/strong&gt; ：&lt;strong&gt;Field&lt;/strong&gt; 的名称 ，即 &lt;strong&gt;字段域名&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;value&lt;/strong&gt;  :  &lt;strong&gt;Field&lt;/strong&gt; 中文档的部分内容 ，即 &lt;strong&gt;字段值&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.29008567931456547&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUB3xUvmrDyQVCAYWyhAhvicaOaomia9FqZYubrwowdx5geehKHr2XUY9Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;817&quot;/&gt;&lt;figcaption&gt;image-20210929073043617&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果还不清楚，那么再看看下面这里你就懂啦~&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;分词&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个是&lt;strong&gt;超级核心！&lt;/strong&gt; 🐖&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;分词的目的是为了索引，索引的目的是为了搜索，就像查字典一样🐖&lt;/p&gt;&lt;p&gt;分词的过程是先分词，再过滤（过滤掉标点符号，停用，重复的词，大写转成小写等）&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如这个标准分词器 ：&lt;strong&gt;StandardAnalyzer&lt;/strong&gt; 👇&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过注释可以发现它会进行 &lt;strong&gt;停用词&lt;/strong&gt;，&lt;strong&gt;大写转成小写&lt;/strong&gt; 的过滤操作。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.18269230769230768&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBKWwTYOgiclFicZVDibVCYSJZ9EfGPo0qJdK3M8XjajxibcibeVYO5rzwQ3w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;728&quot;/&gt;&lt;figcaption&gt;image-20210929080734487&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;中文分词器推荐 &lt;strong&gt;IK-Analyzer&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;小结&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么到了这里，咱们再把上面的知识点串一串~ 😄&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过咱们这个分词器，会对字段域中的 &lt;strong&gt;value&lt;/strong&gt; 进行分词，当然你也可以根据需求选择不分词。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不分词就一个 &lt;strong&gt;Term&lt;/strong&gt; ，分词后会产生很多 &lt;strong&gt;Term&lt;/strong&gt;，&lt;strong&gt;Term&lt;/strong&gt; 的 &lt;strong&gt;name&lt;/strong&gt; 就是这个 &lt;strong&gt;字段域的名称&lt;/strong&gt;， &lt;strong&gt;Value&lt;/strong&gt; 就是分出来的词。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如 对 &lt;code&gt;desc:nice to meet you&lt;/code&gt; 的字段域进行过分词。会出现这四个单词：nice，to，meet，you&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5660130718954248&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBw9s2AO9pc9KB10ExrBYAliaqrSnPFgtBqO7Iq24liapSgKoVh7flpYWA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;765&quot;/&gt;&lt;figcaption&gt;Field 和 Term 的关系&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;索引库&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;差点漏了这个~&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到里面有 段的概念 Segment 和 锁🔒 等&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3561643835616438&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBD7clXFm1EWRxicPAQnA4TC3miaNkvZKmbKricHbgrX0ItkVscFFBYrXzA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;730&quot;/&gt;&lt;figcaption&gt;image-20210930080914187&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;把整个文件夹看成一个 Index，Segment  就是里面的 sub-index。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当创建索引时，不是立刻就刷到磁盘的，需要先写入缓冲区，然后等满了，或者关闭了，手动 flush 等操作才一起写入磁盘，这也是它为什么是 &lt;strong&gt;近实时而非实时查询&lt;/strong&gt; 的原因 🐖&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查询时其实就是在 Segment  中查找，需要对多个 Segment 进行合并，搜索，找到相应的 &lt;strong&gt;docID&lt;/strong&gt; ，再去存放数据的文件中获取并返回。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Luke&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下载地址：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/DmitryKey/luke&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里用这个 &lt;strong&gt;Luke&lt;/strong&gt; 工具演示下 👇&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.647964796479648&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBVWa5ak7Ak8kxVHn3h1gLL3DYOOPabRt225q3Jibh7D0TcibwcczG5FpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;909&quot;/&gt;&lt;figcaption&gt;Luke工具&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到 &lt;strong&gt;desc&lt;/strong&gt; 字段域分词后有四个 &lt;strong&gt;Term&lt;/strong&gt; 。&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面介绍完了这些概念，这里就来开始实践啦，将这些概念串联起来，代码同样可以在 &lt;strong&gt;Github&lt;/strong&gt;  上获取 👇&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/Java4ye/springboot-demo-4ye&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;全文检索流程&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5015906680805938&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUB52oVtLHyxjgBAu2nZWic5tt0v9xTzYBowY0U3mSoYEuGelgdKOjwfqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;943&quot;/&gt;&lt;figcaption&gt;图片来自网络&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里就两个操作👉  &lt;strong&gt;创建索引&lt;/strong&gt; 和 &lt;strong&gt;查询索引&lt;/strong&gt; ，操作步骤写代码里啦，就不多说了🐖&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;创建索引&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8158236057068742&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBql9ZshfiaCsVooL05qWSGSpAUjwu6t0z3NHbDBmTRB1icIxYBcJaJkqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;771&quot;/&gt;&lt;figcaption&gt;image-20210929224345327&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;查询索引&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.124780316344464&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBr3lA2VjibDfkt1nRoANdSJWAPN8uJ3ZFFK5uPjZuib6iatLib7cAQwHV3Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;569&quot;/&gt;&lt;figcaption&gt;image-20210930072539002&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;奇怪的收获&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于项目中引入了 &lt;strong&gt;ElasticSearch&lt;/strong&gt; , 它的底层核心又是 &lt;strong&gt;Lucene&lt;/strong&gt; ，所以这里我没有再去引入 &lt;strong&gt;Lucene&lt;/strong&gt; , 而是直接使用，结果却成了踩坑的开始🐖&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里可以看到 &lt;strong&gt;Lucene&lt;/strong&gt; 是8.5.1 版本的，这样 &lt;strong&gt;Luke &lt;/strong&gt;工具是运行不了的 ，会报错，但是 &lt;strong&gt;Lucene8.0&lt;/strong&gt; 版本可以运行，所以得重新引包。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6609442060085837&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBrYYxoFx0lt1qOHjux5Ko3wrEAGNIFD1ZBG6AkLgIO5wmRsgh3wEE5A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;466&quot;/&gt;&lt;figcaption&gt;image-20210928210532558&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为啥报错呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到作者在说这个工具不维护了🐖&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而 &lt;strong&gt;Lucene&lt;/strong&gt; 也早就捐献给 &lt;strong&gt;Apache&lt;/strong&gt; 了&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6144329896907217&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBEmICVU6siaI8gXjUqsVv3AnTJkpq0OdqkqLHdg1oCzjV0LweSDcTWnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;970&quot;/&gt;&lt;figcaption&gt;image-20210929231213122&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时我还发现了  &lt;strong&gt;Luke&lt;/strong&gt; 工具使用到这个 &lt;strong&gt;JavaSPI&lt;/strong&gt; 机制。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2729083665338645&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBy0LRAjqialUeiawLA0zYbdAp5YRib7m3pKReBj0rJrWqjAicMuKRQ6A4nw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1004&quot;/&gt;&lt;figcaption&gt;image-20210929230604020&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有 &lt;strong&gt;Lucene&lt;/strong&gt; 底层关键字的数据结构是 &lt;strong&gt;跳跃表&lt;/strong&gt; ( Redis 也用到了）， &lt;strong&gt;FST&lt;/strong&gt; 状态机。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;FST&lt;/strong&gt;, 全称Finite State Transducer, 中文翻译: 有限状态转换器或有限状态传感器。&lt;strong&gt;FST&lt;/strong&gt; 最重要的功能是可以实现 Key 到 Value 的映射，相当于 HashMap&amp;lt;Key,Value&amp;gt;。&lt;strong&gt;FST&lt;/strong&gt; 的内存消耗要比HashMap 少很多，但 &lt;strong&gt;FST&lt;/strong&gt; 的查询速度比 HashMap 要慢。&lt;strong&gt;FST&lt;/strong&gt; 在 &lt;strong&gt;Lucene&lt;/strong&gt; 中被大量使用，例如：倒排索引的存储，同义词词典的存储，搜索关键字建议等&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;跳跃表 不支持模糊查询&lt;/strong&gt;  ，&lt;strong&gt;FST 支持模糊查询&lt;/strong&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;搜索过程&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大概就是这样，通过这个词，去找到对应的文档id，再获取文档出来，依据权重啥的排序。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7269890795631825&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBxlzfQ2H05H9pRTRCfWo7XXk7PUC0bdEys9Ot26wEVmEw3elOQPNDMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;641&quot;/&gt;&lt;figcaption&gt;image-20210930075225873&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;词典数据结构有这么多种👇&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.39741750358680056&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zIjiaGEEKdYEnQgpnyCT5O7c9DkuEhNUBduLj2C4k6va39MwszoTf1JJGA3E65fPMn6k7hQ0kl8CKf5qUorJYEA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;697&quot;/&gt;&lt;figcaption&gt;图片来自网络&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;最后&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文就分享到这里啦🐖&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;往细了看，可以发现这里涉及到很多 IO原理，以及底层数据结构的知识，编码上目前就粗略认识到这个 JavaSPI 的使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;快去敲下代码，了解这些概念吧，这样是不是也能有个基础版的搜索引擎了 哈哈😝&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;👉 https://github.com/Java4ye/springboot-demo-4ye&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;喜欢的话可以 &lt;strong&gt;点赞 &amp;amp;&lt;/strong&gt; &lt;strong&gt;关注&lt;/strong&gt; 并 &lt;strong&gt;星标&lt;/strong&gt; 下公众号 &lt;strong&gt;Java4ye&lt;/strong&gt; 支持下 &lt;strong&gt;4ye&lt;/strong&gt; 呀😝，这样就可以第一时间收到更文消息啦🐷&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;我是4ye 咱们下期应该……很快再见！！&lt;/strong&gt; 😆&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3b78e4f4553bede13b4dbe7b65e3fc4d</guid>
<title>职场新人如何提高工作效率</title>
<link>https://toutiao.io/k/jn52kdc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;拖了很久的职场新人三部曲系列的第二篇，终于还是写出来了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上一篇文章中聊到了跳槽到新公司需要快速融入团队，落地拿到结果，证明自己的价值。但在日常的工作中，我们经常遇到的场景往往是下面几种：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;需求积压太多，赶需求疲于奔命；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;上午忙开会，下午忙复盘，晚上写代码；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但话说回来，面对问题解决问题，才是正确的选择。能将复杂的问题简单化，解决问题，也是我们价值诉求的一种延伸。这篇文章，结合我个人之前在职场的一些经验教训和实践，聊聊进入新的工作环境，如何提高工作效率来解决复杂问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;01 · 明白低效的原因是什么&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;工作效率低的原因有很多种：&lt;span&gt;客观因素、所处环境平台、主观原因&lt;/span&gt;。下面我将几种因素罗列出来，谈谈我的看法。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;流程规范&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;每个公司有自己不同的一些流程规范，从产品设计到上线交付运营的角度来说，常见的有：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这些流程规范的目的是保障&lt;span&gt;从需求到产品交付过程按照成熟的软件工程最佳实践来执行，避免出现预期之外的风险&lt;/span&gt;。审视自己目前所处公司或平台，是否在软件工程实践流程方面欠缺了某些环节，导致频繁的需求变更、代码修改以及不断测试不断验证发布，最终线上出现故障。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;工作习惯&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;很少有人的工作，是每天重复做同一件事情。事实上很多人每天的工作是有好几件事情要做，同时这个过程中可能夹杂着临时被拉去开会，不断有人过来找你沟通对齐等各种事项。我们都知道要想高效的完成一件事，最好是高度专注的做事情，但面临上述这种频繁被打断思路的情况，该如何来解决呢？&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;熟悉程度&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;“工欲善其事，必先利其器；欲利其器，必晓其理”。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;还是从研发的角度来说，比如要实现一个业务需求，需要考虑需求对应的场景、技术方案如何设计、如何估时排期、团队所使用的技术栈、编码规范、对应的测试同学是谁、如何沟通提测等。对于很多进入一个新环境的同学来讲，对需求，工具，技术栈以及人的熟悉，是很重要的一件事。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;沟通方式&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;现代企业中需求研发交付是个高度成熟跨团队多人协作的项目，沟通是其中很重要的一个环节。如果沟通存在问题，那可能会导致很多问题。比如：&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;时间管理&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;上面讲到了工作习惯，日常工作中每天要面临很多事情，什么时候做什么事情，先做哪件事情，这些事情需要谁协助，潜在风险是什么都需要每个人去思考并解决。如果不能很好的解决这些问题，会导致下列的几种情形：&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;向上管理&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;其实不太想谈这个topic，但这个topic实际上很重要。我们工作的任务大部分来自于自上而下的拆解，如果不能和上级明确自己要做的事情，做这件事情的目标和衡量标准，很多时候都是徒劳无功的。上级觉得你没进度没产出，你自己会觉得心累无爱。久而久之，矛盾和边缘化就会产生。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;如何解决这些低效的问题？&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;下述的一些解决低效的技巧，大多来自我个人的工作实践，仅供参考。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;主动提出建议&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;如果发现工作流程中出现了上述关于流程规范的问题，建议&lt;span&gt;了解背后的原因，然后适时提出建议&lt;/span&gt;。当然，如果岗位职责匹配，可以自己&lt;span&gt;建立流程规范，然后推动落地&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为什么说要主动提出建议？因为&lt;span&gt;现代企业中需求研发交付是个高度成熟跨团队多人协作的项目&lt;/span&gt;。仅靠个人的专业素养是很难保证整体的行动和目标一致性的。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;尝试培养习惯&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;好的工作习惯可以大大提高日常工作的效率，下面的几点培养习惯的技巧，请Get√：&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;&lt;strong&gt;怎么快速学习&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;如何高效沟通&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;高效沟通，在上篇文章《&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NDAwMjM1NQ==&amp;amp;mid=2247484296&amp;amp;idx=1&amp;amp;sn=42b8f3b4f97c0503047a6e2a1a7e208c&amp;amp;chksm=ce714bd4f906c2c250a9a8832137aa593345866adf34ae690df0f585d5a396b1ac23e1c3183f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍职场新人如何快速融入团队‍&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;职场新人如何快速融入团队&lt;/a&gt;》中已经有了大篇幅介绍，这里不做描述，大家可以看之前的文章。&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;做好时间管理&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;很多人都在讲时间管理，实际上时间是没办法管理的，能管理的是对人的管理，其中包括别人和自己。因此我总结了下面几个小技巧，希望能有所帮助。&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;学会拒绝，界定工作的边界和职责范围；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;不必要的会议不用参加，事后看会议纪要或者和同事聊聊就好；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;需要别人协助或者组织会议提前约定好时间，将协助你完成事项的人的时间提前占用；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;建立工作清单，每天来公司第一件事列出今天/本周要做的事情，分类按重要程度排序，完成打个勾；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;借助时间管理工具（飞书钉钉的日历）将自己要做的事情进行时间排期，利用提醒功能，强制让自己去做事情，而不是靠人本身的自觉去完成；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;strong&gt;&lt;span&gt;多沟通和常汇报&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;多沟通的目的是不断和上级确认要做的事（背景、目标、衡量维度），在不断沟通中，明确目标和保持方向一致性。当然，过程中需要注意，每次沟通需要有新的沟通内容，比如方案、进度、风险。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;常汇报并不是说有事没事找领导唠嗑，而是让领导知道你在做什么，目前进度，遇到什么问题需要领导协助解决，不要临近deadline或者出问题了领导才知道。有时候对上级来说，不求有功但求无过，是很重要的，因为他也要向上汇报向上管理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;沟通和汇报是个人工作价值主动传递的一种诉求&lt;/span&gt;&lt;/strong&gt;，想明白这点，能减轻很多工作中的“心累”状态。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最后，需要在工作中不断实践复盘思考，找到适合自己的方式，才能提高工作效率。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg2NDAwMjM1NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/ftksfIbzTWhnnG3FnMGxk4tujZAJv8cPZibDbChbEzPK3FJD5aM9XFQQicu4Lu3L3eo5ldtz5Q63ctdpxhAD25rw/0?wx_fmt=png&quot; data-nickname=&quot;工程师的自我修养之路&quot; data-alias=&quot;Engineer_Way&quot; data-signature=&quot;专注互联网行业技术讯息、产品规划、学习成长、读书思考、优质内容分享等方面，这是一个有趣的工程师的自我提升之路。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;转载：请点击关注，后台回复或者私信联系。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;往期精彩文章推荐&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NDAwMjM1NQ==&amp;amp;mid=2247484296&amp;amp;idx=1&amp;amp;sn=42b8f3b4f97c0503047a6e2a1a7e208c&amp;amp;chksm=ce714bd4f906c2c250a9a8832137aa593345866adf34ae690df0f585d5a396b1ac23e1c3183f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;职场新人如何快速融入团队&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;职场新人如何快速融入团队&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NDAwMjM1NQ==&amp;amp;mid=2247484451&amp;amp;idx=1&amp;amp;sn=652664d12d5ef5313fa8bdbad923b02f&amp;amp;chksm=ce714c7ff906c569a33b6ce4c80322a00ec9cb64c06c43aaf53734f3b164c0ba6838555c4afe&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;DevOps，技术工程效率的最佳保障！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;DevOps，技术工程效率的最佳保障！&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NDAwMjM1NQ==&amp;amp;mid=2247484477&amp;amp;idx=1&amp;amp;sn=10e94124ade41b9a5ec74a35d16c87f7&amp;amp;chksm=ce714c61f906c5778f70aa19a338dafe22b4f96d0c128c62c15254123866bea48202b8c68609&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;从技术专家到技术管理，你必须知道的几件事&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;从技术专家到技术管理，你必须知道的几件事&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>