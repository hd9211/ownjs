<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>2720c7fdeda81bec550dfdf2b5dd6770</guid>
<title>盒子放久了，总会长出猫的！猫盒+抓板，点击链接立即购买！</title>
<link>https://toutiao.io/k/kcky0ar</link>
<content:encoded>&lt;div&gt;&lt;body id=&quot;readabilityBody&quot;&gt;


&lt;/body&gt;
&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b966d723322a4beef32cb793e0184f27</guid>
<title>[推荐] 什么人能成为Leader，大Leader该做什么</title>
<link>https://toutiao.io/k/pnlaqae</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原创不易，求分享、求一键三连&lt;/p&gt;&lt;/blockquote&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;两个故事&lt;/span&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;谁能成为Leader&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前接手了一块产品业务线，于是与原Leader说了下分工，大概意思是：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我是过来学习的，也能给团队带来更多的资源，团队内的工作你继续管理，之前的规划继续做，不要管我。在愉快（&lt;strong&gt;「真愉快」&lt;/strong&gt;）的相处下，到了部门周会。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;周会上，我发现一旦是团队有疏漏的地方，这位leader，&lt;strong&gt;「自然而然」&lt;/strong&gt;、骄傲的说道：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这块小钗会做规划，这块小钗下来会组织，这块我下来跟小钗聊聊，小钗让你准备下，小钗说不需要提供......&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尼玛，我怎么成背锅侠了！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里要注意，这个产品同学&lt;strong&gt;「绝对不是因为不满意我的存在」&lt;/strong&gt;而这样说的！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总结下来，出现这种情况的主要原因是：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;团队中如果出现一个新leader（可能最强的人）后，那么其余人甚至是之前的leader，更倾向于停止思考，事事请示，躺平等待带飞...&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Leader该做什么&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在之前一次年底考评的时候，有一位leader将一个案例同时用到了自己和下属身上，老板发出了责问：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目到底你是负责人，还是你下面的同学是负责人，如果下面的同学是负责人，为什么要算到你的头上？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老板这边的逻辑是，一件事只能放到一个人身上，下属用了，你就不能用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;leader感到很委屈，他的逻辑是，我投了大量的资源支持这个同学做这个项目，作为管理者，我的主要工作是管理啊！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在那个场景下，老板多少有点刻意，该同学的反驳又很苍白，最终效果不太好，但是却给我留下了深刻的印象和疑问：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「大leader跟一线leader究竟有何不同？」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;跟这个相关的一个现象就是，有些leader定位不清晰喜欢抢下面同学活干，这种行为能带来&lt;strong&gt;「巨大的安全感」&lt;/strong&gt;，这种安全感甚至是&lt;strong&gt;「可触摸的」&lt;/strong&gt;！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;困难与担当&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先回答第一个故事的问题：&lt;strong&gt;「什么人适合做Leader」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里直接给出答案：&lt;strong&gt;「有担当的人适合做Leader」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;故事一如果对应&lt;strong&gt;「权责利模型」&lt;/strong&gt;，其行为是合理的，但合理未必是正确的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为这类同学在晋升，或&lt;strong&gt;「重大机会来临时往往不会被作为首选」&lt;/strong&gt;，这里的核心原因就是&lt;strong&gt;「担当，责任心」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于更远的路，&lt;strong&gt;「担当是重要的特质」&lt;/strong&gt;，Leader会遇到很多&lt;strong&gt;「三不管事物」&lt;/strong&gt;，部门互相推脱造成的&lt;strong&gt;「全局浪费」&lt;/strong&gt;是惊人的！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面对巨大的困难，人们倾向于呼唤英雄，或将自己摘干净。于是一些有意思的现象就产生了：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）各部门发现创新难后更倾向于&lt;strong&gt;「老板带飞或躺平」&lt;/strong&gt;；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）做事&lt;strong&gt;「不具备持续性」&lt;/strong&gt;，上层关注点变了后，容易将手里的事丢弃，一些&lt;strong&gt;「重要的事也就不了了之了」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并且人们自古是慕强、崇拜英雄的，这种行为很容易被自己说服：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）全力做老板关注的事情有什么不对；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）老板的&lt;strong&gt;「战略变化比我战术都快」&lt;/strong&gt;，光是跟着也很累啊；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）老板一个假动作又把我忽悠瘸了；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要较真的话，我认为这是一种&lt;strong&gt;「甩锅行为」&lt;/strong&gt;，这种行为不好判断，也没有依据去惩罚这种行为，毕竟跟着英雄的思路有什么不对呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是&lt;strong&gt;「浪费行为因为没有成本而更肆无忌惮」&lt;/strong&gt;；&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;有担当的人倾向于&lt;strong&gt;「解决问题」&lt;/strong&gt;，投机的人倾向于&lt;strong&gt;「转移问题」&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，相较于一线员工，Leader是新的起点，跟之前的压力类型有所不同，该吃的屎更大坨，逐渐从&lt;strong&gt;「体力痛苦、脑力痛苦」&lt;/strong&gt;，变成了&lt;strong&gt;「心理痛苦」&lt;/strong&gt;，请关注这批同学的心理健康！&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Leader的能力模型&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Leader也会有相关的能力要求，所以需要回答Leader的评价模型是什么：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;leader是个相对复杂的工种，我这边形成了一个五维评价模型，提出来跟大家讨论：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;战略能力&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;战术能力&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;信息收集能力&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;表达（营销）能力&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;持之以恒的能力&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7555555555555555&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTALTBqwSqpgW7wnaZibAibbKicjcicbjGt8RzsaWSVb9mOgTZDGL5Idjkm2Hz3cLDricMYkf6vehkkXuRg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;战略能力&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;战略能力是极其重要而稀缺的能力&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;战略能力的本质是&lt;strong&gt;「对事物的认知程度」&lt;/strong&gt;，好的战略能力可以&lt;strong&gt;「清晰的预测未来」&lt;/strong&gt;、发掘&lt;strong&gt;「事件的发展的趋势」&lt;/strong&gt;。战略能力越强，对未来的描述&lt;strong&gt;「越清晰」&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;战略的意义是提出目标（相对正确的目标），需要回答what的问题，只有提出正确目标的人才能成为合格的leader，所以提升战略能力事实上是提升个人整体的认知能力.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「认知是自我对世界认知的投影」&lt;/strong&gt;，人人都是有认知能力，所以人人都有战略能力，小到我要买一个玩具，大到我要做世界首富，都可以是战略能力。这样说有点虚，这里举两个点说明：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一、战略能力可以是确定我们当前团队的团队文化是什么.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的文化可以是某种特质、某种喜好，最初创业团队leader的特质可能会决定这个团队可以走多远，一个健康的团队一定不会缺少某个特质（可以参考贝尔宾性格测试）.&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如说，我们可以确定我们的团队文化是能者居之、轻松平等、战功文化、帮扶文化、狼性文化......&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;二、战略能力可以是提出团队目标，&lt;strong&gt;「目标是真实能将一个团队【短时间】凝聚的方式」&lt;/strong&gt;，这里的目标可以是团队目标、业务目标、个人目标，人才会因为目标聚集，却会因为文化或者&lt;strong&gt;「更大的目标」&lt;/strong&gt;而留下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的团队目标可以是：把盘子做大、成为技术最好的团队、活下来、集体升职加薪......&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;做战略（或者说做目标）首先要考虑长线，全局最优，不要总是思考&lt;strong&gt;「分蛋糕的方式」&lt;/strong&gt;（也不要完全不考虑），要想办法&lt;strong&gt;「把蛋糕做大」&lt;/strong&gt;；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其次要搜集足够的信息量、方案，建立完善的认知&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;战术能力&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;战术主要解决的是目标（可以是团队目标、个人目标）如何实践的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说得更具体一点可以是执行力，其三要素是：意愿、信息、能力。一般来说，确定团队目标后，我们所谓“秀操作”的管理手段，全部是战术层面的表现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样说比较虚，我提一个概念：战术的核心是好的&lt;strong&gt;「节奏感」&lt;/strong&gt;：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;所谓节奏感，可以简单理解为leader对自己的时间管理，梳理出事物的轻重缓急，优先提出不要做什么，再考虑要做什么，再确定做事优先级，其中拒绝的能力一定要重视！！！&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;战略是在正确的事件做正确的事，战术是将这件事做成，这里再提一点解释战略和战术的关系：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.987037037037037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTALTBqwSqpgW7wnaZibAibbKic0bQuc6wkSOuUSjgXXoXXQIkOOabmcicuuibNkNBiaqju1aYaI8DmB7TnA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;战略往往很清晰、很简单，可以做的事情极少，好的战略甚至不需要宣导；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;战略演化出来的路径也不会太复杂，甚至只是多了几个流程、几章表格，唯一不同的是多了一些解释、一些培训，却可能多了一些&lt;strong&gt;「分歧」&lt;/strong&gt;；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体到战略的落地、路径的实现、难点的突破就很难“约束”了，正如西天取经九九八十一难：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）西天取经度化世人是战略；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）九九八十一难是底层逻辑对应的实现路径（机制）；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）具体到每一难怎么过，很难定义，也就是我们秀操作的战术了；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要说怎么创新提出战略、提出点子这个事情很难，要说怎么提高操作水平，就有很多“方法论”工具或者实践经验可以使用了，比如：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）使用OKR工具&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）培育土壤，设定规则，解决能不能的问题&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）身先士卒&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;信息处理能力&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;信息处理能力事实上很大一部分是操作层面的技能，信息分析又可以归为&lt;strong&gt;「前置的战略准备」&lt;/strong&gt;，考虑其足够重要，这里将其独立出来。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;信息获取&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要解决的第一难题是如何获取消息，从信息来源来说可分为：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;① 上层信息，多来源于leader的信息&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;② 平级信息，多来源于跨部门同学信息&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;③ 团队下级信息，这个一般来源于抱怨&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里要注意，所有的信息都可能&lt;strong&gt;「经过修剪」要注意甄别&lt;/strong&gt;：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9953703703703703&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTALTBqwSqpgW7wnaZibAibbKicqzlsy9tytOWYu0bViadOeKqLljXBJwMIn4mJj8rmOJuoYT40YwMXkibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;八卦是信息的主要来源，leader本身如果不具备八卦能力的话，最好有一个“八卦”的副手，否则会丢失很多信息量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从信息来源目标来说，又要注意他们的类型，跟不同的人交流方式不同，如：高人、强势型、甩锅侠、狡猾型、合作型、问题领袖、个人主义、锋芒毕露出风头......&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从角色定位又可以分为：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;① &lt;strong&gt;「朋友」&lt;/strong&gt;，这种角色需要完整的分享信息量和观点，与对方碰撞讨论&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;② &lt;strong&gt;「镜子」&lt;/strong&gt;，这种角色与你实力相当，做事却风格完全不一样，更多的观察对比，看看他的做法是不是更优，这样更容易打破自己的认知&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;③ &lt;strong&gt;「导师」&lt;/strong&gt;，这种角色每个周期，准备好问题和自己的答案去与他交流，多听少说，虚心受教，考虑背景，明辨所需&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;信息获取时候要注意以下情绪：抖机灵、急躁、面服心不服、我没问题，你们都是傻逼、我不要你觉得，我要我觉得、这里肯定有问题，我就不说，我就是玩儿！&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;信息获取时候一定要注意清楚负能量传递，不要被影响、挑逗、愤怒，很多时候引出负能量十分简单，解决问题才是真本事&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;信息获取的方式很多，大家选取适合自己的即可：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;① 请人吃饭（少请点人）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;② 信息交换（需要拉扯）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;③ 某种意义的投名状（比如去足疗？）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;......&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里强调下，兼听则明、偏信则暗，信息就是信息切记主观情绪，切记信息来源单一，&lt;strong&gt;「信息差创造价值的事情一直在发生」&lt;/strong&gt;！&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;信息处理&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何处理信息的话题有点玄，又有点“创新”的意思，这种话题大概是没办法写的，这里可以使用的一个“方法论”工具是5W2H：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7430555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTALTBqwSqpgW7wnaZibAibbKicY8VJptkgWNZ04M58tDP154KibRhNW5mLichOZiczDBTgxVXMG4BJcVX8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;720&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一定程度的分析能力是可以锻炼的，确实不行就把信息量尽量无损的给自己的“高人”，请他帮忙分析也行，每个团队都会有智囊团角色，我这里临时的处理策略是：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5598705501618123&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTALTBqwSqpgW7wnaZibAibbKicLGDyEGlc56YfJvfh2ibw2AEX4SyVduLP0qZ4tDUdwZ0dgN26hZiaHJzQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;618&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于信息相关，最后说一个点，团队规模大了后，信息会变得五花八门，团队矛盾也会逐渐产生，甚至&lt;strong&gt;「不可调和」&lt;/strong&gt;，对于leader来说，以下几个点可能需要考虑：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;① 具体事宜分歧需要绝对压制，谁对结果负责，谁做决定，参考&lt;strong&gt;「权责利分锅模型」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;② 处理分歧点要考虑当前团队的&lt;strong&gt;「主要矛盾是什么」&lt;/strong&gt;，当前团队的主要问题是什么，&lt;strong&gt;「没有绝对的对错」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;③ 处理矛盾除非某一方有明显错误，处理的方式是&lt;strong&gt;「不表态或者对事不对人」&lt;/strong&gt;，最后都需要请他们吃饭或者喝酒，喝到他们服（这里如果有女生会变得非常难办）！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;④ 凝聚力是团队最重要财富，谁影响凝聚力就要处理谁，&lt;strong&gt;「负能量者」&lt;/strong&gt;必死&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;⑤ 沟通的难点在于如何达成一致，&lt;strong&gt;「妥协也是一种一致」&lt;/strong&gt;（至少可以减少阻碍）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;......&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;表达/营销能力&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所谓表达能力可以认为是：&lt;strong&gt;「讲故事的能力」&lt;/strong&gt;、撕逼能力&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表象是比声音大，本质是比认知比信息量比辩论手段，我认为认知 &amp;gt;= 信息量 &amp;gt; 手段，所谓降维打击就是如此。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表达能力说小点是如何清晰描述清楚一件事（比如一个BUG如何发生），说大点就是如何聊清楚战略了，平时多使用&lt;strong&gt;「金字塔模型」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我自己表达能力也不是很好，可以提的建议就偏少了:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;① 思考清楚、信息量足，才不会胡言乱语&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;② 朗读古文、写作文&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;③ 重要的汇报提前准备&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;......&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;持之以恒&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;持之以恒其实更不好测量，更多的是一个品质，但如果没有这种坚持的能力，我们工作中的高管极容易“东一下、西一下”，任何战略或者产品都没有持续性，这样是不能把事情做成的，我们评价一个人，还是要从他做的事着手，看他做成了什么事，做成的这个事做到了什么程度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是我们总结的战略、战术、信息、表达、持之以恒五维模型，如果做成了其中2个点就会是个不错的大leader，也就是我们所谓技术总监了，这是“技术管理者”的评价体系的基础，大家可以对比下自身情况判断是否合用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了以上基础再来探讨&lt;strong&gt;「大Leader和小Leader有何不同」&lt;/strong&gt;？&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Leader该做什么&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解了Leader的能力要求后，还要约束Leader的可用手段，否则Leader也喜欢去&lt;strong&gt;「挑简单的事情做」&lt;/strong&gt;，比如写代码、带项目，跟下面同学抢活干。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大leader解决问题的思路只能从以下几个维度去想办法：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;选题；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;梯队建设；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;资源协调；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;核心辅导；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;机制匹配；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从要求的点来说，已经排除了leader下场干项目的可能性了！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;选题&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的选，就是把自己的疑惑，将业务中碰到的问题，全部整理成一些课题，将这些课题指派给团队的“专家组”进行研讨，尽量找到答案，形成方案；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;选题是&lt;strong&gt;「战略切割」&lt;/strong&gt;，大了资源不足，小了没有效果；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;思考选题要卷入足够的资源足够的意见，但不要被轻易带偏，要有自己的坚持；选题能力就是战略能力；&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;梯队建设&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个容易理解，就是人才储备，招人开人；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;选题是解决做什么的问题，人才是解决谁来做的问题，缺一不可。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;资源协调&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;资源的使用有两点要注意：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）&lt;strong&gt;做预算&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;资源使用的第一步是资源获取，获取结束便是分配。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你要将资源分给哪些选题，这是一种&lt;strong&gt;预算思维&lt;/strong&gt;，也是利益分配的底层逻辑。只有选题得宜加上初期合适的资源预算，事情才能得到推进，但这只是开始，还没完。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）&lt;strong&gt;资源协调&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大leader最大的优势其实是势能，也是我们所谓的影响力，因为影响力，很多你拿不到的资源我拿得到，你做不了的跨部门协作我能做。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;找到合适的选题和合适的人，还得帮他们把相应的执行环境准备好；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;团队做事会有很多卡点，这个时候你是否知道这个卡点所需要的资源是什么，是否能获得这个资源。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;核心指导&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在下面同学干活的时候，要协助其做大框架设计，粗粒度的梳理，防止他们走偏，给予合适的信息输入；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获得资源后，告诉团队如何使用资源；甚至告诉团队如何自己获取资源；&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;即大Leader要往团队做很多额外的信息输入&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;机制匹配&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;团队的问题是否得到&lt;strong&gt;「系统性的解决」&lt;/strong&gt;，是否每次都&lt;strong&gt;「依赖个人英雄」&lt;/strong&gt;？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同学们实际干活的时候，依旧会有很多牛鬼蛇神影响进度，要匹配对应的机制，加速团队运转效率，减少不必要耗损；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在我的认知里面这五个维度事项，确实可以很好定义大leader的工作，也可以回答故事二中的问题：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;大的工作不是做项目而是找课题，并且想办法、做机制让这个课题顺滑的执行下去，获得成果，所以部门内的所有项目都是我的成果。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;兜底&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另一部分回答是，leader的重要工作可能还有一点绕不过去的缺漏：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;大leade需要对下面同学的工作进行兜底&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有时候不该做，却不得不做，当然兜底的策略未必非要自己做：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）提拔梯队同学进行兜底；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）做机制防止出现第一负责人掉链子的情况；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）在迫不得已，比如全线崩毁的情况下，自己能兜得住；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有兜底的情况，往往是梯队建设出问题了。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Leader的思维&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后回归一下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;是什么造就了一个员工成为Leader；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;是什么造就一个Leader成长为了大Leader？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答案是&lt;strong&gt;「足够的担当」&lt;/strong&gt;，&lt;strong&gt;「主动的思考」&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;所谓有担当&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;碰到具体事项时，尽量别让leader帮你思考，也尽量别让leader帮你背锅，如果可以的话，请尽量别让下游团队帮你背锅。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;提供你的&lt;strong&gt;「专业意见」&lt;/strong&gt;，提供你的&lt;strong&gt;「决策模型」&lt;/strong&gt;，提供你对当前事项决策所用的&lt;strong&gt;「论据」&lt;/strong&gt;，最后跟相关方尽量做到&lt;strong&gt;「信息同步」&lt;/strong&gt;，再请leader拍板即可，这里所谓的担当更多的是&lt;strong&gt;「对你自己」&lt;/strong&gt;，未必是对你leader。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;所谓主动思考&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前一段时间我的工作思维是&lt;strong&gt;「坚决执行老板对产品的理解」&lt;/strong&gt;，这是最大的优点，但可能也是最大的问题，因为我的工作变成了&lt;strong&gt;「对老板输入的解读」&lt;/strong&gt;，这就导致我的思维全部圈定在了老板的思维里。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么导致这个事实的原因是什么？我觉得可能是两点：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）老板的想法太有侵略性，众人很难否定老板的想法（没有有效证据链拉扯）；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）我的主要输入源是老板；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但，这个未必是健康的状态，也许真实情况是需要在&lt;strong&gt;「细分领域跳出框架」&lt;/strong&gt;，&lt;strong&gt;「上下佐证才能形成真正的创新」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「创新的底色是足够的阅读量」&lt;/strong&gt;，如果要跳出老板的认知，在通篇阅读量方面超过不容易，就要在细分领域下足够的功夫，这里的一个思考是：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老板给予20%左右的思想输入，然后就要在某一层面、某一阶段的拒绝老板思想的影响，自己独立把这20%的论点，演化论证到60%左右，拿着多出的这40%跟老板对比拉扯。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;毕竟他时间有限，虽然想的广，但未必在细分领域验证的有我们深，老板想的广，我们论证深，这也许就是一个差异化补足和配合的方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至于这额外40%的延伸对不对、好不好可以讨论、可以拉扯，但是我们已经是站在60%的场景下讨论问题了，这多出来40%的研究，就是我们跟老板叫板的底气&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何从60%去到100%，里面的占比是多少，我们可以一起讨论、一起测试、一起斟酌嘛。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的核心思维是：&lt;strong&gt;「主动思考」&lt;/strong&gt;，找问题中最难的点去攻破，不要有取巧的想法，对于真正困难的事物，取巧很难过关。&lt;strong&gt;「死磕、深钻才可能取得真正的解法」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;希望此文对各位有帮助。&lt;strong&gt;「原创不易，请各位多多分享」&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;最后重要提示：&lt;span&gt;北妈铁粉读者交流群，限时开放！&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;欢迎加入北妈的铁粉摸鱼唠嗑副业羊毛基地！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;北妈铁粉交流群（摸鱼、白嫖课程、羊毛、交友为主），限时开放！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;想进群的，&lt;span&gt;可以关注下方公号内&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;回复：&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;666，&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;拉你加群。&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;点下方卡片，关注公号内&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;回复：666，&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;加群&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIyMjQxMDY5NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/sz_mmbiz_png/cj7OZoyPvRvNYGrjPep1kecZAd3mBKtHoIbTZG8U8IFQwkcjPoXxl8N9iapLluicKgmGm0jGy0W5rQ1LBINA1pog/0?wx_fmt=png&quot; data-nickname=&quot;北妈说正事&quot; data-alias=&quot;&quot; data-signature=&quot;他不干正事儿，但说正事儿&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.33076923076923076&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MYDsergzqQmiaFWgDe1oSATjSlicNRB2pHMWc84DiaqFFBIdgNFeazWttSZ3c0tDNibSFz8MGbqibYM9icKWeH4GicARQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;260&quot;/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6561514195583596&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MYDsergzqQmiaFWgDe1oSATjSlicNRB2pHuJ02RtDkHP2aQMKn0VsDDgYBkvyQvwFhbiafjJdqLEEczat5wKicHrDg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;634&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;每天都深夜了，还在讨论，每天输出3000+消息，堪称 &lt;/span&gt;&lt;span&gt;加特林&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;北妈所有群活跃度，敢说第二，没人说第一。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;全国各个城市的铁友和大神都有。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;内推、副业、吃瓜、技术交流、找对象&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;应有尽有&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0ce6332a80e1c8c88a3c6cb74cd1dc00</guid>
<title>[推荐] 如何撰写好的技术方案设计-真实案例干货分享</title>
<link>https://toutiao.io/k/0f5fv4t</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;一、 前言&lt;br/&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为一个技术开发者，特别是高级、资深开发、架构师等，往往会遇到根据需求撰写技术方案。那么如何撰写一篇好的技术方案设计，我们今天就来聊一聊这个话题。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;二、 技术方案是否有必要&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答案是肯定的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我见过太多由于前期规划不到位（甚至是没有技术方案设计，开个技术讨论会口头沟通一下，就直接评工期开干的），这其中不乏很重要，工期很长的项目。而最后呢，到联调阶段各组串不起来，更可笑的是，产品和产品同学之间都没沟通清楚。导致最终很被动，到处挖坑补洞，而且花费了更多的时间和精力，甚至导致项目延期，后续扩张性不强等等问题。 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以我认为，技术方案是必不可少的一个环节。往往很多坑在这个阶段就可以避免的。 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;古人云:&quot;磨刀不误砍柴工&quot;，技术方案就是磨刀的过程。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.282339707536558&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kulR6Bq67WicOEAfAcyiaosXCicREoJVkCPrLdvThA88KIdpqSibJ3aiatGQqWRxbwfJ6kicGjaxZk3kSUCB5yUnWLOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;889&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;方案设计&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;三、 如何写好技术方案&lt;span/&gt;&lt;/h3&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;要贴合需求，满足需求是大方向。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;可实施。要考虑当前条件下是否可落地，如：&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;团队人员接受能力:技术选型的时候，要考虑团队成员接受能力，盲目引入新技术，可能造成不可预知的问题。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;时间成本:  一般来说Java 或者 PHP 后端项目(c语言项目可能会做一年甚至更长时间)，3个月时间周期算是比较长的了，假如按照此方案，需要半年甚至更长时间，那可能也不切实际。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;资源成本: 例如，项目可能需要引入Redis，Mysql，ES， MongoDB 等基础资源，那公司是否能提供这些资源(服务器是要钱的)。如果不能，在写技术方案时候，可能就需要考虑是否有替代方案。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;应急处理&amp;amp;可靠性保障
只要人能想到的问题，就一定会发生，不能有侥幸心理。所以要做好出现问题的应对策略，这里就必须做好如：&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;四、技术方案模板&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面是我总结的技术方案设计模板，希望对大家所有帮助。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1、背景&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前的背景现状，简要说明以往业务所遇到的问题，给出本次项目迭代的原因，解决的技术痛点或业务痛点&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2、目标&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过次方案要达到什么样的业务指标，例如，支撑多少QPS，性能相比现在提升多少倍，为后期水平扩展做铺垫&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3、整体方案&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1)架构图
2)流程图
3)时序图
4)调用链路图&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4、存储设计&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如Mysql表结构设计，缓存设计，ES存储设计等等，说明Schema、字段类型、默认值、描述信息等。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5、接口定义&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;列举出接口的结构，参数，返回值等&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6、灰度方案&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;按什么方式灰度，如何做灰度方案，用表格的形式列出分几个阶段灰度，每个阶段大概时间多长。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;7、降级方案&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当出现问题如何降级操作，如何回滚。将风险降到最低程度。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;8、关联系统(功能)影响&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重点需要各组注意的地方，相关人员需要特别关注，一一确认到位&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;9、资源分配情况&lt;span/&gt;&lt;/h5&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;人力资源: 实现方案需要多少人力投入(开发人力，测试人力，运维人力)等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;硬件资源: 实现上述方案，列举需要哪些物理机器资源，运维人员需提前准备。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;10、预估工期及时间节点&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;列举出工期及关键时间节点，如，什么时候联调，什么时候提测，什么时候开始灰度上线，以及后续的迭代完善计划等。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;五、温馨提示&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我也给大家总结了我之前做系统重构写的技术方案设计文档（线上真实版本，已脱敏)，给大家总结了2套， 有需要的朋友可以公众号后台留言&quot;方案&quot;即可获取，也欢迎有兴趣的朋友一起交流学习。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.36484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kulR6Bq67WicS8obXBjC9RqxibSJcgOsnicwSlKjFSxuEECwjZjYS8Y9zpmCdyv6z4yeSicSQSDNz2XUzRppBjuGXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot; aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_title&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p role=&quot;option&quot; aria-labelledby=&quot;js_a11y_reward_qr_word js_a11y_comma js_a11y_reward_qr_title js_a11y_reward_qr_money&quot; aria-describedby=&quot;js_a11y_reward_qr_tips &quot; class=&quot;reward_tips&quot; id=&quot;js_a11y_reward_qr_word&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img alt=&quot;赞赏二维码&quot; class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_tips&quot; class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>fc5ae3835fdb19a3e444a8d06c657660</guid>
<title>[推荐] 轻松搞懂5种IO模型</title>
<link>https://toutiao.io/k/o77uhyt</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;同步阻塞IO、同步非阻塞IO、IO多路复用、异步阻塞IO、异步非阻塞IO，这五种IO模型有没有朋友记过多次了，但是总是记不住？那是因为没有理解本质。5年前我记住了，到现在发现记忆和区分仍然很清晰，今天把理解方法介绍给大家。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;首先，大家先思考一个问题：&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;vote_area&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;IO操作其实主要为了读和写。本文以读数据做说明。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当程序调用read方法时，会切换到系统内核来完成真正的读取。而读取又分为等待数据和复制数据两个阶段。如下图所示：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.591002044989775&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlibwAicyibKwptvaTrLpel9o7xWE8NHicicu68aYkU1HRQSDEu0XOZcKZJDGJA5Jr5ddHf2vN6roGX0zBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;489&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;同步阻塞IO&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5967413441955194&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlibwAicyibKwptvaTrLpel9o7xdZlbgqv5kQRQCKQVxD7RKyFjKIE80nDaWJGKJ7OkKwEd6R9xU5AYng/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;491&quot;/&gt;&lt;/p&gt;&lt;p&gt;如上图所示，用户线程发起一个read请求，会切换到内核空间。这时候如果没有数据过来，则用户线程和对应的内核线程什么都做不了，一直等到有数据进来，并且完成了内核态的数据复制才继续返回用户空间继续执行。这整个过程是阻塞的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;同步非阻塞IO&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5925925925925926&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlibwAicyibKwptvaTrLpel9o7xcicUu1licMQMqp5hCbA590GcR4TicHLbPZU9GcRqKFDJoeD85RB2w9K6A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;486&quot;/&gt;&lt;/p&gt;&lt;p&gt;如上图所示，用户线程发起一个read请求，会切换到内核空间。这时候如果没有数据过来，则直接返回。它可以再次轮循发起read，如果某一次发现有数据过来，则等待完成了内核态的数据复制才继续返回用户空间继续执行。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这个过程中，没有数据时是非阻塞的。有数据时是阻塞的，被称为非阻塞IO。这种方式涉及多次内核切换，某些情况下反而会影响性能。之前业界发生过一个由阻塞切换成非阻塞，流量高峰时性能不足引起的重大故障。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;IO多路复用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5876288659793815&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlibwAicyibKwptvaTrLpel9o7x3R6o8o1QLpLXicnnBktC7rCnwib7AknBhK3XicTdoMdBSx1mlKbgtCoPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;485&quot;/&gt;&lt;/p&gt;&lt;p&gt;如上图所示，用户线程发起一个select请求，会切换到内核空间。这时候如果没有数据过来，则阻塞直到有数据时返回给用户线程。用户线程收到有数据的消息，发起read操作同步等待直到完成内核态的数据复制才继续返回用户空间继续执行。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这时候，是不是有朋友冒出来一个问题：似乎看不到多路复用的优势啊。似乎阻塞才是最佳选择啊。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;上面都是以最简单的例子来介绍的，下面来看一个复杂一些的阻塞IO。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.0589430894308942&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlibwAicyibKwptvaTrLpel9o7xplOGIzPYnKtkRa7cibope8SBxPp6sR9mqdBNoqg0S1uJvjBeKPu4NwA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;492&quot;/&gt;&lt;/p&gt;&lt;p&gt;如上图所示，用户线程发起一个read请求，会切换到内核空间。这时候又有另外一个连接请求过来。这个线程不会立即影响这个连接请求，而是一直等到有数据进来，并且完成了内核态的数据复制才继续返回用户空间继续执行。处理完第一个连接的所有read操作之后，才会响应新的连接。新连接从accept（netty中建立连接的函数）到read都是同步阻塞的，每次只能处理一个连接的事件。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7582644628099173&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlibwAicyibKwptvaTrLpel9o7x60ehaqKgCXiciadN6g65vhRgJRnwyv1BU2cLzMiaDbricyZbwxnnuDjBcg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;484&quot;/&gt;&lt;/p&gt;&lt;p&gt;如上图所示，多路复用时，用户程序发起一个select操作，会返回一批事件，有read、write、accept（netty中建立连接的事件）。这时候，该等的时间select操作都已经做了。这时候，用户线程可以用新的线程(worker线程)直接去建立连接、复制数据。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;异步非阻塞IO&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里就要明确IO模型中，同步和异步的概念了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;同步：线程自己去获取结果。(一个线程)&lt;/p&gt;&lt;p&gt;异步：线程自己不去获取结果，而由其他线程送结果。(至少两个线程)&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6081632653061224&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlibwAicyibKwptvaTrLpel9o7xt7uXTkFdFoPwoZdMWodV4Mic1JwZFDZo26aS8tKQUYaeJSN2eHcY9Pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;490&quot;/&gt;&lt;/p&gt;&lt;p&gt;如上图所示，异步是通过回调来完成的。用户程序发起read操作只是去通知操作系统我在等待数据。另外一个线程等待数据复制完成回调read方法返回结果。异步IO从实现上是基于操作系统信号驱动的，也叫信号驱动IO。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;异步阻塞IO和异步非阻塞IO又有什么区别呢？看上面的过程，异步read操作去通知完操作系统肯定是直接返回的，也就是肯定是非阻塞的。其实根本没有异步阻塞这种说法，纯属误传。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;最近发现，为了把一件事情讲清楚，要写的字越来越多。因为写的过程中会引出一些额外层面的问题需要解释。两者没有分离好反而不好理解。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我就想出来现在的办法，先在一篇文章中阐述一件事，同时抛出来一个问题让大家思考。然后另起一篇把问题讲透。就像本周的&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486533&amp;amp;idx=1&amp;amp;sn=a7a6bb50bb1ce4fb88510ab5b1fb9288&amp;amp;chksm=fafde6ebcd8a6ffd53ade8cd730c7436b93199b8bfcfa160d29056312432e4db5bfba3568eb0&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《HTTP状态码1XX深入理解》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《&lt;span&gt;HTTP状态码1XX深入理解&lt;/span&gt;》&lt;/a&gt;和&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486543&amp;amp;idx=1&amp;amp;sn=e61c5e6e427fca705414108e3cc4fd64&amp;amp;chksm=fafde6e1cd8a6ff773e553fd317b64a8f78dc15e8c340fa9762cacef25a7b811c7322839dbfc&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《【答案公布】客户端与服务端通信时，所有的http状态码是否都是服务端返回的？》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《&lt;span&gt;【&lt;/span&gt;&lt;span&gt;答案公布】客户端与服务端通信时，所有的http状态码是否都是服务端返回的？&lt;/span&gt;》&lt;/a&gt;。自己觉得这种方式更加清晰，大家觉得如何呢？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0557a766a9ab81e8eff46889d6f0111c</guid>
<title>[推荐] 我做基础架构学到的42件事</title>
<link>https://toutiao.io/k/k6tjws1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.562962962962963&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hBL5R2neMA0j12Nst4bfv3gk0Qato1iaGibd2e4wLCXa8rvRc7cwRgn2lRRE0szMKsXrG2Mw8icSgcIOE7oQF4FQw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;h3 data-sourcepos=&quot;3:1-3:13&quot;&gt;译者序&lt;br/&gt;&lt;/h3&gt;&lt;p data-sourcepos=&quot;5:1-5:411&quot;&gt;最近读到了分布式系统研究者 Mahesh Balakrishnan 的一篇博客《42 things I learned from building a production database》。同样做基础架构，看完大佬总结的经验后拍案叫绝，其中有几条简直是真知灼见，故翻译了全文。&lt;/p&gt;&lt;blockquote data-sourcepos=&quot;7:1-7:193&quot;&gt;&lt;p data-sourcepos=&quot;7:3-7:193&quot;&gt;Mahesh Balakrishnan 是 Facebook Delos 项目的负责人。Delos 对标 ZooKeeper，关于 Delos 更多详细细节其团队已经发了两篇 paper，感兴趣的同学可以自行搜索。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-sourcepos=&quot;10:1-10:230&quot;&gt;&lt;strong&gt;译注&lt;/strong&gt;：IC = Individual Contributor，即独立贡献者，Facebook 开发团队的一个术语，&lt;strong&gt;指那些不是经理、不是 team leader、不是任何领导职位的编码人员&lt;/strong&gt;，可以理解为一线开发人员。&lt;/p&gt;&lt;p data-sourcepos=&quot;10:1-10:230&quot;&gt;&lt;span&gt;&lt;strong&gt;以下为正文：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-sourcepos=&quot;13:1-13:24&quot;&gt;对客户（用户）&lt;/h2&gt;&lt;p data-sourcepos=&quot;15:1-15:86&quot;&gt;（1）&lt;strong&gt;让你的客户开心；否则这篇文章的其余部分都无关紧要&lt;/strong&gt;。&lt;/p&gt;&lt;p data-sourcepos=&quot;17:1-17:163&quot;&gt;（2）要注意拥有正确数量的客户（刚开始时，就一个）和合适的客户（他允许你构建关键技术）；并小心地增加这个数字。&lt;/p&gt;&lt;p data-sourcepos=&quot;19:1-19:232&quot;&gt;（3）直接与客户对接。很多团队内部冲突可以通过一句“我刚才和客户谈过，他们说......”来解决。在做基础架构时，我们往往不需要猜测客户的需求，我们可以直接问他们。&lt;/p&gt;&lt;p data-sourcepos=&quot;21:1-21:187&quot;&gt;（4）但要意识到客户可能无法表达他们真正需要的东西；不要只看到需求的表面价值，而要花时间详细地理解他们的用例。阅读他们的代码。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;23:1-23:15&quot;&gt;项目管理&lt;/h2&gt;&lt;p data-sourcepos=&quot;25:1-25:140&quot;&gt;（5）要有一个简单明了的使命宣言来表达你存在的理由。Delos 的宣言是：我们将成为 FB infra 的可靠基础。&lt;/p&gt;&lt;p data-sourcepos=&quot;27:1-27:181&quot;&gt;（6）反复进行任务难度的评估；决策者可能没有时间、倾向、上下文或培训来进行评估，而且可能会把它们弄错（简直是）几个数量级。&lt;/p&gt;&lt;p data-sourcepos=&quot;29:1-29:252&quot;&gt;（7）对 IC 的任务分配很关键; 要求自己处于任何决策的关键路径上，因为你通常比经理更了解问题、代码库和 IC 们的优势。如果你和其他 IC 自己解决任务分配问题，大多数经理都会很高兴。&lt;/p&gt;&lt;p data-sourcepos=&quot;31:1-31:52&quot;&gt;（8）Road-map 是一种手段，而不是目的。&lt;/p&gt;&lt;p data-sourcepos=&quot;33:1-33:215&quot;&gt;（9）如果你有好的和/或一致的经理，要尽可能地理解、支持和包容。如果你没有这样的经理人......好吧，我还没有想明白这个问题，如果你想明白了，请告诉我。&lt;/p&gt;&lt;p data-sourcepos=&quot;35:1-35:325&quot;&gt;（10）使你的项目对组织架构调整有足够的鲁棒性，一个公司的管理层级本质上是脆弱的（毕竟，树是一个单连接的图）；不断地与未来可能接手这个项目的经理进行交流。&lt;strong&gt;不惜一切代价，确保经理人的变动不会给 IC 们带来不公平的职业结果&lt;/strong&gt;。&lt;/p&gt;&lt;blockquote data-sourcepos=&quot;37:1-37:215&quot;&gt;&lt;p data-sourcepos=&quot;37:3-37:215&quot;&gt;通常来说，公司组织架构调整是非常频繁的，经常一年就会调整一次，确保经理人的变动不会带来不公平的职业结果，这点其实很难（我也很想知道怎么做到）。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-sourcepos=&quot;39:1-39:232&quot;&gt;（11）追踪类似的功能在你所在领域的其他项目中花费了多长时间，并以此作为任务难度评估的依据(例如，“功能 X 在系统 Y 中花了 3 年时间；这不是一个 IC 的一半工作”）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;41:1-41:9&quot;&gt;设计&lt;/h2&gt;&lt;p data-sourcepos=&quot;43:1-43:107&quot;&gt;（12）对 API 要保守，对实现要宽松(Be conservative on APIs and liberal with implementations)。&lt;/p&gt;&lt;p data-sourcepos=&quot;45:1-45:80&quot;&gt;（13）但要坚持谨慎地推出新的实现（灰度、分阶段推出）。&lt;/p&gt;&lt;p data-sourcepos=&quot;47:1-47:335&quot;&gt;（14）设计 API 时，写代码完成第一个实现(implementation)；积极计划第二个实现；并希望/祈祷事情将在第三个实现中发挥作用。（When designing APIs, write code for one implementation; plan actively for the second implementation; and hope/pray that things will work for a third implementation.）&lt;/p&gt;&lt;p data-sourcepos=&quot;49:1-49:206&quot;&gt;（15）设计 API 时，首要考虑向新实现的迁移；自定义迁移会造成巨大的时间消耗且不可靠。每个主要的 API 都应该有一个单一的 CLI 驱动的调用来切换实现。&lt;/p&gt;&lt;p data-sourcepos=&quot;51:1-51:187&quot;&gt;（16）作为一个团队去设计；作为个人实现(Design as a team; implement as individuals)。这将使设计成为瓶颈，但这是值得的：抵制并行化设计的冲动。&lt;/p&gt;&lt;p data-sourcepos=&quot;53:1-53:276&quot;&gt;（17）对于存储系统，&lt;strong&gt;在开始时就要重点关注一致性和持久性，而不是可用性；一致性和持久性更难衡量，如果出问题也更难修复&lt;/strong&gt;。由于可用性更容易衡量，所以会有外部压力要求优先考虑它；推到后面去。&lt;/p&gt;&lt;p data-sourcepos=&quot;55:1-55:181&quot;&gt;（18）在测试中维护 API 的多个实现；比较它们之间的结果。这样做的代价是值得的（这将有助于正确性，也可以防止实现细节的泄露）。&lt;/p&gt;&lt;p data-sourcepos=&quot;57:1-57:306&quot;&gt;（19）对设计进行后期绑定（Late-bind）：鼓励团队思考整个设计空间，而不是承诺使用某个特定的解决方案。与一群高智商、有主见的 IC 们一起开头脑风暴会议是一门值得掌握的艺术。鼓励在设计的关键路径上进行粗略的原型设计。&lt;/p&gt;&lt;p data-sourcepos=&quot;59:1-59:102&quot;&gt;（20）对实现者进行后期绑定：一旦设计完成，任何 IC 都应该能够编写代码。&lt;/p&gt;&lt;p data-sourcepos=&quot;61:1-61:179&quot;&gt;（21）拥有适当数量的抽象（这很难）。太少了，你会得到一个混乱的单体；太多了，团队会被理解每个抽象的语义的认知开销所淹没。&lt;/p&gt;&lt;p data-sourcepos=&quot;63:1-63:132&quot;&gt;（22）&lt;strong&gt;避免使用实时性来保证正确性或在机器间比较时钟，除非你有（并理解）时钟的错误界限&lt;/strong&gt;。&lt;/p&gt;&lt;p data-sourcepos=&quot;65:1-65:98&quot;&gt;（23）有一个单一的真理来源。在各种类型的状态之间建立简单的不变量。&lt;/p&gt;&lt;p data-sourcepos=&quot;67:1-67:144&quot;&gt;（24）创造一种文化，让 IC 不断地思考完全不同的设计；不要停止关于假设性替代设计的对话。鼓励好奇心。&lt;/p&gt;&lt;p data-sourcepos=&quot;69:1-69:141&quot;&gt;（25）了解你的 SKU。云计算使人们很容易忽视硬件；但对硬件（和硬件趋势）的理解对设计来说至关重要。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;71:1-71:14&quot;&gt;Code Review&lt;/h2&gt;&lt;p data-sourcepos=&quot;73:1-73:118&quot;&gt;（26）在一个具有快速评审周期的透明代码库中，除非你把关，否则 API 会泄露实现细节。&lt;/p&gt;&lt;p data-sourcepos=&quot;75:1-75:204&quot;&gt;（27）鼓励 IC 对 diffs 进行批判性的思考，并创造一个人们可以自由表达的环境。作为 diffs 作者，你对指出 diffs 问题的人的反应应该是感激，而不是沮丧。&lt;/p&gt;&lt;p data-sourcepos=&quot;77:1-77:149&quot;&gt;（28）对于关键组件，考虑非正式的规则，例如要求两个接受（即两个 LGTM）或甚至是某个子集的 IC 的一致接受。&lt;/p&gt;&lt;p data-sourcepos=&quot;79:1-79:356&quot;&gt;（29）对于关键组件，落地时间不是衡量其重要性的标准：抵制衡量这一标准和优化它的冲动。创造一种让 IC 可以接受 diffs 不能快速落地的文化（创造性的工作——书籍、论文等等——由于高质量 review 的成本，通常需要漫长的 review 周期；为什么代码应该有所不同？）&lt;/p&gt;&lt;p data-sourcepos=&quot;81:1-81:368&quot;&gt;（30）有时候，你只有在一个 IC 写出了一个候选的设计方案后才意识到这个设计是正确的。要抵制说“哦，好吧，让我们先落地，然后再修复它”的冲动；你这样做对 IC 和项目都没有帮助。创造一种文化，让 IC 感觉到如果这不是正确的解决方案，就可以丢弃代码（以身作则）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;83:1-83:9&quot;&gt;策略&lt;/h2&gt;&lt;p data-sourcepos=&quot;85:1-85:253&quot;&gt;（31）以某种节奏问自己：为什么这个团队/项目会存在？如果它不存在，会发生什么（哪个其他团队/系统会填补这个空白）？该团队是如何为公司增加价值的，以及它如何在未来继续这样做？&lt;/p&gt;&lt;p data-sourcepos=&quot;87:1-87:427&quot;&gt;（32）跟踪公司内你所在领域的每个其他主要项目：你应该能够比他们自己的 IC 更好地解释他们的技术设计。抓住任何机会去与其他类似项目的负责人辩论项目范围：你应该能够阐明你的项目如何适合更大的生态系统。团队间的竞争是健康和必要的。与这些项目中的 IC 交朋友：他们比公司里的其他人更了解你的技术挑战。&lt;/p&gt;&lt;p data-sourcepos=&quot;89:1-89:251&quot;&gt;（33）不要在原始性能或效率上与其他团队竞争；这将升级为一场军备竞赛，两个团队都会浪费时间为工作负载优化他们的系统，产生苹果与橘子的比较，等等。在基本设计特性上进行竞争。&lt;/p&gt;&lt;p data-sourcepos=&quot;91:1-91:119&quot;&gt;（34）如果客观上有人在你的使用场景有更好的系统，并想接手它，那就去找别的事做吧。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;93:1-93:15&quot;&gt;可观测性&lt;/h2&gt;&lt;p data-sourcepos=&quot;95:1-95:50&quot;&gt;（35）测量是一种手段，而不是目的。&lt;/p&gt;&lt;p data-sourcepos=&quot;97:1-97:77&quot;&gt;（36）你应该能够在你的客户之前发现你的服务中的问题。&lt;/p&gt;&lt;p data-sourcepos=&quot;99:1-99:261&quot;&gt;（37）在尽可能的情况下，可观察性应该在 API 之上，并在实现(implementations)之外。这可以确保你可以切换实现并比较性能，而不会在测量代码中引入错误。它还可以简化实现；并降低新实现的门槛。&lt;/p&gt;&lt;p data-sourcepos=&quot;101:1-101:125&quot;&gt;（38）任何不容易测量的东西（例如，一致性）往往被遗忘；要特别注意那些难以测量的属性。&lt;/p&gt;&lt;p data-sourcepos=&quot;103:1-103:176&quot;&gt;（39）尽可能将关键的检查（例如一致性）推到部署本身；尽量减少对外部服务的检查（否则你现在有两件事要跟踪，而不是一件）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;105:1-105:9&quot;&gt;研究&lt;/h2&gt;&lt;p data-sourcepos=&quot;107:1-107:224&quot;&gt;（40）追踪你所在领域的研究成果。很快你就会和你的 IC 有一个速记，可以实现超快的沟通。&quot;如果我们尝试项目 X 中的那个东西呢？并将其与项目 Y 中的技术相结合？&quot;。&lt;/p&gt;&lt;p data-sourcepos=&quot;109:1-109:221&quot;&gt;（41）尝试新事物。在可行的解决方案内，偏向于新的东西。抵制逐字逐句地复制设计的冲动。每一个重要的系统在某些时候都只是某人头脑中的一个半生不熟的想法。&lt;/p&gt;&lt;p data-sourcepos=&quot;111:1-111:380&quot;&gt;（42）写论文。为那些对你正在做的事情没有任何背景的听众写作，将迫使你检查和澄清你的假设。论文可以使你更容易雇用到优秀的人才，也更容易让他们上岗。研究生应该能够向你解释你的设计（并发现错误！）。当被要求做讲座时，尽量答应。它们很有趣，而且你可以认识新的人。&lt;/p&gt;&lt;hr/&gt;&lt;p data-sourcepos=&quot;113:1-113:74&quot;&gt;&lt;/p&gt;&lt;p data-sourcepos=&quot;113:1-113:74&quot;&gt;&lt;em&gt;原文：&lt;/em&gt;&lt;em&gt;https://maheshba.bitbucket.io/blog/2021/10/19/42Things.html&lt;/em&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;欢迎关注我的公众号：&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIwODA2NjIxOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA0g3RQ9bRYaJib92ovwsSB9pPup1lt5cB24cJVJia1dc3Nr2kFSBHsJq5HL9DcLhoAGribSBvHU7ZzjA/0?wx_fmt=png&quot; data-nickname=&quot;多颗糖&quot; data-alias=&quot;duoketang&quot; data-signature=&quot;一名系统研究者的攀登之路&quot; data-from=&quot;1&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>