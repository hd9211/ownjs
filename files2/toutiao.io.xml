<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>c4b9944319fbf5013c7e35484e2febc7</guid>
<title>凯文·凯利70岁生日的103条人生建议｜码农周刊VIP会员专属邮件周报 Vol.090</title>
<link>https://toutiao.io/k/d3q95iv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;logged-out env-production page-responsive page-blob&quot; id=&quot;readabilityBody&quot;&gt;
    

    

  &lt;p id=&quot;start-of-content&quot; class=&quot;show-on-focus&quot;/&gt;







    


    

  &lt;include-fragment class=&quot;js-notification-shelf-include-fragment&quot; data-base-src=&quot;https://github.com/notifications/beta/shelf&quot;/&gt;





  &lt;div class=&quot;application-main &quot; data-commit-hovercards-enabled=&quot;&quot; data-discussion-hovercards-enabled=&quot;&quot; data-issue-and-pr-hovercards-enabled=&quot;&quot;&gt;
        &lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot; class=&quot;&quot;&gt;
    &lt;main id=&quot;js-repo-pjax-container&quot; data-pjax-container=&quot;&quot;&gt;
      

    
    








  



&lt;div id=&quot;repo-content-pjax-container&quot; class=&quot;repository-content &quot;&gt;
  
  


  
      
  &lt;div class=&quot;clearfix container-xl px-3 px-md-4 px-lg-5 mt-4&quot;&gt;
    
    
&lt;div&gt;
  




    
&lt;a class=&quot;d-none js-permalink-shortcut&quot; data-hotkey=&quot;y&quot; href=&quot;/toutiaoio/weekly.manong.io/blob/bfce3ea87cd5c8c85608e58ecb1dbde7503f34ff/docs/vol.090.md?hmsr=toutiao.io&amp;amp;utm_campaign=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&quot;&gt;Permalink&lt;/a&gt;







    &lt;div id=&quot;spoof-warning&quot; class=&quot;mt-0 pb-3&quot; hidden=&quot;&quot; aria-hidden=&quot;&quot;&gt;
  &lt;div data-view-component=&quot;true&quot; class=&quot;flash flash-warn mt-0 clearfix&quot;&gt;
  
  
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert float-left mt-1&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;

      &lt;p class=&quot;overflow-hidden&quot;&gt;This commit does not belong to any branch on this repository, and may belong to a fork outside of the repository.&lt;/p&gt;


  
&lt;/div&gt;&lt;/div&gt;

    &lt;include-fragment src=&quot;/toutiaoio/weekly.manong.io/spoofed_commit_check/bfce3ea87cd5c8c85608e58ecb1dbde7503f34ff&quot; data-test-selector=&quot;spoofed-commit-check&quot;/&gt;

    &lt;div class=&quot;Box d-flex flex-column flex-shrink-0 mb-3&quot;&gt;
  
  

  &lt;div class=&quot;Box-body d-flex flex-items-center flex-auto border-bottom-0 flex-wrap&quot;&gt;
    &lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default color-fg-default float-left mr-3&quot; id=&quot;blob_contributors_box&quot;&gt;
      &lt;summary class=&quot;Link--primary&quot;&gt;
        &lt;svg text=&quot;gray&quot; aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-people&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M5.5 3.5a2 2 0 100 4 2 2 0 000-4zM2 5.5a3.5 3.5 0 115.898 2.549 5.507 5.507 0 013.034 4.084.75.75 0 11-1.482.235 4.001 4.001 0 00-7.9 0 .75.75 0 01-1.482-.236A5.507 5.507 0 013.102 8.05 3.49 3.49 0 012 5.5zM11 4a.75.75 0 100 1.5 1.5 1.5 0 01.666 2.844.75.75 0 00-.416.672v.352a.75.75 0 00.574.73c1.2.289 2.162 1.2 2.522 2.372a.75.75 0 101.434-.44 5.01 5.01 0 00-2.56-3.012A3 3 0 0011 4z&quot;/&gt;
&lt;/svg&gt;
        &lt;strong&gt;1&lt;/strong&gt;
        
        contributor
      &lt;/summary&gt;
      &lt;details-dialog class=&quot;Box Box--overlay d-flex flex-column anim-fade-in fast&quot; aria-label=&quot;Users who have contributed to this file&quot; src=&quot;/toutiaoio/weekly.manong.io/contributors-list/master/docs/vol.090.md&quot; preload=&quot;&quot;&gt;
        &lt;div class=&quot;Box-header&quot;&gt;
          &lt;button class=&quot;Box-btn-octicon btn-octicon float-right&quot; type=&quot;button&quot; aria-label=&quot;Close dialog&quot; data-close-dialog=&quot;&quot;&gt;
            &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-x&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z&quot;/&gt;
&lt;/svg&gt;
          &lt;/button&gt;
          &lt;h3 class=&quot;Box-title&quot;&gt;
            Users who have contributed to this file
          &lt;/h3&gt;
        &lt;/div&gt;
        &lt;include-fragment&gt;
          &lt;svg viewbox=&quot;0 0 16 16&quot; fill=&quot;none&quot; data-view-component=&quot;true&quot; class=&quot;my-3 mx-auto d-block anim-rotate&quot;&gt;
  &lt;circle cx=&quot;8&quot; cy=&quot;8&quot; r=&quot;7&quot; stroke=&quot;currentColor&quot; stroke-opacity=&quot;0.25&quot; stroke-width=&quot;2&quot; vector-effect=&quot;non-scaling-stroke&quot;/&gt;
  &lt;path d=&quot;M15 8a7.002 7.002 0 00-7-7&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; vector-effect=&quot;non-scaling-stroke&quot;/&gt;
&lt;/svg&gt;
        &lt;/include-fragment&gt;
      &lt;/details-dialog&gt;
    &lt;/details&gt;
  &lt;/div&gt;
&lt;/div&gt;







    &lt;readme-toc&gt;

    &lt;div data-target=&quot;readme-toc.content&quot; class=&quot;Box mt-3 position-relative&quot;&gt;
      
  &lt;div class=&quot;Box-header js-blob-header blob-header js-sticky js-position-sticky top-0 p-2 d-flex flex-shrink-0 flex-md-row flex-items-center&quot;&gt;

      &lt;details data-target=&quot;readme-toc.trigger&quot; data-menu-hydro-click=&quot;{&amp;quot;event_type&amp;quot;:&amp;quot;repository_toc_menu.click&amp;quot;,&amp;quot;payload&amp;quot;:{&amp;quot;target&amp;quot;:&amp;quot;trigger&amp;quot;,&amp;quot;repository_id&amp;quot;:193332705,&amp;quot;originating_url&amp;quot;:&amp;quot;https://github.com/toutiaoio/weekly.manong.io/blob/master/docs/vol.090.md?hmsr=toutiao.io&amp;amp;utm_campaign=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&amp;quot;,&amp;quot;user_id&amp;quot;:null}}&quot; data-menu-hydro-click-hmac=&quot;22043ed9df8256ce83f5fb1aa1911a940509266306b4564c4b9f8c48a25be466&quot; class=&quot;dropdown details-reset details-overlay&quot;&gt;
  &lt;summary class=&quot;btn btn-octicon m-0 mr-2 p-2&quot; aria-haspopup=&quot;true&quot; aria-label=&quot;Table of Contents&quot;&gt;
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-list-unordered&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M2 4a1 1 0 100-2 1 1 0 000 2zm3.75-1.5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zM3 8a1 1 0 11-2 0 1 1 0 012 0zm-1 6a1 1 0 100-2 1 1 0 000 2z&quot;/&gt;
&lt;/svg&gt;
  &lt;/summary&gt;


  &lt;details-menu class=&quot;SelectMenu&quot; role=&quot;menu&quot;&gt;
    
  &lt;/details-menu&gt;
&lt;/details&gt;


  &lt;p class=&quot;text-mono f6 flex-auto pr-3 flex-order-2 flex-md-order-1&quot;&gt;

      92 lines (53 sloc)
      &lt;span class=&quot;file-info-divider&quot;/&gt;
    3.62 KB
  &lt;/p&gt;

  

    
&lt;/div&gt;


        &lt;div id=&quot;readme&quot; class=&quot;Box-body readme blob js-code-block-container p-5 p-xl-6 gist-border-0&quot;&gt;
    &lt;article class=&quot;markdown-body entry-content container-lg&quot; itemprop=&quot;text&quot;&gt;&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-凯文凯利70岁生日的103条人生建议码农周刊vip会员专属邮件周报-vol090&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#凯文凯利70岁生日的103条人生建议码农周刊vip会员专属邮件周报-vol090&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;凯文·凯利70岁生日的103条人生建议｜码农周刊VIP会员专属邮件周报 Vol.090&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p dir=&quot;auto&quot;&gt;本文内容节选自「码农周刊VIP会员专属邮件周报 Vol.090」，每周五发送，欢迎订阅！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p dir=&quot;auto&quot;&gt;&lt;a href=&quot;#%E7%AE%80%E4%BB%8B&quot;&gt;码农周刊简介&lt;/a&gt;｜&lt;a href=&quot;#%E8%AF%BB%E8%80%85%E5%9C%88%E5%AD%90%E4%B8%93%E5%B1%9E%E9%82%AE%E4%BB%B6%E5%91%A8%E6%8A%A5&quot;&gt;读者圈子专属邮件周报&lt;/a&gt;｜&lt;a href=&quot;#%E5%BE%80%E6%9C%9F%E5%AD%98%E6%A1%A3&quot;&gt;往期存档&lt;/a&gt;&lt;/p&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-欢迎加入读者圈子一起交流&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#欢迎加入读者圈子一起交流&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;欢迎加入读者圈子，一起交流！&lt;/h2&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;600+圈子成员，以中高级程序员为主，更有架构师、CTO坐镇交流；&lt;/li&gt;
&lt;li&gt;1000+优质主题，数十G独家资料，每日分享，精挑细选；&lt;/li&gt;
&lt;li&gt;全年52期专属邮件周报，让你轻松掌握业界资讯、技术干货，提升认知水平；&lt;/li&gt;
&lt;li&gt;全年52本好书共读，让你花最少的时间，获取更好的知识；&lt;/li&gt;
&lt;/ul&gt;
&lt;p dir=&quot;auto&quot;&gt;……&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;心动不如行动，赶快加入吧！&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/2fac8f02f427e6fd6754cc3079b5de7539bccbb010003d49d2309d0ee1a21c5a/68747470733a2f2f696d672e746f757469616f2e696f2f6164732f7669705f6769746875625f303530362e6a706567&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/2fac8f02f427e6fd6754cc3079b5de7539bccbb010003d49d2309d0ee1a21c5a/68747470733a2f2f696d672e746f757469616f2e696f2f6164732f7669705f6769746875625f303530362e6a706567&quot; data-canonical-src=&quot;https://img.toutiao.io/ads/vip_github_0506.jpeg&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-本期首先分享的是凯文凯利70岁生日的103条人生建议摘录几条共勉&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#本期首先分享的是凯文凯利70岁生日的103条人生建议摘录几条共勉&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;本期，首先分享的是凯文·凯利70岁生日的103条人生建议，摘录几条，共勉。&lt;/h2&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;不要为那种你不想成为的人工作。&lt;/li&gt;
&lt;li&gt;12个爱你的人，比12,000,000个喜欢你的人更值得。&lt;/li&gt;
&lt;li&gt;别犯同样的错，试一些新错。&lt;/li&gt;
&lt;li&gt;领导的真正工作是培养更多领导，而不是粉丝。&lt;/li&gt;
&lt;li&gt;付出（锻炼、陪伴、工作）的连续性比数量更重要。日拱一卒，比偶尔为之更重要。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-内容节选&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#内容节选&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;内容节选&lt;/h2&gt;
&lt;p dir=&quot;auto&quot;&gt;1、&lt;a href=&quot;https://mp.weixin.qq.com/s/1Dv17rDRto_1i_LdHEVARA&quot; rel=&quot;nofollow&quot;&gt;TikTok内幕：张一鸣的巨浪征途&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;“另一方面，张一鸣不会感情用事，对人对事极为精确，眼睛容不下灰色和沙粒。这让他流露出一种狠绝。在早期，他把拿走公司代码的人送进了监狱。”&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;2、&lt;a href=&quot;https://mp.weixin.qq.com/s/_fZxTDOr2n1IQySjVODB8A&quot; rel=&quot;nofollow&quot;&gt;Web3革命：逃离、信仰、大迁徙&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;互联网正在发生的一场“大迁徙”&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;3、&lt;a href=&quot;https://toutiao.io/k/vduu1jt&quot; rel=&quot;nofollow&quot;&gt;B站SRE业务稳定性运营实践&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;从稳定性的相关理论定义出发，围绕稳定性的核心领域展开描述，并介绍B站在相关领域所做的实践探索。&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;4、&lt;a href=&quot;https://toutiao.io/k/h7w6rt4&quot; rel=&quot;nofollow&quot;&gt;携程酒店订单缓存 &amp;amp; 存储系统升级实践&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;万字长文详解&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;5、&lt;a href=&quot;https://github.com/alibaba/fastjson2&quot;&gt;阿里巴巴开源的高性能JSON库&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;FASTJSON项目的重要升级&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;6、&lt;a href=&quot;https://github.com/k8w/tsrpc&quot;&gt;一个专为 TypeScript 设计的 RPC 框架&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;适用于 HTTP API、WebSocket 实时应用、NodeJS 微服务等场景。&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;7、&lt;a href=&quot;https://toutiao.io/k/zgzh3st&quot; rel=&quot;nofollow&quot;&gt;几道高频的JVM面试题&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;供参考&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;8、&lt;a href=&quot;https://toutiao.io/k/x03gc99&quot; rel=&quot;nofollow&quot;&gt;9张图轻松吃透Go内存管理单元&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;图文并茂&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;9、&lt;a href=&quot;https://toutiao.io/k/n0gqyj1&quot; rel=&quot;nofollow&quot;&gt;Elasticsearch 数据建模指南&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;详细介绍&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;10、&lt;a href=&quot;https://toutiao.io/k/y59f508&quot; rel=&quot;nofollow&quot;&gt;我的机器学习之路&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;学习总结&lt;/p&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-简介&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#简介&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;简介&lt;/h2&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;码农周刊是一份专为广大程序员、编程爱好者们打造的 IT 技术周刊。每周发送。&lt;/li&gt;
&lt;li&gt;2013 年 9 月 12 日创刊至今，已发送 300 多期，订阅用户超 20 万&lt;/li&gt;
&lt;li&gt;专业、简单、有用，是我们一直坚持的办刊宗旨。一路走来，我们见证了不少订阅用户从编程新手进阶成了高级程序员、架构师、CTO……&lt;/li&gt;
&lt;li&gt;2020 年 4 月，为了给用户提供更优质的服务，我们推出了「码农周刊VIP会员」服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-读者圈子专属邮件周报&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#读者圈子专属邮件周报&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;读者圈子专属邮件周报&lt;/h2&gt;

&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-往期存档&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#往期存档&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;往期存档&lt;/h2&gt;

&lt;/article&gt;
  &lt;/div&gt;

    &lt;/div&gt;

  &lt;/readme-toc&gt;

  

  &lt;details class=&quot;details-reset details-overlay details-overlay-dark&quot; id=&quot;jumpto-line-details-dialog&quot;&gt;
    &lt;summary data-hotkey=&quot;l&quot; aria-label=&quot;Jump to line&quot;/&gt;
    &lt;details-dialog class=&quot;Box Box--overlay d-flex flex-column anim-fade-in fast linejump&quot; aria-label=&quot;Jump to line&quot;&gt;
          &lt;/details-dialog&gt;
  &lt;/details&gt;


&lt;/div&gt;

  &lt;/div&gt;


&lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;

  &lt;/div&gt;

          &lt;footer class=&quot;footer width-full container-xl p-responsive&quot; role=&quot;contentinfo&quot;&gt;


  
  &lt;p class=&quot;d-flex flex-justify-center pb-6&quot;&gt;
    &lt;span class=&quot;f6 color-fg-muted&quot;/&gt;
  &lt;/p&gt;
&lt;/footer&gt;




  &lt;div id=&quot;ajax-error-message&quot; class=&quot;ajax-error-message flash flash-error&quot; hidden=&quot;&quot;&gt;
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;
    &lt;button type=&quot;button&quot; class=&quot;flash-close js-ajax-error-dismiss&quot; aria-label=&quot;Dismiss error&quot;&gt;
      &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-x&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z&quot;/&gt;
&lt;/svg&gt;
    &lt;/button&gt;&lt;p&gt;
    You can’t perform that action at this time.
  &lt;/p&gt;&lt;/div&gt;

  &lt;div class=&quot;js-stale-session-flash flash flash-warn flash-banner&quot; hidden=&quot;&quot;&gt;
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;
    &lt;span class=&quot;js-stale-session-flash-signed-in&quot; hidden=&quot;&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;
    &lt;span class=&quot;js-stale-session-flash-signed-out&quot; hidden=&quot;&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;
  &lt;/div&gt;
    &lt;template id=&quot;site-details-dialog&quot;&gt;
  &lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm&quot; open=&quot;&quot;&gt;
    &lt;summary role=&quot;button&quot; aria-label=&quot;Close dialog&quot;/&gt;
    &lt;details-dialog class=&quot;Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal&quot;&gt;
      &lt;button class=&quot;Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0&quot; type=&quot;button&quot; aria-label=&quot;Close dialog&quot; data-close-dialog=&quot;&quot;&gt;
        &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-x&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z&quot;/&gt;
&lt;/svg&gt;
      &lt;/button&gt;
      &lt;p class=&quot;octocat-spinner my-6 js-details-dialog-spinner&quot;/&gt;
    &lt;/details-dialog&gt;
  &lt;/details&gt;
&lt;/template&gt;

    

    &lt;template id=&quot;snippet-clipboard-copy-button&quot;&gt;
  
&lt;/template&gt;




  &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>cbf514eec6d2a358733f7e4faf142379</guid>
<title>聊聊我们是如何做系统保障方案的</title>
<link>https://toutiao.io/k/i8q3ye4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原创不易，求分享、求一键三连。回复保障方案获取资料&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面对业务迅速增长复杂度会呈几何级增加，为了降低维护复杂度而引入了微服务，只要每个服务足够简单，那么维护成本也可以降低。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务保障也是一个非常困难的事情，今天聊一聊系统稳定性方案。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;方案设计层面&lt;/span&gt;&lt;/h2&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;业务逻辑正常是最基础的要求。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;接口安全、数据安全（数据泄漏、数据遍历、越权访问）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;服务扩展性（服务是否可平滑扩容，能扩的最大范围是多少个节点）、是否存在单点。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据库表结构设计、索引设计。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缓存更新机制、过期机制、是否存在单点热Key&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消息系统设计、流转过程；投递速率、消费速率&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;定时任务运行方式、执行记录、失败处理、是否可以恢复&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;仅仅考虑前面的场景可能还是不够，所以继续进行系统稳定性的思考。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;系统稳定性&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5501022494887525&quot; data-type=&quot;png&quot; data-w=&quot;1956&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVIS93pagUDXfaaRI7DiayDXMJ4511ibYkiaZRtXVjxtT8omOuEyCjyhElTgQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;流量控制&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般情况下越靠近下层资源的吞吐能力越弱，数据库吞吐能力有限，要尽量将流量拦截到上层尽快返回响应，让越下层的资源做&lt;strong&gt;正确和重要&lt;/strong&gt;的事情，达到压榨系统的目的，所以上面看到的WAF拦截；限流基本都是放在网关或者离用户更近的一层。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.558641975308642&quot; data-type=&quot;png&quot; data-w=&quot;1944&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVIScvXYDAMGHutvaYVxXTvOG2sQ4PlE7xaXuXCG1OsR4zIhice2cHhjA9w/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;数据冗余&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统中最重要的是数据，保证数据不丢失至关重要，数据冗余是防止丢失最简单的方式。数据冗余备份方式很多种，从物理到逻辑的角度，备份可以分为以下几类：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;只对数据库操作系统的物理文件（如数据文件、日志文件等）的备份&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;物理备份又可以分为冷备(在关闭数据库时进行的备份操作，能够较好地保证数据库的完整性)和热备(在数据库运行状态中进行操作，这种备份方法依赖于数据库的日志文件)&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从数据库的备份策略角度来看，备份又可分为全量备份、增量和冗余备份&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;每次对数据进行完整的备份&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可以备份整个数据库，包含用户表、系统表、索引、视图和存储过程等所有数&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但它需要花费更多的时间和空间，所以，做一次完全备份的周期要长些&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只有那些在上次完全备份或者增量备份后被修改的文件才会被备份&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;备份那些自从上次完全备份之后被修改过的文件，即只备份数据库部分的内容&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;它比最初的完全备份小，因为只包含自上次完全备份以来所改变的数据库&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;它的优点是存储和恢复速度快&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;高可用&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了保证系统的高可用，在框架、基础建设层面需要做很多建设。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;超时控制，可以让服务之间调用快速抛错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果单个请求耗时长会影响服务的性能。比如API接口设置2s超时API调用a服务用了1s，服务a调用服务b用了1s，那么现在已经超时了，如果还需要调用服务c，这个时候整体接口已经超时就不需要继续调用c服务，浪费时间和资源。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重试是保证一些服务可能偶尔服务抖动失效情况下，再重新发起一次，保证当前请求的准确性，重试需要有限制，不能无限循环，再则操作是否可以重试，是有支持幂等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;扩容策略可以分为两种，一种是对单机整体扩容，也就是机器内部包含CPU、内存、存储设备等;另一种增加机器，对于服务的扩容一定要慎重，需要考虑到扩容之后下游的资源是否能够支撑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如mysql服务器链接只有2000个，当前集群已经使用的差不多了，服务数量增加之后会导致链接不够用；业务更容易出问题。微服务k8s容器化之后，我们自研的发布系统上可以进行轻松的扩容。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个业务降级的例子，定时送道具打积分榜单，榜单计算支持的QPS可能是1w，道具分多种档次，其中有一种薅羊毛的道具1积分，花钱的几十到几万积分不等，可能有刷子囤积了几亿的羊毛道具等待打榜时候使用程序投递影响活动的体验；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果有大量羊毛道具并且超过榜单计算的QPS，此时就降级把羊毛道具剔除掉，只算花钱的，毕竟1积分对榜单影响小（业务定夺）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;顾名思义，按照一定的原则进行划分，进行单独维护。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务隔离：将系统按照业务特性分成不同的服务模块，各个模块之间相对独立，无强依赖，某些模块出现故障不至于全部不可用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;动态接口和静态接口隔离，比如：一个接口里面有用户自己特定的一些数据，也包含了所有用户看到都是一样的数据，那么就可以把这部分拆分成两个接口；大家看到统一数据的接口可以加统一缓存或者上CDN；不拆分是无法上CDN的；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据库分库分表等；隔离之后尽量保证不可越界、不可共享防止隔离失效。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;业务保障的基础（监控&amp;amp;告警）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎样衡量业务系统是否表现正常？是应用在线上跑着进程还在没有宕机，这可能是一个先决条件，有的程序虽然还在跑着，但是已经不能提供服务了，能体现服务的正常需要看流量，流量是看不见的，只有通过日志监控体现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;监控需要监控哪些呢，基础资源监控-基础的资源是否出现问题了？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4050235478806907&quot; data-type=&quot;png&quot; data-w=&quot;2548&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVISxM7LMnWAMKFEjE6KDibU5xHv6dlQmH7LNh1FlAYB9nuSeSKLXsFfYicg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单服务监控-某个服务是不是指标是否出现异常了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;QPS（GRPC、http）、耗时、接口错误码、错误率监控、上下游依赖监控(DB、缓存、上游依赖服务、下游支持服务)&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5580204778156996&quot; data-type=&quot;png&quot; data-w=&quot;2344&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVISG9mROFuM2RT1CY7ykLlEkYSKnCpGkiatwvqpKxibDZIiaXAHvFrTc6GxA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;微服务调用链路监控-调用链路到某个服务是否异常了？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.41450777202072536&quot; data-type=&quot;png&quot; data-w=&quot;2702&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVISBPcKV4VpQGZAH5oup5WQZx3VNbghb0HD8M5yCHJXlBCxRC3riao0jcQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户端监控-用户体验端是否出现异常了？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5635208711433757&quot; data-type=&quot;png&quot; data-w=&quot;2204&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVIS4RGiaL385uN45W7gVpBxBTEfwUw3xpAhPqRkggHGdIYU1X5Z9MnvEvA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;上线规范-预演&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;预演是非常重要的环节，很多bug都可以在预演环节被干掉，这里不是因为测试同学不努力，不能把那些BUG过掉，是因为：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;预演环境有真实的庞大数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;预演环境的能还原真实的QPS，会覆盖掉很多边界场景&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;有些测试必须在生产环境进行&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;预演需要做方案&lt;/strong&gt;，不能引起线上脏数据&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了这些东西就可以进行预演了，然后这里有一个最大原则：预演请务必尽可能还原真实场景，包括时间点的设置！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那些之前重点关注的问题，很多重要的事情需要扣细节，扣的越多思考越细能考虑到整个事情的所拥有的发展方向，提前堵上错误的路径。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前工作中遇到一个广播的场景，是服务端会推送给web端一个命令消息，web收到消息之后需要向服务端发起一个http请求获取数据，由于命令推送是同一个，根据不同的用户获取的http响应不一样，并且http接口数量也比较大，前期用户不多的情况下http接口的QPS比较低还能接收，逐渐业务增长后，http接口内部实现使用缓存能优化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当服务端已经无法优化之后，简单粗暴的，进行推送之后，web收到命令消息之后，0-5分钟内打散请求服务端也能抗一段时间，量持续增长，到0-5分钟即使打散量还是很大，给对应的http接口限流，用户会反馈为什么我没收到消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种逻辑面对大量用户在线确实比较难搞，后面将接口返回的数据进行拆分（动态和静态）静态数据加CDN并在界面上提前下发，动态数据压缩走广播，去掉广播刷接口的逻辑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;带宽也是资源，之前遇到过一个事故，前端获取一个接口数据如果没有获取成功，则会再进行api请求拉取一次，没有做重试退出操作，导致这个接口的流量很大基本上打满了某个服务的所有资源，进而急剧恶化其他请求都无法请求到后端服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前处理的方式是在网关层面限制改接口的流量，部分正常的业务可以打到服务节点上，但是网关层量还是一直升高，最后将改接口直接挂到CDN上，不让回源到服务，但当时CDN缓存的是404响应，事后想想直接把响应结果缓存到CDN，不是所有客户端都正常了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;无法及时发现线上问题，请不要乱打日志，可能这个行为是给别人埋坑，info日志能看出业务在正常运行，error日志能看出系统哪些业务出错了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;紧急故障处理&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线上故障总会出现的，我们出现故障如何紧急处理（参见：毛老师 SRE PPT）回复保障方案获&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7761194029850746&quot; data-type=&quot;png&quot; data-w=&quot;804&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVIS33kLAWnxjriaBS5tXvz1y1TGae4njkXQwefoRibY447tNSAfZfnWjt1Q/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;经验沉淀&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;复盘本质就做两件事情① 评价结果 ② 总结过程经验教训。具体来说：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;复盘要紧密围绕事情结果来讨论。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;事情结果的好坏，取决于是否达成预定目标。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;因此，任何事在启动前必须有明确可衡量的目标。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对于目标实现有贡献的，称之为经验；对于目标实现有阻碍影响的，称之为教训。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;经验、教训要能传承并指导后续的行动。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.435129740518962&quot; data-type=&quot;png&quot; data-w=&quot;1002&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVIS7BLhd9fcsnnohEAIkuwK27HdKoXyAVlBibiaXIXib4pHV79Cm5ev3heYg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;blockquote&gt;&lt;p&gt;引用：&lt;/p&gt;&lt;p&gt;https://cloud.tencent.com/developer/article/1666384&lt;/p&gt;&lt;p&gt;https://mp.weixin.qq.com/s/Rx_XuMLeor_M9EuQcYq23w&lt;/p&gt;&lt;p&gt;https://zhuanlan.zhihu.com/p/61363959&lt;/p&gt;&lt;p&gt;https://github.com/alibaba/Sentinel/wiki/%E7%B3%BB%E7%BB%9F%E8%87%AA%E9%80%82%E5%BA%94%E9%99%90%E6%B5%81&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，今天的分享就到这，喜欢的同学可以四连支持：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.11333333333333333&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVISF2j9vB6GibthRcchHichxCOJgSnQCxtXicgnsJOzMN3OGoavRfqKULndQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想要更多交流可以加我微信：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5549076773566569&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTDljnmdo4aeGPU9J9dYFVISLL8OsELTC2cib9KCGkfsZ5n7C8LzNuF6D9lCcaPJLJPpEjjQib2TXFEA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8836415ad41998f285750532aa5bde67</guid>
<title>3种方式！Go Error处理最佳实践</title>
<link>https://toutiao.io/k/crmxg9t</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe977Xa5zfy5iaV3agpS11Cqm4psjPOibic6BZSicnBFh6uWzCFp3uqN5R114Fq85DmuCzdL3eESlQ37bFA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;导语 |&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;错误处理一直以一是编程必需要面对的问题，错误处理如果做的好的话，代码的稳定性会&lt;/span&gt;&lt;span&gt;很好。不同的语言有不同的出现处理的方式。Go语言也一样，在本篇文章中，我们来讨论一下Go语言的错误处理方式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;一、错误与异常&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;1&quot; data-sign=&quot;fd3ba7320809aed0b3a7a7547a8647b9&quot;&gt;&lt;span&gt;（一）&lt;/span&gt;&lt;span&gt;Error&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;错误是程序中可能出现的问题，比如连接数据库失败，连接网络失败等，在程序设计中，错误处理是业务的一部分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;98262240ca8645af56770f83c7a472e8&quot;&gt;&lt;span&gt;Go内建一个error接口类型作为go的错误标准处理&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;98262240ca8645af56770f83c7a472e8&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;c7ee59e8343f82a268919b95c2deeb76&quot;&gt;&lt;span&gt;http://golang.org/pkg/builtin/#error&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; error &lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__built_in&quot;&gt;Error&lt;/span&gt;() &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http://golang.org/src/pkg/errors/errors.go&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;New&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(text &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &amp;amp;errorString{text}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; errorString &lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   s &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(e *errorString)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;string&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; e.s&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;ceb7f04d807d6a9f7a3a3d2d43bc97e3&quot;&gt;&lt;span&gt;（二）Exception&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;异常是指在不该出现问题的地方出现问题，是预料之外的，比如空指针引用，下标越界，向空map添加键值等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;5a7ea83019261901e4386de061fb5be9&quot;&gt;&lt;span&gt;（三）panic&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于真正意外的情况，那些表示不可恢复的程序错误，不可恢复才使用panic。对于其他的错误情况，我们应该是期望使用error来进行判定。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lines=&quot;2&quot; data-type=&quot;p&quot; data-sign=&quot;7bd74ab8deb29502b0550ccdb3aaf72f&quot;&gt;&lt;span&gt;go源代码很多地方写panic, 但是工程实践业务代码不要主动写panic，理论上panic只存在于server启动阶段，比如config文件解析失败，端口监听失败等等，所有业务逻辑禁止主动panic，所有异步的goroutine都要用recover去兜底处理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;0b26c1a29a28fd8fb594a49e036e9291&quot;&gt;&lt;span&gt;（四）总结&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;理解了错误和异常的真正含义，我们就能理解Go的错误和异常处理的设计意图。传统的try...catch...结构，很容易让开发人员把错误和异常混为一谈，甚至把业务错误处理的一部分当做异常来处理，于是你会在程序中看到一大堆的catch...&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Go开发团队认为错误应该明确地当成业务的一部分，任何可以预见的问题都需要做错误处理，于是在Go代码中，任何调用者在接收函数返回值的同时也需要对错误进行处理，以防遗漏任何运行时可能的错误。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;异常则是意料之外的，甚至你认为在编码中不可能发生的，Go遇到异常会自动触发panic（恐慌），触发panic程序会自动退出。除了程序自动触发异常，一些你认为不可允许的情况你也可以手动触发异常。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另外，在Go中除了触发异常，还可以终止异常并可选的对异常进行错误处理，也就是说，错误和异常是可以相互转换的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;二、Go处理错误的三种方式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;705498691352a2b5c3deb99f6e904bbe&quot;&gt;&lt;span&gt;（一）经典Go逻辑&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;直观的返回error：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; ZooTour &lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Enter() error &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    VisitPanda(panda *Panda) error &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Leave() error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Tour&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(t ZooTour1, panda *Panda)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := t.Enter(); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errors.WithMessage(err, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Enter failed.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := t.VisitPanda(); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errors.WithMessage(err, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;VisitPanda failed.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;706a2e97dde1675b05bf0d9c4df1fdc4&quot;&gt;&lt;span&gt;（二）屏蔽过程中的error的处理&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;将error保存到对象内部，处理逻辑交给每个方法，本质上仍是顺序执行。标准库的bufio、database/sql包中的Rows等都是这样实现的，有兴趣可以去看下源码：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; ZooTour &lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Enter() error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    VisitPanda(panda *Panda) error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Leave() error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Err() error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Tour&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(t ZooTour, panda *Panda)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    t.Enter()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    t.VisitPanda(panda)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    t.Leave()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := t.Err(); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errors.WithMessage(err, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ZooTour failed&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;d5fa3167157813114ec1f4748cff34b9&quot;&gt;&lt;span&gt;（三）利用函数式编程延迟运行&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;分离关注点-遍历访问用数据结构定义运行顺序，根据场景选择，如顺序、逆序、二叉树树遍历等。运行逻辑将代码的控制流逻辑抽离，灵活调整。kubernetes中的visitor对此就有很多种扩展方式，分离了数据和行为，有兴趣可以去扩展阅读：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; Walker &lt;span class=&quot;code-snippet__keyword&quot;&gt;interface&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Next MyFunc&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt; SliceWalker &lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    index &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    funs []MyFunc&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;} &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;NewEnterFunc&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;MyFunc&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(t ZooTour)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; t.Enter()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;BreakOnError&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(t ZooTour, walker Walker)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        f := walker.Next() &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; f == &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := f(t); err := &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;282f642150861c8edaf6123fab79d0b0&quot;&gt;&lt;span&gt;（四）三种方式对比&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面这三个例子，是Go项目处理错误使用频率最高的三种方式，也可以应用在error以外的处理逻辑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;三、分层下的Error Handling&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;1&quot; data-sign=&quot;93e15a3022719528ae6836a8b688bfd0&quot;&gt;&lt;span&gt;（一）一个常见的三层调用&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在工程实践中，以一个常见的三层架构（dao-&amp;gt;service-&amp;gt;controller）为例，我们常见的错误处理方式大致如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := mode.ParamCheck(param); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;param=%+v&quot;&lt;/span&gt;, param)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errs.ErrInvalidParam&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; mode.ListTestName(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;_, err := dao.GetTestName(ctx, settleId)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;GetTestName failed. err: %v&quot;&lt;/span&gt;, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errs.ErrDatabase&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    log.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;GetTestDao failed. uery: %s error(%v)&quot;&lt;/span&gt;, sql, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;ee1c48914814b4c14626dffa3fb8b872&quot;&gt;&lt;span&gt;（二）问题总结&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot; data-lines=&quot;3&quot; data-sign=&quot;09d9d0d3bca83bc0cdf56b26770851a3list3&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;分层开发导致的处处打印日志；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;难以获取详细的堆栈关联；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;根因丢失。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;3601ac2df8b55e284ba998b08e9fc0af&quot;&gt;&lt;span&gt;（三）Wrap erros&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Go相关的错误处理方法很多，但大多为过渡方案，这里就不一一分析了（类似&lt;/span&gt;&lt;span&gt;github.com/juju/errors&lt;/span&gt;&lt;span&gt;库，有兴趣可以了解）。这里我以&lt;/span&gt;&lt;span&gt;github.com/pkg/errors&lt;/span&gt;&lt;span&gt;为例，这个也是官方Proposal的重点参考对象。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol start=&quot;1&quot; class=&quot;list-paddingleft-1&quot; data-lines=&quot;3&quot; data-sign=&quot;5865182d06afb8fd19ef3d06ba1ea4cclist3&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;错误要被日志记录；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;应用程序处理错误，保证100%完整性；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;之后不再报告当前错误（错误只被处理一次）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;github.com/pkg/errors包主要包含以下几个方法，如果我们要新生成一个错误，可以使用New函数,生成的错误，自带调用堆栈信息。如果有一个现成的error ，我们需要对他进行再次包装处理，这时候有三个函数可以选择（WithMessage/WithStack/Wrapf）。其次，如果需要对源错误类型进行自定义判断可以使用Cause,可以获得最根本的错误原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;New&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(message string)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;WithMessage&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(err error, message string)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;WithStack&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(err error)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Wrapf&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(err error, format string, args ...interface{})&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Cause&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(err error)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以常见的一个三层架构为例：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.9291553133514986&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94RLDb9L9KvbfjHd5tXxnc8GxCLibDxtgibo0uFfjqojDwkjRN0ksubE90ns5E7EZjlUtYk1NF8lkTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;734&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;objectivec&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; errors.Is(err, sql.ErrNoRows) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;, errors.Wrapf(ierror.ErrNotFound, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;query:%s&quot;&lt;/span&gt;, query)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;, errors.Wrapf(ierror.ErrDatabase,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;query: %s error(%v)&quot;&lt;/span&gt;, query, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    bills, err := a.Dao.GetName(ctx, param)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; result, errors.WithMessage(err, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;GetName failed&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(Format)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Handle&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(next ihttp.MiddleFunc)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ihttp&lt;/span&gt;.&lt;span class=&quot;code-snippet__title&quot;&gt;MiddleFunc&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context, req *http.Request, rsp *ihttp.Response)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        format := &amp;amp;format{Time: time.Now().Unix()}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        err := next(ctx, req, rsp)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        format.Data = rsp.Data&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            format.Code, format.Msg = errCodes(ctx, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        rsp.Data = format&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;errCodes&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context, err error)&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        log.CtxErrorf(ctx, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;error: [%+v]&quot;&lt;/span&gt;, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; myError = &lt;span class=&quot;code-snippet__built_in&quot;&gt;new&lt;/span&gt;(erro.IError)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; errors.As(err, &amp;amp;myError) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; myError.Code, myError.Msg&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; code.ServerError, i18n.CodeMessage(code.ServerError)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如果和其他库进行协作，考虑使用errors.Wrap或者errors.Wrapf保存堆栈信息。同样适用于和标准库协作的时候。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;_, err := os.Open(path)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; errors.Wrapf(err, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Open failed. [%s]&quot;&lt;/span&gt;, path)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;a31093bfca1a95d298b929332ee984bf&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;a31093bfca1a95d298b929332ee984bf&quot;&gt;&lt;span&gt;最终效果样例：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.1484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe94RLDb9L9KvbfjHd5tXxnc8bayiarVkHvic59J0mCpxjiaoOd1xHDibTfvdcqPb3GDHicgYhSz03khGm7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;30a4c70e7b307aafcf1c0f48b79a8f82&quot;&gt;&lt;span&gt;关键点总结：&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt;四、errgroup集中错误处理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;官方的ErrGroup非常简单，其实就是解决小型多任务并发任务。基本用法golang.org/x/sync/errgroup包下定义了一个Group struct，它就是我们要介绍的ErrGroup并发原语，底层也是基于WaitGroup实现的。在使用ErrGroup时，我们要用到三个方法，分别是WithContext、Go和Wait。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;1&quot; data-sign=&quot;e753f13250226a5e021139d44f999239&quot;&gt;&lt;span&gt;（一）背景&lt;/span&gt;&lt;/h2&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;233a1509300eaac92808d6effcd928b3&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;233a1509300eaac92808d6effcd928b3&quot;&gt;&lt;span&gt;通常，在写业务代码性能优化时经常将一个通用的父任务拆成几个小任务并发执行。此时需要将一个大的任务拆成几个小任务并发执行，来提高QPS，我们需要再业务代码里嵌入以下逻辑，但这种方式存在问题：&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;233a1509300eaac92808d6effcd928b3&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;98ad53f5e0495f49e5795d9733f57189&quot;&gt;&lt;span&gt;（二）errgroup函数签名&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type &lt;span class=&quot;code-snippet__type&quot;&gt;Group&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;WithContext&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context)&lt;/span&gt;&lt;/span&gt; (*&lt;span class=&quot;code-snippet__type&quot;&gt;Group&lt;/span&gt;, context.&lt;span class=&quot;code-snippet__type&quot;&gt;Context&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(g *Group)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__type&quot;&gt;Go&lt;/span&gt;(f &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; error)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(g *Group)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__type&quot;&gt;Wait&lt;/span&gt;() error&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;a6502b9ddec7b8608b7bd88b68322b35&quot;&gt;&lt;span&gt;整个包就一个Group结构体：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;d976f203b6f22aea4ce4beb6d93ee2e9&quot;&gt;&lt;span&gt;（三）使用案例&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;注意这里有一个坑，在后面的代码中不要把ctx当做父 context又传给下游，因为errgroup取消了，这个context就没用了，会导致下游复用的时候出错&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;TestErrgroup&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   eg, ctx := errgroup.WithContext(context.Background())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;code-snippet__number&quot;&gt;100&lt;/span&gt;; i++ {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      i := i&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      eg.Go(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         time.Sleep(&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt; * time.Second)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         &lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-ctx.Done():&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            fmt.Println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Canceled:&quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         &lt;span class=&quot;code-snippet__keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            fmt.Println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;End:&quot;&lt;/span&gt;, i)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         }})}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err := eg.Wait(); err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      log.Fatal(err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;1&quot; data-sign=&quot;058e19ba2ee08865333ac4739e83dc66&quot;&gt;&lt;span&gt;（四）errgroup拓展包&lt;/span&gt;&lt;/h2&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;d9c2c93711f14087bd7abd2614d7631e&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;d9c2c93711f14087bd7abd2614d7631e&quot;&gt;&lt;span&gt;B站拓展包&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;d9c2c93711f14087bd7abd2614d7631e&quot;&gt;&lt;span&gt;（https://github.com/go-kratos/kratos/blob/v0.3.3/pkg/sync/errgroup/errgroup.go）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相比官方的结构，B站的结构多出了一个函数签名管道和一个函数签名切片,并把Context直接放入了返回的Group结构，返回仅返回一个Group结构指针。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;swift&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type &lt;span class=&quot;code-snippet__type&quot;&gt;Group&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   err     error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   wg      sync.&lt;span class=&quot;code-snippet__type&quot;&gt;WaitGroup&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   errOnce sync.&lt;span class=&quot;code-snippet__type&quot;&gt;Once&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   workerOnce sync.&lt;span class=&quot;code-snippet__type&quot;&gt;Once&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   ch         chan &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   chs        []&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context)&lt;/span&gt;&lt;/span&gt; error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   ctx    context.&lt;span class=&quot;code-snippet__type&quot;&gt;Context&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   cancel &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;WithContext&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context)&lt;/span&gt;&lt;/span&gt; *&lt;span class=&quot;code-snippet__type&quot;&gt;Group&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &amp;amp;&lt;span class=&quot;code-snippet__type&quot;&gt;Group&lt;/span&gt;{ctx: ctx}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Go方法可以看出并不是直接起协程的（如果管道已经初始化好了），而是优先将函数签名放入管道，管道如果满了就放入切片。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(g *Group)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Go&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(f &lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;(ctx context.Context)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   g.wg.Add(&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; g.ch != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;select&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; g.ch &amp;lt;- f:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         g.chs = &lt;span class=&quot;code-snippet__built_in&quot;&gt;append&lt;/span&gt;(g.chs, f)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;go&lt;/span&gt; g.do(f)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;GOMAXPROCS函数其实是起了一个并发池来控制协程数量，传入最大协程数量进行并发消费管道里的函数签名：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(g *Group)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;GOMAXPROCS&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(n &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; n &amp;lt;= &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__built_in&quot;&gt;panic&lt;/span&gt;(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;errgroup: GOMAXPROCS must great than 0&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   g.workerOnce.Do(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      g.ch = &lt;span class=&quot;code-snippet__built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;code-snippet__keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(context.Context)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;, &lt;span class=&quot;code-snippet__title&quot;&gt;n&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__title&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;i&lt;/span&gt; := 0; &lt;span class=&quot;code-snippet__title&quot;&gt;i&lt;/span&gt; &amp;lt; &lt;span class=&quot;code-snippet__title&quot;&gt;n&lt;/span&gt;; &lt;span class=&quot;code-snippet__title&quot;&gt;i&lt;/span&gt;++&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         &lt;span class=&quot;code-snippet__keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; f := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; g.ch {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;               g.do(f)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;         }()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   })&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;bd1f80fb1a0098cf3f106daa6a72df6d&quot;&gt;&lt;span&gt;整个流程梳理下来其实就是启动一个固定数量的并发池消费任务，Go函数其实是向管道中发送任务的生产者，这个设计中有意思的是他的协程生命周期的控制，他的控制方式是每发送一个任务都进行WaitGroup加一，在最后结束时的wait函数中进行等待，等待所有的请求都处理完才会关闭管道，返出错误。&lt;/span&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;15151080bcf5a420718cf991e8721952&quot;&gt;&lt;/p&gt;&lt;p data-lines=&quot;1&quot; data-type=&quot;p&quot; data-sign=&quot;15151080bcf5a420718cf991e8721952&quot;&gt;&lt;span&gt;tips&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt; 作者简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;105&quot; data-backw=&quot;105&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe94RLDb9L9KvbfjHd5tXxnc8uK1w7ic9UImich90T4hO0gsYHUKnnUcicO1soLiadaBfumQxQACwu6mqbw/0?wx_fmt=jpeg&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;955&quot; data-cropy1=&quot;18.19047619047619&quot; data-cropy2=&quot;1000.4761904761905&quot; data-fileid=&quot;100044396&quot; data-ratio=&quot;1.0282722513089004&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/VY8SELNGe94RLDb9L9KvbfjHd5tXxnc8icjKKD2IQfh97X9SjImK58LIH0MFVOle5LbeNib6sic03uAmVPgV61d7A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;955&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;李森林&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;腾讯后台工程师&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;腾讯后台工程师，目前负责腾讯游戏内容平台的设计、开发和维护工作。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot; data-mpa-template=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot; powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot; mpa-is-content=&quot;t&quot;&gt; 推荐阅读&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247536592&amp;amp;idx=1&amp;amp;sn=d0f64191958c0e044180361fa0311a4e&amp;amp;chksm=eaa85580dddfdc96196e8b1fd0c6e10e456a479c3bcec43475dfa890ef7fd13519f5b0014695&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;生于云，长于云，开发者如何更好地吃透云原生？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;生于云，长于云，开发者如何更好地吃透云原生？&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247536389&amp;amp;idx=1&amp;amp;sn=64e654aa19f84d22d3782cc2c5586eee&amp;amp;chksm=eaa85555dddfdc434925071270ea89a3d147d140d8347760af16ea17090246a302e200e211e1&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;从0到1详解ZooKeeper的应用场景及架构原理！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;从0到1详解ZooKeeper的应用场景及架构原理！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247536139&amp;amp;idx=1&amp;amp;sn=f9aaeaf85420feae4168b7d05106c2f8&amp;amp;chksm=eaa8545bdddfdd4daa6accbeb92deaf119cb7bd395b7942b0995f3ed737209895d85b6c14f91&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;分布式事务解决方案：从了解到放弃！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;分布式事务解决方案：从了解到放弃！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDU4OTExOQ==&amp;amp;mid=2247536128&amp;amp;idx=1&amp;amp;sn=419b57b371a768cf3451d942941684aa&amp;amp;chksm=eaa85450dddfdd461b89b6f8b7ebcfd1748babd45bda46d9d23cdee41d064a0010dc3e72dd81&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Go语言从0到1实现最简单的数据库！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span&gt;Go语言从0到1实现最简单的数据库！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI2NDU4OTExOQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/VY8SELNGe96FK2eEg86vUicOR3n6kAHk1PHvTb8VBicYk0RmNQYsQyibgg8iaZqT0bCEU9VKo3Z3iceoQfgycyMpKWQ/0?wx_fmt=png&quot; data-nickname=&quot;云加社区&quot; data-alias=&quot;QcloudCommunity&quot; data-signature=&quot;腾讯云官方社区公众号，汇聚技术开发者群体，分享技术干货，打造技术影响力交流社区。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.59375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/VY8SELNGe977Xa5zfy5iaV3agpS11Cqm4xV7ckfbmtFLyUjFID2k7yO4q8hvB4OqYoNkARZ2xuvzKvMtnmVN2BQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>949b4cb7fdae8e97a0baed110b042fb5</guid>
<title>博文推荐｜Pulsar 独立集群如何实现单一、共享 BookKeeper</title>
<link>https://toutiao.io/k/cgutegh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;blockquote&gt;&lt;p&gt;本文翻译自 StreamNative 博客《Pulsar Isolation Part III: Separate Pulsar Clusters Sharing a Single BookKeeper Cluster》，作者高冉。&lt;/p&gt;&lt;h1&gt;译者简介&lt;/h1&gt;&lt;p&gt;姚余钱@深圳觉行科技有限公司，致力于医疗大数据领域。热衷开源，活跃于 Apache Pulsar 社区。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这是关于在 Apache Pulsar 中实现资源隔离四篇博客系列中的第三篇博客。&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUyMjkzMjA1Ng==&amp;amp;mid=2247487152&amp;amp;idx=1&amp;amp;sn=6181c72dd716b0d70865e76e123e38d5&amp;amp;scene=21#wechat_redirect&quot; title=&quot;第一篇博客&quot; data-linktype=&quot;2&quot;&gt;第一篇博客&lt;/a&gt;概述了在 Pulsar 中实现隔离的三种方法：&lt;/p&gt;&lt;p&gt;1.&lt;span&gt;使用 BookKeeper 独立集群的 Pulsar 独立集群&lt;/span&gt;：这种无共享方法提供了最高级别的隔离，适用于存储高度敏感的数据，例如个人身份信息或财务记录。我们在本系列中的&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzUyMjkzMjA1Ng==&amp;amp;mid=2247487909&amp;amp;idx=1&amp;amp;sn=5e6a22f05aa443d436383cef193d1a96&amp;amp;scene=21#wechat_redirect&quot; title=&quot;第二篇博客&quot; data-linktype=&quot;2&quot;&gt;第二篇博客&lt;/a&gt;提供了此方法的分步教程。&lt;/p&gt;&lt;p&gt;2.&lt;span&gt;共享一个 BookKeeper 集群的 Pulsar 独立集群&lt;/span&gt;：这种方式利用单独的 Pulsar broker 集群来隔离终端用户，并允许用户根据场景使用不同的身份验证方法。同时，您可以获得使用共享存储层的优势，例如减少硬件占用空间以及降低相关的硬件和维护成本。&lt;/p&gt;&lt;p&gt;3.&lt;span&gt;Pulsar 单集群和 BookKeeper 单集群&lt;/span&gt;：这是比较传统的方法，主要利用 Pulsar 内置多租户特性。&lt;/p&gt;&lt;p&gt;在本博客中，我们将通过示例展示如何实现单一、共享 BookKeeper 的方法。我们将按照以下步骤部署共享一个 BookKeeper 集群的两个 Pulsar 集群：&lt;/p&gt;&lt;p&gt;1.部署共享一个 BookKeeper 集群的两个 Pulsar 集群&lt;/p&gt;&lt;p&gt;2.验证 Pulsar 集群之间的数据隔离&lt;/p&gt;&lt;p&gt;3.bookie 扩缩容&lt;/p&gt;&lt;h1&gt;设置共享 BookKeeper 集群&lt;/h1&gt;&lt;p&gt;首先，我们在 8 核 CPU 、16GB 内存的计算机上设置共享 BookKeeper 集群。图 1 和图 2 展示了 BookKeeper 集群。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;所有元数据服务（ZooKeeper 服务）都是单节点。我们不会在本博客中详细讨论这些。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;409&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.70703125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0Z0KyiaAaSxnX1hMQFpv28mFKS6nG9Kg35lrLcnOP1qOAtTvqCo7UPyVpibkwNSibCVS0V4LF3jAAz6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 1：每个集群都有自己的 brokers 和本地元数据存储，并共享 BookKeeper 和配置存储（ Configuration Store）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;406&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.703125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0Z0KyiaAaSxnX1hMQFpv28mFlIcr5iczjSViaLl1bZC1yqM3QlrgGJ6ZkrmwOWkFIMzPjXVhGI9ll9Xg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2：在共享的 BookKeeper 集群中，每个集群都有自己的 bookie 关联组。这些 bookie 组确保每个集群各自的数据彼此隔离。&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;部署集群&lt;/h1&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. &lt;span&gt;下载&lt;sup&gt;[1]&lt;/sup&gt;&lt;/span&gt;最新的 Pulsar 二进制包。博文&lt;span&gt;发布时&lt;/span&gt;使用的包是 2.8.1 （目前最新版为 2.10.0）。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2. 解压二进制压缩包。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;tar -zxvf apache-pulsar-2.8.1-bin.tar.gz&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;3. 准备以下集群目录，按照下表中的说明更改每个目录的配置。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;将当前目录用作 PULSAR_HOME 并创建以下目录拓扑。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;cp -r apache-pulsar-2.8.1 configuration-store2&lt;br/&gt;mkdir -p bk-cluster&lt;br/&gt;cp -r apache-pulsar-2.8.1 bk-cluster/bk1&lt;br/&gt;cp -r apache-pulsar-2.8.1 bk-cluster/bk2&lt;br/&gt;cp -r apache-pulsar-2.8.1 bk-cluster/bk3&lt;br/&gt;cp -r apache-pulsar-2.8.1 bk-cluster/bk4&lt;br/&gt;mkdir -p cluster1&lt;br/&gt;cp -r apache-pulsar-2.8.1 cluster1/zk1&lt;br/&gt;cp -r apache-pulsar-2.8.1 cluster1/broker1&lt;br/&gt;mkdir -p cluster2&lt;br/&gt;cp -r apache-pulsar-2.8.1 cluster2/zk1&lt;br/&gt;cp -r apache-pulsar-2.8.1 cluster2/broker1&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;目录的拓扑结构概述如下。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• PULSAR_HOME&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• configuration-store&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• bk-cluster&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;     • bk1&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;     • bk2&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;     • bk3&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;     • bk4&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;     • bk5&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• cluster1&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;     • zk1&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;     • broker1&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• cluster2&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;     &lt;/span&gt;&lt;span&gt;• &lt;/span&gt;&lt;span&gt;zk1&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;组件&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;更改配置&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;configuration-store&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;clientPort=2181&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;admin.serverPort=9991&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bk-cluster/bk1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bookiePort=3181&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;allowLoopback=true&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;zkServers=localhost:2181&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;httpServerPort=8011&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bk-cluster/bk2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bookiePort=3182&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;allowLoopback=true&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;zkServers=localhost:2181&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;httpServerPort=8012&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bk-cluster/bk3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bookiePort=3183&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;allowLoopback=true&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;zkServers=localhost:2181&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;httpServerPort=8013&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bk-cluster/bk4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bookiePort=3184&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;allowLoopback=true&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;zkServers=localhost:2181&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;httpServerPort=8014&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bk-cluster/bk5&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bookiePort=3185&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;allowLoopback=true&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;zkServers=localhost:2181&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;httpServerPort=8015&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;cluster1/zk1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;clientPort=2182&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;admin.serverPort=9992&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;cluster1/broker1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;zookeeperServers=localhost:2182&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;configurationStoreServers=localhost:2181&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;brokerServicePort=6650&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;webServicePort=8080&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;bookkeeperMetadataServiceUri=zk://localhost:2181/ledgers&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;managedLedgerMaxEntriesPerLedger=100&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;managedLedgerMinLedgerRolloverTimeMinutes=0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;cluster2/zk1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;clientPort=2183&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;admin.serverPort=9993&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;cluster2/broker1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;zookeeperServers=localhost:2183&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;configurationStoreServers=localhost:2181&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;&lt;span&gt;brokerServicePort=6651 webServicePort=8081 bookkeeperMetadataServiceUri=zk://localhost:2181/ledgers managedLedgerMaxEntriesPerLedger=100 managedLedgerMinLedgerRolloverTimeMinutes=0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;/ul&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;4. 启动并初始化配置存储和元数据存储。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/configuration-store/bin/pulsar-daemon start configuration-store&lt;br/&gt;$PULSAR_HOME/cluster1/zk1/bin/pulsar-daemon start zookeeper&lt;br/&gt;$PULSAR_HOME/cluster2/zk1/bin/pulsar-daemon start zookeeper&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/configuration-store/bin/pulsar initialize-cluster-metadata \&lt;br/&gt;--cluster cluster1 \&lt;br/&gt;--zookeeper localhost:2182 \&lt;br/&gt;--configuration-store localhost:2181 \&lt;br/&gt;--web-service-url http://localhost:8080/ \&lt;br/&gt;--broker-service-url pulsar://localhost:6650/&lt;br/&gt;&lt;br/&gt;./configuration-store/bin/pulsar initialize-cluster-metadata \&lt;br/&gt;--cluster cluster2 \&lt;br/&gt;--zookeeper localhost:2183 \&lt;br/&gt;--configuration-store localhost:2181 \&lt;br/&gt;--web-service-url http://localhost:8081/ \&lt;br/&gt;--broker-service-url pulsar://localhost:6651/&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;5. 初始化 BookKeeper 元数据并启动 bookie 集群。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell metaformat&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/bk-cluster/bk1/bin/pulsar-daemon start bookie&lt;br/&gt;$PULSAR_HOME/bk-cluster/bk2/bin/pulsar-daemon start bookie&lt;br/&gt;$PULSAR_HOME/bk-cluster/bk3/bin/pulsar-daemon start bookie&lt;br/&gt;$PULSAR_HOME/bk-cluster/bk4/bin/pulsar-daemon start bookie&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;6. 在 cluster1 和 cluster2 中启动 broker。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-daemon start broker&lt;br/&gt;$PULSAR_HOME/cluster2/broker1/bin/pulsar-daemon start broker&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;7. 检查 brokers。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 brokers list cluster1&lt;br/&gt;&quot;localhost:8080&quot;&lt;br/&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8081 brokers list cluster2&lt;br/&gt;&quot;localhost:8081&quot;&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;8. 检查 cluster1 和 cluster2 的 bookie 列表。如下所示，它们共享 bookie 集群。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 bookies list-bookies&lt;br/&gt;{&lt;br/&gt;  &quot;bookies&quot; : [ {&lt;br/&gt;    &quot;bookieId&quot; : &quot;127.0.0.1:3181&quot;&lt;br/&gt;  }, {&lt;br/&gt;    &quot;bookieId&quot; : &quot;127.0.0.1:3182&quot;&lt;br/&gt;  }, {&lt;br/&gt;    &quot;bookieId&quot; : &quot;127.0.0.1:3183&quot;&lt;br/&gt;  }, {&lt;br/&gt;    &quot;bookieId&quot; : &quot;127.0.0.1:3184&quot;&lt;br/&gt;  } ]&lt;br/&gt;}&lt;br/&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8081 bookies list-bookies&lt;br/&gt;{&lt;br/&gt;  &quot;bookies&quot; : [ {&lt;br/&gt;    &quot;bookieId&quot; : &quot;127.0.0.1:3181&quot;&lt;br/&gt;  }, {&lt;br/&gt;    &quot;bookieId&quot; : &quot;127.0.0.1:3182&quot;&lt;br/&gt;  }, {&lt;br/&gt;    &quot;bookieId&quot; : &quot;127.0.0.1:3183&quot;&lt;br/&gt;  }, {&lt;br/&gt;    &quot;bookieId&quot; : &quot;127.0.0.1:3184&quot;&lt;br/&gt;  } ]&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;Bookie 机架配置（Rack Placement）&lt;/h1&gt;&lt;p&gt;为了归档资源隔离，我们需要将 4 个 bookie 节点拆分为 2 个资源组。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 为 cluster1 设置 bookie rack。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 bookies set-bookie-rack \&lt;br/&gt;--bookie 127.0.0.1:3181 \&lt;br/&gt;--hostname 127.0.0.1:3181 \&lt;br/&gt;--group group-bookie1 \&lt;br/&gt;--rack rack1&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 bookies set-bookie-rack \&lt;br/&gt;--bookie 127.0.0.1:3182 \&lt;br/&gt;--hostname 127.0.0.1:3182 \&lt;br/&gt;--group group-bookie1 \&lt;br/&gt;--rack rack1&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 bookies set-bookie-rack \&lt;br/&gt;--bookie 127.0.0.1:3183 \&lt;br/&gt;--hostname 127.0.0.1:3183 \&lt;br/&gt;--group group-bookie2 \&lt;br/&gt;--rack rack2&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 bookies set-bookie-rack \&lt;br/&gt;--bookie 127.0.0.1:3184 \&lt;br/&gt;--hostname 127.0.0.1:3184 \&lt;br/&gt;--group group-bookie2 \&lt;br/&gt;--rack rack2&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;2. 检查 cluster1 的 bookie rack placement。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 bookies racks-placement&lt;br/&gt;&quot;group-bookie1    {127.0.0.1:3181=BookieInfoImpl(rack=rack1, hostname=127.0.0.1:3181), 127.0.0.1:3182=BookieInfoImpl(rack=rack1, hostname=127.0.0.1:3182)}&quot;&lt;br/&gt;&quot;group-bookie2    {127.0.0.1:3183=BookieInfoImpl(rack=rack2, hostname=127.0.0.1:3183), 127.0.0.1:3184=BookieInfoImpl(rack=rack2, hostname=127.0.0.1:3184)}&quot;&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;3. 为 cluster2 设置 bookie rack。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8081 bookies set-bookie-rack \&lt;br/&gt;--bookie 127.0.0.1:3181 \&lt;br/&gt;--hostname 127.0.0.1:3181 \&lt;br/&gt;--group group-bookie1 \&lt;br/&gt;--rack rack1&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8081 bookies set-bookie-rack \&lt;br/&gt;--bookie 127.0.0.1:3182 \&lt;br/&gt;--hostname 127.0.0.1:3182 \&lt;br/&gt;--group group-bookie1 \&lt;br/&gt;--rack rack1&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8081 bookies set-bookie-rack \&lt;br/&gt;--bookie 127.0.0.1:3183 \&lt;br/&gt;--hostname 127.0.0.1:3183 \&lt;br/&gt;--group group-bookie2 \&lt;br/&gt;--rack rack2&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8081 bookies set-bookie-rack \&lt;br/&gt;--bookie 127.0.0.1:3184 \&lt;br/&gt;--hostname 127.0.0.1:3184 \&lt;br/&gt;--group group-bookie2 \&lt;br/&gt;--rack rack2&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;4. 检查 cluster2 的 bookie rack placement。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8081 bookies racks-placement&lt;br/&gt;&quot;group-bookie1    {127.0.0.1:3181=BookieInfoImpl(rack=rack1, hostname=127.0.0.1:3181), 127.0.0.1:3182=BookieInfoImpl(rack=rack1, hostname=127.0.0.1:3182)}&quot;&lt;br/&gt;&quot;group-bookie2    {127.0.0.1:3183=BookieInfoImpl(rack=rack2, hostname=127.0.0.1:3183), 127.0.0.1:3184=BookieInfoImpl(rack=rack2, hostname=127.0.0.1:3184)}&quot;&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;通过 Bookie 关联组验证命名空间隔离&lt;/h1&gt;&lt;p&gt;现在我们已经配置好了所有东西，让我们通过设置 bookie 关联组来验证命名空间隔离。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 在 cluster1 中创建命名空间。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 namespaces create -b 30 -c cluster1 public/c1-ns1&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;2. 为命名空间设置一个 bookie 关联组。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 namespaces set-bookie-affinity-group public/c1-ns1 \&lt;br/&gt;--primary-group group-bookie1&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;3. 检查命名空间的 bookie 关联组。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 namespaces get-bookie-affinity-group public/c1-ns1&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;4. 向命名空间 public/c1-ns1 的主题生产一些消息。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;# set retention for namespace `public/c1-ns1` to avoid messages were deleted automatically&lt;br/&gt;cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 namespaces set-retention -s 1g -t 3d public/c1-ns1&lt;br/&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-client --url pulsar://localhost:6650 produce -m &#x27;hello&#x27; -n 300 public/c1-ns1/t1&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;5. 检查主题内部的统计信息。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 topics stats-internal public/c1-ns1/t1&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们应该得到主题中的一个 ledger 列表。在本例中，它是 ledgers 0、2 和 3。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;  &quot;ledgers&quot; : [ {&lt;br/&gt;    &quot;ledgerId&quot; : 0,&lt;br/&gt;    &quot;entries&quot; : 100,&lt;br/&gt;    &quot;size&quot; : 5400,&lt;br/&gt;    &quot;offloaded&quot; : false,&lt;br/&gt;    &quot;underReplicated&quot; : false&lt;br/&gt;  }, {&lt;br/&gt;    &quot;ledgerId&quot; : 2,&lt;br/&gt;    &quot;entries&quot; : 100,&lt;br/&gt;    &quot;size&quot; : 5616,&lt;br/&gt;    &quot;offloaded&quot; : false,&lt;br/&gt;    &quot;underReplicated&quot; : false&lt;br/&gt;  }, {&lt;br/&gt;    &quot;ledgerId&quot; : 3,&lt;br/&gt;    &quot;entries&quot; : 100,&lt;br/&gt;    &quot;size&quot; : 5700,&lt;br/&gt;    &quot;offloaded&quot; : false,&lt;br/&gt;    &quot;underReplicated&quot; : false&lt;br/&gt;  } ]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;检查每个 ledger 集合，以确认 ledger 已写入属于 group-bookie1 的 bookie。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell ledgermetadata -ledgerid 0&lt;br/&gt;# check ensembles&lt;br/&gt;ensembles={0=[127.0.0.1:3181, 127.0.0.1:3182]}&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell ledgermetadata -ledgerid 2&lt;br/&gt;# check ensembles&lt;br/&gt;ensembles={0=[127.0.0.1:3182, 127.0.0.1:3181]}&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell ledgermetadata -ledgerid 3&lt;br/&gt;# check ensembles&lt;br/&gt;ensembles={0=[127.0.0.1:3182, 127.0.0.1:3181]}&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;6. 在 cluster2 中重复这些步骤，以便我们可以将 cluster1 的命名空间与 cluster2 的命名空间隔离开来。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;迁移命名空间&lt;/h1&gt;&lt;h2&gt;迁移 Bookie 关联组&lt;/h2&gt;&lt;p&gt;现在我们已经验证了命名空间隔离，如果 bookie 组没有足够的空间，我们可以将 bookie 关联组迁移到命名空间。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 修改命名空间的 bookie 关联组。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 namespaces set-bookie-affinity-group public/c1-ns1 --primary-group group-bookie2&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;2. 卸载命名空间，使 bookie 关联组更改生效。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 namespaces unload public/c1-ns1&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;3. 再次向主题 public/c1-ns1/t1 生产消息。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-client --url pulsar://localhost:6650  produce -m &#x27;hello&#x27; -n 300 public/c1-ns1/t1&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;4. 检查集合是否有新添加的 ledger。我们可以看到 group-bookie2 中已经添加了一个新的 ledger。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 topics stats-internal public/c1-ns1/t1&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;  &quot;ledgers&quot; : [ {&lt;br/&gt;    &quot;ledgerId&quot; : 0,&lt;br/&gt;    &quot;entries&quot; : 100,&lt;br/&gt;    &quot;size&quot; : 5400,&lt;br/&gt;    &quot;offloaded&quot; : false,&lt;br/&gt;    &quot;underReplicated&quot; : false&lt;br/&gt;  }, {&lt;br/&gt;    &quot;ledgerId&quot; : 2,&lt;br/&gt;    &quot;entries&quot; : 100,&lt;br/&gt;    &quot;size&quot; : 5616,&lt;br/&gt;    &quot;offloaded&quot; : false,&lt;br/&gt;    &quot;underReplicated&quot; : false&lt;br/&gt;  }, {&lt;br/&gt;    &quot;ledgerId&quot; : 3,&lt;br/&gt;    &quot;entries&quot; : 100,&lt;br/&gt;    &quot;size&quot; : 5700,&lt;br/&gt;    &quot;offloaded&quot; : false,&lt;br/&gt;    &quot;underReplicated&quot; : false&lt;br/&gt;  }, {&lt;br/&gt;    &quot;ledgerId&quot; : 15,&lt;br/&gt;    &quot;entries&quot; : 100,&lt;br/&gt;    &quot;size&quot; : 5400,&lt;br/&gt;    &quot;offloaded&quot; : false,&lt;br/&gt;    &quot;underReplicated&quot; : false&lt;br/&gt;  }, {&lt;br/&gt;    &quot;ledgerId&quot; : 16,&lt;br/&gt;    &quot;entries&quot; : 100,&lt;br/&gt;    &quot;size&quot; : 5616,&lt;br/&gt;    &quot;offloaded&quot; : false,&lt;br/&gt;    &quot;underReplicated&quot; : false&lt;br/&gt;  }, {&lt;br/&gt;    &quot;ledgerId&quot; : 17,&lt;br/&gt;    &quot;entries&quot; : 100,&lt;br/&gt;    &quot;size&quot; : 5700,&lt;br/&gt;    &quot;offloaded&quot; : false,&lt;br/&gt;    &quot;underReplicated&quot; : false&lt;br/&gt;  }]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;让我们检查新添加的 ledger（15、16、17）集合，以确认 ledger 已写入属于 group-bookie2 的 bookie。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell ledgermetadata -ledgerid 15&lt;br/&gt;# check ensembles&lt;br/&gt;ensembles={0=[127.0.0.1:3184, 127.0.0.1:3183]}&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell ledgermetadata -ledgerid 16&lt;br/&gt;# check ensembles&lt;br/&gt;ensembles={0=[127.0.0.1:3183, 127.0.0.1:3184]}&lt;br/&gt;&lt;br/&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell ledgermetadata -ledgerid 17&lt;br/&gt;# check ensembles&lt;br/&gt;ensembles={0=[127.0.0.1:3183, 127.0.0.1:3184]}&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;Bookie 扩缩容&lt;/h1&gt;&lt;p&gt;最终，我们的数据量将超过 BookKeeper 集群的容量，我们需要扩大 bookie 的数量。在本节中，我们将向你展示如何添加新的 bookie 并将其分配给现有的 bookie 关联组。&lt;/p&gt;&lt;h2&gt;扩容&lt;/h2&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 启动一个新的 bookie 节点 bk-5。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;cp -r apache-pulsar-2.8.1 bk-cluster/bk5&lt;br/&gt;$PULSAR_HOME/bk-cluster//bk-cluster/bk5/bin/pulsar-daemon start bookie&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;2. 将新添加的 bookie 节点加到 group-bookie1。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 bookies set-bookie-rack \&lt;br/&gt;--bookie 127.0.0.1:3185 \&lt;br/&gt;--hostname 127.0.0.1:3185 \&lt;br/&gt;--group group-bookie2 \&lt;br/&gt;--rack rack2&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;3. 检查 bookie rack placement。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080  bookies racks-placement&lt;br/&gt;&quot;group-bookie1    {127.0.0.1:3181=BookieInfoImpl(rack=rack1, hostname=127.0.0.1:3181), 127.0.0.1:3182=BookieInfoImpl(rack=rack1, hostname=127.0.0.1:3182)}&quot;&lt;br/&gt;&quot;group-bookie2    {127.0.0.1:3183=BookieInfoImpl(rack=rack2, hostname=127.0.0.1:3183), 127.0.0.1:3184=BookieInfoImpl(rack=rack2, hostname=127.0.0.1:3184), 127.0.0.1:3185=BookieInfoImpl(rack=rack2, hostname=127.0.0.1:3185)}&quot;&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;4 卸载命名空间 public/c1-ns1，使 bookie 关联组更改生效。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 namespaces unload public/c1-ns1&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;5. 再次向主题 public/c1-ns1/t1 生产一些消息。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/bin/pulsar-client --url pulsar://localhost:6650 produce -m &#x27;hello&#x27; -n 300 public/c1-ns1/t1&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;6. 查看主题 public/c1-ns1/t1 新增的 ledger。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 topics stats-internal public/c1-ns1/t1&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell ledgermetadata -ledgerid ledgerid&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们可以看到新添加的 ledger 现存于新添加的 bookie 节点中。&lt;/p&gt;&lt;h2&gt;缩容&lt;/h2&gt;&lt;p&gt;在分布式系统中，单个组件发生故障的情况并不少见。在本节中，我们将模拟其中一个 bookie 的故障，并证明共享的 BookKeeper 集群能够容忍故障事件。您还可以参考 https://bookkeeper.apache.org/docs/4.14.0/admin/decomission/ 获取详细示例。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. 确保关联组中有足够的 bookie。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;例如，如果 broker 的配置 &lt;code&gt;managedLedgerDefaultEnsembleSize&lt;/code&gt; 为 2，那么在我们缩容 bookie 之后，我们应该至少还有 2 个 bookie 属于关联组 。&lt;/p&gt;&lt;p&gt;我们可以检查 bookie rack placement。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 bookies racks-placement&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;2. 从关联 bookie 组中删除 bookie。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/cluster1/broker1/bin/pulsar-admin --admin-url http://localhost:8080 bookies delete-bookie-rack -b 127.0.0.1:3185&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;3. 检查是否存在未复制的 ledger，鉴于我们已经删除了一个 bookie，检查结果应该是可预料的。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell listunderreplicated&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;4. 停止 bookie。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/bk-cluster/bk5/bin/pulsar-daemon stop bookie&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;5. 停用 bookie。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell decommissionbookie -bookieid 127.0.0.1:3185&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;6. 检查已停用 bookie 中的 ledger。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell listledgers -bookieid 127.0.0.1:3185&lt;/code&gt;&lt;/pre&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;7. 列出 bookie。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;$PULSAR_HOME/bk-cluster/bk1/bin/bookkeeper shell listbookies -rw -h&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;系列后续&lt;/h1&gt;&lt;p&gt;我们已经展示了如何通过共享一个 BookKeeper 的两个 Puslar 集群来实现隔离。你可以按照相同的步骤部署多个 Pulsar 集群。请继续关注本系列的最后一篇博客，我们将展示如何使用单个 Pulsar 集群实现隔离！&lt;/p&gt;&lt;p&gt;同时，可查看以下 Pulsar 资源：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;1. &lt;span&gt;获取&lt;sup&gt;[2]&lt;/sup&gt;&lt;/span&gt; David Kjerrumgaard 的《Manning&#x27;s Apache Pulsar in Action》电子书。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;2. 在 Slack 上&lt;span&gt;加入 Pulsar 社区&lt;sup&gt;[3]&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1&gt;相关阅读&lt;/h1&gt;&lt;h4&gt;引用链接&lt;/h4&gt;&lt;p&gt;&lt;code&gt;[1]&lt;/code&gt; 下载: &lt;em&gt;https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&amp;amp;filename=pulsar/pulsar-2.8.1/apache-pulsar-2.8.1-bin.tar.gz&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[2]&lt;/code&gt; 获取: &lt;em&gt;https://app.jingsocial.com/microFrontend/leadGeneration/jsf-leads/list/contentMarketing/25dkCJUkjtVYUue9TsmKLc/GFeMfZiTPHEW5KucED4hLD&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[3]&lt;/code&gt; 加入 Pulsar 社区: &lt;em&gt;https://apache-pulsar.herokuapp.com/&lt;/em&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span data-raw-text=&quot;▼&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24273&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;▼&quot; data-textnode-index-1652184676261=&quot;150&quot; data-index-1652184676261=&quot;6018&quot; class=&quot;character&quot;&gt;▼&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24274&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index-1652184676261=&quot;151&quot; data-index-1652184676261=&quot;6019&quot; class=&quot;character&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24275&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index-1652184676261=&quot;152&quot; data-index-1652184676261=&quot;6020&quot; class=&quot;character&quot;&gt;关&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;注&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24276&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;注&quot; data-textnode-index-1652184676261=&quot;153&quot; data-index-1652184676261=&quot;6021&quot; class=&quot;character&quot;&gt;注&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;「&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24277&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;「&quot; data-textnode-index-1652184676261=&quot;154&quot; data-index-1652184676261=&quot;6022&quot; class=&quot;character&quot;&gt;「&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;A&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24278&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;A&quot; data-textnode-index-1652184676261=&quot;155&quot; data-index-1652184676261=&quot;6023&quot; class=&quot;character&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;p&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24279&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;p&quot; data-textnode-index-1652184676261=&quot;156&quot; data-index-1652184676261=&quot;6024&quot; class=&quot;character&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;a&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24280&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;a&quot; data-textnode-index-1652184676261=&quot;157&quot; data-index-1652184676261=&quot;6025&quot; class=&quot;character&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;c&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24281&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;c&quot; data-textnode-index-1652184676261=&quot;158&quot; data-index-1652184676261=&quot;6026&quot; class=&quot;character&quot;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;h&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24282&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;h&quot; data-textnode-index-1652184676261=&quot;159&quot; data-index-1652184676261=&quot;6027&quot; class=&quot;character&quot;&gt;h&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;e&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24283&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;e&quot; data-textnode-index-1652184676261=&quot;160&quot; data-index-1652184676261=&quot;6028&quot; class=&quot;character&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24284&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index-1652184676261=&quot;161&quot; data-index-1652184676261=&quot;6029&quot; class=&quot;character&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;P&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24285&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;P&quot; data-textnode-index-1652184676261=&quot;162&quot; data-index-1652184676261=&quot;6030&quot; class=&quot;character&quot;&gt;P&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;u&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24286&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;u&quot; data-textnode-index-1652184676261=&quot;163&quot; data-index-1652184676261=&quot;6031&quot; class=&quot;character&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;l&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24287&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;l&quot; data-textnode-index-1652184676261=&quot;164&quot; data-index-1652184676261=&quot;6032&quot; class=&quot;character&quot;&gt;l&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;s&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24288&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;s&quot; data-textnode-index-1652184676261=&quot;165&quot; data-index-1652184676261=&quot;6033&quot; class=&quot;character&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;a&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24289&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;a&quot; data-textnode-index-1652184676261=&quot;166&quot; data-index-1652184676261=&quot;6034&quot; class=&quot;character&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;r&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24290&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;r&quot; data-textnode-index-1652184676261=&quot;167&quot; data-index-1652184676261=&quot;6035&quot; class=&quot;character&quot;&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;」&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24291&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;」&quot; data-textnode-index-1652184676261=&quot;168&quot; data-index-1652184676261=&quot;6036&quot; class=&quot;character&quot;&gt;」&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;，&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24292&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;，&quot; data-textnode-index-1652184676261=&quot;169&quot; data-index-1652184676261=&quot;6037&quot; class=&quot;character&quot;&gt;，&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;获&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24293&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;获&quot; data-textnode-index-1652184676261=&quot;170&quot; data-index-1652184676261=&quot;6038&quot; class=&quot;character&quot;&gt;获&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;取&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24294&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;取&quot; data-textnode-index-1652184676261=&quot;171&quot; data-index-1652184676261=&quot;6039&quot; class=&quot;character&quot;&gt;取&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;更&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24295&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;更&quot; data-textnode-index-1652184676261=&quot;172&quot; data-index-1652184676261=&quot;6040&quot; class=&quot;character&quot;&gt;更&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;多&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24296&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;多&quot; data-textnode-index-1652184676261=&quot;173&quot; data-index-1652184676261=&quot;6041&quot; class=&quot;character&quot;&gt;多&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;技&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24297&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;技&quot; data-textnode-index-1652184676261=&quot;174&quot; data-index-1652184676261=&quot;6042&quot; class=&quot;character&quot;&gt;技&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;术&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24298&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;术&quot; data-textnode-index-1652184676261=&quot;175&quot; data-index-1652184676261=&quot;6043&quot; class=&quot;character&quot;&gt;术&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;干&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24299&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;干&quot; data-textnode-index-1652184676261=&quot;176&quot; data-index-1652184676261=&quot;6044&quot; class=&quot;character&quot;&gt;干&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;货&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24300&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;货&quot; data-textnode-index-1652184676261=&quot;177&quot; data-index-1652184676261=&quot;6045&quot; class=&quot;character&quot;&gt;货&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24301&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index-1652184676261=&quot;178&quot; data-index-1652184676261=&quot;6046&quot; class=&quot;character&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;▼&quot; data-textnode-index-1647519714855=&quot;1580&quot; data-index-1647519714855=&quot;24302&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24.5&quot;&gt;&lt;span data-raw-text=&quot;▼&quot; data-textnode-index-1652184676261=&quot;179&quot; data-index-1652184676261=&quot;6047&quot; class=&quot;character&quot;&gt;▼&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUyMjkzMjA1Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0Y7icPiahxgXFRw8a0xAIxOhPqYtRDr0IRNpGRl2oSfGHuvkG9VtahW9thH3btBGXJu9y2dZgb3oOuQ/0?wx_fmt=png&quot; data-nickname=&quot;ApachePulsar&quot; data-alias=&quot;ApachePulsar&quot; data-signature=&quot;Apache 软件基金会顶级项目，下一代云原生分布式消息流平台，集消息、存储、轻量化函数式计算为一体，采用计算与存储分离架构设计，支持多租户、持久化存储、多机房跨区域数据复制，具有强一致性、高吞吐、低延时及高可扩展性等流数据存储特性。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-raw-text=&quot;👇🏻&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6048&quot; class=&quot;character&quot;&gt;👇🏻&lt;/span&gt;&lt;span data-raw-text=&quot;加&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6049&quot; class=&quot;character&quot;&gt;加&lt;/span&gt;&lt;span data-raw-text=&quot;入&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6050&quot; class=&quot;character&quot;&gt;入&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6051&quot; class=&quot;character&quot;&gt; &lt;/span&gt;&lt;span data-raw-text=&quot;A&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6052&quot; class=&quot;character&quot;&gt;A&lt;/span&gt;&lt;span data-raw-text=&quot;p&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6053&quot; class=&quot;character&quot;&gt;p&lt;/span&gt;&lt;span data-raw-text=&quot;a&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6054&quot; class=&quot;character&quot;&gt;a&lt;/span&gt;&lt;span data-raw-text=&quot;c&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6055&quot; class=&quot;character&quot;&gt;c&lt;/span&gt;&lt;span data-raw-text=&quot;h&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6056&quot; class=&quot;character&quot;&gt;h&lt;/span&gt;&lt;span data-raw-text=&quot;e&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6057&quot; class=&quot;character&quot;&gt;e&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6058&quot; class=&quot;character&quot;&gt; &lt;/span&gt;&lt;span data-raw-text=&quot;P&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6059&quot; class=&quot;character&quot;&gt;P&lt;/span&gt;&lt;span data-raw-text=&quot;u&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6060&quot; class=&quot;character&quot;&gt;u&lt;/span&gt;&lt;span data-raw-text=&quot;l&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6061&quot; class=&quot;character&quot;&gt;l&lt;/span&gt;&lt;span data-raw-text=&quot;s&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6062&quot; class=&quot;character&quot;&gt;s&lt;/span&gt;&lt;span data-raw-text=&quot;a&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6063&quot; class=&quot;character&quot;&gt;a&lt;/span&gt;&lt;span data-raw-text=&quot;r&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6064&quot; class=&quot;character&quot;&gt;r&lt;/span&gt;&lt;span data-raw-text=&quot; &quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6065&quot; class=&quot;character&quot;&gt; &lt;/span&gt;&lt;span data-raw-text=&quot;中&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6066&quot; class=&quot;character&quot;&gt;中&lt;/span&gt;&lt;span data-raw-text=&quot;文&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6067&quot; class=&quot;character&quot;&gt;文&lt;/span&gt;&lt;span data-raw-text=&quot;交&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6068&quot; class=&quot;character&quot;&gt;交&lt;/span&gt;&lt;span data-raw-text=&quot;流&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6069&quot; class=&quot;character&quot;&gt;流&lt;/span&gt;&lt;span data-raw-text=&quot;群&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6070&quot; class=&quot;character&quot;&gt;群&lt;/span&gt;&lt;span data-raw-text=&quot;👇🏻&quot; data-textnode-index-1652184676261=&quot;180&quot; data-index-1652184676261=&quot;6071&quot; class=&quot;character&quot;&gt;👇🏻&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0Y6ZyndT2dicWCicapT1MB10aFbQ8lHezfmXjO54Kxkpy8kS3CyrTibfNGeKjdCmhtRzc2bQ8qOEW26w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;624&quot;/&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2e90bcc8f54400a0ced9b6eb5a8dc081</guid>
<title>技术分享 | 集成开放平台基于ABP框架的多租户模式实现多团队</title>
<link>https://toutiao.io/k/ucdhegf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.08796296296296297&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EgYLlhQ2DymnrT0UpOrPkQ3oIibgs0zrt5BiaPPvCUhtKlFUpcRXlR9uDtMu7djJdk5gN7TuRbMQr8vOTTCa1jIg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/EgYLlhQ2DymH2d0XOlqUcGlINCbPJ74ZMAwoQkpD6lSkibR0dT1wmgY89mYf81nnCXKY1d3cxcnmZXTjOHHSJicQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;300&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;导读：&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;软件多租户是指一个软件架构的实例软件运行在一个服务器上，但存在多个租户。租户是一组共享一个公共的用户访问特定权限的软件实例。多租户架构,软件应用程序旨在提供每个租户专用的实例包括数据、配置、用户管理、租户个体功能和非功能属性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;bc56ddaf3dfff29b605da6d8bef23945&quot;&gt;&lt;span&gt;&lt;strong&gt;一、行业中数据隔离模式&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-lines=&quot;3&quot; data-sign=&quot;c6bbae698c032d54c007a28c9655c0a4&quot;&gt;&lt;strong&gt;&lt;span&gt;1.1 共享数据表，租户ID隔离&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;增加业务标识字段，例如：TenantId ,  需要业务隔离的资源表增加租户标识，通过当前字段的查询筛选，达到数据资源的隔离&lt;/span&gt;&lt;/p&gt;&lt;h3 data-lines=&quot;3&quot; data-sign=&quot;c6bbae698c032d54c007a28c9655c0a4&quot;&gt;&lt;span&gt;‍&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lines=&quot;3&quot; data-sign=&quot;c6bbae698c032d54c007a28c9655c0a4&quot;&gt;&lt;span&gt;&lt;strong&gt;1.2 共享数据库，Schema隔离&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;同一个数据库，不同租户添加不同Schema的资源表，通过不同租户的Schema进行数据资源隔离&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1.3 独立数据库&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一个租户对应一个数据库&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1.4 数据隔离模式选择&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;根据现集成开放平台的企业客户多团队场景，选择按照**租户标识**进行数据隔离，符合现有的业务场景,参考业内ABP框架实现      &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;## 参考ABP框架     &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;官方文档：[https://aspnetboilerplate.com/Pages/Documents/Multi-Tenancy](https://aspnetboilerplate.com/Pages/Documents/Multi-Tenancy)         &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ABP框架按照租户标识隔离核心之一：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;**自动数据过滤**![enter image description here](https://myskyline.lexiangla.com/assets/5034c6fa69a311eca9457ae0b10da3ef)   &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;### 启用多租户&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;默认情况下，框架级别禁用多租户。可以在模块的 PreInitialize 方法中启用它，如下所示：&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Configuration.MultiTenancy.IsEnabled = &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1.5 主机与租户&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;定义了多租户系统中使用的两个术语：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;租户：拥有自己的用户、角色、权限、设置……并使用与其他租户完全隔离的应用程序的客户。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;主机：主机是单例（有一个主机）。Host 负责创建和管理租户。“宿主用户”处于更高级别，独立于所有租户。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-lines=&quot;1&quot; data-sign=&quot;8b51a20a587512b50a34f475e84c4326&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lines=&quot;1&quot; data-sign=&quot;8b51a20a587512b50a34f475e84c4326&quot;&gt;&lt;strong&gt;&lt;span&gt;1.6 Session&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;ASP.NET Boilerplate 定义了IAbpSession接口来获取当前 用户和租户ID。该接口用于多租户默认获取当前租户的id。因此，它可以根据当前租户的 id 过滤数据。以下是规则：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果 UserId 和 TenantId 都为 null，则当前用户未登录系统。我们无法知道它是主机用户还是租户用户。在这种情况下，用户无法访问 授权内容。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果 UserId 不为空且 TenantId 为空，则我们知道当前用户是主机用户。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果 UserId 不为空且 TenantId 不为空，我们就知道当前用户是租户用户。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果 UserId 为空但 TenantId 不为空，则说明我们知道当前租户，但当前请求未授权（用户未登录）。请参阅下一节以了解如何确定当前租户。&lt;br/&gt;有关更多信息，请参阅会话文档。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-lines=&quot;2&quot; data-sign=&quot;6672be0cf97fbb02045d1d72410cbef0&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lines=&quot;2&quot; data-sign=&quot;6672be0cf97fbb02045d1d72410cbef0&quot;&gt;&lt;strong&gt;&lt;span&gt;1.7 确定当前租户&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;由于所有租户用户都使用同一个应用程序，所以我们应该有一种区分当前请求的租户的方法。默认会话实现 (ClaimsAbpSession) 使用不同的方法按此给定顺序查找与当前请求相关的租户：&lt;/span&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-1&quot; data-sign=&quot;a86c6daed65e76b19f3ed8d0d8d03804&quot; data-lines=&quot;6&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果用户已登录，则会从当前声明中获取 TenantId。声明名称是http://www.aspnetboilerplate.com/identity/claims/tenantId 并且应该包含一个整数值。如果未在声明中找到，则假定用户是主机用户。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果用户尚未登录，则它会尝试从租户解析贡献者s 中解析 TenantId 。有 3 个预定义的租户贡献者，并按给定顺序运行（第一个成功的解析器“获胜”）：&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;DomainTenantResolveContributor：尝试从 url 解析租户名称。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;HttpHeaderTenantResolveContributor：尝试从“Abp.TenantId”标头值（如果存在）解析 TenantId。这是在 Abp.MultiTenancy.MultiTenancyConsts.TenantIdResolveKey 中定义的常量。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;HttpCookieTenantResolveContributor：尝试从“Abp.TenantId”cookie 值（如果存在）解析 TenantId。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Configuration.MultiTenancy.TenantIdResolveKey = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Abp-TenantId&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;您还需要在客户端进行配置：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;abp.multiTenancy.tenantIdCookieName = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;Abp-TenantId&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3 data-lines=&quot;2&quot; data-sign=&quot;b05c24ca6c70c1ba865f6148d63dd2f2&quot;&gt;&lt;strong&gt;&lt;span&gt;1.8 数据过滤器&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;对于多租户单数据库方法，我们必须添加一个 TenantId过滤器，以便在从数据库检索实体时仅获取当前租户的实体。当您为实体实现两个接口之一时，ASP.NET Boilerplate 会自动执行此操作：IMustHaveTenant和IMayHaveTenant。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;该接口用于通过定义一个TenantId属性来区分不同租户的实体。实现 IMustHaveTenant 的示例实体：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Product&lt;/span&gt; : &lt;span class=&quot;code-snippet__title&quot;&gt;Entity&lt;/span&gt;, &lt;span class=&quot;code-snippet__title&quot;&gt;IMustHaveTenant&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; TenantId { &lt;span class=&quot;code-snippet__keyword&quot;&gt;get&lt;/span&gt;; &lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;; }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt; Name { &lt;span class=&quot;code-snippet__keyword&quot;&gt;get&lt;/span&gt;; &lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;; }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这样，ASP.NET Boilerplate 就知道这是一个租户特定的实体，并自动将租户的实体与其他租户隔离开来。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们可能需要在主机和租户之间共享一个实体类型。因此，实体可能由租户或主机拥有。IMayHaveTenant 接口还定义了TenantId（类似于 IMustHaveTenant），但 在这种情况下它可以为空。实现 IMayHaveTenant 的示例实体：&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Role&lt;/span&gt; : &lt;span class=&quot;code-snippet__title&quot;&gt;Entity&lt;/span&gt;, &lt;span class=&quot;code-snippet__title&quot;&gt;IMayHaveTenant&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;? TenantId { &lt;span class=&quot;code-snippet__keyword&quot;&gt;get&lt;/span&gt;; &lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;; }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt; RoleName { &lt;span class=&quot;code-snippet__keyword&quot;&gt;get&lt;/span&gt;; &lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;; }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们可以使用相同的 Role 类来存储 Host 角色和 Tenant 角色。在这种情况下，TenantId 属性说明这是主机实体还是租户实体。一个空值意味着这是一个主机实体，一个 非空值，表示该实体由拥有租户其中ID是TenantId。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1.9 补充笔记&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;IMayHaveTenant 不像 IMustHaveTenant 那样常见。例如，Product 类不能是 IMayHaveTenant，因为 Product 与实际应用程序功能相关，与管理租户无关。因此请谨慎使用 IMayHaveTenant 接口，因为维护主机和租户共享的代码更加困难。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当您将实体类型定义为 IMustHaveTenant 或 IMayHaveTenant 时，请 始终在创建新实体时设置 TenantId（虽然 ASP.NET Boilerplate 尝试从当前 TenantId 设置它，但在某些情况下可能无法实现，尤其是对于 IMayHaveTenant 实体）。大多数情况下，这将是您处理 TenantId 属性的唯一点。您无需在编写 LINQ 时在 Where 条件中显式编写 TenantId 过滤器，因为它会自动过滤。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-lines=&quot;2&quot; data-sign=&quot;9d1afc4da6190a7f2b5eed79c8730b9e&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lines=&quot;2&quot; data-sign=&quot;9d1afc4da6190a7f2b5eed79c8730b9e&quot;&gt;&lt;strong&gt;&lt;span&gt;1.10 在主机和租户之间切换&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;在处理多租户应用程序数据库时，我们可以获得 当前租户。默认情况下，它是从IAbpSession获得的 （如前所述）。我们可以改变这种行为并切换到另一个租户的数据库。例子：&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ProductService&lt;/span&gt; : &lt;span class=&quot;code-snippet__title&quot;&gt;ITransientDependency&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;readonly&lt;/span&gt; IRepository&amp;lt;Product&amp;gt; _productRepository;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;readonly&lt;/span&gt; IUnitOfWorkManager _unitOfWorkManager;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ProductService&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;IRepository&amp;lt;Product&amp;gt; productRepository, IUnitOfWorkManager unitOfWorkManager&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        _productRepository = productRepository;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        _unitOfWorkManager = unitOfWorkManager;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;UnitOfWork&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;virtual&lt;/span&gt; List&amp;lt;Product&amp;gt; &lt;span class=&quot;code-snippet__title&quot;&gt;GetProducts&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; tenantId&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;using&lt;/span&gt; (_unitOfWorkManager.Current.SetTenantId(tenantId))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; _productRepository.GetAllList();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;二、集成开放平台实现多团队隔离&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;h3 data-lines=&quot;2&quot; data-sign=&quot;9782b93b5ff2c23c7e376b2231a6b9f4&quot;&gt;&lt;strong&gt;&lt;span&gt;2.1 背景&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;集成开放平台的企业客户存在不同组织团队，例如：财务团队、DevOps团队、组织团队等，每个团队的资源数据进行数据隔离，需要控制团队资源权限，我们采用ABP多租户模式 。区别：我们企业资产和用户体系是不同的两套系统，如下图，云端管理系统，企业客户私有化引擎系统， 用户体系在云端，企业资产管理在私有化系统。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5735849056603773&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AKfibC0EBia8XEKMRxFBtjwvH8YIBYldxppwOVE3n00MlVVWW52gy9z2lbqRl6T68aOty4jaRB1amKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1060&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 data-lines=&quot;1&quot; data-sign=&quot;53c545d4ee3e4a5dca730382f0bd3c2d&quot;&gt;&lt;strong&gt;&lt;span&gt;2.2 实现设计&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;管理控制台传入加密的租户信息， 引擎解析租户信息，添加数据时增加租户标识，查询时通过租户标识过滤&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.844559585492228&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AKfibC0EBia8XEKMRxFBtjwvHM9icwvkavW54gVrr6e2ibblibXEleehrdMdSiaEfJvKpf4A0oicnSjGbic2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;772&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 data-lines=&quot;2&quot; data-sign=&quot;165834352d545e037df08dac3e92cb4b&quot;&gt;&lt;strong&gt;&lt;span&gt;2.3 实现过程&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;h4 data-lines=&quot;2&quot; data-sign=&quot;c03c645556f67a548e95cebfaec329cd&quot;&gt;&lt;span&gt;管理员 ：团队分配用户权限&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7575757575757576&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AKfibC0EBia8XEKMRxFBtjwvHAZw4I2svEmjdOIYScooYsPmg9Gg5F0pQxL8xHm2u843VSpab87AKJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;792&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h4 data-lines=&quot;2&quot; data-sign=&quot;f62d4e8534d46dda4480699368d61c7f&quot;&gt;&lt;span&gt;管理控制台,加密数据，调用引擎服务服务&lt;br/&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;从AsyncLocal或者header获取用户团队等信息,安全考虑：JWT加密传输&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7838150289017342&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AKfibC0EBia8XEKMRxFBtjwvHdAmSnK5mtP662akgVABicydzibbBMxJVXibnmHDBklKGjddzaErfyIjPg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot;/&gt;&lt;/p&gt;&lt;h4 data-lines=&quot;1&quot; data-sign=&quot;b8ca1fd04f02ac88161a6f6e447df39f&quot;&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4 data-lines=&quot;1&quot; data-sign=&quot;b8ca1fd04f02ac88161a6f6e447df39f&quot;&gt;&lt;span&gt;引擎服务添加中间件，解析加密数据，加入上下文&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.586414445399828&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AKfibC0EBia8XEKMRxFBtjwvHHTHRGg9evRwSB4ODl8JLiaicuMaCObibWDzWAABTct8zTqdP49jrbUrSQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1163&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h4 data-lines=&quot;1&quot; data-sign=&quot;f43e438cd31f2cb78f2762b03dab7a44&quot;&gt;&lt;span&gt;添加上下文读取租户用户信息服务&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7282352941176471&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AKfibC0EBia8XEKMRxFBtjwvHv3bx9uXoeuXAQfp3TzODial3N8CKdNibSutd3WawxmIG8ZZwHKhBAia0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;850&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;h4 data-lines=&quot;1&quot; data-sign=&quot;e8c7c5b373aed5f744f9d344874db423&quot;&gt;&lt;span&gt;获取当前操作Scope上下文，确认权限隔离类型&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.8209745762711864&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AKfibC0EBia8XEKMRxFBtjwvHFjOoqQSVHRnicibOvE7tFDGYphjyicvOiaicJtemGs1P4VzUerEMOhg1Asg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;944&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h4 data-lines=&quot;1&quot; data-sign=&quot;def5b8cbc0e890461b2c0e70994909d4&quot;&gt;&lt;span&gt;添加数据时，重写EF SaveChange，默认添加租户相关字段&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3179959100204499&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AKfibC0EBia8XEKMRxFBtjwvHTw5AHmdzlcwFDvwJicIiblXXCaQ7G4ib8RGSbAN4gP9pMzp5h19bZsaVQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;978&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4485049833887043&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AKfibC0EBia8XEKMRxFBtjwvHiajB76icvib4tT1WmUdJGp93vI0U2ibfAucoOontZJ0zvlfkc68gzkhiaicw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;903&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h4 data-lines=&quot;2&quot; data-sign=&quot;bcc120413ea6c81f97a6b42aad750e0b&quot;&gt;&lt;span&gt;增加团队DbContext，重写：OnModelCreating，增加自动过滤器&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.296875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AKfibC0EBia8XEKMRxFBtjwvHL5zouGrburkBiaWz7k59SZvm9L65f38VAQjKrrcIyxWaKDxCexFsuJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2 data-lines=&quot;2&quot; data-sign=&quot;bc98ebfb673981b67bd53a776de754d2&quot;&gt;&lt;strong&gt;&lt;span&gt;三、总结思考&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;ABP框架对多租户实现包含多种场景， 例如添加租户的时候，通过入参连接字符串添加租户数据库，为空则默认同一个库等， 集成的团队隔离只参考和选择租户标识过滤，核心为自动数据过滤，读取源码，选择中间关键的实现逻辑。中间业务过程无感。避免代码的侵入性。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt; &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;参考文献&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;百度百科：https://baike.baidu.com/item/%E5%A4%9A%E7%A7%9F%E6%88%B7%E6%8A%80%E6%9C%AF/10061761?fr=aladdin&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;维基百科：https://en.wikipedia.org/wiki/Multitenancy&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;ABP：https://aspnetboilerplate.com/Pages/Documents/Multi-Tenancy&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;IBM 中间件实现 SaaS 解决方案，启用多租户的方法：http://www.uml.org.cn/soa/200909102.asp&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;SAAS 的4级成熟度模型：https://www.jianshu.com/p/a401f951d560&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;多租户模型：https://blog.csdn.net/pan_tian/article/details/88202074&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;多租户模式：https://www.cnblogs.com/yuboon/p/10404473.html&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;------ END ------&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;作者简介&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;孙同学：&lt;/strong&gt; 开发工程师，目前&lt;/span&gt;&lt;span&gt;负责集成开放平台的研发工作。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;也许您还想看：&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg4MDU5ODE1NQ==&amp;amp;mid=2247488775&amp;amp;idx=1&amp;amp;sn=5bee9e75c2ed06bd4ad9a2503f65e0da&amp;amp;chksm=cf7398e3f80411f5af3eafd71b6f7914696dd98180c611cbfeda79e2c98d29d9c357253576f0&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍技术分享｜Java SDK动态数据源和上下文机制‍&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;技术分享｜Java SDK动态数据源和上下文机制&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg4MDU5ODE1NQ==&amp;amp;mid=2247488774&amp;amp;idx=1&amp;amp;sn=868d08daf0211fb96d9fb245f3526f3a&amp;amp;chksm=cf7398e2f80411f4e52d549e8b015adec04a30d349617161eb6ae37f9972c0402b425e63ad26&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍技术分享｜NodeJS分布式链路追踪实现‍&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;技术分享｜NodeJS分布式链路追踪实现&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;更多明源云·天际开放平台场景案例与开发小知识，可以关注明源云天际PaaS公众号：&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg4MDU5ODE1NQ==&amp;amp;mid=2247489323&amp;amp;idx=2&amp;amp;sn=62fc7c1a5946ab4d6d4a672a10490717&amp;amp;chksm=cf739acff80413d92e0ce4f765ab58109a066d3219a2a45ac5269a780229c0fc4f935c331974&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;‍天际优秀开发者故事 | 第3期-王少斐：我们都是时代的接棒者‍&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;天际优秀开发者故事 | 第4期-严兆坤：撸起袖子加油干&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg4MDU5ODE1NQ==&amp;amp;mid=2247488802&amp;amp;idx=1&amp;amp;sn=9705e163b346c64dba303b806a60810d&amp;amp;chksm=cf7398c6f80411d035bd7be3943c38e1e4808224a29579e40febcc1a0bc0eb2543d5604201dc&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;明源云·天际建模平台V4.0产品发布会&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;明源云·天际建模平台V4.0产品发布会&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;👇关注👇&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg4MDU5ODE1NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AJ9zU6C2VddECleKJfs51QDfJ3njSriaPEon5TvBzNibSOCJYI1AibiaQn9GJMHNxS6EVjcbsHibf6ERAg/0?wx_fmt=png&quot; data-nickname=&quot;明源云天际PaaS平台&quot; data-alias=&quot;MysoftDT&quot; data-signature=&quot;明源云·天际开放平台是国内地产行业首个企业级低代码应用平台，关注我们，及时获取天际Paas服务最新资讯、场景案例、解决方案及开发者知识点。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;👇&lt;/span&gt;&lt;span&gt;长按二维码进天际官方交流群&lt;/span&gt;&lt;span&gt;👇&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;解锁&lt;/span&gt;&lt;/strong&gt;&lt;strong mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;1.行业优质技术内容&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;2.行业技术经验交流&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;3.行业成功客户案例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/iaGl5ICMM2AJmObJBeia9yuEzOibTc6JOdyQ1yfQc3GVNg98ic8g0FiblNCJK2GzCtgQFOYZa7cUibiaibLUJibkJUgo8oQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;396&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;strong mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;明源云·天际PaaS平台&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;strong mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;加速不动产生态链数字化升级&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;点击左下角“阅读原文”免费咨询&lt;/span&gt;&lt;/section&gt;&lt;section mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span&gt;&lt;strong mp-original-font-size=&quot;17&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;27.200000762939453&quot;&gt;open.mingyuanyun.com&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>