<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>f9120bf0f691093093b57de0d429b9b8</guid>
<title>微服务设计原则</title>
<link>https://toutiao.io/k/4sywkcm</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5156431054461182&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl91IycK5ZI5eG3LhpTCj7dMgibgw06zQIIxhdI36Q8EAb9T3ialL8E27A24VEicHn1VVdIHffhfNSOCDg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;863&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;良好的微服务设计可以使后期的升级维护更加轻松，否则将会令人非常头疼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面几个设计原则强烈建议采用：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;单一职责&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;高内聚&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;低耦合&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;隐藏内部实现&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;避免代码库共享&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;避免数据过度暴露&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;避免数据库共享&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最小化同步调用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最小化硬件共享&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;避免使用平台独特性技术&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这三大原则是面向对象设计中的核心，同样适用于微服务设计。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 单一职责&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;每个微服务只应担负一个职责。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4128787878787879&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl91IycK5ZI5eG3LhpTCj7dMg3Z0IHNSZ2hgh1yALicaEudMn663UDyQE4BljHZgd9dIOaJib76MrezkA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1056&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如一个微服务中有两大功能：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把它们放在一起看起来问题不大，因为使用的技术相同、功能和数据上会有比较紧密的联系，在组织结构上，通常是由同一个开发小组负责。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，这会造成两个功能有大量的代码耦合。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;时间长了之后，会带来和单体架构一样的问题，维护难、测试难、部署难 ……&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3193612774451098&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl91IycK5ZI5eG3LhpTCj7dMg3jrMT2GrBeJgqvwvG9YItOhE1bKqOMiaXmUO0WZm790QDq8csBIcXNw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1002&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，按照“单一职责”原则，应该分为两个微服务。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 高内聚&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;关系紧密的行为应放在一起。&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.29942418426103645&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl91IycK5ZI5eG3LhpTCj7dMgcy8Ts6QcbXZ2W2Bic2WrFcNamMhYibBhkc3qYxtjlhTLCzPhn7AZMNtg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1042&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如有2个微服务：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“订单金额统计” 服务需要请求 “订单管理” 服务，以获取所需数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如价格、税、服务费 ……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;刚开始一切安好，但突然某一天上头增加税种了，需要更改新的计算规则。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，订单服务就要提供新的数据，金额统计服务也需要更改计算方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是说，每次变更基本都需要两个服务一起改，是紧耦合的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.44421906693711966&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl91IycK5ZI5eG3LhpTCj7dMg1SAeHX04MfLuiaxDvg37vwESOTvIniadlUYaI2uEpaB1VIsmibFcBC8dA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;986&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为订单金额统计服务的逻辑只与订单相关，所以应该并入订单服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把紧密相关的行为放在一起，实现高内聚。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. 低耦合&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;一个服务的变更不要影响其他服务。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此原则涉及到多个方面。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.1 隐藏内部实现&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如上一节 “高内聚” 中，把金额统计服务并入了订单管理服务，那么，之前金额统计服务中的 “统计接口” 还需要对外暴露吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在已经是订单服务的内部功能了，统计结果可以作为订单对象中的数据，所以无需对外暴露，防止误操作和造成不必要的耦合关系。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.2 避免共享代码库&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4127725856697819&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl91IycK5ZI5eG3LhpTCj7dMgHTp5Ab3tstweDHjysyR3aicZUobfwP4lUaeAzaeM7dbyicmVQeTF0npQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1284&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;共享代码的确非常方便，但是会造成底层代码关联度太强。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于以后的升级非常不便，例如某个服务想把语言版本升级，但共享库使用的是低版本，其中某些用法在高版本中是过期的，这就很尴尬了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想要完美的避免也是不现实的，只能尽量规避。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如&lt;strong&gt;不共享&lt;/strong&gt;，各服务重新造轮子，这样服务之间就有边界了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但这个方式只适用于需要共享的库是非常稳定的，不怎么需要改了，否则的话相关服务都需要改。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再比如把共享库的&lt;strong&gt;粒度缩小&lt;/strong&gt;，避免形成功能特别全的大库。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大库必然导致被引用的范围非常广，影响面大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果粒度很小的话，涉及的服务也就少。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.3 避免数据过度暴露&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如用户服务有一个获取用户详情的接口，返回用户所有信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;购物车服务获取用户信息时，就会拿到很全的数据，例如包括支付信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是没必要的，只需要返回用户的基本属性即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;特殊的属性应通过另外的接口提供。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;过度暴露会增加服务间的耦合度。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.4 避免数据库共享&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5337301587301587&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl91IycK5ZI5eG3LhpTCj7dMgw82fL94K8VCxIydxBG9p6Y4TibPaNIvUJHACicmv6aqpYKzRdXST3ibtw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1008&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个服务想获取另一个服务的数据时，只应该通过接口，而不是直接从对方的数据库中拿。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;否则，这种数据层面的耦合会带来噩梦。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.5 最小化同步调用&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9039812646370023&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl91IycK5ZI5eG3LhpTCj7dMgVzbricUsibC7Cibpqo1BYhYzHohlqiapDSAwl3b8uiaWd3GYSsu7foHVcdA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;854&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如订单服务创建订单的时候需要调用很多其他服务，例如用户、商品、支付、库存、物流。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接同步调用各个服务的接口吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不现实，如果其中有一个服务接口调用失败，那么创建订单就失败了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最好使用事件驱动的异步调用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同步调用会产生网络的阻塞，对被调用服务的可用性要求极高，所以要慎重使用。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.6 避免硬件基础设施的共享&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4229934924078091&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/wv3K6j4ibl91IycK5ZI5eG3LhpTCj7dMgkmCBRNqqNYXbVqFty6pwvt013YI4TpAscGibVqE4GCbvynbg6UpXpkQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;922&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务设计得很好，但如果硬件部署没有规划好，一样非常痛苦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如两个服务部署在一台服务器上，服务B 非常消耗资源，那么服务A可能就没法用了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，不能忽略硬件这个关键点，要根据各个服务的特点做好均衡部署。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.7 避免使用平台特性技术&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如 Java RMI 做远程调用不错，但它是平台特性，要求服务双方都用一套技术，这种高耦合就不如平台独立的 REST 更自由了。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a665722d13f10c3c32372aef12e75c37</guid>
<title>数据分析十年，我只推荐这些书</title>
<link>https://toutiao.io/k/gc13z71</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;a class=&quot;weui-flex original_primary_card appmsg_card_context appmsg_card_active&quot; href=&quot;#&quot; id=&quot;copyright_info&quot;&gt;
                                
                                &lt;div class=&quot;weui-flex__item&quot;&gt;
                                    &lt;strong class=&quot;original_primary_nickname&quot;&gt;玩转数据分析&lt;/strong&gt;
                                                                            &lt;p class=&quot;original_primary_desc&quot;&gt;我是一名有9年多互联网数据分析工作经验的女性分析师。教是最好的学，分享是最好的交流，这里记录我的思考与总结，欢迎关注，共同交流。&lt;/p&gt;
                                                                    &lt;/div&gt;
                                &lt;p class=&quot;weui-flex__ft&quot;/&gt;
                            &lt;/a&gt;
                        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>77bcb7ac28d0a5b6283fe22915bdd623</guid>
<title>简单了解一下 K8S，并搭建自己的集群</title>
<link>https://toutiao.io/k/utt4f5d</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot;&gt;&lt;p&gt;距离上次更新已经有一个月了，主要是最近工作上的变动有点频繁，现在才暂时稳定下来。这篇博客的本意是带大家从零开始搭建K8S集群的。但是我后面一想，如果是我看了这篇文章，会收获什么？就是跟着步骤一步一走吗？是我的话我会选择拒绝，所以我加了关于K8S的简单介绍，每一步的步骤都添加了解释。由于篇幅和时间原因，我只介绍了K8S中较为核心的Pod和Service。&lt;/p&gt;&lt;p&gt;文章前半段会简单的介绍一下K8S，后半段会介绍如何从零开始慢慢的搭建集群。如果想直接开始着手搭建集群，则可以直接从&lt;b&gt;第三章&lt;/b&gt;开始看。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;1. K8S是什么&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;K8S全称kubernetes，是由Google在2014年开源的&lt;b&gt;生产级别&lt;/b&gt;的容器编排系统，或者说是&lt;b&gt;微服务和云原生平台&lt;/b&gt;。虽说14年才开源，但实际上K8S是Google内部的容器编排系统Borg的开源版本，在Google内部已经用了十多年了。下面是一个关于K8S的Logo来源的小插曲。&lt;/p&gt;&lt;blockquote&gt;Kubernetes由谷歌在2014年首次对外宣布 。它的开发和设计都深受谷歌的Borg系统的影响，它的许多顶级贡献者之前也是Borg系统的开发者。在谷歌内部，Kubernetes的原始代号曾经是Seven，即星际迷航中友好的Borg(博格人)角色。Kubernetes标识中舵轮有七个轮辐就是对该项目代号的致意。&lt;/blockquote&gt;&lt;p&gt;不过也有一个说法是，Docker的Logo是一个驮着集装箱的鲸鱼，也就是运输船，K8S的Logo是一个船舵，旨在引领着Docker（或者说容器技术）走向远方。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;2. 简单了解K8S&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;看了很多官方文章，是真&lt;b&gt;官方&lt;/b&gt;。官方什么意思呢，就是有可能看完了约等于没有看，一样的啥都不知道。&lt;/p&gt;&lt;p&gt;所以我想写这样一篇文章，给那些看完文档仍然不太理解或者说完全没了解过K8S的老铁一点小帮助。那么让我们回到最初对K8S的&lt;b&gt;定义&lt;/b&gt;，它是一个微服务框架。&lt;/p&gt;&lt;p&gt;说到微服务框架，我们就不得不提一下目前业界十分主流的微服务框架，与这些你十分熟悉的框架进行对比，你就会很清晰的知道K8S能做什么了。目前很主流的微服务框架和平台有Spring Cloud、Dubbo和K8S。&lt;/p&gt;&lt;p&gt;Spring Cloud来自Netflix，Dubbo来自阿里，而K8S则来自Google。说的直观一点，这三个框架都是针对微服务的解决方案。可能有人会说，K8S不是一个容器编排系统吗？怎么跟Spring Cloud这种软件层面上的微服务框架做起了对比呢？&lt;/p&gt;&lt;p&gt;老铁别慌，等我们慢慢深入这个概念。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b690b361a36ac28ff78cdba590176cfb_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;300&quot; data-rawheight=&quot;288&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;300&quot; data-rawheight=&quot;288&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-b690b361a36ac28ff78cdba590176cfb_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;我们都知道，如果我们需要使用微服务，那么肯定少不了一些底层的基础设施的支撑，例如服务注册与发现、负载均衡、日志监控、配置管理、集群自愈和容错、弹性伸缩…等等。我没有列举完，如其实这些组件都可以统称为微服务的&lt;b&gt;公共关注点&lt;/b&gt;。那我们是不是可以说，只要能够提供的这些功能，它就算一个微服务框架呢？&lt;/p&gt;&lt;p&gt;以上的大多数功能，K8S都是内置的。故我们可以说K8S是一个与Docker Swarm相类似的容器编排系统，但是由于K8S内置了微服务的解决方案，它同时也是一个功能完备的微服务框架。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;2.1 Pod的概念&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;在Docker Swarm中，调度的最小单位是容器，而在K8S中，调度的最小是&lt;b&gt;Pod&lt;/b&gt;，那啥是Pod呢？&lt;/p&gt;&lt;p&gt;Pod是K8S设计的一个全新的概念，在英文中的原意是表达一群鲸鱼或者是一个豌豆荚的意思。换句话说，一个Pod中可以运行一个或者多个容器。&lt;/p&gt;&lt;p&gt;在一个集群中，K8S会为每个Pod都分配一个集群内唯一的IP地址。因为K8S要求底层网络支持集群内的任意节点之间的两个Pod能够直接通信。这些容器共享当前Pod的文件系统和网络。而这些容器之所以能够共享，是因为Pod中有一个叫Pause的根容器，其余的用户业务容器都是共享这个根容器的&lt;b&gt;IP和Volume&lt;/b&gt;。所以这些容器之间都可以通过localhost进行通信。&lt;/p&gt;&lt;p&gt;有人可能会问，为什么要引入根容器这个概念？那是因为如果没有根容器的话，当一个Pod中引入了多个容器的时候，我们应该用哪一个容器的状态来判断Pod的状态呢？所以才要引入与业务无关且不容易挂掉的Pause容器作为根容器，用根容器的状态来代表&lt;b&gt;整个容器的状态&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;熟悉Spring Cloud或者微服务的都知道，微服务中最忌讳的就是出现单点的情况。&lt;/p&gt;&lt;p&gt;所以针对同一个服务我们一般会部署2个或者更多个实例。在K8S中，则是会部署多个Pod副本，组成一个Pod集群来对外提供服务。&lt;/p&gt;&lt;p&gt;而我们前面提过，K8S会为每一个Pod提供一个唯一的IP地址，客户端就需要通过每个Pod的唯一IP+容器端口来访问到具体的Pod，这样一来，如果客户端把调用地址写死，服务器就没有办法做负载均衡，而且，Pod重启之后IP地址是会变的，难道每次重启都要通知客户端IP变更吗？&lt;/p&gt;&lt;p&gt;为了解决这个问题，就要引出&lt;b&gt;Service&lt;/b&gt;的概念了。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;2.2 Service&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;Service是K8S中最核心的资源对象之一，就是用于解决上面提到的问题。我个人认为与Swarm中的Service概念没有太大的区别。&lt;/p&gt;&lt;p&gt;一旦Service被创建，K8S会为其分配一个集群内唯一的IP，叫做&lt;b&gt;ClusterIP&lt;/b&gt;，而且在Service的整个生命周期中，ClusterIP不会发生变更，这样一来，就可以用与Docker Swarm类似的操作，建立一个ClusterIP到服务名的DNS域名映射即可。&lt;/p&gt;&lt;p&gt;值得注意的是，ClusterIP是一个虚拟的IP地址，无法被Ping，仅仅只限于在K8S的集群内使用。&lt;/p&gt;&lt;p&gt;而Service对客户端，屏蔽了底层Pod的寻址的过程。并且由kube-proxy进程将对Service的请求转发到具体的Pod上，具体到哪一个，由具体的调度算法决定。这样以来，就实现了负载均衡。&lt;/p&gt;&lt;p&gt;而Service是怎么找到Pod的呢？这就需要继续引入另外一个核心概念&lt;b&gt;Label&lt;/b&gt;了。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;2.3 Label&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;Lable本质上是一个键值对，具体的值由用户决定。Lable就是标签，可以打在Pod上，也可以打到Service上。总结来说，Label与被标记的资源是一个一对多的关系。&lt;/p&gt;&lt;p&gt;例如，我们给上面所描述的Pod打上了&lt;code&gt;role=serviceA&lt;/code&gt;的标签，那么只需要在Service中的&lt;b&gt;Label Selector&lt;/b&gt;中加入刚刚那个标签，这样一来，Service就可以通过Label Selector找到打了同一Label的Pod副本集了。&lt;/p&gt;&lt;p&gt;接下来，再简单的介绍一下其他的K8S核心概念。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;2.4 Replica Set&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;上面提到过部署多个Pod，是怎么一回事呢？K8S最开始有一个概念叫Replication Controller，不过现在已经慢慢的被Replica Set所替代，RS也叫下一代的RC。简单来说&lt;b&gt;Replica Set&lt;/b&gt;定义了一种期望的场景，即让任何时候集群内的Pod副本数量都符合预期的值。&lt;/p&gt;&lt;p&gt;一旦被创建，集群就会定期的检测当前存活的Pod数量，如果多了，集群就会停掉一些Pod。相反，如果少了就会创建一些Pod。这样一来可以避免什么问题呢？假设某个服务有两个实例在运行，其中一个意外挂掉了，如果我们设置了副本数量是2，那么集群就会自动创建一个Pod，以保证集群内始终有两个Pod在运行。&lt;/p&gt;&lt;p&gt;K8S的东西就简单的介绍这么多，接下来让我们进入集群的搭建环节。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;3. 搭建K8S的准备工作&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;不知道从哪篇博客开始，不是很愿意写这种纯TODO类的博文，但是我自己躺坑之后发现，我自己这个还真是我目前见过最简单的。&lt;/p&gt;&lt;p&gt;我看到的有些安装分了很多种情况，但是当一个初学者来看的时候，可能反而会让他看懵逼。所以接下来的安装会有些硬核。不分情况，就只有一种情况，一把梭安装就完事。&lt;/p&gt;&lt;blockquote&gt;系统 版本 Ubuntu 18.04&lt;br/&gt;K8S 版本 v1.16.3&lt;br/&gt;Docker 版本 v19.03.5&lt;br/&gt;Flannel 版本 v0.11.0&lt;/blockquote&gt;&lt;p&gt;如果你问我，&lt;i&gt;如果没有机器看了你的文章也能的拥有自己的集群吗&lt;/i&gt;？那么请看下图…&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-fe06cafb092169fe5f16cb5fe44a7650_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;300&quot; data-rawheight=&quot;244&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;300&quot; data-rawheight=&quot;244&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-fe06cafb092169fe5f16cb5fe44a7650_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;3.1 准备工作&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;我们先假设以下的情况成立。&lt;/p&gt;&lt;blockquote&gt;机器：有2-3台物理机或虚拟机&lt;br/&gt;系统：Ubuntu 18.04 且已换好国内的源&lt;/blockquote&gt;&lt;p&gt;如果以上基本不成立，本篇文章到此结束，谢谢观看…&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6ee4f910580c62f2459015e90071ce12_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;605&quot; data-rawheight=&quot;550&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-6ee4f910580c62f2459015e90071ce12_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;605&quot; data-rawheight=&quot;550&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-6ee4f910580c62f2459015e90071ce12_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-6ee4f910580c62f2459015e90071ce12_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;3.2 安装Docker&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;我也不需要介绍各种情况了，直接登上机器，创建一个shell脚本，例如叫&lt;code&gt;install_docker.sh&lt;/code&gt;，一把梭代码如下。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates 
curl gnupg-agent software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;
sudo apt-get update
sudo apt-get -y install docker-ce docker-ce-cli containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后执行&lt;code&gt;sh install_docker.sh&lt;/code&gt;，等待命令跑完，验证docker是否安装好即可。直接敲&lt;code&gt;docker&lt;/code&gt; + 回车。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;3.3 安装Kubernetes&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;同理，新建一个shell脚本，例如&lt;code&gt;install_k8s.sh&lt;/code&gt;。一把梭代码如下。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo apt-get update
cat &amp;lt;&amp;lt;EOF &amp;gt;/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
sudo apt-get install -y kubelet kubeadm kubectl --allow-unauthenticated
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后执行&lt;code&gt;sh install_k8s.sh&lt;/code&gt;，等待命令跑完，验证k8s是否安装好即可。直接敲&lt;code&gt;kubectl&lt;/code&gt; + 回车。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;3.4 关闭Swap&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;先给出一把梭，不要耽误了正在安装的老铁。为什么要关闭后面再说。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;暂时关闭 直接使用命令&lt;code&gt;sudo swapoff -a&lt;/code&gt;，但是重启之后会生效。会导致k8s无法正常运行。&lt;/li&gt;&lt;li&gt;永久关闭 建议&lt;b&gt;一劳永逸&lt;/b&gt;，&lt;code&gt;sudo vim /etc/fstab&lt;/code&gt;将有swap.img那行注释掉，保存即可。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;那么，swap是啥呢？它是系统的交换分区，你可以理解为&lt;b&gt;虚拟内存&lt;/b&gt;。当系统内存不足的时候，会将一部分硬盘空间虚拟成内存使用。那为什么K8S需要将其关掉呢？可以从下图看看访问内存和访问硬盘速度上的差异就知道了。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-157421d7b6d1a956934608345b78a97b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;803&quot; data-rawheight=&quot;276&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-157421d7b6d1a956934608345b78a97b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;803&quot; data-rawheight=&quot;276&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-157421d7b6d1a956934608345b78a97b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-157421d7b6d1a956934608345b78a97b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;总的来说是为了&lt;b&gt;性能&lt;/b&gt;考虑，所以就需要避免开启swap交换，K8S希望所有的服务都不应该超过集群或节点CPU和内存的限制。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;4. 初始化Master节点&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;到这，准备工作就完成了，可以开始安装K8S的master节点了，登上要作为master节点的机器。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;4.1 设置HostName&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;老规矩，先上命令，再说为什么要设置。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo hostnamectl set-hostname master-node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;自定义修改了主机名，在之后查看集群内节点时，每个节点的名字就不会显示K8S自动生成的名字，便于查看和记忆。例如，在其他的Node节点你可以将&lt;code&gt;master-node&lt;/code&gt;改为&lt;code&gt;slave-node-1&lt;/code&gt;或&lt;code&gt;worker-node-2&lt;/code&gt;，效果如下。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-7b4f78f7ab3a82222bcb32ae0f08916b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;338&quot; data-rawheight=&quot;68&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;338&quot; data-rawheight=&quot;68&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-7b4f78f7ab3a82222bcb32ae0f08916b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;4.2 初始化集群&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;在机器上执行如下命令。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo kubeadm init --pod-network-cidr=10.244.0.0/16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，抱起吉他，等待命令执行完。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-380ab1fa90fdbe05b1ebfde67d88ecaa_b.gif&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;200&quot; data-rawheight=&quot;260&quot; data-thumbnail=&quot;https://pic3.zhimg.com/v2-380ab1fa90fdbe05b1ebfde67d88ecaa_b.jpg&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;200&quot; data-rawheight=&quot;260&quot; data-thumbnail=&quot;https://pic3.zhimg.com/v2-380ab1fa90fdbe05b1ebfde67d88ecaa_b.jpg&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-380ab1fa90fdbe05b1ebfde67d88ecaa_b.gif&quot;/&gt;&lt;/figure&gt;&lt;p&gt;这里需要&lt;b&gt;特别注意&lt;/b&gt;一下。这个命令执行完成之后，会打印一个有&lt;b&gt;kubeadm join&lt;/b&gt;的命令，需要保存下来。&lt;/p&gt;&lt;p&gt;大概长这样。&lt;/p&gt;&lt;blockquote&gt;kubeadm join 你的IP地址:6443 --token 你的TOKEN --discovery-token-ca-cert-hash sha256:你的CA证书哈希&lt;/blockquote&gt;&lt;p&gt;顾名思义，这个命令用于其他节点加入到集群中，而且Token是有时效性的，过期时间一般是&lt;b&gt;86400000毫秒&lt;/b&gt;。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6e7ee23d6c39ceb42e08b7b72d18281a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;255&quot; data-rawheight=&quot;224&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;255&quot; data-rawheight=&quot;224&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-6e7ee23d6c39ceb42e08b7b72d18281a_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;如果失效，就需要重新生成。如果你真的又没有保存，又失效了…我还是给你准备了两个补救措施。如果命令保存下来了，那么请直接&lt;b&gt;跳过&lt;/b&gt;这两个补救措施。&lt;/p&gt;&lt;blockquote&gt;token. 通过命令&lt;code&gt;Kubeadm token list&lt;/code&gt;找回&lt;br/&gt;ca-cert. 执行命令&lt;code&gt;openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&amp;gt;/dev/null | openssl dgst -sha256 -hex | sed &#x27;s/^.* //&#x27;&lt;/code&gt;找回&lt;/blockquote&gt;&lt;h3&gt;&lt;b&gt;4.3 普通用户可执行&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;把下面的指令一把梭即可。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;主要是，为了不那么麻烦，在控制节点上执行&lt;code&gt;kubectl&lt;/code&gt;这类的命令时，不用每次都sudo。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;4.4 安装网络通信插件&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;执行如下命令，安装网络插件Flannel。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，如果不安装Flannel，我们刚刚Init好的Master节点会处于&lt;b&gt;NOT_READY&lt;/b&gt;的状态。安装好之后，可以通过命令&lt;code&gt;kubectl get nodes&lt;/code&gt;来查看所有的节点的状态。也可以通过&lt;code&gt;kubectl get pods --all-namespaces&lt;/code&gt;来查看当前集群中所有Pod的状态。这里需要注意的是，只有在master节点是&lt;b&gt;READY&lt;/b&gt;，所有Pod的状态是&lt;b&gt;RUNNING&lt;/b&gt;之后，才可以进行下一步。&lt;/p&gt;&lt;p&gt;为什么要装网络插件呢？&lt;/p&gt;&lt;p&gt;那是因为K8S要求集群内的所有节点之间的Pod网络是互通的。换句话说，Flannel可以让集群内不同节点上的容器都有一个在&lt;b&gt;当前集群&lt;/b&gt;内唯一的虚拟IP地址。这样以来，就可以实现，跨节点的Pod与Pod直接通信。&lt;/p&gt;&lt;p&gt;这样一来，将复杂的网络通信，简单的变成了两个IP地址之间的通信。这主要是通过虚拟二层网络实现的。看似是这个节点的Pod直接和另一个节点上的Pod进行了通信，最终还是通过节点的物理网卡流出的。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;5. Slave节点加入集群&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;到此，一个单点的集群就已经搭建好了。现在我们要做的是，登录准备好的另一台（我只有两台，如果你有3台或者4天，把这个章节反复走几次就好了）服务器。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;5.1 设置HostName&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;执行如下命令。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;sudo hostnamectl set-hostname slave-node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因为当前节点不是master了，所以主机名设置成了slave-node。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;5.2 加入集群&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;重点来了，执行上一章节生成的&lt;b&gt;kubeadm join&lt;/b&gt;命令即可。等待执行完毕之后，就可以在master节点上通过命令&lt;code&gt;kubectl get nodes&lt;/code&gt;看到slave-node已经加入了集群。&lt;/p&gt;&lt;p&gt;对于Slave节点的操作就没了。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4e152f4a5e0a5ef85abbe04085da4e42_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;300&quot; data-rawheight=&quot;269&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;300&quot; data-rawheight=&quot;269&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4e152f4a5e0a5ef85abbe04085da4e42_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;b&gt;6. 感谢阅读&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;关于K8S就简单的介绍到这里，由于篇幅和时间的原因，很多概念都没有介绍，例如Deployment、Volume、ConfigMap等等。仅仅只介绍了较为核心的Pod和Service，以及相关的东西。毕竟，如果想要把K8S的核心理念介绍完，一篇博客的篇幅是肯定不够的，后面我再单独详细的介绍吧。&lt;/p&gt;&lt;p&gt;第一次在博客里求赞啊，之前完全是随缘。不过我后来发现，打开博客看到大家的点赞和留言，这对我来说是一种&lt;b&gt;莫大的鼓励&lt;/b&gt;。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;blockquote&gt;好了以上就是本篇博客的全部内容了，如果你觉得这篇文章对你有帮助，还麻烦&lt;b&gt;点个赞&lt;/b&gt;，&lt;b&gt;关个注&lt;/b&gt;，&lt;b&gt;分个享&lt;/b&gt;，&lt;b&gt;留个言&lt;/b&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=http%3A//weixin.qq.com/r/ni2psZzECsF1rdjS93iM&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/ni2psZz&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ECsF1rdjS93iM&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt; (二维码自动识别)&lt;/p&gt;&lt;p/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>86e657386c7e624896595ca04c5e7fe6</guid>
<title>探索使用 Golang 和 Webassembly 构建一个多人游戏服务器</title>
<link>https://toutiao.io/k/r1j2iq6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4921793534932221&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZTu3ic4Nr3ia1WjanGs37EiazVWdW1HhxDsXuM6l3w9RFGxPB3t8XLc86NA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;959&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.youtube.com/watch?v=ZyGw1yLNO9E(原创整理)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;什么是 &lt;code&gt;WebAssembly&lt;/code&gt;？由 &lt;code&gt;Google&lt;/code&gt;、&lt;code&gt;Microsoft&lt;/code&gt;、&lt;code&gt;Mozilla&lt;/code&gt;、&lt;code&gt;Apple &lt;/code&gt;等发起的 &lt;code&gt;WebAssembly&lt;/code&gt; 是一种新的字节码格式，主流浏览器都已经支持 &lt;code&gt;WebAssembly&lt;/code&gt;。和 &lt;code&gt;JS&lt;/code&gt; 需要解释执行不同，&lt;code&gt;WebAssembly&lt;/code&gt; 字节码和底层机器码很相似可快速装载运行，因此性能相对于 &lt;code&gt;JS&lt;/code&gt; 解释执行大大提升。&lt;code&gt;WebAssembly&lt;/code&gt; 并不是一门编程语言，而是一份字节码标准，需要用高级编程语言编译出字节码放到 &lt;code&gt;WebAssembly&lt;/code&gt; 虚拟机中才能运行。&lt;/p&gt;&lt;h2&gt;Panzr.io 简介&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;基于开源技术的游戏&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;Web&lt;/code&gt; 作为发行平台&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;轻巧快速&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;探索基本的多人游戏技术&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;扩展 &lt;code&gt;Go&lt;/code&gt; 技术知识&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;Panzr.io 架构&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4198542805100182&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZTB9Wib3ic96jME1A42Hfia647SuUPiaevQmV72Jmicmh3ElMibp0BzWupBqBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1098&quot;/&gt;&lt;/p&gt;&lt;h2&gt;Panzr.io 部署架构&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5006031363088058&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZTgwnHssG6HiapCibPPLNx8dIynS2bhhoPyhkXcXoN8EzTJZCmBIZs3HicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;829&quot;/&gt;&lt;/p&gt;&lt;h2&gt;Triebwerk 简介&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;项目源码：&lt;/p&gt;&lt;p&gt;项目 Status:&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;Triebwerk&lt;/code&gt; 是一个开源的多人游戏服务器&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;Go&lt;/code&gt; 语言编写&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;目前仅是基础原型&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;游戏是如何运行的?&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3023255813953488&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZTuwsJZV5TibPiaJIsH8DHcc6O1qTHuEQxk7pEswVoibiaXMH1ntMaXK9ibDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;860&quot;/&gt;&lt;/p&gt;&lt;h2&gt;服务器权威架构&lt;br/&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;仅通过服务器进行通讯&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;客户端将所有输入发送到服务器&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;服务器有权进行模拟&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;防止作弊并引入延迟&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7677261613691931&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZTF1ZpJQUfvKu8iavvsBwq5eJyjTJt9JFnenCQTIZZ5icp4z92ZMM6VFZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;409&quot;/&gt;&lt;/p&gt;&lt;h2&gt;客户端预测和服务器协调&lt;br/&gt;&lt;/h2&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;最早由 &lt;code&gt;QuakeWorld&lt;/code&gt; 推广&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;本地模拟运动&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不断与服务器状态同步&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;根据服务器状态更正本地状态&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7596899224806202&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZTxfaT1LSyhjQZCEcA19ib6VR5R9RtuwLRYfccGodqfpUBwR8LZdKZbow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;387&quot;/&gt;&lt;/p&gt;&lt;h2&gt;客户端插值&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.9156626506024096&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZTnRrofG5fmrsL8EPgKtey9sia2CDPG7DVPOdmFcyOMtsnowIxibYml9mg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;332&quot;/&gt;&lt;/p&gt;&lt;h2&gt;定义边界&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;限制：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;所有游戏逻辑仅在 &lt;code&gt;2D&lt;/code&gt; 空间中&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;均匀表面&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;仅通过键盘进行输入控制&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;限制地图尺寸&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;缓慢移动的车辆&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;没有物理引擎&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.937007874015748&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZTHxVcXhyF1hSxibgf5oKpicUkl51FuMjuSF97Vx1HZxQMR748iaUm1uqJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;381&quot;/&gt;&lt;/p&gt;&lt;h2&gt;服务器实现&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4236453201970443&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZTTk92ke5PfzwPA1ZU4iaibHh5ibHUH1Pppd7QibI4nkhKrYOAUnnpAlib5gQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;812&quot;/&gt;&lt;/p&gt;&lt;h2&gt;玩家移动&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6788432267884322&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZThTVCS53V0KH1kJJhM7mw6JA49GOqH8VPfXC78ZoREnhZfaLLJicP5Mw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;657&quot;/&gt;&lt;/p&gt;&lt;h2&gt;碰撞检测&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5146137787056367&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZT9zwekuWzop5Yp8iaoibF4mTLIIEqGw4SicIJh3oo4RiaSxuYKQmricZXDzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;958&quot;/&gt;&lt;/p&gt;&lt;h2&gt;二进制数据传输&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.43956043956043955&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hD75vrNauXZEs8Q1F5KB41AsicyH8YEZTH82Pj47zRl5PznY5DTq1jjgwPJ0BU2h5tCXd7aokoqEUyT3fjOJc7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;910&quot;/&gt;&lt;/p&gt;&lt;h2&gt;WebAssembly 模块&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;游戏逻辑(&lt;code&gt;Game logic&lt;/code&gt;)&lt;/span&gt;：&lt;code&gt;Server&lt;/code&gt; -&amp;gt; &lt;code&gt;Client&lt;/code&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;文件大小 &amp;gt; 2MB&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;服务器和客户端根据相同的逻辑计算状态&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;通过二进制类型进行数据传输&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;编译：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;GOOS=js GOARCH=wasm go build -o tanks.wasm cmd/wasm/tanks.go&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Client：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt; &lt;span&gt;src&lt;/span&gt;=&lt;span&gt;&quot;/game/wass_exec.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; go = &lt;span&gt;new&lt;/span&gt; Go();&lt;br/&gt;WebAssembly.instantiateStreaming(featch(&lt;span&gt;&quot;/game/tanks.wass&quot;&lt;/span&gt;), go.importObject).then(&lt;span&gt;&lt;span&gt;result&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    go.run(result.instance);&lt;br/&gt;});&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Server：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;js.Global().Set(&lt;span&gt;&quot;updateNetworkPlayer&quot;&lt;/span&gt;, js.FuncOf(updateNetworkPlayer))&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;在 Go 中编码 state&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;posX := &lt;span&gt;float32&lt;/span&gt;(&lt;span&gt;30.457777&lt;/span&gt;)&lt;br/&gt;posY := &lt;span&gt;float32&lt;/span&gt;(&lt;span&gt;10.336666&lt;/span&gt;)&lt;br/&gt;buf := &lt;span&gt;make&lt;/span&gt;([]&lt;span&gt;byte&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;binary.LittleEndian.PutUint32(buf[&lt;span&gt;0&lt;/span&gt;:], math.Float32bits(posX))&lt;br/&gt;binary.LittleEndian.PutUint32(buf[&lt;span&gt;4&lt;/span&gt;:], math.Float32bits(posY))&lt;br/&gt;&lt;br/&gt;&lt;span&gt;var&lt;/span&gt; uint8Array = js.Global().Get(&lt;span&gt;&quot;Uint8Array&quot;&lt;/span&gt;)&lt;br/&gt;dst := uint8Array.New(&lt;span&gt;len&lt;/span&gt;(buf))&lt;br/&gt;js.CopyBytesToJS(dst, buf)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;在 Javascript 中解码 state&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;let&lt;/span&gt; dv = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;DataView&lt;/span&gt;(state.buffer)&lt;br/&gt;&lt;span&gt;let&lt;/span&gt; posX = dv.getFloat32(&lt;span&gt;0&lt;/span&gt;, &lt;span&gt;true&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;let&lt;/span&gt; posY = dv.getFloat32(&lt;span&gt;4&lt;/span&gt;, &lt;span&gt;true&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;在线试玩&lt;/h2&gt;&lt;p&gt;http://panzr.io&lt;/p&gt;&lt;h2&gt;Refs&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4MjQ0MTU4Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/z9BgVMEm7YtTw2oONBkwaiaM9hBxUj6yRLDEw8rSSxR8wWZFLjjXWpmGq5LNDlEAn4v9lSALDiaGfC4MyPZwL95g/0?wx_fmt=png&quot; data-nickname=&quot;k8s技术圈&quot; data-alias=&quot;kube100&quot; data-signature=&quot;专注容器、专注 kubernetes 技术......&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c0c26eab1f649c1b5a6006253e9851f5</guid>
<title>我，管理 100 多人技术团队的二三事</title>
<link>https://toutiao.io/k/moooo7c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我负责的技术团队，现在有 100 人出头。团队里包括了：前端、后端、测试、运维&amp;amp;DBA、还有几个客户端和 AI 工程师。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;曾经团队有 150 多人，后来公司裁了一些人，最近金三银四跳槽旺季又走了一些人，还剩 100 多点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我下面分了 7 个组，每个组都有一名组长，组长们汇报给我。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;100 多人的技术团队，我是怎么带的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我带团队是从 3、 5 个人、十几个人、几十个人团队一点点锻炼出来的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自我评价，我觉得我管理的团队说不上有多好，但是感觉不错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;团队气氛挺融洽，大家也比较稳定，尤其是核心同事离职率很低。用他们的话来说：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&quot;跟着我干，钱虽然一般，但干得比较爽。”&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是实话，我们公司的工资和大厂比不了，同事里有些人技术很强，以他们的能力去大厂没问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我管理团队的方式，主要自己一点点总结出来的，可以说是野路子吧。虽然以前看过书，也参加过培训，但是我觉得生搬硬套没啥意义。今天也不想和大家讲那些关于管理的大道理，就是列举一些小事，想到哪写到哪。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;1.&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一条，也是最重要的一条就是：&lt;strong&gt;责权利下放给组长&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我对组长们都特别信任，他们的工作我基本不干预，更不会指手画脚。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;组长们工作年头也都不短了，都有各自的优点，我没觉得我比他们厉害多少，能不管的事我就不管。尺有所短寸有所长。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，每个人都有每个人的管理风格对吧，没必要把我的风格强加给组长们。放手让组长们按照自己的方式去做事。事情能做成就好，和过程相比，我更关注结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;毕竟条条大路通罗马。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在我们团队，大部分工作排期是组长排；组员的月绩效、年绩效也是组长评；组员的加薪，也是他们来定。他们定完了，我基本不再调整，毕竟组长对组员更了解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有技术招聘，组长们负责前几轮面试，面试意见基本都是他们定，他们来决定人选是否合适。我负责最后一轮面试，主要是替他们把把关。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;因为信任，所以简单。&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;2.&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;责权利的下放，并不代表我就是一个甩手掌柜。这话怎么说呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重要的事情还是由我来负责的，我会和组长们一起完成，比如重大的版本升级、技术框架更新、项目的重构、故障监控和复盘……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我还会帮组长们去做一些偏外围的工作，比如我经常会问组长们有没有困难、有没有诉求。这样我在和老板、其他部门沟通的时候，能帮大家表达出去，尽量帮大家争取。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就像最近组长们反映，最好能给同事们涨涨薪，否则人员流失风险比较大，我需要做的就是和老板、HR 沟通，帮大家争取加薪的机会。这件事我在朋友圈提过。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0416666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6nbNnibOq5KTUI78WibAcMbmicmq8gzWib0weYlN6mmnFflLf9lt6YXHlLHVRPTdxc5d1riaZmue9MSQaISQUdzhRgQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;408&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再比如，年初的时候公司定 KPI，我亲自牵头来定 KPI。定完之后我会和大家一起商量，把 KPI 分解到各个组，这样大家的工作既不会跑偏，又给他们留了空间去施展。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;3.&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;责权利下放的基础是对大家的信任，信任的前提是我必须要了解大家。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么来了解你的同事呢？说一个我之前的例子。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们部门曾经合并了一个十几个人的团队，我干的第一件事就是把那十几个人的情况先拉了一个表，包括了他们的姓名、学历、工龄、司龄、过去的绩效、晋升情况、技术特长、工资……这样，我对每个人的情况就能心里有数了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后面工作中我再主动和他们多沟通，多了解，了解的更多更全面，才能挑出那些渴望成长、渴望承担的靠谱同事。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;4.&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“了解你的同事”，这句话说起来容易，但是想做好也没那么容易。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们团队现在 100 多个人，我现在能叫出每个同事的名字。并不是因为我们认识时间有多长，即使新认识的，我也会特意的去记同事的名字。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实吧，记 100 多个名字也是挺费劲的，记住名字还得对的上人，省的把张三叫成李四。最开始真是特意花时间去背名字，对照着工位图去背。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么要记大家的名字呢？再说个我的经历。之前一个领导，比我高两级，我和他平时也没啥交集。一次偶然的机会他叫出来我的名字，我当时的感觉就是“领导居然知道我的名字？”，感觉非常好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为管理者，你和同事无论是平时碰面还是工作中交流，能喊出来他们的名字，他们会觉得你很亲切。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，我始终认为，大家共事一场，能聚在一起是一种缘分，希望大家能成为朋友，比同事的关系能更深一些。程序员的圈子说小不小，说大也不大，将来指不定谁能帮谁一把，也没准还能一起再成为同事。多一个朋友，将来的路就好走一些。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;5.&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说说上线吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们这里上线都是在晚上挺晚的时候操作。团队大，项目多，几乎每周二、四都有项目要上线。按道理来说，上线有组长和同事在就可以，不需要我在公司。但实际上我都会陪着大家上线。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上线的时候，我也不去掺和，只是默默的陪着。我陪着上线的目的就是，万一上线后出现问题，需要在短时间内做决策的时候我不能不在场。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如出现问题之后，是直接排查解决问题？还是回滚？需要我来决策。和大家一起在公司现场，我得到的信息能更全面、更及时，能迅速做决策。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外就是我陪大家，大家会觉得有主心骨，大家心里会踏实不少。上线出现问题，不管是多严重的问题，我心里再着急，也不会表现出来，别人看我都是很镇定的样子。因为我如果慌了，大家都会跟着乱，在慌乱的情况下，可能就会做出错误的决定。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;6.&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我和底下同事关系比较近，也是因为我对同事几乎没发过火，一年到头也没和同事拍桌子瞪眼的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多年前我看过一个电影，任达华演一个帮派老大，别人评价任达华演老大的时候，有一股劲——&lt;strong&gt;不怒而威。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我当时对“不怒而威”这四个字印象特别深刻，感觉特别酷。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我希望自己也能做到不怒而威，自己的威严不用靠着发火动怒才能体现出来。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;7.&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我平时在团队里也没有什么架子，办公就和大家都坐在大开间里。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我在团队里，和大家说的第一个规矩就是，别对我称呼“您”，直接说“你”；别叫我“领导”，“x 总”，喊我名字就行了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;都是同事，都是兄弟，没必要摆出一副高高在上的样子。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;8.&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你想让同事把你当朋友，必须你先主动和大家拉近距离，你自己要先坦诚一点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我和团队里的核心同事说过：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果你有了跳槽的念头，希望你能在离职之前两三个月告诉我，你越早告诉我越好。&lt;/p&gt;&lt;p&gt;一方面是我希望挽留住你，有什么不满的，咱们想法去改善。不管是因为工资、压力、还是因为其它。合理的要求，能解决的咱们尽力解决。毕竟你是核心同事了，我肯定不希望你走。你早点告诉我，在你跳槽念头还没那么强的时候，我努努力，还有希望把你留下。&lt;/p&gt;&lt;p&gt;如果你坚持要走，实在留不住，你早告诉我，给我多留点时间安排人手去交接工作。虽然都说对核心同事要有备岗，但是这个说法太理想了，实际中不可能每一个核心同事随时都有备岗。&lt;/p&gt;&lt;p&gt;就算有备岗，短时间想完全接手工作也很不容易。你早告诉我，咱们早交接，我保证不会给你们设置障碍。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;起初大家听了半信半疑，离职也没提前告诉我。后来时间久了，大家知道我不是那种言行不一的人，告诉我之后不但不会为难他们，甚至有合适的机会，我还帮他们内推。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;9.&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;去年我在视频号上说过一个事情。我们一个系统出了一次生产故障，影响到用户使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事后找原因，是我们 DBA 失误操作造成的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这次故障要扣绩效工资，当时我自己把责任全扛下来了，只扣了我个人的钱。哎，扣了我不少钱，当时挺心疼的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实可以同时扣我和 DBA 的绩效，这样还能少扣点我的钱。不过考虑到 DBA 平日表现挺好，因为任务比较重，一时疏忽出错了，所以就免了他们的责任。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对待下属犯错，要适当包容，谁成长过程中不犯错呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，管理者对外的时候应该保护下属，要有点护犊子的劲儿。所以上报事故的时候，锅我来背了，毕竟我更抗压一些。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然对外我扛责任，但是在内部，还是要关起门来批评 DBA，需要让他们吸取这次教训，避免重复出错。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;10.&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第 10 条，凑个整。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总之吧，就像我&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU3MTg3NDYwNg==&amp;amp;mid=2247485172&amp;amp;idx=1&amp;amp;sn=7cd1bc6dc224969d8e5f8449ba480e64&amp;amp;chksm=fcd8cab5cbaf43a3f362b3a5f4fbeb8f201fb23399deb0344dcfd23278d63bd2ad8c915058c3&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;之前文章&lt;/a&gt;写的：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;不管是做项目，还是带团队，争取让所有涉众都满意。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我尽量让我身边的领导、老板、组长、同事都满意吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是我带团队的方法，真的没什么大道理和套路，我就是用心去对待大家。日久见人心，时间久了大家肯定能感受到你是不是真心、是不是真诚。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;你真心待人，别人也会真心待你。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我特别反感有些人把团队当做是自己升职加薪的工具。那些人经常给团队灌鸡汤，画大饼，让大家加班加点多干活，然后干出成绩来自己升职加薪。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我觉得管理者不能只会使用权力，要注重提高自己的领导力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;PS. 我最近又在复习《亮剑》，每次看都有不同的感悟，回头可以写一篇。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;PPS. 微服务架构模式的文章，快写好了。如果再鸽，你们让二营长用意大利炮轰我。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;PPPS. 这篇文章写到凌晨 3 点，今天午休又写了 1 小时，希望得到你的三连支持。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;你好，我是四猿外。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;一家上市公司的技术总监，管理的技术团队一百余人。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我从一名非计算机专业的毕业生，转行到程序员，一路打拼，一路成长。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我会通过公众号，&lt;br/&gt;把自己的成长故事写成文章，&lt;br/&gt;把枯燥的技术文章写成故事。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我建了一个读者交流群，里面大部分是程序员，一起聊技术、工作、八卦。欢迎加我微信，拉你入群。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.9852216748768473&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/6nbNnibOq5KQibCDibpTo0kqofPehQvDDibibcb3bQUELdY3Knsl4r0RcgsV9l4icr3icmZQfaBXtSFNTxmdQlAZT1OQg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;609&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>