<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>e88ba81ec27af1938d9d5d817117fd4f</guid>
<title>黑科技：基于 Arduino 和 Zabbix 实现温湿度监控告警</title>
<link>https://toutiao.io/k/6h32ko4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;公司有间办公室，里面放了一些网络设备和服务器，当做机房用。由于没有环控系统，所以想到用&lt;/span&gt;&lt;span&gt;arduino做个简单环境监控，把温度和湿度监控起来。避免空调故障或者湿度大造成硬件损坏。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;01 工作原理&lt;/span&gt;&lt;/strong&gt;&lt;strong/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;320&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5542916235780765&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jmj2LkhPUr5umc3iab3LChiavZmpGZiblGeTUSUyoAEnPFUKHq2PzzTIKASe5S8sEp7IKWKUJV9B4tRR522VgfjBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;967&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;02 准备材料&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;选择以Arduino主板为基础，搭配温湿传感器，最后通过zabbix_sender将值发送到Zabbix Server，通过Zabbix进行存储、分析、告警，Grafana作为可视化展示。在开始之前需要准备一下材料：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;arduino uno主板 *1&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;arduino uno w5100 网络组件 *1&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;DHT11传感器*1&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Arduino-sender的代码，下载地址：https://gitee.com/ltslts/zabbix-trapper-arduino&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Arduino IDE编译软件，下载地址：https://www.arduino.cc/&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;03 Ardunio配置&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;代码编译&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;Arduino使用的c代码编程，在上面的地址下载以后，使用官方提供的IDE打开，在Windows平台编译。编译完成以后，arduino通过usb连接到pc，设置好串口号，就可以把代码烧写到arduino中。下图把代码中需要修改的地方做了标注：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.8533653846153846&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jmj2LkhPUr5umc3iab3LChiavZmpGZiblGehiaIVfJrWOtviabhkf5jJ0kicoLOMrc99ceLFWRCBZad5933OJqTJpSvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;硬件连接&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7139423076923077&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jmj2LkhPUr5umc3iab3LChiavZmpGZiblGeMrFX6LicLiaGJuAdibAo2TYMNTfbHqhmdib8zdKm9giclzSgOneI8T8icMlA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;调试验证&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;在IDE界面，点击这里，打开调试信息界面：&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.8988095238095238&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jmj2LkhPUr5umc3iab3LChiavZmpGZiblGe1S6xEodJ6ofp2RSPusu2eGxSn96bPtvVqGsRzFLb22q19k6YKbeFOw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;672&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;将Arduino接上网线，Arduino会自动DHCP获取到ip，当看到调试框中有获取到的这些信息的时候，说明arduino设置完成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5096153846153846&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jmj2LkhPUr5umc3iab3LChiavZmpGZiblGefF5FyLwVgkPBWquncdmeHqC4kPicmnmcQ2p1fbSEdhicRbsPTXhvV2zg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;04 Zabbix配置&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;添加主机&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6274038461538461&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jmj2LkhPUr5umc3iab3LChiavZmpGZiblGend5HzRNPKyicNBFN0ibAvvkDHDXWHAcvrYatXftOWlAwddjia6Wl8bheA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;添加监控项&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5841346153846154&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jmj2LkhPUr5umc3iab3LChiavZmpGZiblGeFgyv2swfchtKBibibUoRZNMPCY70nNq1lib3eRCUQIrg3cOl291bFo26w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;验证&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.31490384615384615&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jmj2LkhPUr5umc3iab3LChiavZmpGZiblGe6NEnEUtmuUOKul4h7MHIgrMM9ojZ7diaaXIicSppkVKZL5z2S49LpaXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考文档：&lt;/span&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;https://realpython.com/arduino-python/&lt;br/&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;https://gitee.com/ltslts/zabbix-trapper-arduino/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://zhuanlan.zhihu.com/p/64861157&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzAwODcyODA2MA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Jmj2LkhPUr74bSCwnIbZROibltk7KeiaibJiaZzicVibwNF9EcTicGE4GAic8ES21IynaiabncsXVXtsXptPrP6AI6h7Mgg/0?wx_fmt=png&quot; data-nickname=&quot;云栈技术CSTC&quot; data-alias=&quot;cloudstackcommunity&quot; data-signature=&quot;CSTC云栈社区——关注行业动态，聚焦技术突破，最爱程序媛！&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;93040&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;85956&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;长按二维码加群一起聊聊~&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jmj2LkhPUr6LEqwB0nz4zXsZylfgHu8HFCkDiaKELp0uoGcQCA69Q1OvviaQTppkRSXHELND6j2MBdCW5pGD5Gicg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;93040&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;85956&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;长按二维码关注公众号&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5555555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/Jmj2LkhPUr6h3CrSreKn5SViatk7B0AL5liayVdRYmSxBdcfYd82p9BSK5DIKfJoTeyA8lE0hoOIibn3Hd1YFcGXQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;900&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;*本公众号所发布内容仅代表作者观点，不代表社区立场&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1e309fddf72a2420cb8fdcc7e065d791</guid>
<title>[推荐] Java 工程师核心书单，阿里大佬看了都说好</title>
<link>https://toutiao.io/k/5apgnxp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随便打开一个招聘网站，看看对&lt;code&gt;高级&lt;/code&gt;Java工程师的技能要求。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6134185303514377&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TMNgQF79EFUQ4uOzoRrScbMhj7Rib0VcvIozOXkjOHc8ibmFayqVb9L7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1252&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210312224908529&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;抛开其它的经验能力等等，单纯从技术，或者说知识上来讲，可以发现一些共通的地方。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Java基础&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;计算机基础&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据库，SQL/NoSQL&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;常用开源框架&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分布式/微服务&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;中间件，缓存、消息中间件&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;书籍是获取知识的最好来源之一。技术书籍浩如烟海，市场上有不少《XXX入门到精通》，《XXX王者归来》，《21天学会XXX》这样的书，当然也有不少经典，个人的精力有限，这些经典不可能都通读。所以·，博主尝试整理一个Java工程师所需知识的核心书单，尽可能优中选优，挑选出Java工程师必备知识的一些最核心、最经典的书籍，希望能一起学习，一起进步。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.35772357723577236&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06T8RNbI29zb8CX5lPLbCj422UpqGeibFSiakwLDLKB8sIibX3OPUMjo5mFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2460&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;Java工程师核心书单&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Java基础&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《Java核心技术》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;不用多说，Java领域最有影响力和价值的著作之一。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;img data-ratio=&quot;0.46947935368043087&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TcdHttOtZwIricEdvh6N9B7qVzCGVticfjnqQtIicsx150QOiaQzWXibA8ibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1114&quot;/&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《Java编程思想》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这个也不用多介绍了吧，永恒的经典。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.44858962693357596&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06Tt9SVnnHYQicTbTicMWicfWCIMS4Wd8zESMFokicw47jTNYtkWuiaOdibPluw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1099&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210312230527362&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面两部经典，白璧微瑕的大概就是翻译了，技术译著难免会有些词不达意的地方，英语阅读能力过关的话可以看英文原作。国内的《疯狂Java讲义》也尚可。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Java进阶&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;并发&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《Java并发编程的艺术》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;博主觉得不错，但豆瓣评分没有想象的高，可能是三人合作，导致内容有些不连贯。国内作者写的Java并发书籍，比较简单易懂，广为流传的Java线程状态变化图就出自本书。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4081447963800905&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TYRmL2icWICF2q2UE2bE6JqEhpCEbgvA44MSsokFfBZ2Sma6Rx8sf9pg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1105&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210312231235842&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有一本《Java并发编程实战》，Java并发工具包主要作者之一的著作，但是翻译的锅，能看原版的建议看原版。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JUC相关最好的资料还是看源码，Doug Lea把他的One Peace都藏在了那里。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;JVM&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《深入理解Java虚拟机》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;JVM，这一本就够了。有个博主写过：”你看到一篇JVM的文章，如果文章的最后没有写参考这本书，那一定是作者的版权意识不够。“&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.37267657992565056&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TkicUK9icDDuKn8CO2KWTHTzc2oexujY81OAbtmuADw1oITQOHxibdR9pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1076&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210312232210708&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;程序优化&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;**《**Effective Java》&lt;/p&gt;&lt;p&gt;和《Java编程思想》一样被称为神书，介绍了如何写健壮，高效的代码，当然阅读需要有一定的开发经验。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.40342960288808666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TaRrDJXIyfbWzzNicqxF1ZECdiaMyqPXgkpcKu9bXzxM4lgnJxHPKxxWg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1108&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210312232551147&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;框架&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Spirng&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《Spring实战》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Spring入门经典书籍。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.38859180035650626&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TgkuR4Nha1v3XBuHrguQjjZfXfibXibL6RKrgtOHxUwoQZWWXxjvGWAfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1122&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210312233144920&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《Spring揭秘》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;书比较老，但是概念和原理很清晰，看完之后，再看Spring5的源码也很不错。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.36046511627906974&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TSvmrRgib0Uictl5XRj9zcoU5Y9q48TMddQTZgXsMnXBKcIq9MYOGFqZg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1118&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210313233353617&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;SpringBoot&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《深入浅出Spring Boot 2.x》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;博主看过不少SpringBoot的书籍，个人感觉这本还不错，比较详细、全面。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.3765880217785844&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TqsAUCa7J9v83VLMyZv1t5ByTjJF1uHKicEzIaCYtH3Aff5HFqcxqkTA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1102&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210312234333809&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;MyBatis&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MyBatis官方文档已经做得足够好了，基本的使用查看官网就够了。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《MyBatis技术内幕》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;MyBatis源码解析的书不多，推荐这本，结合源码阅读更佳。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.3559011893870082&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06T7w5mFq9sBnGNV5VBFxqzwMgzFzicRfnlIKFgE9VuXSk7VgibvxSvu4uA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1093&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210312234955597&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;计算机基础&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;数据结构与算法&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;四大基础课中对Java工程师最重要的应该是《数据结构》，数据结构和算法一般不分家，所以放在一起。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《数据结构与算法分析》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;国外数据结构与算法分析方面的经典教材，内容全面、缜密严格。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.41&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TTic6dU4yE2Cd9jZicMRNQDAYx8bLLJu2vN7qHia6x8EmwGrjXKKvtib01g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1100&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210313234343375&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实想推荐一本教材——严蔚敏老师的《数据结构》，但是这本书是C语言版的，代码实现也不是很多，所以看起来可能比较吃力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有另外一本《算法导论》，不多说了😂&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;计算机网络&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《计算机网络》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;还是忍不住推荐一本教材，比较全面、系统，但对非科班选手可能不友好。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.37864963503649635&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TViafW06XjLYnIxwxAUfN3AG9c5MIw1Qy2SuHx0zAB3Yiaia9icZWECTiaLA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1096&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210313235134976&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《图解HTTP》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这本不用多介绍了吧，很生动的讲解HTTP协议的书籍，阅读起来比较友好。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4393939393939394&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06Tiazr7ZfXagEsyTxSXyDc6sPzU2aibs2vMdHTNzbE5avrCM5CiceMo0zjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1122&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210313235607942&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;操作系统&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《深入理解计算机系统》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;评价非常不错的计算机操作系统书籍，但是这种黑皮书可能啃起来有些困难。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4584450402144772&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06T94FPlqyOjCuxBum7HkO4T6oKN94lubicvIxV1ibpHicGIxztjwqplHfow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1119&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210314000337590&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里带过了四大基础中的《计算机组成原理》，相比较一些比如嵌入式之类比较底层的开发而言，计组对Java开发可能没那么重要。当然，只是相对而言，理解一些编码、运算、指令、IO之类的还是对了解底层很有帮助的。作者学的时候用的唐朔飞编著的《计算机组成原理》教材。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;数据库&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;MySQL&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《SQL必知必会》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;非常受欢迎的MySQL入门书籍，也可以当作工具书来用。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.4779693486590038&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TPhibBnZnEUYHSy4tFWkSPU7Qu0qBF7hI0QnqLdW2hfRyPRI3yzIVxXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1044&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210314001054175&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《高性能MySQL》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;MySQL领域的经典著作，进阶必看。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.42924976258309594&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TibjPx9tulomNfZwhSr4Fkz9BEI0OWqTFH5vU3uoiaKJUDGEibCrwq2zug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1053&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210314001247302&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Redis&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《Redis 开发与运维》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;从开发、运维两个角度总结了 Redis 实战经验，深入浅出地剖析底层实现，包含大规模集群开发与运维的实际案例。一些api的介绍也是以Java为主。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.31449407474931634&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06Ticdoor8TUmsmiaEjFjdH8TdOlyDDIHJibGIdfGUySEodCeMcCmIej2KXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1097&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210314001802080&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《Redis设计与实现》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Redis进阶经典书籍。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.39072847682119205&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TJ0kiakUiaWxhImTDriaX5Ur8xOjYHu9GEVoQSRm9RRMWaRDrJTfCoqWsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1057&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210314002020749&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于另一个流行的NoSQL MongoDB，考虑到应用场景没有上面两个广泛，所以没有列出，博主看过的《MongoDB实战》，觉得还可以。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;分布式/微服务&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《SpringCloud微服务实战》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;还不错的SpringCloud书籍吧。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.36464088397790057&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TiaEiahSc0NTTA8tKxpEwK0NOic7YpxM7bygJEQKyUagdia23zToZZNsh7g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1086&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210314003614238&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《Spring Cloud Alibaba 微服务原理与实战》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Netflex的一些组件进入了维护的状态，Spring Cloud Alibaba在最近流行了起来（技术的变迁真的太快），这方面的书不多，这本是相对而言推荐的多一些的。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.35526315789473684&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TWVibSQzBgZmibAFMRY7GDRspyuDtssoQHVZHmCgWF15Hz9CEia2fteBTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1064&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210314004029151&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经常被拿来和SpringCloud比较的另一个开源分布式框架，官方文档大概就已经足够了吧。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;消息中间件&lt;/span&gt;&lt;span/&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;流行的三大消息中间件，各挑出一本吧。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《RabbitMQ实战指南》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;简单清晰的RabbitMQ技术书籍。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.37283236994219654&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06T1Yq2zYPrByGbYoWjZB2JwuYCRiaU9e5ib5icG1XfwRyLvL6RtoR9pPyqA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1038&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210314004537483&lt;/figcaption&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《Kafka权威指南》」&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Kafka的好书还是不少的，这里推荐评分比较高的Kafka权威指南。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.4010791366906475&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TjfkzNicOQyY84gn88cGJtIjDWicFVhqKG4qlMdLLsfD03s0iaxxsibUCyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1112&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210314004938755&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;「《RocketMQ实战与原理解析》」&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RocketMQ的书籍不多，这本书入门尚可，原理解析有些单薄了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3509259259259259&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWdDbsC9pR37wzQvbXFYn06TPOM9mArLoBAQz2N8zBbpSDgY6hByxfeZFibShgWUiczdh9teia6XLicQew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;image-20210314010757174&lt;/figcaption&gt;&lt;/figure&gt;&lt;br data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了以上列出的主要一些主要分类，这里再补充一些。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;容器推荐《Docker从入门到事件》《Kubernetes 权威指南》；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Maven推荐《Maven实战》;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Git推荐《ProGit》;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Linux自然是《鸟哥的Linux私房菜》；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Elasticsearch推荐《Elasticsearch实战》；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设计模式推荐《设计模式之禅》。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，主要的推荐就到这里，由于博主的技术视野有限，而且尽可能地压缩书单（学不动了😂），所以有些推荐未必十分合理，一些经典书籍也未列出，有不同意见或者补充，欢迎指出。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWdDbsC9pR37wzQvbXFYn06Tw4J1lppqbZ8WrASsLaHGZgTUATo6gicmG911jdjYyrAsWvyicAicOfWWw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;300&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;学习&lt;/figcaption&gt;&lt;/figure&gt;&lt;br data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;big&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/big&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;【1】：有什么值得推荐的Java书籍？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;【2】：2020 Java 后端工程师的书单推荐 | 芋道源码 —— 纯源码解析博客&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;往期精选：&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247485217&amp;amp;idx=1&amp;amp;sn=edf977560548ce90789f5497af841ab4&amp;amp;chksm=c0ccef84f7bb669275fc35d998d90ee77038115f3cb606ae7470941c96fcd373945289ab7cfe&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;面试官问：“在项目中用过多线程吗？”你就把这个案例讲给他听！&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247484838&amp;amp;idx=1&amp;amp;sn=01306c236ab7dc1bd744f07c2eb3ef69&amp;amp;chksm=c0cced03f7bb6415d36b294d7d3db382fad79e04be56c9424645547c16756f63c82f31a3d270&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;这些不可不知的JVM知识，我都用思维导图整理好了&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247485058&amp;amp;idx=1&amp;amp;sn=7e4273c31e97f2be4ec25c2c16577488&amp;amp;chksm=c0ccee27f7bb6731a9b749c2a8658541461b1054dafe057f5d1eec06f2738eeb963ec8abbea1&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;MySQL索引从基础到原理，看这一篇就够了&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5f4577749eb9cd030f93510c34d85605</guid>
<title>[推荐] 去哪里找 Java 练手项目？</title>
<link>https://toutiao.io/k/qh7wgrx</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经常有读者在微信上问我：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;在学编程的过程中，看了不少书、视频课程，但是看完、听完之后感觉还是不会编程，想找一些项目来练手，但是不知道去哪儿找？&lt;/p&gt;&lt;span&gt;”&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;类似的问题，有不少读者问，估计是大部分人的困惑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;练手项目那肯定是去github找啊！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前我在知乎上回答过这种问题，分享了一些 github 的项目，点赞还不错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，这次我又重新整理了一下，分享出来。以下项目排名不分先后：&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. litemall&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/linlinjava/litemall&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Star: 15.5k&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4548736462093863&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6nbNnibOq5KQwnwl8n7TK6SC11N8POictyXXwA28fMfCn02yrn5w04j8e5qwO7pTT6HIvyqg038E2ly8H08ODwAg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个小商城系统。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;litemall = Spring Boot后端 + Vue管理员前端 + 微信小程序用户前端 + Vue用户移动端&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;技术栈：Spring Boot、VUE、微信小程序&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. Head-First-Design-Patterns&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/bethrobson/Head-First-Design-Patterns&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Star: 2.2k&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;《Head First Design Patterns》书籍的示例代码，与2014年7月发布的书籍对应，你可以载代码并从命令行编译并运行，或者将代码加载到 Eclipse 中的项目中。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3. Mall&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/macrozheng/mall&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Star: 47k&lt;/p&gt;&lt;img data-ratio=&quot;0.5554733727810651&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6nbNnibOq5KQwnwl8n7TK6SC11N8POictyFS2PCViadFdb5n19lcJibmg2caTQXC7caSEXEfjpZrCGFfdzOZnZQibhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1352&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mall致力于打造一个完整的电商系统，采用现阶段流行技术实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mall包括前台商城系统及后台管理系统，基于SpringBoot+MyBatis实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前台商城系统包含首页门户、商品推荐、商品搜索、商品展示、购物车、订单流程、会员中心、客户服务、帮助中心等模块。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后台管理系统包含商品管理、订单管理、会员管理、促销管理、运营管理、内容管理、统计报表、财务管理、权限管理、设置等模块。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4. miaosha&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/qiurunze123/miaosha&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Star: 19.3k&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4259927797833935&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6nbNnibOq5KQwnwl8n7TK6SC11N8POictyp4uficecIYCRbt5hbEias3WqzzMHGPNAib4gDK95OWv0yibq4kjic9D0QBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;554&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;miaosha = 秒杀，秒杀系统设计与实现&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目是对高并发大流量如何进行秒杀架构，而做的一个系统整理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一点小建议：如果你完全没接触过 MQ、SpringBoot、Redis、Dubbo、ZK 、Maven、lua等，建议你可以先在网上搜一下每一块知识的快速入门，也可以下载本项目边做边学习。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5. vhr&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/lenve/vhr&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Star: 20.5k&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4885439763488544&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6nbNnibOq5KQwnwl8n7TK6SC11N8POictydGq7OhdGibCGh51Vgc0wAnwqicbKn4gy6Ou6ABu5JSOoViaBJYHnYtjXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1353&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;微人事是一个前后端分离的人力资源管理系统，项目采用SpringBoot+Vue开发，项目加入常见的企业级应用所涉及到的技术点，例如 Redis、RabbitMQ 等。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6. spring-boot-demo&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/xkcoding/spring-boot-demo&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Star: 20.8k&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;spring boot demo 是一个用来深度学习并实战 spring boot 的项目，目前总共包含65个集成demo，已经完成53个。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个项目已成功集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、Mybatis、redis、zookeeper、RabbitMQ、Kafka等。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7. eladmin&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/elunez/eladmin&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Star: 14.6k&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个基于 Spring Boot、Jpa、Spring Security、redis、Vue 的前后端分离的后台管理系统。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目采用分模块开发方式，权限控制采用 RBAC，支持数据字典与数据权限管理，支持一键生成前后端代码，支持动态路由。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统功能：用户管理、角色管理、菜单管理、部门管理、岗位管理、SQL监控、定时任务、邮件工具、七牛云存储、支付宝支付、服务监控、运维管理等&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;8. 99-problems&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/shekhargulati/99-problems&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Star: 3.3k&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;光看名字就能对其功能了解一二，它的作用是帮助大家磨练逻辑编程中的具体技能。大家可以选择利用Java 8、Scala 或者 Haskell 进行问题解决，并最终找到最精致的解决办法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果大家喜爱解题，其中还提供多种不同层级的难度供各位选择。另外，如果大家将全部 99 道难题解决掉，则可进一步冲击Java Deathmatch。如果大家被难住了，请点击此处查看难题——但请注意，认真思考之后再参阅比较好。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;9. Dex&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://github.com/PatMartin/Dex&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Star: 1.2k&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果大家希望通过酷炫的方式进行数据交互，那么 Dex 绝对不容错过。它能够帮助我们提取、转换及可视化数据，同时附带预测功能。大家可以将可视化结果发布为 3D 或者其它 HTML 变量形式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Dex 允许我们生成超过 50 种不同的可视化模式，其中包括世界地图、时间表、网络可视化等。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6724565756823822&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6nbNnibOq5KQwnwl8n7TK6SC11N8POictyApK1P7olWCOmiauKMtHDMbvrIR1Hqde9DksMrfnXYiappzE7IeumUvPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;806&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9456635318704284&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6nbNnibOq5KQwnwl8n7TK6SC11N8POictyNrqAkLoD30bzcNedPRXAzly0LKONsrnga0wFc2VMZpooo3pic7XXXBQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;957&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7796373779637378&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6nbNnibOq5KQwnwl8n7TK6SC11N8POictyt4QIv1NlUeRckPefmHaqnHcM0KY44wicdSrvesP6h7iaicG8TfBJDKExA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;717&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家也可以利用 R 与其运行实例相结合，从而构建起复杂的统计分析与预测分析体系。&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就先分享这么多吧，还是那句话：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;学编程、学 Java，一定要多练手。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了练手之外，找到圈子也很重要。我建了一个群，里面大部分是程序员，一起聊技术、工作、八卦。欢迎加我微信，拉你入群。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9852216748768473&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/6nbNnibOq5KQibCDibpTo0kqofPehQvDDibibcb3bQUELdY3Knsl4r0RcgsV9l4icr3icmZQfaBXtSFNTxmdQlAZT1OQg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;609&quot;/&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>66d23ff5dc9c906f152d4bc2846130db</guid>
<title>[推荐] 这几款 JVM 故障诊断处理工具你还不会？</title>
<link>https://toutiao.io/k/dux0ogl</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前几天中午正在和同事最近聊股市较好，这几天每天都可以喝点肉汤，心里还是挺高兴的；正在这个时候收到了线上告警邮件和运维同学的消息，“你们有服务挂了！”，心里一紧，立马打开电脑看来下线上cat监控大盘，发现很多服务都在报错，根据cat上的监控日志很快发现了其中一个服务内存溢出导致其他调用服务也有问题，竟然已经定位到了出问题的服务，那就简单了，没有是重启解决不了的问题，重启之后很快服务都恢复正常了。几分钟之后又报错了，同样也是这个服务内存溢出，经过排查后发现该服务的堆内存被改小了，好家伙，运维同学不讲武德，搞偷袭，趁我没反应过来调了内存，内存调整回去之后服务就恢复了正常。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事后把线上的快照文件拖了下来分析，发现本身这个项目的代码也有些问题，本文就整理了一下JVM常用的分析工具。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;命令行工具&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在安装完JDK之后在JAVA_HOME/bin目录下JDK已经提供了很多命令行的工具&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.06375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3L6TRz9Y0UdvzxE2DGJosqxbc4qu9pJCWZejq6WtqCssK83AEK3UMrw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可能我们最常用的就是&lt;code&gt;java&lt;/code&gt;、&lt;code&gt;javac&lt;/code&gt;这两个命令，除了这两个命令之外还有提供很多其他的实用工具，本文主要来一起学习对JVM监控诊断工具&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;虚拟机进程状况工具（jps）&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该工具的功能比较单一，与linux中的ps功能类似，用来列出正在运行的虚拟机进程，并显示出运行的主类和进程号&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;命令格式：&lt;code&gt;jps [option] [hostid]&lt;/code&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;如果需要查看远程机器的jvm进程需要填写&lt;code&gt;hostid&lt;/code&gt;，并且需要使用RMI，比如：&lt;code&gt;rmi://192.168.2.128:12345&lt;/code&gt;&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常用的选项：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-q&lt;/code&gt; : 只显示出虚拟机的进程id（lvmid），省略主类名&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-m&lt;/code&gt; : 输出启动时传递给主类的参数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-l&lt;/code&gt; : 显示出主类的全名，包括jar包路径&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-v&lt;/code&gt; : 输出虚拟机进程启动时的JVM参数&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.23290203327171904&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3zIQRpQAtZibR8uPLX3MU1OoibCvIQQZLFLia31ermSkeW8icYvYdPLLPnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;541&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;虚拟机统计信息监控工具（jstat）&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用于监控虚拟机运行状态信息的命令行工具，可以提供内存，垃圾收集等运行时的数据&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;命令格式：&lt;code&gt;jstat [option vmid] [interval [s|ms] [count]]&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;interval表示间隔多久时间查询一次，count表示查询多少次，比如：每个两秒查询一次进程52412的垃圾收集情况，共查询5次&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;jstat -gc 52412 2s 5&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.10375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3OObJnsw4ho5Gam75mB4vIA1kMeuFBLmdoHYajmf15ibYh1iaPz1GkZxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常用的选项：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-class&lt;/code&gt;: 监控类装载，卸载次数和总空间以及加载类的耗时&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-gc&lt;/code&gt;: 监控java堆的情况&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-gcutil&lt;/code&gt;: 主要输出各个空间使用的百分比&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-gcnew&lt;/code&gt;: 主要是监控新生代的GC状况&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-gcold&lt;/code&gt;: 监控老年代的GC状况&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-compiler&lt;/code&gt;: 输出JIT编译器编译过的方法和耗时信息&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看堆空间的使用百分比: &lt;code&gt;jstat -gcutil 52412 2s 5&lt;/code&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.16973684210526316&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN39ticu2fcOAGShUKaqFQzmIfZtLAgGceHoruTjg6AOZibahyoIT9bwPJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;760&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;java配置信息工具（jinfo）&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以通过&lt;code&gt;jinfo&lt;/code&gt;实时的查看和调整虚拟机的各项参数；可以通过&lt;code&gt;jps -v&lt;/code&gt;查看虚拟机启动时候指定的参数信息，如果需要查看未显示指定的参数默认值也可以通过&lt;code&gt;jinfo -flag&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;jinfo -flag CMSInitiatingOccupancyFraction 52412&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.08875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3HcQOFibOt6HbrdaIeRvEVMhicicPAfgichnqbgRCQSAjQes4J6ZtURl3Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;jinfo除了可以查看参数以外，还可以在运行时修改一些允许被修改的参数&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;Java内存映像工具（jmap）&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;jmap用于生成JVM堆的快照文件，除了使用jmap工具，我们通常也会在配置JVM的启动参数 &lt;code&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/code&gt; 让JVM在发送内存溢出之后自动生成dump文件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;命令格式：&lt;code&gt;jmap [option] vmid&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如生成java堆的快照文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;jmap -dump:live,format=b,file=/Users/huaan9527/Desktop/heap.hprof 59950&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常用的选项：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-F&lt;/code&gt;: 当虚拟机对-dump选项没有响应时可用选择使用这个参数强制生成快照&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-histo&lt;/code&gt;: 显示出堆中对象统计信息。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;堆栈跟踪工具（jstack）&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用于生成JVM当前线程的快照信息。通常用于查询什么原因导致线程长时间的停顿，比如：线程死循环，死锁，等待网络/IO&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;命令格式：&lt;code&gt;jstack [option] vmid&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常用的选项：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-F&lt;/code&gt;: 当请求不被响应时强制输出&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-l&lt;/code&gt;: 除了显示堆栈外，还需要显示锁的信息&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-m&lt;/code&gt;: 如果调用到本地方法，显示出C/C++的堆栈&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;VisualVM 可视化工具&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;VisualVM是目前JDK自带的功能最强的运行监视和故障处理程序，在VisualVM之前，JDK也提供了一款可视化工具JConsole，由于JConsole的所有功能在VisualVM都有，所以可视化工具大家几乎都选择使用VisualVM。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;VisualVM本身是基于Netbean开发的，所以具备了插件扩展功能，安装插件之后上面介绍的所有命令行的工具的功能都可以在VisualVM中使用。可以在在JAVA_HOME/bin目录下执行&lt;code&gt;jvisualvm&lt;/code&gt;启动。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;插件安装
默认情况VisualVM提供的功能很少，需要我们在菜单栏-&amp;gt;工具-&amp;gt;插件里面安装插件，我这是全部插件都安装了&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.59875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3QGVcxoRL0D1EaoyiaI5tEqpBEGL0yXhmHe2NfcKJtyvic20C2RRhJP1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;功能演示&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.46981627296587924&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3UEXOHP6iauXffDAODBG85QP4PqKosiajOGz9GVXUib8x6c9HDJed2DxVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;762&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;显示出当前本机所有的JVM进程，这里显示的内容和前面说的命令行&lt;code&gt;jps&lt;/code&gt;显示的内容一样&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6975&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3ZZs5Y4qialznXKtKIj1MibSTrqWycDS8UYoiaadvzqXOn2IR9DOiaWc0Ww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当前虚拟机启动信息的展示，比如：JVM启动参数、系统参数&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.66&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3IuCCtJENo62LdUe0eVNAlVESYFVCQGKQjJib0TPxwcpWVLIuuCj6ia8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个页面相当于命令jstat的功能，显示出了CPU, 内存，线程，类装载当前处于什么情况&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生成dump文件可以在应用程序窗口右键菜单中选择，也可以在这个页面点击右上角的&lt;code&gt;堆dump&lt;/code&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Visual GC
此页主要展示了GC相关的信息，这是在性能调优时常用的页面之一&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3525&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3uMn8Ciaga5rTDzRsjfjMa36O6GGgez4Cuj1EozA2VjwHnEiczK8EfxjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以写个程序来观看下这个截图各个内存区域的变化情况，为了让图的效果明显需要修改JVM的启动参数&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;-Xmx100m -Xms100m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/huaan9527/Desktop&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public static void main(String[] args) {&lt;br/&gt;    List&amp;lt;DataTest&amp;gt; datas = new ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;&lt;br/&gt;    IntStream.range(0, 10000).forEach(index -&amp;gt; {&lt;br/&gt;        datas.add(new DataTest());&lt;br/&gt;&lt;br/&gt;        try {&lt;br/&gt;            Thread.sleep(50);&lt;br/&gt;        } catch (InterruptedException e) {&lt;br/&gt;            e.printStackTrace();&lt;br/&gt;        }&lt;br/&gt;    });&lt;br/&gt;&lt;br/&gt;    System.gc();&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;static class DataTest {&lt;br/&gt;    byte[] bytes = new byte[1024];&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5325&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3TJRzV0hnQgqJyXvS7icdAw8Rdh0wDAeaY3evvibsq9kEloJF3VNYLxOw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;线程
本页的功能相当于命令行工具&lt;code&gt;jstack&lt;/code&gt;，主要是用于检查什么原因导致线程长时间等待，我们写程序来演示下等待外部资源、锁等待、死循环这几种请求&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「等待外部资源」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public static void main(String[] args) throws IOException {&lt;br/&gt;    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));&lt;br/&gt;    System.out.println(reader.readLine());&lt;br/&gt;    try {&lt;br/&gt;        Thread.sleep(1000000);&lt;br/&gt;    } catch (InterruptedException e) {&lt;br/&gt;        e.printStackTrace();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;选中main线程，右侧会看到当前线程运行到了readBytes，等待键盘输入&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.395&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN30YP4cEJicbw4ibpa7HpHV68d8qiaExhstP9l0eMdQmrltjZJrwS7Is9JQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当我们在控制台输入之后再次查看main线程的状态，此时进入了TIME_WAIT状态&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.24375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3vF9IMG5fFrYAq5GkB0ta3yLZlHrm7ccRfCqU7VDHEz9hRVQJLsZKMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「锁等待」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public static void main(String[] args) throws IOException, InterruptedException {&lt;br/&gt;    Thread thread = createLockThread(new Object());&lt;br/&gt;    thread.join();&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;public static Thread createLockThread(final Object lock) {&lt;br/&gt;    Thread lockThread = new Thread(() -&amp;gt; {&lt;br/&gt;        synchronized (lock) {&lt;br/&gt;            try {&lt;br/&gt;                lock.wait();&lt;br/&gt;            } catch (InterruptedException e) {&lt;br/&gt;                e.printStackTrace();&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }, &lt;span&gt;&quot;lockThread&quot;&lt;/span&gt;);&lt;br/&gt;    lockThread.start();&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; lockThread;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.34125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3TktpB0w3QcrBiadrLic8Jz2wErvo24dZRtXCCNc9os2CQJJrESuofvfw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;lockThread线程在等待lock对象的notify方法被调用，此时处于WAITING状态，在被唤醒之前是不会再分配执行时间&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「死循环」&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;public static void main(String[] args) throws IOException, InterruptedException {&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;) ;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.25625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ggRgNal7zG9kicVo0UGe8hmEJFxcQSRN3LDibRDrJ6XM9pYXlHdpupiauyXORbYfdsDOsDzuACnEia4uURESibn4aWg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;线程一直处于运行状态，从堆栈追踪里可以看出代码一直停留在了191行，在空循环上用尽分配的执行时间&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本篇介绍了命令行工具和可视化工具，下篇实战演示下如何通过这些工具对&lt;strong&gt;「Idea运行速度调优」&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;写到最后&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文中或许会存在或多或少的不足、错误之处，有建议或者意见也非常欢迎大家给我留言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，&lt;strong&gt;「白嫖不好，创作不易」&lt;/strong&gt;，希望朋友们可以&lt;strong&gt;「点赞」&lt;/strong&gt;，因为这些就是我分享的全部动力来源🙏&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3213fbfc96ecc327437298525f7a5b38</guid>
<title>[推荐] MySQL 读写分离，写完读不到问题如何解决</title>
<link>https://toutiao.io/k/ga340bq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;点击上方&quot;&lt;span&gt;程序员历小冰&lt;/span&gt;&quot;，选择“置顶或者星标”&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;   你的关注意义重大!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;大家好，我是历小冰。&lt;/p&gt;&lt;p&gt;今天我们来详细了解一下主从同步延迟时读写分离发生写后读不到的问题，依次讲解问题出现的原因，解决策略以及 Sharding-jdbc、MyCat 和 MaxScale 等开源数据库中间件具体的实现方案。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;写后读不到问题&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;MySQL 经典的一主两从三节点架构是大多数创业公司初期使用的主流数据存储方案之一，主节点处理写操作，两个从节点处理读操作，分摊了主库的压力。&lt;/p&gt;&lt;p&gt;但是，有时候可能会遇到执行完写操作后，立刻去读发现读不到或者读到旧状态的尴尬场景。这是由于主从同步可能存在延迟，在主节点执行完写操作，再去从节点执行读操作，读取了之前旧的状态。&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;212&quot; data-backw=&quot;315&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9QbuglRCMtfNvZwND62DC6voCNHuomK2meEfiaicLjLO2lJ4wxqbXVrYWSbsVNKbtVGD7sWEWSpmWovic8PO6SHGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; title=&quot;null&quot; data-ratio=&quot;0.6726677577741408&quot; data-w=&quot;611&quot;/&gt;&lt;/p&gt;&lt;p&gt;上图展示了此类问题出现的操作顺序示意图：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;客户端首先通过代理向主节点 Master 进行了写入操作&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;紧接着第二步去从节点 Slave A 执行读操作，此时 Master 和 Slave A 之间的同步还未完成，所以第二步的读操作读取到了旧状态&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;当第五步再次进行读操作时，此时同步已经完成，所以可以从 Slave B 中读取到正确的状态。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;下面，我们就来看一下为什么会出现此类问题。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;MySQL 主从同步&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;理解问题背后发生的原因，才能更好的解决问题。MySQL 主从复制的过程大致如下图所示，本篇文章只讲解同步过程中的流程，建立同步连接和失联重传不是重点，暂不讲解，感兴趣的同学可以自行了解。&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;192&quot; data-backw=&quot;315&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9QbuglRCMtfNvZwND62DC6voCNHuomK2RZaNfJyhe1ic0lHSkrm2xJibd5hImLZnR6Mb8RhtXuZT3RX1qquich41g/640?wx_fmt=png&quot; data-type=&quot;png&quot; title=&quot;null&quot; data-ratio=&quot;0.6110019646365422&quot; data-w=&quot;1018&quot;/&gt;&lt;/p&gt;&lt;p&gt;MySQL 主从复制，涉及主从两个节点，一共四个四个线程参与其中：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;em&gt;主节点的 Client Thread&lt;/em&gt;&lt;span&gt;，处理客户端请求的线程，执行如图所示的1~5步骤，2，3，4步骤是为了保证数据的一致性和尽量减少丢失，第三步骤时会通知 Dump Thread；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;em&gt;主节点的 Dump Thread&lt;/em&gt;&lt;span&gt;，接收到 Client Thread 通知后，负责读取本地的 binlog 的数据，将 binlog 数据，binlog 文件名 以及当前发送 binlog 的位置信息发送给从节点；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;em&gt;从节点的 IO Thread&lt;/em&gt;&lt;span&gt; 负责接收 Dump Thread 发送的 binlog 数据和相关位置信息，将其追加到本地的 relay log 等文件中；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;em&gt;从节点的 SQL Thread &lt;/em&gt;&lt;span&gt;检测到 relay log 追加了新数据，则解析其内容(其实就是解析 binlog 文件的内容)为可以执行的 SQL 语句，然后在本地数据执行，并记录下当前执行的 relay log 位置。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;上述是默认的&lt;strong&gt;异步同步模式&lt;/strong&gt;，我们发现，从主节点提交成功到从节点同步完成，中间间隔了6，7，8，9，10多个步骤，涉及到一次网络传输，多次文件读取和写入的磁盘 IO 操作，以及最后的 SQL 执行的 CPU 操作。&lt;/p&gt;&lt;p&gt;所以，当主从节点间网络传输出现问题，或者从节点性能较低时，主从节点间的同步就会出现延迟，导致文章一开始提及的写后读不到的问题。在高并发场景，从节点一般要过几十毫秒，甚至几百毫秒才能读到最新的状态。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;常见的解决策略&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;一般来讲，大致有如下方案解决写后读不出问题：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;强制走主库&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;判断主备无延迟&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;等主库位点或 GTID 方案&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;强制走主库&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;强制走主库方案最容易理解和实现，它也是最常用的方案。顾名思义，它就是强制让部分必须要读到最新状态的读操作去主节点执行，这样就不会出现写后读不出问题。这种方案问题在于将一部分读压力给了主节点，部分破化了读写分离的目的，&lt;strong&gt;降低了整个系统的扩展性&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;一般主流的数据库中间件都提供了强制走主库的机制，比如，在 sharding-jdbc 中，可以使用 &lt;code&gt;Hint&lt;/code&gt; 来强制路由主库。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.2689075630252101&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9QbuglRCMtfNvZwND62DC6voCNHuomK2oiagOfDJ49bloGPlTPTjtVdYRJlhRDyyxVmfBGKswTYU72ToS3BLz1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;476&quot;/&gt;&lt;/p&gt;&lt;p&gt;它的原理就是在 SQL 语句前添加 Hint，然后数据库中间件会识别出 Hint，将其路由到主节点。&lt;/p&gt;&lt;p&gt;下面，我们就来看一下如果要去从库查询，并且要避免过期读的方案，并分析各个方案的优缺点。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;判断主备无延迟&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;第二种方案是使用 show slave status 语句结果中的部分值来判断主从同步的延迟时间：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;gt; show slave status&lt;/span&gt;&lt;br/&gt;&lt;span&gt;*****&lt;/span&gt;&lt;span&gt;*****&lt;/span&gt;&lt;span&gt;*****&lt;/span&gt;&lt;span&gt;*****&lt;/span&gt;&lt;span&gt;*****&lt;/span&gt;&lt;span&gt;** 1. row **&lt;/span&gt;&lt;span&gt;*****&lt;/span&gt;&lt;span&gt;*****&lt;/span&gt;&lt;span&gt;*****&lt;/span&gt;&lt;span&gt;*****&lt;/span&gt;&lt;span&gt;*****&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Master_Log_File&lt;/span&gt;: &lt;span&gt;mysql-bin&lt;/span&gt;&lt;span&gt;.001822&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Read_Master_Log_Pos&lt;/span&gt;: 290072815&lt;br/&gt;&lt;span&gt;Seconds_Behind_Master&lt;/span&gt;: 2923&lt;br/&gt;&lt;span&gt;Relay_Master_Log_File&lt;/span&gt;: &lt;span&gt;mysql-bin&lt;/span&gt;&lt;span&gt;.001821&lt;/span&gt;&lt;br/&gt;&lt;span&gt;Exec_Master_Log_Pos&lt;/span&gt;: 256529431&lt;br/&gt;&lt;span&gt;Auto_Position&lt;/span&gt;: 0&lt;br/&gt;&lt;span&gt;Retrieved_Gtid_Set&lt;/span&gt;: &lt;br/&gt;&lt;span&gt;Executed_Gtid_Set&lt;/span&gt;: &lt;br/&gt;.....&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;em&gt;seconds_behind_master&lt;/em&gt;，表示落后主节点秒数，如果此值为0，则表示主从无延迟&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;em&gt;Master_Log_File 和 Read_Master_Log_Pos&lt;/em&gt;，表示的是读到的主库的最新位点，Relay_Master_Log_File 和 Exec_Master_Log_Pos，表示的是备库执行的最新位点。如果这两组值相等，则表示主从无延迟&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;em&gt;Auto_Position=1 &lt;/em&gt;，表示使用了 GTID 协议，并且备库收到的所有日志的 GTID 集合 Retrieved_Gtid_Set 和 执行完成的 GTID 集合 Executed_Gtid_Set 相等，则表示主从无延迟。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;在进行读操作前，先根据上述方式来判断主从是否有延迟，如果有延迟，则一直等待到无延迟后执行。但是这类方案在判断是否有延迟时存在着假阳和假阴的问题：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;em&gt;判断无延迟，其他延迟了&lt;/em&gt;。因为上述判断是基于从节点的状态，当主节点的 Dump Thread 尚未将最新状态发送给从节点的 IO SQL 时，从节点可能会错误的判断自己和主节点无延迟。&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;em&gt;判断有延迟，但是读操作读取的最新状态已经同步&lt;/em&gt;。因为 MySQL 主从复制是一直在进行的，写后直接读的同时可能还有其他无关写操作，虽然主从有延迟，但是对于第一次写操作的同步已经完成，所以读操作已经可以读到最新的状态。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;对于第一个问题，需要使用主从复制的 &lt;strong&gt;semi-sync 模式&lt;/strong&gt;，上文中讲解介绍的是默认的异步模式，semi-sync 模式的流程如下图所示：&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;192&quot; data-backw=&quot;315&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9QbuglRCMtfNvZwND62DC6voCNHuomK2ibIBKUVI4VaiaicXkz4gyKT4wjq1aNgKH33tz7vNJicQyBNxb2xqMsFvLw/640?wx_fmt=png&quot; data-type=&quot;png&quot; title=&quot;null&quot; data-ratio=&quot;0.6100196463654224&quot; data-w=&quot;1018&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;当主节点事务提交的时候，Dump Thread 把 binlog 发给从节点；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;从节点的 IO Thread 收到 binlog 以后，发回给主节点一个 ack，表示收到了；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;主节点的 Dump Thread &lt;strong&gt;收到这个 ack 以后，再通知 Client Thread &lt;/strong&gt;，此时才能给客户端返回执行成功的响应。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;这样，写操作执行后，就确保从节点已经读取到主节点发送的 binglog 数据，即 Master_Log_File、 Read_Master_Log_Pos 或 Retrieved_Gtid_Set 是最新的，这样才能与执行的相关数据进行对比，判断是否有延迟。&lt;/p&gt;&lt;p&gt;可惜的是，上述 semi-sync 模式只需要等待&lt;strong&gt;一个从节点的&lt;/strong&gt;ACK，所以一主多从的模式该方案将会无效。&lt;/p&gt;&lt;p&gt;虽然该方案有种种问题，但是对于一致性要求不那么高的场景也能适用，比如 MyCat 就是用 seconds_behind_master 是否落后主节点过多，如果超过一定阈值，就将其从有效从节点列表中删除，不再将读请求路由到它身上。&lt;/p&gt;&lt;p&gt;在 MyCAT 的用于监听从节点状态，发送心跳的 MySQLDetector 类中，它会读取从节点的 seconds_behind_master，如果其值大于配置的 slaveThreshold，则将打印日志，并将延迟时间设置到心跳信息中。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.30851063829787234&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9QbuglRCMtfNvZwND62DC6voCNHuomK2bCpaHaF4nGq8oGoIwXK43Kibo43PKZhjZesPiaGFZWb4jib9ibN3dvbjxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;940&quot;/&gt;&lt;/p&gt;&lt;p&gt;下面，我们就介绍能够解决第二个问题的方案，即判断有延迟，但是读操作读取的特定最新状态已经同步。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;等GTID 方案&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;首先介绍一下 GTID，也就是&lt;strong&gt;全局事务 ID&lt;/strong&gt;，是一个事务在提交的时候生成的，是这个事务的唯一标识。它由MySQL 实例的uuid和一个整数组成，该整数由该实例维护，初始值是 1，每次该实例提交事务后都会加一。&lt;/p&gt;&lt;p&gt;MySQL 提供了一条基于 GTID 的命令，用于在从节点上执行，等待从库同步到了对应的 GTID（binlog文件中会包含 GTID），或者超时返回。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.18969072164948453&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9QbuglRCMtfNvZwND62DC6voCNHuomK2Kogy4cUU5E98ymJoUdWJW82ib5MuB09dfibKiaXMs2tpWDknYZMmSHGmQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;485&quot;/&gt;&lt;/p&gt;&lt;p&gt;MySQL 在执行完事务后，会将该事务的 GTID 会给客户端，然后客户端可以使用该命令去要执行读操作的从库中执行，&lt;strong&gt;等待该 GTID，等待成功后，再执行读操作&lt;/strong&gt;；如果等待超时，则去主库执行读操作，或者再换一个从库执行上述流程。&lt;/p&gt;&lt;p&gt;MariaDB 的 MaxScale 就是使用该方案，MaxScale 是 MariaDB 开发的一个数据库智能代理服务(也支持 MySQL)，允许根据数据库 SQL 语句将请求转向目标一个到多个服务器，可设定各种复杂程度的转向规则。&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;169&quot; data-backw=&quot;315&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9QbuglRCMtfNvZwND62DC6voCNHuomK2l2Nyqwc7xFEBTy9d27m03FS82riahRWReAOiaRQlZLyrNGsdq0iaic0TTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; title=&quot;null&quot; data-ratio=&quot;0.535183349851338&quot; data-w=&quot;1009&quot;/&gt;&lt;/p&gt;&lt;p&gt;MaxScale 在其 readwritesplit.hh 头文件和 rwsplit_causal_reads.cc 文件中的 add_prefix_wait_gtid 函数中使用了上述方案。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9QbuglRCMtfNvZwND62DC6voCNHuomK2VwS9ibDT0kiaY4ScQibVhEeKmiagmPIo7p7l0JRyun6vTnFSuq9dkUOmpw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.25865580448065173&quot; data-w=&quot;982&quot;/&gt;&lt;/p&gt;&lt;p&gt;举个例子，原来要执行读操作的 SQL 和添加了前缀的 SQL 如下所示：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.142578125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9QbuglRCMtfNvZwND62DC6voCNHuomK2gichLKSjWDic8AMibrEZh4D4PgnrF2L1OQFmHVUZMWm0YwjyNHIMibyl3w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1024&quot;/&gt;&lt;/p&gt;&lt;p&gt;当 WAIT_FOR_EXECUTED_GTID_SET 执行失败后，原 SQL 就不会再执行，而是将该 SQL 去主节点执行。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;后记&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;感觉大家一直读到文末，后续小冰会继续为大家奉上高质量的文章，也希望大家继续关注。&lt;/p&gt;&lt;p&gt;&lt;span&gt;-关注我&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5075921908893709&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/9QbuglRCMtehL5KdOC0Uib7CdHkxwGibQdibjs4kC3FpEO9ehCCjHwFa1ZSS8QoEgb9AtomP8cDZmz8jC1gR8qvzg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;922&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NjE5NDQyOA==&amp;amp;mid=2247484555&amp;amp;idx=1&amp;amp;sn=40fb1ea6d3589d1c1ace0dc493488fea&amp;amp;chksm=ce4fc218f9384b0e894a7724ec7daa8acbd4be34977644850635376cf960477f7b0ad9faec90&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;一万字详解 Redis Cluster Gossip 协议&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NjE5NDQyOA==&amp;amp;mid=2247484616&amp;amp;idx=1&amp;amp;sn=e1b30eff9aee62bc232ef2800534a3dd&amp;amp;chksm=ce4fc25bf9384b4d7b2c63821d441a3b6ef74513c6bb143c1461e23c4c8c7283270d449b8869&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;为什么 ElasticSearch 比 MySQL 更适合复杂条件搜索&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NjE5NDQyOA==&amp;amp;mid=2247484468&amp;amp;idx=1&amp;amp;sn=b17568cb7f127543ba752c63577013ce&amp;amp;chksm=ce4fc2a7f9384bb1f072198b01fdea1986e35377cba3481cde874e6367bf0d40996293c0ab68&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;MySQL 的 join 功能弱爆了？&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;参考&lt;br/&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt; https://time.geekbang.org/column/article/77636&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;https://www.cnblogs.com/rickiyang/p/13856388.html&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;https://www.cnblogs.com/paul8339/p/7615310.html&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;https://github.com/mariadb-corporation/MaxScale&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n259&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>