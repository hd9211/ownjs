<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>ad5745381a9c1b7947750066369392e2</guid>
<title>困在内卷里的工程师 | 码农周刊第 322 期</title>
<link>https://toutiao.io/k/mb7u8g0</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;困在内卷里的工程师 | 码农周刊第 322 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第322期（2020-10-21）&lt;/h2&gt;
        &lt;p&gt;☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=322&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3220&quot; target=&quot;_blank&quot;&gt;薪资翻番如何实现？程序员的涨薪秘诀&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;a href=&quot;https://weekly.manong.io/bounce?nid=322&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3220&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_321.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=322&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;业界实战&lt;/p&gt;
        
        &lt;p&gt;实战经验&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;工作地点：成都 | 薪资：15-30K | 简历投递邮箱：xiexiaofang@huobi.com&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;功能强大、配置简单、完全开源。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;第三代 AI 发展的思路是把第一代的知识驱动和第二代的数据驱动结合起来，通过利用知识、数据、算法和算力等 4 个要素，构造更强大的 AI……&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;斯坦福教授、Tcl 语言发明者 John Ousterhout 的著作《A Philosophy of Software Design》，自出版以来，好评如潮。&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;实战经验&lt;/p&gt;
        
        &lt;p&gt;适合新手&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;试试吧&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;
        
        &lt;p&gt;图文并茂&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;实用&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;一步步教你&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 448635 即可&lt;/p&gt;
        
        &lt;p&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 429587 即可&lt;/p&gt;
        
        &lt;p&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 412364 即可&lt;/p&gt;
        
        &lt;p&gt;编程、成长、正能量！&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 381811 即可&lt;/p&gt;
        
        &lt;p&gt;分享Go语言相关内容&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 133906 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=322&amp;amp;aid=20030&amp;amp;url=https%3A%2F%2Fitem.jd.com%2F12972072.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/book_322.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;欢迎讨论&lt;/p&gt;
        
        &lt;p&gt;部分适用于百度&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5506e1da8367d7054172fb5196c3984b</guid>
<title>我做了一个 240 天的计划来解救自己，还剩 174 天，寻找伙伴中</title>
<link>https://toutiao.io/k/3jkd39p</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot;&gt;&lt;p&gt;人脑很难推断感受。即使是乔布斯告诉你每天都要像是生命最后一天一样活着，你也很难想象最后一天你到底想干什么。但 2020 这特殊的一年对我来说，把所有的事情都催化了一点，把很多感受都变得了现实一点。&lt;/p&gt;&lt;p&gt;这一年里我清晰地看到了自己的职业际遇是如何和大环境关联起来的。我组建了三年的团队，在承担了公司零到一的重要战役之后，因为战略调整瞬间就分崩离析了。公司当然不是针对我，面对今非昔比的国际关系，必须做出战略调整才能应对，我顶多算是 collateral damage。除了我，还有很多同样的人，无论能力、努力程度，也在遭受着 collateral damage。&lt;/p&gt;&lt;p&gt;世界并不是以前认为的那么稳定，或许早就已经岌岌可危。生命也是，虽然非典时就见识过疫情很危险，但也只有当家里人是医务工作者，过年跟我说别回家时，才又真正感受到他们会有危险，真的有可能见面即是最后一面。还有很多很多事情让我真切感受到，自己的生命在流逝，虽然无法想象人生的最后一天，但往后每一天都是余生最年轻的一天，不妨去想这一天想要干什么。&lt;/p&gt;&lt;p&gt;我想要完全改变自己的工作方式，去做喜欢的事并且创造巨大的价值，永远追求更健康更科学地工作，找到有梦想、能深度交流的伙伴，为我的宝宝提供更好的教育、更好地照顾家庭。&lt;/p&gt;&lt;p&gt;这就是这个计划的目标，240 天是它的期限。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;第一部分&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;过去的创业和大公司经历，让我看到目前的公司环境给不了我想要的，并不是因为做不到，而是因为帮助员工实现价值、好好照顾员工并不是公司的核心目标。例如远程办公这件事，只要有好的工具、约定，就能做到，还能规避掉很多无效的会议。但若不是疫情，老板是不会主动去推进实施的，这不是他的核心目标。还有更多地例子可以参照《&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//book.douban.com/subject/35135787/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;重来 3&lt;/a&gt;》。关于组织和员工关系的本质我也花了很长时间思考和学习管理学，参见《&lt;a href=&quot;https://zhuanlan.zhihu.com/p/166099294&quot; class=&quot;internal&quot;&gt;技术管理的世界观&lt;/a&gt;》。&lt;/p&gt;&lt;p&gt;这让我意识到想要改变，必须自己去创造。Wolfram 的 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//writings.stephenwolfram.com/2019/02/seeking-the-productive-life-some-details-of-my-personal-infrastructure/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Seeking the Productive Life&lt;/a&gt; 给了我很大的启发。作为工程师我首先要以工程的方式改善自己，要造工具让自己写代码更快、更少、更容易。于是我花了很长时间来梳理我的知识体系。这里要顺便介绍一下我的经历了，便于理解我要做这些，为什么做这些。&lt;/p&gt;&lt;p&gt;我是学存储的、数据库方向。读研时就开始写云存储软件，当时实验室和一家北京的教育软件集成公司合作，软件卖给了很多高校，现在应该还在跑。快毕业时去百度实习，想着自己未来要做独立做产品只差前端没系统学习过了，于是拒了 php 的职位选了前端。毕业后收到邀请和新浪的师兄开始创业做云计算，成立了国内第一家做 Openstack 的公司，我负责前端和设计团队、兼任产品经理。又补齐了很多产品知识，写的博客被华章出版社的编辑看到，受邀写了本小小的电子书《产品设计七日修行》。再后来公司资金出现问题，我离职到了支付宝做前端。在工作中我庆幸从来没有以工作的标准来指导自己的发展，不管本职工做什么，我一直在关注框架，AngularJS 的第一版 developer guide 就是我翻译的，也在写框架，参见我的 github &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/sskyy&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/sskyy&lt;/span&gt;&lt;span class=&quot;invisible&quot;/&gt;&lt;/a&gt;。同时也在用自己的框架写产品，在我的 github 里面可以找到博客、论坛等等。其他其他事情可以通过我的知乎文章 &lt;a href=&quot;https://www.zhihu.com/people/hou-zhen-yu/posts&quot; class=&quot;internal&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;zhihu.com/people/hou-zh&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;en-yu/posts&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt; 和以前的博客&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.cnblogs.com/sskyy&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;cnblogs.com/sskyy&lt;/span&gt;&lt;span class=&quot;invisible&quot;/&gt;&lt;/a&gt;找到。&lt;/p&gt;&lt;p&gt;我发现我不管是初心还是知识体系，其实都是围绕着“做完整产品”的。我应该不为公司，不为任何人，而是为自己打造一条生产线，让我做下一个产品时，不用再写那么多 crud，不断实现 rbac，不断写前端组件了。当然我不可能造出银弹，这个生产线是有一个明确应用范围的，即“单一数据中心，多用户，以数据操作为主”的应用。围绕这个范围我进行了长达一年时间的推导以及和朋友的讨论。目前已经全部完结，核心是以“需求描述”为中心来构建系统，这样能极大地复用已有的能力。&lt;/p&gt;&lt;p&gt;&lt;b&gt;这就是计划的第一部分，打造自己的软件生产线。&lt;/b&gt;以下思维导图仅供参考。(当然没有我的解释是不可能完全看懂的，期待你加入我会好好解释给你听。)&lt;/p&gt;&lt;p&gt;整体思维导图&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-bf6e474c0c82576bf1632e219ad138e4_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;4000&quot; data-rawheight=&quot;3123&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-bf6e474c0c82576bf1632e219ad138e4_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;4000&quot; data-rawheight=&quot;3123&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-bf6e474c0c82576bf1632e219ad138e4_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-bf6e474c0c82576bf1632e219ad138e4_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;后端的设计&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-95a8daa48593856aaf000140d7dd3990_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3066&quot; data-rawheight=&quot;2422&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-95a8daa48593856aaf000140d7dd3990_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3066&quot; data-rawheight=&quot;2422&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-95a8daa48593856aaf000140d7dd3990_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-95a8daa48593856aaf000140d7dd3990_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;前端的设计&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d03fb5c48f3940e235414f4e7787d5eb_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;7117&quot; data-rawheight=&quot;2892&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-d03fb5c48f3940e235414f4e7787d5eb_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;7117&quot; data-rawheight=&quot;2892&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-d03fb5c48f3940e235414f4e7787d5eb_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-d03fb5c48f3940e235414f4e7787d5eb_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;基本上系统整体推导已经完成。前端部分实施已经完成，准备开源中，关于前端开源的招募建我另一篇帖子。除了系统本身，我也写了个 IDE，主要目的有两个：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;提供与项目相关的更好的编辑体验。例如我想要知道哪一行代码会引起数据库的写操作，如果没有工具完全理解代码语义就很难做到。理解语义需要 AST，而 VS Code 在官方的 Issue 里面明确回复了不会开发内部的 AST，这意味着我要想得到 AST 就要自己 parse，代码变化就得重新 parse。算了吧，相比于之前我参与过的 Drupal、Openstack、Chromium，我对 VS Code 的架构设计也不是很满意，为什么不自己写呢。在插件体系上我要做成类似于 meteor 的写法，写插件代码的人不分前后端，系统自动判断代码运行在哪里。在编辑能力上我要做成天然以 AST 的树形数据结构来显示，而不是行列字符的形式，天然开放 AST 给所有插件。在这个是线下还可以做很多有意思的事情，例如可以取消掉所有空格缩进，直接用 padding 实现。&lt;/li&gt;&lt;li&gt;突破以文件树的方式保存代码的形式。都已经 2020 年了，我们还在以过去几十年前的方式来保存代码，以文件的方式来区分模块。为什么不能突破，我们现在的大部分代码都是某个框架的一部分，语义是相当容易分析的。当有了对代码语义的完全掌控后，完全可以框架的概念来保存和索引代码。例如我可以通过数据反向查询所有对其操作的 model 的代码，也可以通过 service 方向查询须有进行了调用的 model。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这个 IDE 我已经完成了第一部分。&lt;/p&gt;&lt;p&gt;IDE 图。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-72069736a2ee79704fbc1404616c4d43_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;4022&quot; data-rawheight=&quot;3077&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-72069736a2ee79704fbc1404616c4d43_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;4022&quot; data-rawheight=&quot;3077&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-72069736a2ee79704fbc1404616c4d43_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-72069736a2ee79704fbc1404616c4d43_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-e44ae0474d336578e76a175bf841f37d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3232&quot; data-rawheight=&quot;1884&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-e44ae0474d336578e76a175bf841f37d_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;3232&quot; data-rawheight=&quot;1884&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-e44ae0474d336578e76a175bf841f37d_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-e44ae0474d336578e76a175bf841f37d_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;第二部分&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;第二部分，关于我期望达成的工作方式，这设计到了我对组织、项目管理的理解。&lt;/p&gt;&lt;p&gt;先说项目管理，这几年里一直承担着一线管理者的工作，并且参与了公司当时号称最重要的战役。我看到现在一线项目管理的最大的问题就是“解决错了问题”。可能很多公司和我们一样，是遵循着传统的项目管理方式围绕图文形式的“任务”概念去做项目管理的。这就有三个很大的问题：&lt;/p&gt;&lt;p&gt;一是图文形式任务实际上很难直观的体现出进度。任务可大可小，靠完成的任务数量是很不客观的。&lt;/p&gt;&lt;p&gt;二是你怎么去衡量一个任务到底应该投入多少人算是合理的？任务既可以写得精确也可以写得模糊，具体的技术需求还要靠一线评估，最后就变成了一线上报，最终成了统计，而不是管理。&lt;/p&gt;&lt;p&gt;三是对于任务的理解和传达其实都是靠的人肉。都 2020 了我们还在像人工耕地一样生产软件。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;正确地方式应该是围绕“交付物”来打造项目管理体系。一个项目里面已经建立了哪些模型，完成了哪些页面，由谁在何时完成的，都应该有系统能够可视化地自动展示出来，而不是文字形式的任务或者人肉通知。应该可以在”活的“系统的架构图上看到所有的进度，而不只是一张 ppt。&lt;/p&gt;&lt;p&gt;对于交付物复杂度的评估参考 2000 年后出现的”基于认知的复杂度评估“方法已经可以比较客观地进行评价，这样投入的人力是否合理也可以算出来。&lt;/p&gt;&lt;p&gt;最后围绕这交互物的管理系统，也能非常轻松的实现自动化。当一个页面的交互稿完成后、一个接口完成后，可以由管理交付物的系统来自动对受影响的下游流程实施者进行通知。&lt;/p&gt;&lt;p&gt;围绕我第一部分描述的产品生产线的”交付物“管理系统我也设计完了，目前已经实现了”视图“部分的交付物管理。预计全部完成后，在开发阶段，它是架构说明书，并且能看到每个人在做什么，做到什么程度。而完成开发后，它就会像一张活的产品说明书，帮助后续维护迭代。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;再说组织，由于现在还不是创业状态，为了避免不必要的麻烦请大家主要从《&lt;a href=&quot;https://zhuanlan.zhihu.com/p/166099294&quot; class=&quot;internal&quot;&gt;技术管理的世界观&lt;/a&gt;》来了解吧。这里只说两个结论：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;从资本的角度来说，现代程序员的投入产出比，是可以达到商业体育运动员水平的。因此我们其实是可以像球队一样去建立组织，为其提供专业的技能培训、医疗等健康管理。想要他提高更高的效率或者释放更大的创造力，就更不应该把他丢进闭关室。应该更科学地为他提供秘书、厨师、医生甚至司机。何况国内其他服务行业相对便宜，互联网相对于其他行业已经处于过发达水平，完全可以变成工程师的天堂。&lt;/li&gt;&lt;li&gt;组织的核心就是”利益分配制度“、”决策权分配制度“。很多公司已经开始进行决策权分配制度的改革，例如去掉 title 等。但还远远不够，真正要让决策权到最正确人手中，至少还要在组织内先建立”科学地讨论方法“才行。利益分配制度也是如此，组织的创始人应当扮演组织发展方向的最后看门人角色，而不是组织中最富有的人。财富应该更多地留给后来加入但贡献了专业能力的人，这样才可能源源不断地扩大组织，寻求更远大的梦想。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;其实关于组织，以及如何实现”最喜欢的事并创造巨大价值“我还有很多想说，但现在还不是时候，就当做是隐藏的第三部分吧。要开启的话，你只能加入我了。&lt;/p&gt;&lt;p&gt;最后奉上我的书单，也算是从侧面介绍我是谁吧。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-3d7eb3ec985fbea95962083cc59a2f33_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-3d7eb3ec985fbea95962083cc59a2f33_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-3d7eb3ec985fbea95962083cc59a2f33_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-3d7eb3ec985fbea95962083cc59a2f33_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-41fb26ef8f3df7995a018b99647d5a4b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-41fb26ef8f3df7995a018b99647d5a4b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-41fb26ef8f3df7995a018b99647d5a4b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-41fb26ef8f3df7995a018b99647d5a4b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-24452bb121d0073db4fa369b3875f02a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-24452bb121d0073db4fa369b3875f02a_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-24452bb121d0073db4fa369b3875f02a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-24452bb121d0073db4fa369b3875f02a_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-cfe74cc80a31bba7f3b28f7d863f7774_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;1440&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-cfe74cc80a31bba7f3b28f7d863f7774_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;1440&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-cfe74cc80a31bba7f3b28f7d863f7774_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-cfe74cc80a31bba7f3b28f7d863f7774_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;请联系我。我的微信 rainer_H。&lt;/p&gt;&lt;h2&gt;以下是本来隐藏在其他地方的第三部分，已经被发现了，就同步到这里来吧。&lt;/h2&gt;&lt;h2&gt;0. 这个计划怎就能实现“做喜欢的事情并创造巨大财富了”？&lt;/h2&gt;&lt;p&gt;隐藏了第三部分所以感觉没连起来。实际上完整地逻辑是：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bcc74e7a07996d0817eeb9257c5839b5_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1942&quot; data-rawheight=&quot;836&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-bcc74e7a07996d0817eeb9257c5839b5_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1942&quot; data-rawheight=&quot;836&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-bcc74e7a07996d0817eeb9257c5839b5_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-bcc74e7a07996d0817eeb9257c5839b5_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;“现象级的产品 Idea” 和“新的组织扩展方式”算是第三部分，涉及到了未来可能要创业的内容。&lt;/p&gt;&lt;p&gt;产品实际上去年已经完成了第一版并自己测试了一段时间，因为下面描述的原因所以暂时隐藏了。&lt;/p&gt;&lt;p&gt;新的组织扩展方式是指假设产品成功存活了下来并且有了发展，我不想再过十年八年才能像阿里或者腾讯一样成为一种可以抵抗危机的“经济体”，想要有更快速的方法具备保护自己团队的能力。我确实找到了，并且意外的是真的有一家国外的公司是这样发展起来。&lt;/p&gt;&lt;p&gt;因为我并没有离职，所以不公开讨论了，同样对产品感兴趣的小伙伴请单独联系我。&lt;/p&gt;&lt;p&gt;这个计划中考虑了即使不创业，我也可以用创造出来的研发基建去寻找自己更好的职业发展。实际上我所知的创业，也并不一定是传统意义上的离职开公司，而是不局限在当前工作和生活的圈子里。从数据库到视图的基建可以全面的应用我的知识体系，提供更多地机遇。过去的经验让我看到技术深度和广度是互相支撑的。广度为深度指明方向，深度为广度指明价值。唯有如此才能上升到更高的层次。&lt;/p&gt;&lt;h2&gt;1. 制定计划背后的逻辑&lt;/h2&gt;&lt;p&gt;为什么不直接做产品创业，为什么是这样的计划，我为什么认为这个计划能改变自己的未来？这背后的逻辑来自于这几年我了解到几个关于世界真相：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;一、关于公司的秩序和上升通道&lt;/p&gt;&lt;p&gt;我们习惯于用国家和社会的思维来理解公司，这其实是有问题的。国家机器是以保护其成员，满足成员需求为目标来运转的。现代社会中，对公平、文明等要求已经变成了人的基本需求，国家有义务满足。以营利为目标的组公司，是以满足组织所有者的利益需求为目标的，没有维持公平环境的义务，更没有帮助员工实现自我价值的义务。&lt;/p&gt;&lt;p&gt;理论上维持公平环境，关心员工可以更好地吸引人才。但能起决定性作用的人才非常少，关心他们，为他们创造公平环境甚至让他们掌握特权，投入产出比最高。&lt;/p&gt;&lt;p&gt;对大量非决定性的员工，公司维持公平的投入只要达到“不引起舆情”的程度就可以保障正常运转。这样投入产出比最高。&lt;/p&gt;&lt;p&gt;实际上，如果真正见识过公司很多机制背后的决策，例如统一的委员会的晋升评价，就会发现背后可操作的空间极大，一切都是以当前公司主要利益集团利益最大化为标准。这个最大化的操作过程中，还是“公不公平，只要做到不引起舆情”就够了。但这并没有什么问题，因为不同于国家，在公司中人失去了利益就会走，组织就可能覆灭，在组织中的管理者追求利益最大化某种程度上是保障组织存活的必要手段。&lt;/p&gt;&lt;p&gt;未看到真相之前，人很容易把成功归功于自己的能力。实际上成功并不一定是能力，更可能是因为满足了当权者的利益。同样把失败怪罪于环境不公，可是环境并没有允诺要公平。和公司的劳动合同上没写。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;二、财富的来源&lt;/p&gt;&lt;p&gt;我在几年前做过一段私募的投资顾问。这里面有意思的是，在创业者看来，创业是成王败寇，失败了就什么也没有。但对投资人来说投资收益其实是相对比较稳健的。因为投资人是反过来看的，先看市场，看领域，算到底有多少钱能赚。例如很多互联网公司的主要收入来源——广告。广告的钱来自于各大广告主的年度预算，这都是确定的数字，总有人会要赚走。只要这个钱足够多、足够确定，那么投资人找到相对背景好的团队，按比例押注多个，就可以赚走这笔钱。&lt;/p&gt;&lt;p&gt;在未变成资方之前，只要同样选对市场和领域，做得比别人更好一点，就很有可能通过投资人的前活下来。很多现在看起来创业成功的大佬，之前也失败过很多次，为什么还一直有人投呢？因为即使失败过很多次，但到了新领域，还是只要别其他人还一点就够了。&lt;/p&gt;&lt;p&gt;创业要成功很难，但很多时候靠投资人的钱活着，和公司发工资并无二致。甚至风险也是一样，公司并没有保证过不裁掉你，当你生病失去劳动能力，当你的年龄、工资涨到一定程度，性价比低于了刚入职的年轻人。公司裁掉你只要不违反法律，没有任何不妥。这和投资人的钱耗尽了是同样的风险。我们这一代人会遇到过去没有遇见过的风险，父辈很多人可以在一个单位做到退休，很多互联网公司能不能活到你退休都不一定。加上国家养老基金的问题(请自行了解)，在没有什么成长、只是把自己知道的知识应用出来的环境里待着，风险比创业更大。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;三、人的可塑性&lt;/p&gt;&lt;p&gt;在不考虑衰老疾病的情况下，人其实是年龄越大学习能力越强。你的阅历可以不断增强你的理解能力。你碰到过题会把你的头脑变成一块干海绵，再碰到相应的知识时会疯狂地吸收。这段话出自于我老婆，她在29岁已经工作了4年的情况下做出了目前人生最重要的决定，去日本读博。她毕业于一个二本小学校设计相关专业，在我看来思维不严谨，逻辑常常混乱。但她用一年时间就考过了 N1，申请上了千叶大学，专业貌似是日本前三。学的是园林相关，自己却从园林研究到城市规划，再从城市规划研究到经济，从国内的张五常、温铁军再到诺奖的著作。她边看《中国经济50人论坛》边跟我侃侃而谈里面某些人一看就是没研究 XXX 问题时，我突然想到，我们什么时候就相信了“人的可塑性越年轻越强”？&lt;/p&gt;&lt;p&gt;根本不是“可塑性”的问题，绝大部分的人的问题是脱离校园之后，就不再进行系统性的学习，就算学习也只是围绕着工作专业。真正有价值的，能对人产生终生影响的还是那些系统性的学科知识。在这几年我自己的转变里，我至少发现了——认知心理学、社会心理学、逻辑学、博弈论、微观经济学、政治学通识——对我的思维产生了巨大影响，这些，才构成了现在的“我”。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;一个人，需要产生“质”的改变需要多久。一个普通的年轻人，变成我认为有独立思考能力，值得成为真正的伙伴需要多久？为了找到这个答案我找了团队里的一个年轻人作了一个小小的实验，我每个月大概只花了不到 4 个小时，只是告诉他要学什么，当前思维有什么问题，3 个月之后他就已经让我感觉完全不同了，半年之后我认为他是有所谓“潜力”的了。&lt;/p&gt;&lt;p&gt;我老婆的经历和这个实验结果构成了这个计划的一部分信心。即使一开始没有豪华的团队，我只要提供成长的环境，只要成员智力正常，愿意系统性地学习，真的想要不断提升自己的思维，团队就能在理想的时间内产生质变，脱颖而出。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;四、工程师的乐趣，创造的力量&lt;/p&gt;&lt;p&gt;马斯克确实给了我关于工程师的乐趣和创造力量的极大启发。他最近在介绍自己的 boring campany 的访谈中，又一次提到了第一性原理，又一次描述了如何拆解复杂问题，将其理解到物理或者数学层面。当理解到那个层面时，很多外界看起来的“颠覆性创新”其实对他来说并不是什么创新，只不是从原理用更好的方法重新构造了一遍。构造完之后，之前的问题也都不存在了。&lt;/p&gt;&lt;p&gt;这才是真正工程师的思维和乐趣，有了这样的思维再去看这个世界，有太多可以去重新理解和创造的了，包括现代的公司制度、教育甚至人对自己的理解。之前提到的 Wolfram 的文章，其实也是将自己拆解了。《重来3》也是同样原理将公司拆解了。这个计划追寻着他们同样的脚步，其实远远不只是做一个“研发基建”而已，“新的协作方式”和“组织协作工具”等都是在 240 天计划之前就已经花了很长时间进行拆解完并重新构造。我对它的信心完全来自于背后每一步验证过的推理。&lt;/p&gt;&lt;p&gt;同时不得不说，我在这个过程中感受到了极大的乐趣，前面所指的创造巨大的价值并不是指单纯的钱，而是组织形成之后，这个组织所产生的创造力，是成百上千个真正有这样拆解世界的思维和能力的工程师的力量。往后的每一天都是我余生最年轻的一天，这一天我希望和这样的伙伴一起，再创造些什么，把这个世界的科技、甚至文明再推进一点点吧。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;五、人活着的意义？&lt;/p&gt;&lt;p&gt;有一种心理学现象叫做“死亡恐惧”，不是指突然受到了危险感到的害怕，而是指到了某一时刻开始思考自己的活着的意义，因为找不到意义而产生的巨大焦虑。一般因各方面的压力终日疲于奔命的中年人容易遭遇这种现象。&lt;/p&gt;&lt;p&gt;我在较小的时候因为健康原因受到过很长时间的死亡恐惧的困扰。更残酷的是，某一日我读到毕淑敏的文章看到，人生确实是没有意义的，所有意义都是人自己赋予的。这对当时的我产生了巨大的冲击。谁都不想没有意义的死掉，可如果本来没有意义，我该赋予它什么意义呢？可能是由于长期思虑这个问题，有一天晚上我突然梦见了全世界所有人都死了，只剩下了我一个人。当时的感觉太真实了，且非常复杂，似乎想哭却连哭也没有意义，没有人听见，也没有人关心。那个震撼的梦让我顿悟到人作为个体活着是没有意义的，但作为群体中的一部分是有意义的，我们为自己的家人、朋友等等一切有关联的人活着，我们构成了他们的生活和喜怒哀乐。同样，他们也是我的意义。人与人之间的联系即是意义，这是我的结论。&lt;/p&gt;&lt;p&gt;但可惜的是，我观察到的大部分人，除了寻找伴侣的时候，都没有再去深入挖掘探索这种联系。我们认识的“朋友”往往都只是学习、工作时的同伴，通常也就是交流专业、交流兴趣。有多少人会主动再去挖掘对方思维、价值观，做更深度的交流呢？我在查理芒格的《穷查理宝典》中看到了他是如何和巴菲特交流，如何成为一辈子真正意义上的灵魂伙伴(说灵魂伴侣有点恶心...)的。人在深入交流之后，是可以达到思维和价值观的融合的，再因融合产生了无可比拟的信任和默契。达到他就像你的一部分大脑，一部分感官，你绝对信任他的决策，随时可以从他那里吸收新的有价值的思考。你们互相“关心”，不是出于朋友或者礼貌性的关心，而是因为你们已经习惯了把对方当成自己的思维的一部分，这种关心只是在为他思考，也就是为自己思考一样。从朋友到挚友，这种关系大部分人只在书里见过，但是如果想到自己的人生也只有一次，难道不想试试吗？&lt;/p&gt;&lt;p&gt;对我来说，唯有建立这样的联系，可以给人生增加一点点意义。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;h2&gt;2. 目前的进度 &amp;amp; 什么是“组织基建”&lt;/h2&gt;&lt;p&gt;这个计划里大部分内容其实开始于两年前，240 天开始的时候是我确认所有细节都想清楚了，所有方案都推导过了，这 240 已经是实施阶段。&lt;/p&gt;&lt;p&gt;其中研发基建就是我所提到的软件生成线，是目前最有现实意义的资产。也是目前投入的主线。它的大概构成按重要程度如下：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;一、适用于“单数据中心，多用户，以数据操作为主”的应用描述语言（待实施）。&lt;/p&gt;&lt;p&gt;它是一种描述需求的语言（当然没有必要重新实现语法，复用已有的语言即可，我们只是需要 ast）。描述的内容是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;应用有哪些页面，跳转关系是什么样的。&lt;/li&gt;&lt;li&gt;页面上承载了哪些交互，这些交互使用什么样的系统能力和模型。在描述交互时又将交互的规模从小到大分成了三层：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Interaction Interface Language：单次交互。(不完全等同于一次接口调用)&lt;/li&gt;&lt;li&gt;Interaction Session Language：跨交互、跨角色、共享 context 的交互描述&lt;/li&gt;&lt;li&gt;Business Process modeling language：跨 session、跨角色、共享 context 的系统交互描述&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;系统提供了哪些能力(如 p2p 通信，定时任务等)，哪些模型。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;笼统地来说，这个语言相当于把产品的需求文档结构化了。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;二、应用描述语言的生成系统（待实施）。&lt;/p&gt;&lt;p&gt;有了描述语言之后，还需要生成系统取读取形成 runtime。类似于自动生成我们现在手动创建的数据库、手写的接口等。举个简单的例子，对于“交友”这样一个交互，我们可能的描述是：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;User a: any;&lt;/p&gt;&lt;p&gt;User b: not(a);&lt;/p&gt;&lt;p&gt;const request = a.sendRequest(friend).to(b);&lt;/p&gt;&lt;p&gt;await result = b.handle();&lt;/p&gt;&lt;p&gt;if (result.approved) {&lt;/p&gt;&lt;p&gt;system.applyRelation(friend, a, b)&lt;/p&gt;&lt;p&gt;} else if (result.reject) {&lt;/p&gt;&lt;p&gt;system.notify(a, request.rejected)&lt;/p&gt;&lt;p&gt;system.end(request)&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;那么根据语义分析，生成系统会自动生成 makeRequest/handleRequest 两个接口。过去我们的手写接口时，对于这种有多个接口调用的流程，逻辑都是分散在各个接口里，流程越复杂维护成本也越高，渐渐系统就失去了原貌。&lt;/p&gt;&lt;p&gt;让需求保持原貌，使用生成系统来生成具体的实现是这样设计的初衷之一。还有另一个初衷是过去很多的代码经验、数据经验都是在人脑中，每个需求来一次都是把这些经验重复应用一下。当我们把需求和实现完全分开后，这些经验就可以放到生成系统中，一次就够了。例如简单的分库分表，实际上就是判断哪些字段常查询、哪些表数据量会特别多。需求和实现分开后，这些信息是可以承载到需求语言中，生成系统只要读到了关键的需求，那么就自动应用这些操作。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;三、前端框架（主体实施结束，devtools、组件库、开源工作进行中）&lt;/p&gt;&lt;p&gt;前端的领域问题不同，它处理的是单用户，天然事件驱动的场景。里面的关键问题是设计资源到前端的自动化、组件的复用等。这一部分之后再单独写一篇说明吧。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;四、系统的可视化工具（部分已实施）&lt;/p&gt;&lt;p&gt;需求描述语言中的大部分其实都是可以可视化的，例如有哪些页面，他们之间的跳转关系，这些信息可以生成一张产品地图。这个可视化系统的重点不是用可视化地方式去搭建(当然搭建也是可以做得)，而是它既可以像一张产品说明书来引导维护系统，也可以作为中枢来串联其他信息。例如测试发现了某个页面有问题，我们完全可以在这个可视化工具上找到相应的页面，标注问题，省去了截图、复制链接等繁琐的操作。同样开发的时候也可以把那个页面已经开发完了，模型开发完了等信息自动同步到这个工具上。省去了人肉的沟通。&lt;/p&gt;&lt;p&gt;这也就是前面提到过的“围绕交付物”的项目管理和协作。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;五、IDE（原型版，需要部分重构使用新前端框架）&lt;/p&gt;&lt;p&gt;为了更好地让用户写需求描述语言，基于它的语义提供更好的提示。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;“&lt;b&gt;组织基建&lt;/b&gt;”指的是用来帮助进行组织管理、通信、软件交付的工具，传统的内部文档系统、项目管理系统都算。在更远的未来我认为它比研发基建更加重要，它决定了我是否能达成不管在哪里办公都很好的和交流协作。是否能达成真正摆脱工作地点、时间的限制。&lt;/p&gt;&lt;p&gt;目前规划的组织基建中一部分就是是和上面研发基建中的系统可视化工具结合的任务管理。&lt;/p&gt;&lt;p&gt;另一部分是“组织的思维交流协作工具(未实施)”，可以暂时理解为在线多用户可编辑的脑图，但其联系方式等要远多于脑图。意图取代掉传统的文件树形式的组织内知识管理、需求等信息的传递。期望达到架构图不是在 ppt 上，而是在这个活着的系统中，能看到进度、演化历史。需求也是，战略也是。让所有信息都不再是碎片化地零散的。&lt;/p&gt;&lt;p&gt;对此感兴趣的请单独联系我，这个可以独立开发。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;h2&gt;3. 怎么参与&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;请简单介绍你自己（如果有任何公开的文章或者资料可以直接发链接给我，我会认真读）：&lt;/li&gt;&lt;ol&gt;&lt;li&gt;你的能力和主要经历&lt;/li&gt;&lt;li&gt;你目前的工作、状态&lt;/li&gt;&lt;li&gt;你对这个计划的想法，想了解或者参与的部分&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;请以面试官的角度来想想你要问我什么问题(是的，反向以你面试我的角度来提问)，把你自己当做投资人，你投入的是你的精力和时间。&lt;/li&gt;&lt;li&gt;在我上面的会打中其实有一部分我对伙伴的“契约”，例如进行系统性地学科学习，追求创造的力量等等。请确保你能接受并且想象你是否也有“契约”要我达成。&lt;/li&gt;&lt;li&gt;感谢你看到这里。&lt;/li&gt;&lt;/ol&gt;&lt;p/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4853a6347779970041aa54b514fb1018</guid>
<title>RTE 2020 实时互联网大会参会指南——今天我们线上见！</title>
<link>https://toutiao.io/k/bd86jqe</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;声网Agora&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;shengwang-agora&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;声网Agora成立于2013年，是全球实时互动云行业开创者。声网Agora为开发者提供简单易用、高度可定制和广泛兼容的API。开发者无需研发或构建底层基础设施，只需调用API即可在应用内构建多种实时音视频互动场景。&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0b58f0d90a09708521367211bef07ce9</guid>
<title>深入了解 ActiveMQ</title>
<link>https://toutiao.io/k/19sjvs1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;认识MQ(Message Queue)&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;什么是消息队列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.3995037220843674&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PxMzT0Oibf4jN40XA8Jt3ZMYrDNxocPIFkRtllxDaIBu6RmwOicC1d5ImmKKYJolYPeeropAuYoTrpDQgYSZJAvw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;403&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;消息队列&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先我们先从以下几个维度来认识一下消息队列：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;消息队列：一般我们会简称它为MQ(MessageQueue)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消息(Message):传输的数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;队列(Queue):队列是一种先进先出的数据结构。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消息队列从字面的含义来看就是一个存放消息的容器。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消息队列可以简单理解为：把要传输的数据放在队列中。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;把数据放到消息队列叫做生产者。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;从消息队列里边取数据叫做消费者。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;为什么需要消息队列&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用消息队列主要是基于以下三个主要场景：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面我们分场景来描述下使用消息队列带来的好处&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;解耦&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设我们有一个用户系统A，用户系统A可以产生一个userId。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后，现在有系统B和系统C都需要这个userId去做相关的操作。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5014577259475219&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PxMzT0Oibf4jN40XA8Jt3ZMYrDNxocPIFDGPMrw8725NZOVdLIfLJaomsFfUhwAZBF2uffyIlE0Q5TJatLmjOqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1029&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;解耦前架构&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪码大致如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;java&lt;br/&gt;public class SystemA {&lt;br/&gt;    // 系统B和系统C的依赖&lt;br/&gt;    SystemB systemB = new SystemB();&lt;br/&gt;    SystemC systemC = new SystemC();&lt;br/&gt;    // 系统A独有的数据userId&lt;br/&gt;    private String userId = &lt;span&gt;&quot;activeMq-1234567890&quot;&lt;/span&gt;;&lt;br/&gt;    public void &lt;span&gt;&lt;span&gt;doSomething&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;        // 系统B和系统C都需要拿着系统A的userId去操作其他的事&lt;br/&gt;        systemB.SystemBNeed2do(userId);&lt;br/&gt;        systemC.SystemCNeed2do(userId);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「这样类似的业务场景大家是不是很熟悉，大家是不是这样写很合情合理，也很简单。」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;某一天，系统B的负责人告诉系统A的负责人，现在系统B的SystemBNeed2do(String userId)这个接口不再使用了，让系统A别去调它了。&lt;br/&gt;于是，系统A的负责人说&quot;好的，那我就不调用你了。&quot;，于是就把调用系统B接口的代码给删掉了。代码变成这样了：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;java&lt;br/&gt;public void &lt;span&gt;&lt;span&gt;doSomething&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;  // 系统A不再调用系统B的接口了&lt;br/&gt;  //systemB.SystemBNeed2do(userId);&lt;br/&gt;  systemC.SystemCNeed2do(userId);&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于业务需要，系统D说也需要用到系统A的userId，于是代码改成了这样：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;java&lt;br/&gt;public void &lt;span&gt;&lt;span&gt;doSomething&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;        // 已经不再需要系统B的依赖了&lt;br/&gt;        //systemB.SystemBNeed2do(userId);&lt;br/&gt;        // 系统C和系统D都需要拿着系统A的userId去操作其他的事&lt;br/&gt;        systemC.SystemCNeed2do(userId);&lt;br/&gt;        systemD.SystemDNeed2do(userId);&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当前系统A、B、C、D系统的交互是这样子的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7065592635212888&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PxMzT0Oibf4jN40XA8Jt3ZMYrDNxocPIF868vlZMtLYs9Vwu8SeZOEPeCrWVibHj3LgfVvjkHg3x4P66uzjc6Vew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;869&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;系统交互&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着业务需求的变化，代码也要一遍一遍的修改。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还会存在另外一个问题，调用系统C的时候，如果系统C挂了，系统A还要想办法处理。如果调用系统D时，由于网络延迟，请求超时了，那系统A是反馈fail还是重试？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么怎么去解决这样的现状呢，如何从频繁的修改代码中解脱呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时候我们就引入一层消息队列中间件，交互图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5274480712166172&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PxMzT0Oibf4jN40XA8Jt3ZMYrDNxocPIFUicMG6CURWNLzgXGk5rSGhlGYypagvVGzHfLk2XjjL0JU2wL9YCjSBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1348&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;解耦&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将系统A产生的userId写到消息队列中，系统C和系统D从消息队列中拿数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样有什么好处？&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;系统A只负责把数据写到队列中，谁想要或不想要这个数据(消息)，系统A一点都不关心。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;即便现在系统D不想要userId这个数据了，系统B又突然想要userId这个数据了，都跟系统A无关，系统A一点代码都不用改。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;系统D拿userId不再经过系统A，而是从消息队列里边拿。系统D即便挂了或者请求超时，都跟系统A无关，&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只跟消息队列有关。这样一来，系统A与系统B、C、D都解耦了。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;异步&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统A做的是主要的业务，而系统B、C、D是非主要的业务。比如系统A处理的是订单下单，而系统B是订单下单成功了，那发送一条短信告诉具体的用户此订单已成功，而系统C和系统D也是处理一些小事而已。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么此时，为了提高用户体验和吞吐量，其实可以异步地调用系统B、C、D的接口。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5387840670859538&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PxMzT0Oibf4jN40XA8Jt3ZMYrDNxocPIFFKCbZaff0Gt6FMKLeUtpiaffPRp6f1Heoy40O5ic6lrf6Jf7cJKKVOxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;954&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;异步&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;削峰/限流&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们再来一个场景，现在我们每个月要搞一次大促，大促期间的并发可能会很高的，比如每秒3000个请求。假设我们现在有两台机器处理请求，并且每台机器只能每次处理1000个请求。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7297297297297297&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PxMzT0Oibf4jN40XA8Jt3ZMYrDNxocPIFoGhm3p1ceAodzKEushicNWsUB5631A0K2bq3ibCqudWzltVENSKy37cA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;703&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;削峰前&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统B和系统C根据自己的能够处理的请求数去消息队列中拿数据，这样即便有每秒有8000个请求，那只是把请求放在消息队列中，去拿消息队列的消息由系统自己去控制，这样就不会把整个系统给搞崩。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6457800511508951&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PxMzT0Oibf4jN40XA8Jt3ZMYrDNxocPIF5HvaKZbg7jLniagq9ElRiaicnNb8jrPGwJ4mdlXibYdEawRbxEMvTBl6mQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;782&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;削峰/限流&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;什么是JMS MQ&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;全称：Java MessageService 中文：Java 消息服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JMS 是 Java 的一套 API 标准，最初的目的是为了使应用程序能够访问现有的MOM 系 统（MOM 是 MessageOriented Middleware 的英文缩写，指的是利用高效可靠的消息传递机制进行平台无关的数据交流，并基于数据通信来进行分布式系统的集成。） 后来被许多现有的 MOM 供应商采用，并实现为MOM 系统。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见 MOM 系统包括 Apache的 ActiveMQ、阿里巴巴的 RocketMQ、IBM 的 MQSeries、Microsoft
的 MSMQ、BEA 的 RabbitMQ 等。（并非全部的 MOM 系统都遵循JMS 规范）】&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于 JMS 实现的 MOM，又被称为JMSProvider。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;JMS中的一些概念&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Broker」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息服务器，作为server提供消息核心服务&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Provider 生产者」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息生产者是由会话创建的一个对象，用于把消息发动到一个目的地&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Consumer 消费者」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息消费者是由会话创建的一个对象，它用于接收发送到目的地的消息。消息的消费可以采用以下两种方法：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同步消费。通过调用消费者的receive方法从目的地中显式提取消息。receive方法可以一直阻塞到消息到达。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;异步消费。客户可以为消费者注册一个消息监听器，以定义在消息到达时所采取的动作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「P2P 点对点消息模型」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息生产者生产消息发送到queue 中，然后消息消费者从queue 中取出并且消费消息。消息被消费以后，queue 中不再有存储，所以消息消费者不可能消费到已经被消费的消息。Queue支持存在多个消费者，但是对一个消息而言，只会有一个消费者可以消费、其它的则不能消费此消息了。当消费者不存在时，消息会一直保存，直到有消费消费。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Pub/Sub 发布订阅消息模型」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息生产者（发布）将消息发布到topic 中，同时有多个消息消费者（订阅）消费该消息。和点对点方式不同，发布到 topic 的消息会被所有订阅者消费。当生产者发布消息，不管是否有消费者。都不会保存消息一定要先有消息的消费者，后有消息的生产者。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「P2P vs Pub/Sub」&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5631911532385466&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PxMzT0Oibf4jN40XA8Jt3ZMYrDNxocPIFlcZPziaQyuSQYTm4NUhlFms3icKtVKyNGrOgpxZXOQsnoA2zLcoZSEfQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1266&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;P2P vs Pub/Sub&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Queue」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;队列存储，常用于点对点消息模型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;默认只能由唯一的一个消费者处理。一旦处理消息删除。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Topic」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主题存储，用于订阅/发布消息模型&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主题中的消息，会发送给所有的消费者同时处理。只有在消息可以重复处理的业务场景中可使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「ConnectionFactory」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;连接工厂，jms中用它创建连接&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;连接工厂是客户用来创建连接的对象，例如ActiveMQ提供的ActiveMQConnectionFactory。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Connection」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JMS Connection封装了客户与JMS提供者之间的一个虚拟的连接。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Destination 消息的目的地」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目的地是客户用来指定它生产的消息的目标和它消费的消息的来源的对象。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;订阅一个主题的消费者只能消费自它订阅之后发布的消息。JMS规范允许客户创建持久订阅，这在一定程度上放松了时间上的相关性要求。持久订阅允许消费者消费它在未处于激活状态时发送的消息。在点对点消息传递域中，目的地被成为队列（queue）；在发布/订阅消息传递域中，目的地被成为主题（topic）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Session」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JMS Session是生产和消费消息的一个单线程上下文。会话用于创建消息生产者（producer）、消息消费者（consumer）和消息（message）等。会话提供了一个事务性的上下文，在这个上下文中，一组发送和接收被组合到了一个原子操作中。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;消息可靠性机制&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「确认 JMS消息」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只有在被确认之后，才认为已经被成功地消费了。消息的成功消费通常包含三个阶段：客户接收消息、客户处理消息和消息被确认。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在事务性会话中，当一个事务被提交的时候，确认自动发生。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在非事务性会话中，消息何时被确认取决于创建会话时的应答模式（acknowledgement mode）。该参数有以下三个可选值：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Session.AUTO_ACKNOWLEDGE」&lt;/strong&gt;。当客户成功的从receive方法返回的时候，或者从MessageListener.onMessage方法成功返回的时候，会话自动确认客户收到的消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Session.CLIENT_ACKNOWLEDGE」&lt;/strong&gt;。客户通过消息的acknowledge方法确认消息。需要注意的是，在这种模式中，确认是在会话层上进行：确认一个被消费的消息将自动确认所有已被会话消费的消息。例如，如果一个消息消费者消费了10个消息，然后确认第5个消息，那么所有10个消息都被确认。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「Session.DUPS_ACKNOWLEDGE」&lt;/strong&gt;。该选择只是会话迟钝的确认消息的提交。如果JMS Provider失败，那么可能会导致一些重复的消息。如果是重复的消息，那么JMS Provider必须把消息头的JMSRedelivered字段设置为true。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「持久性」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JMS 支持以下两种消息提交模式：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「PERSISTENT」&lt;/strong&gt;。指示JMSProvider持久保存消息，以保证消息不会因为JMS Provider的失败而丢失。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「NON_PERSISTENT」&lt;/strong&gt;。不要求JMS Provider持久保存消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「优先级」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以使用消息优先级来指示JMS Provider首先提交紧急的消息。优先级分10个级别，从0（最低）到9（最高）。如果不指定优先级，默认级别是4。&lt;strong&gt;「需要注意的是，JMSProvider并不一定保证按照优先级的顺序提交消息。」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「消息过期」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以设置消息在一定时间后过期，默认是永不过期&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「临时目的地」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以通过会话上的createTemporaryQueue方法和createTemporaryTopic方法来创建临时目的地。它们的存在时间只限于创建它们的连接所保持的时间。只有创建该临时目的地的连接上的消息消费者才能够从临时目的地中提取消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「持久订阅」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先消息生产者必须使用PERSISTENT提交消息。客户可以通过会话上的createDurableSubscriber方法来创建一个持久订阅，该方法的第一个参数必须是一个topic，第二个参数是订阅的名称。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JMS Provider会存储发布到持久订阅对应的topic上的消息。如果最初创建持久订阅的客户或者任何其它客户使用相同的连接工厂和连接的客户ID、相同的主题和相同的订阅名再次调用会话上的createDurableSubscriber方法，那么该持久订阅就会被激活。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JMS Provider会向客户发送客户处于非激活状态时所发布的消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;持久订阅在某个时刻只能有一个激活的订阅者。持久订阅在创建之后会一直保留，直到应用程序调用会话上的unsubscribe方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「本地事务」&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在一个JMS客户端，可以使用本地事务来组合消息的发送和接收。JMS Session接口提供了commit和rollback方法。事务提交意味着生产的所有消息被发送，消费的所有消息被确认；事务回滚意味着生产的所有消息被销毁，消费的所有消息被恢复并重新提交，除非它们已经过期。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事务性的会话总是牵涉到事务处理中，commit或rollback方法一旦被调用，一个事务就结束了，而另一个事务被开始。关闭事务性会话将回滚其中的事务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要注意的是，如果使用请求/回复机制，即发送一个消息，同时希望在同一个事务中等待接收该消息的回复，那么程序将被挂起，因为知道事务提交，发送操作才会真正执行。需要注意的还有一个，消息的生产和消费不能包含在同一个事务中。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;ActiveMQ&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;存储&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ActiveMQ支持很多种存储方式，常见的有 KahaDB存储，AMQ存储，JDBC存储，LevelDB存储，Memory
消息存储。我们重点介绍一下KahaDB和JDBC存储方式。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;KahaDB存储&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;KahaDB是默认的持久化策略，所有消息顺序添加到一个日志文件中，同时另外有一个索引文件记录指向这些日志的存储地址，还有一个事务日志用于消息回复操作。是一个专门针对消息持久化的解决方案,它对典型的消息使用模式进行了优化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在data/kahadb这个目录下，会生成四个文件，来完成消息持久化 db.data 它是消息的索引文件，本质上是B-Tree（B树），使用B-Tree作为索引指向db-*.log里面存储的消息 db.redo 用来进行消息恢复 *db-.log 存储消息内容。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.19768934531450577&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PxMzT0Oibf4jN40XA8Jt3ZMYrDNxocPIFMpzRUmBPcsxs4tia4km3bDHCTZ9aMVkks4w4DwP515o3IjjnAACZOdQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;779&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;kahadb文件结构&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;新的数据以APPEND的方式追加到日志文件末尾。属于顺序写入，因此消息存储是比较 快的。默认是32M，达到阀值会自动递增 lock文件 锁，写入当前获得kahadb读写权限的broker ，用于在集群环境下的竞争处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;KahaDB有如下几个特性：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;日志形式存储消息；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;消息索引以 B-Tree 结构存储，可以快速更新；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;完全支持 JMS 事务；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持多种恢复机制kahadb 可以限制每个数据文件的大小。不代表总计数据容量。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置方式如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;persistenceAdapter&amp;gt;&lt;br/&gt;    &amp;lt;kahaDB directory=&lt;span&gt;&quot;${activemq.data}/kahadb&quot;&lt;/span&gt;/&amp;gt;&lt;br/&gt;&amp;lt;/persistenceAdapter&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;JDBC 存储&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;支持通过 JDBC 将消息存储到关系数据库，性能上不如文件存储，能通过关系型数据库查询到消息的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MQ 支持的数据库：Apache Derby、MySQL、PostgreSQL、Oracle、SQLServer、Sybase、Informix、MaxDB。使用JDBC存储需要用到下面三张数据表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「activemq_acks」&lt;/strong&gt;：用于存储订阅关系。如果是持久化Topic，订阅者和服务器的订阅关系在这个表保存。主要的数据库字段如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;container：消息的destination&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;sub_dest：如果是使用static集群，这个字段会有集群其他系统的信息&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;client_id：每个订阅者都必须有一个唯一的客户端id用以区分&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;sub_name：订阅者名称&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;selector：选择器，可以选择只消费满足条件的消息。条件可以用自定义属性实现，可支持多属性and和or操作&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;last_acked_id：记录消费过的消息的id。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「activemq_lock」&lt;/strong&gt;：在集群环境中才有用，只有一个Broker可以获得消息，称为Master Broker，其他的只能作为备份等待Master Broker不可用，才可能成为下一个Master Broker。这个表用于记录哪个Broker是当前的Master Broker。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「activemq_msgs」&lt;/strong&gt;：用于存储消息，Queue和Topic都存储在这个表中。主要的数据库字段如下&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;id：自增的数据库主键&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;container：消息的destination&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;msgid_prod：消息发送者客户端的主键&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;msg_seq：是发送消息的顺序，msgid_prod+msg_seq可以组成jms的messageid&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;expiration：消息的过期时间，存储的是从1970-01-01到现在的毫秒数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;msg：消息本体的java序列化对象的二进制数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;priority：优先级，从0-9，数值越大优先级越高&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;xid:topic&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置方式如下：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;配置数据源 conf/acticvemq.xml 文件：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;bean id=&lt;span&gt;&quot;mysql-ds&quot;&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span&gt;&quot;org.apache.commons.dbcp.BasicDataSource&quot;&lt;/span&gt; destroy-method=&lt;span&gt;&quot;close&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;   &amp;lt;property name=&lt;span&gt;&quot;driverClassName&quot;&lt;/span&gt; value=&lt;span&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;/&amp;gt;&lt;br/&gt;   &amp;lt;property name=&lt;span&gt;&quot;url&quot;&lt;/span&gt; value=&lt;span&gt;&quot;jdbc:mysql://localhost:3306/activemq?relaxAutoCommit=true&quot;&lt;/span&gt;/&amp;gt;&lt;br/&gt;   &amp;lt;property name=&lt;span&gt;&quot;username&quot;&lt;/span&gt; value=&lt;span&gt;&quot;root&quot;&lt;/span&gt;/&amp;gt;&lt;br/&gt;   &amp;lt;property name=&lt;span&gt;&quot;password&quot;&lt;/span&gt; value=&lt;span&gt;&quot;111111&quot;&lt;/span&gt;/&amp;gt;&lt;br/&gt;   &amp;lt;property name=&lt;span&gt;&quot;maxActive&quot;&lt;/span&gt; value=&lt;span&gt;&quot;200&quot;&lt;/span&gt;/&amp;gt;&lt;br/&gt;   &amp;lt;property name=&lt;span&gt;&quot;poolPreparedStatements&quot;&lt;/span&gt; value=&lt;span&gt;&quot;true&quot;&lt;/span&gt;/&amp;gt;&lt;br/&gt;&amp;lt;/bean&amp;gt;   &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;配置 broke 中的 persistenceAdapter
dataSource 指定持久化数据库的 bean，createTablesOnStartup 是否在启动的时候创建数据表，默认值是 true，这样每次启动都会去创建数据表了，一般是第一次启动的时候设置为 true，之后改成 false。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;persistenceAdapter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&amp;lt;&lt;span&gt;jdbcPersistenceAdapter&lt;/span&gt; &lt;span&gt;dataSource&lt;/span&gt;=&lt;span&gt;&quot;#mysql-ds&quot;&lt;/span&gt;  &lt;span&gt;createTablesOnStartup&lt;/span&gt;=&lt;span&gt;&quot;false&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;persistenceAdapter&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;协议&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ActiveMQ支持的client-broker通讯协议有：TCP、NIO、UDP、SSL、Http(s)、VM。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;Transmission Control Protocol (TCP)&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是默认的Broker配置，TCP的Client监听端口是61616。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在网络传输数据前，必须要序列化数据，消息是通过一个叫wire protocol的来序列化成字节流。默认情况下，ActiveMQ把wire protocol叫做OpenWire，它的目的是促使网络上的效率和数据快速交互。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;TCP连接的URI形式：&lt;code&gt;tcp://hostname:port?key=value&amp;amp;key=value&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;TCP传输的优点：(1)TCP协议传输可靠性高，稳定性强 (2)高效性：字节流方式传递，效率很高 (3)有效性、可用性：应用广泛，支持任何平台&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;New I/O API Protocol（NIO）&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;NIO协议和TCP协议类似，但NIO更侧重于底层的访问操作。它允许开发人员对同一资源可有更多的client调用和服务端有更多的负载。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;适合使用NIO协议的场景：(1)可能有大量的Client去链接到Broker上一般情况下，大量的Client去链接Broker是被操作系统的线程数所限制的。因此，NIO的实现比TCP需要更少的线程去运行，所以建议使用NIO协议
(2)可能对于Broker有一个很迟钝的网络传输NIO比TCP提供更好的性能&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;NIO连接的URI形式：&lt;code&gt;nio://hostname:port?key=value&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Transport Connector配置示例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;transportConnectors&amp;gt;&lt;br/&gt;  &amp;lt;transportConnector&lt;br/&gt;    name=&lt;span&gt;&quot;nio&quot;&lt;/span&gt;&lt;br/&gt;    uri=&lt;span&gt;&quot;nio://localhost:61618?trace=true&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;&amp;lt;/transportConnectors&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;User Datagram Protocol（UDP)&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;UDP和TCP的区别
(1)TCP是一个原始流的传递协议，意味着数据包是有保证的，换句话说，数据包是不会被复制和丢失的。UDP，另一方面，它是不会保证数据包的传递的
(2)TCP也是一个稳定可靠的数据包传递协议，意味着数据在传递的过程中不会被丢失。这样确保了在发送和接收之间能够可靠的传递。相反，UDP仅仅是一个链接协议，所以它没有可靠性之说&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上面可以得出：TCP是被用在稳定可靠的场景中使用的；UDP通常用在快速数据传递和不怕数据丢失的场景中，还有ActiveMQ通过防火墙时，只能用UDP&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;UDP连接的URI形式：&lt;code&gt;udp://hostname:port?key=value&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Transport Connector配置示例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;transportConnectors&amp;gt;&lt;br/&gt;    &amp;lt;transportConnector&lt;br/&gt;        name=&lt;span&gt;&quot;udp&quot;&lt;/span&gt;&lt;br/&gt;        uri=&lt;span&gt;&quot;udp://localhost:61618?trace=true&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;&amp;lt;/transportConnectors&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;Active MQ的安全机制&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「web控制台安全」&lt;/strong&gt;&lt;br/&gt;修改jetty-realm.properties&lt;br/&gt;&lt;code&gt;# username: password [,rolename ...]（用户名：密码 角色）&lt;/code&gt;&lt;br/&gt;注意：配置需重启ActiveMQ才会生效&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「消息安全机制」&lt;/strong&gt;&lt;br/&gt;修改activemq.xml 在中添加如下代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;&lt;span&gt;simpleAuthenticationPlugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;&amp;lt;&lt;span&gt;users&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;              &lt;span&gt;&amp;lt;&lt;span&gt;authenticationUser&lt;/span&gt; &lt;span&gt;username&lt;/span&gt;=&lt;span&gt;&quot;admin&quot;&lt;/span&gt; &lt;span&gt;password&lt;/span&gt;=&lt;span&gt;&quot;admin&quot;&lt;/span&gt; &lt;span&gt;groups&lt;/span&gt;=&lt;span&gt;&quot;admins,publishers,consumers&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;              &lt;span&gt;&amp;lt;&lt;span&gt;authenticationUser&lt;/span&gt; &lt;span&gt;username&lt;/span&gt;=&lt;span&gt;&quot;publisher&quot;&lt;/span&gt; &lt;span&gt;password&lt;/span&gt;=&lt;span&gt;&quot;publisher&quot;&lt;/span&gt;  &lt;span&gt;groups&lt;/span&gt;=&lt;span&gt;&quot;publishers,consumers&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;              &lt;span&gt;&amp;lt;&lt;span&gt;authenticationUser&lt;/span&gt; &lt;span&gt;username&lt;/span&gt;=&lt;span&gt;&quot;consumer&quot;&lt;/span&gt; &lt;span&gt;password&lt;/span&gt;=&lt;span&gt;&quot;consumer&quot;&lt;/span&gt; &lt;span&gt;groups&lt;/span&gt;=&lt;span&gt;&quot;consumers&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;              &lt;span&gt;&amp;lt;&lt;span&gt;authenticationUser&lt;/span&gt; &lt;span&gt;username&lt;/span&gt;=&lt;span&gt;&quot;guest&quot;&lt;/span&gt; &lt;span&gt;password&lt;/span&gt;=&lt;span&gt;&quot;guest&quot;&lt;/span&gt;  &lt;span&gt;groups&lt;/span&gt;=&lt;span&gt;&quot;guests&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;&amp;lt;/&lt;span&gt;users&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;&amp;lt;/&lt;span&gt;simpleAuthenticationPlugin&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&amp;lt;/&lt;span&gt;plugins&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;ActiveMQ 使用&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在java中使用ActiveMQ只需要引入相关依赖&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.activemq&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;activemq-all&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;5.15.11&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编写生产者&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Sender&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; JMSException &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;// 1. 建立工厂对象，&lt;/span&gt;&lt;br/&gt; ActiveMQConnectionFactory acf = &lt;span&gt;new&lt;/span&gt; ActiveMQConnectionFactory(ActiveMQConnectionFactory.DEFAULT_USER,ActiveMQConnectionFactory.DEFAULT_PASSWORD,&lt;span&gt;&quot;tcp://localhost:61618&quot;&lt;/span&gt;);&lt;br/&gt; &lt;span&gt;//2 从工厂里拿一个连接&lt;/span&gt;&lt;br/&gt; Connection connection = acf.createConnection();&lt;br/&gt; connection.start();&lt;br/&gt; &lt;span&gt;//3 从连接中获取Session(会话)&lt;/span&gt;&lt;br/&gt; Session session = connection.createSession(&lt;span&gt;false&lt;/span&gt;, Session.AUTO_ACKNOWLEDGE);&lt;br/&gt; &lt;span&gt;//4 从会话中获取目的地(Destination)消费者会从这个目的地取消息&lt;/span&gt;&lt;br/&gt; Queue queue = session.createQueue(&lt;span&gt;&quot;mq.test&quot;&lt;/span&gt;);&lt;br/&gt; &lt;span&gt;//5 从会话中创建消息提供者&lt;/span&gt;&lt;br/&gt; MessageProducer producer = session.createProducer(queue);&lt;br/&gt; &lt;span&gt;//6 从会话中创建文本消息(也可以创建其它类型的消息体)&lt;/span&gt;&lt;br/&gt; TextMessage message = session.createTextMessage(&lt;span&gt;&quot;msg: hello world&quot;&lt;/span&gt;);&lt;br/&gt; &lt;span&gt;//7 通过消息提供者发送消息到ActiveMQ&lt;/span&gt;&lt;br/&gt; producer.send(message);&lt;br/&gt; &lt;span&gt;//8 关闭连接&lt;/span&gt;&lt;br/&gt; connection.close();&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编写消费者&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Receiver&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; JMSException &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;// 1. 建立工厂对象，&lt;/span&gt;&lt;br/&gt; ActiveMQConnectionFactory acf = &lt;span&gt;new&lt;/span&gt; ActiveMQConnectionFactory(ActiveMQConnectionFactory.DEFAULT_USER,ActiveMQConnectionFactory.DEFAULT_PASSWORD,&lt;span&gt;&quot;tcp://localhost:61618&quot;&lt;/span&gt;);&lt;br/&gt; &lt;span&gt;//2 从工厂里拿一个连接&lt;/span&gt;&lt;br/&gt; Connection connection = acf.createConnection();&lt;br/&gt; connection.start();&lt;br/&gt; &lt;span&gt;//3 从连接中获取Session(会话)&lt;/span&gt;&lt;br/&gt; Session session = connection.createSession(&lt;span&gt;false&lt;/span&gt;, Session.AUTO_ACKNOWLEDGE);&lt;br/&gt; &lt;span&gt;//4 从会话中获取目的地(Destination)消费者会从这个目的地取消息&lt;/span&gt;&lt;br/&gt; Queue queue = session.createQueue(&lt;span&gt;&quot;mq.test&quot;&lt;/span&gt;);&lt;br/&gt; &lt;span&gt;//5 从会话中创建消息消费者&lt;/span&gt;&lt;br/&gt; MessageConsumer consumer = session.createConsumer(queue);&lt;br/&gt; &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;){&lt;br/&gt;  &lt;span&gt;//6 消费者接收消息&lt;/span&gt;&lt;br/&gt;  Message msg = consumer.receive();&lt;br/&gt;  TextMessage textMessage = (TextMessage) msg;&lt;br/&gt;  System.out.println(&lt;span&gt;&quot;text:&quot;&lt;/span&gt;+textMessage.getText());&lt;br/&gt;  }&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;常用API及特性&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;事务消息&lt;br/&gt;&lt;code&gt;Session session = connection.createSession(true, Session.AUTO_ACKNOWLEDGE);&lt;br/&gt;&lt;/code&gt;提交事务：session.commit();&lt;br/&gt;回滚事务：session.rollback();&lt;br/&gt;开启事务后，只有事务commit成功，消息才会发送到MQ中&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;持久化&lt;br/&gt;默认持久化是开启的；&lt;br/&gt;开启非持久化示例代码：&lt;br/&gt;&lt;code&gt;producer.setDeliveryMode(DeliveryMode.NON_PERSISTENT)&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设置消息优先级&lt;br/&gt;&lt;code&gt;producer.setPriority();&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设置消息超时/过期时间&lt;br/&gt;&lt;code&gt;producer.setTimeToLive&lt;/code&gt;&lt;br/&gt;设置了消息超时的消息，消费端在超时后无法在消费到此消息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;死信&lt;br/&gt;此类消息会进入到ActiveMQ.DLQ队列且不会自动清除，称为死信，有消息堆积的风险。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;签收模式&lt;br/&gt;签收代表接收端的session已收到消息的一次确认，反馈给broker&lt;br/&gt;如果session带有事务，并且事务成功提交，则消息被自动签收。如果事务回滚，则消息会被再次传送。&lt;br/&gt;&lt;br/&gt;消息事务是在生产者producer到broker或broker到consumer过程中同一个session中发生的，保证几条消息在发送过程中的原子性。在支持事务的session中，producer发送message时在message中带有transactionID。broker收到message后判断是否有transactionID，如果有就把message保存在transaction store中，等待commit或者rollback消息。&lt;br/&gt;&lt;br/&gt; ActiveMQ支持自动签收与手动签收&lt;br/&gt;&lt;strong&gt;「Session.AUTO_ACKNOWLEDGE」&lt;/strong&gt;&lt;br/&gt;当客户端从receiver或onMessage成功返回时，Session自动签收客户端的这条消息的收条。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;「Session.CLIENT_ACKNOWLEDGE」&lt;/strong&gt;&lt;br/&gt;客户端通过调用消息(Message)的acknowledge方法签收消息。在这种情况下，签收发生在Session层面：签收一个已经消费的消息会自动地签收这个Session所有已消费的收条。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;「Session.DUPS_OK_ACKNOWLEDGE」&lt;/strong&gt;&lt;br/&gt;Session不必确保对传送消息的签收，这个模式可能会引起消息的重复，但是降低了Session的开销，所以只有客户端能容忍重复的消息，才可使用。&lt;br/&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;独占消费者&lt;br/&gt;&lt;code&gt;Queue queue = session.createQueue(&quot;xxoo?consumer.exclusive=true&quot;);&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;发送异步消息&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;ActiveMQConnectionFactory connectionFactory = &lt;span&gt;new&lt;/span&gt; ActiveMQConnectionFactory(&lt;br/&gt;    &lt;span&gt;&quot;admin&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;admin&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;tcp://localhost:61616&quot;&lt;/span&gt;&lt;br/&gt;    );&lt;br/&gt;&lt;span&gt;// 2.获取一个向ActiveMQ的连接&lt;/span&gt;&lt;br/&gt;connectionFactory.setUseAsyncSend(&lt;span&gt;true&lt;/span&gt;);&lt;br/&gt;ActiveMQConnection connection = (ActiveMQConnection)connectionFactory.createConnection();&lt;br/&gt;connection.setUseAsyncSend(&lt;span&gt;true&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;消息堆积&lt;br/&gt;producer每发送一个消息，统计一下发送的字节数，当字节数达到ProducerWindowSize值时，需要等待broker的确认，才能继续发送。&lt;br/&gt;brokerUrl中设置: &lt;code&gt;tcp://localhost:61616?jms.producerWindowSize=1048576&lt;/code&gt;&lt;br/&gt;destinationUri中设置: &lt;code&gt;myQueue?producer.windowSize=1048576&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;延迟消息投递&lt;br/&gt;首先在配置文件中开启延迟和调度&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;broker&lt;/span&gt; &lt;span&gt;xmlns&lt;/span&gt;=&lt;span&gt;&quot;http://activemq.apache.org/schema/core&quot;&lt;/span&gt; &lt;span&gt;brokerName&lt;/span&gt;=&lt;span&gt;&quot;localhost&quot;&lt;/span&gt; &lt;span&gt;dataDirectory&lt;/span&gt;=&lt;span&gt;&quot;${activemq.data}&quot;&lt;/span&gt; &lt;span&gt;schedulerSupport&lt;/span&gt;=&lt;span&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;延迟发送示例代码：&lt;br/&gt;&lt;code&gt;message.setLongProperty(ScheduledMessage.AMQ_SCHEDULED_DELAY,10*1000);&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;ActiveMQConnectionFactory acf = &lt;span&gt;new&lt;/span&gt; ActiveMQConnectionFactory(ActiveMQConnectionFactory.DEFAULT_USER,&lt;br/&gt;  ActiveMQConnectionFactory.DEFAULT_PASSWORD,&lt;br/&gt;  &lt;span&gt;&quot;tcp://localhost:61618&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;//2 从工厂里拿一个连接&lt;/span&gt;&lt;br/&gt;Connection connection = acf.createConnection();&lt;br/&gt;connection.start();&lt;br/&gt;&lt;span&gt;//3 从连接中获取Session(会话)&lt;/span&gt;&lt;br/&gt;Session session = connection.createSession(&lt;span&gt;false&lt;/span&gt;, Session.AUTO_ACKNOWLEDGE);&lt;br/&gt;&lt;span&gt;//4 从会话中获取目的地(Destination)消费者会从这个目的地取消息&lt;/span&gt;&lt;br/&gt;Queue queue = session.createQueue(&lt;span&gt;&quot;mq.test&quot;&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;//5 从会话中创建消息消费者&lt;/span&gt;&lt;br/&gt;MessageConsumer consumer = session.createConsumer(queue);&lt;br/&gt;MyListener myListener = &lt;span&gt;new&lt;/span&gt; MyListener();&lt;br/&gt;MessageListener listener = myListener::receiveMessage;&lt;br/&gt;consumer.setMessageListener(listener);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;SpringBoot整合ActiveMQ&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;&amp;lt;dependency&amp;gt;&lt;br/&gt;     &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;br/&gt;     &amp;lt;artifactId&amp;gt;spring-boot-starter-activemq&amp;lt;/artifactId&amp;gt;&lt;br/&gt;&amp;lt;/dependency&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;server:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;  port:&lt;/span&gt; &lt;span&gt;80&lt;/span&gt;&lt;br/&gt;&lt;span&gt;spring:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;  activemq:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;    broker-url:&lt;/span&gt; &lt;span&gt;tcp://localhost:61618&lt;/span&gt;&lt;br/&gt;&lt;span&gt;    user:&lt;/span&gt; &lt;span&gt;admin&lt;/span&gt;&lt;br/&gt;&lt;span&gt;    password:&lt;/span&gt; &lt;span&gt;admin&lt;/span&gt;&lt;br/&gt;&lt;span&gt;    pool:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;      enabled:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;#连接池最大连接数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;      max-connections:&lt;/span&gt; &lt;span&gt;5&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;#空闲的连接过期时间，默认为30秒&lt;/span&gt;&lt;br/&gt;&lt;span&gt;      idle-timeout:&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;    packages:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;      trust-all:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;span&gt;  jms:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;    pub-sub-domain:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@EnableJms&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ActiveMqConfig&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;span&gt;// topic模式的ListenerContainer&lt;/span&gt;&lt;br/&gt; &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; JmsListenerContainerFactory&amp;lt;?&amp;gt; jmsListenerContainerTopic(ConnectionFactory activeMQConnectionFactory) {&lt;br/&gt;         DefaultJmsListenerContainerFactory bean = &lt;span&gt;new&lt;/span&gt; DefaultJmsListenerContainerFactory();&lt;br/&gt;         bean.setPubSubDomain(&lt;span&gt;true&lt;/span&gt;);&lt;br/&gt;         bean.setConnectionFactory(activeMQConnectionFactory);&lt;br/&gt;         &lt;span&gt;return&lt;/span&gt; bean;&lt;br/&gt;     }&lt;br/&gt;&lt;span&gt;// queue模式的ListenerContainer&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; JmsListenerContainerFactory&amp;lt;?&amp;gt; jmsListenerContainerQueue(ConnectionFactory activeMQConnectionFactory) {&lt;br/&gt;         DefaultJmsListenerContainerFactory bean = &lt;span&gt;new&lt;/span&gt; DefaultJmsListenerContainerFactory();&lt;br/&gt;         bean.setConnectionFactory(activeMQConnectionFactory);&lt;br/&gt;         &lt;span&gt;return&lt;/span&gt; bean;&lt;br/&gt;     }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MqProducerService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt; &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt; &lt;span&gt;private&lt;/span&gt; JmsMessagingTemplate jmsMessagingTemplate;&lt;br/&gt;  &lt;br/&gt; &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;sendStringQueue&lt;/span&gt;&lt;span&gt;(String destination, String msg)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  System.out.println(&lt;span&gt;&quot;send...&quot;&lt;/span&gt;);&lt;br/&gt;  ActiveMQQueue queue = &lt;span&gt;new&lt;/span&gt; ActiveMQQueue(destination);&lt;br/&gt;  jmsMessagingTemplate.afterPropertiesSet();&lt;br/&gt;  ConnectionFactory factory = jmsMessagingTemplate.getConnectionFactory();&lt;br/&gt;  &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;   Connection connection = factory.createConnection();&lt;br/&gt;   connection.start();&lt;br/&gt;&lt;br/&gt;   Session session = connection.createSession(&lt;span&gt;true&lt;/span&gt;, Session.AUTO_ACKNOWLEDGE);&lt;br/&gt;   Queue queue2 = session.createQueue(destination);&lt;br/&gt;&lt;br/&gt;   MessageProducer producer = session.createProducer(queue2);&lt;br/&gt;&lt;br/&gt;   TextMessage message = session.createTextMessage(&lt;span&gt;&quot;hahaha&quot;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;   producer.send(message);&lt;br/&gt;  } &lt;span&gt;catch&lt;/span&gt; (JMSException e) {&lt;br/&gt;   &lt;span&gt;// TODO Auto-generated catch block&lt;/span&gt;&lt;br/&gt;   e.printStackTrace();&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  jmsMessagingTemplate.convertAndSend(queue, msg);&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;sendStringQueueList&lt;/span&gt;&lt;span&gt;(String destination, String msg)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  System.out.println(&lt;span&gt;&quot;xxooq&quot;&lt;/span&gt;);&lt;br/&gt;  ArrayList&amp;lt;String&amp;gt; list = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;br/&gt;  list.add(&lt;span&gt;&quot;1&quot;&lt;/span&gt;);&lt;br/&gt;  list.add(&lt;span&gt;&quot;2&quot;&lt;/span&gt;);&lt;br/&gt;  jmsMessagingTemplate.convertAndSend(&lt;span&gt;new&lt;/span&gt; ActiveMQQueue(destination), list);&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@JmsListener&lt;/span&gt;(destination = &lt;span&gt;&quot;user&quot;&lt;/span&gt;,containerFactory = &lt;span&gt;&quot;jmsListenerContainerQueue&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;receiveStringQueue&lt;/span&gt;&lt;span&gt;(String msg)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        System.out.println(&lt;span&gt;&quot;接收到消息....&quot;&lt;/span&gt; + msg);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@JmsListener&lt;/span&gt;(destination = &lt;span&gt;&quot;ooo&quot;&lt;/span&gt;,containerFactory = &lt;span&gt;&quot;jmsListenerContainerTopic&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;receiveStringTopic&lt;/span&gt;&lt;span&gt;(String msg)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;     System.out.println(&lt;span&gt;&quot;接收到消息....&quot;&lt;/span&gt; + msg);&lt;br/&gt; }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;小结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文详细介绍了为什么需要引入消息队列，JMS、ActiveMQ的基础概念以及常用API，与原生JAVA整合及SpringBoot整合等知识点，可以让大家更好的了解ActiveMQ的使用场景及使用方式。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0d40df7b843f6b33f01f5578a1d431d5</guid>
<title>怎么样让自己的博客被谷歌和百度快速收录？</title>
<link>https://toutiao.io/k/49m1by4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-mpa-template=&quot;t&quot;&gt;&lt;section&gt;&lt;section&gt;点击蓝色字关注我们！&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;引言&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面我们有写到怎么搭建一个外网可访问的个人博客&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzIyMjQwMTgyNA==&amp;amp;mid=2247484719&amp;amp;idx=1&amp;amp;sn=961876cd6a6f24e0d549bc59e1fb30ee&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;《作为一个程序员居然还没有属于自己的一个博客？》&lt;/a&gt;，博客是搭建起来了,但是没有流量，百度搜不到，谷歌也搜不到是不是有点小缺陷。我们要怎么样让别人通过搜索引擎可以搜索到我们博客的内容，给我们带来自然流量呢？这就需要把我们的网站通过&lt;code&gt;seo&lt;/code&gt;进行优化。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;SEO是由英文Search Engine Optimization缩写而来， 中文意译为“搜索引擎优化”。SEO是指通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;百度收录&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面先看下被百度的效果吧。我们在百度搜索引擎中输入site:&amp;lt;域名&amp;gt;(site:javajr.cn)如果如下图所示就是说明我们的网站已经被百度收录了。如果没有被收录又该怎么让百度来收录你的网站列。&lt;img data-ratio=&quot;0.3040136635354398&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7hPiaEJgJyZ9ictAVWXCBcxrzYZKsCGVDQ9V37lBeLuXG2xtsf8XFFRzA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1171&quot;/&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;添加站点到百度&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们需要登录百度搜索资源平台， 只要是百度旗下的账号就可以， 登录成功之后在站点管理中点击添加网站，输入域名，按照步骤走。&lt;img data-ratio=&quot;0.38742393509127787&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7MYlcl8WIAfz9hOEstFfuzUmJRn5uVVP5FKbVRyQUjHQX2M6UpsBkRQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;986&quot;/&gt;接着第二步选择完网站的类型，这个自己看着办随便选，
第三步之后需要验证网站的所有权，验证网站所有权的方式有三种&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;文件验证
这个比较简单直接把需要的文件下载下来放入到hexo主题目录下的source文件夹下面：&lt;img data-ratio=&quot;0.4330708661417323&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7iclHxiajsEsqlJzdxcx3MoQyD2twn6Z7kDribjbY7HpMna3XzH5U60Jhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;889&quot;/&gt;然后执行下 hexo clean &amp;amp;&amp;amp; hexo g &amp;amp;&amp;amp; hexo d命令 等重新部署后可以看到然后域名后面加上文件名字https://javajr.cn/baidu_verify_7HQVhTjjiN.html访问下结果&lt;img data-ratio=&quot;0.23987034035656402&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7YXgz52gG0w7IY1UUPq1Z6PcFh8nUKxqoF9oMicDseDJFPNv4nnnvb9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;617&quot;/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;HTML标签验证&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;CNAME解析验证（推荐使用）
这个的话需要到域名供应商后台管理新增一条域名解析，以阿里云的域名解析为例：&lt;img data-ratio=&quot;0.12998266897746968&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7HpKsmicoKT2KE04dTIPibsApnvP3LZbSLdl0h2Nib949jKtp1lWT8PUicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1154&quot;/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;向百度推送网站的资源&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过上面的步骤，百度已经知道有我们网站的存在了，但是百度还不知道我们的网站上有什么内容，所以要向百度推送我们的内容。还是在百度资源搜索平台。我们可以看到有四种提交方式。&lt;img data-ratio=&quot;0.5137931034482759&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7DicfonkO6pY6vq43fVs6V4oLeI8CDsEjVLpuibicJgqz41TpF9IGaEtkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1160&quot;/&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;使用sitemap方式推送&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过sitemap方式推送我们需要先安装sitemap插件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;npm install hexo-generator-sitemap --save &lt;br/&gt;npm install hexo-generator-baidu-sitemap --save&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这两个插件是用来生成 Sitemap文件 的插件，而 Sitemap文件 是用来告诉搜索引擎我们的站点有哪些资源是可以抓取的。安装完成后我们执行hexo cl&amp;amp;&amp;amp;hexo g 命令后我们会发现在public 目录下面会多了baidusitemap.xml和sitemap.xml文件。我们打开文件可以看到生生的其实就是我们每篇文章的url，然后我们的文章url默认是年月日并且标题也是中文的，&lt;img data-ratio=&quot;0.06764168190127971&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7dvfWxBQPqoEU63RwgCvEckLic0XDKart96ZJ3RPHCGzrVF4hxBnzrxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;547&quot;/&gt;这种文章的链接是不利于seo搜索的目录太长，并且带有中文（不利于seo），而且如果文章的标题修改了一下，文章的url也就会跟着改变。像一些比较知名的博客网站比如说博客园我们修改了文章的标题，但是它的url时不会变得，url是个永久的。并且标题也不会有中文。&lt;img data-ratio=&quot;0.05574324324324324&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7Zgrwc4z51pN8eWoq277rVwma11oLBFbto4A4Vics444Hh07FE8hBlzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;592&quot;/&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;hexo-abbrlink&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;hexo-abbrlink是一个hexo博客链接永久化的解决方案。它可以支持使用不同的算法和进制对文章链接进行转换。&lt;img data-ratio=&quot;0.3984526112185687&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7BLtELPvZxPzHgUUcOsCmS6rXAsUEKjo4lXmuTwWnbAhC1a4ShvpGZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;517&quot;/&gt;安装&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;npm install hexo-abbrlink --save&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用
打开config.yml，修改permalink中类似这样&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;permalink: :year/:month:abbrlink.html&lt;br/&gt;abbrlink: &lt;br/&gt;  alg: crc32 &lt;span&gt;#算法选项：crc16丨crc32&lt;/span&gt;&lt;br/&gt;  rep: hex &lt;span&gt;#输出进制：dec为十进制，hex为十六进制&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后执行hexo clean &amp;amp;&amp;amp; hexo g 命令 我们可以发现永久链接生成如下：&lt;img data-ratio=&quot;1.0104712041884816&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7Fd0xvymje4t7IjXIrsGLEWCDcicZktLub1vPswBjWWFRzPhKwrxmVBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;382&quot;/&gt;永久url生成好了，我们重新部署后访问下http://javajr.cn/baidusitemap.xml可以得到如下&lt;img data-ratio=&quot;0.5038402457757296&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7NFnrxCM8JYdz6mXhTndrMUIsLj0uf2IV0LE5sYrgRt3xTDkP9zUpMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;651&quot;/&gt;然后我们再回到百度提交页面进行提交。&lt;img data-ratio=&quot;0.56286836935167&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7qia8bzt6rUTR0efdP7QGvIicJ8g4YdpUIvtsIvBDwIvs2tceibG0tLePw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1018&quot;/&gt;至此百度提交就完成了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;谷歌收录&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还是先看下谷歌收录的效果图：&lt;img data-ratio=&quot;0.569377990430622&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7O4lnylbHDCUCkMnq0PmWh2iaTbRyNOtoLKR3FrsTRCssOINr9jbexxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1045&quot;/&gt;对比百度&lt;code&gt;google&lt;/code&gt;的效率那就没法比，貌似一天左右站点就被收录了，百度差不多一个月才收录，但是收录方法是和百度是一样的。点击进入https://search.google.com/search-console/welcome&lt;img data-ratio=&quot;0.7264050901378579&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7Pkd612TG46uIaR9oeIZuWSWJZulKUbhTMKXb7Xib7DNUlhiadX6T8w9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;943&quot;/&gt;然后再回到谷歌的Search Console，添加自己的sitemap地址。在百度提交的时候这个就已经生成了。&lt;img data-ratio=&quot;0.37226970560303896&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAocHkDzBT6Ewx1aI3gjwdm7WI9TNwvhvLhZ8eSl5d1rDBzTAEVibEr6iaFmZReE7XgWZz4CPf28xic4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1053&quot;/&gt;至此的话我们就完成了博客被谷歌和百度的收录，其他的搜索引擎也是类似的，感兴趣的同学赶紧动手试一试吧。最后再说一句欢迎大佬们互换友链哦&lt;strong&gt;javajr.cn&lt;/strong&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;结束&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;由于自己才疏学浅，难免会有纰漏，假如你发现了错误的地方，还望留言给我指出来,我会对其加以修正。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果你觉得文章还不错，你的转发、分享、赞赏、点赞、留言就是对我最大的鼓励。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;感谢您的阅读,十分欢迎并感谢您的关注。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3649122807017544&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsApW7AbPSO6cAke5IVGZ6EvY4DYxOx2O5JHXyvuT3AvFhejcQzxjU0duhIRX2X9GKURhLsxZdED1aw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1710&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIyMjQwMTgyNA==&amp;amp;mid=2247483898&amp;amp;idx=1&amp;amp;sn=01acf93a2a0a51731e2a77b2211dbef3&amp;amp;chksm=e82f45b5df58cca39b0f206c8745d71fbdbecd4061b4593fe1df9c00381a823576e94b9b04bb&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/qu3ItokgsAo1jUTo8sNT1jrGDYvvov850zic0fwEicWOrM0IdZjNKZa9HgTQddnznI1HTwzXSR83lJJ3tMvOfksA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;                        &lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;amp;album_id=1425612340854390785&amp;amp;__biz=MzIyMjQwMTgyNA==#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAqfpTkwHI7G3wnrKWO75A63FBbWxjjGwXYjVaxCq8OZAo2U5iafPxpiadhyriadrGMibcGlUqfiauMxYCw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIyMjQwMTgyNA==&amp;amp;mid=2247483953&amp;amp;idx=1&amp;amp;sn=eaeca46be508e58612cffebb3faf31e3&amp;amp;chksm=e82f467edf58cf68163a4462a388d252a12f235821ba64aad927bec9829c9f77f9d42c01735c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsApS9vyqIFPVnnicmXmS72vZ1vLHQ0uRlvN9t8tPKVPgD8fOtATl1dlVMhibvtDsaAu2UkINm1t6gzwA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIyMjQwMTgyNA==&amp;amp;mid=2247483798&amp;amp;idx=1&amp;amp;sn=f473bae83727075f57945e7b371364f4&amp;amp;chksm=e82f45d9df58cccf853232cca6966b4eb3353319c4a192f23e9c61e8d13b15263bd123d061e5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.553125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/qu3ItokgsAq4fwdWI7g9ibibBcKOV1eadneUd71BQ9ia6MEYVyr57g1iaA6M4khW5w1TRpWndZbjeJ4vJohZiamibibUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;pre&gt;&lt;p&gt;&lt;span&gt;最近面试BAT，整理一份面试资料&lt;/span&gt;&lt;span&gt;《&lt;strong&gt;Java面试BATJ通关手册&lt;/strong&gt;》&lt;/span&gt;&lt;span&gt;，覆盖了Java核心技术、JVM、Java并发、SSM、微服务、数据库、数据结构、等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;获取方式：点“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”，关注公众号并回复 &lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;666&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; 领取，更多内容陆续奉上。&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p data-style=&quot;font-size: 16px; white-space: normal; letter-spacing: 0.544px; widows: 1; word-spacing: 2px; caret-color: rgb(255, 0, 0); color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 微软雅黑; text-align: right; margin-left: 0.5em; margin-right: 0.5em;&quot; class=&quot;js_darkmode__117&quot;&gt;&lt;span&gt;&lt;strong&gt;文章有帮助的话，在看，转发吧。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-style=&quot;font-size: 16px; white-space: normal; letter-spacing: 0.544px; widows: 1; word-spacing: 2px; caret-color: rgb(255, 0, 0); color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: 微软雅黑; text-align: right; margin-left: 0.5em; margin-right: 0.5em;&quot; class=&quot;js_darkmode__118&quot;&gt;&lt;span&gt;&lt;strong&gt;谢谢支持哟 (*^__^*）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>