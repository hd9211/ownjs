<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>9643ba222d579c1a026b2b97686118f2</guid>
<title>码农周刊 - 每周五发送，欢迎订阅！打破「信息茧房」，不妨从这份Newsletter开始！</title>
<link>https://toutiao.io/k/t49l6og</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;logged-out env-production page-responsive global-focus-styles&quot; id=&quot;readabilityBody&quot;&gt;
    

    

  &lt;p id=&quot;start-of-content&quot; class=&quot;show-on-focus&quot;/&gt;







    


    

  &lt;include-fragment class=&quot;js-notification-shelf-include-fragment&quot; data-base-src=&quot;https://github.com/notifications/beta/shelf&quot;/&gt;





  &lt;div class=&quot;application-main &quot; data-commit-hovercards-enabled=&quot;&quot; data-discussion-hovercards-enabled=&quot;&quot; data-issue-and-pr-hovercards-enabled=&quot;&quot;&gt;
        &lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot; class=&quot;&quot;&gt;
    &lt;main id=&quot;js-repo-pjax-container&quot; data-pjax-container=&quot;&quot;&gt;
      




    
    








  



&lt;div id=&quot;repo-content-pjax-container&quot; class=&quot;repository-content &quot;&gt;
  
  


  
      
  &lt;div class=&quot;clearfix container-xl px-3 px-md-4 px-lg-5 mt-4&quot;&gt;
    

&lt;div&gt;
  

  &lt;p class=&quot;d-none d-lg-block mt-6 mr-3 Popover top-0 right-0 color-shadow-medium col-3&quot;&gt;
    
  &lt;/p&gt;

  &lt;div id=&quot;spoof-warning&quot; class=&quot;mt-0 pb-3&quot; hidden=&quot;&quot; aria-hidden=&quot;&quot;&gt;
  &lt;div data-view-component=&quot;true&quot; class=&quot;flash flash-warn mt-0 clearfix&quot;&gt;
  
  
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert float-left mt-1&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;

      &lt;p class=&quot;overflow-hidden&quot;&gt;This commit does not belong to any branch on this repository, and may belong to a fork outside of the repository.&lt;/p&gt;


  
&lt;/div&gt;&lt;/div&gt;

  &lt;include-fragment src=&quot;/toutiaoio/weekly.manong.io/spoofed_commit_check/68a741beb43611fb8e6f78f2e9644f4dfa87cc40&quot; data-test-selector=&quot;spoofed-commit-check&quot;/&gt;

  &lt;/div&gt;

  &lt;/div&gt;


&lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;

  &lt;/div&gt;

          &lt;footer class=&quot;footer width-full container-xl p-responsive&quot; role=&quot;contentinfo&quot;&gt;


  
  &lt;p class=&quot;d-flex flex-justify-center pb-6&quot;&gt;
    &lt;span class=&quot;f6 color-fg-muted&quot;/&gt;
  &lt;/p&gt;
&lt;/footer&gt;




  &lt;div id=&quot;ajax-error-message&quot; class=&quot;ajax-error-message flash flash-error&quot; hidden=&quot;&quot;&gt;
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;
    &lt;button type=&quot;button&quot; class=&quot;flash-close js-ajax-error-dismiss&quot; aria-label=&quot;Dismiss error&quot;&gt;
      &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-x&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z&quot;/&gt;
&lt;/svg&gt;
    &lt;/button&gt;&lt;p&gt;
    You can’t perform that action at this time.
  &lt;/p&gt;&lt;/div&gt;

  &lt;div class=&quot;js-stale-session-flash flash flash-warn flash-banner&quot; hidden=&quot;&quot;&gt;
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;
    &lt;span class=&quot;js-stale-session-flash-signed-in&quot; hidden=&quot;&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;
    &lt;span class=&quot;js-stale-session-flash-signed-out&quot; hidden=&quot;&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;
  &lt;/div&gt;
    &lt;template id=&quot;site-details-dialog&quot;&gt;
  &lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm&quot; open=&quot;&quot;&gt;
    &lt;summary role=&quot;button&quot; aria-label=&quot;Close dialog&quot;/&gt;
    &lt;details-dialog class=&quot;Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal&quot;&gt;
      &lt;button class=&quot;Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0&quot; type=&quot;button&quot; aria-label=&quot;Close dialog&quot; data-close-dialog=&quot;&quot;&gt;
        &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-x&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z&quot;/&gt;
&lt;/svg&gt;
      &lt;/button&gt;
      &lt;p class=&quot;octocat-spinner my-6 js-details-dialog-spinner&quot;/&gt;
    &lt;/details-dialog&gt;
  &lt;/details&gt;
&lt;/template&gt;

    

    &lt;template id=&quot;snippet-clipboard-copy-button&quot;&gt;
  
&lt;/template&gt;




  &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c9d41c5a5fdb48b4e8c89a6b80d99cf6</guid>
<title>建设下一代 Web 开放技术——WebContainer</title>
<link>https://toutiao.io/k/5bzbzuu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5703125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/QRibyjewM1IDYpU06LZvV5y1hDpBNy5Q3tBHXxTaM2TJfZsZlhOMtPtVTLpPEZDvVkp6EPJ69pIWdOpnb8ibXGyQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;基于 Webassembly + QuickJS 的 Web 安全沙箱技术方案，面向 Web 端建设下一代开放技术&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;2988&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Web 端侧的开放技术长期以来一直在寻找最好的解决方案，从早期基于 Webview + API管控 的开放形式 ，到目前基于小程序的重容器的架构方案。或多或少都无法全面的解决开发者体验的问题，API 开放形式无法做到安全管控，小程序开放形式的架构必然会给业务带来孤岛效应。如何给开发者带来更好的研发体验、给商家带来更好的产品体验一直是我们淘宝开放技术前端团队的命题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过半年的技术演进和业务落地，我们自研了一套基于 Webassembly + QuickJS 的架构方案，来解决上述的问题。&lt;span/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;2988&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;目标&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;三年的小程序形式开放基础已经形成了规模化壁垒，落地新的技术方案必然考虑到成本问题，所以本次架构升级的目标可以描述为 “面向 Web 端建设下一代 PC 开放技术，建设基于 W3C 标准的 Web 技术三方开放方案，与小程序、小部件开放形态互补，构建电商域的完整开放技术生态”。&lt;span/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;2988&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;思考&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;端侧开放到底解决什么问题，我理解开放技术在端侧主要围绕这2个点：1. 如何让外部代码安全的可控的执行；2. 用户数据的安全如何保障，做到无端不透；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;关于第一个点落实到细节是 JavaScript/CSS/HTML 如何执行的问题。我的解法是：JavaScript 运行在 Webassembly+QuickJS 安全容器里，基于 Webassembly 的安全水位保障 JS 执行的隔离和可控；CSS 基于 Shadow DOM + iframe 做到样式隔离。&lt;br/&gt;2. 数据安全主要依托浏览器容器环境对数据做加签验签加密操作，本文章不展开讲解；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section data-id=&quot;2988&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;技术细节&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;工欲其事必先利器，我们先对技术底层细节做一个了解&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;WebAssembly&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.436&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IDYpU06LZvV5y1hDpBNy5Q32ibzLVCoJjAfFw6Rp9E52BA57c9MtLPvsrLNU9plmz4ibu9GqE2x96PA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;br/&gt;&lt;span&gt;图来源地址&lt;/span&gt;&lt;span&gt;（https://medium.com/jspoint/the-anatomy-of-webassembly-writing-your-first-webassembly-module-using-c-c-d9ee18f7ac9b）&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里重点提到2个事情：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;WebAssembly 二进制码会经过 Liftoff 生成未优化的 ByteCode，再给到 TurboFan 优化代码编译为机器码&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;WebAssembly 和 JavaScript 的编译后端是共享的，WebAssembly 的尽头是和架构相关的机器码，这里是一个关键点也是 VM 和 HOST 同步调用的关键点。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;WebContainer 架构&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本质上我们会以 App 级别的思想来架构方案（多页面、路由、通信），底层运行时基于 QuickJS ，涉及到多页面管理、鉴权、内存分析等等。&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4845034788108792&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IDYpU06LZvV5y1hDpBNy5Q3PM7CiaLNwlvq3Kx48MdMv7sLyChgsdwMZpic5xhiayjDxxwZmSJoHuySA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3162&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Binding 细节&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;外部代码的 Runtime 会运行到 Quickjs 里，执行环境需要仿真和浏览器环境一致，这个时候涉及到 API Binding设计，在 HOST JavaScript Runtime 定义 W3C 规范，通过 WebAssembly 的内存 Binding 到 Quickjs Runtime 中，当外部代码调用对应方法时，会映射到 HOST 实现，通过安全管控策略再执行到 HOST 环境中。&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.43579121789560893&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IDYpU06LZvV5y1hDpBNy5Q3KzFju90jV8PgIp7kasoFhjQgq3xn3xLf2e2xtd3m7XhlM5NxqQpfxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2414&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;研发模式&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;WebContainer 的本质要解决开发者体验问题，做到上层框架无关，所以在安全的水位上我们不会约束今天开发者的框架体系。但是我们需要定义 App Export 的接口。&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40609137055837563&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IDYpU06LZvV5y1hDpBNy5Q33Ss7cnEbfRH2EFZ3iaTzZsOCn4EqGEsY3yl4icWnPNjt08CnrUPjRmpw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1970&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Benchmark&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;系统&lt;/th&gt;&lt;th rowspan=&quot;1&quot; colspan=&quot;4&quot;&gt;L-PC1328H5-1417 Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz   1.80 GHz Qianniu/9.05.02N&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;平台/Case&lt;/td&gt;&lt;td&gt;类型&lt;/td&gt;&lt;td&gt;PC 小程序 (V8)(JIT)&lt;/td&gt;&lt;td&gt;PC 小程序 localwebview (Webkit)(JIT)&lt;/td&gt;&lt;td&gt;WebContainer (AOT)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;内核信息&lt;/td&gt;&lt;td&gt;类型&lt;/td&gt;&lt;td&gt;AliApp(QN/9.5.2) Ariver/1.0.0.5 Platform/PC&lt;/td&gt;&lt;td&gt;Chrome/90.0.4430.93&lt;br/&gt;AppleWebKit/537.36 (KHTML, like Gecko)&lt;/td&gt;&lt;td&gt;Chrome/90.0.4430.93&lt;br/&gt;AppleWebKit/537.36 (KHTML, like Gecko)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;testStringIndexOf&lt;/td&gt;&lt;td rowspan=&quot;4&quot; colspan=&quot;1&quot;&gt;VM&lt;/td&gt;&lt;td&gt;813,394,664 ops/sec&lt;/td&gt;&lt;td&gt;807,470,265 ops/sec&lt;/td&gt;&lt;td&gt;6,424,450 ops/sec&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;testStringMatch&lt;/td&gt;&lt;td&gt;24,794,109 ops/sec&lt;/td&gt;&lt;td&gt;19,488,381 ops/sec&lt;/td&gt;&lt;td&gt;556,760 ops/sec&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;testRegExp&lt;/td&gt;&lt;td&gt;38,638,752 ops/sec&lt;/td&gt;&lt;td&gt;38,599,956 ops/sec&lt;/td&gt;&lt;td&gt;761,215 ops/sec&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;testDOM&lt;/td&gt;&lt;td&gt;/&lt;/td&gt;&lt;td&gt;2,346,600 ops/sec&lt;/td&gt;&lt;td&gt;&lt;strong&gt;14,307 ops/sec&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MessageChannel&lt;/td&gt;&lt;td&gt;通信&lt;/td&gt;&lt;td&gt;&lt;strong&gt;702 ops/sec&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;286 ops/sec&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;strong&gt;101,536 ops/sec&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相对于纯小程序的&lt;strong&gt;通信效率提升355倍&lt;/strong&gt;，但是受到安全容器的限制 JS 执行相对于底层 V8 引擎降低到 &lt;strong&gt;1%&lt;/strong&gt;，但是也是足够用于生产环境的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;2988&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;业务落地&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在商家私域场景，我们已经在旺铺装修表单落地，目前ISV反馈非常不错，业务平台未来会全量替换到新开放容器中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5363825363825364&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IDYpU06LZvV5y1hDpBNy5Q3WNriaqse7DDUyPoRzR8UHzsBELAibKfEnV4MPfgCUNezuamoZwrHqUsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2886&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-id=&quot;2988&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;strong&gt;未来&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;继续基于 WebContainer 能力做上层开放体系的建设，解决插件体系。解决启动耗时的问题。技术底层完善 Quickjs Debug 能力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg4MjE5OTI4Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/QRibyjewM1IBw49BrMXhuGAyhmAKA0jiabJkQx7dXYbRWRSffHNGyahxmAdToib28VaTjzFqyMKgcnvA4iaiczGy3ug/0?wx_fmt=png&quot; data-nickname=&quot;Alibaba F2E&quot; data-alias=&quot;alibabaf2e&quot; data-signature=&quot;阿里巴巴前端官方公众号&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;关注&lt;/span&gt;&lt;span&gt;「Alibaba F2E」&lt;/span&gt;&lt;span&gt;微信公众号&lt;/span&gt;&lt;span&gt;把握阿里巴巴前端新动向&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>667aa2fd83a464b532625aee0b00d12d</guid>
<title>9张图轻松吃透Go内存管理单元</title>
<link>https://toutiao.io/k/2uwj3wc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;h1 cid=&quot;n161&quot; mdtype=&quot;heading&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;导读&lt;/span&gt;&lt;br/&gt;&lt;/h1&gt;&lt;hr/&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n162&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;本文基于Go源码版本1.16、64位Linux平台、1Page=8KB、本文的内存特指虚拟内存&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;p cid=&quot;n163&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;今日继续更新《Go语言轻松系列》第二章「内存与垃圾回收」第二部分「&lt;/span&gt;&lt;span&gt;Go语言内存管理&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;」。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n163&quot; mdtype=&quot;paragraph&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MDEwMDYyOA==&amp;amp;action=getalbum&amp;amp;album_id=1708285814280863746&amp;amp;scene=173&amp;amp;from_msgid=2454620078&amp;amp;from_itemidx=1&amp;amp;count=3&amp;amp;nolastread=1#wechat_redirect&quot; textvalue=&quot;点击查看本系列更多文章&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;点击查看本系列更多文章&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p cid=&quot;n163&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n164&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20210109200839.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.4144271570014144&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgfeicn0XYofPJp0hvuxABFh0wzEgaTWibLhVLaGnTIFAMdzRWc2FCuNviap9vYRoicQib9XIibO824lKHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1414&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1538&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;想深入了解Go语言的内存管理实现，必然绕不开「Go内存管理单元&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;」，&lt;strong&gt;Go堆内存、栈内存的分配过程都依赖了&lt;span md-inline=&quot;plain&quot;&gt;「内存管理单元&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;」&lt;/span&gt;&lt;/strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;今天我们就通过几张图，层层深入并解开「Go内存管理单元&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;」的神秘面纱。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p cid=&quot;n1539&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;本文包含的具体概念如下：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot; cid=&quot;n1540&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n1542&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的概念&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n1544&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的概念&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n1546&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的概念&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n1548&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;FreeList&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的概念&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n1550&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sizeclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的概念&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n1552&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;spanclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的概念&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 cid=&quot;n1553&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;本文也是为了后续学习Go堆内存、栈内存的分配过程打好基础。&lt;/span&gt;&lt;/h2&gt;&lt;h2 cid=&quot;n1553&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;正文&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p cid=&quot;n1554&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;介绍Go内存管理单元&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;前，需要先看下&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的概念，因为&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;是由&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;N个&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;且&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;连续&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;组成。&lt;/span&gt;&lt;/p&gt;&lt;h3 cid=&quot;n1555&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;&lt;code&gt;page&lt;/code&gt;的概念&lt;/span&gt;&lt;/h3&gt;&lt;hr/&gt;&lt;p cid=&quot;n1556&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;操作系统是按&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;管理内存的，同样Go语言也是也是按&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;管理内存的，1page为8KB，保证了和操作系统一致，如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1557&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20210120131944.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;191&quot; data-backw=&quot;713&quot; data-ratio=&quot;0.2680084745762712&quot; data-type=&quot;png&quot; data-w=&quot;1888&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgUg3m6cvSyibySRfibicMXuVibMULVa9ibKGBknby88ciaAQzQKOiancV3iaiafVDKh1Iho0uicPVy4bLZNG3A/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1558&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;Go内存管理单元&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;通常由&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;N个&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;且&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;连续&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;组成，如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;h3 cid=&quot;n1559&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;&lt;code&gt;mspan&lt;/code&gt;由&lt;code&gt;page&lt;/code&gt;组成&lt;/span&gt;&lt;/h3&gt;&lt;hr/&gt;&lt;p cid=&quot;n1560&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220405235014.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;293&quot; data-backw=&quot;713&quot; data-ratio=&quot;0.41094339622641507&quot; data-type=&quot;png&quot; data-w=&quot;2650&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgUg3m6cvSyibySRfibicMXuVibsCoic39JThDJ0Nw3iap5RdiabZMmbp6V7pVIGBGhhjLYzpv2ibhNdBMHfA/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot; cid=&quot;n1561&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n1563&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;可以由1个&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;组成&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n1565&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;也可以由2个连续的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;组成&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n1567&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;也可以由3个连续的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;组成&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n1569&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;更可以由N个连续的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;组成&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n1570&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;上图左半部分是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的结构体的关键字段，其中&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;npages&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;就代表了这个&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;是由几个连续的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;page&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;组成。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1571&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;除此之外，&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;和&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;之间还可以构成链表，如下图所示&lt;/span&gt;&lt;/p&gt;&lt;h3 cid=&quot;n1572&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;可构成链表&lt;/span&gt;&lt;/h3&gt;&lt;hr/&gt;&lt;p cid=&quot;n1573&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220405235024.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;299&quot; data-backw=&quot;713&quot; data-ratio=&quot;0.4184451219512195&quot; data-type=&quot;png&quot; data-w=&quot;2624&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgUg3m6cvSyibySRfibicMXuVib7a1ia1Hw904UeXKB1wp19ZmGH9Zuic58Wy4icK4l1VXZ4pfsicuDlAJg8A/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1574&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;这里需要注意的是：&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;只有&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;npages&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的值相同的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;互相才可以组成一个链表&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。如上图所示，具体原因下文会讲。&lt;/span&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n1575&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n1576&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;看到这里，你会以为Go是按页&lt;code&gt;page&lt;/code&gt;8KB为最小单位分配内存的吗？&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p cid=&quot;n1577&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;答案：当然不是，如果这样的话会导致内存使用率不高。Go语言内存管理器会把&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;再拆解为更小粒度的单位&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1578&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220423214224.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;364&quot; data-backw=&quot;713&quot; data-ratio=&quot;0.510593220338983&quot; data-type=&quot;png&quot; data-w=&quot;1888&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgUg3m6cvSyibySRfibicMXuVibDtvFfbnzwTzWDkQFbcOYU99FH7v7k704Qky4U50kyfU8VVETTI5Vibg/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1579&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;和&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;之间构成一个链表，大家这里肯定会想到是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;LinkedList&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，实际上并不是，因为&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;LinkedList&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;节点自身的指针也会占用8B内存，作为内存管理器，这部分内存会被白白浪费掉，所以这里通常使用的数据结构是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;FreeList&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h3 cid=&quot;n1580&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;什么是FreeList？&lt;/span&gt;&lt;/h3&gt;&lt;hr/&gt;&lt;p cid=&quot;n1581&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;FreeList&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;本质上还是个&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;LinkedList&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，和&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;LinkedList&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的区别：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot; cid=&quot;n1582&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n1584&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;FreeList&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;没有&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;Next&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;属性，所以不是用&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;Next&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;属性存放下一个节点的指针的值。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n1586&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;FreeList&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;“相当于使用了&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;Value&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的前8字节”(其实就是整块内存的前8字节)存放下一个节点的指针。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n1588&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;分配出去的节点，节点整块内存空间可以被复写(指针的值可以被覆盖掉)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n1589&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1590&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20210124224723.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;240&quot; data-backw=&quot;452&quot; data-ratio=&quot;0.5293495505023796&quot; data-type=&quot;png&quot; data-w=&quot;1891&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgUg3m6cvSyibySRfibicMXuVibzMWgJ7sd5SNUr8qQPvGkz8tPHUR5OJIicibqqFLNiaiaY8DBE26XiazibbBw/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n1591&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n1592&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;所以：&lt;code&gt;FreeList&lt;/code&gt;一个节点最小为8字节Byte&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n1593&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;备注：因为要存指针，指针的大小为8字节，为什么？可以参考之前文章&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5MDEwMDYyOA==&amp;amp;mid=2454619580&amp;amp;idx=1&amp;amp;sn=66b60ef21383adf51226e5b5cc3cc267&amp;amp;chksm=87aae347b0dd6a510ec94218ead610a712bd04ae3b9c72b45acbc83e969ae3e31a8f53df385f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《64位平台下，指针自身的大小为什么是8字节？》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《64位平台下，指针自身的大小为什么是8字节？》&lt;/a&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n1594&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;得到Go内存管理单元&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;被拆解为&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;图示如下：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1595&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220423215017.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;364&quot; data-backw=&quot;713&quot; data-ratio=&quot;0.510593220338983&quot; data-type=&quot;png&quot; data-w=&quot;1888&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgUg3m6cvSyibySRfibicMXuVibpZBeKA2ReQw5Nia9k48zQxJTbpw4NWTQ9vNSLU8liaAj2IunH6w1eXWQ/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n1596&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n1597&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;到这里问题又来了，&lt;code&gt;object&lt;/code&gt;的具体大小是多大呢，是怎么决定的？&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p cid=&quot;n1598&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;答案：是由&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sizeclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;决定的。&lt;/span&gt;&lt;/p&gt;&lt;h2 cid=&quot;n1599&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;什么是&lt;code&gt;sizeclass&lt;/code&gt;？&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p cid=&quot;n1600&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sizeclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;是一个映射列表，实际是一个数组类型&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;[68]uint16&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，它的值决定了&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的大小，除此之外，&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;由几pages构成也是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sizeclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;值决定的。&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sizeclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;映射列表的具体规则如下：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n1601&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;// 文件位置：`src/runtime/sizeclasses.g`&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;// 索引0位置被保留使用，具体使用位置后续会讲。&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;如上文所述，`object`之间采用freelist数据结构构成链表，指针为8Byte所以最小的object大小为8Byte&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;字段解释：&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;class: sizeclass值 &lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;bytes/obj: 该`mspan`拆分object大小&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;bytes/span: 该`mspan`是由几pages组成&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;objects: 该`mspan`共计包含的object数量&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;class  bytes/obj  bytes/span  objects&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;1          8        8192     1024&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;2         16        8192      512&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;3         24        8192      341&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;4         32        8192      256&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;5         48        8192      170&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;6         64        8192      128&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;...略...&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;65      27264       81920        3 &lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;66      28672       57344        2&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;67      32768       32768        1&lt;/span&gt;&lt;/pre&gt;&lt;figure cid=&quot;n1602&quot; mdtype=&quot;table&quot;&gt;&lt;p&gt;&lt;span&gt;表格左右滑动查看&lt;/span&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n1603&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span&gt;&lt;code&gt;sizeclass&lt;/code&gt;值&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span&gt;&lt;code&gt;object&lt;/code&gt;大小&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span&gt;由几&lt;code&gt;pages&lt;/code&gt;组成&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n1607&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;0&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;保留&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1page&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1611&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;8Byte&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1pages&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1615&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;16Byte&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1page&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1619&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;24Byte&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1page&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1623&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1627&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;67&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;32KB&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;4pages&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n1631&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;所以&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;结构体上只要维护一个&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sizeclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的字段，就可以知道该&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;中&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的大小、数量。但是呢，实际上这个字段并不是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sizeclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，而是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;spanclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1632&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220423211420.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.811787072243346&quot; data-type=&quot;png&quot; data-w=&quot;526&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgUg3m6cvSyibySRfibicMXuVibRRav4J5cYic4EvjPqwsiaEnsAwrSs6ftXib5AAkGeonkSO6AibvkUDGB2Q/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1633&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;那么，问题又来了😂。&lt;/span&gt;&lt;/p&gt;&lt;h2 cid=&quot;n1634&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;什么是&lt;code&gt;spanclass&lt;/code&gt;？&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p cid=&quot;n1635&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;实际上Go内存管理单元&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;被分为了两类：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1641&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;所以说&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;并不是所有的Go内存管理单元&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;会被垃圾回收扫描&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。为了区别这两类&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，Go语言把类型标识和上面&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;sizeclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;的值一起放在了&lt;/span&gt;同一个&lt;span&gt;字段里，具体如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1653&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;图示如下：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1654&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220423213157.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;575&quot; data-backw=&quot;713&quot; data-ratio=&quot;0.8059227921734532&quot; data-type=&quot;png&quot; data-w=&quot;1891&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgUg3m6cvSyibySRfibicMXuVibPibrxATJP8wDbfSrdNrehKUFwHro6cH7J3ibIVViaiafRQdeUf1GLMMibFA/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 cid=&quot;n1655&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h1&gt;&lt;hr/&gt;&lt;h2 cid=&quot;n1656&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;&lt;code&gt;mspan&lt;/code&gt;拆分&lt;code&gt;object&lt;/code&gt;总结&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p cid=&quot;n1657&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;这里我们以&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;spanclass&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的10进制值为7的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;为例：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1657&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n1658&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n1659&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span&gt;&lt;code&gt;spanclass&lt;/code&gt;10进制值为7&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n1661&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;可得，&lt;code&gt;spanclass&lt;/code&gt;2进制为&lt;code&gt;0000 0111&lt;/code&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1663&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;可得，&lt;code&gt;sizeclass&lt;/code&gt;为&lt;code&gt;7&amp;gt;&amp;gt;1&lt;/code&gt;：2进制&lt;code&gt;0000 0011&lt;/code&gt;，10进制3&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1665&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;可得，&lt;code&gt;mspan&lt;/code&gt;由1&lt;code&gt;page&lt;/code&gt;组成，共计8KB(8192Byte)&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1667&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;可得，&lt;code&gt;object&lt;/code&gt;大小为24Byte&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1669&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;可得，&lt;code&gt;mspan&lt;/code&gt;共计包含341个&lt;code&gt;object&lt;/code&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1671&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;可得，&lt;code&gt;mspan&lt;/code&gt;尾部浪费8Byte&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n1673&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;具体图示如下：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1674&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220405235059.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;438&quot; data-backw=&quot;713&quot; data-ratio=&quot;0.6135604542418169&quot; data-type=&quot;png&quot; data-w=&quot;2994&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgUg3m6cvSyibySRfibicMXuVibaDficHVzVIFhcFrKoaGyyjUehkznc5h2micYSm0iaEYb7bDShrrGJnBKA/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 cid=&quot;n1675&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;&lt;code&gt;mspan&lt;/code&gt;关键字段总结&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p cid=&quot;n1676&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;挑选&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;mspan&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的几个重要字段，如下图：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1677&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220405234945.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.811787072243346&quot; data-type=&quot;png&quot; data-w=&quot;526&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdgUg3m6cvSyibySRfibicMXuVibW2LPEKnuX7s7c5iaTa9FM1H20f77DSCkSN56D9oeqibox9NYGL795dWw/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n1678&quot; mdtype=&quot;table&quot;&gt;&lt;p&gt;&lt;span&gt;表格左右滑动查看&lt;/span&gt;&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n1679&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span&gt;字段名&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span&gt;解释&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n1682&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;next、prev、list&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;&lt;code&gt;mspan&lt;/code&gt;之间可以构成链表&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1685&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;startAddr&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;&lt;code&gt;mspan&lt;/code&gt;内存的开始位置，N个连续&lt;code&gt;page&lt;/code&gt;内存的开始位置&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1688&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;npages&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;&lt;code&gt;mspan&lt;/code&gt;由几&lt;code&gt;page&lt;/code&gt;组成&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1691&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;freeindex&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;空闲&lt;code&gt;object&lt;/code&gt;链表的开始位置&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1694&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;nelems&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;一共有多少个&lt;code&gt;object&lt;/code&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1697&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;spanclass&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;决定&lt;code&gt;object&lt;/code&gt;的大小、以及当前&lt;code&gt;mspan&lt;/code&gt;是否需要垃圾回收扫描&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n1700&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;...&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;下篇文章就开始讲解Go堆内存的分配时机与过程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MDEwMDYyOA==&amp;amp;action=getalbum&amp;amp;album_id=1708285814280863746&amp;amp;scene=173&amp;amp;from_msgid=2454620078&amp;amp;from_itemidx=1&amp;amp;count=3&amp;amp;nolastread=1#wechat_redirect&quot; textvalue=&quot;点击查看本系列更多文章&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;点击查看本系列更多文章&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Go轻松进阶系列&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 更多文章&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;想要了解更多 Golang 相关的内容，欢迎扫描下方👇 &lt;/strong&gt;&lt;span&gt;&lt;strong&gt;关注 &lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;公众号&lt;/strong&gt;&lt;strong&gt;，回复关键词 [实战群]  ,就有机会进群&lt;/strong&gt;&lt;strong&gt;和我们进行交流~&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;219&quot; data-backw=&quot;379&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5763688760806917&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbDrrBk1KBPqY1QNI320ZK2IIycDa77FcDQAeAFJRVb240xr8biceh23auy7ZpPibEYXPNOnmfsEewkw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;694&quot;/&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2b978484a9c489326efc4b34bff59889</guid>
<title>美团外卖广告智能算力的探索与实践（二）</title>
<link>https://toutiao.io/k/aw2mg7n</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;48&quot; data-ratio=&quot;0.10078125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsUrXicw2VXTQTVVN5yxXWEacdY1ZdxTH195Pgibtib8EENJRMia3tzEnyVfgyfAgRibMssKqwlE186TLSw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;总第506&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;篇&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2022年 第023篇&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;127&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;127&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;img border=&quot;0&quot; class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;93&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;93&quot; data-ratio=&quot;0.9966329966329966&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVLR21NicmyQxcmiaqQ2KOJJj2JLwgJL4KSbo7CcuMF1hLf4xFjGQiaDRhSPyERxWGChWYP47Oc4sKGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;594&quot; data-width=&quot;100%&quot; opacity=&quot;&quot; title=&quot;undefined&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; data-style=&quot;text-align: left; font-size: 14px; color: inherit;&quot;&gt;&lt;p&gt;&lt;span&gt;在深度学习时代，算力的需求和消耗日益增长，如何降低算力成本，提高算力效率，逐渐成为一个重要的新课题。智能算力旨在对流量算力进行精细化和个性化分配，从而实现系统算力约束下的业务收益最大化。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;本文主要介绍了美团外卖广告智能算力从线性规划算法到进化算法的技术演进过程，给出了一种基于进化算法的多动作算力分配方案，希望能给大家带来一些帮助或者启发。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;1 业务背景&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;2 整体思路&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;3 方案设计&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;4 实验&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;5 总结与展望&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;6 参考文献&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;7 作者简介&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1 业务背景&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;随着美团外卖业务的飞速发展，外卖广告系统压力变得越来越大，算力开始成为新的瓶颈。2021年上半年，外卖广告的数条业务线开始出现算力资源不足的情况，算力分配效率亟待提升。在外卖场景下，流量呈现明显的双峰结构，广告系统在高峰时段面临较大的性能压力，非高峰时段存在大量算力冗余。智能算力旨在对流量算力进行精细化和个性化分配，从而实现系统算力约束下的业务收益最大化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;173&quot; data-ratio=&quot;0.3098404255319149&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5t50l7EC69nba19As8MWm6UkGvkoyDvwSaFEp89vO1DaZp42IarogWWw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3008&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;本文是广告智能算力系列文章的第二篇，在第一篇&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651763222&amp;amp;idx=1&amp;amp;sn=dadbae89e463870649b74d5265bebb5a&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;《美团外卖广告智能算力的探索与实践》&lt;/span&gt;&lt;/a&gt;&lt;span&gt;中&lt;sup&gt;[1]&lt;/sup&gt;，我们对阿里DCAF&lt;sup&gt;[2]&lt;/sup&gt;线性规划求解方案进行了外卖场景下的优化，落地了弹性队列局部最优算力分配方案（&lt;/span&gt;&lt;span&gt;以下简称“第一期”&lt;/span&gt;&lt;span&gt;）。如上图所示，外卖展示广告链路中，召回通道和模型决策均使用固定策略，在算力不足时会丢失部分优质流量带来的收益。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在本文中，我们提出了基于进化算法的多动作算力决策方法&lt;strong&gt;ES-MACA&lt;/strong&gt;（&lt;/span&gt;&lt;span&gt;Evolutionary Strategies based Multi-Action Computation Allocation&lt;/span&gt;&lt;span&gt;）。在外卖广告链路上，同时决策弹性通道、弹性队列和弹性模型三个动作。在后置动作决策中，我们考虑前置模块的决策引起的状态变化，同时使用多任务模型联合建模实现系统仿真模拟（&lt;/span&gt;&lt;span&gt;离线仿真+收益预估，实现不同决策动作下的收益评估功能&lt;/span&gt;&lt;span&gt;），实现全链路最优算力分配。相对第一期内容，ES-MACA在外卖展示广告业务线上取得CPM+1.x%、收入+1.x%的效果。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2 整体思路&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;为了应对极大的在线流量压力和庞大的候选集，外卖广告投放系统将整个检索过程设计成候选集依次递减的漏斗型级联架构，主要包含召回、粗排、精排、机制等模块。在第一期中，我们把算力分配的手段定义为&lt;strong&gt;弹性动作&lt;/strong&gt;，并结合外卖场景归纳了弹性队列、弹性模型、弹性通道和弹性链路等四种动作，具体动作的定义如下：&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;弹性队列&lt;/strong&gt;：线上检索是一个漏斗的过程，不同价值流量可以在级联漏斗的各模块中分配不同候选队列长度。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;弹性模型&lt;/strong&gt;：在模型预估服务中，对于不同价值流量可以选择不同大小模型，大模型相对小模型预估效果更好的同时，消耗的算力也更多。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;弹性通道&lt;/strong&gt;：在召回场景中，不同价值流量可以选择不同复杂度的召回通道和召回通道的路数。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;弹性链路&lt;/strong&gt;：在检索链路上，不同价值流量可以选择不同复杂度的检索链路。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.1 算力分配问题形式化描述&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;在一个包含M个算力决策模块的链路中，全链路最优的智能算力的目标可通用的描述为：&lt;strong&gt;通过智能化决策M个模块的算力档位，在整体算力满足约束的条件下，使得整体流量收益最大化&lt;/strong&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;该问题的一般形式化描述为：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;154&quot; data-ratio=&quot;0.27502833396297693&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5tOx7BpHGzXGr6q1tG72YkHlHVw9s9z23eXuEuT1ByjIRRUqx6ib8eqHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2647&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以上是多个算力决策模块的场景，在外卖展示广告中，对算力和收益较为敏感的决策模块为广告召回策略、精排队列长度和精排预估模型，分别对应弹性通道、弹性队列和弹性模型三个动作。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在本期中，我们同时考虑弹性通道、弹性队列和弹性模型三个模块的算力联合决策。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;256&quot; data-ratio=&quot;0.458041958041958&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5tT4RfZcRFp3DeXQw2FDkvOQKqxQXFcib0dmhibzAw27EEiaokibo924JTBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2288&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在多个模块联合决策时，同一个请求的不同模块动作之间互相会产生影响。如下图所示，弹性通道决策结果决定了真实召回队列（&lt;/span&gt;&lt;span&gt;包括候选队列的长度和广告类型等信息&lt;/span&gt;&lt;span&gt;），直接影响了弹性队列的输入状态。同理，弹性队列的决策结果影响了弹性模型的输入状态。因此，在多动作联合建模中，我们增加了请求“状态”特征，让决策动作与系统产生交互，更好地拟合系统状态的过程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;236&quot; data-ratio=&quot;0.40898876404494383&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5tGXdJxqulCicU4JXkLHTwX9XnZmsBAXzpBhxEO7TrDdGAzJmkYFF9ib4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2670&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.2 挑战分析&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;外卖智能算力第一期中，我们针对外卖广告场景，在DCAF方案的基础上进行了一系列探索和改进，并初次进行了模型弹性分配的尝试，取得了不错的收益。近年，阿里CRAS&lt;sup&gt;[3]&lt;/sup&gt;方案给出了一种应用于预排、粗排和精排队列联合优化的联合最优算力分配线性规划方案。从弹性动作的分类来看，该方案以一种优雅的方式解决了三个弹性队列的联合优化问题，CRAS通过一些数据分析和合理假设，将原始问题拆解为三个互相独立且相似子问题，然后分别对三个子问题进行求解。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但是已有方案是基于线性规划方案的，且仅关注一个或多个&lt;strong&gt;弹性队列&lt;/strong&gt;优化问题，在面对非弹性队列动作组合，如弹性通道和弹性模型时，方案无法直接迁移。特别地，在约束条件或优化目标发生变化时，线性规划方案需要重新对特定业务问题进行建模和求解，需消耗大量的人力；此外，目前已有线性规划方案的问题建模和求解过程中往往包含一些业务数据相关的强假设，这些假设在新的业务上可能难以满足，这进一步使得已有方案难以拓展迁移到新的业务问题上。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;由于外卖场景的LBS限制，外卖广告的候选队列相对非LBS电商场景较短，不需要经过复杂的预排-粗排-精排的过程。在全链路上，我们更关注召回通道、精排队列长度、精排预估模型等模块的算力分配，这些模块其实对算力更加敏感。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;425&quot; data-ratio=&quot;0.7347715736040609&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5tsCF9iabEzO9iaCrWkAiaQRjWHfialrdnhzg0fvtthtjrjJeoAnE9gsTqGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1576&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;整体来看，美团外卖广告场景全链路最优算力分配的挑战主要包括以下两个方面。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;通用化问题&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;挑战点&lt;/strong&gt;：已有方案与业务耦合过重，一方面，在约束条件或优化目标发生变化时，线性规划方案需要重新对特定业务问题进行建模；另一方面，对特定的业务线，往往需要根据业务数据特性增加一些强假设。外卖广告目前包括十余条业务线，每条业务线中又存在多个算力决策场景，若对每条业务线的每个场景都单独建模，人力成本巨大。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;应对思路&lt;/strong&gt;：采用通用解决方案并沉淀为基础通用能力，为广告业务的不同算力决策场景赋能，降本增效。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;序列决策问题&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;挑战点&lt;/strong&gt;：在全链路算力分配时，多个决策模块之间互相耦合，共同对影响当前流量的最终算力和收益。如下图所示，前置动作决策后，需要跟真实环境交互才能获取动作决策后的交互结果，模块之间涉及到系统状态转移，需要在最后一个决策模块完成决策后才能获得流量收益，这使得我们难以通过常规方式建模。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;346&quot; data-ratio=&quot;0.5974643423137876&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5tmxjOsiaT0LOw8EMI6MBAN3Pu9eCqMlQq1r21Gk19KnpcnBeqJFO4Uaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1262&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;应对思路&lt;/strong&gt;：在全链路最优算力分配问题建模过程中，增加系统在各链路上的“状态”转移过程，后置模块根据前置模块的决策结果和请求状态进行决策。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;综合考虑以上两个问题，我们将外卖广告全链路最优算力分配问题建模为多阶段决策问题（&lt;/span&gt;&lt;span&gt;每个决策模块对应一个决策阶段&lt;/span&gt;&lt;span&gt;），按时间顺序依次决策召回方案、截断队列和预估模型。每个阶段中，由Agent与环境交互和决策，Agent参数可使用进化算法或强化学习求解。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;全链路算力分配过程可建模为马尔科夫决策过程（&lt;/span&gt;&lt;span&gt;Markov Decision Process, MDP&lt;/span&gt;&lt;span&gt;）或部分可观测马尔科夫决策过程（&lt;/span&gt;&lt;span&gt;Partially Observable Markov Decision Process，POMDP&lt;/span&gt;&lt;span&gt;）。如上图所示，状态转移发生在相邻的两个阶段之间，各阶段分别有不同的候选动作（&lt;/span&gt;&lt;span&gt;如召回策略，截断长度和预估模型编号等&lt;/span&gt;&lt;span&gt;），Reward则在最后一个阶段动作执行后通过系统反馈获得。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们可以收集在线日志数据，使用离线强化学习（&lt;/span&gt;&lt;span&gt;Offline RL&lt;/span&gt;&lt;span&gt;）求解Agent；在不担心线上收益受损的情况下，也可以使用在线强化学习（&lt;/span&gt;&lt;span&gt;Online RL&lt;/span&gt;&lt;span&gt;）求解Agent。但由于业务场景复杂，各阶段算力约束难以统一，不管是离线强化学习还是在线强化学习，都面临多阶段强约束难以建模和求解的问题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;而进化算法作为一种应用广泛、鲁棒性强的全局优化方法，有以下优点：&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;避免局部最优&lt;/strong&gt;：进化算法参数搜索过程具有一定的随机性，不易陷入局部最优；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;可并行化&lt;/strong&gt;：进化算法参数搜索过程可并行，可缓解评估过程耗时问题；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;应用广泛&lt;/strong&gt;：进化算法可以能够处理不连续、不可微和非凸优化问题，且不需要过多先验知识；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;简单易用&lt;/strong&gt;：一些进化算法，比如交叉熵方法（&lt;/span&gt;&lt;span&gt;Cross-Entropy Method，CEM&lt;/span&gt;&lt;span&gt;）可以优雅地解决各种约束问题，不需要直接求解约束问题。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;进化算法能很好地解决外卖广告场景中的问题，既容易扩展到其他业务线，又能非常方便地建模各种决策问题。因此，本期我们选择进化算法来求解外卖场景全链路最优算力分配问题。在后续工作中，我们会尝试使用强化学习方案求解。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如本节迭代路径（&lt;/span&gt;&lt;span&gt;图&lt;/span&gt;&lt;span&gt;）所示，我们在1.5期中尝试了基于进化算法的单动作算力决策方法&lt;strong&gt;ES-SACA&lt;/strong&gt;（&lt;/span&gt;&lt;span&gt;Evolutionary Strategies based Single-Action Computation Allocation&lt;/span&gt;&lt;span&gt;），验证了进化算法在算力分配场景的有效性。接下来，本文主要介绍基于进化算法的多动作算力决策方法&lt;strong&gt;ES-MACA&lt;/strong&gt;。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3 方案设计&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;为了实现广告系统全链路上的最优算力分配，我们设计了如下决策方案：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;313&quot; data-ratio=&quot;0.5409375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5tOzVW3DFgqxmLdsOpcXSgxssvJGrWKSoZ0ZXq6DrYwogowhk23hz2BQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3200&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;离线训练&lt;/strong&gt;：随机选择决策Agent参数，批量回放历史流量，Agent与广告投放模拟系统进行交互，完成状态转移过程。根据系统返回的Reward优化决策Agent参数，最终输出离线最优Agent参数，并同步到线上。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;在线决策&lt;/strong&gt;：对于线上单条请求，使用离线最优Agent与线上系统进行交互和决策。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在本期中，我们使用进化算法求解Agent参数。进化算法参数寻优的核心是组合动作价值评估，由于涉及到状态转移过程，组合动作价值评估不再是一个简单的监督学习问题，Agent需要依次与系统交互并执行决策动作，直到最后一个阶段的动作完成时才能从系统中取得收益。一种简单的方案是让Agent在线学习，与系统交互的同时优化自身参数，但在线学习会影响业务收益，这对我们来说是不可接受的。为了解决这个问题，我们通过构造广告投放模拟器，模拟线上广告系统环境，由该模拟器与Agent进行交互，并反馈收益（&lt;/span&gt;&lt;span&gt;Reward&lt;/span&gt;&lt;span&gt;）。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1 全链路最优算力决策&lt;/span&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1.1 问题建模&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;根据外卖广告的投放场景，我们基于进化算法对整个问题建模如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;207&quot; data-ratio=&quot;0.3577623590633131&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5treZtQ8ThfzdNp1ExesoWQNoGEnogibiaFzsuks3jT03nca05ESsiaCAqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2306&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;状态&lt;/strong&gt;：上下文特征，请求队列特征等（&lt;/span&gt;&lt;span&gt;后置决策模块的状态依赖前置模块的决策，比如弹性通道的决策直接影响了弹性队列时队列长度&lt;/span&gt;&lt;span&gt;）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;动作&lt;/strong&gt;：在不同阶段定义不同。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;弹性通道：召回动作，一维向量 &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 6243.7 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(389, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;61&quot; d=&quot;M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(529, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1321.6, 0)&quot;&gt;&lt;path data-c=&quot;2C&quot; d=&quot;M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(1766.2, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;61&quot; d=&quot;M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(529, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2698.8, 0)&quot;&gt;&lt;path data-c=&quot;2C&quot; d=&quot;M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(3143.4, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;61&quot; d=&quot;M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(529, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;33&quot; d=&quot;M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4076, 0)&quot;&gt;&lt;path data-c=&quot;2C&quot; d=&quot;M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4520.7, 0)&quot;&gt;&lt;path data-c=&quot;2E&quot; d=&quot;M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4965.3, 0)&quot;&gt;&lt;path data-c=&quot;2E&quot; d=&quot;M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(5410, 0)&quot;&gt;&lt;path data-c=&quot;2E&quot; d=&quot;M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(5854.7, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;,&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 4490.2 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;61&quot; d=&quot;M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(529, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;69&quot; d=&quot;M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1100.7, 0)&quot;&gt;&lt;path data-c=&quot;2208&quot; d=&quot;M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2045.5, 0)&quot;&gt;&lt;path data-c=&quot;7B&quot; d=&quot;M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(2545.5, 0)&quot;&gt;&lt;path data-c=&quot;30&quot; d=&quot;M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3045.5, 0)&quot;&gt;&lt;path data-c=&quot;2C&quot; d=&quot;M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(3490.2, 0)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3990.2, 0)&quot;&gt;&lt;path data-c=&quot;7D&quot; d=&quot;M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 表示是否该通道是否召回。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;弹性队列：截断长度，整数值。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;弹性模型：模型编号，整数值。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Reward&lt;/strong&gt;：收益目标为业务收益，为了保证求解参数符合算力约束条件，在Reward中添加算力约束条件。对于越严格的约束条件，算力系数&lt;/span&gt;&lt;span&gt; &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 1057.3 851.8&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;3BB&quot; d=&quot;M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(583, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;越大。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1.2 离线参数求解&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;561&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;341&quot; data-ratio=&quot;0.6069651741293532&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5tiaLk5ia47zmaEicYqgjVHqazPBiafFWUK9Oeibp962ylibED820Z2OkNEj1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2010&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;离线参数求解主要分为进化算法参数寻优和Reward评估两个模块。&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;参数寻优模块&lt;/strong&gt;：实现通用的进化算法寻参流程，负责参数初始化、参数评估（&lt;/span&gt;&lt;span&gt;依赖Reward评估模块&lt;/span&gt;&lt;span&gt;）、参数采样和参数进化等过程，并最终输出最优参数。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Reward评估模块&lt;/strong&gt;：根据指定Agent的具体参数，批量回放线上流量，让Agent与环境进行交互（&lt;span&gt;离线仿真&lt;/span&gt;），最后根据交互结果预估当前参数对应的收益。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.1.2.1 参数寻优&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;参数寻优模块使用进化算法求解参数。本文以CEM为例，对参数求解过程进行详细讲解：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;128&quot; data-ratio=&quot;0.22072072072072071&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5tkIMz1aUuXfytFuupjgjRKvbJlZ8XDQhE0g3QWjJC57cxicibeOYejaicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2442&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;参数初始化&lt;/strong&gt;：初始化参数均值和方差，根据指定的均值和方差随机采样N组参数。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Reward评估&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;离线仿真：回放流量，让当前参数对应的Agent与离线模拟器交互，完成状态转移过程，在所有模块决策完成后，离线仿真模块输出回放流量交互结果。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;收益预估：根据回放流量交互结果，预估当前交互结果下的期望收益。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;参数挑选&lt;/strong&gt;：按照参数合并流量期望收益，挑选使得所有流量整体收益最高的Top-K组参数。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;参数进化&lt;/strong&gt;：根据Top-K参数，计算新的参数均值和方差。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;参数采样&lt;/strong&gt;：根据新的均值和方差，重新采样N组参数，并跳转到第二步，直到参数均值和方差收敛。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Tips&lt;/strong&gt;：NES方案在本场景中效果不如CEM，原因是NES对带约束问题（&lt;/span&gt;&lt;span&gt;特别是多约束问题&lt;/span&gt;&lt;span&gt;）Reward设计要求过高，在真实场景中难以求解到严格满足约束的参数。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.1.2.2 Reward评估&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;317&quot; data-ratio=&quot;0.5478764478764478&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5tAYj59H5wBxGNfURLTX8S5PE4lh1XumyCv8PfyPB8VbjsibDk4Gv0usA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2590&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;离线Reward评估流程：在离线训练时，对于选定的Agent和历史流量。&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step1：模拟器构造流量初始状态特征，并反馈给Agent。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step2：Agent根据模拟器给出的流量状态特征进行召回通道档位决策。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step3：模拟器按照Agent给出的召回决策结果进行队列召回，并将召回结果反馈给Agent。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step4：Agent根据召回结果及初始流量状态进行队列长度决策。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step5：模拟器按照Agent给出的队列长度决策结果模拟截断操作，反馈截断后的队列状态给Agent。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step6：Agent根据截断队列进行预估模型编号决策。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step7：模拟器根据模型编号决策给出广告列表集合以及决策相关特征。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step8：将离线模拟的广告列表结果输入收益预估模型，预估每条请求对应的离线收益。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step9：统计整体流量的Reward，作为当前Agent策略的评估结果。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.1.2.2.1 离线仿真&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;在线环境交互面临的困境（离线仿真的必要性）&lt;/strong&gt;：理论上，决策Agent与在线环境交互能获得最真实Reward（&lt;/span&gt;&lt;span&gt;收益&lt;/span&gt;&lt;span&gt;）反馈，但直接利用在线流量探索会导致以下问题：&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;在线收益损失&lt;/strong&gt;：在线探索Agent收益的过程是有损的，特别是在策略学前期，策略决策几乎是随机的，线上算力约束和收益都无法得到保障。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;流量利用率低&lt;/strong&gt;：Agent学习往往需要几十甚至上百轮的训练，每轮训练中又包含多组可行参数，为了积累置信的流量数据，每组参数的流量不能太少，总体来说训练时间和效率将是难以接受的。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;离线仿真的最终目标&lt;/strong&gt;：复现线上交互逻辑和收益反馈。&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;基本思路&lt;/strong&gt;：虽然无法完全复现线上的复杂环境，但参照线上环境交互逻辑，可以通过离线广告系统模拟器在效率和准确性之间做一个取舍。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;其他模块&lt;/strong&gt;：为了达成这个目标，对于特定的广告队列信息，我们可以使用有监督学习模型对其流量Reward进行预估。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;离线仿真+收益预估解决方案&lt;/strong&gt;：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;181&quot; data-ratio=&quot;0.31355181576616475&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5t0BmkkYHYxC0zMFl49xRnHxn3fhbgChnMTf6ichapRMbKF7vLIzsUiaIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2258&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;线上随机探索流量&lt;/strong&gt;：在线留下少量随机探索流量，随机决策每个阶段的候选动作，同时记录流量日志和线上系统的交互结果。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;离线仿真系统&lt;/strong&gt;：对历史流量日志，仿照线上逻辑，模拟召回，队列截断、粗排CTR预估等逻辑生成离线交互结果。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;收益预估&lt;/strong&gt;：作为离线Reward评估的核心模块，收益预估决定了参数的进化方向，我们将在下一节对收益预估方案进行详细介绍。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;3.1.2.2.2 收益预估&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;目标和挑战点&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;目标&lt;/strong&gt;：基于线上空白流量和随机探索流量，预估请求在不同动作下的期望收益。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;挑战点&lt;/strong&gt;：不同于传统广告中“用户-广告”粒度的局部链路CTR、CVR以及GMV预估任务，本文是请求粒度的全链路收益预估，包含了请求曝光、点击、下单（转化）的整个过程，问题更加复杂，特别是面临数据稀疏问题。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;数据稀疏问题：由于建模链路较长，在用户转化数据非常稀疏的情况下，大部分流量都没有转化动作发生（&lt;span&gt;意味着商家收益为0&lt;/span&gt;）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;模型预估方案&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;模型设计&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;考虑到商家收益数据过于稀疏，曝光、点击数据则较为稠密，同时考虑到曝光（&lt;/span&gt;&lt;span&gt;平台收益&lt;/span&gt;&lt;span&gt;）、点击、下单（&lt;/span&gt;&lt;span&gt;商家收益&lt;/span&gt;&lt;span&gt;）等行为是强相关的行为，本次预估方案使用多任务模型联合建模。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;特征工程&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;将各阶段的特征离散化后通过Embedding加入模型中。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;根据不同队列长度下的流量数据分布情况，将队列长度等特征进行人工分桶再通过Embedding加入模型中。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;199&quot; data-ratio=&quot;0.3443181818181818&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5t1YHrX6s0icgZSick6w5DJEiblRdNfsPJ17xPaHg5VlpiaYxTicSibp9uAD2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1760&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1.3 在线决策&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;对于线上单条请求，使用离线最优Agent与线上系统进行交互和决策。和离线评估流程一致，依次按照如下流程执行决策过程：&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step1：系统反馈流量初始状态至Agent。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step2：Agent根据系统流量状态进行召回通道档位决策。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step3：系统按照Agent给出的召回决策结果进行队列召回，并将召回结果反馈给Agent。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step4：Agent根据召回结果及初始流量状态进行队列长度决策。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step5：系统按照Agent给出的队列长度决策结果执行截断操作，反馈截断后的队列状态给Agent。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step6：Agent根据截断后队列状态进行预估模型编号决策。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Step7：系统按照Agent给出的模型编号调用预估服务。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.2 系统建设&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;353&quot; data-ratio=&quot;0.611748818365969&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5ttzKTFjVPk739Gicl4IgW9Y1fybvTqcHsMv8yPqtKic6Q5UInQjuFODdg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2962&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在智能算力第一期中，我们已经完成了以决策组件为核心，以采集、调控和离线组件为支撑的智能算力系统基本建设。在本期中，我们围绕着从单动作局部最优决策扩展到多动作组合最优决策的核心需求。在系统建设上，除了多动作组合最优决策的基本能力建设外，更关注的智能算力系统的稳定性和通用性建设，从而支撑智能算力系统在外卖广告全业务线的全面应用。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.2.1 决策组件Agent&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;决策组件Agent作为智能算力系统的客户端，嵌入到广告投放系统中各个模块，负责系统流量算力的分发决策。在本期中，我们主要在决策能力上进行了轻量化、精细化迭代，以及相关能力的标准化建设。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;在决策能力上&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;建设轻量的多动作组合决策能力&lt;/strong&gt;：我们基于进化算法实现了轻量的多动作组合决策能力，进化算法相关前文已经介绍，这里主要介绍下轻量化。&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;为什么需要轻量化&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：在广告投放系统中，对于线上的时延要求非常严苛，在多动作下需要进行序列决策，决策次数理论上等于决策动作的数量，因此智能算力决策必须在效果不降（&lt;span&gt;或微降&lt;/span&gt;）下尽可能的轻量化，才能满足线上RT要求。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;如何建设&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：(1) 模型本地化，减少网络时延，这个也是将决策能力封装到SDK而不是建设模型决策服务的主要原因。(2) 模型轻量化，通过特征工程工作，尽可能地减少特征数量，减少在线特征处理的性能压力。(3) 决策并行处理，决策动作尽量和线上已有流程并行处理，减少整体链路耗时。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;轻量化效果&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：多动作组合决策相对单动作决策，广告链路耗时：TP99+1.8ms、TP999 +2.6ms，满足线上RT要求。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;建设精细化的系统状态反馈控制能力&lt;/strong&gt;：我们基于系统状态的实时收集和PID反馈控制算法，对算力档位参数进行微调，实现广告投放系统在动态算力分配过程中的稳定性保障。&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;为什么需要精细化&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：在广告投放系统中，稳定性非常重要，从单动作决策到复杂的多动作决策，智能算力决策的参数档位越来越多，对系统稳定性影响也越来越大，粗粒度的系统状态反馈控制已经无法保障系统稳定。在第一期弹性队列方案中也出现过稳定性调控异常的情况，在只依据粗粒度的整体集群系统状态数据进行稳定性调控时，会偶发单机性能异常引起整体集群状态变化剧烈，导致算力调控不稳定。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;如何建设&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：一方面是系统状态数据的精细化，数据粒度从集群细化到机房和单机，同时数据指标支持细粒度的自定义扩展。另一方面是系统调控目标和策略的精细化，调控目标从集群的整体稳定细粒度到机房和单机稳定，我们将系统状态实时反馈控制的最小单位定义为一个调控器，对于每一个调控目标，需要一个或一组调控器支持。另外，为更好地支持单机粒度的反馈控制，我们将系统状态反馈控制能力从调控组件迁移复用到了决策组件，决策组件可以通过容器信息读取和拦截的方式，直接采集部分单机粒度的状态指标，并将调控结果作用到嵌入的机器，形成闭环调控；单机粒度的反馈控制不再强依赖采集组件的链路反馈，系统状态反馈的时延，也从秒级降低到了毫秒级，极大地提高了反馈控制的准确性和效率。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;在标准化建设上&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在多动作组合决策下对在线决策有了新的要求，一方面需要考虑通用性，做好基础能力沉淀，另一方面需要和上层业务减少耦合，从而赋能更多动作和业务场景；同时外卖广告工程架构已经完成了阶段性的&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651766814&amp;amp;idx=1&amp;amp;sn=ffa130184ee8596cb7b7e3ee0a884683&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;平台化建设&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;sup&gt;[4]&lt;/sup&gt;，其中标准化是平台化建设的基础，因此智能算力决策组件分别从功能、数据、流程上进行了标准化建设。智能算力的标准化建设，对智能算力从单动作决策到多动作组合决策再扩展到各大业务场景（&lt;/span&gt;&lt;span&gt;点—&amp;gt;线—&amp;gt;面&lt;/span&gt;&lt;span&gt;）的全面建设，具有重要意义。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们将最小不可拆分的功能单元抽象为Action，在智能算力决策链路上的Action主要有：实验、特征拉取、特征计算、词典处理、参数处理、DCAF决策、ES-MACA决策、系统状态反馈控制、日志收集、监控等。通过Action的复用和扩展，提高在新动作场景和业务线上的接入效率。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在广告工程平台化建设中，使用上下文Context描述Action执行的环境依赖，包含输入依赖、配置依赖、环境参数依赖等。在智能算力在线决策中，我们在广告基础Context下扩展了智能算力Context，封装和维护智能算力的环境依赖，主要包含标准化的输入输出、决策特征、决策参数、决策策略等，Action间基于Context实现数据交互。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;业务的调用流程是完成功能和数据的组合，统一的流程设计模式是业务功能复用和提效的核心手段，我们基于平台化建设的管理平台和调度引擎，通过对Action的可视化拖拽，实现了智能算力功能的DAG编排和调度。&lt;/span&gt;&lt;/section&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.2.2 采集和调控组件&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;采集组件负责实时采集广告投放系统的状态数据，并进行标准化预处理，调控组件一方面依赖状态数据实现对整个系广告投放统状态的实时感知和系统模块粒度的算力调控；另一方面作为智能算力系统的中控服务，负责智能算力系统的系统管理，包含业务管理、策略管理、动作管理以及元信息管理等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们将系统状态实时反馈控制的最小单位定义为一个调控器，对于每一个动作决策，会涉及一到多个模块的算力变化，而每个模块的算力变化会带来多个数据指标的变化，因此对于一个动作可能需要配置多个调控器。从单动作决策扩展到多动作，这些调控器的数量会越来越多，如何提高对调控器的管理和接入效率，是一个关键问题。这里我们主要进行了异构数据标准化、调控流程通用化建设，基本实现了新调控场景的配置化接入，无需开发和发版。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;异构数据标准化&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;采集组件有多个异构数据源，包含来着美团监控系统CAT上报的业务数据、Falcon收集的机器指标数据，还有部分决策组件上报的数据。经过对数据格式和内容的分析，我们首先将数据以系统模块Appkey进行划分，Appkey之间数据独立，同时从数据类型（&lt;/span&gt;&lt;span&gt;Type&lt;/span&gt;&lt;span&gt;）出发，把数据分为业务指标（&lt;/span&gt;&lt;span&gt;Biz&lt;/span&gt;&lt;span&gt;）和机器指标（&lt;/span&gt;&lt;span&gt;Host&lt;/span&gt;&lt;span&gt;）；从数据维度（&lt;/span&gt;&lt;span&gt;Dimension&lt;/span&gt;&lt;span&gt;）出发，把数据分为集群粒度（&lt;/span&gt;&lt;span&gt;Cluster&lt;/span&gt;&lt;span&gt;）、机房粒度（&lt;/span&gt;&lt;span&gt;IDC&lt;/span&gt;&lt;span&gt;）、单机粒度（&lt;/span&gt;&lt;span&gt;Standalone&lt;/span&gt;&lt;span&gt;）；具体的指标（&lt;/span&gt;&lt;span&gt;Metric&lt;/span&gt;&lt;span&gt;）包含QPS、TP99、FailRate、其他扩展指标等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;188&quot; data-ratio=&quot;0.23095623987034036&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5ttjw0whBTf5nhmaYsWC3vALul0JUNxn69ZWUzoDGBGtN4iayLx5Py2Kg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2468&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;调控流程通用化&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;有了异构数据的统一表达，我们就可以设计通用的调控流程，我们以ProductId作为调控业务场景的唯一标识，以ControllerId作为调控器的唯一标识，一个ProductId映射一组ControllerId，每一个调控器Controller包含输入指标、调控策略、策略参数、输出结果。通用的调控过程为：获取配置的输入指标、调控策略，基于不同的调控策略选择不同的策略参数，执行该调控策略得到对应的输出结果。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另外，我们对调控器的调控效率和稳定性进行了优化。在外卖的双峰流量场景下，在非高峰时段，PID算法的累计误差容易积累过大，导致到了高峰时段调控周期长，系统状态反馈调节慢；同时也存在系统抖动或数据毛刺产生的不必要调控的情况。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基于此，我们采用了滑动窗口准入准出的机制，来提高效率和准确性。如下图所示，我们对于每一个调控器，维护了一个系统指标的滑动统计窗口，当连续M次系统指标达到了PID目标值T-设置的阈值P，该调控器才成功准入，误差开始累计；同时当连续N次系统指标低于PID目标值T-设置的阈值Q，该调控器成功准出，累计误差清零。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;187&quot; data-ratio=&quot;0.32365930599369086&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5t1RhhXZlaTBFBNwzKxuuInJKibvaJEKwjyyldibYehwzoPOgzJS3ia08aA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;3170&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.2.3 离线组件&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;span&gt;离线组件负责离线模型训练和参数求解等任务，主要包含样本收集、模型训练和参数求解三个部分。&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;样本收集&lt;/strong&gt;：在线上流量中，留出少量随机探索流量，随机决策召回通道、队列长度以及不同预估模型，同时将随机动作以及系统交互数据落表。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;模型训练&lt;/strong&gt;：离线处理随机流量日志，生成训练样本，训练收益预估的DNN模型。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;参数求解&lt;/strong&gt;：在CEM求解过程中，对于给定的策略，模拟线上交互环境生成流量请求信息，然后使用收益预估模型预估当前广告队列的收益，从而实现CEM策略评估。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4 实验&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.1 实验设置&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;系统算力容量的选取&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;算力容量指标选取和第一期一致。一方面，为了保证线上系统能根据实时流量快速调整，仍选择15min作为最小的调控单元；另一方面，离线模拟选用的系统容量为过去一周的午高峰流量算力。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Baseline选取&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;选取无智能算力（&lt;/span&gt;&lt;span&gt;固定决策&lt;/span&gt;&lt;span&gt;）的流量作为对照组。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;离线仿真模拟器——流量价值预估&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;使用过去14天非实验组数据作为训练集，进行两阶段训练（&lt;/span&gt;&lt;span&gt;一阶段全流量训练，二阶段随机探索流量训练&lt;/span&gt;&lt;span&gt;），使用当日随机探索流量作为测试集。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;离线参数求解&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;外卖场景中，同环比流量变化趋势基本一致，我们通过重放过去一周流量，离线计算每个时间片内（&lt;/span&gt;&lt;span&gt;15分钟为一个时间片&lt;/span&gt;&lt;span&gt;）最优参数并存储为词表。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.2 离线实验&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7795527156549521&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5t3Xg5xxKehtlyWBQyYDUDSZ48wcnqzdibaGOp92f7ibneAujviafu21Nibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;626&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;实验说明：&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Baseline&lt;/strong&gt;：算力C下的固定决策结果。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;仅弹性通道&lt;/strong&gt;：在“仅弹性通道”实验中，队列决策和模型决策使用Baseline固定方案，“仅弹性队列”和“仅决策模型”实验组则与之类似。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;分模块最优&lt;/strong&gt;：依次学习弹性通道、弹性队列、弹性模型，当前模块在学习时前置模块的参数固定为已经学到的最优参数，后置模块则使用Baseline固定方案。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;ES-MACA（全链路最优）&lt;/strong&gt;：弹性通道+弹性队列+弹性模型同时学习。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;从离线实验的效果来看，我们有以下结论：&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;三个单动作的最优结果整体收益加和大于分模块最优，也大于ES-MACA，说明三个模块策略会相互影响，联合优化时多动作的收益不是简单的加和关系。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;分模块最优方案效果不如ES-MACA方案效果（&lt;span&gt;ES-MACA对比分模块最优有0.53%的提升&lt;/span&gt;），说明后置模块的策略对前置模块的决策效果也存在一定影响。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.3 在线实验&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;通过一周的线上ABTest实验，我们在外卖广告验证了本方案的收益如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3229166666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVo31poV3gqtBEwWAt8iav5tmZcEjicicJ4iawvvT11IibvMk6ez5CAiaYweMKdE3gW5ajArCribqibbiaIboQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1344&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;实验设计说明：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;Baseline&lt;/strong&gt;：对照组，无任何智能算力决策。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;仅弹性队列&lt;/strong&gt;：实验组1，仅决策弹性队列（&lt;/span&gt;&lt;span&gt;与一期方案一致&lt;/span&gt;&lt;span&gt;）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;ES-MACA（&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;全链路最优&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;）&lt;/strong&gt;：实验组2，同时决策弹性通道、弹性队列和弹性模型。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5 总结与展望&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;这篇文章主要从全链路最优算力决策和系统建设两个方面，介绍了美团外卖广告智能算力从线性规划算法到进化算法的技术演进过程，给出了一种基于进化算法的多动作算力分配方案（&lt;/span&gt;&lt;span&gt;ES-MACA&lt;/span&gt;&lt;span&gt;）。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;未来，在算法策略上，我们将尝试强化学习算法，对系统全链路组合下的算力最优分配问题进行更精细化的建模和求解；在系统建设上，我们还将尝试和美团内部基础架构部门进行合作，从在线系统扩展到在线/近线/离线三层系统，通过智能算力统一决策调度，充分挖掘数据和算力的潜力。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;6 参考文献&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;[1] 顺辉、家宏、宋伟、国梁、乾龙、乐彬等，&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651763222&amp;amp;idx=1&amp;amp;sn=dadbae89e463870649b74d5265bebb5a&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;美团外卖广告智能算力的探索与实践&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;[2] Jiang, B., Zhang, P., Chen, R., Luo, X., Yang, Y., Wang, G., ... &amp;amp; Gai, K. (2020). DCAF: A Dynamic Computation Allocation Framework for Online Serving System. arXiv preprint arXiv:2006.09684.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;[3] Yang, X., Wang, Y., Chen, C., Tan, Q., Yu, C., Xu, J., &amp;amp; Zhu, X. (2021). Computation Resource Allocation Solution in Recommender Systems. arXiv preprint arXiv:2103.02259.&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;[4] 乐彬、国梁、玉龙、吴亮、磊兴、王焜、刘研、思远等，&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651766814&amp;amp;idx=1&amp;amp;sn=ffa130184ee8596cb7b7e3ee0a884683&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;广告平台化的探索与实践 | 美团外卖广告工程实践专题连载&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;7 本文作者&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;家宏、顺辉、国梁、乾龙、乐彬等，均来自美团外卖广告技术团队。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;----------  END  ----------&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;也许你还想看&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;  | &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651766814&amp;amp;idx=1&amp;amp;sn=ffa130184ee8596cb7b7e3ee0a884683&amp;amp;chksm=bd1219538a659045ae5d7df2f1d70c7b9416296cde513776080dddca9cc2cc2a04750d599407&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;美团外卖广告平台化的探索与实践&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651766814&amp;amp;idx=1&amp;amp;sn=ffa130184ee8596cb7b7e3ee0a884683&amp;amp;chksm=bd1219538a659045ae5d7df2f1d70c7b9416296cde513776080dddca9cc2cc2a04750d599407&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;美团外卖广告平台化的探索与实践&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;美团外卖广告平台化的探索与实践&lt;/a&gt;&lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651766814&amp;amp;idx=1&amp;amp;sn=ffa130184ee8596cb7b7e3ee0a884683&amp;amp;chksm=bd1219538a659045ae5d7df2f1d70c7b9416296cde513776080dddca9cc2cc2a04750d599407&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;美团外卖广告平台化的探索与实践&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;  |&lt;/strong&gt;&lt;/span&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651763222&amp;amp;idx=1&amp;amp;sn=dadbae89e463870649b74d5265bebb5a&amp;amp;chksm=bd126b5b8a65e24dda6173efb7216874dd666cf87c32b3fcf9f078af4347a62791834c4410c0&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;美团外卖广告智能算力的探索与实践&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;美团外卖广告智能算力的探索与实践&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;  |&lt;/strong&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651760534&amp;amp;idx=1&amp;amp;sn=89fcab81347782818edb98fd7fa76991&amp;amp;chksm=bd127edb8a65f7cd26f5f1bbbc6b670ef51e31a0d402d71d2a83a211376032e79d36f8a37dc5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;美团外卖特征平台的建设与实践&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;美团外卖特征平台的建设与实践&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;阅读更多&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;---&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765958&amp;amp;idx=1&amp;amp;sn=8201546812e5a95a2bee9dffc6d12f00&amp;amp;chksm=bd12658b8a65ec9de2f5be1e96796dfb3c8f1a374d4b7bd91266072f557caf8118d4ddb72b07&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;前‍端&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;前端&lt;/a&gt;&lt;span&gt;&lt;strong&gt; |&lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://t.1yb.co/jo7v&quot; textvalue=&quot; 安全&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt; &lt;/strong&gt; &lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765981&amp;amp;idx=1&amp;amp;sn=c2dd86f15dee2cbbc89e27677d985060&amp;amp;chksm=bd1265908a65ec86d4d08f7600d1518b61c90f6453074f9b308c96861c045712280a73751c73&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;算‍法&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;算法&lt;/a&gt;&lt;span&gt;&lt;strong&gt; |&lt;/strong&gt; &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765982&amp;amp;idx=1&amp;amp;sn=231b41f653ac7959f3e3b8213dcec2b0&amp;amp;chksm=bd1265938a65ec85630c546169444d56377bc2f11401d251da7ca50e5d07e353aa01580c7216&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;后‍端&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;后端&lt;/a&gt;&lt;span&gt;&lt;strong&gt; | &lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765964&amp;amp;idx=1&amp;amp;sn=ab6d8db147234fe57f27dd46eec40fef&amp;amp;chksm=bd1265818a65ec9749246dd1a2eb3bf7798772cc4d5b4283b15eae2f80bc6db63a1471a9e61e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;数‍据&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;数据&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765965&amp;amp;idx=1&amp;amp;sn=37e0c56c8b080146ce5249243bfd84d8&amp;amp;chksm=bd1265808a65ec96d3a2b2c87c6e27c910d49cb6b149970fb2db8bf88045a0a85fed2e6a0b84&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;安‍全&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;安全&lt;/a&gt;&lt;span&gt;&lt;strong&gt; | &lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765972&amp;amp;idx=1&amp;amp;sn=afe02ec92762c1ce18740d03324c4ac3&amp;amp;chksm=bd1265998a65ec8f10d5f58d0f3681ddfc5325137218e568e1cda3a50e427749edb5c6a7dcf5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;And‍roid&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;Android&lt;/a&gt;&lt;span&gt;&lt;strong&gt; |&lt;/strong&gt; &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765973&amp;amp;idx=1&amp;amp;sn=32a23bf1d278dda0398f993ab60a697e&amp;amp;chksm=bd1265988a65ec8e630ef4d24b4946ab6bd7e66702c1d712481cf3c471468a059c470a14c30d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;iO‍S&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;iOS&lt;/a&gt;&lt;span&gt; &lt;strong&gt; |&lt;/strong&gt; &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765963&amp;amp;idx=1&amp;amp;sn=a3de9ef267d07d94118c1611776a4b28&amp;amp;chksm=bd1265868a65ec906592d25ad65f2a8516338d07ec3217059e6975fc131fc0107d66a8cd2612&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;运‍维&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;运维&lt;/a&gt;&lt;span&gt;&lt;strong&gt; | &lt;/strong&gt;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;amp;mid=2651765974&amp;amp;idx=1&amp;amp;sn=763c1e37d04acffd0142a2852ecfb000&amp;amp;chksm=bd12659b8a65ec8dfcfeb2028ef287fae7c38f134a665375ba420556ce5d2e4cf398147bd12e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;测‍试&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;测试&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MjM5NjQ5MTI5OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsVGibnsaEib3aNlqF0tOrA2RGEmNSbia2nnohE4Tpf95UyTiaSjDVbHRfY8WNBeTuLLTaVdSckkNyEx1Q/0?wx_fmt=png&quot; data-nickname=&quot;美团技术团队&quot; data-alias=&quot;meituantech&quot; data-signature=&quot;10000+工程师，如何支撑中国领先的生活服务电子商务平台？数亿消费者、数百万商户、2000多个行业、几千亿交易额背后是哪些技术在支撑？这里是美团、大众点评、美团外卖、美团配送、美团优选等技术团队的对外窗口。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f51b8bfcd26e79563274022b552b94ea</guid>
<title>五一没地方去？来这里吧！</title>
<link>https://toutiao.io/k/m70wnkv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;我爱程序员&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;developerWorks&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;我们的产品：《码农周刊》 http://manong.io/ 、《开发者头条》 http://toutiao.io/&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>