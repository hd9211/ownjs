<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>f4ac862c57ca3c316d3cd6564d8d6686</guid>
<title>Redis 遇到的那些坑</title>
<link>https://toutiao.io/k/k4blfqn</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 作为当前最流行的 NoSQL 之一，想必很多人都用过。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Redis 有五种常见的数据类型：string、list、hash、set、zset。讲真，我以前只用过 Redis 的 string 类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于业务需求，用到了 Redis 的集合 set。这不，一上来就踩到坑了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前几天有个需求提测，测试小哥提了个 bug，并给了我一个日志截图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.18203125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCTYEdYVPZc4Kde55nqf1aWgllhO3ib0icicQtG1sQDtmH3Ij3b3GpAnDP1zN0FSrGohibCvp6bkVcwriag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;问题排查&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从堆栈信息定位到了项目的代码，大致如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; class CityService&lt;br/&gt;  &lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;setStatus&lt;/span&gt;&lt;span&gt;(CityRequest request)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// 根据城市码查询城市信息&lt;/span&gt;&lt;br/&gt;    Set&amp;lt;String&amp;gt; cityList = cityService.findByCityCode(request.getCityCode());&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (CollectionUtils.isEmpty(cityList)) {&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 遍历，做一些操作（报错就在这这一行）&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (String city : cityList) {&lt;br/&gt;      &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// 一些无关的代码...&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;报错的代码就在 for 循环那一行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一行看起来似乎没什么错误，跟 HashSet 和 String 转换有什么关系呢？往前翻一翻 cityList 是怎么来的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;cityList 会根据城市码查询城市信息，这个方法有如下三步：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;从本地缓存查询，若存在则直接返回；否则进行第二步。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;从 Redis 查询，若存在，存入本地缓存并返回；否则进行第三步。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;从 MySQL 查询，若存在，存入本地缓存和 Redis（set 类型）并返回；若不存在返回空。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;联系报错信息，再看这几步的代码，1、3 可能性较小；第二步因为之前没有直接用过 set 这种数据结构，嫌疑较大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是想先通过 Redis 客户端看下缓存信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一看不当紧，更疑惑了：Redis 的 key/value 前面有类似&lt;code&gt;\xAC\xED\x00\x05t\x00\x1B&lt;/code&gt; 的字符串（可能略有不同），而且还有乱码。如图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3703125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCTYEdYVPZc4Kde55nqf1aWg7NcBUIBPibobaqJRoQeWw8dtyDql0gqib01FUHh0YLhFYBwwkjuRSS6Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;乱码问题处理&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网上查了一番，原来是 spring-data-redis 的 RedisTemplate 序列化的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RedisTemplate 的默认配置如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;RedisAutoConfiguration&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt; &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt; &lt;span&gt;@ConditionalOnMissingBean&lt;/span&gt;(name = &lt;span&gt;&quot;redisTemplate&quot;&lt;/span&gt;)&lt;br/&gt; &lt;span&gt;&lt;span&gt;public&lt;/span&gt; RedisTemplate&amp;lt;Object, Object&amp;gt; &lt;span&gt;redisTemplate&lt;/span&gt;&lt;span&gt;(RedisConnectionFactory redisConnectionFactory)&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;throws&lt;/span&gt; UnknownHostException &lt;/span&gt;{&lt;br/&gt;  RedisTemplate&amp;lt;Object, Object&amp;gt; template = &lt;span&gt;new&lt;/span&gt; RedisTemplate&amp;lt;&amp;gt;();&lt;br/&gt;  template.setConnectionFactory(redisConnectionFactory);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; template;&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RedisTemplate 在操作 Redis 时默认使用 JdkSerializationRedisSerializer 来进行序列化的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于这个问题，修改下配置就可以了，示例代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@AutoConfigureAfter&lt;/span&gt;(RedisAutoConfiguration&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;RedisConfig&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; RedisTemplate&amp;lt;String, Object&amp;gt; &lt;span&gt;redisTemplate&lt;/span&gt;&lt;span&gt;(RedisConnectionFactory redisConnectionFactory)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    RedisTemplate&amp;lt;String, Object&amp;gt; redisTemplate = &lt;span&gt;new&lt;/span&gt; RedisTemplate&amp;lt;&amp;gt;();&lt;br/&gt;    redisTemplate.setConnectionFactory(redisConnectionFactory);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 使用 Jackson2JsonRedisSerialize 替换默认序列化&lt;/span&gt;&lt;br/&gt;    Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = &lt;span&gt;new&lt;/span&gt; Jackson2JsonRedisSerializer&amp;lt;&amp;gt;(Object&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    ObjectMapper objectMapper = &lt;span&gt;new&lt;/span&gt; ObjectMapper();&lt;br/&gt;    objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);&lt;br/&gt;    objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);&lt;br/&gt;    objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, &lt;span&gt;false&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;    jackson2JsonRedisSerializer.setObjectMapper(objectMapper);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 设置 key/value 的序列化规则&lt;/span&gt;&lt;br/&gt;    redisTemplate.setKeySerializer(&lt;span&gt;new&lt;/span&gt; StringRedisSerializer());&lt;br/&gt;    redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);&lt;br/&gt;&lt;br/&gt;    redisTemplate.setHashKeySerializer(&lt;span&gt;new&lt;/span&gt; StringRedisSerializer());&lt;br/&gt;    redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);&lt;br/&gt;    redisTemplate.afterPropertiesSet();&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; redisTemplate;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个配置改过之后，乱码的情况就没了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;类型转换问题&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;继续跟进前面的类型转换问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过客户端查看 Redis 的值，如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.48671875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCTYEdYVPZc4Kde55nqf1aWgZACt9GMiaxQKznIicFotaeMrFoyHcTds1mEMdnTAcaFs6JVUmcNZGOdw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是什么鬼？明显不对劲儿啊！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们想存储的是 set 类型，正常应该是三条数据，这里怎么只有一条？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想了想应该是向 Redis 存储值的时候有什么问题，于是翻到代码看了看怎么存的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;CityService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Set&amp;lt;String&amp;gt; &lt;span&gt;findCityByCode&lt;/span&gt;&lt;span&gt;(String cityCode)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 查询MySQL&lt;/span&gt;&lt;br/&gt;    List&amp;lt;CityDO&amp;gt; cityDoList = cityRepository.findByCityCode(cityCode);&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 封装数据&lt;/span&gt;&lt;br/&gt;    Set&amp;lt;String&amp;gt; cityList = &lt;span&gt;new&lt;/span&gt; HashSet&amp;lt;&amp;gt;();&lt;br/&gt;    cityDoList.forEach(record -&amp;gt; {&lt;br/&gt;      String city = String.format(&lt;span&gt;&quot;%s-%s&quot;&lt;/span&gt;, record.getType(), record.getCity());&lt;br/&gt;      cityList.add(city);&lt;br/&gt;    });&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 【问题出在这里】&lt;/span&gt;&lt;br/&gt;    redisService.add2Set(cacheKey, cityList);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; cityList;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;RedisService#add2Set 方法：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;RedisService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;public&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span&gt;&lt;span&gt;void&lt;/span&gt; &lt;span&gt;add2Set&lt;/span&gt;&lt;span&gt;(String key, T... values)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    redisTemplate.opsForSet().add(key, values);&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;乍一看好像没什么问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是再一看，RedisService#add2Set 方法中，values 是可变长度类型的参数，如果把整个 cityList（java.util.Set 类型）作为一个参数传给可变长度类型的参数会怎么样呢？&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;PS: 可变长度类型参数是 Java 中的一种语法糖，其实它本质上是一个数组。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;打个断点看下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6009070294784581&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCTYEdYVPZc4Kde55nqf1aWgoPTuL6bSqCOtRHjdMSGHaO9puVhfhT1H44n6wYWNVLdXsNMOc0ISfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;882&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到这里的 Set 类型，也就是传入的 cityList 被当成了数组中的一个元素，怪不得会报错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那这种情况该怎么处理呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实也很简单，把 cityList 转成数组就可以了：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;CityService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Set&amp;lt;String&amp;gt; &lt;span&gt;findCityByCode&lt;/span&gt;&lt;span&gt;(String cityCode)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// ...&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 【问题出在这里】转成数组，即 toArray 方法&lt;/span&gt;&lt;br/&gt;    redisService.add2Set(cacheKey, cityList.toArray());&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; cityList;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样入参就按照想要的方式来了：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6465324384787472&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCTYEdYVPZc4Kde55nqf1aWgcoibqeJ4iapdMkqF8I0pZotPWIGKmav9Xj48e6GAREThI7yIgrM8POJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;894&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再观察 Redis 的缓存值，可以看到也是想要的结果：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3421875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/ophTb90oYCTYEdYVPZc4Kde55nqf1aWg8szO01SqPJoTbJtN5QP2vJVJt6jk2PUXuXN61gpbtrtUqEjtvH4GBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到这里，问题算是搞定了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;结语&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文主要复盘了 Redis 使用过程中遇到的两个问题：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Redis key/value 乱码问题。原因是 RedisTemplate 的序列化问题，注意配置。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;HashSet 和 String 类型转换问题。主要是在操作 Redis 的 set 时（其他类型亦然），注意 API 的参数细节，不能想当然。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;漫漫踩坑路，且踩且珍惜。大家一起踩。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5555555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_gif/ophTb90oYCR6eOZrkKMnznEahtiajNrSAicJDk24paw3VDzbZRLXgyibXWEuZ4qhuSgXoeFaqj1gpV96gVpZCHc7g/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;639&quot;/&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e4f94506138473fb5f5edee394a715a8</guid>
<title>使用 React 和 Tailwind CSS 搭建项目模板</title>
<link>https://toutiao.io/k/3qm837k</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;span&gt;公众号关注 “太空编程”&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;pre&gt;&lt;section&gt;&lt;span&gt;设为 “&lt;/span&gt;&lt;span&gt;星标&lt;/span&gt;&lt;span&gt;”，带你了解硬核的编程知识！&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;众所周知，Tailwind CSS框架越来越流行，所以我决定尝试学习并使用Tailwind CSS来搭建一个项目模板，一方面自己深入学习下，二来帮助新人更快地上手Tailwind CSS开发。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;创建一个React项目&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过使用&lt;code&gt;create-react-app&lt;/code&gt;命令创建一个新的React项目&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;npx create-react-app cra-tailwind-template&lt;br/&gt;&lt;span&gt;cd&lt;/span&gt; cra-tailwind-template&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果没有安装过&lt;code&gt;create-react-app&lt;/code&gt;包，会先安装包，输入&lt;code&gt;yes&lt;/code&gt;直接安装&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样就成功创建了一个React项目模板，并进入到项目根目录&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;安装Tailwind CSS&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过以下命令执行安装&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;npm install tailwindcss@npm:@tailwindcss/postcss7-compat @tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;配置Craco&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Craco是一个为你创建的React项目而使用的简易的配置成层。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过在应用程序的根目录中添加craco.config.js文件，即可给eslint，babel，postcss等添加自定义配置，这样可以统一集中化管理所有的配置。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;npm install @craco/craco&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;安装好之后，编辑项目中package.json文件&lt;code&gt;scripts&lt;/code&gt;部分&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&quot;scripts&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;start&quot;&lt;/span&gt;: &lt;span&gt;&quot;craco start&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;build&quot;&lt;/span&gt;: &lt;span&gt;&quot;craco build&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;test&quot;&lt;/span&gt;: &lt;span&gt;&quot;craco test&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;eject&quot;&lt;/span&gt;: &lt;span&gt;&quot;react-scripts eject&quot;&lt;/span&gt;&lt;br/&gt;},&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，我们需要在项目根目录手动创建一个craco.config.js文件，并且添加tailwind和autoprefix作为PostCSS插件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;module.exports = {&lt;br/&gt;  style: {&lt;br/&gt;    postcss: {&lt;br/&gt;      plugins: [&lt;br/&gt;        require(&lt;span&gt;&#x27;tailwindcss&#x27;&lt;/span&gt;),&lt;br/&gt;        require(&lt;span&gt;&#x27;autoprefixer&#x27;&lt;/span&gt;),&lt;br/&gt;      ],&lt;br/&gt;    },&lt;br/&gt;  },&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;创建配置文件&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接着正式在项目中引入tailwind CSS框架，通过以下命令创建tailwind.config.js文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;npx tailwind init&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建好的文件位于项目的根目录下&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;编辑tailwind.config.js文件&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面，我们需要对tailwind.config.js文件进行编辑，将配置里&lt;code&gt;purge&lt;/code&gt;项根据模板的路径，这样避免没有使用到的样式编译进生产环境的代码中&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;module.exports = {&lt;br/&gt;  purge: [&lt;span&gt;&#x27;./src/**/*.{js,jsx,ts,tsx}&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;./public/index.html&#x27;&lt;/span&gt;],&lt;br/&gt;  darkMode: &lt;span&gt;false&lt;/span&gt;, &lt;br/&gt;  theme: {&lt;br/&gt;    extend: {},&lt;br/&gt;  },&lt;br/&gt;  variants: {&lt;br/&gt;    extend: {},&lt;br/&gt;  },&lt;br/&gt;  plugins: [],&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;将Tailwind引入到CSS中&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;打开&lt;code&gt;src/index.css&lt;/code&gt;文件，使用@tailwind命令来使用&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@tailwind base;&lt;br/&gt;@tailwind components;&lt;br/&gt;@tailwind utilities;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后将&lt;code&gt;index.css&lt;/code&gt;引入到你的&lt;code&gt;src/index.js&lt;/code&gt;文件中&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;import React from &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;;&lt;br/&gt;import ReactDOM from &lt;span&gt;&#x27;react-dom&#x27;&lt;/span&gt;;&lt;br/&gt;import &lt;span&gt;&#x27;./index.css&#x27;&lt;/span&gt;; // include index.css&lt;br/&gt;import App from &lt;span&gt;&#x27;./App&#x27;&lt;/span&gt;;&lt;br/&gt;import reportWebVitals from &lt;span&gt;&#x27;./reportWebVitals&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;ReactDOM.render(&lt;br/&gt;  &amp;lt;React.StrictMode&amp;gt;&lt;br/&gt;    &amp;lt;App /&amp;gt;&lt;br/&gt;  &amp;lt;/React.StrictMode&amp;gt;,&lt;br/&gt;  document.getElementById(&lt;span&gt;&#x27;root&#x27;&lt;/span&gt;)&lt;br/&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到此，所有的配置结束了，我们可以在模板或页面文件中使用Tailwind CSS代码了。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2910683ff4daee7abd65c14553114246</guid>
<title>个推异常值检测和实战应用</title>
<link>https://toutiao.io/k/tpgdqsf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot;&gt;&lt;p&gt;日前，由又拍云举办的大数据与 AI 技术实践｜Open Talk 杭州站沙龙在杭州西溪科创园顺利举办。本次活动邀请了有赞、个推、方得智能、又拍云等公司核心技术开发者，现场分享各自领域的大数据技术经验和心得。以下内容整理自个推资深算法工程师令狐冲现场分享：&lt;/p&gt;&lt;blockquote&gt;令狐冲（花名），个推资深算法工程师，目前负责个推深度学习相关研发工作，对 AI 算法有深入的了解及丰富的实践经验，擅长将大数据分析与深度学习神经网络相结合，为业务落地输出算法产品化能力。&lt;/blockquote&gt;&lt;p&gt;大家好，我是来自个推的令狐冲，今天主要分享大数据中的异常值检测和实战应用，围绕研究背景、异常值检测方法、异常检测实战应用等话题，结合相关实战数据介绍异常值检测算法的最新进展情况。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;研究背景&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;异常值检测是大数据分析中一个重要的研究方向，实时异常值自动检测有助于运营人员快速发现系统异常问题。我们常说的异常值通常是相对于正常值来表述的，要结合实际业务来讲一个值是否正常，也就说这是一个业务描述。如果我们要解决一个业务问题，首先要做的就是将这个问题数学化，将业务描述转化为数学描述，这样你才可以使用适合的算法或使用其他分析方法来解决。&lt;/p&gt;&lt;p&gt;对于异常值而言，从数学上看可以看做一个离群点。当然在实际业务中，考虑到业务的结合情况不同，有些异常值看似是离群点，但是从全局业务上看也可能是一个正常值。具体情况需要结合结果来分析，不过我们大致可以使用离群点来代表异常值。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c4b2ae1874fe46c977ad0c9eb4695bd0_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;959&quot; data-rawheight=&quot;317&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-c4b2ae1874fe46c977ad0c9eb4695bd0_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;959&quot; data-rawheight=&quot;317&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-c4b2ae1874fe46c977ad0c9eb4695bd0_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-c4b2ae1874fe46c977ad0c9eb4695bd0_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;上图为异常值描述图，从图中我们可以看到在回归时有一些值不在回归线上，这些就是离群点。当我们在做聚类或分类的时候，这些孤立的值可能就是我们的异常值。&lt;/p&gt;&lt;p&gt;&lt;b&gt;异常值检测相比其他人热门项目而言是一个比较小众的方向，但是它在流量监控、金融欺诈、系统故障检测等场景下也是有较多应用的：&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;流量监控：运维同学平常都比较关心流量检测，比如当服务访问出现异常的时候，需要第一时间找出问题&lt;/li&gt;&lt;li&gt;金融场景：金融场景涉及到的东西很多，因此异常检测我们以其中的金融欺诈举例：正常情况下的金融转账或消费是一个低频事件，但是当一个账号在短时间内多次转账或消费时就可能存在金融诈骗的风险&lt;/li&gt;&lt;li&gt;系统故障检测：这个在工业界用的较多，因为一个工业系统内会安装各种各样的传感器，这些传感器会实时传送系统内部件状态的数据，当这些系统内部件发生故障时往往会产生异常信号，如果能及时检测出异常信号找出异常原因就可以挽回大量的损失&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;b&gt;异常值检测方法&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;接下来和大家谈一下异常值检测的方法。业内对于异常值检测方法都有不同的观点，总结下来就会有很多的分类，因此今天我们只谈我的观点。在我看来异常值检测方法可以分为两种，一种是“基于统计的方法”，稍微了解一点统计的话应该知道，统计是有分布的，比如典型的 3σ 原则和箱体图；另一种则是“基于模型的方法”，也就是通过构建模型来区分正常值和异常值。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;基于统计的异常值检测&lt;/b&gt;&lt;/h3&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-e87eef9546716f595d24aa25bd103902_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1038&quot; data-rawheight=&quot;375&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-e87eef9546716f595d24aa25bd103902_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1038&quot; data-rawheight=&quot;375&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-e87eef9546716f595d24aa25bd103902_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-e87eef9546716f595d24aa25bd103902_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;如上图所示，左图是我们经常听到的 3σ 法则，3σ 法则比较简单但很实用，它是一个经验法则，具体是什么意思呢？其实 σ 是标准差，当我们检测数据服从正常的统计分布时，我们可以将超过 3σ 的数据认为是异常数据。它的标准均值为 0，从标准分布图来看，大约有 0.3% 的数据为异常值。当然如果你的均值是非 0 分布，你可以把均值加上去。不过由于 3σ 法则是一个经验法则，还是比较粗糙的，因此在实际工作中，建议大家只在某些特定的场景下使用它。&lt;/p&gt;&lt;p&gt;右图是箱体图，在数据的统计分析中特别常用，比如我们用 pandas 做处理时就经常使用这个方式处理异常值。如图所示构成箱体的一般是分界位的四分之一到四分之三，而分界则是左边箱体的边界减去箱体长度的某一倍数，通常我们这个倍数为 1.5 倍，异常值则是超过最左边和最右边边界的值。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-21ee247d512396ffbe6d6a0993f4b6c8_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;562&quot; data-rawheight=&quot;408&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-21ee247d512396ffbe6d6a0993f4b6c8_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;562&quot; data-rawheight=&quot;408&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-21ee247d512396ffbe6d6a0993f4b6c8_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-21ee247d512396ffbe6d6a0993f4b6c8_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;上图是两种统计方式的对应关系。假设数据分布是一个纯粹的正态分布，我们可以看到箱体图对应的 σ 值只有 2.7σ 左右，不到 3σ 。当然很多时候我们并不知道它的具体分布是什么，需要根据样本的方差、标准差来求 σ，如果你实在不知道是什么分布，可以将它假设为是一个正态分布。因为正态分布是自然界一个比较“和谐“的分布，一般场景中就算有偏差也不会过于离谱。&lt;/p&gt;&lt;p&gt;基于统计的异常值检测有两个明显的优点：一个是是简单方便，因为我们既不需要考虑它的鲜艳，也不需要考虑它的特殊分布；第二个则是因为这是基于统计学来的，有较好的数学基础。当然它的缺点也很明显：首先是需要较多的样本数据，其次是高维数据比较难处理。上图展示的是一维分布，处理起来还比较简单，高维数据中联合分布会涉及到一些相关性，处理起来就会比较困难。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;基于模型的异常值检测&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;接下来我们来谈一谈基于模型的异常值检测。在我们谈具体模型之前，我们需要先知道如果从分类的角度来看正常值和异常值，那它就是一个二分类问题，尽管它因为正常值多而异常值少的原因比常规的二分类问题特殊一些。因此我们可以把它看做一个样本不均衡、分类不均匀的数学分类问题。&lt;/p&gt;&lt;p&gt;&lt;b&gt;有监督模型&lt;/b&gt;&lt;/p&gt;&lt;p&gt;确认了问题类型后，我先具体介绍一下有监督模型，通过这个常见的分类算法，比如 k- 最近邻，可以知道到底是正常还是异常的标签。除此外还有典型的二分类模型支持向量机 SVM。同时因为样本不均衡的原因，也衍生出了 oneclassSVM。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0ed41805efc8d294edcebf7a3ebb0037_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;265&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-0ed41805efc8d294edcebf7a3ebb0037_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;265&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-0ed41805efc8d294edcebf7a3ebb0037_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-0ed41805efc8d294edcebf7a3ebb0037_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;那分类模型具体是如何进行异常值检测的呢？简单举个例子，大家可以看一下上图。我们常规的 SVM 是使用一个超平面将正负样本分开。但是如果只有一个类，或者说负样本极少的时候要怎么办呢？我可以使用超球面将正样本包含，然后将超球面以外的当做异常样本，通过这种方式去进行异常值检测。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-6d993f6abe161e7791a3411e78858928_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1028&quot; data-rawheight=&quot;384&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-6d993f6abe161e7791a3411e78858928_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1028&quot; data-rawheight=&quot;384&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-6d993f6abe161e7791a3411e78858928_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-6d993f6abe161e7791a3411e78858928_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;接着说一下现在比较多的神经网络深度学习的方法是如何用在异常值检测上的。一般来说神经网络方法比较多的用在分类问题上，如果你需要将它使用在异常值检测上，你可以输入一个样本值，令其经过一个隐藏层，经过 decoder 层进行编码得到输出向量。如果是正常的样本我们就让 input 和 output 尽可能的接近，将它压缩到隐藏层也就是压缩到一个 code 内，然后用它来进行表征。后续需要通过各种方式，比如均方误差损失等，训练网络减少输入和输出的误差，当这个网络能够达到正常值输入计算结果落实较小、异常值输入计算结果落实较大时，就可以用来进行异常值检测了。&lt;/p&gt;&lt;p&gt;上图我们可以看到右边对左边的模型进行了改进，不止是一层编码层，而是构造了中间的 code 分布，通过这个分布右边的稳定性会比左边好。&lt;/p&gt;&lt;p&gt;&lt;b&gt;无监督模型&lt;/b&gt;&lt;/p&gt;&lt;p&gt;刚刚介绍的是有监督模型，但是实际上我们做异常值检测时更多的还是使用无监督模型。因为异常值是很少的，而且还会出现没有遇到的情况，这就导致你标注的异常点会非常的少。所以我们更多的是通过无监督的学习方法，让异常值能够比较完整的表征出来。&lt;/p&gt;&lt;p&gt;&amp;lt;br&amp;gt; (二维码自动识别)&lt;/p&gt;&lt;p&gt;无监督模型比较典型的是下列三类：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;密度聚类：DBSCAN&lt;/li&gt;&lt;li&gt;孤立森林：IsolationForest（IF）&lt;/li&gt;&lt;li&gt;随机剪切森林：RadomCutForest（RCF）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;密度聚类这里就不用细讲了，参考上图左侧，大家可以看一下。&lt;/p&gt;&lt;p&gt;孤立森林最早是由周志华教授团队提出的，听名字大家可能觉得和随机森林或者 adboosting 这些方法相似，其实不止名字相似本质上也和这些方法相似。孤立森林是通过将一些样本或者一些点构造为多棵树，让这些值快速的到达叶子节点，之后根据每个点对应的树的深度来计算该点的平均深度。由于异常值和其他值不一样，会出现一些异常的现象，我们就可以通过设置阈值来快速的检测异常值。&lt;/p&gt;&lt;p&gt;随机剪切森林是由英文 RadomCutForest 直译过来的，简写为 RCF。它其实和孤立森林的整体思路是相同的，都是经过构造树来处理。但是因为我们构造树的时候需要选取样本，而随机剪切森林在采样方法上更好一些，能够更有效的处理多维度的相关性。同时因为随机剪切森林有更好的集成模块，所以在实战程度上比较推荐使用这个方法。&lt;/p&gt;&lt;p&gt;&lt;b&gt;刚才也讲过随机剪切森林和孤立森林的整体思路是相同的，那它们之间有什么区别？&lt;/b&gt;大家可以参考下图了解一下。左边的公式是一些数学映射，里面 c(n) 代表样本的平均深度。右图中的红线代表 s，也就是最后的异常值得分。蓝色曲线是构造的预设正弦曲线，异常值则是在某一时段让曲线的一段成为直线的部分。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-e4f3ff514f802186ca42f7faa2c9b025_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;618&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-e4f3ff514f802186ca42f7faa2c9b025_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;618&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-e4f3ff514f802186ca42f7faa2c9b025_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-e4f3ff514f802186ca42f7faa2c9b025_b.jpg&quot;/&gt;&lt;figcaption&gt;△ 孤立森林和随机剪切森林的区别&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;上图右侧上方的图表展示的是孤立森林算法的结果图。我们可以看到图中有两个异常值，孤立森林算法在计算异常值得分 s 时，对于后面的突变点会有突然增高，这里我们可以设置一个合适的阈值来找出对应的点。&lt;/p&gt;&lt;p&gt;上图右侧下方的图表展示的是随机剪切森林算法的结果图。我们可以明显看到虽然在整体上比较相似，但是该算法即便是前面较小的跳变点也可以精准找出，这就是随机剪切森林比孤立森林算法有优势的地方。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;异常值检测实战应用&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;说完了检测方法，我们接下来看一下异常值检测在实战中的应用。下面是某应用（app）的日活进行监测， 其日活并不是稳定不变的，比如促销活动时日活会变高，但当日活突然变低时则需要我们去排查是否统计日志或数据流本身出了问题。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-ea37b8b99cb0107e00453829777fa436_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;961&quot; data-rawheight=&quot;518&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-ea37b8b99cb0107e00453829777fa436_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;961&quot; data-rawheight=&quot;518&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-ea37b8b99cb0107e00453829777fa436_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-ea37b8b99cb0107e00453829777fa436_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;上图是某应用 2016 年 8 月到 2019 年 9 月的日活统计。这么直接一看就可以看到它有很多的突变点，这些点可能就是它的异常行为。而异常值检测要做的就是使用统计或者机器学习的方法将这些异常点找出来。&lt;/p&gt;&lt;p&gt;&lt;b&gt;当成静止数据时的异常值检测&lt;/b&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6a6ef8c60a64cc4e4ce77055c7e61ebe_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;439&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-6a6ef8c60a64cc4e4ce77055c7e61ebe_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;439&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-6a6ef8c60a64cc4e4ce77055c7e61ebe_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-6a6ef8c60a64cc4e4ce77055c7e61ebe_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;上图是将之前的日活统计当成整体数据后检测的结果，这是一个静止的数据。我们可以看到左图  3σ 法则的检测效果并不好，只检测出了少数的几个点；而右图使用孤立森林算法则的优势则可以很明显的看到，它基本能够将人眼看到的异常全部检测出来，而且还有一些人眼没看到需要局部放大才能发现的数据，它也能够检测出来。&lt;/p&gt;&lt;p&gt;&lt;b&gt;当成流式数据时的异常值检测&lt;/b&gt;&lt;/p&gt;&lt;p&gt;在实际操作中我们会遇到很多流失数据的情况，不能够单纯的将数据当做静止的均值数据看，所以我们现在来看一下流式数据的异常值检测。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-ed1578c848f370540b50b488f61965ea_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;445&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-ed1578c848f370540b50b488f61965ea_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;445&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-ed1578c848f370540b50b488f61965ea_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-ed1578c848f370540b50b488f61965ea_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p&gt;在检测实时数据时，基于统计的方法可以使用滑动窗方式来检测，让窗去滑动更新，而我们只需要统计窗的情况就好。使用这种方式后 3σ 法则就可以将绝大部分的突变点都检测出来了，当然很明显的可以看到右图中使用 RCF（随机剪切森林算法能够检测到的突变点更多，不过现在这张图我没有放大，但是 RCF 其实将局部的小异常也检测出来了。&lt;/p&gt;&lt;p&gt;&lt;b&gt;无论是静止数据还是流式数据，我们都可以明显看到基于 RCF 的方法检测的更准确一些，但是这并不代表我们可以完全放弃基于统计的方法。&lt;/b&gt;当我们在检测那些数据量很大而且异常点的损失较少的数据时，我们仍然可以使用基于统计的方法。虽然它的精准度不如 RCF，但是它操作简单。目前大多数没有接触异常值检测的公司使用的都是基于统计的方法，通过设置一个 3σ 阈值或使用箱体图来进行异常值判断。而在对异常值检测有较深接触后，RCF 就成为了异常检测的主流。&lt;/p&gt;&lt;p&gt;下图是基于不同异变点所作的算法总结：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-306b5a272bb7660b5a97dd611959bb6e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;509&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-306b5a272bb7660b5a97dd611959bb6e_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;509&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-306b5a272bb7660b5a97dd611959bb6e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-306b5a272bb7660b5a97dd611959bb6e_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;ul&gt;&lt;li&gt;时序变点异常：对于这种时间点的突变，使用统计算法就可以比较好的检测出来；&lt;/li&gt;&lt;li&gt;时序折点异常：对于这种不是一个点的跳动而是台阶式跳动的异常，可以使用 RCF（随机剪切森林） 算法来检测；&lt;/li&gt;&lt;li&gt;时序周期异常：对于这种周期异常的检测，推荐的检测方法是流式图算法。这里说的图算法其实是指图神经网络。这点我之前并没有提到，是因为目前图算法还处于一个初步阶段，它的研究并不成熟，把图神经网络和异常值检测结合起来的运用还特别的少。但是因为图神经网络现在的发展很快，所以在未来它一定会在异常值检测方面有很好的效果。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;讲到现在其实我们已经看了很多具体的算法例子，但是如果一定要说哪种算法最好，没有办法给出一个唯一答案，&lt;b&gt;毕竟具体的选择需要和你的实际业务结合起来，合适才是最好的。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;演讲视频及PPT下载：&lt;/b&gt;&lt;/p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODc5ODgyMw%3D%3D%26mid%3D2653584702%26idx%3D1%26sn%3D21b630c8bf4049c5c7d7cbe9b1bcef76%26chksm%3Dbd1be9b68a6c60a096e0d85ea0c755b30f76b9cf35b844b848dfd3e3935fec0ddb7b4c15b931%26scene%3D38%26key%3Da5f340b2e72a4b8cef9dd56a2efffcf608b81060c642a7429ee7283049e033995856c02f3aa17f287783918b231cc9f262fc10fc00c095e752dbf1975257121b54392208069e31decc4d8dacb79cb34e93bcbc499fcbe7a60bdad3dc3163a951d81fd52385c35d20ed5085e021b89457c91870d989d989a020413259bfb31d1e%26ascene%3D3%26uin%3DMTU2OTkxMDQ2NA%253D%253D%26devicetype%3DiMac%2BMacBookPro11%252C4%2BOSX%2BOSX%2B10.12.6%2Bbuild%2816G2136%29%26version%3D12060113%26nettype%3DWIFI%26lang%3Dzh_CN%26fontScale%3D100%26exportkey%3DATO2%252BPUXZRsRnq5w%252FTqazzY%253D%26pass_ticket%3Daw51XfIpHdTF6VAuFZPmdO2U4G%252FHG%252FmsLSmeTuyo17l9B2tuczkXtE91axmWDaGu%26wx_header%3D0%26fontgear%3D1.000000%23%23&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; class=&quot;LinkCard LinkCard--noImage&quot;&gt;&lt;span class=&quot;LinkCard-content&quot;&gt;&lt;span class=&quot;LinkCard-text&quot;&gt;&lt;span class=&quot;LinkCard-title&quot; data-text=&quot;true&quot;&gt;个推异常值检测和实战应用&lt;/span&gt;&lt;span class=&quot;LinkCard-meta&quot;&gt;&lt;span&gt;​&lt;svg class=&quot;Zi Zi--InsertLink&quot; fill=&quot;currentColor&quot; viewbox=&quot;0 0 24 24&quot;&gt;&lt;path d=&quot;M13.414 4.222a4.5 4.5 0 1 1 6.364 6.364l-3.005 3.005a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707l3.005-3.005a2.5 2.5 0 1 0-3.536-3.536l-3.005 3.005a.5.5 0 0 1-.707 0l-.707-.707a.5.5 0 0 1 0-.707l3.005-3.005zm-6.187 6.187a.5.5 0 0 1 .638-.058l.07.058.706.707a.5.5 0 0 1 .058.638l-.058.07-3.005 3.004a2.5 2.5 0 0 0 3.405 3.658l.13-.122 3.006-3.005a.5.5 0 0 1 .638-.058l.069.058.707.707a.5.5 0 0 1 .058.638l-.058.069-3.005 3.005a4.5 4.5 0 0 1-6.524-6.196l.16-.168 3.005-3.005zm8.132-3.182a.25.25 0 0 1 .353 0l1.061 1.06a.25.25 0 0 1 0 .354l-8.132 8.132a.25.25 0 0 1-.353 0l-1.061-1.06a.25.25 0 0 1 0-.354l8.132-8.132z&quot;/&gt;&lt;/svg&gt;&lt;/span&gt;mp.weixin.qq.com&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-imageCell&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;p/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>de2b6c9595c6db2eeec507fb1f269b88</guid>
<title>15 个开源示例手把手带你用 PyQt 做小型桌面应用</title>
<link>https://toutiao.io/k/6cduri9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot;&gt;&lt;p&gt;【导语】：想制作属于自己的桌面应用程序吗？这有 15 个示例带你手把手入门。&lt;/p&gt;
&lt;h1&gt;简介&lt;/h1&gt;
&lt;p&gt;本次将介绍一个用 PyQt 框架和 Python 编写的 15 个小型桌面应用程序的合集。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;这其中很多应用程序在 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.learnpyqt.com/apps/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;learnpyqt 网站&lt;/a&gt;上有更详细的讨论。如果你对创建GUI应用程序还不熟悉，可以查看 &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.learnpyqt.com/courses/start/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;pyqt5 入门教程&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个开源项目的地址是：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/learnpyqt/15&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;-minute-apps&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;App列表&lt;/h1&gt;
&lt;p&gt;这些 app 将展示 Qt 框架的各个部分，包括高级小部件、多媒体、图形视图和无装饰窗口。当然，最有趣/有特色且功能完整的应用是扫雷，纸牌和画图。&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/browser&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;网络浏览器&lt;/a&gt;（无选项卡）-“MooseAche”&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/browser_tabbed&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;网络浏览器&lt;/a&gt;（选项卡）-“Mozzarella Ashbacker”&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/minesweeper&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;扫雷&lt;/a&gt;-“Moonsweeper”&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/notepad&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;记事本&lt;/a&gt;-“No2Pads”&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/calculator&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;计算器&lt;/a&gt;-“Calculon”（QtDesigner）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/wordprocessor&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;文本编辑器&lt;/a&gt;-“Megasolid Idiom”&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/camera&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;摄像头/快照&lt;/a&gt;-“NSAViewer”&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/mediaplayer&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;播放器&lt;/a&gt;-“Failamp”&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/notes&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;便笺&lt;/a&gt;-“Brown Note”（QtDesigner）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/paint&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;画图&lt;/a&gt;-“Piecasso”（QtDesigner）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/unzip&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;解压缩&lt;/a&gt;-“7Pez”（QtDesigner）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/translate&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;翻译&lt;/a&gt;-“Translataarrr”（QtDesigner）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/weather&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;天气&lt;/a&gt;-“Raindar”（QtDesigner）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/currency&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;货币转换器&lt;/a&gt;-“Doughnut”（PyQtGraph）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/learnpyqt/15-minute-apps/tree/master/solitaire&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;单人纸牌&lt;/a&gt;-“Ronery”（qgraphicscene）&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;安装使用&lt;/h1&gt;
&lt;p&gt;要使用这些app，首先需要安装requirements文件。在大多数情况下，唯一要安装的就是PyQt5，偶尔也要安装其他依赖。如果要安装某些app特定的依赖，进入那个app文件夹内运行以下代码即可：&lt;/p&gt;
&lt;h4&gt;shell代码&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;pip3 install -r requirements.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装完之后，即可用python3来执行&lt;/p&gt;

&lt;p&gt;应用程序的窗口就出现了。&lt;/p&gt;
&lt;h1&gt;详细介绍&lt;/h1&gt;
&lt;h2&gt;1、网络浏览器（无选项卡）&lt;/h2&gt;
&lt;h3&gt;Mooseache：浏览器发明之初，它会是什么样子？&lt;/h3&gt;
&lt;p&gt;这是一个用Python和Qt构建的web浏览器示例。使用Qt5.6中引入的QtWebEngineWidgets系统，它提供了一个带有常用控件的单窗口浏览，以及保存和加载HTML体验的功能。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-88db73f008a82c8e1157ef5f7ef9864d_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;492&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-88db73f008a82c8e1157ef5f7ef9864d_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;492&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-88db73f008a82c8e1157ef5f7ef9864d_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-88db73f008a82c8e1157ef5f7ef9864d_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;2、网络浏览器（选项卡）&lt;/h2&gt;
&lt;h3&gt;Mozzarella Ashbadger：使用选项卡升级你的浏览体验&lt;/h3&gt;
&lt;p&gt;Mozarella Ashbacker是网络浏览领域的最新革命！返回上一页！打印！保存文件！帮助列表！跟其他浏览器一样的话纯属巧合。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-ed01e032fcc892e49b9fe78acb52678f_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;492&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-ed01e032fcc892e49b9fe78acb52678f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;492&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-ed01e032fcc892e49b9fe78acb52678f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-ed01e032fcc892e49b9fe78acb52678f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;代码注释&lt;/h3&gt;
&lt;h4&gt;选项卡&lt;/h4&gt;
&lt;p&gt;添加选项卡支持使浏览器的内部结构变复杂不少，因为我们现在需要跟踪当前活动的浏览器视图，既要更新UI元素（URL栏、HTTPs图标）以更改当前活动窗口中的状态，又要确保UI事件被调度到正确的web视图。&lt;/p&gt;
&lt;p&gt;这是通过使用过滤事件的中间槽和添加信号重定向（使用lamba函数使其保持简短）来实现的。&lt;/p&gt;
&lt;h2&gt;3、扫雷&lt;/h2&gt;
&lt;h3&gt;Moonsweeper：用pyqt来克隆一艘扫雷艇，和外星人在月球上斗智斗勇。&lt;/h3&gt;
&lt;p&gt;探索神秘的月球，但不要太接近外星土著哦！&lt;/p&gt;
&lt;p&gt;Moonsweeper是一款单人益智游戏。游戏的目标是探索你着陆的太空火箭周围的区域，而不是接近致命的Bug外星人。可信赖的计数仪会告诉你附近的bug（雷）的数量。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-0c888ffbe0ed74bb0b356a5aa7e43f08_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;637&quot; data-rawheight=&quot;719&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-0c888ffbe0ed74bb0b356a5aa7e43f08_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;637&quot; data-rawheight=&quot;719&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-0c888ffbe0ed74bb0b356a5aa7e43f08_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-0c888ffbe0ed74bb0b356a5aa7e43f08_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是一个简单的单人探索游戏，模仿扫雷船，你必须在不触及隐藏的地雷的情况下揭示所有的小方块。这个小方块实现是使用定制的QWidget对象，这些对象分别将它们的状态保存为mine、status和相邻的mine计数。在这个版本中，地雷被外星虫子（Bug）取代，它们也可能是其他任何东西。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-ae8771a1b2b5b73b77bd1cf7ddf57c45_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;637&quot; data-rawheight=&quot;719&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-ae8771a1b2b5b73b77bd1cf7ddf57c45_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;637&quot; data-rawheight=&quot;719&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-ae8771a1b2b5b73b77bd1cf7ddf57c45_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-ae8771a1b2b5b73b77bd1cf7ddf57c45_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;代码注释&lt;/h3&gt;
&lt;h4&gt;第一回合设计&lt;/h4&gt;
&lt;p&gt;在许多扫雷的变种中，初始回合被认为是一个自由回合：如果你在第一次点击时击中一枚地雷，它会被移动到其他地方。这里我们投机取巧了一点，让第一次尝试确保它是在一个非地雷的地点。这使我们不必担心第一步走得不好导致需要我们重新计算相邻。我们把它解释为“围绕火箭的初步探索”，让它听起来挺合理的。&lt;/p&gt;
&lt;h2&gt;4、记事本&lt;/h2&gt;
&lt;h3&gt;No2Pads：用PyQt写的记事本&lt;/h3&gt;
&lt;p&gt;一个非常简单的记事本克隆，使用QTextEdit小部件来处理。支持文件加载、保存和打印。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-6350cf359acb954bc48558943e851f83_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;692&quot; data-rawheight=&quot;515&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-6350cf359acb954bc48558943e851f83_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;692&quot; data-rawheight=&quot;515&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-6350cf359acb954bc48558943e851f83_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-6350cf359acb954bc48558943e851f83_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;5、计算器&lt;/h2&gt;
&lt;h3&gt;Calculon：用PyQt写的桌面计算器&lt;/h3&gt;
&lt;p&gt;一个使用Python在PyQt中实现的简单计算器应用程序。用户界面是在Qt设计器中设计的，计算器操作是使用简单的基于堆栈的逻辑实现的。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8e415915eaef231bdc027de55f3268a8_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;715&quot; data-rawheight=&quot;680&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-8e415915eaef231bdc027de55f3268a8_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;715&quot; data-rawheight=&quot;680&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-8e415915eaef231bdc027de55f3268a8_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-8e415915eaef231bdc027de55f3268a8_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;6、文本编辑器&lt;/h2&gt;
&lt;h3&gt;Megasolid-Idiom-用PyQt写的富文本编辑器&lt;/h3&gt;
&lt;p&gt;这款编辑器是基于记事本的扩展，同样使用QTextEdit组件 ，但启用了富文本编辑。&lt;/p&gt;
&lt;p&gt;支持多种字体、样式和段落文本对齐方式。还支持拖放图像，这些图像会自动打开并嵌入。&lt;/p&gt;
&lt;p&gt;也支持保存和打开HTML格式的文档。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-348e8d87edc0e2da99b7bc127a135b5e_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;678&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-348e8d87edc0e2da99b7bc127a135b5e_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;678&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-348e8d87edc0e2da99b7bc127a135b5e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-348e8d87edc0e2da99b7bc127a135b5e_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;7、摄像头&lt;/h2&gt;
&lt;h3&gt;NSAViewer-有人正看着你&lt;/h3&gt;
&lt;p&gt;使用此摄像头快照应用程序，你可以拍摄摄像头当前正在查看的内容的照片。使用QtMultimedia多媒体框架处理与相机的所有交互，并支持多个摄像头（如果有的话）。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-691b3a78c13310236c5006bbf69f225c_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;800&quot; data-rawheight=&quot;570&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-691b3a78c13310236c5006bbf69f225c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;800&quot; data-rawheight=&quot;570&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-691b3a78c13310236c5006bbf69f225c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-691b3a78c13310236c5006bbf69f225c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;8、播放器&lt;/h2&gt;
&lt;h3&gt;Failamp-用PyQt打造简单的播放器&lt;/h3&gt;
&lt;p&gt;可以听音频和看视频，内置播放列表的简单应用程序。使用QtMultimedia和QtMultimediaWidgets处理播放和管理播放列表。&lt;/p&gt;
&lt;p&gt;主界面提供了一个播放列表窗口，您可以在其中拖拽要播放的媒体文件。提供了标准媒体控件，以及时间轴部件和音量控件。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-93d97b58924da2d762d2ea9ea2bb97a7_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;752&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-93d97b58924da2d762d2ea9ea2bb97a7_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;752&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-93d97b58924da2d762d2ea9ea2bb97a7_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-93d97b58924da2d762d2ea9ea2bb97a7_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你还可以弹出一个浮动在顶部的视频窗口。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-eaf4f07d207145003fcc5098aea44627_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;643&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-eaf4f07d207145003fcc5098aea44627_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;643&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-eaf4f07d207145003fcc5098aea44627_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-eaf4f07d207145003fcc5098aea44627_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;9、便笺&lt;/h2&gt;
&lt;h3&gt;Brown Note—PyQt中的桌面便笺应用程序&lt;/h3&gt;
&lt;p&gt;使用这个浮动笔记应用程序在桌面上做临时笔记。注释存储在本地SQLite数据库中。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-2bd998b659b03ec83a5b97af8ff2a380_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;358&quot; data-rawheight=&quot;376&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;358&quot; data-rawheight=&quot;376&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-2bd998b659b03ec83a5b97af8ff2a380_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个应用程序非常简单，但是演示了在PyQt中创建无装饰窗口。删除窗口装饰会导致不能拖动窗口，因此我们必须自己重新实现这种行为。&lt;/p&gt;
&lt;h2&gt;10、画图&lt;/h2&gt;
&lt;h3&gt;Piecasso-PyQt中的桌面绘画应用程序&lt;/h3&gt;
&lt;p&gt;用Piecasso来表达自己吧，唯一一个以派的现成图片为特色的绘画程序。
Piecasso是windows95中画图程序的一个克隆，在此之上做了一些增减。这个程序的特点是有标准的工具，包括钢笔，刷子，填充，喷雾罐，橡皮擦，文本和一些形状。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-5a5b36d5745259ffaba9e7f6c8ff37a1_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;743&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-5a5b36d5745259ffaba9e7f6c8ff37a1_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;743&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-5a5b36d5745259ffaba9e7f6c8ff37a1_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-5a5b36d5745259ffaba9e7f6c8ff37a1_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你可以复制任何形状的图像，但不支持粘贴+浮动。画布的大小是固定的，加载的图像会根据需要进行调整。还包括一个图章工具，其中预装了美味派的图片。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-23fda255e9b2d04e626258e08dabd26d_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;743&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-23fda255e9b2d04e626258e08dabd26d_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;743&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-23fda255e9b2d04e626258e08dabd26d_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-23fda255e9b2d04e626258e08dabd26d_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;代码注释&lt;/h3&gt;
&lt;h4&gt;事件处理&lt;/h4&gt;
&lt;p&gt;所有工具都是用嵌套的事件处理程序实现的，这些处理程序会根据需要转发事件。这允许在具有共同行为（例如形状绘制）的工具之间重复使用大量代码。添加选择区域动画需要一个计时器（更新爬行蚂蚁），这增加了一些代码复杂性。&lt;/p&gt;
&lt;h4&gt;染色法&lt;/h4&gt;
&lt;p&gt;从性能的角度来看，这是这个应用程序中最棘手的部分。直接检查像素太慢（整个画布填充时间约为10秒）。在Python中实现这一点的大多数代码都使用numpy，但我不想单独为此引入依赖关系。&lt;/p&gt;
&lt;p&gt;通过将图像导出为bytestring，然后向下采样到每像素一个布尔字节（用于匹配/不匹配）来简化比较循环，可以达到合理的速度。&lt;/p&gt;
&lt;p&gt;虽然这个搜索填充算法仍然相当愚蠢。&lt;/p&gt;
&lt;h2&gt;11、解压缩&lt;/h2&gt;
&lt;h3&gt;7Pez-有史以来最好/最差的解压应用程序&lt;/h3&gt;
&lt;p&gt;用一只猫解压你的文件。将zip文件拖放到悬空喵咪上，填充它手臂处。按下头部将会解压缩你的文件到当前目录。&lt;/p&gt;
&lt;p&gt;当你打开应用程序时，猫咪的手臂处是空的。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-0ec09d4a75aa9482135d865c66485eca_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;289&quot; data-rawheight=&quot;644&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;289&quot; data-rawheight=&quot;644&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-0ec09d4a75aa9482135d865c66485eca_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;只需将.zip文件拖放到猫咪上，就可以用文件填充它。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-40ebcb82f8fb9dc040d0b135786176f1_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;289&quot; data-rawheight=&quot;644&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;289&quot; data-rawheight=&quot;644&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-40ebcb82f8fb9dc040d0b135786176f1_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;按下猫的头，文件就会解压了。&lt;/p&gt;
&lt;h2&gt;12、翻译&lt;/h2&gt;
&lt;h3&gt;Translatarrrr-从任何语言到海盗语的即时翻译&lt;/h3&gt;
&lt;p&gt;从任何语言翻译（谷歌翻译支持）到海盗语。它调用了远程api &lt;a href=&quot;https://link.zhihu.com/?target=http%3A//api.funteransations.com&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;api.funteransations.com&lt;/span&gt;&lt;span class=&quot;invisible&quot;/&gt;&lt;/a&gt; 将英语翻译成海盗语，以及谷歌的一个非官方的Python包装器将其他语言翻译成英语。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-7b25c2e75b2507ebf1379df4b30d9701_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;497&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-7b25c2e75b2507ebf1379df4b30d9701_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;497&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-7b25c2e75b2507ebf1379df4b30d9701_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-7b25c2e75b2507ebf1379df4b30d9701_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;to English部分使用基于web界面的Python库，而不是官方API客户机，因为没有必要且客户端是非免费的。所以应用程序的这一部分不能保证100%工作。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-37a80852238444fb769106027898ccff_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;497&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-37a80852238444fb769106027898ccff_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;497&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-37a80852238444fb769106027898ccff_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-37a80852238444fb769106027898ccff_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;to Pirate部分使用了一个受严重限制的公共API。你大概只能免费翻译5次就被限制了。你可以花钱买一个API密钥来解除限制。&lt;/p&gt;
&lt;p&gt;所以总结下来，这个程序用处不大。&lt;/p&gt;
&lt;h2&gt;13、天气&lt;/h2&gt;
&lt;h3&gt;Raindar-PyQt内置的天气预报应用程序&lt;/h3&gt;
&lt;p&gt;获取每日天气和15小时预报。数据来自免费的天气预报API &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//openweathermap.org/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;openweathermap.org/&lt;/span&gt;&lt;span class=&quot;invisible&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-8d2b5d149f9cd0960bd1baf22d15022f_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;530&quot; data-rawheight=&quot;661&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-8d2b5d149f9cd0960bd1baf22d15022f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;530&quot; data-rawheight=&quot;661&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-8d2b5d149f9cd0960bd1baf22d15022f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-8d2b5d149f9cd0960bd1baf22d15022f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;14、货币转换器&lt;/h2&gt;
&lt;h3&gt;Doughnut-用PyQt实现的一个汇率追踪器&lt;/h3&gt;
&lt;p&gt;这是一个用PyQt实现的简单的货币汇率跟踪器，数据来自&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//fixer.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;fixer.io&lt;/a&gt; API。默认设置显示前180天的货币数据。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c1b8066dc0abd4a0a9cc1244aa634f09_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;623&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-c1b8066dc0abd4a0a9cc1244aa634f09_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;623&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-c1b8066dc0abd4a0a9cc1244aa634f09_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-c1b8066dc0abd4a0a9cc1244aa634f09_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;它会逐步加载数据，分辨率不断提高。给定日期的汇率显示在右侧面板中，并根据鼠标位置进行更新。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bda38702ac991455aad627eb5f030fbd_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;623&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-bda38702ac991455aad627eb5f030fbd_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;623&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-bda38702ac991455aad627eb5f030fbd_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-bda38702ac991455aad627eb5f030fbd_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;代码注释&lt;/h3&gt;
&lt;h4&gt;数据处理&lt;/h4&gt;
&lt;p&gt;该界面显示了过去180天的费率跟踪图（使用PyQtGraph）。由于我们不想向免费服务发垃圾邮件，所以对API的请求速率被限制为每秒1次，因此完整的数据加载时间为180秒（3分钟）。&lt;/p&gt;
&lt;p&gt;为了避免每次等待，我们使用requests_cache方法，它使用本地sqlite数据库来存储最近请求的结果。对数据的请求使用一种渐进的“搜索”方法：如果数据中存在缺口，则首先填充中间点，并且它更倾向于首先加载最近的时间点。这意味着随着时间的推移，整个情节的分辨率会逐渐提高，而不是只提高缺口之后的。&lt;/p&gt;
&lt;h4&gt;转换&lt;/h4&gt;
&lt;p&gt;默认情况下，应用程序检索的是欧元汇率，并显示到该基础货币的换算。如果您更改基础货币，它将再次检索该新货币的所有数据。这个行为稍微有点愚蠢，因为如果我们有对欧元的汇率，我们可以通过欧元计算任何其他货币-&amp;gt;货币转换（损失一点点准确性）。&lt;/p&gt;
&lt;h2&gt;15、单人纸牌&lt;/h2&gt;
&lt;h3&gt;Ronery-PyQt中的纸牌游戏&lt;/h3&gt;
&lt;p&gt;经典的纸牌游戏。游戏跟纸牌在其他方面是相同的，提供相同的选项。它由PyQt构建，使用QGraphicsScene来处理游戏区域。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-1215f2eb0591ee680e5fee6c23500a6a_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1088&quot; data-rawheight=&quot;814&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-1215f2eb0591ee680e5fee6c23500a6a_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1088&quot; data-rawheight=&quot;814&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-1215f2eb0591ee680e5fee6c23500a6a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-1215f2eb0591ee680e5fee6c23500a6a_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经典的纸牌获胜屏幕也实现了，尽管由于播放画布不是位图，所以不会“填满”。但仍然足够令人满意。&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-b14e1a952d17d5c356147c722e6505d4_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;685&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-b14e1a952d17d5c356147c722e6505d4_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;888&quot; data-rawheight=&quot;685&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-b14e1a952d17d5c356147c722e6505d4_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-b14e1a952d17d5c356147c722e6505d4_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置选项允许1次发1张或3张，允许3、5或无限轮。&lt;/p&gt;
&lt;h3&gt;代码注释&lt;/h3&gt;
&lt;h4&gt;卡片处理&lt;/h4&gt;
&lt;p&gt;这里使用的方法是将每个可以放置卡片的地方作为一个“堆栈”对象来处理它当前持有的卡片。每个堆栈负责其堆栈上卡片的布局。&lt;/p&gt;
&lt;p&gt;堆栈还负责接受/拒绝尝试在其上放置卡的行为。有些堆栈，如交易堆不接受任何降牌。其他的特殊堆有特定的规则。&lt;/p&gt;
&lt;p&gt;在大多数情况下，除了底部的“在玩”牌堆外，牌堆上的任何牌都没有联系。底部的卡片具有父子关系，允许一次拖动多张卡片。&lt;/p&gt;
&lt;h4&gt;结束动画&lt;/h4&gt;
&lt;p&gt;最后的结束动画是独立的，并且发生在比赛时间之外，所以第一个想法是有一个单独的假事件循环，使用QApplication.processEvents勾选。但那实现起来有点恶心。&lt;/p&gt;
&lt;p&gt;相反，动画是由QTimer处理的，QTimer通常在播放过程中处于空闲状态，一旦被触发就会反复ping一个动画前进投放。这会移动卡片（假装是“重力”，反弹）以及在它们离开游戏区域后重新堆叠它们。使用正常的堆叠代码就可以实现重新堆叠，这样它们就可以堆积起来。最后一个难题是阻止用户的交互，否则卡片仍然可以被抓取和丢弃。实现这一点的最简单方法是在整个窗口上放置一个对象，该对象被设置为捕获（并放弃）所有鼠标单击。&lt;/p&gt;
&lt;h1&gt;最后，想创建自己的应用程序吗？&lt;/h1&gt;
&lt;blockquote&gt;&lt;p&gt;如果你觉得这些 app 有些太过简洁，希望了解更多关于 PyQt 的信息，请参阅&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.learnpyqt.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;PyQt5 教程&lt;/a&gt;，它涵盖了使用PyQt构建app从前到后所需的所有知识。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你也可以在这个网站上找到关于这些“小型app”的评论。&lt;/p&gt;
&lt;h1&gt;扩展&lt;/h1&gt;
&lt;p&gt;如果你想了解更多，可以移步这里观看更多的官方示例：&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//diagrams.mingrammer.com/docs/getting-started/examples&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;diagrams.mingrammer.com&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;/docs/getting-started/examples&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt;
&lt;code&gt;开源前哨&lt;/code&gt; 日常分享热门、有趣和实用的开源项目。参与维护 10万+ Star 的开源技术资源库，包括：Python、Java、C/C++、Go、JS、CSS、Node.js、PHP、.NET 等。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c16acd1637c57e0e2f5cd5bdc649576d</guid>
<title>一个关键字提升 ClickHouse 1.6 倍聚合性能</title>
<link>https://toutiao.io/k/s27fe8j</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;春节前的最后一篇，在这里提前祝大家春节快乐 &lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OIyE3Zib48wOrIoEe1OItKJcz91e5WUqDoGG8uqw9kDYpicaG5xtTyLjW8d3PWBFnhJ15y6HuvBldUAzhex6XVCg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;20&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.29817444219066935&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OIyE3Zib48wOrIoEe1OItKJcz91e5WUqDYMTNta2T6xR7IrCGWndloEqPZg0pDTqrM4CH6dibwfqabODuuibUewSA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;986&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;ClickHouse 聚合函数的性能又提升了，相关 PR 在此 :&lt;/p&gt;&lt;p&gt;https://github.com/ClickHouse/ClickHouse/pull/19946&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;可以看到，这个 PR 在各种聚合函数中增加了 &lt;span&gt;__restrict 修饰符，最终提升了1.6倍的聚合函数性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.29534726904922454&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OIyE3Zib48wOrIoEe1OItKJcz91e5WUqDl1cW5w31xzgo3DguM9A3x0MtgvzicUb3M8ZWIMTebS2v1kJTkD92ubQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2966&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;__restrict 是 C 语言中的关键字，它的作用是为编译器带来附加信息。&lt;span&gt;当对指针&lt;/span&gt;&lt;span&gt;增加 &lt;/span&gt;&lt;span&gt;__restrict &lt;/span&gt;&lt;span&gt;修饰之后，表示当前指针在存活期间是独占内存的，不会有其他指针指向这个地址。编译器在知道这个信息之后，就可以做出优化，从而提升性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;由于这个 PR 比较新，目前我还没实际测试这项特性带来的性能提升幅度，待晚些时候我再补充一下实际数据吧。&lt;/p&gt;&lt;pre&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;好了，今天的分享就到这里吧。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;原创不易，如果这篇文章对你有帮助，欢迎 &lt;/span&gt;&lt;span&gt;点赞、转发、在看 &lt;/span&gt;&lt;span&gt;三连击&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;mpcps frameborder=&quot;0&quot; class=&quot;js_editor_cps&quot; data-datakey=&quot;1612493140408_0.19598575262206874&quot; data-uid=&quot;1612493140406&quot; data-type=&quot;1&quot; data-product=&quot;&quot; data-templateid=&quot;list&quot; data-pid=&quot;12341956&quot; data-categoryid=&quot;3&quot; data-appuin=&quot;3208869061&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;mpcps frameborder=&quot;0&quot; class=&quot;js_editor_cps&quot; data-datakey=&quot;1612493140409_0.13172758353475156&quot; data-uid=&quot;1612493140407&quot; data-type=&quot;1&quot; data-product=&quot;&quot; data-templateid=&quot;list&quot; data-pid=&quot;12886370&quot; data-categoryid=&quot;3&quot; data-appuin=&quot;3208869061&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;欢迎大家扫码关注我的&lt;/span&gt;&lt;span&gt;公众号和视频号&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;ClickHouse的秘密基地&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/OIyE3Zib48wMzw1n32iaibic8DREUYDNEWQ6vib8b3VicraCF7JicHcNAOz1uq6DGibcVMf4bKicWPzI7wuAfgI1ickQzoGQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;nauu的奇思妙想&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9806201550387597&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/OIyE3Zib48wPtibZMTRqHLl37qicMFy86WMWg6YVic1V0EzEqXdsCtOZmicbrvgCxGdBWQeQze7JLeibn0Q9elxzvltg/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;往期精彩推荐:&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;amp;album_id=1336889409916043265&amp;amp;__biz=MzA4MDIwNTY4MQ==#wechat_redirect&quot; textvalue=&quot;【专辑】ClickHouse的资讯手札&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;【专辑】ClickHouse的资讯手札&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;amp;album_id=1339543307420106752&amp;amp;__biz=MzA4MDIwNTY4MQ==#wechat_redirect&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;【专辑】ClickHouse的原理巩固&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;amp;album_id=1342290453848326144&amp;amp;__biz=MzA4MDIwNTY4MQ==#wechat_redirect&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;【专辑】ClickHouse的经验分享&lt;/a&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>