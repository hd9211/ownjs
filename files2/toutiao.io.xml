<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>533848e8ec93fc54fb48eae8392ae4f9</guid>
<title>如何获取优质信息？推荐一种高手都在用的方式！</title>
<link>https://toutiao.io/k/5wlqiik</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AjN1jquNavib3NlJt37DBSrTmLaGd7y82j0SCAaW8XmlHAt33xPM7x3iaib7e2IWPWRXJuoYJczl3ibCpPpQSyH2rg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;你是通过什么方式&lt;/span&gt;&lt;span&gt;&lt;strong&gt;获取优质信息&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;呢？&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;公众号？博客？播客？短视频？微博？图书？&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;今天推荐一种&lt;/span&gt;&lt;span&gt;&lt;strong&gt;高手都在用&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;的「优质信息获取」方式！&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Newsletter&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AjN1jquNavib3NlJt37DBSrTmLaGd7y82icbyrtFQ5edhQTZA13mpdrBmbianfFq2ib4Jiar4GBhSN4ppvVY1RrTgPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Newsletter中文可翻译成新闻信或电子报，是一个&lt;/span&gt;&lt;span&gt;&lt;strong&gt;基于电子邮件的信息分发&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;产品。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Newsletter多用于组织机构向客户推送相关新闻信息，一般机构网站首页上会有邮件订阅的链接。&lt;br/&gt;对于个人，Newsletter作为信息发布产品，有免中介、一对多自动分发的特点，开始&lt;/span&gt;&lt;span&gt;&lt;strong&gt;受到一些高手的青睐&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。比如一些知名记者开始逃离Facebook、Twitter等社交平台，面向用户推出付费Newsletter订阅服务。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;码农周刊&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AjN1jquNavib3NlJt37DBSrTmLaGd7y82DrAxiaNsRbvwj4Zia3EfVibO9icDGEw4sXicqGia1qajnleLEU7q74qIa16w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;码农周刊是一份&lt;/span&gt;&lt;strong&gt;&lt;span&gt;专为广大程序员、编程爱好者们打造&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;的IT技术周刊。每周发送。&lt;br/&gt;2013年9月12日创刊至今，已发送300多期，订阅用户超20万。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;专业、简单、有用&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，是我们一直坚持的办刊宗旨。一路走来，我们见证了不少订阅用户从编程新手进阶成了高级程序员、架构师、CTO……&lt;br/&gt;2020年4月，为了给用户提供更优质的服务，我们面向码农周刊VIP会员推出了&lt;/span&gt;&lt;strong&gt;&lt;span&gt;Newsletter服务&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。目前已发送87期。&lt;br/&gt;以下内容节选自&lt;/span&gt;&lt;span&gt;&lt;strong&gt;码农周刊VIP会员专属Newsletter&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，供参考。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;码农周刊VIP会员福利&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AjN1jquNavib3NlJt37DBSrTmLaGd7y822mOhDWWbtShmv7DouHMmYgZx9sxtfRibCpF3MNjADgYSfNgPDl4p0Og/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1. 52 期码农周刊VIP会员专属&lt;/span&gt;&lt;span&gt;&lt;strong&gt;Newsletter&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，让你及时掌握技术动向；&lt;br/&gt;2. 只限VIP会员加入的&lt;/span&gt;&lt;span&gt;&lt;strong&gt;交流圈子&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，让你与技术大牛切磋学习；&lt;br/&gt;3. VIP会员独享的&lt;/span&gt;&lt;span&gt;&lt;strong&gt;工作机会&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，为你介绍好公司的好机会；&lt;br/&gt;4. 更多会员福利，持续更新……&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何订阅「码农周刊VIP会员专属Newsletter」？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1. &lt;/span&gt;&lt;span&gt;&lt;strong&gt;微信扫描下方二维码&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，加入码农周刊VIP会员知识星球。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNavicibroqCN98y5SNT9NbfA3oHYQiaicFScHFfppgek7ZGicJiaHK45qc2zoccBibfEzIvzTsI4AB2xO2IaOw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2. 加入码农周刊VIP会员知识星球后，客服会联系您，请&lt;/span&gt;&lt;span&gt;&lt;strong&gt;留意知识星球内的私信&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3. 客服向您发送码农周刊VIP会员欢迎邮件，开启您的码农周刊VIP会员之旅。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;心动不如行动，赶快订阅吧！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>44aefc288e6c8b8dbfc6fddf20cce770</guid>
<title>微服务网关选型：5种主流 API 网关，哪个最香！</title>
<link>https://toutiao.io/k/jtyo70d</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;常用API网关的对比和选型，并讲解我司自研的微服务网关，干货满满！&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;微服务近几年非常火，围绕微服务的技术生态也比较多，比如微服务网关、Docker、Kubernetes等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我是于2019年开始接触微服务网关，当时和公司的一位同事一起开发，由于技术能力有限，我只负责网关后台，后续微服务网关的迭代，我其实没有参与，不过后来抽空看了微服务网关前台的代码，所以对这套微服务网关的实现原理算是基本掌握。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;最近在写技术栈相关的文章，刚好写到微服务网关，就把之前学习的知识进行简单总结，同时也把市面上常用的微服务网关进行梳理，一方面便于后续技术选型，另一方面也算是给自己一个交代。&lt;/span&gt;&lt;span&gt;下面是文章目录：&lt;/span&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7199533255542591&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBytlvnBaaMt3GQALHibIdRscawJFeUvRmceHek3icklwiaib04b5icicysRfw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1714&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;API网关基础&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;什么是API网关&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;API网关是一个服务器，是系统的唯一入口。&lt;/strong&gt; 从面向对象设计的角度看，它与外观模式类似。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;API网关封装了系统内部架构，为每个客户端提供一个定制的API。它可能还具有其它职责，如身份验证、监控、负载均衡、缓存、协议转换、限流熔断、静态响应处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;API网关方式的核心要点是，所有的客户端和消费端都通过统一的网关接入微服务&lt;/strong&gt;，在网关层处理所有的非业务功能。通常，网关也是提供REST/HTTP的访问API。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;网关的主要功能&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;微服务网关作为微服务后端服务的统一入口，它可以统筹管理后端服务，主要分为数据平面和控制平面：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据平面主要功能是接入用户的HTTP请求和微服务被拆分后的聚合。使用微服务网关统一对外暴露后端服务的API和契约，路由和过滤功能正是网关的核心能力模块。另外，微服务网关可以实现拦截机制和专注跨横切面的功能，包括协议转换、安全认证、熔断限流、灰度发布、日志管理、流量监控等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;控制平面主要功能是对后端服务做统一的管控和配置管理。例如，可以控制网关的弹性伸缩；可以统一下发配置；可以对网关服务添加标签；可以在微服务网关上通过配置Swagger功能统一将后端服务的API契约暴露给使用方，完成文档服务，提高工作效率和降低沟通成本。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9646697388632872&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBZVlibLMicx9QEwvmaRhCfoZmeHu0VNHI76GL8OAYnN5v7Wgh1GCjI2rg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;651&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;路由功能&lt;/strong&gt;：路由是微服务网关的核心能力。通过路由功能微服务网关可以将请求转发到目标微服务。在微服务架构中，网关可以结合注册中心的动态服务发现，实现对后端服务的发现，调用方只需要知道网关对外暴露的服务API就可以透明地访问后端微服务。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;负载均衡&lt;/strong&gt;：API网关结合负载均衡技术，利用Eureka或者Consul等服务发现工具，通过轮询、指定权重、IP地址哈希等机制实现下游服务的负载均衡。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;统一鉴权&lt;/strong&gt;：一般而言，无论对内网还是外网的接口都需要做用户身份认证，而用户认证在一些规模较大的系统中都会采用统一的单点登录（Single Sign On）系统，如果每个微服务都要对接单点登录系统，那么显然比较浪费资源且开发效率低。API网关是统一管理安全性的绝佳场所，可以将认证的部分抽取到网关层，微服务系统无须关注认证的逻辑，只关注自身业务即可。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;协议转换&lt;/strong&gt;：API网关的一大作用在于构建异构系统，API网关作为单一入口，通过协议转换整合后台基于REST、AMQP、Dubbo等不同风格和实现技术的微服务，面向Web Mobile、开放平台等特定客户端提供统一服务。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;指标监控&lt;/strong&gt;：网关可以统计后端服务的请求次数，并且可以实时地更新当前的流量健康状态，可以对URL粒度的服务进行延迟统计，也可以使用Hystrix Dashboard查看后端服务的流量状态及是否有熔断发生。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;限流熔断&lt;/strong&gt;：在某些场景下需要控制客户端的访问次数和访问频率，一些高并发系统有时还会有限流的需求。在网关上可以配置一个阈值，当请求数超过阈值时就直接返回错误而不继续访问后台服务。当出现流量洪峰或者后端服务出现延迟或故障时，网关能够主动进行熔断，保护后端服务，并保持前端用户体验良好。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;黑白名单&lt;/strong&gt;：微服务网关可以使用系统黑名单，过滤HTTP请求特征，拦截异常客户端的请求，例如DDoS攻击等侵蚀带宽或资源迫使服务中断等行为，可以在网关层面进行拦截过滤。比较常见的拦截策略是根据IP地址增加黑名单。在存在鉴权管理的路由服务中可以通过设置白名单跳过鉴权管理而直接访问后端服务资源。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;灰度发布&lt;/strong&gt;：微服务网关可以根据HTTP请求中的特殊标记和后端服务列表元数据标识进行流量控制，实现在用户无感知的情况下完成灰度发布。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;流量染色&lt;/strong&gt;：和灰度发布的原理相似，网关可以根据HTTP请求的Host、Head、Agent等标识对请求进行染色，有了网关的流量染色功能，我们可以对服务后续的调用链路进行跟踪，对服务延迟及服务运行状况进行进一步的链路分析。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;文档中心&lt;/strong&gt;：网关结合Swagger，可以将后端的微服务暴露给网关，网关作为统一的入口给接口的使用方提供查看后端服务的API规范，不需要知道每一个后端微服务的Swagger地址，这样网关起到了对后端API聚合的效果。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;日志审计&lt;/strong&gt;：微服务网关可以作为统一的日志记录和收集器，对服务URL粒度的日志请求信息和响应信息进行拦截。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;API网关选型&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;常用API网关&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先简单看一下市面上常用的API网关：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5245&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBian5sEsbeASkxkEichmicX08CibiamBiaZVfmb4WBG9fr1klvGkvIYDHt7Yw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2000&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Nginx&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nginx是一个高性能的HTTP和反向代理服务器。&lt;strong&gt;Nginx一方面可以做反向代理，另外一方面可以做静态资源服务器，接口使用Lua动态语言可以完成灵活的定制功能。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Nginx 在启动后，会有一个 Master 进程和多个 Worker 进程，Master 进程和 Worker 进程之间是通过进程间通信进行交互的，如图所示。Worker 工作进程的阻塞点是在像 select()、epoll_wait() 等这样的 I/O 多路复用函数调用处，以等待发生数据可读 / 写事件。Nginx 采用了异步非阻塞的方式来处理请求，也就是说，Nginx 是可以同时处理成千上万个请求的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Zuul&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Zuul 是 Netflix 开源的一个API网关组件，它可以和 Eureka、Ribbon、Hystrix 等组件配合使用。社区活跃，融合于 SpringCloud 完整生态，是构建微服务体系前置网关服务的最佳选型之一。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Zuul 的核心是一系列的过滤器，这些过滤器可以完成以下功能：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;统一鉴权 + 动态路由 + 负载均衡 + 压力测试&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;审查与监控&lt;/strong&gt;：与边缘位置追踪有意义的数据和统计结果，从而带来精确的生产视图。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;多区域弹性&lt;/strong&gt;：跨越 AWS Region 进行请求路由，旨在实现 ELB（Elastic Load Balancing，弹性负载均衡）使用的多样化，以及让系统的边缘更贴近系统的使用者。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Zuul 目前有两个大的版本：&lt;strong&gt;Zuul1 和 Zuul2&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Zuul1 是基于 Servlet 框架构建，如图所示，采用的是阻塞和多线程方式，即一个线程处理一次连接请求，这种方式在内部延迟严重、设备故障较多情况下会引起存活的连接增多和线程增加的情况发生。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5943152454780362&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBZdzBxickmfRynE9lYs9fejz3cYHOl7MCc0yooklJicpqxOFu12KLrR1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1548&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Netflix 发布的 Zuul2 有重大的更新，它运行在异步和无阻塞框架上，每个 CPU 核一个线程，处理所有的请求和响应，请求和响应的生命周期是通过事件和回调来处理的，这种方式减少了线程数量，因此开销较小。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7749077490774908&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBDCQiaKu7Xu8uPV38I4YorohFoTCughI0lkLSDq97CWWrKicxSuGRrjiaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1626&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Spring Cloud GateWay&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Spring Cloud Gateway 是Spring Cloud的一个全新的API网关项目，目的是为了替换掉Zuul1，它基于Spring5.0 + SpringBoot2.0 + WebFlux（基于⾼性能的Reactor模式响应式通信框架Netty，异步⾮阻塞模型）等技术开发，性能⾼于Zuul，官⽅测试，&lt;strong&gt;Spring Cloud GateWay是Zuul的1.6倍&lt;/strong&gt;，旨在为微服务架构提供⼀种简单有效的统⼀的API路由管理⽅式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Spring Cloud Gateway可以与Spring Cloud Discovery Client（如Eureka）、Ribbon、Hystrix等组件配合使用，&lt;strong&gt;实现路由转发、负载均衡、熔断、鉴权、路径重写、⽇志监控等，并且Gateway还内置了限流过滤器，实现了限流的功能。&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6675712347354138&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBVBMzzNTMrVpMXojqqtoFGADsroLSPic5BibTgn5nWUEmMoTaTPOjcRIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1474&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Kong&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kong是一款基于OpenResty（Nginx + Lua模块）编写的高可用、易扩展的，由Mashape公司开源的API Gateway项目。&lt;strong&gt;Kong是基于NGINX和Apache Cassandra或PostgreSQL构建的&lt;/strong&gt;，能提供易于使用的RESTful API来操作和配置API管理系统，所以它可以水平扩展多个Kong服务器，通过前置的负载均衡配置把请求均匀地分发到各个Server，来应对大批量的网络请求。&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6701986754966888&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBYIld46qNHXmzg1DvMExI09l3icQuibtapAR87H1VhQCRFFPQo2waQd9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1510&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kong主要有三个组件：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Kong Server ：基于Nginx的服务器，用来接收API请求。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Apache Cassandra/PostgreSQL ：用来存储操作数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Kong dashboard：官方推荐UI管理工具，也可以使用 restfull 方式管理admin api。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kong采用插件机制进行功能定制，插件集（可以是0或N个）在API请求响应循环的生命周期中被执行。插件使用Lua编写，目前已有几个基础功能：&lt;strong&gt;HTTP基本认证、密钥认证、CORS（Cross-Origin Resource Sharing，跨域资源共享）、TCP、UDP、文件日志、API请求限流、请求转发以及Nginx监控。&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4054441260744986&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBf3I4xvqwte7ibc6yJqlQBH3dWXBzniaKtsWEIFOUrdxiaDcMZTMvRlAFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1396&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kong网关具有以下的特性：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;可扩展性: 通过简单地添加更多的服务器，可以轻松地进行横向扩展，这意味着您的平台可以在一个较低负载的情况下处理任何请求；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;模块化: 可以通过添加新的插件进行扩展，这些插件可以通过RESTful Admin API轻松配置；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在任何基础架构上运行: Kong网关可以在任何地方都能运行。您可以在云或内部网络环境中部署Kong，包括单个或多个数据中心设置，以及public，private 或invite-only APIs。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Traefik&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Træfɪk 是一个为了让部署微服务更加便捷而诞生的现代HTTP反向代理、负载均衡工具。它支持多种后台 (Docker, Swarm, Kubernetes, Marathon, Mesos, Consul, Etcd, Zookeeper, BoltDB, Rest API, file…) 来自动化、动态的应用它的配置文件设置。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.568&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBx2Npyq1VKYXJiclK5lknus5cdykFgyoZT8KPdPmCwLDVJvvndMvlXLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2000&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重要特性：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;它非常快，无需安装其他依赖，通过Go语言编写的单一可执行文件；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;多种后台支持：Docker, Swarm, Kubernetes, Marathon, Mesos, Consul, Etcd；&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持支持Rest API、Websocket、HTTP/2、Docker镜像；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;监听后台变化进而自动化应用新的配置文件设置；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;配置文件热更新，无需重启进程；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;后端断路器、负载均衡、容错机制；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;清爽的前端页面，可监控服务指标。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;关于Traefik的更多内容，可以查看官网：https://traefik.cn/&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;API网关对比&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7698795180722892&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBPg6u5rcZm6TraAYx2jEm9Ak9QCxxGBZnmU72ccMPGl4hjTujvEmDcg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1660&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7158403869407497&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBUBQ4IABfcv8unwSibnIXTjCyfYia2OOlTM4fmIkCAkZMicEM1LaPHr3XA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1654&quot;/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.26964933494558646&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBDx2y075cDiaIhcP6BkibPicPFicNXaOP6cxzbTN08cGrBOyh8N4Y0IXfWQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1654&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面是网关对比截图，偷个懒，大家主要关注Kong、Traefik和Zuul即可：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;从&lt;strong&gt;开源社区活跃度&lt;/strong&gt;来看，无疑是Kong和Traefik较好；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;从&lt;strong&gt;成熟度&lt;/strong&gt;来看，较好的是Kong、Tyk、Traefik；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;从&lt;strong&gt;性能&lt;/strong&gt;来看，Kong要比其他几个领先一些；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;从&lt;strong&gt;架构优势&lt;/strong&gt;的扩展性来看，Kong、Tyk有丰富的插件，Ambassador也有插件但不多，而Zuul是完全需要自研，但Zuul由于与Spring Cloud深度集成，使用度也很高，近年来Istio服务网格的流行，Ambassador因为能够和Istio无缝集成也是相当大的优势。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面是其它网友的思考结论，可供参考：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;性能&lt;/strong&gt;：Nginx+Lua形式必然是高于Java语言实现的网关的，Java技术栈里面Zuul1.0是基于Servlet实现的，剩下都是基于webflux实现，性能是高于基于Servlet实现的。&lt;strong&gt;在性能方面我觉得选择网关可能不算那么重要，多加几台机器就可以搞定。&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;可维护性和扩展性&lt;/strong&gt;：Nginx+Lua这个组合掌握的人不算多，如果团队有大神，大佬们就随意了，当没看到这段话，对于一般团队来说的话，选择自己团队擅长的语言更重要。Java技术栈下的3种网关，对于Zuul和Spring Cloud Gateway需要或多或少要搞一些集成和配置页面来维护，但是对于Soul我就无脑看看文章，需要哪个搬哪个好了，尤其是可以无脑对接Dubbo美滋滋，此外Soul2.0以后版本可以摆脱ZK，在我心里再无诟病，我就喜欢无脑操作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;高可用&lt;/strong&gt;：对于网关高可用基本都是统一的策略都是采用多机器部署的方式，前面挂一个负载，对于而外需要用的一些组件大家注意一下。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;基于Traefik自研的微服务网关&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个是我司自研的微服务网关，基于Traefik进行开发，下面从技术选型、网关框架、网关后台、协议转换进行讲解，绝对干货！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;技术栈选型&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Traefik&lt;/strong&gt;：一款开源的反向代理与负载均衡工具，它最大的优点是能够与常见的微服务系统直接整合，可以实现自动化动态配置。traefik较为轻量，非常易于使用和设置，性能比较好，已在全球范围内用于生产环境。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Etcd&lt;/strong&gt;：一个Go言编写的分布式、高可用的一致性键值存储系统，用于提供可靠的分布式键值存储、配置共享和服务发现等功能。（更多内容可以查看文章 &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3OTU5NzQ1Mw==&amp;amp;mid=2247485759&amp;amp;idx=1&amp;amp;sn=41957e94a2c69426befafd373fbddcc5&amp;amp;chksm=cf034bddf874c2cb52a7aafea5cd194e70308c7d4ad74183db8a36d3747122be1c7a31b84ee3&amp;amp;token=179167416&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;肝了一个月的ETCD，从Raft原理到实践&lt;/a&gt; ）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Go&lt;/strong&gt;：并发能力强，性能媲美C，处理能力是PHP的4倍，效率高，语法简单，易上手，开发效率接近PHP。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.43399810066476735&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBibRxyvnVxEXXoibc7HRS13FiajiaibGVGlOT0ReqWUrMR8say8PibeCFqDEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2106&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;网关框架&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整个网关框架分为3块：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;网关后台&lt;/strong&gt;（hal-fe和hal-admin）：用于应用、服务和插件的配置，然后将配置信息发布到ETCD；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Traefik&lt;/strong&gt;：读取ETCD配置，根据配置信息对请求进行路由分发，如果需要鉴权，会直接通过hal-agent模块进行统一鉴权。鉴权完毕后，如果是Http请求，直接打到下游服务，如果是Grpc和Thrift协议，会通过hal-proxy模块进行协议转换。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;协议转换模块&lt;/strong&gt;：读取ETCD配置，对Traefik分发过来的请求，进行Grpc和Thrift协议转换（更多内容可以查看文章 &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3OTU5NzQ1Mw==&amp;amp;mid=2247486405&amp;amp;idx=1&amp;amp;sn=e03722a78de27f7aacea2189461b1848&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;RPC框架：从原理到选型，一文带你搞懂RPC&lt;/a&gt;），并通过服务发现机制，获取服务下游机器，并通过负载均衡，将转换后的数据打到下游服务机器。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5683333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBYBticvj5L2INK3jt4ibqymSmHNzBv9BR0VdfLicavrjgMxR5hsv5s3rMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;网关后台&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要由3大模块组成：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;应用&lt;/strong&gt;：主要包括应用名、域名、路径前缀、所属组、状态等，比如印度海外商城、印度社区；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;服务&lt;/strong&gt;：主要包括服务名、注册方式、协议类型、所属组、状态等，比如评论服务、地址服务、搜索服务。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;插件&lt;/strong&gt;：主要包括插件名称、插件类型、插件属性配置等，比如路径前缀替换插件、鉴权插件。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4255&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBVIt0CPjryQ2vAQtbIgymqKExAtwicG57z8xhMd2wgNcsibZFt4Ria1Ficg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2000&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;一个应用只能绑定一个服务，但是可以绑定多个插件。&lt;/strong&gt; 通过后台完成网关配置后，将这些配置信息生成Config文件，发布到ETCD中，Config文件需要遵循严格的数据格式，比如Traefix配置需要遵循官方的文件配置格式，才能被Traefik识别。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.432&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bByLQreTUBd7WOW8zW2ichnQRLrjgE3x7n4ibowYdefMzE7se5uy3LdhcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2000&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;协议转换模块&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;hal-proxy模块是整个微服务网关最复杂，也是技术含量最高的模块，所以给大家详细讲解一下。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;问题引入&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在讲这个模块前，我们先看下面几个问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;当请求从上游的trafik过来时，需要知道访问下游的机器IP和端口，才能将请求发送给下游，这些机器如何获取呢？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;有了机器后，我们需要和下游机器建立连接，如果连接用一次就直接释放，肯定对服务会造成很大的压力，这就需要引入Client缓存池，那这个Client缓存池我们又该如何实现呢？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最后就是需要对协议进行转换，因为不同的下游服务，支持的协议类型是不一样的，这个网关又是如何动态支持的呢？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6163175303197354&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBtjZLKhJdgInAgDOicm3WEic5CagBQL0ZPoaqicvLic2SueWicutFJjP1UeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1814&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;实现原理&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5095&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bB0CQAStBiapHJOGKsCbIVCEnTkLPDwusicrqk4TJ5mnM4aak39IYicGu1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2000&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们还是先看一下hal-proxy内部有哪些模块，首先是Resolver模块，这个模块的是什么作用呢？这里我简单介绍一下，目前公司内部通过服务获取到机器列表的方式有多种，比如MIS平台、服务树等，也就是有的是通过平台配置的，有的是直接挂在服务树下，无论哪种方式，我们都通过服务名，通过一定的方式，找到该服务下面所有的主机。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;所以Resolver模块的作用，其实就是通过服务名，找到该服务下的所有机器的IP和服务端口，然后持久化到内存中，并定时更新。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;协议模块就是支持不同的协议转换，每个协议类型的转换，都需要单独实现，&lt;strong&gt;这些协议转换，无非就是先通过机器IP和端口初始化Client，然后再将数据进行转换后，直接发送到下游的机器。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后就是连接池，之前我们其实也用到go自带的pool来做，但是当对pool数据进行更新时，需要加锁，所以性能一直起不来，后来&lt;strong&gt;改成了环形队列，然后对数据的操作全部通过原子操作方式，就实现了无锁操作，大大提高的并发性能。&lt;/strong&gt; 环形队列的代码，也给你安排上，可以直接看这篇文章 &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3OTU5NzQ1Mw==&amp;amp;mid=2247484024&amp;amp;idx=1&amp;amp;sn=8345b28106df822b7299dc1efaf49f30&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;Go语言核心手册-10.原子操作&lt;/a&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;实现逻辑&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个是hal-proxy的逻辑实现图，画了2天，包含所有核心对象的交互方式，这里就不去细讲，能掌握多少，靠大家自己领悟。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6637788778877888&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLEXuTOz5IRxEKunvZCtp6bBTW2LnXaNDLWwaWdNF1nich33BBmkAxvcsNn7A5homx0f4K3ZkziadfuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2424&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;尽信书则不如无书，因个人能力有限，难免有疏漏和错误之处，如发现bug或者有更好的建议，欢迎批评指正，不吝感激。&lt;/p&gt;&lt;/blockquote&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;微信8.0将好友放开到了一万，小伙伴可以加我大号了，先到先得，再满就真没了&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;扫描下方二维码即可加我微信啦，&lt;code&gt;2022，抱团取暖，一起牛逼。&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/CKvMdchsUwm6azMkIr9xkWmjuVuQWuj03AOILRglqP1zWJg2Qzroat4xkVdUTsqja7xtiaiap34WKSJuoUYAME6g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;512&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU1Nzg4NjgyMw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwnfLzMS3eAE7gXUvx6GYmnzuANVe5zJIGp0C084ANIia7Xo1nSADddF3eiajuhKDf0EofjI4t7hdqyA/0?wx_fmt=png&quot; data-nickname=&quot;macrozheng&quot; data-alias=&quot;&quot; data-signature=&quot;专注Java技术分享，涵盖SpringBoot、SpringCloud、Docker、中间件等实用技术，作者Github开源项目mall（50K+Star）。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2777777777777778&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/CKvMdchsUwlkU1ysoMgG69dVYbCQcI6Byneb8ibzZWPfUCr3T8CuBicCSGyFE6SpAtxpxtDCp6VlZ4F1hEL1BNyg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>36a9a794d238f8460434d64a1c94c0dc</guid>
<title>2.2W字汇总数据仓库知识点</title>
<link>https://toutiao.io/k/dis2a56</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;大家好，我是蓦然~&lt;/p&gt;&lt;p&gt;最近又在看&lt;strong&gt;阿里的大数据之路&lt;/strong&gt;，仔细的看一下，比偶尔翻一下还是更有助于理解，正好，把数据仓库的一些知识点整理了一遍。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;一&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;数据仓库概述&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;首先，我们先来看下数据库、数据集市、数据仓库以及数据湖的概念。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;什么是数据库？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;数据库（Database）是按照一定格式和数据结构在计算机保存数据的软件，属于物理层。&lt;/p&gt;&lt;p&gt;最早期是广义上的数据库，这个阶段的数据库结构主要以层次或网状的为主，这是数据库的数据和程序间具备非常强的依赖性，应用有一定局限性。&lt;/p&gt;&lt;p&gt;我们现在所说的数据库一般指的是关系型数据库。关系数据库是指采用了关系模型来组织数据的数据库，其以行和列的形式存储数据，具有结构化程度高，独立性强，冗余度低等优点。&lt;/p&gt;&lt;p&gt;关系型数据库主要用于联机事务处理OLTP（On-Line Transaction Processing），主要用于进行基本的、日常的事务处理，例如银行交易等场景。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;什么是数据集市？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;数据集市是一种微型的数据仓库，它通常是有更少的数据，更少的主题区域，以及更少的历史数据，如果数据仓库是企业级的，那数据集市就是部门级的，一般数据集市只能为某个局部范围内的管理人员服务。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;什么是数据仓库？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;数据仓库（Data Warehouse），可简写为DW或DWH。它是为企业所有级别的决策制定过程，提供所有类型数据支持的战略集合。它是单个数据存储，出于分析性报告和决策支持目的而创建。为需要业务智能的企业，提供指导业务流程改进、监视时间、成本、质量以及控制。&lt;/p&gt;&lt;p&gt;数据仓库之父比尔·恩门于1990年提出数据仓库（Data Warehouse），数仓主要是为解决企业的数据集成与分析问题。数据仓库主要功能是将OLTP经年累月所累积的大量数据，通过数据仓库特有的数据储存架构进行OLAP，最终帮助决策者能快速有效地从大量数据中，分析出有价值的信息，提供决策支持。自从数据仓库出现之后，信息产业就开始从以关系型数据库为基础的运营式系统慢慢向决策支持系统发展。&lt;/p&gt;&lt;p&gt;一句话总结：&lt;strong&gt;数据仓库存在的意义在于对企业的所有数据进行汇总，为企业各个部门提供统一的， 规范的数据出口。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据仓库相比数据库&lt;/strong&gt;，主要有以下&lt;strong&gt;两个特点&lt;/strong&gt;：&lt;/p&gt;&lt;p&gt;数据仓库与数据库的对比&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n23&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n24&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;维度&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n25&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;数据仓库&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n26&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;数据库&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n27&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n28&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;应用场景&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n29&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;OLAP&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n30&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;OLTP&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n31&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n32&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;数据来源&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n33&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;多数据源&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n34&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;单数据源&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n35&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n36&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;数据标准化&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n37&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;非标准化Schema&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n38&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;高度标准化的静态&lt;br/&gt;Schema&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n39&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n40&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;数据读取优势&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n41&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;针对读操作进行优化&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n42&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;针对写操作进行优化&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;04&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;什么是数据湖？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在现在这个时代，数据对于企业而言，已经是一种重要资产。随着企业的不断发展，数据不断堆积，企业希望把生产经营中的所有相关数据都完整保存下来，进行有效管理与集中治理，挖掘和探索数据价值。而数据湖就应运而生。&lt;/p&gt;&lt;p&gt;数据湖是一个集中存储各类结构化和非结构化数据的大型数据仓库，它可以存储来自多个数据源、多种数据类型的原始数据，数据无需经过结构化处理，就可以进行存取、处理、分析和传输。数据湖能帮助企业快速完成异构数据源的联邦分析、挖掘和探索数据价值。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据湖的本质&lt;/strong&gt;，是由“&lt;strong&gt;数据存储架构+数据处理工具&lt;/strong&gt;”组成的解决方案。&lt;/p&gt;&lt;p&gt;数据仓库和数据湖的不同类比于仓库和湖泊：仓库存储着来自特定来源的货物；而湖泊的水来自河流、溪流和其他来源，并且是原始数据。&lt;/p&gt;&lt;p&gt;数据湖与数据仓库的对比&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;维度&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;数据湖&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;数据仓库&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;应用场景&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;可以探索性分析所有类型的数据，包括机器学习、数据发现、特征分析、预测等&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;通过历史的结构化数据进行数据分析&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;使用成本&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;起步成本低，后期成本较高&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;起步成本高，后期成本较低&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;数据质量&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;包含大量原始数据，使用前需要清洗和标准化处理&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;质量高，可作为事实依据&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;适用对象&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;数据科学家、数据开发人员为主&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;业务分析师为主&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;05&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;数据仓库特点&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p cid=&quot;n81&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;5.1 数据仓库是面向主题的&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据仓库中的数据是按照一定的主题域进行组织的，每一个主题对应一个宏观的分析领域。数据仓库排除对于决策无用的数据，提供特定主题的简明视图。&lt;/p&gt;&lt;p&gt;举个例子：&lt;/p&gt;&lt;p&gt;比如说一个公司会有很多的部门，不同的部门都会去数据仓库拿数据，做自己要做的报表，我们把这一个部门或是某一个业务，也就是独立从我们数据仓库中获取数据的单元，把它称作为主题，也可以理解为一个主题就是一个部门。这个部门作为一个主题会从数据仓库总去获取数据，用于完成需要的报表。&lt;/p&gt;&lt;p cid=&quot;n85&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;5.2 数据仓库是集成的&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据仓库中的数据不是一开始就是在里面的，而是从各个分散的数据库中抽取出来的。但是有一个问题，就是这些来自不同数据库的数据会有重复和不一样的地方，如字段的同名异议、异名同义、单位不统一，字长不统一等。所以在集成的过程中，还要对数据进行清洗、规划、去敏等操作。&lt;/p&gt;&lt;p&gt;一句话就是，&lt;strong&gt;数据仓库是对企业内不同业务部门数据完整集合，而且还是处理过的数据。&lt;/strong&gt;&lt;/p&gt;&lt;p cid=&quot;n88&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;5.3 数据仓库的数据是稳定的&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据仓库中的数据主要是为了给企业做决策时分析使用，涉及的主要是对数据的查询，一般情况下不会对数据进行修改，如果数据仓库中的历史数据超过存储期限，则会直接删除。&lt;/p&gt;&lt;p&gt;因为数据仓库涉及的操作主要是查询，所以它的系统要比数据库简单很多，但是数据仓库涉及到查询的数据量一般都很大，所以在数据查询就有更高的要求。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一句话记忆，数仓里不存在数据的更新和删除（不是指数据到期的删除）操作。&lt;/strong&gt;&lt;/p&gt;&lt;p cid=&quot;n92&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;5.4 数据仓库中的数据是随时间变化而变化的&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据仓库中的数据不可更新是针对应用来说的，也就是说，数据仓库的用户进行分析处理是不进行数据更新操作的。但并不是说，在从数据集成输入数据仓库开始到最后被删除的整个生存周期中，所有的数据仓库数据都是永远不变的。&lt;/p&gt;&lt;p&gt;数据仓库的数据是随着时间变化而变化的主要表现如下：&lt;/p&gt;&lt;p&gt;1）数据仓库随着时间变化不断增加新的数据内容。数据仓库系统必须不断捕捉OLTP数据库中变化的数据，追加到数据仓库当中去，也就是要不断的生成OLTP数据库的快照，经统一集成增加到数据仓库中去；但对于确实不在变化的数据库快照，如果捕捉到新的变化数据，则只生成一个新的数据库快照增加进去，而不会对原有的数据库快照进行修改。&lt;/p&gt;&lt;p&gt;2）数据库随着时间变化不断删去旧的数据内容 。数据仓库内的数据也有存储期限，一旦过了这一期限，过期数据就要被删除。&lt;/p&gt;&lt;p&gt;3）数据仓库中包含有大量的综合数据，这些综合数据中很多跟时间有关，如数据经常按照时间段进行综合，或隔一定的时间片进行抽样等等。这些数据要随着时间的变化不断地进行从新综合。因此数据仓库的数据特征都包含时间项，以标明数据的历史时期。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一句话理解，数仓里会完整的记录某个对象在一段时期内的变化情况。&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;二&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;数据仓库分层&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们先来看下数据仓库为什么要分层，也就是分层的优势。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1）把复杂问题简单化&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;将复杂的问题分解成多层来完成，每一次只处理简单的任务，方便定位问题。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）减少重复开发&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;规范数据分层，通过的中间层数据，能够减少极大的重复计算，增加一次计算结果的复用性。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）隔离原始数据&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;不论是数据的异常还是数据敏感度，使真实数据与统计数据解耦开。&lt;/p&gt;&lt;p&gt;数据仓库基础分层主要是分为四层，如下图所示&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.0680529300567108&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn98qnTFhkUialuTHOKcKwTAPDhB4ibEJ94pLpLEibgSiaZVR2RMznwib8OpnA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;529&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;如上图所示，一个公司可能有多个业务系统，而数据仓库就是将所有的业务系统按照某种组织架构整合起来，形成一个仓储平台，也就是数仓。&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;四层分层&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;第一层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ODS——原始数据层&lt;/strong&gt;：存放原始数据&lt;/p&gt;&lt;p&gt;ODS层即操作数据存储，是最接近数据源中数据的一层，数据源中的数据，经过抽取、洗净、传输，也就说传说中的ETL之后，装入本层；一般来说ODS层的数据和源系统的数据是同构的，主要目的是简化后续数据加工处理的工作。从数据粒度上来说ODS层的数据粒度是最细的。ODS层的表通常包括两类，一个用于存储当前需要加载的数据，一个用于存储处理完后的历史数据。历史数据一般保存3-6个月后需要清除，以节省空间。但不同的项目要区别对待，如果源系统的数据量不大，可以保留更长的时间，甚至全量保存；数据在装入本层前需要做以下工作：去噪、去重、提脏、业务提取、单位统一、砍字段、业务判别。&lt;/p&gt;&lt;p&gt;第二层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;DWD——数据明细层&lt;/strong&gt;：对ODS层数据进行清洗、维度退化、脱敏等。&lt;/p&gt;&lt;p&gt;该层一般保持和ODS层一样的数据粒度，并且提供一定的数据质量保证，在ODS的基础上对数据进行加工处理，提供更干净的数据。同时，为了提高数据明细层的易用性，该层会采用一些维度退化手法，当一个维度没有数据仓库需要的任何数据时，就可以退化维度，将维度退化至事实表中，减少事实表和维表的关联。例如：订单id,这种量级很大的维度，没必要用一张维度表来进行存储，而我们一般在进行数据分析时订单id又非常重要，所以我们将订单id冗余在事实表中，这种维度就是退化维度。&lt;/p&gt;&lt;p&gt;第三层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;DWS——数据汇总层&lt;/strong&gt;：对DWD层数据进行一个轻度的汇总。&lt;/p&gt;&lt;p&gt;DWS层为公共汇总层，会进行轻度汇总，粒度比明细数据稍粗，会针对度量值进行汇总，目的是避免重复计算。该层数据表会相对比较少，大多都是宽表(一张表会涵盖比较多的业务内容，表中的字段较多)。按照主题划分，如订单、用户等，生成字段比较多的宽表，用于提供后续的业务查询，OLAP分析，数据分发等。&lt;/p&gt;&lt;p&gt;第四层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;DM——数据集市层&lt;/strong&gt;：为各种统计报表提供数据。&lt;/p&gt;&lt;p&gt;存放的是轻度聚合的数据，也可以称为数据应用层，基于DWD、DWS上的基础数据，整合汇总成分析某一个主题域的报表数据。主要是提供给数据产品和数据分析使用的数据，通常根据业务需求，划分成流量、订单、用户等，生成字段比较多的宽表，用于提供后续的业务查询，OLAP分析，数据分发等。从数据粒度来说，这层的数据是汇总级的数据，也包括部分明细数据。从数据的时间跨度来说，通常是DW层的一部分，主要的目的是为了满足用户分析的需求，而从分析的角度来说，用户通常只需要分析近几年的即可。从数据的广度来说，仍然覆盖了所有业务数据。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;注意：面试问到数仓分层，可以回答是四层，但是也一定要说是会根据企业实际情况来决定的。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;下面再介绍下三层和五层（来自于阿里大数据之路）的情况&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;三层分层&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;三层分层如下：&lt;/p&gt;&lt;p&gt;第一层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ODS——原始数据层&lt;/strong&gt;：存放原始数据&lt;/p&gt;&lt;p&gt;第二层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;DW——数据仓库层&lt;/strong&gt;：数据清洗，初步汇总&lt;/p&gt;&lt;p&gt;本层将从 ODS 层中获得的数据按照主题建立各种数据模型，每一个主题对应一个宏观的分析领域，数据仓库层排除对决策无用的数据，提供特定主题的简明视图。在DW层会保存BI系统中所有的历史数据，例如保存10年的数据。&lt;/p&gt;&lt;p&gt;第三层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;DM——数据集市层&lt;/strong&gt;：为各种统计报表提供数据。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;五层分层&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;五层分层如下：&lt;/p&gt;&lt;p&gt;第一层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ODS——原始数据层&lt;/strong&gt;：存放原始数据&lt;/p&gt;&lt;p&gt;第二层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;DWD——数据明细层&lt;/strong&gt;：对ODS层数据进行清洗、维度退化、脱敏等。&lt;/p&gt;&lt;p&gt;第三层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;DWS——数据汇总层&lt;/strong&gt;：对DWD层数据进行一个轻度的汇总。&lt;/p&gt;&lt;p&gt;第四层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ADS——数据应用层&lt;/strong&gt;：为各种统计报表提供数据&lt;/p&gt;&lt;p&gt;该层是基于DW层的数据，整合汇总成主题域的服务数据，用于提供后续的业务查询等。&lt;/p&gt;&lt;p&gt;第五层：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;DIM——维表层&lt;/strong&gt;：基于维度建模理念思想，建立整个企业的一致性维度。&lt;/p&gt;&lt;p&gt;维表层主要包含两部分数据：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;高基数维度数据&lt;/strong&gt;：一般是用户资料表、商品资料表类似的资料表。数据量可能是千万级或者上亿级别。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;低基数维度数据&lt;/strong&gt;：一般是配置表，比如枚举值对应的中文含义，或者日期维表。数据量可能是个位数或者几千几万。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;三&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;数据仓库核心理论&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;数据仓库建模&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p cid=&quot;n152&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.1 为什么需要数据建模&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在大数据时代，数据爆发式增长，如何将这些数据进行有序、有结构的分类组织和存储是大多数公司面临的一个挑战。&lt;/p&gt;&lt;p&gt;如果我们把数据当成书，我们也希望看到按类别整整齐齐排列好放置；如果把数据当做我们学习所做的笔记、总结，我们肯定是想把知识点按主题放在各个文件夹，每个知识点再排版整理好。&lt;/p&gt;&lt;p&gt;数据模型就是数据组织和存储方法，它强调从业务、数据存取和使用角度合理存储数据。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;数据仓库建模的目标是通过建模的方法更好的组织、存储数据，以便在性能、成本、效率和数据质量之间找到最佳平衡点。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;当有了&lt;strong&gt;适合业务和基础数据存储环境的模型（良好的数据模型）&lt;/strong&gt;，那么大数据就能获得以下好处：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;性能：快速的查询我们所需要的数据，减少数据的I/O吞吐。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;成本：极大的减少不必要的数据冗余，实现计算结果复用，降低数据的存储和计算成本。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;效率：极大的改善用户使用数据的体验，提高使用数据的效率。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;质量：改善数据统计口径的不一致性，减少数据计算错误的可能性。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;1.2 常见的四种数据仓库建模模型&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;现在数据处理大致可以分为两大类：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;操作型处理&lt;/strong&gt;，叫&lt;strong&gt;联机事务处理 OLTP（On-Line Transaction Processing）&lt;/strong&gt;，也可以称面向交易的处理系统，它是针对具体业务在数据库联机的日常操作，通常对少数记录进行查询、修改。用户较为关心操作的响应时间、数据的安全性、完整性和并发支持的用户数等问题。传统的数据库系统作为数据管理的主要手段，主要用于操作型处理。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;分析型处理&lt;/strong&gt;，叫&lt;strong&gt;联机分析处理 OLAP（On-Line Analytical Processing）&lt;/strong&gt;一般针对某些主题的历史数据进行分析，支持管理决策。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.2.1 ER模型（范式模型）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这是数据仓库之父Bill Inmon提出的建模方法，即实体关系（Entity Relationship，ER）模型。这是从全企业的高度设计一个3NF模型，用实体关系模型来描述企业业务，在范式理论上符合3NF。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关系模型主要应用于OLTP系统中，为了保证数据的一致性以及避免冗余，所以大部分业务系统的表都是遵循第三范式的。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：设计思路自上而下，适合上游基础数据存储，同一份数据只存储一份，没有数据冗余，方便解耦，易维护，缺点是开发周期一般比较长，维护成本高。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;范式理论&lt;/strong&gt;：&lt;/p&gt;&lt;p&gt;范式可以理解为设计一张数据表的表结构，符合的标准级别，也就是规范和要求。&lt;/p&gt;&lt;p&gt;优点：关系型数据库设计时，遵照一定的规范要求，目的在于降低数据的冗余性。&lt;/p&gt;&lt;p&gt;缺点：范式的缺点是获取数据时，需要通过Join拼接出最后的数据。&lt;/p&gt;&lt;p&gt;分类：目前业界范式有&lt;strong&gt;第一范式(1NF)、第二范式(2NF)、第三范式(3NF)&lt;/strong&gt;、巴斯-科德范式(BCNF)、第四范式(4NF)、第五范式(5NF)（这里只概述1NF、2NF和3NF）。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.2.2 维度模型&lt;/strong&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7941176470588235&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9h95ZRpbFumlu5y1P0McGmBuedKVFYnLvhPIIJSP2dW5wGkHkI6EJWw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1054&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;维度模型如图所示，主要应用于OLAP系统中，通常以某一个事实表为中心进行表的组织，主要面向业务，特征是可能存在数据的冗余，但是能方便的得到数据。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关系模型虽然冗余少，但是在大规模数据，跨表分析统计查询过程中，会造成多表关联，这会大大降低执行效率。所以一般都会采用维度模型建模，把相关各种表整理成两种：事实表和维度表两种。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在维度建模的基础上又可分为三种模型：&lt;strong&gt;星型模型、雪花模型、星座模型&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;维度建模是从分析决策的需求出发构建模型，为分析需求服务，因此它重点关注用户如何更快速的完成需求分析，同事具有较好的大规模复杂查询的相应能力。其典型的代表是星型模型，以及在一些特殊场景下使用的雪花模型。&lt;/p&gt;&lt;p&gt;维度建模设计分为以下步骤：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;选择需要进行分析决策的业务过程&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;定义粒度&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;识别维度&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;确认事实&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;1）星型模型&lt;/strong&gt;&lt;strong/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6223241590214067&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9oZMAOefpcLs9Z9hMTHtDQ6dDRkMpL8dxuUNpIVoADfia2vQT8JQibwNQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;654&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;星型模式是维度模型中最简单的形式，也是数据仓库以及数据集市开发中使用最广泛的形式。星型模式由事实表和维度表组成，一个星型模式中可以有一个或多个事实表，每个事实表引用任意数量的维度表。&lt;/p&gt;&lt;p&gt;星型模型与雪花模型的区别主要在于维度的层级，标准的星型模型维度只有一层，而雪花模型可能会涉及多层。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）雪花模型&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6203125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9pfDjOO9BchJtsiaX1BmxicAeYEnustjzZzUoHW7iaeqx3VraibAic2XyE9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;雪花模式是一种多维模型中表的逻辑布局，与星型模式相同，雪花模式也是由事实表和维度表所组成。所谓的“雪花化”就是将星型模型中的维度表进行规范化处理。当所有的维度表完成规范化后，就形成了以事实表为中心的雪花型结构，即雪花模式。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）星座模型&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6366322008862629&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9ItWJia7hLI9h2dLMr4E6pp8BicHaXicK5zkr6PxvXrmxBx69cNCIoalng/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;677&quot;/&gt;&lt;/p&gt;&lt;p&gt;数据仓库由多个主题构成，包含多个事实表，而维表是公共的，可以共享（例如两张事实表共用一些维度表时，就叫做星型模型），这种模式可以看做星型模式的汇集，因而称作星系模式或者事实星座模式。&lt;/p&gt;&lt;p cid=&quot;n206&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.2.3 Data Vault模型&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;DataVault由Hub（关键核心业务实体）、Link（关系）、Satellite（实体属性） 三部分组成 ，是Dan Linstedt发起创建的一种模型方法论，它是在ER关系模型上的衍生，同时设计的出发点也是为了实现数据的整合，并非为数据决策分析直接使用。&lt;/p&gt;&lt;p cid=&quot;n208&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.2.4 Anchor模型&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Anchor模型是对Data Vault模型做了进一步规范化处理，它是一个高度可扩展的模型，所有的扩展只是添加而不是修改，因此它将模型规范到6NF，基本变成了K-V结构模型。企业很少使用。&lt;/p&gt;&lt;p cid=&quot;n210&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.3 模型选择&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在数据仓库建模时，会涉及到模式的选择，我们要根据不同模式的特点选择适合具体业务的模式。&lt;/p&gt;&lt;p&gt;星型还是雪花，取决于性能优先，还是灵活更优先。&lt;/p&gt;&lt;p&gt;在实际开发中，不会绝对选择一种，根据情况灵活组合，甚至并存（一层维度和多层维度都保存）。&lt;/p&gt;&lt;p&gt;在传统企业数仓中，业务相对稳定，以范式建模为主。如电信、金融行业等。&lt;/p&gt;&lt;p&gt;在互联网公司，业务变化快，需求来来回回的改，计算和存储也不是问题，我们更关心快速便捷的满足业务需求，所以以维度建模为主。&lt;/p&gt;&lt;p cid=&quot;n216&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.4 数仓建模流程&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数仓建模就是业务模型-&amp;gt;概念模型-&amp;gt;逻辑模型-&amp;gt;物理模型的这样一个流程，下面我们详细解释一下各个模型阶段都要做什么。&lt;/p&gt;&lt;p&gt;1）&lt;strong&gt;业务建模&lt;/strong&gt;：需求沟通&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;划分整个单位的业务，一般按照业务部门的划分，进行各个部分之间业务工作的界定，理清各业务部门之间的关系。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;深入了解各个业务部门的内具体业务流程并将其程序化。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;提出修改和改进业务部门工作流程的方法并程序化。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据建模的范围界定，整个数据仓库项目的目标和阶段划分。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;业务建模阶段其实是一次和业务人员梳理业务的过程，在这个过程中，不仅能帮助我们技术人员更好的理解业务，另一方面，也能够发现业务流程中的一些不合理的环节，加以改善和改进。&lt;/p&gt;&lt;p&gt;2）&lt;strong&gt;领域（概念）建模&lt;/strong&gt;：画图想好怎么做&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;抽取关键业务概念，并将之抽象化。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;将业务概念分组，按照业务主线聚合类似的分组概念。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;细化分组概念，理清分组概念内的业务流程并抽象化。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;理清分组概念之间的关联，形成完整的领域概念模型。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;概念模型具体要求如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4940652818991098&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9C5ByJ152YyHWrvdGc9miclibKQAww87fNxtJGHfp2VxtNxBBT113KybA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;674&quot;/&gt;&lt;/p&gt;&lt;p&gt;领域概念建模就是运用了实体建模法，从纷繁的业务表象背后通过实体建模法，抽象出实体，事件，说明等抽象的实体，从而找出业务表象后抽象实体间的相互的关联性，保证了我们数据仓库数据按照数据模型所能达到的一致性和关联性。&lt;/p&gt;&lt;p&gt;3）&lt;strong&gt;逻辑建模&lt;/strong&gt;：表设计&lt;/p&gt;&lt;p&gt;业务概念实体化，并考虑其具体的属性。&lt;/p&gt;&lt;p&gt;事件实体化，也就是所谓的事实，并考虑其属性内容。&lt;/p&gt;&lt;p&gt;说明实体化，也就是所谓的维度，并考虑其属性内容。&lt;/p&gt;&lt;p&gt;逻辑模型具体要求如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4260042283298097&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9ibEr5W3XyDd3ibh1HXzWXPKfCVQM76D00O41WKJ8WG0Xxu5CeceIVw8A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;946&quot;/&gt;&lt;/p&gt;&lt;p&gt;总体来说就是建表，前面已经画出了关系图，这里只要将表里头有哪些字段考虑出来就可以，如果是事实表就考虑事实字段和业务主键，如果是维度表就考虑维度属性，SCD策略等等。在这里需要确定数据粒度，如果多个指标都用到一个字段，则取粒度最小的指标。如果不确定指标的量度，则取毫秒级作为粒度。&lt;/p&gt;&lt;p&gt;4）&lt;strong&gt;物理建模&lt;/strong&gt;：建表&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;针对特定物理化平台，做出相应的技术调整。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;针对模型的性能考虑，对特定平台作出相应的调整。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;针对管理的需要，结合特定的平台，做出相应的调整。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;生成最后的执行脚本，并完善。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;物理模型具体要求如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6028513238289206&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9sMfqMxvswYZuWICaUZicp3xOuNDelMpyAuSia1RAXxFibNe0Jp16n3LKw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;982&quot;/&gt;&lt;/p&gt;&lt;p&gt;综合现实的大数据平台、采集工具、etl工具、数仓组件、性能要求、管理要求等多方面因素，设计出具体的项目代码，完成数仓的搭建。&lt;/p&gt;&lt;p&gt;总结来说，上面的模型设计流程大部分应用于DWD层，也就是事实维度层。通过建模，捋清逻辑，把业务落实到一张张表，并梳理表于表之间的关系。&lt;/p&gt;&lt;p cid=&quot;n263&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.5 数仓建模过程&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;假设现在在构建一张订单表&lt;/p&gt;&lt;p&gt;从多个维度进行统计组合，形成多维度数据集，来从多个角度观察业务过程的好坏&lt;/p&gt;&lt;p&gt;1）&lt;strong&gt;选择业务过程&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;确认哪些业务处理流程是数据仓库应该覆盖的，是维度方法的基础。因此，建模的第一个步骤是描述需要建模的业务流程。例如，需要了解和分析一个零售店的销售情况，那么与该零售店销售相关的所有业务流程都是需要关注的。为了描述业务流程，可以简单地使用纯文本将相关内容记录下来，或者使用“业务流程建模标注”（BPMN）方法，也可以使用统一建模语言（UML）或其他类似的方法。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;业务过程就是需要那种业务场景下产生的订单表(划分到那个业务线和数据域)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;业务过程就是用户下单的订单记录表&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2）&lt;strong&gt;选择数据域&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;（1）申明粒度&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;粒度就是确认一条记录代表的含义或者是细化到何种程度(一条记录代表一个订单还是多个订单，如拼团的时候团长的单)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在选择维度和事实前必须声明粒度，因为每个候选维度或事实必须与定义的粒度保持一致。在一个事实所对应的所有维度设计中强制实行粒度一致性是保证数据仓库应用性能和易用性的关键。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;从给定的业务流程获取数据时，原始粒度是最低级别的粒度。建议从原始粒度数据开始设计，因为原始记录能够满足无法预期的用户查询。汇总后的数据粒度对优化查询性能很重要，但这样的粒度往往不能满足对细节数据的查询需求。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不同的事实可以有不同的粒度，但同一事实中不要混用多种不同的粒度。维度模型建立完成之后，还有可能因为获取了新的信息，而回到这步修改粒度级别。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;（2）确认维度&lt;/p&gt;&lt;p&gt;（3）确认事实&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.6 模型设计的思路&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;业务需求驱动，数据驱动，构造数据仓库有两种方式：一是自上而下，一是自下而上。&lt;/p&gt;&lt;p&gt;1）自上而下&lt;/p&gt;&lt;p&gt;Bill Inmon先生推崇“自上而下”的方式，即一个企业建立唯一的数据中心，就像一个数据的仓库，其中数据是经过整合、经过清洗、去掉脏数据的、标准的，能够提供统一的视图。要建立这样的数据仓库，并不从它需要支持哪些应用入手，而是要从整个企业的环境入手，分析其中的概念，应该有什么样的数据，达成整体概念。&lt;/p&gt;&lt;p&gt;2）自下而上&lt;/p&gt;&lt;p&gt;Ralph Kimball先生推崇“自下而上”的方式，他认为建设数据仓库应该按照实际的应用需求，加载需要的数据，不需要的数据不要加载到数据仓库中。这种方式建设周期较短，客户能够很快看到结果。（针对客户的需求，需求要什么就做什么）&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.7 模型落地实现&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1）按照命名规范创建表&lt;/p&gt;&lt;p&gt;2）开发生成维表和事实表的代码&lt;/p&gt;&lt;p&gt;3）进行代码逻辑测试，验证数据加工逻辑的正确性&lt;/p&gt;&lt;p&gt;4）代码发布，加入调度并配置相应的质量监控和报警机制&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;事实表设计&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;事实表作为数据仓库维度建模的核心，紧紧围绕着业务过程来设计，通过获取描述业务过程的度量来表达业务过程，包含了引用的维度和与业务过程有关的度量。&lt;/p&gt;&lt;p&gt;事实表有三种类型 : &lt;strong&gt;事务事实表、周期快照事实表和累积快照事实表&lt;/strong&gt;。&lt;/p&gt;&lt;p cid=&quot;n311&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;2.1 事实表设计原则&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;原则一：尽可能包含所有与业务过程相关的事实&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;原则二：只选择与业务过程相关的事实&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;原则三：分解不可加性事实为可加的事实&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;原则四：在选择维度和事实之前必须先声明粒度&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;粒度用于确定事实表中一行所表示业务的细节层次，决定了维度的扩展性。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;每个维度和事实必须与所定义的粒度保持一致。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;事实表设计过程中，粒度定义得越细越好，建议从最低级别的原子粒度开始。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;原子粒度提供了最大限度的灵活性，可以支持无法预期的各种细节层次的用户需求。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;原则五：在同一个事实表中不能有多种不同粒度的事实&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;下图为机票支付成功事务事实表：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3458755426917511&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9H1bKaFCXXbHBlx0Yq24yhWl9Zjic04PjyicapoSw3I0liaZXKT8lm917Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;691&quot;/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;对于上图事务事实表，粒度为“票一级”（实际业务中，一个订单可以同时支付多张票）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;票支付金额和票折扣金额两个事实的粒度与表定义的粒度一致，都为“票级”，支持按表的任意维度汇总。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;订单支付金额和订单票数粒度为“订单级”，与事实表粒度不一致，且不能进行汇总。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;若在汇总计算时对总订单金额和总票数两个度量进行汇总计算，则会造成重复计算的问题。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;原则六：事实的单位要保持一致&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;原则七：对事实的null值要处理&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;原则八：使用退化维度提高事实表的易用性&lt;/strong&gt;&lt;/p&gt;&lt;p cid=&quot;n367&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;2.2 事实表设计方法&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Kimball的维度模型设计方法有以下四个步骤：选择业务过程、声明粒度、确定维度、确定事实。&lt;/p&gt;&lt;p&gt;在当前互联网大数据环境下，业务场景越来越复杂，所以一般会在Kimball的四步维度建模方法上进一步做出改进，以便适合公司业务场景（所以这里共有五步）。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第一步：选择业务过程及确定事实表类型&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;明确业务需求后，就需要对我们的需求进行详细分析，对业务的整个生命周期进行分析，明确关键的业务步骤，从而选择与需求有关的业务过程。&lt;/p&gt;&lt;p&gt;以淘宝的一个交易订单为例：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.18743961352657004&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9Fz1a53ChCKf2BPERmJE9Wic8giaTJBBlnROC8ZcsCgYR30yVHVicIp8ZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1035&quot;/&gt;&lt;/p&gt;&lt;p&gt;1）分析业务的生命周期&lt;/p&gt;&lt;p&gt;如上图，业务过程通常使用行为动词表示业务执行的活动。&lt;/p&gt;&lt;p&gt;2）明确关键的业务步骤&lt;/p&gt;&lt;p&gt;上图中淘宝订单的业务过程有四个：创建订单、买家付款、卖家发货、买家确认收货。&lt;/p&gt;&lt;p&gt;3）根据具体的业务需求，选择与维度建模有关的业务过程&lt;/p&gt;&lt;p&gt;比如是选择 “买家付款” 这个业务过程，还是选择 “创建订单” 和 “买家付款” 这两个业务过程，具体根据业务情况来定。&lt;/p&gt;&lt;p&gt;4）根据选择的业务过程来确定事实表类型&lt;/p&gt;&lt;p&gt;如果选择买家付款这个业务过程，那么事实表应该为只包含买家付款这一个业务过程的单事务事实表；如果选择的是所有四个业务过程，并且需要分析各个业务过程之间的时间间隔，那么所建立的事实表应该为包含了所有四个业务过程的累计快照事实表。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第二步：声明粒度&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1）粒度的作用&lt;/p&gt;&lt;p&gt;粒度的声明，意味着精确定义事实表的每一行所表示的业务含义。&lt;/p&gt;&lt;p&gt;明确的粒度能够确保对实表中行的意思的理解不会产生混淆，保证所有的事实按照同样的细节层次记录。&lt;/p&gt;&lt;p&gt;2）粒度的选择&lt;/p&gt;&lt;p&gt;应尽量选择最细级别的原子粒度，以确保事实表的应用具有最大的灵活性。&lt;/p&gt;&lt;p&gt;灵活性：支持无法预期的各种细节层次的用户需求。&lt;/p&gt;&lt;p&gt;对于订单级别，粒度可以定义为最细的订单级别（如，父子订单，事实表的粒度可以定 “子订单级别” ）。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第三步：确定维度&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;完成粒度声明后，就意味着确定了主键，对应的维度组合以及相关的维度字段就可以确定了。&lt;/p&gt;&lt;p&gt;维度选择的原则：应该选择能够描述清楚业务过程所处的环境的维度信息。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第四步：确定事实&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;确定原则：选择与业务过程有关的所有事实，且事实的粒度要与所声明的事实表的粒度一致。&lt;/p&gt;&lt;p&gt;思路：可以通过回答 “过程的度量是什么” 来确定。&lt;/p&gt;&lt;p&gt;注意：将不可加性事实分解为可加的组件（分解的原则：可以通过分解后的可加的属性值，计算得到不可加性事实）。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第五步：冗余维度&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;冗余常用维度字段（比如商品类目），方便下游用户使用（过滤查询、控制聚合）&lt;/p&gt;&lt;p cid=&quot;n401&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;2.3 三种事实表&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1）事务事实表&lt;/p&gt;&lt;p&gt;也可称为原子事实表，描述业务过程，跟踪控件或时间上某点的度量时间，保存的是最原子的数据。&lt;/p&gt;&lt;p&gt;类似于mysql binlog日志，每一次相关的 change 都记录下来，生成一行新的数据。&lt;/p&gt;&lt;p&gt;2）周期快照事实表&lt;/p&gt;&lt;p&gt;以一个周期为时间间隔，来记录事实，一般周期可以是每天、每周、每月、每年等。&lt;/p&gt;&lt;p&gt;只看某个业务过程，比如订单收货，数据按订单收货时间来切分，周期可以为每天、每月等。&lt;/p&gt;&lt;p&gt;3）累积快照事实表&lt;/p&gt;&lt;p&gt;用来描述过程开始和结束之间的关键步骤事件，覆盖过程的整个生命周期，通常具有多个日期字段来记录关键时间点；当过程随着生命周期不断变化时，记录也会随着过程的变化而被修改。&lt;/p&gt;&lt;p&gt;要看整个生命周期的多个业务过程，比如：创建订单 → 买家付款 → 卖家发货 → 买家确认收货。粒度是一个订单一行数据，创建订单时间，付款时间，发货时间，收货时间，分别作为一个字段，便于计算不同业务过程的时间间隔。&lt;/p&gt;&lt;p&gt;4）事务表对比&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;事务事实表&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;周期快照事实表&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;累计快照事实表&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;时期/时间&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;离散事务时间点&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;以有规律的、可预测的&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;用于时间跨度不确定的不断变化的工作流&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;日期维度&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;事务日期&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;快照日期&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;相关业务过程涉及的多个日期&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;粒度&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;每行代表实体的一个事务&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;每行代表某时间周期的一个实体&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;每行代表一个实体的生命周期&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;事实&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;事务事实&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;累积事实&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;相关业务过程事实和时间间隔事实&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;事实表加载&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;插入&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;插入&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;插入与更新&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;事实表更新&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;不更新&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;不更&lt;/span&gt;&lt;span&gt;新&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;业务过程变更时更新&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;多维体系结构&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在Kimball的维度建模的数据仓库中，关于多维体系结构（MD）有三个关键性概念：&lt;strong&gt;总线架构&lt;/strong&gt;（Bus Architecture），&lt;strong&gt;一致性维度&lt;/strong&gt;（Conformed Dimension）和&lt;strong&gt;一致性事实&lt;/strong&gt;（Conformed Fact）。&lt;/p&gt;&lt;p cid=&quot;n450&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;3.1 总线架构&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在多维体系结构（MD）（也就是总线架构）的数据仓库架构中，主导思想是分步建立数据仓库，由数据集市组合成企业的数据仓库。但是，在建立第一个数据集市前，架构师首先要做的就是设计出在整个企业内具有统一解释的标准化的维度和事实，即一致性维度和一致性事实。而开发团队必须严格的按照这个体系结构来进行数据集市的迭代开发。&lt;/p&gt;&lt;p&gt;一致性维度就好比企业范围内的一组总线，不同数据集市的事实的就好比插在这组总线上的元件。这也是称之为总线架构的原因。&lt;/p&gt;&lt;p&gt;实际设计过程中，我们通常把总线架构列表成矩阵的形式，其中列为一致性维度，行为不同的业务处理过程，即事实，在交叉点上打上标记表示该业务处理过程与该维度相关。这个矩阵也称为总线矩阵（Bus Matrix）。&lt;/p&gt;&lt;p&gt;总线架构和一致性维度、一致性事实共同组成了Kimball的多维体系结构的基础，也建立了一套可以逐步建立数据仓库的方法论。由于总线架构是多维体系结构的核心，所以我们有时就把多维体系结构直接称为总线架构。&lt;/p&gt;&lt;p cid=&quot;n455&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;3.2 价值链的意义&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;每家机构都有一个关键业务过程组成的潜在价值链，这个价值链确定机构主体活动的自然逻辑流程。数据仓库建设就是围绕着价值链建立一致化的维度和事实。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2153179190751445&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9wX3iaicqhC4e1z9hN0YccKHwdFcjibtapa42WF7GyNq1Cd4HiaCupMsLuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;692&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n458&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;3.3 数据总矩阵&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;矩阵的每一行对应都对应机构中的一个业务过程，每一列都和一个业务维度相对应，用叉号填充显示的是和每一行相关的列。业务过程应该先从单个数据源系统开始，然后再进行多数据源的合并。&lt;/p&gt;&lt;p&gt;企业数据仓库总线矩阵是DW/BI系统的一个总体数据架构，提供了一种可用于分解企业数据仓库规划任务的合理方法，开发团队可以独立的，异步的完成矩阵的各个业务过程，迭代地去建立一个集成的企业数据仓库。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5217391304347826&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9sWgcGB2ESbUDtdx0EcdWeZ7YuRq7GPkZDoR2S73eIflfGyanpghqqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;690&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n462&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;3.4 一致性维度&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在多维体系结构中，没有物理上的数据仓库，由物理上的数据集市组合成逻辑上的数据仓库。而且数据集市的建立是可以逐步完成的，最终组合在一起，成为一个数据仓库。如果分步建立数据集市的过程出现了问题，数据集市就会变成孤立的集市，不能组合成数据仓库，而一致性维度的提出正式为了解决这个问题。&lt;/p&gt;&lt;p&gt;一致性维度的范围是总线架构中的维度，即可能会在多个数据集市中都存在的维度，这个范围的选取需要架构师来决定。一致性维度的内容和普通维度并没有本质上区别，都是经过数据清洗和整合后的结果。一致性维度建立的地点是多维体系结构的后台（Back Room），即数据准备区。&lt;/p&gt;&lt;p&gt;在多维体系结构的数据仓库项目组内需要有专门的维度设计师，他的职责就是建立维度和维护维度的一致性。在后台建立好的维度同步复制到各个数据集市。这样所有数据集市的这部分维度都是完全相同的。建立新的数据集市时，需要在后台进行一致性维度处理，根据情况来决定是否新增和修改一致性维度，然后同步复制到各个数据集市。这是不同数据集市维度保持一致的要点。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;在同一个集市内，一致性维度的意思是两个维度如果有关系，要么就是完全一样的，要么就是一个维度在数学意义上是另一个维度的子集。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;例如，如果建立月维度话，月维度的各种描述必须与日期维度中的完全一致，最常用的做法就是在日期维度上建立视图生成月维度。这样月维度就可以是日期维度的子集，在后续钻取等操作时可以保持一致。如果维度表中的数据量较大，出于效率的考虑，应该建立物化视图或者实际的物理表。这样，维度保持一致后，事实就可以保存在各个数据集市中。虽然在物理上是独立的，但在逻辑上由一致性维度使所有的数据集市是联系在一起，随时可以进行交叉探察等操作，也就组成了数据仓库。&lt;/p&gt;&lt;p cid=&quot;n468&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;3.5 一致性事实&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在建立多个数据集市时，完成一致性维度的工作就已经完成了一致性的80%－90%的工作量。余下的工作就是建立一致性事实。一致性事实和一致性维度有些不同，一致性维度是由专人维护在后台（Back Room），发生修改时同步复制到每个数据集市，而事实表一般不会在多个数据集市间复制。需要查询多个数据集市中的事实时，一般通过交叉探查（drill across）来实现。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;为了能在多个数据集市间进行交叉探查，一致性事实主要需要保证两点：第一个是KPI的定义及计算方法要一致，第二个是事实的单位要一致性。如果业务要求或事实上就不能保持一致的话，建议不同单位的事实分开建立字段保存。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这样，一致性维度将多个数据集市结合在一起，一致性事实保证不同数据集市间的事实数据可以交叉探查，一个分布式的数据仓库就建成了。&lt;/p&gt;&lt;p cid=&quot;n472&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;3.6 小结&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;总线矩阵&lt;/strong&gt;：业务过程和维度的交点。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一致性维度&lt;/strong&gt;：同一集市的维度表，内容相同或包含。一致性维度要么是统一的，要么是维度表的一个子集。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一致性事实&lt;/strong&gt;：不同集市的同一事实，需保证口径一致，单位统一。指每个度量在整个数据仓库中都是唯一的统计口径，为了避免歧义，一个度量只有唯一的业务术语。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;四&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;维度设计&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;维度基本概念&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;维度是维度建模的基础和灵魂。在维度建模中，将度量称为“事实”，将环境描述为“维度”，维度是用于分析事实所需要的的多样环境。&lt;/p&gt;&lt;p&gt;例如，在分析交易过程时，可以通过买家、卖家、商品和时间等维度描述交易发生的环境。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;维度所包含的表示维度的列，称为维度属性&lt;/strong&gt;。维度属性是查询约束条件、分组和报表标签生成的基本来源，是数据易用性的关键。&lt;/p&gt;&lt;p&gt;维度属性的作用一般是查询约束、分类汇总以及排序等。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;如何获取维度或维度属性&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;维度或维度属性的获取，可以从以下两方面获取：&lt;/p&gt;&lt;p&gt;1）从报表中获取；&lt;/p&gt;&lt;p&gt;2）可以在和业务人员的交谈中发现维度或维度属性。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;维度设计原则&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;维度属性的作用一般是查询约束、分类汇总以及排序&lt;/strong&gt;等，在确定维度属性时，应当提前考虑以下内容：&lt;/p&gt;&lt;p&gt;1）维度属性尽量丰富，为数据使用打下基础&lt;/p&gt;&lt;p&gt;比如淘宝商品维度有近百个维度属性，为下游的数据统计、分析、探查提供了良好的基础。&lt;/p&gt;&lt;p&gt;2）给出详实的、富有意义的文字描述&lt;/p&gt;&lt;p&gt;属性不应该是编码，而应该是真正的文字。在间里巴巴维度建模中，一般是编码和文字同时存在，比如商品维度中的商品ID和商品标题、类目ID和类目名称等。ID一般用于不同表之间的关联，而名称一般用于报表标签。&lt;/p&gt;&lt;p&gt;3）区分数值型属性和事实&lt;/p&gt;&lt;p&gt;数值型宇段是作为事实还是维度属性，可以参考字段的一般用途。如果通常用于查询约束条件或分组统计，则是作为维度属性；如果通常用于参与度量的计算，则是作为事实。比如商品价格，可以用于查询约束条件或统计价格区间的商品数量，此时是作为维度属性使用的也可以用于统计某类目下商品的平均价格，此时是作为事实使用的。另外，如果数值型字段是离散值，则作为维度属性存在的可能性较大；如果数值型宇段是连续值，则作为度量存在的可能性较大，但并不绝对，需要同时参考宇段的具体用途。&lt;/p&gt;&lt;p&gt;4）沉淀出通用的维度属性，为建立一致性维度做好铺垫&lt;/p&gt;&lt;p&gt;有些维度属性获取需要进行比较复杂的逻辑处理，有些需要通过多表关联得到，或者通过单表的不同宇段混合处理得到，或者通过对单表的某个字段进行解析得到。此时，需要将尽可能多的通用的维度属性进行沉淀。一方面，可以提高下游使用的方便性，减少复杂度；另一方面，可以避免下游使用解析时由于各自逻辑不同而导致口径不一致。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;04&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;维度的基本设计方法&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;第一步：选择维度或新建维度&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;作为维度建模的核心，在企业级数据仓库中必须保证维度的唯一性。以淘宝商品维度为例，有且只允许有一个维度定义。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第二步：确定主维表&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;此处的主维表一般是ODS表，直接与业务系系统同步。以淘宝商品维度为例，sauctionauctions是与前台商品中心系统同步的商品表，此表即是主维表。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第三步：确定相关维表&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据仓库是业务源系统的数据整合，不同业务系统或者同一业务系统中的表之间存在关联性。根据对业务的梳理，确定哪些表和主维表存在关联关系，并选择其中的某些表用于生成维度属性。以淘宝商品维度为例，根据对业务逻辑的梳理，可以得到商品与类目、SPU、卖家、店铺等维度存在关联关系。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;第四步：确定维度属性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;本步骤主要包括两个阶段，其中第一个阶段是从主维表中选择维度属性或生成新的维度属性；第二个阶段是从相关维表中选择维度属性或生成新的维度属性。&lt;/p&gt;&lt;p&gt;以淘宝商品维度为例，从主维表(s_auction_auctions)和类目、 SPU、卖家、店铺等相关维表中选择维度属性或生成新的维度属性。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;五&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;六范式与反范式&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;六范式&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p cid=&quot;n508&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.1 一范式（1NF）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;一范式（1NF）：域应该是原子性的，即数据库表的每一列都是不可分割的原子数据项。&lt;/p&gt;&lt;p&gt;域：域就是列的取值范围，比如性别的域就是（男，女）&lt;/p&gt;&lt;p&gt;不符合一范式的表格设计如下：&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;ID&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;商品&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;商家ID&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;用户ID&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;001&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;5台电脑&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;XXX旗舰店&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;00001&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;很明显上表所示的表格设计是不符合第一范式的，商品列中的数据不是原子数据项，是可以进行分割的，因此对表格进行修改，让表格符合第一范式的要求，修改结果如下表所示：&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;ID&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;商品&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;数量&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;商家ID&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;用户ID&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;001&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;电脑&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;5&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;XXX旗舰店&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;00001&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;实际上，1NF 是所有关系型数据库的最基本要求，你在关系型数据库管理系统（RDBMS），例如 SQL Server，Oracle，MySQL 中创建数据表的时候，如果数据表的设计不符合这个最基本的要求，那么操作一定是不能成功的。也就是说，只要在 RDBMS 中已经存在的数据表，一定是符合 1NF 的。&lt;/p&gt;&lt;p cid=&quot;n538&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.2 二范式&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;二范式（2NF）：在 1NF 的基础上，实体的属性完全函数依赖于主关键字（混合主键）， 不能存在部分函数依赖于主关键字（混合主键）。&lt;/p&gt;&lt;p&gt;如果存在某些属性只依赖混合主键中的部分属性，那么不符合二范式。&lt;/p&gt;&lt;p&gt;不符合二范式的表格设计如下：&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;学生ID&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;姓名&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;所属系&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;系主任&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;所修课程&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;分数&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;20170901176&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;王小强 &lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;计算机系&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;马小腾&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;000001&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;95&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;20170901176&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;王小强&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;计算机系&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;马小腾&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;00000&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;99&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;上述表格中是混合主键（学生 ID + 所修课程），但是所属系和系主任这两个属性只依赖于混合主键中的学生 ID 这一个属性，因此，不符合第二范式。&lt;/p&gt;&lt;p&gt;如果有一天学生的所属系要调整，那么所属系和系主任这两列都需要修改，如果这个学生修了多门课程，那么表中的多行数据都要修改，这是非常麻烦的，不符合第二范式。&lt;/p&gt;&lt;p&gt;为了消除这种部分依赖，只有一个办法，就是将大数据表拆分成两个或者更多个更小的数据表。&lt;/p&gt;&lt;p&gt;符合二范式的表格设计如下：&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;学生&lt;/span&gt;&lt;span&gt;I&lt;/span&gt;&lt;span&gt;D&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;所修课程&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;分数&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;20170901176&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;000001&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt; 95&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;20170901176&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;000002&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt; 99&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;学生&lt;/span&gt;&lt;span&gt;ID&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;所属系&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;主任&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;20170901176&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;计算机系&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;马小腾&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;20170901176&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;计算机系&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;马小腾&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;通过上述的修改，当一个学生的所属系需要调整时，不管学生修了多少门课程，都只需要改变上表中的一行数据即可。&lt;/p&gt;&lt;p cid=&quot;n602&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.3 三范式&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;三范式：3NF 在 2NF 的基础之上，消除了非主属性对于主键（复合主键）的传递依赖。&lt;/p&gt;&lt;p&gt;不符合三范式的表格设计如下：&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;订单ID&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;商品ID&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;商品颜色&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;商品尺寸&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;商家ID&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;用户ID&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;001&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;0001&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;深空灰&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;300x270x40&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;XXX旗舰店&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;00001&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;很明显，上表中，商品颜色依赖于商品 ID，商品 ID 依赖于订单 ID，那么非主属性商品颜色就传递依赖于订单 ID，因此不符合三范式，解决方案是将大数据表拆分成两个或者更多个更小的数据表。&lt;/p&gt;&lt;p&gt;符合三范式的表格设计如下：&lt;/p&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;订单ID&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;商品ID&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;商家ID&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;用户ID&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;001&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;0001&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;XXX旗舰店&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;00001&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;商品ID&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;商家颜色&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;商家尺寸&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span&gt;000&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;深灰色&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;span/&gt;&lt;span&gt;300x270x40&lt;/span&gt;&lt;span/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;strong&gt;1.4 BC范式（BGFN）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;定义：关系模式R中，若每一个决定因素都包含码，则R属于BCFN。&lt;/p&gt;&lt;p&gt;理解：根据定义我们可以得到结论，一个满足BC范式的关系模式有：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;所有非主属性对每一个码都是完全函数依赖；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;所有主属性对每一个不包含它的码也是完全函数依赖；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;没有任何属性完全函数依赖于非码的任何一组属性。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;例如有关系模式C(Cno, Cname, Pcno)，Cno，Cname，Pcno依次表示课程号、课程名、先修课。可知关系C只有一个码Cno，且没有任何属性对Cno部分函数依赖或传递函数依赖，所以关系C属于第三范式，同时Cno是C中的唯一决定因素，所以C也属于BC范式。&lt;/p&gt;&lt;p cid=&quot;n655&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.5 第四范式（4NF）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;定义：限制关系模式的属性之间不允许有非平凡且非函数依赖的多值依赖。&lt;/p&gt;&lt;p&gt;理解：显然一个关系模式是4NF，则必为BCNF。也就是说，当一个表中的非主属性互相独立时（3NF），这些非主属性不应该有多值，若有多值就违反了4NF。&lt;/p&gt;&lt;p cid=&quot;n658&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.6 第五范式（5NF）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;第五范式，又称为完美范式， 越往下，冗余度越低。&lt;/p&gt;&lt;p&gt;第五范式有以下要求：&lt;/p&gt;&lt;p&gt;第五范式是在第四范式的基础上做的进一步规范化。第四范式处理的是相互独立的多值情况，而第五范式则处理相互依赖的多值情况。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;反范式&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;一般来说，数据库只需要满足第三范式（3NF）即可。&lt;/p&gt;&lt;p&gt;反范式化设计数据库，是为了提高查询效率，采用空间换时间的实现思路。&lt;/p&gt;&lt;p&gt;应用场景：当冗余的信息有价值或者能大幅度提高查询效率的时候，我们才会采取反范式的优化。&lt;/p&gt;&lt;p&gt;一些情况下，比如存在频繁查询时，可以容忍适当的冗余设计，目的是减少多表关联查询，提高效率。&lt;/p&gt;&lt;p&gt;例如：订单表中冗余了商品信息和用户相关信息，避免查询订单时关联用户表和商品表去查询相关信息，提高效率。&lt;/p&gt;&lt;p&gt;优点：增加数据表中的冗余字段来提高数据库的读性能&lt;/p&gt;&lt;p&gt;缺点：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;范式化设计与反范式设计的优缺点&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p cid=&quot;n685&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;3.1 范式化设计（时间换空间）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;优点：范式化的表减少了数据冗余，数据表更新操作快、占用存储空间小。&lt;/p&gt;&lt;p&gt;缺点：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;查询时需要对多个表进行关联，查询性能降低&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;索引优化会更难进行&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 cid=&quot;n693&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;3.2 反范式化设计（空间换时间）&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n694&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;反范式化的过程就是通过增加数据表中的冗余字段来提高数据库的读（查询）性能，但冗余数据会牺牲数据一致性。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n695&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;优点：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n701&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;缺点：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot; cid=&quot;n702&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li cid=&quot;n703&quot; mdtype=&quot;list_item&quot;&gt;&lt;p cid=&quot;n704&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;存在大量冗余数据&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li cid=&quot;n705&quot; mdtype=&quot;list_item&quot;&gt;&lt;p cid=&quot;n706&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;数据维护成本更高（删除异常，插入异常，更新异常）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;六&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;元数据&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;元数据（Metadata）最基本的定义就是“关于数据的数据”。&lt;/p&gt;&lt;p&gt;元数据打通了源数据、数据仓库、数据应用，记录了数据从产生到消费的全过程。元数据主要记录数据仓库中模型的定义、各层级间的映射关系、监控数据仓库的数据状态及 ETL 的任务运行状态。在数据仓库系统中，元数据可以帮助数据仓库管理员和开发人员非常方便地找到他们所心的数据，用于指导其进行数据管理和开发工作，提高工作效率。&lt;/p&gt;&lt;p&gt;正是有了元数据，才使得数据仓库的最终用户可以随心所欲地使用数据仓库，利用数据仓库进行各种管理决策模式的探讨。元数据是数据仓库的应用灵魂，可以说没有元数据就没有数据仓库。 &lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;元数据的类型&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;根据用途的不同，可将元数据分为两类：&lt;strong&gt;技术元数据&lt;/strong&gt;（ Technical Metadata)  和&lt;strong&gt;业务元数据&lt;/strong&gt;（ Business Metadata ）。&lt;/p&gt;&lt;p cid=&quot;n713&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;1.1 技术元数据&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;技术元数据是&lt;strong&gt;存储关于数据仓库系统技术细节的数据&lt;/strong&gt;，是用于开发、管理和维护数据仓库使用的数据。&lt;/p&gt;&lt;p&gt;它主要包含以下信息：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;数据仓库结构的描述&lt;/strong&gt;，包括仓库模式、视图、维、层次结构和导出数据的定义，以及数据集市的位置和内容； &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;业务系统、数据仓库和数据集市的体系结构和模式&lt;/strong&gt;； &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;汇总用的算法&lt;/strong&gt;，包括度量和维定义算法，数据粒度、主题领域、聚合、汇总和预定义的查询与报告； &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;由操作环境到数据仓库环境的映射&lt;/strong&gt;，包括源数据和它们的内容、数据分割、数据提取、清理、转换规则和数据刷新规则及安全（用户授权和存取控制）。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;1.2 业务元数据&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;业务元数据&lt;strong&gt;从业务角度描述了数据仓库中的数据&lt;/strong&gt;，它提供了介于使用者和实际系统之间的语义层，使得不懂计算机技术的业务人员也能够“读懂”数据仓库中的数据。&lt;/p&gt;&lt;p&gt;业务元数据主要包括以下信息：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;在信息打包过程中，需要用包图表示维度和类别还有它们之间的传递和映射关系，实际上这个操作就是在原业务系统的基础上创建了元数据&lt;/strong&gt;。其中的维度、类别还有 层次关系是属于典型的技术型元数据，而业务系统中与之对应的术语则属于业务元数据。比如日期、区域、产品、客户年龄和客户状况等维 度，实际销售、计划销售、预测销售、计划偏差和预测偏差等指标皆属于元数据。这些数据在以后的分析中起到了极为重要的作用。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;元数据的作用&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;元数据是数据管理、数据内容、数据应用的基础，在数据管理方面为集团数据提供在计算、存储、成本、质量、安全、 模型等治理领域上的数据支持。&lt;/p&gt;&lt;p&gt;从元数据的类型和作用来看，元数据实际上是要解决何人在何时、何地为了什么原因及怎样使用数据仓库的问题。再具体化一点，元数据在数据仓库管理员的眼中是数据仓库中的包含了所有内容和过程的完整知识库和文档，而在最终用户（即数据分析人员）眼中，元数据则是数据仓库的信息地图。 &lt;/p&gt;&lt;p&gt;数据分析员为了能有效地使用数据仓库环境，往往需要元数据的帮助。尤其是在数据分析员进行信息分析处理时，他们首先需要去查看元数据。元数据还涉及到数据从操作型环境到数据仓库环境中的映射。当数据从操作型环境进入数据仓库环境时，数据要经历一系列重大的转变，包含了数据的转化、过滤、汇总和结构改变等过程。数据仓库的元数据要能够及时跟踪这些转变，当数据分析员需要就数据的变化从数据仓库环境追溯到操作型环境中时，就要利用元数据来追踪这种转变。另外， 由于数据仓库中的数据会存在很长一段时间，其间数据仓库往往可能会改变数据的结构。随着时间的流逝来跟踪数据结构的变化，是元数据另一个常见的使用功能。 &lt;/p&gt;&lt;p&gt;元数据描述了数据的结构、内容、链和索引等项内容。在传统的数据库中，元数据是对数据库中各个对象的描述，数据库中的数据字典就是一种元数据。在关系数据库中，这种描述就是对数据库、表、列、观点和其他对象的定义；但在数据仓库中，元数据定义了数据仓库中的许多对象——表、列、查询、商业规则及数据仓库内 部的数据转移。元数据是数据仓库的重要构件，是数据仓库的指示图。元数据在数据源抽取、数据仓库开发、商务分析、数据仓库服务和数据求精与重构工程等过程都有重要的作用，在下图中可以看到元数据在整个数据仓库开发和应用过程中的巨大影响。因此，设计一个描述能力强并且内容完善的元数据，对数据仓库进行有效地开发和管理具有决定性意义。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7326007326007326&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9zqv4RUp2ndrhypSopVGh8ib1Emd5NM2hV3QkwgkFyJghnOictbBIbv7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1911&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;七&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;数据治理&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;数据治理概念&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;数据治理是指将数据作为组织资产而展开的一系列的具体化工作，是对数据的全生命周期管理。&lt;/p&gt;&lt;p&gt;数据治理体系是指从组织架构、管理制度、操作规范、IT应用技术、绩效考核支持等多个维度对组织的数据模型、数据架构、数据质量、数据安全、数据生命周期等各方面进行全面的梳理、建设以及持续改进的体系。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;数据治理目标&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;数据治理的目标是提高数据的质量准确性和完整性，保证数据的安全性（保密性、完整性及可用性），实现数据资源在各组织机构部门的共享；推进信息资源的整合、对接和共享，从而提升集团公司或政务单位信息化水平，充分发挥信息化作用。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;数据治理体系&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;如下图所示，数据治理体系包含两个方面：一是数据质量核心领域，二是数据质量保障机制。&lt;/p&gt;&lt;p&gt;两者内容及相互关系如下图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.533731853116994&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9icZyYoJWKw2tFQDt7vk1cia2OgdaoSE94jsNTLhzd3zO8wZzhtZJFajA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1171&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;04&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;数据治理核心领域&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;为了有效管理信息资源，必须构集团级数据治理体系。数据治理体系包含数据治理组织、数据构架管理、主数据管理、数据质量管理、数据服务管理及数据安全管理内容，这些内容既有机结合，又相互支撑。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;05&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;数据治理方法&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1）数据资源梳理&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据治理的第一个步骤是从业务的视角厘清组织的数据资源环境和数据资源清单，包含组织机构、业务事项、信息系统，以及以数据库、网页、文件和 API 接口形式存在的数据项资源，本步骤的输出物为分门别类的数据资源清单。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）数据采集清洗&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;通过可视化的ETL工具（例如阿里的 DataX，Pentaho Data Integration）将数据从来源端经过抽取 (extract)、转换 (transform)、加载 (load) 至目的端的过程，目的是将散落和零乱的数据集中存储起来。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）基础库主题库建设&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;一般情况下，可以将数据分为基础数据、业务主题数据和分析数据。基础数据一般指的是核心实体数据，或称主数据，例如智慧城市中的人口、法人、地理信息、信用、电子证照等数据。主题数据一般指的是某个业务主题数据，例如市场监督管理局的食品监管、质量监督检查、企业综合监管等数据。而分析数据指的是基于业务主题数据综合分析而得的分析结果数据，例如市场监督管理局的企业综合评价、产业区域分布、高危企业分布等。那么基础库和主题库的建设就是在对业务理解的基础上，基于易存储、易管理、易使用的原则抽像数据存储结构，说白了，就是基于一定的原则设计数据库表结构，然后再根据数据资源清单设计数据采集清洗流程，将整洁干净的数据存储到数据库或数据仓库中。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4）元数据管理&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;元数据管理是对基础库和主题库中的数据项属性的管理，同时，将数据项的业务含义与数据项进行了关联，便于业务人员也能够理解数据库中的数据字段含义，并且，元数据是后面提到的自动化数据共享、数据交换和商业智能（BI）的基础。需要注意的是，元数据管理一般是对基础库和主题库中（即核心数据资产）的数据项属性的管理，而数据资源清单是对各类数据来源的数据项的管理。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;5）血缘追踪&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据被业务场景使用时，发现数据错误，数据治理团队需要快速定位数据来源，修复数据错误。那么数据治理团队需要知道业务团队的数据来自于哪个核心库，核心库的数据又来自于哪个数据源头。我们的实践是在元数据和数据资源清单之间建立关联关系，且业务团队使用的数据项由元数据组合配置而来，这样，就建立了数据使用场景与数据源头之间的血缘关系。数据资源目录：数据资源目录一般应用于数据共享的场景，例如政府部门之间的数据共享，数据资源目录是基于业务场景和行业规范而创建，同时依托于元数据和基础库主题而实现自动化的数据申请和使用。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;6）质量管理&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据价值的成功发掘必须依托于高质量的数据，唯有准确、完整、一致的数据才有使用价值。因此，需要从多维度来分析数据的质量，例如：偏移量、非空检查、值域检查、规范性检查、重复性检查、关联关系检查、离群值检查、波动检查等等。需要注意的是，优秀的数据质量模型的设计必须依赖于对业务的深刻理解，在技术上也推荐使用大数据相关技术来保障检测性能和降低对业务系统的性能影响，例如 Hadoop，MapReduce，HBase 等。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;7）商业智能（BI）&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据治理的目的是使用，对于一个大型的数据仓库来说，数据使用的场景和需求是多变的，那么可以使用 BI 类的产品快速获取需要的数据，并分析形成报表，比较知名的产品有 Microsoft Power BI，QlikView，Tableau，Smartbi等。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;8）数据共享交换&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据共享包括组织内部和组织之间的数据共享，共享方式也分为库表、文件和 API 接口三种共享方式，库表共享比较直接粗暴，文件共享方式通过 ETL 工具做一个反向的数据交换也就可以实现。我们比较推荐的是 API 接口共享方式，在这种方式下，能够让中心数据仓库保留数据所有权，把数据使用权通过 API 接口的形式进行了转移。API 接口共享可以使用 API 网关实现，常见的功能是自动化的接口生成、申请审核、限流、限并发、多用户隔离、调用统计、调用审计、黑白名单、调用监控、质量监控等等。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;06&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;数据质量衡量标准&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1）数据的准确性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据准确性（Accuracy）是&lt;strong&gt;指数据采集值或者观测值和真实值之间的接近程度，也叫做误差值，误差越大，准确度越低&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;指数据中记录的信息和数据是否准确，数据记录的信息是否存在异常或错误&lt;/strong&gt;。准确性关注的是数据记录中存在的错误，如字符型数据的乱码现象就存在着准确性的问题，还有就是异常的数值：异常大或者异常小的数值、不符合有效性要求的数值等。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2）数据的精确性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据的精确性（Precision）是&lt;strong&gt;指对同一对象的观测数据在重复测量时所得到不同数据间的接近程度&lt;/strong&gt;。精确性，也可以叫精准性。精确性与我们数据采集的精度有关系。精度高，要求数据采集的粒度越细，误差的容忍程度越低。&lt;/p&gt;&lt;p&gt;比如测量人的身高，我们可以精确到厘米，多次测量差异只会在厘米级别；测量北京到上海的距离，我们精确到公里，多次测量结果间的差异会在公里级别:采用游标卡尺测量一个零件的厚度，可以精确到1/50毫米，多次测量的结果间的误差也只会在1/50毫米间。采用的测量方法和手段直接影响着数据的精确性。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3）数据的真实性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据的真实性，也叫数据的正确性(Rightness)。&lt;strong&gt;数据的正确性取决于数据采集过程的可控程度&lt;/strong&gt;，可控程度高，可追溯情况好，数据的真实性容易得到保障，而可控程度低或者无法追溯，数据造假后无法追溯，则真实性难以保证。为了提高数据的真实性，采用无人进行过程干涉的智能终端直接采集数据，能够更好地保证所采集数据的真实性，减少人为干预，减少数据造假，从而让数据更加正确地反应客观事物。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4）数据的及时性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据的及时性（In-time）就是指&lt;strong&gt;数据能否在需要的时候得到保证&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;比如月初会对上个月的经营和管理数据进行统计汇总，这些数据能否及时处理完成，财务能否在月度关账后及时核算。&lt;strong&gt;数据的及时性是我们数据分析和挖掘及时性的保障&lt;/strong&gt;。如果公司的财务核算复杂，核算速度缓慢，上个月的数据在月中才能统计汇总完成，等需要调整财务策略的时候，已经到了月底了，一个月已经快过完了。特别是公司做大了之后，业务覆盖多个市场，多个国家，数据不能及时汇总，会影响到高层决策的及时程度，数据的及时性与企业数据处理的速度和效率有直接的关系，为了提高数据的及时性，越来越多的公司采用管理信息系统，并在管理信息系统中附加各种自动数据外理功能，能够在数据上传系统之后自动完成绝大部分报表，从而保证数据外理的效率。计算机自动外理中间层数据是提高企业数据处理效率的有效手段。&lt;/p&gt;&lt;p&gt;除了保证数据采集的及时性和数据外理的效率问题外，还需要从制度和流程上保证数据传输的及时性，数据报表完成了，要及时或者在要求的时间范围内发送到指定的部门，或者上传到指定的存储空间。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;5）数据的即时性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;指&lt;strong&gt;数据采集时间节点和数据传输的时间节点&lt;/strong&gt;，一个数据在数据源头采集后立即存储，并立即加工呈现，就是即时数据，而经过一段时间之后再传输到信息系统中，则数据即时性就稍差。&lt;/p&gt;&lt;p&gt;比如微博的数据采集，当用户发布了微博，数据立即能够被抓取和加工，会生成即时微博数据报告，并随着时间推移，数据不断变化，我们可以称作是即时采集和处理的。一个生产设备的仪表即时反应着设备的温度、电压、电流、气压等数据，这些数据生成数据流，随时监控设备的运行状况，这个数据可以看作是即时数据。而当设备的即时运行数据存储下来，用来分析设备运行状况与设备寿命的关系，这些数据就成为历史数据。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;6）数据的完整性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据的完整性是&lt;strong&gt;从数据采集到的程度来衡量的，是应采集和实际采集到数据之间的比例&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;比如一条信息采集12个数据点，如我们采集员工信息数据的时候，要求填写姓名，出生日期，性别，民族、籍贯，身高、血型、婚姻状况，最高学历，最高学历专业、最高学历毕业院校、最高学历毕业时间等12项信息，而某一员工仅仅填写了部分信息，如只填写了其中的5项，则该员工所填写数据的完整性只有一半。&lt;/p&gt;&lt;p&gt;一个公司数据的完整性体现着这个公司对数据的重视程度。要求采集数据而实际上并未完整采集，只采集了一部分，这就是不完整的，往往是公司对数据采集质量要求不到位导致的。公司要求每个人都填写完整的个人信息表，而有部分员工拒绝填写，公司2000员工，只有1200人填写了完整的个人信息表，则这个数据集就是不完整的。&lt;/p&gt;&lt;p&gt;另外，对干动态数据，还要从时间轴上去衡量数据采集的完整性。比如，我们要求每小时采集一次数据，每天会形成24个数据点，记录为24条数据，但是员工渎职，只记录了20次，那么这个数据集也是不完整的。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;7）数据的全面性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据的全面性和完整性不同，完整性衡量的是应采集和实际采集的差异。而&lt;strong&gt;全面性指的是数据采集点的遗漏情况&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;比如说，我们要采集员工行为数据，我们只采集了员工上班打卡和下班打卡的数据，上班时间的员工行为数据并未采集，或者没有找到合适的方法来采集。那么，这个数据集就是不全面的。&lt;/p&gt;&lt;p&gt;比如描述一个产品的包装，仅仅描述了产品包装的正面和背面，没有记录产品包装的侧面，则就是不全面的。我们记录一个客户的交易数据，我们只采集了客户订单中的产品、订单中产品的价格和数量，而没有采集客户送货地址，采购时间，这个数据采集就是不全面的。&lt;/p&gt;&lt;p&gt;比如腾讯OO和微信的用户数据记录了客户交流沟通的数据；阿里和京东的用户数据记录了用户的购买交易数据；百度地图记录了用户出行的数据；大众点评和美团记录了客户餐饮娱乐的数据。对于全面描述一个人的生活的衣食住行各方面，这些公司的数据都是不全面的，而如果把他们的数据整合起来，则会形成更加全面的数据。所以说，数据的全面性是一个相对的概念。过度追求数据的全面性是不现实的。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;8）数据的关联性&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;数据的关联性是&lt;strong&gt;指各个数据集之间的关联关系&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;比如员工工资数据和工绩效考核数据是通过员工这个资源关联在一起来的，而且绩效数据直接关系到工资的多少。采购订单数据与生产订单数据之间通过物料的追溯机制进行关联，而生产订单又是由员工完成的，即通过员工作业数据与员工信息数据关联起来。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;07&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;数据质量的保证方法&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;1）&lt;strong&gt;从技术层面来说&lt;/strong&gt;，需要构建一套高效、健壮的ETL程序，以此保证数据清洗、转换后数据的正确性和一致性。&lt;/p&gt;&lt;p&gt;2）&lt;strong&gt;从流程上来说&lt;/strong&gt;，整个ETL是多个任务，按步骤顺序执行的一个过程，后置任务依赖前置任务，定期执行，整个流程需要自动化，并且哪个环节出现了问题，给予预警，通知相关维护人员及时处理。&lt;/p&gt;&lt;p&gt;3）&lt;strong&gt;从管理层面上来说&lt;/strong&gt;，数据仓库是构建在公司各个业务系统之上，它是一面镜子，很多时候它能反映出业务系统的问题，所以需要管理层的支持和约束，比如通过第一条说的事后自动检验机制反映出业务系统的维护错误，需要相应的业务系统维护人员及时处理。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;08&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;数据治理流程&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;如下图，基本流程如下：&lt;strong&gt;发现数据质量问题 &amp;gt; 定义数据质量规则 &amp;gt; 质量控制 &amp;gt; 质量评估 &amp;gt; 质量优化&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4393203883495146&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9kM8gaszHMjGP81re0ggS9ygCxTb61oBbyFibeCbibLX3T4stlthw2Frg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;824&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn9rqebGZMRzic0z97zkth0jt07a3tibQCmweDcIe5JyColWraFd05ymk4A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;344&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;欢迎关注旧时光大数据&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;学习更多大数据知识&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;公众号｜旧时光大数据&lt;/p&gt;&lt;p&gt;微信号｜MoRan1607&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.4259259&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LQ8jribvIBIlicoFjzsR5GjwGhe90Nkvn928QcN1x6ibqH05LC1qfBeWmFtWYibcgFdWTskhH7sYdoCsC0ibUlxLjeg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>26399e6e53fab3125e9f7121b0ba93c3</guid>
<title>哈工大硕士生用Python实现了11种数据降维算法，代码已开源！</title>
<link>https://toutiao.io/k/1mc4jqh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;本文转载自：相约机器人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;网上关于各种降维算法的资料参差不齐，同时大部分不提供源代码。这里有个 GitHub 项目整理了使用 Python 实现了 11 种经典的数据抽取（数据降维）算法，包括：PCA、LDA、MDS、LLE、TSNE 等，并附有相关资料、展示效果；非常适合机器学习初学者和刚刚入坑数据挖掘的小伙伴。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8718381112984823&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jupejmznDCicwhMnDqUJaF3vK6XOoTr5H3NHv8scvGYIS1USA1M22MO7wDOgkxk6Gszhzd1nnicOvO8iaJzhep9cg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;593&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;01  为什么要进行数据降维？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;所谓降维，即用一组个数为 d 的向量 Zi 来代表个数为 D 的向量 Xi 所包含的有用信息，其中 d&amp;lt;D；通俗来讲，即将高维度下降至低维度；将高维数据下降为低维数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通常，我们会发现大部分数据集的维度都会高达成百乃至上千，而经典的 MNIST，其维度都是 64。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4918918918918919&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jupejmznDCicwhMnDqUJaF3vK6XOoTr5HLxK7g1G4icXLJ9ewTEia4p5Vt4McX0sO9G2snDeydtw5TDFGVPBFAWRw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;740&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;MNIST 手写数字数据集&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但在实际应用中，我们所用到的有用信息却并不需要那么高的维度，而且每增加一维所需的样本个数呈指数级增长，这可能会直接带来极大的「维数灾难」；而数据降维就可以实现：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使得数据集更易使用&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;确保变量之间彼此独立&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;降低算法计算运算成本&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;去除噪音&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;一旦我们能够正确处理这些信息，正确有效地进行降维，这将大大有助于减少计算量，进而提高机器运作效率。而数据降维，也常应用于文本处理、人脸识别、图片识别、自然语言处理等领域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5238095238095238&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jupejmznDCicwhMnDqUJaF3vK6XOoTr5H1BjLaCsBFdFEWXVYP1Z5LJPm08saAGyIkqCX714ibWib0HibuEV8kBFmg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;630&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;02  数据降维原理&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;往往高维空间的数据会出现分布稀疏的情况，所以在降维处理的过程中，我们通常会做一些数据删减，这些数据包括了冗余的数据、无效信息、重复表达内容等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;例如：现有一张 1024*1024 的图，除去中心 50*50 的区域其它位置均为零值，这些为零的信息就可以归为无用信息；而对于对称图形而言，对称部分的信息则可以归为重复信息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6189189189189189&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jupejmznDCicwhMnDqUJaF3vK6XOoTr5HkTPEoibkIpwY0torqicFmhWp4YgBLSMC3ntsTb0S9NUvPJHqs05gSYZg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;740&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因此，大部分经典降维技术也是基于这一内容而展开，其中降维方法又分为线性和非线性降维，非线性降维又分为基于核函数和基于特征值的方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;      PCA 、ICA LDA、LFA、LPP(LE 的线性表示)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;      基于核函数的非线性降维方法——KPCA 、KICA、KDA&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;      基于特征值的非线性降维方法（流型学习）——ISOMAP、LLE、LE、LPP、LTSA、MVU&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;哈尔滨工业大学计算机技术专业的在读硕士生 Heucoder 则整理了 PCA、KPCA、LDA、MDS、ISOMAP、LLE、TSNE、AutoEncoder、FastICA、SVD、LE、LPP 共 12 种经典的降维算法，并提供了相关资料、代码以及展示，下面将主要以 PCA 算法为例介绍降维算法具体操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;03  主成分分析（PCA）降维算法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;PCA 是一种基于从高维空间映射到低维空间的映射方法，也是最基础的无监督降维算法，其目标是向数据变化最大的方向投影，或者说向重构误差最小化的方向投影。它由 Karl Pearson 在 1901 年提出，属于线性降维方法。与 PCA 相关的原理通常被称为最大方差理论或最小误差理论。这两者目标一致，但过程侧重点则不同。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5876685934489403&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jupejmznDCicwhMnDqUJaF3vK6XOoTr5HyKdEvZvUFZ9jhVAJUdDvnu4ib7X2rXHTzqrD5c5lMNwrkJ65xqKUacg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;519&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最大方差理论降维原理&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;将一组 N 维向量降为 K 维（K 大于 0，小于 N），其目标是选择 K 个单位正交基，各字段两两间 COV(X,Y) 为 0，而字段的方差则尽可能大。因此，最大方差即使得投影数据的方差被最大化，在这过程中，我们需要找到数据集 Xmxn 的最佳的投影空间 Wnxk、协方差矩阵等，其算法流程为：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;算法输入：数据集 Xmxn；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;按列计算数据集 X 的均值 Xmean，然后令 Xnew=X−Xmean；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;求解矩阵 Xnew 的协方差矩阵，并将其记为 Cov；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;计算协方差矩阵 COv 的特征值和相应的特征向量；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;将特征值按照从大到小的排序，选择其中最大的 k 个，然后将其对应的 k 个特征向量分别作为列向量组成特征向量矩阵 Wnxk；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;计算 XnewW，即将数据集 Xnew 投影到选取的特征向量上，这样就得到了我们需要的已经降维的数据集 XnewW。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4743362831858407&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jupejmznDCicwhMnDqUJaF3vK6XOoTr5HjC66LyNLZyMVV4Gev3ibS67GyYu1JkIgOnibSKG2QyraY4ZHEGOW2kPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;565&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最小误差理论降维原理&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而最小误差则是使得平均投影代价最小的线性投影，这一过程中，我们则需要找到的是平方错误评价函数 J0(x0) 等参数。&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;详细步骤可参考《从零开始实现主成分分析 (PCA) 算法》：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/u013719780/article/details/78352262 &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;04  主成分分析（PCA）代码实现&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;hr/&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4866785079928952&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jupejmznDCicwhMnDqUJaF3vK6XOoTr5HQicjFibaVx1vnicDW3muoGfS3aD6Tic1OElCxQgS1xwRAKXyeoqgfA9AAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;563&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关于 PCA 算法的代码如下：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;python&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;from __future__ import print_function&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;from sklearn import datasets&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import matplotlib.pyplot as plt&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import matplotlib.cm as cmx&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import matplotlib.colors as colors&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import numpy as np&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;%matplotlib inline&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def shuffle_data(X, y, seed=None):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   if seed:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     np.random.seed(seed)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   idx = np.arange(X.shape[0])&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   np.random.shuffle(idx)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   return X[idx], y[idx]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 正规化数据集 X&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def normalize(X, axis=-1, p=2):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   lp_norm = np.atleast_1d(np.linalg.norm(X, p, axis))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   lp_norm[lp_norm == 0] = 1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   return X / np.expand_dims(lp_norm, axis)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 标准化数据集 X&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def standardize(X):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   X_std = np.zeros(X.shape)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   mean = X.mean(axis=0)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   std = X.std(axis=0)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   # 做除法运算时请永远记住分母不能等于 0 的情形&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   # X_std = (X - X.mean(axis=0)) / X.std(axis=0) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   for col in range(np.shape(X)[1]):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     if std[col]:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       X_std[:, col] = (X_std[:, col] - mean[col]) / std[col]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   return X_std&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 划分数据集为训练集和测试集&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def train_test_split(X, y, test_size=0.2, shuffle=True, seed=None):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   if shuffle:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     X, y = shuffle_data(X, y, seed)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   n_train_samples = int(X.shape[0] * (1-test_size))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   x_train, x_test = X[:n_train_samples], X[n_train_samples:]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   y_train, y_test = y[:n_train_samples], y[n_train_samples:]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   return x_train, x_test, y_train, y_test&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 计算矩阵 X 的协方差矩阵&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def calculate_covariance_matrix(X, Y=np.empty((0,0))):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   if not Y.any():&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Y = X&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   n_samples = np.shape(X)[0]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   covariance_matrix = (1 / (n_samples-1)) * (X - X.mean(axis=0)).T.dot(Y - Y.mean(axis=0))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   return np.array(covariance_matrix, dtype=float)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 计算数据集 X 每列的方差&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def calculate_variance(X):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   n_samples = np.shape(X)[0]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   variance = (1 / n_samples) * np.diag((X - X.mean(axis=0)).T.dot(X - X.mean(axis=0)))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   return variance&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 计算数据集 X 每列的标准差&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def calculate_std_dev(X):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   std_dev = np.sqrt(calculate_variance(X))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   return std_dev&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 计算相关系数矩阵&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def calculate_correlation_matrix(X, Y=np.empty([0])):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   # 先计算协方差矩阵&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   covariance_matrix = calculate_covariance_matrix(X, Y)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   # 计算 X, Y 的标准差&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   std_dev_X = np.expand_dims(calculate_std_dev(X), 1)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   std_dev_y = np.expand_dims(calculate_std_dev(Y), 1)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   correlation_matrix = np.divide(covariance_matrix, std_dev_X.dot(std_dev_y.T))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   return np.array(correlation_matrix, dtype=float)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;class PCA():&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &quot;&quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   主成份分析算法 PCA，非监督学习算法.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &quot;&quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   def __init__(self):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     self.eigen_values = None&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     self.eigen_vectors = None&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     self.k = 2&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   def transform(self, X):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &quot;&quot;&quot; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     将原始数据集 X 通过 PCA 进行降维&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &quot;&quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     covariance = calculate_covariance_matrix(X)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     # 求解特征值和特征向量&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     self.eigen_values, self.eigen_vectors = np.linalg.eig(covariance)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     # 将特征值从大到小进行排序，注意特征向量是按列排的，即 self.eigen_vectors 第 k 列是 self.eigen_values 中第 k 个特征值对应的特征向量&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     idx = self.eigen_values.argsort()[::-1]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     eigenvalues = self.eigen_values[idx][:self.k]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     eigenvectors = self.eigen_vectors[:, idx][:, :self.k]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     # 将原始数据集 X 映射到低维空间&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     X_transformed = X.dot(eigenvectors)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     return X_transformed&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def main():&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   # Load the dataset&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   data = datasets.load_iris()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   X = data.data&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   y = data.target&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   # 将数据集 X 映射到低维空间&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   X_trans = PCA().transform(X)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   x1 = X_trans[:, 0]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   x2 = X_trans[:, 1]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   cmap = plt.get_cmap(&#x27;viridis&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   colors = [cmap(i) for i in np.linspace(0, 1, len(np.unique(y)))]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   class_distr = []&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   # Plot the different class distributions&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   for i, l in enumerate(np.unique(y)):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       _x1 = x1[y == l]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       _x2 = x2[y == l]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       _y = y[y == l]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;       class_distr.append(plt.scatter(_x1, _x2, color=colors[i]))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   # Add a legend&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   plt.legend(class_distr, y, loc=1)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   # Axis labels&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   plt.xlabel(&#x27;Principal Component 1&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   plt.ylabel(&#x27;Principal Component 2&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   plt.show()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;if __name__ == &quot;__main__&quot;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   main()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;最终，我们将得到降维结果如下。其中，如果得到当特征数 (D) 远大于样本数 (N) 时，可以使用一点小技巧实现 PCA 算法的复杂度转换。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6081871345029239&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jupejmznDCicwhMnDqUJaF3vK6XOoTr5H4CKF1ficuQ6ZpqEr0moeU9qSNP5ou3j7y1V7zMPiaVhaaQx3QEknibj7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;513&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;PCA 降维算法展示&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当然，这一算法虽然经典且较为常用，其不足之处也非常明显。它可以很好的解除线性相关，但是面对高阶相关性时，效果则较差；同时，PCA 实现的前提是假设数据各主特征是分布在正交方向上，因此对于在非正交方向上存在几个方差较大的方向，PCA 的效果也会大打折扣。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;05  其它降维算法及代码地址&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;KPCA 是核技术与 PCA 结合的产物，它与 PCA 主要差别在于计算协方差矩阵时使用了核函数，即是经过核函数映射之后的协方差矩阵。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;引入核函数可以很好的解决非线性数据映射问题。kPCA 可以将非线性数据映射到高维空间，在高维空间下使用标准 PCA 将其映射到另一个低维空间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5866935483870968&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jupejmznDCicwhMnDqUJaF3vK6XOoTr5HeHSVklNuCcLvBsq0ykCBStFMoicJEtGz3vqBc1IYNiaAw6TPFLBHCPTQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;496&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;KPCA 降维算法展示&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;详细内容可参见 《Python 机器学习》之特征抽取——kPCA：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/weixin_40604987/article/details/79632888 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码地址：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/heucoder/dimensionality_reduction_alo_codes/blob/master/codes/PCA/KPCA.py&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;LDA 是一种可作为特征抽取的技术，其目标是向最大化类间差异，最小化类内差异的方向投影，以利于分类等任务即将不同类的样本有效的分开。LDA 可以提高数据分析过程中的计算效率，对于未能正则化的模型，可以降低维度灾难带来的过拟合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5576208178438662&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jupejmznDCicwhMnDqUJaF3vK6XOoTr5Hu3icJRzcYVtN3kicQtWabqWiceZgtKfcHXZnJIVXE2qp8QfTSicd82wB7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;538&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;LDA 降维算法展示&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;详细内容可参见《数据降维—线性判别分析（LDA）》：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/ChenVast/article/details/79227945 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码地址：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/heucoder/dimensionality_reduction_alo_codes/tree/master/codes/LDA &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;MDS 即多维标度分析，它是一种通过直观空间图表示研究对象的感知和偏好的传统降维方法。该方法会计算任意两个样本点之间的距离，使得投影到低维空间之后能够保持这种相对距离从而实现投影。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于 sklearn 中 MDS 是采用迭代优化方式，下面实现了迭代和非迭代的两种。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5767790262172284&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jupejmznDCicwhMnDqUJaF3vK6XOoTr5HfJnLlTFw1mXpLEDibYuOQoRmfIUS9lkcMlYZ4zGgZJmV1Im4GroKAtQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;534&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;MDS 降维算法展示&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;详细内容可参见《MDS 算法》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/zhangweiguo_717/article/details/69663452 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码地址：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/heucoder/dimensionality_reduction_alo_codes/tree/master/codes/MDS &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;Isomap 即等度量映射算法，该算法可以很好地解决 MDS 算法在非线性结构数据集上的弊端。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;MDS 算法是保持降维后的样本间距离不变，Isomap 算法则引进了邻域图，样本只与其相邻的样本连接，计算出近邻点之间的距离，然后在此基础上进行降维保距。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5544554455445545&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jupejmznDCicwhMnDqUJaF3vK6XOoTr5HdHRRg4nlWXH16kzic0xibxzUPeS9TkjDaKG4PDTF7w9g5n2ZWFOLlXqQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;505&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;ISOMAP 降维算法展示&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;详细内容可参见《Isomap》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/zhangweiguo_717/article/details/69802312 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码地址：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/heucoder/dimensionality_reduction_alo_codes/tree/master/codes/ISOMAP &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;LLE 即局部线性嵌入算法，它是一种非线性降维算法。该算法核心思想为每个点可以由与它相邻的多个点的线性组合而近似重构，然后将高维数据投影到低维空间中，使其保持数据点之间的局部线性重构关系，即有相同的重构系数。在处理所谓的流形降维的时候，效果比 PCA 要好很多。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5465346534653466&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jupejmznDCicwhMnDqUJaF3vK6XOoTr5Hpdu5K3ZrFR6DEq0TZxJ2WiagFdayEoAyYL4xib8JdGCZUrnlqU2iazGlA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;505&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;LLE 降维算法展示&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;详细内容可参见《LLE 原理及推导过程》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/scott198510/article/details/76099630 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码地址：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/heucoder/dimensionality_reduction_alo_codes/tree/master/codes/LLE &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;t-SNE 也是一种非线性降维算法，非常适用于高维数据降维到 2 维或者 3 维进行可视化。它是一种以数据原有的趋势为基础，重建其在低纬度（二维或三维）下数据趋势的无监督机器学习算法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面的结果展示参考了源代码，同时也可用 tensorflow 实现（无需手动更新参数）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7037037037037037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jupejmznDCicwhMnDqUJaF3vK6XOoTr5HAk93Dtb3JG3n3sDsjlXFRaatXibYIicf1dpH1QM1IDsFCTFjJibSvlhSA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;513&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;t-SNE 降维算法展示&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;详细内容可参见《t-SNE 使用过程中的一些坑》：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http://bindog.github.io/blog/2018/07/31/t-sne-tips/ &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码地址：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/heucoder/dimensionality_reduction_alo_codes/tree/master/codes/T-SNE &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;LE 即拉普拉斯特征映射，它与 LLE 算法有些相似，也是以局部的角度去构建数据之间的关系。它的直观思想是希望相互间有关系的点（在图中相连的点）在降维后的空间中尽可能的靠近；以这种方式，可以得到一个能反映流形的几何结构的解。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5054054054054054&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jupejmznDCicwhMnDqUJaF3vK6XOoTr5Hw7FhAlhV7JowQm1EBo3JRjq4rZ391icWOb6AbzdDibBUY58ZuNpU6oZg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;740&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;LE 降维算法展示&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;详细内容可参见《拉普拉斯特征图降维及其 python 实现》：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/HUSTLX/article/details/50850342 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码地址：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/heucoder/dimensionality_reduction_alo_codes/tree/master/codes/LE &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;LPP 即局部保留投影算法，其思路和拉普拉斯特征映射类似，核心思想为通过最好的保持一个数据集的邻居结构信息来构造投影映射，但 LPP 不同于 LE 的直接得到投影结果，它需要求解投影矩阵。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.522972972972973&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jupejmznDCicwhMnDqUJaF3vK6XOoTr5HM1zRI46METnw0aZMHFuMcxWsgicdsSSYK3Su9dkY0rQFByjIOwAx0jg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;740&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;LPP 降维算法展示&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;详情请参见《局部保留投影算法 (LPP) 详解》：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/qq_39187538/article/details/90402961 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;代码地址：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/heucoder/dimensionality_reduction_alo_codes/tree/master/codes/LPP &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;*《dimensionality_reduction_alo_codes》项目作者简介&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Heucoder，目前是哈尔滨工业大学计算机技术在读硕士生，主要活跃于互联网领域，知乎昵称为「超爱学习」，其 github 主页地址为：https://github.com/heucoder。&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;Github 项目地址:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/heucoder/dimensionality_reduction_alo_codes &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jupejmznDCicCEDfm4Q5koCraSm45XoTnY8A5RQMIFlLNVKlC8bo97y7Pibp6VwDZmUGebhLN3akM0R19icNU6tCw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1827b4fb1aa946dec5eb1b7dab5d54f7</guid>
<title>干货 | Elasticsearch 检索类型选型指南</title>
<link>https://toutiao.io/k/ha9vvux</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;之前在 DSL 中一次问卷调查中，收集到如下几个和搜索类型相关的问题。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Q1：麻烦讲一下es常用的查询关键词，及使用场景，比如term、match、should、filter等等，谢谢老大......&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Q2：讲下查询term，match，match_pharse，operator，mget，multi_match等的用法和区别?&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Q3：term、match、phrase、bool query等常用语法，及对不同类型数据字段的支持。在分词场景下的区别?&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Q4：fuzzy查询的fuzziness参数不同取值，minimumshouldmatch不同取值负数，百分比等…...&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Q5：希望可以通俗一点。可以有视频和文档~~&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这些问题经常会被问到，今天我们从如下几个方面详细解读一下。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;宏观俯瞰 Elasticsearch 检索分类；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;分类解读各个搜索类型特点及应用场景；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;各个检索类型的区别。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1、宏观俯瞰 Elasticsearch 检索分类&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;以 Elasticsearch 8.1 官方文档为例，检索分类不会也不可能超出这个范围。&lt;/span&gt;&lt;/section&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29805/WEBRESOURCE72c3ce41d7dcfb16941c1bc3d8180dde&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:347,&amp;quot;height&amp;quot;:594},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29805/WEBRESOURCE72c3ce41d7dcfb16941c1bc3d8180dde&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:347,&amp;quot;height&amp;quot;:594},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.7118155619596542&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6gxf4rYKiaukOH6MbkTEEkIjLgMfLm1upicVdoN3MMVib1ZibOpaic5ft72w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;347&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这么看，貌似不够清晰，来张脑图梳理一下。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.22011385199241&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6qw18lCZwwMMrcwzgRyvy3c7Cyn3cfFxcjfVjt6D9WOlGSnFBMqiaseA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1054&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;常用的部分下文会详细解读，不常用的建议大家使用前优先阅读一遍官方文档，做到“知己知彼、有的放矢”。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;貌似清晰了很多。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;说一下，我在初学 Elasticsearch 犯过的“错误”或者遇到的问题，看看大家有没有“中招”。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Match 检索很好用，召回数据又多。业务凡是涉及检索都是 Match query。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;用星爷的话非常应景：“曾经有一堆检索类型放在我面前，我没有珍惜。我挑出 use 最多最爽的 Match query 用的乐此不疲。当召回了一大批不相关的数据才后悔莫及！如果老天再给我一次选型的机会的话，我会优先考虑 Match_phrase&quot;。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.56&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6icqZJbKP0tIKSWaawy3SuhMnqR7PIs96YV5NNpwgk6WfYvKsibcoribuA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图片来自网络&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这么说，大家可能没有感觉，后文会有详细示例说明。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;第二：自己代码实现“与或非”检索。&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;由于对于检索类型了解不全，只知道有限的几种类型：term、match、terms等。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;不知道 query string 检索类型已经实现了：“AND OR NOT” 与或非检索。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;自己实现花了时间不说，也不如 query string 自身实现考虑的全面。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;第三：数百个 wildcard 模糊匹配组合导致演示现场集群宕机&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;这个我在&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247486385&amp;amp;idx=1&amp;amp;sn=e919ab3eba8a4feff4f87f29502908cd&amp;amp;chksm=eaa82399dddfaa8f78b36740487232d8dfd2203e3b5f324c8bbe0ed61e645e606a2ba49b6d8b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;这篇文章&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;这篇文章&lt;/a&gt;有过详细说明，不再赘述。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如上，回头看，出现问题体现在：&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2、精准匹配检索和全文检索的本质区别&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;本文继续缩小范围，把重心缩小为最常用的：精准匹配检索、全文检索、组合检索三种类型。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;精准匹配检索和全文检索的本质区别：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;精准匹配把检索的整个文本&lt;/span&gt;&lt;span&gt;不做分词处理&lt;/span&gt;&lt;span&gt;，当前一个串整体处理。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;而全文检索需要分词处理，对分词后的每个词单独检索然后&lt;/span&gt;&lt;span&gt;大bool组合&lt;/span&gt;&lt;span&gt;检索。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;文章后续内容以如下数据示例展开讨论：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;PUT &lt;span&gt;test&lt;/span&gt;-0415&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;mappings&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;properties&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;title&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;text&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;analyzer&quot;&lt;/span&gt;: &lt;span&gt;&quot;ik_max_word&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;fields&quot;&lt;/span&gt;: {&lt;br/&gt;          &lt;span&gt;&quot;keyword&quot;&lt;/span&gt;: {&lt;br/&gt;            &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;keyword&quot;&lt;/span&gt;&lt;br/&gt;          }&lt;br/&gt;        }&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;POST &lt;span&gt;test&lt;/span&gt;-0415/_bulk&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:1}}&lt;br/&gt;{&lt;span&gt;&quot;title&quot;&lt;/span&gt;:&lt;span&gt;&quot;乌兰图雅经典歌曲30首连播 标清_手机乐视视频&quot;&lt;/span&gt;}&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:2}}&lt;br/&gt;{&lt;span&gt;&quot;title&quot;&lt;/span&gt;:&lt;span&gt;&quot;乌兰县地区生产总值22.9亿元 &quot;&lt;/span&gt;}&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:3}}&lt;br/&gt;{&lt;span&gt;&quot;title&quot;&lt;/span&gt;:&lt;span&gt;&quot;乌兰新闻网欢迎您!&quot;&lt;/span&gt;}&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:4}}&lt;br/&gt;{&lt;span&gt;&quot;title&quot;&lt;/span&gt;:&lt;span&gt;&quot;乌兰:你说急什么呢,我30岁了&quot;&lt;/span&gt;}&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:5}}&lt;br/&gt;{&lt;span&gt;&quot;title&quot;&lt;/span&gt;:&lt;span&gt;&quot;千城胜景丨胜境美誉 多彩乌兰&quot;&lt;/span&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;精准匹配和全文检索的区别，如下一例说得清楚：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;POST &lt;span&gt;test&lt;/span&gt;-0415/_search&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;query&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;match&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;title&quot;&lt;/span&gt;: &lt;span&gt;&quot;乌兰新闻网欢迎您!&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;召回数据&lt;span&gt;（只截取了title）&lt;/span&gt;如下：&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29857/WEBRESOURCE0891241823f19293bffcc2efb935ae7c&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:611,&amp;quot;height&amp;quot;:85},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29857/WEBRESOURCE0891241823f19293bffcc2efb935ae7c&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:611,&amp;quot;height&amp;quot;:85},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.13911620294599017&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6O2nSbIAjMf493MBqZNfVzXeKwBhicJw35mdKbmj0sPfTiaFrzt2Hu2Aw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;611&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;也就是说：检索&lt;/span&gt;&lt;code&gt;&lt;span&gt;“乌兰新闻网欢迎您!”&lt;/span&gt;&lt;/code&gt;&lt;span&gt;召回了全部数据！&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;为啥？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;检索语句加上“profile:true”，一探究竟：&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29861/WEBRESOURCE0ead1690e50c8736bfcb8805d296de23&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:890,&amp;quot;height&amp;quot;:625},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29861/WEBRESOURCE0ead1690e50c8736bfcb8805d296de23&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:890,&amp;quot;height&amp;quot;:625},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.702247191011236&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6ejybEW9KElHvgSzvVOYKHZuBj9BqCAvmm9dtjkUL0micKZdoCmr2BEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;890&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/article&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;一句话：match_query 在检索的时候将待检索字符串做了分词处理。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如上所示：检索的时候“乌兰新闻网欢迎您”切词后变成 [ “乌兰”, &quot;新闻网&quot;, &quot;新闻”，“网”，“欢迎您”， “欢迎”， “您”]。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;有同学会问，咋分的呢？通过 analyzer API 可以看出。&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29868/WEBRESOURCE90efb93d6dcd9e11d864aefd79d2ed4c&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:573,&amp;quot;height&amp;quot;:877},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29868/WEBRESOURCE90efb93d6dcd9e11d864aefd79d2ed4c&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:573,&amp;quot;height&amp;quot;:877},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.530541012216405&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia67NUlDI4Cdtib2z321pHee13gqfVUSfCrwjQr0S4G3jjdZXHzGw1gwkg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;573&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;然后，我们再看一下精准匹配的检索实现。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;POST &lt;span&gt;test&lt;/span&gt;-0415/_search&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;profile&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;, &lt;br/&gt;  &lt;span&gt;&quot;query&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;term&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;title.keyword&quot;&lt;/span&gt;: &lt;span&gt;&quot;乌兰新闻网欢迎您!&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;profile:true 看到结果如下：&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29871/WEBRESOURCEcebd0494a89ecca5e5dd2e7ee310f415&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:843,&amp;quot;height&amp;quot;:376},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29871/WEBRESOURCEcebd0494a89ecca5e5dd2e7ee310f415&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:843,&amp;quot;height&amp;quot;:376},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4460260972716489&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6qwBpYV5sDnFIEaB1jwVGibcL9h77q3MkhHm05clh2sdcuWERKpx0cCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;843&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;也就是说，精准匹配是拿整个文本串一起 term query检索的，不做分词处理。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;有了这个大前提，后面才好理解一些。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;接下来，分类解读各个搜索特点及应用场景。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3 精准匹配检索&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.1 Term 单字段精准匹配、&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;Term query 应用场景：单值精准匹配。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;注意点：&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;避免&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;将 term query 应用到 text 类型的检索。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;再延伸一些，Term 检索针对的是非 text 类型，term 针对 text 类型并不会报错，但结果会达不到预期。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;有同学说：我非要将 text 类型应用 term query会怎么样？来吧，看一下效果：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;DELETE my-index-000001&lt;br/&gt;&lt;span&gt;# 不指定分词器就使用默认：standard 分词器。&lt;/span&gt;&lt;br/&gt;PUT my-index-000001&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;mappings&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;properties&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;full_text&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;text&quot;&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;# 写入数据&lt;/span&gt;&lt;br/&gt;PUT my-index-000001/_doc/1&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;full_text&quot;&lt;/span&gt;: &lt;span&gt;&quot;Quick Brown Foxes!&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 执行检索，并不会召回数据&lt;/span&gt;&lt;br/&gt;GET my-index-000001/_search?pretty&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;profile&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;, &lt;br/&gt;  &lt;span&gt;&quot;query&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;term&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;full_text&quot;&lt;/span&gt;: &lt;span&gt;&quot;Quick Brown Foxes!&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.1318327974276527&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6H7taOwPQX07SD9o3Bh6xZnFtrSjhcOQK8taBlDQIBbqbI1n8QvJG5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;311&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;检索结果如上图所示，&lt;span&gt;为啥没有召回结果数据？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;原因在于：写入的时候，Quick Brown Foxes! 经过默认分词器 standard 处理后，转化为：quick、brown、foxes 存储。&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29900/WEBRESOURCEdad63b71242dfd113566aa5c4fd6f038&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:655,&amp;quot;height&amp;quot;:447},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29900/WEBRESOURCEdad63b71242dfd113566aa5c4fd6f038&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:655,&amp;quot;height&amp;quot;:447},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6824427480916031&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6pCcHAFkn3JnzqBXKX2XhKbSzpCibP8r73TkG70jG4FKzlngKVrPb8Zw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;655&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;而检索的时候，咱们检索的是：“Quick Brown Foxes”，如下所示。所以：没有数据召回。&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29903/WEBRESOURCE997b68663261ba78cd9d8bf265cadff7&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:993,&amp;quot;height&amp;quot;:283},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29903/WEBRESOURCE997b68663261ba78cd9d8bf265cadff7&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:993,&amp;quot;height&amp;quot;:283},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2849949647532729&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6xO4OJAJrYzibMSicCDiazLNiapgCQSc4vUHEHM1ibYbfic8xqcDQkVNNeBNg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;993&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.2 Terms 多字段精准匹配&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;注意点：同 term query核心区别：terms query 支持多个值，而 term query 仅支持单个值。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.3 Range 范围检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;注意点1：当“search.allow_expensive_queries”设置为 false 时，range query 在 text 和 keyword 类型的检索不能被执行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;注意点2：range query 对 text、keyword 类型的区间检索实际意义不大。&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29923/WEBRESOURCE63a84d2e2266a4054a438be4c5c7f963&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:674,&amp;quot;height&amp;quot;:682},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29923/WEBRESOURCE63a84d2e2266a4054a438be4c5c7f963&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:674,&amp;quot;height&amp;quot;:682},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0118694362017804&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6GFzzPGFsGgsIJ8yRPsm6DoFWUzyuy7AicJFpmAhzltPF70WnMf8oRPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;674&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/article&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.4 Exists 是否存在检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Exists query 应用场景：判定字段是否有值。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;特例很多，建议参考官方文档，这里仅强调一个：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;DELETE &lt;span&gt;test&lt;/span&gt;-0001&lt;br/&gt;PUT &lt;span&gt;test&lt;/span&gt;-0001&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;mappings&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;properties&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;title&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;text&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;index&quot;&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;POST &lt;span&gt;test&lt;/span&gt;-0001/_bulk&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:1}}&lt;br/&gt;{&lt;span&gt;&quot;title&quot;&lt;/span&gt;:&lt;span&gt;&quot;1&quot;&lt;/span&gt;}&lt;br/&gt;&lt;br/&gt;POST &lt;span&gt;test&lt;/span&gt;-0001/_search&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;profile&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;, &lt;br/&gt;  &lt;span&gt;&quot;query&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;exists&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;field&quot;&lt;/span&gt;: &lt;span&gt;&quot;title&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如上的 exists query 本质上走的是：“ConstantScore(NormsFieldExistsQuery [field=title])“ 检索，由于 title 字段没有被索引，所以没有结果召回。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.5 Wildcard 类Mysql like 检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Wildcard 应用场景：通配符检索，类似 MySQL like 查询。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;注意：非必要，不使用。看下面截图就知道原因。&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29935/WEBRESOURCE536221632d14d7bcd751eb09de64c269&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:1315,&amp;quot;height&amp;quot;:424},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29935/WEBRESOURCE536221632d14d7bcd751eb09de64c269&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:1315,&amp;quot;height&amp;quot;:424},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.32272473478503627&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6UpiaWFGuxsr4Aa8DWxdU67hW6S1DCj8RtXDdHy6pgPrCmsRv7s1seQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1791&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;推荐阅读：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247486385&amp;amp;idx=1&amp;amp;sn=e919ab3eba8a4feff4f87f29502908cd&amp;amp;chksm=eaa82399dddfaa8f78b36740487232d8dfd2203e3b5f324c8bbe0ed61e645e606a2ba49b6d8b&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Elasticsearch 警惕使用 wildcard 检索！然后呢？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Elasticsearch 警惕使用 wildcard 检索！然后呢？&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.6 prefix 前缀匹配检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;先看一个社区实战问题：&lt;/span&gt;&lt;span&gt;https://elasticsearch.cn/question/12595&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;比如我有3个文档，采用ik_max_word分词。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1. 考试专题&lt;br/&gt;&lt;br/&gt;2. 测试考试成绩&lt;br/&gt;&lt;br/&gt;3. 新动能考试&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如何做到真正的前缀搜索？&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;prefix 可以搞定，针对 keyword 类型才可以。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;DELETE test0416&lt;br/&gt;PUT test0416&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;mappings&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;properties&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;title&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;text&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;analyzer&quot;&lt;/span&gt;: &lt;span&gt;&quot;ik_max_word&quot;&lt;/span&gt;, &lt;br/&gt;        &lt;span&gt;&quot;fields&quot;&lt;/span&gt;: {&lt;br/&gt;          &lt;span&gt;&quot;keyword&quot;&lt;/span&gt;: {&lt;br/&gt;            &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;keyword&quot;&lt;/span&gt;&lt;br/&gt;          }&lt;br/&gt;        }&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;POST test0416/_bulk&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:1}}&lt;br/&gt;{&lt;span&gt;&quot;title&quot;&lt;/span&gt;:&lt;span&gt;&quot;考试专题&quot;&lt;/span&gt;}&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:2}}&lt;br/&gt;{&lt;span&gt;&quot;title&quot;&lt;/span&gt;:&lt;span&gt;&quot;测试考试成绩题&quot;&lt;/span&gt;}&lt;br/&gt;{&lt;span&gt;&quot;index&quot;&lt;/span&gt;:{&lt;span&gt;&quot;_id&quot;&lt;/span&gt;:3}}&lt;br/&gt;{&lt;span&gt;&quot;title&quot;&lt;/span&gt;:&lt;span&gt;&quot;新动能考试&quot;&lt;/span&gt;}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;POST test0416/_search&lt;br/&gt;{&lt;br/&gt;  &lt;span&gt;&quot;query&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;prefix&quot;&lt;/span&gt;: {&lt;br/&gt;      &lt;span&gt;&quot;title.keyword&quot;&lt;/span&gt;: {&lt;br/&gt;        &lt;span&gt;&quot;value&quot;&lt;/span&gt;: &lt;span&gt;&quot;考试&quot;&lt;/span&gt;&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.7 Terms set 检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Terms set Query 应用场景：term query 检索 1个满足条件，terms query检索多个满足条件，而 Terms set query 介于两者中间。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.8 Fuzzy 支持编辑距离的模糊查询&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Fuzzy Query 应用场景：返回包含与搜索词相似的词的文档，也就是说：有一定的类似纠错功能。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.9 IDs 检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;IDS query：基于 ID 组召回数据。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;3.10 Regexp 正则匹配检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Regexp Query：基于正则表达式的检索。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;使用建议：&lt;/span&gt;&lt;span&gt;非必要不使用&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4、全文检索类型&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;4.1 Match 检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;Match Query 应用场景：召回率要求高、精准度要求不高的场景。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;使用建议：精准度要求高的场景慎用。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如前所述，Match 的本质：大 bool + term query 组合体。&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29960/WEBRESOURCE9027ab62805eca58c6ceead59fea53a0&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:894,&amp;quot;height&amp;quot;:569},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29960/WEBRESOURCE9027ab62805eca58c6ceead59fea53a0&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:894,&amp;quot;height&amp;quot;:569},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6364653243847874&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6jZxf9KwzrYyylIsfCOHqjbzKAQ1ILvxSc08S4qrwlrWmzZOC3MibshA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;894&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;4.2 Match phrase 短语检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Match phrase Query 应用场景：更注重精准度召回的场景，match query 如果叫做分词检索的话，match phrase 叫短语匹配检索更为合适。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;注意1：检索的时候可以指定分词器。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;注意2：分词器指定不同，拼接的串中字符的切分粒度不同。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如下两个截图分别使用了：standard 标准分词器以及 ik_smart 粗粒度 IK 分词器。&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29968/WEBRESOURCE135449e979e527493325779426e9612d&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:968,&amp;quot;height&amp;quot;:237},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29968/WEBRESOURCE135449e979e527493325779426e9612d&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:968,&amp;quot;height&amp;quot;:237},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.24483471074380164&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6IhKvxRMUBgxq6RUGTIBKePfuNRoiazIzK1TGicicDBoWaxgMb6NN1lnPg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;968&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29970/WEBRESOURCE73346928fd291b544acd11cf3194df78&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:984,&amp;quot;height&amp;quot;:254},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29970/WEBRESOURCE73346928fd291b544acd11cf3194df78&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:984,&amp;quot;height&amp;quot;:254},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.258130081300813&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6qlhTEK8xLKwgyeB3RmttsbnUYvwvxvWkIpauPthVGDDFGml0e6tJww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;984&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;4.3 Multi-match 检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Multi-match query 应用场景：多字段的 match query。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;注意：多字段就涉及评分的整合，所以会有：most_fields、best_fields、cross_fields 等评分方式。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;4.4 Match_phrase_prefix 检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Match_phrase_prefix query 应用场景：短语匹配+前缀匹配的组合体，适用于短语前缀匹配。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如下所示：&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29985/WEBRESOURCEc0f3f56579f29294e73a2275a524f840&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:1054,&amp;quot;height&amp;quot;:220},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/29985/WEBRESOURCEc0f3f56579f29294e73a2275a524f840&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:1054,&amp;quot;height&amp;quot;:220},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.20872865275142316&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6xslibldV61Nk2jx5nkapE4s3Fzyaiaj3fCAIeDIoAHiaezxEicrK1Sf7eQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1054&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;个人认为，新闻、新闻网是根据已有文本的 IK 分词（写入时指定的分词器 ik_max_word）的结果。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;4.5 query_string 检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;query_string query 应用场景：与或非表达式的检索。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;AND：代表与，OR 代表或，NOT 代表非。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;非常复杂的语法，建议参考官方文档。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;4.6 simple_query_string 检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;simple_query_string 应用场景：同 query_string 。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;核心不同点：simple_query_string 在语法不对时，并不会报错。&lt;/span&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/30005/WEBRESOURCEc02b658902d7917a704c89ce16478af5&amp;quot;,&amp;quot;style&amp;quot;:{},&amp;quot;width&amp;quot;:1105,&amp;quot;height&amp;quot;:342},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/30005/WEBRESOURCEc02b658902d7917a704c89ce16478af5&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:1105,&amp;quot;height&amp;quot;:342},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3095022624434389&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6DiaRwCorzrdwhR622o8IYIicIAHgbuAJVuvTuw9H3iba0FwJFsEItx5nA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1105&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/30008/WEBRESOURCE88e5016125f08cc228c56f4e60044250&amp;quot;,&amp;quot;version&amp;quot;:1,&amp;quot;width&amp;quot;:910,&amp;quot;height&amp;quot;:389},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/30008/WEBRESOURCE88e5016125f08cc228c56f4e60044250&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:910,&amp;quot;height&amp;quot;:389},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42747252747252745&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6cWIjVVNhXJbXpt1RvTqqXRdibriapRuNb8mPE7yV4iaLRMibkghkCTAuKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;910&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;还有几种：Intervals query、Match boolean prefix query、Combined fields query，应用场景相对受限，我没有展开，大家根据官方文档选型即可。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5 组合检索类型&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果把上文的“精准匹配检索”和“全文检索”比作单兵种作战，那么组合检索就可以看做“海陆空”全方位作战。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;组合检索主要分为两大类：bool 组合检索和自定义评分检索。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;5.1 bool 组合检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;适用场景：复杂条件的组合检索。当单个或者单类检索条件不能适配复杂组合检索的时候，优先考虑 bool 组合条件检索。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;其下可以包含但不限于：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;must：必须满足条件。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;must_not：必须不满足条件（忽略评分，召回数据评分为0）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;filter：过滤条件（忽略评分，召回数据评分为0），可以借助缓存提升性能。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;should：部分条件满足，由&lt;/span&gt;&lt;span&gt;minmum_should_match&lt;/span&gt;&lt;span&gt;控制。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3025210084033613&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6vAWPiawjaM0F3bJpSDPE7yZ0gVMtNv6PmlLuPweicOI6O1Heauou8HeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;952&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;article data-content=&quot;[{&amp;quot;type&amp;quot;:&amp;quot;block&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;image&amp;quot;,&amp;quot;data&amp;quot;:{&amp;quot;url&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/30035/WEBRESOURCE04a8c779ceb3b7a486db1d0adb3c8bce&amp;quot;,&amp;quot;version&amp;quot;:1,&amp;quot;width&amp;quot;:771,&amp;quot;height&amp;quot;:366},&amp;quot;nodes&amp;quot;:[],&amp;quot;state&amp;quot;:{&amp;quot;renderSource&amp;quot;:&amp;quot;https://note.youdao.com/yws/res/30035/WEBRESOURCE04a8c779ceb3b7a486db1d0adb3c8bce&amp;quot;,&amp;quot;initialSize&amp;quot;:{&amp;quot;width&amp;quot;:771,&amp;quot;height&amp;quot;:366},&amp;quot;loading&amp;quot;:false}}]&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.47470817120622566&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6rZiabAbXicKWydgJVZXfwlqeqTtsRv4VSRDyVZSgzQZvNLGmzmcCrt5A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;771&quot;/&gt;&lt;/p&gt;&lt;/article&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;5.2 自定义评分检索&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;适用场景：传统基于BM25（词频TF、逆文档频率IDF）机制不能满足评分要求，某一个或者多个字段需要提升、降低或者修改权重比例的时候，优先考虑自定义评分实现。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果自定义评分也无法满足，那只能自己开发评分插件实现。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;自定义评分推荐阅读：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&amp;amp;mid=2247484713&amp;amp;idx=1&amp;amp;sn=5961d78af4fa65c8ea0d3649aa1baec9&amp;amp;chksm=eaa82d01dddfa4178c2dbb1fd1fdf5a00ad8e9d5395aedf831f29a0cfe53b63bc56e47315b52&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;实战 | Elasticsearch自定义评分的N种方法&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;实战 | Elasticsearch自定义评分的N种方法&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;6、总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;说到这里，开篇问题基本都能回答上了。检索类型选型流程参考如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7108843537414966&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6nHxZXMYBZgfnkib0CehkOKhzc9yGhs9y19kmBsSBEvwnwEuozibHrkdw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1176&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;全文检索（Full text query）类检索&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;- Match 适用于：召回率高、精准度不高的场景；&lt;/p&gt;&lt;p&gt;- Match phrase 适用于：精准度高、召回率不高的场景；&lt;/p&gt;&lt;p&gt;- Match phrase prefix 适用于：短语前缀匹配检索；&lt;/p&gt;&lt;p&gt;- Mulit-match 适用于：多字段检索；&lt;/p&gt;&lt;p&gt;- Query string 适用于：支持与或非表达式的检索；&lt;/p&gt;&lt;p&gt;- Simple query string：较 query string 容错率高的场景；&lt;/p&gt;&lt;p&gt;&lt;strong&gt;精准匹配（Term-level query）类检索&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;- Term 适用于：单字段精准匹配；&lt;/p&gt;&lt;p&gt;- Terms 适用于：多字段精准匹配；&lt;/p&gt;&lt;p&gt;- Range 适用于：范围检索；&lt;/p&gt;&lt;p&gt;- Exists 适用于：判定是否存在检索；&lt;/p&gt;&lt;p&gt;- Wildcard 适用于：类Mysql like 检索，非必要不使用；&lt;/p&gt;&lt;p&gt;- prefix 适用于：前缀匹配检索；&lt;/p&gt;&lt;p&gt;- Fuzzy 适用于：支持编辑距离的模糊查询；&lt;/p&gt;&lt;p&gt;- IDs 适用于：基于文档id组检索的场景；&lt;/p&gt;&lt;p&gt;- Regexp 适用于：正则匹配检索，非必要不使用。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.44197952218430037&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/mjl8GCpsL9YyaJ58segJ6bLzojeFsoia6Gtfn4qJyDnweFCNfaIrtBgEIxgRH5GYl0gBg6maR7w2j5v6sVRZfVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1172&quot;/&gt;&lt;/p&gt;&lt;p&gt;大家有好的选型意见和建议，欢迎留言讨论。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>