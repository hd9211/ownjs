<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>0c0c82a0021ecac8857893f1345e8a2b</guid>
<title>卧槽，SQL 注入竟然把我们的系统搞挂了</title>
<link>https://toutiao.io/k/5rmy079</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h1&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近我在整理安全漏洞相关问题，准备在公司做一次分享。恰好，这段时间团队发现了一个sql注入漏洞：在一个公共的分页功能中，排序字段作为入参，前端页面可以自定义。在分页sql的&lt;code&gt;mybatis&lt;/code&gt; &lt;code&gt;mapper.xml&lt;/code&gt;中，&lt;code&gt;order by&lt;/code&gt;字段后面使用&lt;code&gt;$&lt;/code&gt;符号动态接收计算后的排序参数，这样可以实现动态排序的功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，如果入参传入：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;id; &lt;span&gt;select &lt;/span&gt; &lt;span&gt;1 &lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终执行的sql会变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; user &lt;span&gt;order &lt;/span&gt; &lt;span&gt;by &lt;/span&gt; &lt;span&gt;id&lt;/span&gt;; &lt;span&gt;select &lt;/span&gt; &lt;span&gt;1 &lt;/span&gt; &lt;span&gt;-- limit 1,20&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;--&lt;/code&gt;会把后面的&lt;code&gt;limit&lt;/code&gt;语句注释掉，导致分页条件失效，返回了所有数据。攻击者可以通过这个漏洞一次性获取所有数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;动态排序这个功能原本的想法是好的，但是却有&lt;code&gt;sql注入的风险&lt;/code&gt;。值得庆幸的是，这次我们及时发现了问题，并且及时解决了，没有造成什么损失。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，几年前在老东家的时候，就没那么幸运了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;一次sql注入直接把我们支付服务搞挂了。&lt;/strong&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. 还原事故现场&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有一天运营小姐姐跑过来跟我说，有很多用户支付不了。这个支付服务是一个老系统，转手了3个人了，一直很稳定没有出过啥问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我二话不说开始定位问题了，先看服务器日志，发现了很多报数据库连接过多的异常。因为支付功能太重要了，当时为了保证支付功能快速恢复，先找运维把支付服务2个节点重启了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5分钟后暂时恢复了正常。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我再继续定位原因，据我当时的经验判断一般出现数据库连接过多，可能是因为&lt;code&gt;连接忘了关闭&lt;/code&gt;导致。但是仔细排查代码没有发现问题，我们当时用的数据库连接池，它会自动回收空闲连接的，&lt;code&gt;排除了这种可能&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;过了会儿，又有一个节点出现了数据库连接过多的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但此时，还没查到原因，逼于无奈，只能让运维再重启服务，不过这次把数据库&lt;code&gt;最大连接数调大&lt;/code&gt;了，默认是100，我们当时设置的500，后面调成了1000。（其实现在大部分公司会将这个参数设置成&lt;code&gt;1000&lt;/code&gt;）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用命令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;set&lt;/span&gt; &lt;span&gt;GLOBAL&lt;/span&gt; max_connections=&lt;span&gt;500&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;能及时生效，不需要重启mysql服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这次给我争取了更多的时间，找dba帮忙一起排查原因。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用&lt;code&gt;show processlist;&lt;/code&gt;命令查看当前线程执行情况：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2024793388429752&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDGic5kWbspxudyYa1ab9KQpgQLFj9iaViczcFsjTgsnVHa3AVicfD5NicbyOBn3OLn9PMFnkC36uegibbRQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1452&quot;/&gt;还可以查看当前的连接状态帮助识别出有问题的查询语句。（需要特别说明的是上图只是我给的一个例子，线上真实的结果不是这样的）&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;id 线程id&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;User 执行sql的账号&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Host 执行sql的数据库的ip和端号&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;db 数据库名称&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Command 执行命令，包括：Daemon、Query、Sleep等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Time 执行sql所消耗的时间&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;State 执行状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;info 执行信息，里面可能包含sql信息。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;果然，发现了一条不寻常的查询sql，执行了差不多1个小时还没有执行完。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;dba把那条sql复制出来，发给我了。然后&lt;code&gt;kill -9&lt;/code&gt; 杀掉了那条执行耗时非常长的sql线程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后面，数据库连接过多的问题就没再出现了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我拿到那条sql仔细分析了一下，发现一条订单查询语句被攻击者注入了很长的一段sql，肯定是高手写的，有些语法我都没见过。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;但可以确认无误，被人sql注入了。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过那条sql中的信息，我很快找到了相关代码，查询数据时入参竟然用的&lt;code&gt;Statment&lt;/code&gt;，而非&lt;code&gt;PrepareStatement&lt;/code&gt;预编译机制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知道原因就好处理了，将查询数据的地方改成&lt;code&gt;preparestatement&lt;/code&gt;预编译机制后问题得以最终解决。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.为什么会导致数据库连接过多？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我相信很多同学看到这里，都会有一个疑问：sql注入为何会导致数据库连接过多？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我下面用一张图，给大家解释一下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5091352009744214&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDGic5kWbspxudyYa1ab9KQpgl7bheCs6w18GZnzqTFO7fa3O1Mz4YN2dX7F9vQzkJn0eCM8BJmscVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1642&quot;/&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;攻击者sql注入了类似这样的参数：&lt;code&gt;-1;锁表语句--&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其中&lt;code&gt;;&lt;/code&gt;前面的查询语句先执行了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;由于&lt;code&gt;--&lt;/code&gt;后面的语句会被注释，接下来只会执行锁表语句，把表锁住。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;正常业务请求从数据库连接池成功获取连接后，需要操作表的时候，尝试获取表锁，但一直获取不到，直到超时。注意，这里可能会累计大量的数据库连接被占用，没有及时归还。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据库连接池不够用，没有空闲连接。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;新的业务请求从数据库连接池获取不到连接，报数据库连接过多异常。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;sql注入导致数据库连接过多问题，最根本的原因是长时间锁表。&lt;/strong&gt;&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.预编译为什么能防sql注入？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;preparestatement&lt;/code&gt;预编译机制会在sql语句执行前，对其进行语法分析、编译和优化，其中参数位置使用占位符&lt;code&gt;?&lt;/code&gt;代替了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当真正运行时，传过来的参数会被看作是一个纯文本，不会重新编译，不会被当做sql指令。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样，即使入参传入sql注入指令如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;id; &lt;span&gt;select &lt;/span&gt; &lt;span&gt;1 &lt;/span&gt; &lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终执行的sql会变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; user &lt;span&gt;order &lt;/span&gt; &lt;span&gt;by &lt;/span&gt; &lt;span&gt;&#x27;id; select 1 --&#x27; &lt;/span&gt; &lt;span&gt;limit &lt;/span&gt; &lt;span&gt;1&lt;/span&gt;,&lt;span&gt;20&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这样就不会出现sql注入问题了。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.预编译就一定安全？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不知道你在查询数据时有没有用过like语句，比如：查询名字中带有“苏”字的用户，就可能会用类似这样的语句查询：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user &lt;/span&gt; &lt;span&gt;where &lt;/span&gt; &lt;span&gt;name &lt;/span&gt; &lt;span&gt;like &lt;/span&gt; &lt;span&gt;&#x27;%苏%&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;正常情况下是没有问题的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但有些场景下要求传入的条件是必填的，比如：name是必填的，如果注入了：&lt;code&gt;%&lt;/code&gt;，最后执行的sql会变成这样的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user &lt;/span&gt; &lt;span&gt;where &lt;/span&gt; &lt;span&gt;name &lt;/span&gt; &lt;span&gt;like &lt;/span&gt; &lt;span&gt;&#x27;%%%&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种情况预编译机制是正常通过的，但sql的执行结果不会返回包含&lt;code&gt;%&lt;/code&gt;的用户，而是返回了所有用户。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;name字段必填变得没啥用了，攻击者同样可以获取用户表所有数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么会出现这个问题呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;%&lt;/code&gt;在mysql中是关键字，如果使用&lt;code&gt;like &#x27;%%%&#x27;&lt;/code&gt;，该like条件会失效。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何解决呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要对&lt;code&gt;%&lt;/code&gt;进行转义：&lt;code&gt;/%&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;转义后的sql变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user &lt;/span&gt; &lt;span&gt;where &lt;/span&gt; &lt;span&gt;name &lt;/span&gt; &lt;span&gt;like &lt;/span&gt; &lt;span&gt;&#x27;%/%%&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只会返回包含&lt;code&gt;%&lt;/code&gt;的用户。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5.有些特殊的场景怎么办？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在java中如果使用&lt;code&gt;mybatis&lt;/code&gt;作为持久化框架，在&lt;code&gt;mapper.xml&lt;/code&gt;文件中，如果入参使用&lt;code&gt;#&lt;/code&gt;传值，会使用预编译机制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般我们是这样用的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;lt;sql id=&quot;query&quot;&amp;gt;&lt;br/&gt;   &lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; &lt;span&gt;user&lt;/span&gt; &lt;br/&gt;   &amp;lt;&lt;span&gt;where&lt;/span&gt;&amp;gt;&lt;br/&gt;     &lt;span&gt;name&lt;/span&gt; = &lt;span&gt;#{name}&lt;/span&gt;&lt;br/&gt;   &amp;lt;/&lt;span&gt;where&lt;/span&gt;&amp;gt;&lt;br/&gt;&amp;lt;/&lt;span&gt;sql&lt;/span&gt;&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;绝大多数情况下，鼓励大家使用&lt;code&gt;#&lt;/code&gt;这种方式传参，更安全，效率更高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是有时有些特殊情况，比如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&amp;lt;sql id=&quot;orderBy&quot;&amp;gt;&lt;br/&gt;   order by ${sortString}&lt;br/&gt;&amp;lt;/sql&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;sortString字段的内容是一个方法中动态计算出来的，这种情况是没法用&lt;code&gt;#&lt;/code&gt;，代替&lt;code&gt;$&lt;/code&gt;的，这样程序会报错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用&lt;code&gt;$&lt;/code&gt;的情况就有sql注入的风险。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么这种情况该怎办呢？&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;自己写个util工具过滤掉所有的注入关键字，动态计算时调用该工具。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果数据源用的阿里的druid的话，可以开启filter中的wall（防火墙），它包含了防止sql注入的功能。但是有个问题，就是它默认不允许多语句同时操作，对批量更新操作也会拦截，这就需要我们自定义filter了。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6.表信息是如何泄露的？&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有些细心的同学，可能会提出一个问题：在上面锁表的例子中，攻击者是如何拿到表信息的？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;方法1：盲猜&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就是攻击者根据常识猜测可能存在的表名称。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设我们有这样的查询条件：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; t_order &lt;span&gt;where &lt;/span&gt; &lt;span&gt;id&lt;/span&gt; = ${&lt;span&gt;id&lt;/span&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传入参数：&lt;code&gt;-1;select * from user&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终执行sql变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from&lt;/span&gt; t_order &lt;span&gt;where &lt;/span&gt; &lt;span&gt;id&lt;/span&gt; = &lt;span&gt;-1&lt;/span&gt;;&lt;span&gt; select&lt;/span&gt; * &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果该sql有数据返回，说明user表存在，被猜中了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建议表名不要起得过于简单，可以带上适当的前缀，比如：t_user。这样可以增加盲猜的难度。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;方法2：通过系统表&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实mysql有些系统表，可以查到我们自定义的数据库和表的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设我们还是以这条sql为例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; code,&lt;span&gt;name &lt;/span&gt; &lt;span&gt;from&lt;/span&gt; t_order &lt;span&gt;where &lt;/span&gt; &lt;span&gt;id&lt;/span&gt; = ${&lt;span&gt;id&lt;/span&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一步，获取数据库和账号名。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传参为：&lt;code&gt;-1 union select database(),user()#&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终执行sql变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; code,&lt;span&gt;name &lt;/span&gt; &lt;span&gt;from&lt;/span&gt; t_order &lt;span&gt;where &lt;/span&gt; &lt;span&gt;id&lt;/span&gt; = &lt;span&gt;-1 &lt;/span&gt; &lt;span&gt;union &lt;/span&gt; &lt;span&gt;select &lt;/span&gt; &lt;span&gt;database&lt;/span&gt;(),&lt;span&gt;user&lt;/span&gt;()&lt;span&gt;#&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;会返回当前 数据库名称：&lt;code&gt;sue&lt;/code&gt; 和 账号名称：&lt;code&gt;root@localhost&lt;/code&gt;。&lt;img data-ratio=&quot;0.3192771084337349&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDGic5kWbspxudyYa1ab9KQpgoWOiaOpAI5Z2KBsGTLKibAIDw5iaAmRKoXic7beaicI6icqeKPL8mw4yIibOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;332&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第二步，获取表名。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传参改成：&lt;code&gt;-1 union select table_name,table_schema from information_schema.tables where table_schema=&#x27;sue&#x27;#&lt;/code&gt;最终执行sql变成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;select&lt;/span&gt; code,&lt;span&gt;name &lt;/span&gt; &lt;span&gt;from&lt;/span&gt; t_order &lt;span&gt;where &lt;/span&gt; &lt;span&gt;id&lt;/span&gt; = &lt;span&gt;-1 &lt;/span&gt; &lt;span&gt;union &lt;/span&gt; &lt;span&gt;select&lt;/span&gt; table_name,table_schema &lt;span&gt;from&lt;/span&gt; information_schema.tables &lt;span&gt;where&lt;/span&gt; table_schema=&lt;span&gt;&#x27;sue&#x27;&lt;/span&gt;&lt;span&gt;#&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;会返回数据库&lt;code&gt;sue&lt;/code&gt;下面所有表名。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uL371281oDGic5kWbspxudyYa1ab9KQpgia1aZpfgsAMA7jbQldxgK1ypeXzED5VJSD1KiaAmYDCMdRNbs86ys6Og/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;352&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;建议在生成环境程序访问的数据库账号，要跟管理员账号分开，一定要控制权限，不能访问系统表。&lt;br/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7.sql注入到底有哪些危害？&lt;/span&gt;&lt;/h1&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 核心数据泄露&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大部分攻击者的目的是为了赚钱，说白了就是获取到有价值的信息拿出去卖钱，比如：用户账号、密码、手机号、身份证信息、银行卡号、地址等敏感信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他们可以注入类似这样的语句：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-1; &lt;span&gt;select&lt;/span&gt; * &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user&lt;/span&gt;; &lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;就能轻松把用户表中所有信息都获取到。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，建议大家对这些敏感信息加密存储，可以使用&lt;code&gt;AES&lt;/code&gt;对称加密。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 删库跑路&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也不乏有些攻击者不按常理出牌，sql注入后直接把系统的表或者数据库都删了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他们可以注入类似这样的语句：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-1; &lt;span&gt;delete &lt;/span&gt; &lt;span&gt;from &lt;/span&gt; &lt;span&gt;user&lt;/span&gt;; &lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上语句会删掉user表中所有数据。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-1; &lt;span&gt;drop &lt;/span&gt; &lt;span&gt;database &lt;/span&gt; &lt;span&gt;test&lt;/span&gt;; &lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上语句会把整个test数据库所有内容都删掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;正常情况下，我们需要控制线上账号的权限，只允许DML（data manipulation language）数据操纵语言语句，包括：select、update、insert、delete等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不允许DDL（data definition language）数据库定义语言语句，包含：create、alter、drop等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也不允许DCL（Data Control Language）数据库控制语言语句，包含：grant,deny,revoke等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDL和DCL语句只有dba的管理员账号才能操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;顺便提一句：如果被删表或删库了，其实还有补救措施，就是从备份文件中恢复，可能只会丢失少量实时的数据，所以一定有备份机制。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. 把系统搞挂&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有些攻击者甚至可以直接把我们的服务搞挂了，在老东家的时候就是这种情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他们可以注入类似这样的语句：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;-1;锁表语句;&lt;span&gt;--&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把表长时间锁住后，可能会导致数据库连接耗尽。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时，我们需要对数据库线程做监控，如果某条sql执行时间太长，要邮件预警。此外，合理设置数据库连接的超时时间，也能稍微缓解一下这类问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上面三个方面，能看出sql注入问题的危害真的挺大的，我们一定要避免该类问题的发生，不要存着侥幸的心理。如果遇到一些不按常理出票的攻击者，一旦被攻击了，你可能会损失惨重。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;8. 如何防止sql注入？&lt;/span&gt;&lt;/h1&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 使用预编译机制&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尽量用预编译机制，少用字符串拼接的方式传参，它是sql注入问题的根源。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 要对特殊字符转义&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有些特殊字符，比如：&lt;code&gt;%&lt;/code&gt;作为&lt;code&gt;like&lt;/code&gt;语句中的参数时，要对其进行转义处理。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. 要捕获异常&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要对所有的异常情况进行捕获，切记接口直接返回异常信息，因为有些异常信息中包含了sql信息，包括：库名，表名，字段名等。攻击者拿着这些信息，就能通过sql注入随心所欲的攻击你的数据库了。目前比较主流的做法是，有个专门的网关服务，它统一暴露对外接口。用户请求接口时先经过它，再由它将请求转发给业务服务。这样做的好处是：能统一封装返回数据的返回体，并且如果出现异常，能返回统一的异常信息，隐藏敏感信息。此外还能做限流和权限控制。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. 使用代码检测工具&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用sqlMap等代码检测工具，它能检测sql注入漏洞。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. 要有监控&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要对数据库sql的执行情况进行监控，有异常情况，及时邮件或短信提醒。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6. 数据库账号需控制权限&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对生产环境的数据库建立单独的账号，只分配&lt;code&gt;DML&lt;/code&gt;相关权限，且不能访问系统表。切勿在程序中直接使用管理员账号。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;7. 代码review&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;建立代码review机制，能找出部分隐藏的问题，提升代码质量。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;8. 使用其他手段处理&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于不能使用预编译传参时，要么开启&lt;code&gt;druid&lt;/code&gt;的&lt;code&gt;filter&lt;/code&gt;防火墙，要么自己写代码逻辑过滤掉所有可能的注入关键字。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8d1c81865cad778c3eec4a8294e40584</guid>
<title>Bazel Macro 的开发</title>
<link>https://toutiao.io/k/tj4y20u</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;typo&quot;&gt;
&lt;p&gt;当你有了很多rules可以用在你的工程，当你做一些事务去构建你的目标你会发现BUILDfile开始出现大段的只有参数不同的重复代码降低了代码的复用率。&lt;/p&gt;

&lt;p&gt;bazel 的不同于其他构建过程的配置并不是创造一个DSL出来解决这个问题。而通过 Starlark 语言来做到 target 分析。 其关键点在于bazel的运行分为三个阶段 (&lt;a href=&quot;https://docs.bazel.build/versions/master/skylark/concepts.html#evaluation-model&quot;&gt;three phase&lt;/a&gt;) 其中我们使用 starlark 语言去定义我们的构建目标的过程是在第二个阶段。&lt;/p&gt;

&lt;h2&gt;一个Macro的例子&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-starlark&quot;&gt;load(&quot;:render.bzl&quot;, &quot;blender_render&quot;)
load(&quot;//ffmpeg:ffmpeg.bzl&quot;, &quot;ffmpeg_combine_video&quot;)

def blender_render_batch(targets, out):
    render_targets = []
    for t in targets:
        lb = Label(t)
        render_targets.append(t+&quot;_render&quot;)
        blender_render(
            name = lb.name+&quot;_render&quot;,
            blender_project = t,
            out = lb.name+&quot;.mp4&quot;
        )
    ffmpeg_combine_video(
        name = out+&quot;_render&quot;,
        input = render_targets,
        out = out+&quot;.mp4&quot;,
    )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CodeReview提示：进入函数之后我们通过 &lt;code&gt;blender_render&lt;/code&gt; 这个 &lt;code&gt;rule&lt;/code&gt; 把数组内标记的 &lt;code&gt;blender project&lt;/code&gt; 渲染成 &lt;code&gt;mp4&lt;/code&gt; 视频文件并且记录相关的渲染过程的 &lt;code&gt;target&lt;/code&gt; 到数组 &lt;code&gt;render_targets&lt;/code&gt; 中最后放到 &lt;code&gt;ffmpeg_combine_video&lt;/code&gt; 这个 &lt;code&gt;rule&lt;/code&gt; 把这一系列的mp4文件合并成为一个整体视频。这样我们就可以通过这个方法实现视频的工业化生产减少人工剪辑的介入。&lt;/p&gt;

&lt;p&gt;让我们来观察上面的macro实现&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;我们需要把上面的代码放到 &lt;code&gt;render_batch.bzl&lt;/code&gt; 中。

&lt;ol&gt;
&lt;li&gt;然后我们可以通过 &lt;code&gt;load(&quot;@rules_3dmodule//blender:render_batch.bzl&quot;,&quot;blender_render_batch&quot;)&lt;/code&gt; 如上的load代码就可以准备好调用上面的函数实现了。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;我们可以看到其实还是与写 &lt;code&gt;rule&lt;/code&gt; 很像，只是我们并不需要定义 &lt;code&gt;rule&lt;/code&gt; 函数中也不需要有 &lt;code&gt;ctx&lt;/code&gt; 更不需要 &lt;code&gt;actions&lt;/code&gt; 有所执行。&lt;/li&gt;
&lt;li&gt;其中核心的功能实现是通过 &lt;code&gt;load&lt;/code&gt; rule 之后把 rule 当成函数调用即可。&lt;/li&gt;
&lt;li&gt;在写 &lt;code&gt;starlark&lt;/code&gt; 代码中需要注意只有数组(&lt;code&gt;array&lt;/code&gt;)和字典(&lt;code&gt;dict&lt;/code&gt;)是可以修改(&lt;code&gt;mutable&lt;/code&gt;)的变量其他的都是不可修改(&lt;code&gt;immutable&lt;/code&gt;)变量这是为了并行, 这在代码开发中至关重要。按照普通开发语言的开发思路去写会因此掉到坑里。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;深入解析&lt;/h2&gt;

&lt;p&gt;通过上面的例子我们可以通过分析了解到： &lt;code&gt;Analysis phase&lt;/code&gt; 从原理上来讲是通过 &lt;code&gt;(ctx.action)[https://docs.bazel.build/versions/master/skylark/lib/actions.html]&lt;/code&gt; 作为 &lt;code&gt;(DAG)[https://en.wikipedia.org/wiki/Directed_acyclic_graph]&lt;/code&gt; 的 &lt;code&gt;Node&lt;/code&gt; 我们可以从&lt;a href=&quot;https://docs.bazel.build/versions/master/build-ref.html#dependencies&quot;&gt;这里&lt;/a&gt; 来印证我们的观察。 因此我们写的代码或者准确来说 &lt;code&gt;Macro&lt;/code&gt; 是通过运行之后帮助 &lt;code&gt;bazel&lt;/code&gt; 来构建整个 &lt;code&gt;DAG&lt;/code&gt; 的过程。 掌握了这个核心思想之后再开发 &lt;code&gt;Macro&lt;/code&gt; 会轻松很多。&lt;/p&gt;

&lt;h2&gt;状态处理&lt;/h2&gt;

&lt;p&gt;当我们学会了把一些列固定的操作写到函数当中很快你会发现你需要对状态进行处理。 例如在我的工程中，我需要对每个 blender target 标记需要并且让构建运行时知道自己在整体工程中的位置，从视频剪辑的角度来讲叫做场序（或者说你是第几个视频片段）因此我们写的Macro需要处理运行状态问题。&lt;/p&gt;

&lt;p&gt;一个例子：&lt;/p&gt;

&lt;p&gt;以下为文件 &lt;code&gt;counter.bzl&lt;/code&gt; 的内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def video_scene_append(target_list,target):
    c = len(target_list)
    target_list.append(&quot;//%s:%s&quot;%(native.package_name(),target))
    return c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;文件说明： 我们把target变量append到target_list当中，并且返回target在数组中的index作为函数返回。 这样我们就可以定义出target在构建中的序号了。&lt;/p&gt;

&lt;p&gt;以下为 BUILD 的文件内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;load(&quot;counter.bzl&quot;,&quot;video_scene_append&quot;)

# 1. storage video sequence list
# 2. as a counter for video move sequence
video_scene_list = []

video_scene_append(video_scene_list,&quot;stag1&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们把状态存储的变量放到 &lt;code&gt;BUILD&lt;/code&gt; 文件当中， 并且调用函数实现功能。&lt;/p&gt;

&lt;h2&gt;配置处理建议&lt;/h2&gt;

&lt;p&gt;我们可以使用 Jsonnet 来作为配置生成的入口下面是一个例子：&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;BUILD&lt;/code&gt; file 当中&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jsonnet_to_json(
    name = &quot;config_gen_stag4&quot;, 
    src = &quot;databargroup_config.jsonnet&quot;, 
    outs = [&quot;config_gen_stag4.json&quot;], 
    ext_code = {
        &quot;config&quot;: &quot;&quot;&quot;
        {
            default_shift_between_bar:2.6,
            animation_config+:{
                data_bar_keep_frames:24*2,
            },
            num_panel_cfg+:{
                data_division:1.0
            }
        }
        &quot;&quot;&quot;,
        &quot;data_bar_count&quot;:str(first_video_consts_get(stag4_dbg_count_key_name)),
    }, 
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 &lt;code&gt;databargroup_config.jsonnet&lt;/code&gt; 当中&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;local tmpl = {
  &quot;default_shift_between_bar&quot;: 1.3,
  &quot;title_panel_size_x&quot;: 2,
  &quot;title_panel_size_y&quot;: 1,
  &quot;title_panel_scale&quot;: 0.9,
  &quot;title_panel_distance_to_data_bar&quot;: -1.2,
  &quot;title_panel_distance_to_camera&quot;: 0.4,
  &quot;num_panel_exist&quot;: true,
  &quot;num_panel_cfg&quot;: {
    &quot;blah&quot;: &quot;blah&quot;,
  },
  &quot;animation_config&quot;: {
    &quot;blah&quot;: &quot;blah&quot;,,
  }
};

tmpl + std.extVar(&#x27;config&#x27;) + {data_bar_count:std.extVar(&#x27;data_bar_count&#x27;)} 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样我们在真正执行构建 &lt;code&gt;stag4&lt;/code&gt; 这个视频片段就可以使用 &lt;code&gt;config_gen_stag4&lt;/code&gt; 渲染好的 &lt;code&gt;json&lt;/code&gt; 来执行 &lt;code&gt;3d&lt;/code&gt; 建模生产 &lt;code&gt;blender project&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;其中 Jsonnet 语法可以参考关于 &lt;a href=&quot;https://jsonnet.org/learning/tutorial.html#oo&quot;&gt;OOP&lt;/a&gt; 的语法解释。&lt;/p&gt;

&lt;h2&gt;配置硬编码问题&lt;/h2&gt;

&lt;p&gt;当你解决了配置生成问题之后会遇到配置硬编码的问题这里没什么好分享的可以直接&lt;a href=&quot;https://docs.bazel.build/versions/master/skylark/config.html&quot;&gt;参考文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;具体使用中可以参考 &lt;a href=&quot;https://docs.bazel.build/versions/master/guide.html#bazelrc-the-bazel-configuration-file&quot;&gt;&lt;code&gt;.bazelrc&lt;/code&gt;&lt;/a&gt; 的说明。&lt;/p&gt;

&lt;p&gt;从上面的参考文档我们可以知道 &lt;code&gt;flag&lt;/code&gt; 的名字是可以使用 bazel label 作为名字的因此我们的 bazelrc 还是一种代码生成很友好的解决方案。&lt;/p&gt;

&lt;h2&gt;最后&lt;/h2&gt;

&lt;p&gt;我经过了上面的学习和实践同时我也学习到了 &lt;a href=&quot;https://github.com/google/starlark-go/&quot;&gt;starlark-go&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/google/go-jsonnet&quot;&gt;go-jsonnet&lt;/a&gt; 结合在一起会是一个非常好的组合， 无论是在配置，编排，还是自动化领域都是一个不错工具。 在未来的产品开发和构建当中我应该会使用这种组合来提升我的人效。&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>369016f49b79ffbf9dc3b03e3a1e1b34</guid>
<title>你引以为傲的经验还奏效吗？</title>
<link>https://toutiao.io/k/xwpfz4c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说说最近发生的一个事吧，前两天去了趟国家森林公园，发现两个有意思的植物，因为之前是没有见过，所以才会出现想不明白的情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先看第一张图，你看完之后不知道你有什么想法？&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.3333333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/EwukgicNDWBtN6rPlZtxPV92rVmJqniacc1G29aAyp5Uksjd8CwR4hGricT4qZ4HuhQiaaqWknQFTZ0eZticSVBGC7w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一反应是这样的树长在水里面，不死才怪（我认为这是一种松树）。不过松树属多数常青，理应有叶子，不过这个光秃秃的也说不过去。很像水棚走近一看，发现真实的名字叫池杉，是生长在水里的一种高大落叶乔木。树干基部膨大，枝条向上形成狭窄的树冠，尖塔形，形状优美。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再看另一个竹子，先上图。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/EwukgicNDWBtN6rPlZtxPV92rVmJqniacceZVaTysTtXLfaOAs93dibm9UVY6onkrJoD427cvVTIYHTMD7hgothLg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-ratio=&quot;1.4887892376681615&quot; data-w=&quot;892&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一感觉是，这竹子估计枯死了，杆都黄了，找到吊牌发现叫黄皮竹。在我以前的认知里，竹子都是绿色的，黄色的就是枯死了。后面转了一圈，我还发现了红色的、紫色的竹子，数了数近30个品种，只能说我对竹子了解的太少。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;特别是黄皮竹，犹如一只黑天鹅，击溃了所有关于竹子的认识。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;社会节奏越来越快，我们过往的经验到底能不能给予未来的发展一些指导意义，真的是有待商榷。你引以为荣经验积累，有时候价值可能并不大。在有些情况下非但不能帮助你加快对一些事物的认识，反而会阻碍你对一些新事物的认识。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;“行而不得，反求诸己。”这是一个内求的过程，向自己要结果，希望自己反思总结，升华进阶。但有时候，自我的一些知识储备容量不够大，再要结果，这个结果也不会很亮眼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这时候，就需要求外，向外寻求帮助，哪怕是去散步、与人闲谈、酒桌上喝酒吹水等，都有可能打破禁锢，灵光乍现。不管是求内，还是求外，你都必须抱有一种终身学习的成长心态才可以接纳新事物，学习新知识。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本篇只是一个引子，希望能引发你的思考，进而得出一些新的启示。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages __bg_gif&quot; data-ratio=&quot;0.18524332810047095&quot; data-type=&quot;gif&quot; data-w=&quot;637&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/pia7eNKm5ribqUytKORCNqLeBt05FGia804Dvp5iaPybs893QB9yC6sM0KuFeJmoYEhBmicSQkJ5vU6aIpKZhyMOeEA/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;&gt;独乐乐不如众乐乐&lt;/p&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7e41c264c0f39203ed0931567f9af7b2</guid>
<title>如何用 Vue 实现简易的富文本编辑器，并支持 Markdown 语法</title>
<link>https://toutiao.io/k/3v8f2zn</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前端开发经常会用到富文本编辑器，比如CKEditor，动不动一个库几十M的代码量，其中涉及许多你可能用不到的功能特性和相关设置，CKEditor最新版本的代码仓库就有接近2000个JS文件，300,000行代码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可是如果你只需要一个简易版的编辑器，真的值得引入这么一个庞大的库吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天我们从实现一个简易版的编辑器带大家了解一下其背后涉及到的原理。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;开始&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个编辑器将要使用到&lt;code&gt;markdown&lt;/code&gt;：一个简洁语法并且自带样式的语言，而且远比纯HTML的输入输出要安全得多。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，我们需要一些依赖包。 @ts-stack/markdown 和 turndown，&lt;code&gt;@ts-stack/markdown&lt;/code&gt;是用来将markdown语法转化为HTML代码显示用的，而&lt;code&gt;turndown&lt;/code&gt;是将HTML代码转化为markdown语言。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，创建一个基础的Vue组件，命名为&lt;code&gt;WysiwygEditor.vue&lt;/code&gt;，在组件中添加一个div元素，并且将它的&lt;code&gt;contenteditable&lt;/code&gt;属性设置为&lt;code&gt;true&lt;/code&gt;，然后添加一些Tailwind样式去美化一下。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;!-- WysiwygEditor.vue --&amp;gt;&lt;br/&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;div&amp;gt;&lt;br/&gt;    &amp;lt;div&lt;br/&gt;      @input=&lt;span&gt;&quot;onInput&quot;&lt;/span&gt;&lt;br/&gt;      v-html=&lt;span&gt;&quot;innerValue&quot;&lt;/span&gt;&lt;br/&gt;      contenteditable=&lt;span&gt;&quot;true&quot;&lt;/span&gt;&lt;br/&gt;      class=&lt;span&gt;&quot;wysiwyg-output outline-none border-2 p-4 rounded-lg border-gray-300 focus:border-green-300&quot;&lt;/span&gt;&lt;br/&gt;    /&amp;gt;&lt;br/&gt;  &amp;lt;/div&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&lt;br/&gt;&amp;lt;script&amp;gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default {&lt;br/&gt;  name: &lt;span&gt;&#x27;WysiwygEditor&#x27;&lt;/span&gt;,&lt;br/&gt;&lt;br/&gt;  props: [&lt;span&gt;&#x27;value&#x27;&lt;/span&gt;],&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;data&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;      innerValue: this.value&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;  methods: {&lt;br/&gt;    onInput(event) {&lt;br/&gt;      this.&lt;span&gt;$emit&lt;/span&gt;(&lt;span&gt;&#x27;input&#x27;&lt;/span&gt;, event.target.innerHTML)&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后使用该组件：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;!-- Some other component --&amp;gt;&lt;br/&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;  &amp;lt;wysiwyg-editor v-model=&lt;span&gt;&quot;someText&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&amp;lt;!-- ... --&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看起来像这样&lt;img data-ratio=&quot;0.1875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIjoPaWrwxk3JHaGN5Ez3TG5pkOia5icKSUuBfUXA3fgBHVqLicAia2atcAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在这个div元素的样式看起来像&lt;code&gt;textarea&lt;/code&gt; 标签的效果了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;让文本变为富文本&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在编辑器的上面会有一些带有bold，italic，underlined，headings，lists等文本的编辑按钮。并且上面会有对应功能的图标。可以通过安装fontawesome icon来实现。然后对按钮进行一些样式设置。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;.button {&lt;br/&gt;  @apply border-2;&lt;br/&gt;  @apply border-gray-300;&lt;br/&gt;  @apply rounded-lg;&lt;br/&gt;  @apply px-3 py-1;&lt;br/&gt;  @apply mb-3 mr-3;&lt;br/&gt;}&lt;br/&gt;.button:hover {&lt;br/&gt;  @apply border-green-300;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先将这些按钮添加鼠标点击后的监听方法，后面我们会去实现每一个方法里的具体执行。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;!-- WysiwygEditor.vue --&amp;gt;&lt;br/&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;    &amp;lt;div class=&lt;span&gt;&quot;flex flex-wrap&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyBold&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;bold&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyItalic&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;italic&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyHeading&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;heading&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyUl&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;list-ul&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyOl&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;list-ol&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;undo&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;undo&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;redo&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;redo&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;    &amp;lt;/div&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&amp;lt;!-- ... --&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编辑器现在看起来是这样了&lt;img data-ratio=&quot;0.16136363636363638&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIiakEZ2cEh9mkjDMsBhPeVapoAPOuDFzqlYYfEz41rQO2ZqLhVJzATmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在看起来是不是越来越接近了。还缺少按钮动作的执行方法。这里要用到&lt;code&gt;document.execCommand&lt;/code&gt;，虽然MDN已经宣称将废弃该特性，但是大部分浏览器仍然支持。我们暂且还是使用它。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们通过它来实现applyBold方法&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;methods: {&lt;br/&gt;  // ...&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;applyBold&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;bold&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;  // ...&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;非常简洁明了，同样，我们来实现其它方法&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// ...&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;applyItalic&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;italic&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;applyHeading&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;formatBlock&#x27;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;&#x27;&amp;lt;h1&amp;gt;&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;applyUl&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;insertUnorderedList&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;applyOl&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;insertOrderedList&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;undo&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;undo&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&lt;span&gt;redo&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;redo&#x27;&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  // ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里唯一需要说明的是&lt;code&gt;applyHeading&lt;/code&gt;，因为我明确需要在此处指定所需的元素。使用这些命令后，可以预先对输出的元素标签进行一些样式设置&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;.wysiwyg-output h1 {&lt;br/&gt;  @apply text-2xl;&lt;br/&gt;  @apply font-bold;&lt;br/&gt;  @apply pb-4;&lt;br/&gt;}&lt;br/&gt;.wysiwyg-output p {&lt;br/&gt;  @apply pb-4;&lt;br/&gt;}&lt;br/&gt;.wysiwyg-output p {&lt;br/&gt;  @apply pb-4;&lt;br/&gt;}&lt;br/&gt;.wysiwyg-output ul {&lt;br/&gt;  @apply ml-6;&lt;br/&gt;  @apply list-disc;&lt;br/&gt;}&lt;br/&gt;.wysiwyg-output ol {&lt;br/&gt;  @apply ml-6;&lt;br/&gt;  @apply list-decimal;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有了一定样式后，在输入框中输入一些内容&lt;img data-ratio=&quot;0.45&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIJfjVbtqpHnsQfKOuMnicKCNGevlZvGda9TAgNOIU8MhJsc9D2KBricQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了使得更美观一点，把空行用空的段落标签代替，以回车结束的内容归为一个段落&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; // ...&lt;br/&gt;  &lt;span&gt;&lt;span&gt;data&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;      innerValue: this.value || &lt;span&gt;&#x27;&amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&#x27;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;mounted&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;defaultParagraphSeparator&#x27;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;&#x27;p&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;  // ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;添加markdown支持&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果我想直接在编辑器里写markdown语法，暂时还不支持&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# Hello, world!&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;**Lorem ipsum dolor** _sit amet_&lt;br/&gt;&lt;br/&gt;* Some&lt;br/&gt;* Unordered&lt;br/&gt;* List&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;1. Some&lt;br/&gt;1. Ordered&lt;br/&gt;1. List&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结果看起来是这样&lt;img data-ratio=&quot;0.13636363636363635&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIeafVMRbwEIOiawrWSpbNNG0NiaDHQ08OpKeb9UBGg9ESiceia3WoG1U7IA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;完全没有任何样式。别忘了，前面我们安装了&lt;code&gt;@ts-stack/markdown&lt;/code&gt;库，现在可以使用了&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;import { Marked } from &lt;span&gt;&#x27;@ts-stack/markdown&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default {&lt;br/&gt;  name: &lt;span&gt;&#x27;WysiwygEditor&#x27;&lt;/span&gt;,&lt;br/&gt;&lt;br/&gt;  props: [&lt;span&gt;&#x27;value&#x27;&lt;/span&gt;],&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;data&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;      innerValue: Marked.parse(this.value) || &lt;span&gt;&#x27;&amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&#x27;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;// ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们把输入的内容markdown语法转化为HTML代码之后，看起就正常了&lt;img data-ratio=&quot;0.3659090909090909&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIu6jGAiaVmKajBrrSQTYMhsIuiaXiaksUYoPq89t622zDcib2N9icnWh2noQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时还需要在组件传出本文编辑器数据的时候，进行转化，这里要用到前面安装的&lt;code&gt;turndown&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;import TurndownService from &lt;span&gt;&#x27;turndown&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default {&lt;br/&gt;&lt;br/&gt;// ...&lt;br/&gt;&lt;br/&gt;  methods: {&lt;br/&gt;    onInput(event) {&lt;br/&gt;      const turndown = new TurndownService({&lt;br/&gt;        emDelimiter: &lt;span&gt;&#x27;_&#x27;&lt;/span&gt;,&lt;br/&gt;        linkStyle: &lt;span&gt;&#x27;inlined&#x27;&lt;/span&gt;,&lt;br/&gt;        headingStyle: &lt;span&gt;&#x27;atx&#x27;&lt;/span&gt;&lt;br/&gt;      })&lt;br/&gt;&lt;br/&gt;      this.&lt;span&gt;$emit&lt;/span&gt;(&lt;span&gt;&#x27;input&#x27;&lt;/span&gt;, turndown.turndown(event.target.innerHTML))&lt;br/&gt;    },&lt;br/&gt;// ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们把编辑器中输入的markdown语法文本在页面中通过模板输出后的效果&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;!-- Some other component --&amp;gt;&lt;br/&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;  &amp;lt;wysiwyg-editor v-model=&lt;span&gt;&quot;someText&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;&lt;br/&gt;  &amp;lt;pre class=&lt;span&gt;&quot;p-4 bg-gray-300 mt-12&quot;&lt;/span&gt;&amp;gt;{{ someText }}&amp;lt;/pre&amp;gt;&lt;br/&gt;  &amp;lt;!-- ... --&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同步输入输出，内容是一致的，没有任何问题&lt;img data-ratio=&quot;0.9488636363636364&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIUv6ghLdTMtSgcdNI4a2ekcQSqcYEBviaupB4yG4cAo3gamJPx2AX2wg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;img data-ratio=&quot;0.6816666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/wokNJRf0ytqqf6wZvB65ErGibgUtnR4LIEuc9u5pdKINxVZia4vEqupbtbdICMSvMf0wwjDRniarqmQ0Bs8bfkjicA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看起来一切正常，达到了我们想要的效果。下面是全部的代码&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;div&amp;gt;&lt;br/&gt;    &amp;lt;div class=&lt;span&gt;&quot;flex flex-wrap&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyBold&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;bold&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyItalic&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;italic&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyHeading&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;heading&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyUl&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;list-ul&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;applyOl&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;list-ol&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;undo&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;undo&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;      &amp;lt;button @click=&lt;span&gt;&quot;redo&quot;&lt;/span&gt; class=&lt;span&gt;&quot;button&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;font-awesome-icon :icon=&lt;span&gt;&quot;[&#x27;fas&#x27;, &#x27;redo&#x27;]&quot;&lt;/span&gt; /&amp;gt;&lt;br/&gt;      &amp;lt;/button&amp;gt;&lt;br/&gt;    &amp;lt;/div&amp;gt;&lt;br/&gt;&lt;br/&gt;    &amp;lt;div&lt;br/&gt;      @input=&lt;span&gt;&quot;onInput&quot;&lt;/span&gt;&lt;br/&gt;      v-html=&lt;span&gt;&quot;innerValue&quot;&lt;/span&gt;&lt;br/&gt;      contenteditable=&lt;span&gt;&quot;true&quot;&lt;/span&gt;&lt;br/&gt;      class=&lt;span&gt;&quot;wysiwyg-output outline-none border-2 p-4 rounded-lg border-gray-300 focus:border-green-300&quot;&lt;/span&gt;&lt;br/&gt;    /&amp;gt;&lt;br/&gt;  &amp;lt;/div&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&lt;br/&gt;&amp;lt;script&amp;gt;&lt;br/&gt;import { Marked } from &lt;span&gt;&#x27;@ts-stack/markdown&#x27;&lt;/span&gt;&lt;br/&gt;import TurndownService from &lt;span&gt;&#x27;turndown&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; default {&lt;br/&gt;  name: &lt;span&gt;&#x27;WysiwygEditor&#x27;&lt;/span&gt;,&lt;br/&gt;&lt;br/&gt;  props: [&lt;span&gt;&#x27;value&#x27;&lt;/span&gt;],&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;data&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; {&lt;br/&gt;      innerValue: Marked.parse(this.value) || &lt;span&gt;&#x27;&amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&#x27;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;mounted&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;    document.execCommand(&lt;span&gt;&#x27;defaultParagraphSeparator&#x27;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;&#x27;p&#x27;&lt;/span&gt;)&lt;br/&gt;  },&lt;br/&gt;&lt;br/&gt;  methods: {&lt;br/&gt;    onInput(event) {&lt;br/&gt;      const turndown = new TurndownService({&lt;br/&gt;        emDelimiter: &lt;span&gt;&#x27;_&#x27;&lt;/span&gt;,&lt;br/&gt;        linkStyle: &lt;span&gt;&#x27;inlined&#x27;&lt;/span&gt;,&lt;br/&gt;        headingStyle: &lt;span&gt;&#x27;atx&#x27;&lt;/span&gt;&lt;br/&gt;      })&lt;br/&gt;      this.&lt;span&gt;$emit&lt;/span&gt;(&lt;span&gt;&#x27;input&#x27;&lt;/span&gt;, turndown.turndown(event.target.innerHTML))&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;applyBold&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;bold&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;applyItalic&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;italic&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;applyHeading&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;formatBlock&#x27;&lt;/span&gt;, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;&#x27;&amp;lt;h1&amp;gt;&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;applyUl&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;insertUnorderedList&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;applyOl&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;insertOrderedList&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;undo&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;undo&#x27;&lt;/span&gt;)&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&lt;span&gt;redo&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;      document.execCommand(&lt;span&gt;&#x27;redo&#x27;&lt;/span&gt;)&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;结论&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只需要87行代码便实现了一个简易的富文本编辑器。虽然功能还是太简单，但是最起码我们知道了实现一个富文本编辑器后面的原理。后面需要增加功能就不是什么难事了。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f9cea8442502396fb7017d1ee7c8d92e</guid>
<title>2021 春节书单：110 位 CEO 心中的 NO.1</title>
<link>https://toutiao.io/k/p6kzudl</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;罗伯特·艾格的企业管理理念和为人处事的方式很具有启发和学习的价值。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——&lt;span&gt;陈威，&lt;/span&gt;52TOYS创始人、CEO&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;因为做传媒投资的缘故，我一直对迪士尼很关注，这是一个传统传媒企业运作成功的经典案例。我在阅读这本书时，有三点艾格给我留下了非常深刻的印象。分别是勤奋、真诚和创新。深入了解迪士尼，从阅读该书开始。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——陈杭，中国文化产业基金投资管理公司总裁&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;强烈推荐，借用书单狗的话描述阅读体验：惊心动魄，受益匪浅。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——邵振兴，君联资本董事总经理&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;艾格在这本书记述了迪士尼如何批量打造超级IP的经营哲学，如何率领迪士尼从被收购的边缘成长为一个价值万亿的娱乐帝国。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——王曦梓，壹同制作副总经理&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;艾格最大的武器是能看清和坚守“价值”，选认为最有价值的人、公司、IP，好的文化产品很多早期并不赚钱，但你是否能认定它独一无二的价值？好的文化产品也很慢，做一个战略需要5年、10年甚至更久去实现，坚定这个价值，是更大的考验。&lt;/p&gt;&lt;p&gt;&lt;span&gt;——匿名动画大咖&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>