<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>f846b46b2c84cd17aa543108aa46ef0c</guid>
<title>5款最佳最牛代码比较神器</title>
<link>https://toutiao.io/k/7kmiox5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tools=&quot;新媒体管家&quot; data-label=&quot;powered by xmt.cn&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;blockquote&gt;&lt;blockquote&gt;&lt;p&gt;微信搜索&lt;code&gt;逆锋起笔&lt;/code&gt;关注后回复&lt;code&gt;编程pdf&lt;/code&gt;&lt;br/&gt;领取编程大佬们所推荐的 23 种编程资料！&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;作者 | yueliang2100&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;来源 |&lt;span&gt; https://blog.csdn.net/yueliang2100/article/details/82190257&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;俗话说：三句不离本行，对于程序员这个可爱的群体来说也是一样，即使面对无休无止的编程工作，程序员们依旧任劳任怨的埋头苦干，梦想着用自己码下的代码改变世界。工欲善其事,必先利其器，每一位程序员都有自己私藏的编程必备工具，接下来小编就给大家推荐5款程序员最佳的代码比较工具。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/s3scpabv7NUr9LkEbnnicWDSA4GB1A04w2PFDMk3msbcMNGD9XNrgm6uOXWgysgmWpiaEuvHxFjicatT5YnLmM9Pg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一：Beyond Compare&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;推荐：★★★★★&lt;/p&gt;&lt;p&gt;Beyond Compare可以很方便地对比出两份源代码文件之间的不同之处，相差的每一个字节用颜色加以表示，查看方便，支持多种规则对比。&lt;/p&gt;&lt;p&gt;Beyond Compare选择最好的方法来突出不同之处，文本文件可以用语法高亮和设置比较规则的方法进行查看和编辑，适用于用于文档、源代码和HTML。现在最新Beyond Compare 4中文版已经强势来袭，下载地址可参考：&lt;span&gt;http://www.beyondcompare.cc/xiazai.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.9434589800443459&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/y5HvXaQmpqlXX2Bq9ibDYQ3HicpGcvcvMj5UicI1v3mBTm7ZcjC2jOedjEk2ibInbpWvEDG18savjNeFueeGtfiaf5g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;902&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxODcyNjEzNQ==&amp;amp;mid=2247520957&amp;amp;idx=1&amp;amp;sn=8d8f4aa8270b2c32e551b52bddadc4f5&amp;amp;chksm=9bd33f25aca4b633a6a20304b2b520d7d49a8e55e8b3de037ed7c47e463578a73c6704baee74&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;有点突然，锤子就这样终结了！而创始人在隔壁直播卖着红米...&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;二、Diffuse&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;推荐：★★★★&lt;/p&gt;&lt;p&gt;Diffuse在命令行中的速度是相当快的，支持像 C++、Python、Java、XML 等语言的语法高亮显示。可视化比较，非常直观，支持两相比较和三相比较。这就是说，使用 Diffuse 你可以同时比较两个或三个文本文件。&lt;/p&gt;&lt;p&gt;支持常见的版本控制工具，包括 CVS、subversion、git、mercurial 等，你可以通过 Diffuse 直接从版本控制系统获取源代码，以便对其进行比较和合并。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6356413166855845&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/R3InYSAIZkGrbts6FsQiabHk46Q7icPafLZP1IkeicEWyzYibXPYthCppw8zjKt98nU7xNp2VABiccKg2phH9N75sXA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;881&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxODcyNjEzNQ==&amp;amp;mid=2247520957&amp;amp;idx=2&amp;amp;sn=e799b3065d6c61ceba272be74a575d3b&amp;amp;chksm=9bd33f25aca4b633da0fe392e0c68aa915157ccc92ab5d95eae53ee8801b44f03c5ad52ddbcb&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;为什么祖传代码会被称为屎山&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;三、WinMerge&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;推荐：★★★★&lt;/p&gt;&lt;p&gt;一款运行于Windows系统下的文件比较和合并工具，使用它可以非常方便地比较多个文档内容，适合程序员或者经常需要撰写文稿的朋友使用。&lt;/p&gt;&lt;p&gt;WinMerge会将两个文件内容做对比，并在相异之处以高亮度的方式显示，让使用者可以很快的查知；可以直接让左方的文件内容直接覆盖至右方，或者反过来也可以覆盖。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.562962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/y5HvXaQmpqlXX2Bq9ibDYQ3HicpGcvcvMjvoT8Tiay6icCaIibgz2qRtZ0icCxXggb91lMe7eiburP8JWicuYSMNEGumXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;四、Code Compare&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;推荐：★★★&lt;/p&gt;&lt;p&gt;Code Compare是一款用于程序代码文件的比较工具，目前Code Compare支持的对比语言有：C#、C++、CSS、HTML、Java、JavaScrip等代码语言。&lt;/p&gt;&lt;p&gt;Visual Studio环境源代码比较是一个方便，易于使用的工具，独特的Visual Studio集成，可以帮助你同时在一个环境内，使所有的方便程序开发设计。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/y5HvXaQmpqlXX2Bq9ibDYQ3HicpGcvcvMjSwuWJpwPIaybFuiaMsicwe1GxPnTsmpzhsOJHZbib78VxVF3TJD8fuRCA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1020&quot;/&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxODcyNjEzNQ==&amp;amp;mid=2247520957&amp;amp;idx=3&amp;amp;sn=14270558788969f1d482683c4f0a4e81&amp;amp;chksm=9bd33f25aca4b633e430158f87001f2f56d090e9160d41118e14fd34617167eed6d04d38ebd2&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;SpringBoot集成WebSocket，实现后台向前端推送信息&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;五、AptDiff&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;推荐：★★★&lt;/p&gt;&lt;p&gt;AptDiff是一个文件比较工具，可以对文本和二进制文件进行比较和合并，适用于软件开发、网络设计和其它的专业领域。&lt;/p&gt;&lt;p&gt;它使用方便，支持键盘快捷键，可以同步进行横向和纵向卷动，支持Unicode格式和大于4GB的文件，可以生成HTML格式的比较报告。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.8282051282051283&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/y5HvXaQmpqlXX2Bq9ibDYQ3HicpGcvcvMjkicSJjYVRa9jZgGeibWzGibFAJ5Ejnd2lhJ0VQHwOJ6uBqZtBgPEvKCZA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;780&quot;/&gt;&lt;/p&gt;&lt;p&gt;在阅读上述内容后，你可能也想要试一试其中几款软件，或许这些软件不在你的个人收藏之中，不过它们也是代码比较的实用工具。当然如果还有其他的代码比较神器，你觉得应该也占有一席之地，欢迎留言交流。&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;逆锋起笔&lt;/code&gt;是一个专注于程序员圈子的技术平台，你可以收获&lt;code&gt;最新技术动态&lt;/code&gt;、&lt;code&gt;最新内测资格&lt;/code&gt;、&lt;code&gt;BAT等大厂大佬的经验&lt;/code&gt;、&lt;code&gt;增长自身&lt;/code&gt;、&lt;code&gt;学习资料&lt;/code&gt;、&lt;code&gt;职业路线&lt;/code&gt;、&lt;code&gt;赚钱思维&lt;/code&gt;，微信搜索&lt;code&gt;逆锋起笔&lt;/code&gt;关注！&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;或许你还想看&lt;/span&gt;&lt;/h2&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&amp;amp;mid=2247493237&amp;amp;idx=2&amp;amp;sn=9ae8f1abd01b44eeba473fe6e653a9ca&amp;amp;chksm=fa3f072ecd488e388b746e9863b69792bf5882fed49d81e8b890da2d04c2fb588a78a875cab6&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;毕业不到 1年 的前端开发同学的焦虑&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&amp;amp;mid=2247493204&amp;amp;idx=1&amp;amp;sn=4c2664ec0c68a142f1ccbbbc1126b1e5&amp;amp;chksm=fa3f070fcd488e192f8ad6405b077867d3c9a7e726094ea6a861f5925d14ce8df13274ffdccd&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;专心搞事业的程序员都喜欢看这 5 本书&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&amp;amp;mid=2247493203&amp;amp;idx=1&amp;amp;sn=07ac6009fd0ab8b47365121c64615941&amp;amp;chksm=fa3f0708cd488e1ed23e98b65b33074f16a0a1830030494e6fff7193c86f583f538261788b08&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;「下一代 Windows」将很快宣布！10 年来最重大更新之一！&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&amp;amp;mid=2247493202&amp;amp;idx=1&amp;amp;sn=e08d82d00cbbf2c8e79f3c18167cf3a7&amp;amp;chksm=fa3f0709cd488e1f1aef1ff3977c30095179293a65fef2658c28e6ea8af2d5cf243d3fd432e6&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;大公司病，太TM形象了！&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&amp;amp;mid=2247493182&amp;amp;idx=2&amp;amp;sn=d0808be25095064df4e148faf21fb915&amp;amp;chksm=fa3f0765cd488e73c3a0ede4bbd0a31fb822afbb649f8747894ebf6532433eb8e7ca23bf1281&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;2021年 10 大流行软件测试工具&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hs540iaTKoaJzr8mCunJ8fiaLHTVy5ic53H2dSVXKlA7iaibMyl7qJNTePsPptc1CdmciaD2PmhG5J98xjRicQ3Ob0diaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1240&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;section&gt;&lt;span data-darkmode-bgcolor-15865441435016=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15865441435016=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15865441435016=&quot;rgb(255, 21, 21)&quot; data-darkmode-original-color-15865441435016=&quot;rgb(255, 0, 0)&quot; data-style=&quot;max-width: 100%; color: rgb(255, 0, 0); font-family: Optima-Regular, PingFangTC-light; font-weight: 700; letter-spacing: 0.544px; widows: 1; word-spacing: 2px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__37&quot; data-darkmode-bgcolor-15866879525102=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15866879525102=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15866879525102=&quot;rgb(255, 21, 21)&quot; data-darkmode-original-color-15866879525102=&quot;rgb(255, 0, 0)&quot; data-darkmode-bgcolor-158705654000210=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-158705654000210=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-158705654000210=&quot;rgb(255, 21, 21)&quot; data-darkmode-original-color-158705654000210=&quot;rgb(255, 0, 0)&quot; data-darkmode-bgcolor-15870565400370=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15870565400370=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-15870565400370=&quot;rgb(255, 21, 21)&quot; data-darkmode-original-color-15870565400370=&quot;rgb(255, 0, 0)&quot;&gt;支持下 &lt;/span&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.764&quot; data-type=&quot;gif&quot; data-w=&quot;250&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ibsfLhQMgy09JhlUaCQZm4kXHBSlPxPOOpOcfiaNmJRjoem28z1x3CbXNG2eQNK8Tic1Yyf1WqKZ3VibvSicNtwcguQ/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b24fa3ec4c5df831d33291ba17657e22</guid>
<title>ApacheCN Golang 译文集</title>
<link>https://toutiao.io/k/c9ljco1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;snippet-clipboard-content position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;docker pull apachecn0/apachecn-golang-zh&amp;#10;docker run -tid -p &amp;lt;port&amp;gt;:80 apachecn0/apachecn-golang-zh&amp;#10;# 访问 http://localhost:{port} 查看文档&quot;&gt;&lt;pre&gt;&lt;code&gt;docker pull apachecn0/apachecn-golang-zh
docker run -tid -p &amp;lt;port&amp;gt;:80 apachecn0/apachecn-golang-zh
# 访问 http://localhost:{port} 查看文档
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;snippet-clipboard-content position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;pip install apachecn-golang-zh&amp;#10;apachecn-golang-zh &amp;lt;port&amp;gt;&amp;#10;# 访问 http://localhost:{port} 查看文档&quot;&gt;&lt;pre&gt;&lt;code&gt;pip install apachecn-golang-zh
apachecn-golang-zh &amp;lt;port&amp;gt;
# 访问 http://localhost:{port} 查看文档
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;snippet-clipboard-content position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;npm install -g apachecn-golang-zh&amp;#10;apachecn-golang-zh &amp;lt;port&amp;gt;&amp;#10;# 访问 http://localhost:{port} 查看文档&quot;&gt;&lt;pre&gt;&lt;code&gt;npm install -g apachecn-golang-zh
apachecn-golang-zh &amp;lt;port&amp;gt;
# 访问 http://localhost:{port} 查看文档
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8be5190abc4242fc73644149f0c323a0</guid>
<title>轻松容器化 Golang 应用程序</title>
<link>https://toutiao.io/k/ogxv49e</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section&gt;&lt;section&gt;有一些方法容器化 &lt;code&gt;Golang&lt;/code&gt; 工程，尤其是当您使用 &lt;code&gt;Docker&lt;/code&gt; 运行 &lt;code&gt;Go&lt;/code&gt; 项目的可执行文件时。我们可以从我们的项目中创建我们的镜像，简单地在您的本地计算机上运行它，甚至可以通过从 &lt;code&gt;harbour&lt;/code&gt; 中提取您的镜像运行它。&lt;/section&gt;&lt;h2&gt;&lt;span&gt;# &lt;/span&gt;&lt;span&gt;要求&lt;/span&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span&gt;# &lt;/span&gt;&lt;span&gt;入门&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;首先，您需要使用&lt;code&gt;systemctl start docker&lt;/code&gt;或启动您的 &lt;code&gt;docker&lt;/code&gt; 守护进程&lt;code&gt;service docker start&lt;/code&gt;，如果需要必要权限请使用&lt;code&gt;sudo&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;然后我们将创建我们简单的 &lt;code&gt;go HTTP&lt;/code&gt; 代码。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ mkdir &lt;span&gt;go&lt;/span&gt;-dockerfile &amp;amp;&amp;amp; cd &lt;span&gt;go&lt;/span&gt;-dockerfile &lt;br/&gt;$ &lt;span&gt;go&lt;/span&gt; mod init myapp &lt;br/&gt;$ touch server.&lt;span&gt;go&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;server.go：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt; &lt;span&gt;&quot;os&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt; &lt;span&gt;&quot;github.com/gin-gonic/gin&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&quot;github.com/joho/godotenv&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;init&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; godotenv.Load()&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; port := os.Getenv(&lt;span&gt;&quot;PORT&quot;&lt;/span&gt;)&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; port == &lt;span&gt;&quot;&quot;&lt;/span&gt; {&lt;br/&gt;  port = &lt;span&gt;&quot;8080&quot;&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; router := gin.Default()&lt;br/&gt;&lt;br/&gt; router.GET(&lt;span&gt;&quot;/&quot;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;(c *gin.Context)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  c.String(&lt;span&gt;200&lt;/span&gt;, &lt;span&gt;&quot;Hello World&quot;&lt;/span&gt;)&lt;br/&gt; })&lt;br/&gt;&lt;br/&gt; router.GET(&lt;span&gt;&quot;/env&quot;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;(c *gin.Context)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  c.String(&lt;span&gt;200&lt;/span&gt;, &lt;span&gt;&quot;Hello %s&quot;&lt;/span&gt;, os.Getenv(&lt;span&gt;&quot;NAME&quot;&lt;/span&gt;))&lt;br/&gt; })&lt;br/&gt;&lt;br/&gt; router.Run(&lt;span&gt;&quot;:&quot;&lt;/span&gt; + port)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们将包含一个简单的&lt;code&gt;gin&lt;/code&gt;路由器和可选的&lt;code&gt;.server.gogodotenv``/path&lt;/code&gt; 将返回&lt;code&gt;“Hello World”，/envpath&lt;/code&gt; 将返回&lt;code&gt;“Hello ${NAME}”&lt;/code&gt;。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;# &lt;/span&gt;&lt;span&gt;Dockerfile&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;有多种编写方式&lt;code&gt;Dockerfile&lt;/code&gt;，但我将使用不同的基础图像制作&lt;/p&gt;&lt;p&gt;3 个示例：&lt;code&gt;golang docker、alpine、scratch&lt;/code&gt;。&lt;/p&gt;&lt;h3&gt; &lt;span&gt;官方Dockerfile&lt;/span&gt;&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;FROM golang:&lt;span&gt;1.16&lt;/span&gt;-alpine&lt;br/&gt;&lt;br/&gt;WORKDIR /project/&lt;span&gt;go&lt;/span&gt;-docker/&lt;br/&gt;&lt;br/&gt;# COPY &lt;span&gt;go&lt;/span&gt;.mod, &lt;span&gt;go&lt;/span&gt;.sum and download the dependencies&lt;br/&gt;COPY &lt;span&gt;go&lt;/span&gt;.* ./&lt;br/&gt;RUN &lt;span&gt;go&lt;/span&gt; mod download&lt;br/&gt;&lt;br/&gt;# COPY All things inside the project and build&lt;br/&gt;COPY . .&lt;br/&gt;RUN &lt;span&gt;go&lt;/span&gt; build -o /project/&lt;span&gt;go&lt;/span&gt;-docker/build/myapp .&lt;br/&gt;&lt;br/&gt;EXPOSE &lt;span&gt;8080&lt;/span&gt;&lt;br/&gt;ENTRYPOINT [ &lt;span&gt;&quot;/project/go-docker/build/myapp&quot;&lt;/span&gt; ]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在此Dockerfile，我们将其分为几个部分：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;FROM golang:1.16-alpine，我们将golang:1.16-alpine用作此 Docker 构建的基础镜像。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;WORKDIR, 将是我们命令的工作目录/下一个命令的路径。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;COPY go.* ./，我们将从我们的项目复制go.mod&amp;amp;go.sum文件到工作目录。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;RUN go mod download , 从 go modules 下载项目依赖。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;COPY . . ，将我们项目中的所有内容复制到工作目录中。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;RUN go build -o /project/go-docker/build/myapp ., 在工作目录中构建我们的项目并将其project/go-docker/build/myapp作为二进制文件输出。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;EXPOSE 8080，告诉 docker 我们的代码将暴露端口8080。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;ENTRYPOINT [&quot;/project/go-docker/build/myapp&quot;] ，当我们运行这个镜像的容器时，它将从我们的构建可执行文件开始执行。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;之后我们需要运行这个命令：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;docker build -f Dockerfile -t &lt;span&gt;test&lt;/span&gt;-go-docker:latest .&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;-f flag 是我们的Dockerfile.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;-t tag 是镜像标签。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;.命令是当前文件夹下的Dockerfile.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;尝试运行此命令&lt;code&gt;docker images&lt;/code&gt;，例如：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.05153203342618384&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hvZjCFh6diaRDs53Rs3qGl0OBx7E2Oj186EHic4ibVvspWic6pnlgNHUvLPnFUKqkeWBXBoLHxyCMXicvmsSOHf45VA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;718&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;450M&lt;h3&gt; &lt;span&gt;alpine&lt;/span&gt;&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;FROM golang:&lt;span&gt;1.16&lt;/span&gt;-alpine as builder&lt;br/&gt;&lt;br/&gt;WORKDIR /project/&lt;span&gt;go&lt;/span&gt;-docker/&lt;br/&gt;&lt;br/&gt;# COPY &lt;span&gt;go&lt;/span&gt;.mod, &lt;span&gt;go&lt;/span&gt;.sum and download the dependencies&lt;br/&gt;COPY &lt;span&gt;go&lt;/span&gt;.* ./&lt;br/&gt;RUN &lt;span&gt;go&lt;/span&gt; mod download&lt;br/&gt;&lt;br/&gt;# COPY All things inside the project and build&lt;br/&gt;COPY . .&lt;br/&gt;RUN &lt;span&gt;go&lt;/span&gt; build -o /project/&lt;span&gt;go&lt;/span&gt;-docker/build/myapp .&lt;br/&gt;&lt;br/&gt;FROM alpine:latest&lt;br/&gt;COPY --from=builder /project/&lt;span&gt;go&lt;/span&gt;-docker/build/myapp /project/&lt;span&gt;go&lt;/span&gt;-docker/build/myapp&lt;br/&gt;&lt;br/&gt;EXPOSE &lt;span&gt;8080&lt;/span&gt;&lt;br/&gt;ENTRYPOINT [ &lt;span&gt;&quot;/project/go-docker/build/myapp&quot;&lt;/span&gt; ]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;与golang 官方基础镜像的区别：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;FROM golang:1.16-alpine as builder，我们将使用golang:1.16-alpine并标记它，builder因为稍后将使用它。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;FROM alpine:latest，我们用alpine作为基础镜像.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;COPY --from=builder /project/go-docker/build/myapp /project/go-docker/build/myapp ，将构建的二进制文件复制到新的 alpine 镜像中。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这个&lt;code&gt;Dockerfile&lt;/code&gt;生成的镜像比之前小得多。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.07823613086770982&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hvZjCFh6diaRDs53Rs3qGl0OBx7E2Oj18pvr5W3v5YBMMKtlpUlgruOXtJKSicP5TR8ZpA10raGSNxsacfhSRf3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;703&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;15.1M&lt;h3&gt; &lt;span&gt;Scratch&lt;/span&gt;&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;FROM golang:&lt;span&gt;1.16&lt;/span&gt;-alpine as builder&lt;br/&gt;&lt;br/&gt;WORKDIR /project/&lt;span&gt;go&lt;/span&gt;-docker/&lt;br/&gt;&lt;br/&gt;# COPY &lt;span&gt;go&lt;/span&gt;.mod, &lt;span&gt;go&lt;/span&gt;.sum and download the dependencies&lt;br/&gt;COPY &lt;span&gt;go&lt;/span&gt;.* ./&lt;br/&gt;RUN &lt;span&gt;go&lt;/span&gt; mod download&lt;br/&gt;&lt;br/&gt;# COPY All things inside the project and build&lt;br/&gt;COPY . .&lt;br/&gt;RUN &lt;span&gt;go&lt;/span&gt; build -o /project/&lt;span&gt;go&lt;/span&gt;-docker/build/myapp .&lt;br/&gt;&lt;br/&gt;FROM scratch&lt;br/&gt;COPY --from=builder /project/&lt;span&gt;go&lt;/span&gt;-docker/build/myapp /project/&lt;span&gt;go&lt;/span&gt;-docker/build/myapp&lt;br/&gt;&lt;br/&gt;EXPOSE &lt;span&gt;8080&lt;/span&gt;&lt;br/&gt;ENTRYPOINT [ &lt;span&gt;&quot;/project/go-docker/build/myapp&quot;&lt;/span&gt; ]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;对于最后一个 &lt;code&gt;Dockerfile&lt;/code&gt;，我们只将&lt;code&gt;alpine&lt;/code&gt;基础镜像更改为&lt;code&gt;scratch&lt;/code&gt;. &lt;code&gt;Scratch&lt;/code&gt; 是一个空镜像，所以一旦容器运行，我们就无法执行到容器中，因为它没有 &lt;code&gt;shell&lt;/code&gt; 命令。如下是输出的 &lt;code&gt;docker images&lt;/code&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.10653409090909091&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hvZjCFh6diaRDs53Rs3qGl0OBx7E2Oj18dBFAmc54SsPiaGW0icuqOw2HEGQriaiaQJSP2c8w5gGicPygQYUFgj7IALg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;704&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;9.52M&lt;p&gt;运行镜像&lt;code&gt;docker run -d -p 8080:8080 test-go-docker:latest&lt;/code&gt;，它将端口8080从容器转发到物理节点8080端口并可以访问&lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt;&lt;h2&gt;&lt;span&gt;# &lt;/span&gt;&lt;span&gt;结论&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;就我个人而言，我会选择第二个&lt;code&gt;Dockerfile&lt;/code&gt;。为什么？因为体积小而且它还有几个命令和一个&lt;code&gt;shell&lt;/code&gt;命令所以我们可以&lt;code&gt;docker exec&lt;/code&gt;进入容器并访问它。如果我们使用&lt;code&gt;scratch&lt;/code&gt;基础镜像，因为我们无法执行它，所以将很难调试正在运行的容器。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section data-mpa-template=&quot;t&quot;&gt;&lt;p&gt;   &lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.07625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/WLXa0NsmXuiap5yprf7DJXhpdhC0XIBAopbpFTUe1eSSuGbT5Kg63CPBicfpxwLAFIm2wPkicB5NWdSicbzziaibPXSA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;93451&quot;&gt;&lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;92877&quot;&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;喜欢明哥文章的同学&lt;/section&gt;&lt;section&gt;欢迎长按下图订阅！&lt;/section&gt;&lt;p&gt;⬇⬇⬇&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z9cbLZEggxIpo9uxnz9ibo0GBLOuLy5f8g9JYaGfSM85yYauOiafx2cj04PpT3wfB53FpLuBXqFdV4CgzL0Yjmsw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;430&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1d634c6b7754f3eebfe4ab10dbfeddbc</guid>
<title>Prestissimo：使 Presto 性能提升三倍</title>
<link>https://toutiao.io/k/si70m8u</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIxMjI3NTI5OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/DicvpKIBbiaxdvguk5d6BgaNvk9mvMnmticIjibcW5fOibhicUCZDRVGq2SfEib6bRT7djd8icz5HV0sWuKkse9k0Ve7ow/0?wx_fmt=png&quot; data-nickname=&quot;Java与大数据架构&quot; data-alias=&quot;deltalake_bigdata&quot; data-signature=&quot;7年老码农，10W关注者。【Java与大数据架构】全面分享Java编程、Spark、Flink、Kafka、Elasticsearch、数据湖等干货。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;本文资料来自2021年12月09日举办的 &lt;/span&gt;&lt;span&gt;PrestoCon&lt;/span&gt;&lt;span&gt; 2021，议题为《Updates from the New PrestoDB C++ Execution Engine&lt;/span&gt;&lt;span&gt;》，分享&lt;/span&gt;&lt;span&gt;者为来自 &lt;span&gt;Ahana&lt;/span&gt; 的 &lt;span&gt;Deepak Majeti 以及来自 Intel 的 Dave Cohen, Intel&lt;/span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本次分享的 PPT 请关注 &lt;/span&gt;&lt;strong&gt;过往记忆大数据&lt;/strong&gt;&lt;span&gt; 公众号，并回复 &lt;/span&gt;&lt;strong&gt;10108 &lt;/strong&gt;&lt;span&gt;获取。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p/&gt;&lt;section&gt;&lt;span&gt;这篇分享将给大家概述代号为 Prestissimo 项目的相关最新进展。Prestissimo 是新的 PrestoDB C++ 执行引擎，其使用 Velox 库使其能够以良好的性能运行 TPC-H 基准测试。这项工作是 Prestissimo 和 Velox 的几个 PrestoDB 基金会成员公司之间的合作，包括 Ahana、字节跳动、Facebook 和英特尔等。在本次演讲中，我们将从高层概述 Velox 数据平台库（Velox Data Platform library）、Prestissimo c++ Worker、基于 java 的 PrestoDB Coordinator 如何与 Prestissimo 交互，以及如何使该框架在 TPC-H 基准测试中执行查询。本次演讲将特别关注 PrestoDB/Prestissimo 处理这些查询，其中数据集位于 ORC 或 Parquet 格式的 S3 兼容对象存储中。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.2566371681415929&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCsfrHYLfYdMelGusZTaVWooI2Tpd9t8EjZwfzxCwg80BGcTiafZmJR3w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;904&quot;/&gt;&lt;/p&gt;&lt;p&gt;本次分享主要包括以下几个部分：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Prestissimo 和 Velox 回顾；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•   Velox&lt;/span&gt;支持的函数；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Parquet 和 S3 支持&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;TPC-H 查询&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;开源协作&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;未来路线&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;Prestissimo 和 Velox 回顾&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6418439716312057&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCQx0u8DbIicCWWSh4oGQoavKsdiab6Er8o37KxsAAIxLjh5rGqTjQoiaww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1692&quot;/&gt;&lt;/p&gt;&lt;section&gt;Velox 是用于向量化执行的开源最先进的项目：&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;在交互式、批处理、流处理、人工智能等方面具有一致的语义；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;最大化利用硬件资源；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;使用 C++ 编写以便实现最高效率&lt;/span&gt;&lt;/p&gt;&lt;p&gt;为高性能进行相关的优化：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;使用字典编码（Dictionary encoding）来实现零拷贝执行&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;自定义字符串、数组和 Map 编码，允许完全向量化的条件表达式计算，而不需要额外的数据复制&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;自适应地使用基于数组的聚合和 normalized keys&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;用于低延迟的层次化语义感知缓存（Hierarchical semantic-aware cache ）&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Aria 风格的过滤下推到 TableScan&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5808383233532934&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCnu1BNIZU7bSWYls3z7eCkXpicWZaOicItr1TxfBkmfK5RbiayoqFz4pQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2004&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;从上图可以看出，&lt;span&gt;P&lt;/span&gt;&lt;span&gt;restissimo&lt;/span&gt; 其实是 Presto on Velox 的代号。&lt;span&gt;P&lt;/span&gt;&lt;span&gt;restissimo&lt;/span&gt; 使用 Presto 的 Coordinator 进行 SQL 解析、优化以及管理分布式的执行。SQL 的执行是发送到 Velox 中执行的，其是使用 C++ 实现的。&lt;/span&gt;&lt;/section&gt;&lt;h2&gt;Velox 支持的函数&lt;/h2&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4838012958963283&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCy7Jodic8Nwn1JIRicTBLmtIWgC1wAicNEjoL3QpGIzSRuHtA8tl5tZdSg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1389&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;上图是 Presto 支持的函数种类。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5425361155698234&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCReqEJRso1s2FstvIiarpRGTcM9oDCEOCLejWH9PCeJVSFOone5JEb5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1246&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt; 而 Velox&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;支持的&lt;/span&gt;&lt;span&gt;标量（Scalar）&lt;/span&gt;&lt;span&gt;和聚合函数如上所示（绿色代表支持&lt;/span&gt;&lt;span&gt;），&lt;/span&gt;&lt;span&gt;可以看见&lt;/span&gt;&lt;span&gt;大部分常见的 Presto 函数 &lt;/span&gt;&lt;span/&gt;&lt;span&gt;Velox&lt;/span&gt;&lt;span/&gt;&lt;span&gt; 都支持。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6100217864923747&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYC64icwPu6rN7ia0EMibOncbfiaMoUfFbqXqurtDUGKS2S4DpQXHEtghciavA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;918&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面是 Velox&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;中实现标量函数的方法。可见&lt;/span&gt;&lt;span&gt;，一个简单的函数是包装在 VELOX_UDF_BEGIN 和 VELOX_UDF_END 宏之间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关于这部分大家可以参见 Velox 的官方文档：&lt;span&gt;https://facebookincubator.github.io/velox/develop/scalar-functions.html&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;h2&gt;Parquet 和 S3 支持&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5433962264150943&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCephV2Jc6LAIxoCdjRiadMA547g8WN5uILfibbke8BYV7SicuWWIz8K8Yw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1590&quot;/&gt;&lt;/p&gt;&lt;p&gt;Velox 中对 Parquet 的支持是由 Intel 工程师贡献的；当前的实现是包装了 DuckDB 的 Parquet Reader（https://github.com/duckdb/duckdb）&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;在 Velox 中，DuckDB 被用作嵌入式的类库，在测试中用作验证的内存中参考数据库。&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;支持部分过滤下推&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;DuckDB&lt;/span&gt; 的内存格式和 Velox 很类似，对大多数类型都是零拷贝。&lt;/p&gt;&lt;p&gt;当然，目前 Velox 的 Parquet Reader 是可插拔的。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5431547619047619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCc30w7uEqnaW1wwnGtkwOHmQb9NfBoVUUMHnGicH6qr86RNpwojMMUqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1344&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Velox 中对&lt;/span&gt;&lt;span&gt; S3 的支持是由 Ahana 工程师贡献的；扩展了 Velox 的 FileSystem API。也是可插拔的；依赖 AWS C++ SDK；&lt;span&gt;使用 Minio 覆盖CI。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.49722222222222223&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCtZLycBX1Dfibts0BTcKSnrxBSdeJyLW7zC3dicbefL2lBxpCxeHsT9jw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2160&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;下面我们来看下 Prestissimo 中是如何加载 S3 中的 Parquet 文件的：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Prestissimo 实现了 Presto Worker REST API；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Control Plane 接受来自 coordinator 的查询片段（query fragment） Post 请求&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;查询片段（query fragment）接着被编译成 plan；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;plan 被映射到 Velox library；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;在执行中 Velox library 涉及的组件如下：&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Tasks, Drivers&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;TableScan 使用 Connector 抽象；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;HiveConnector 接口使用 S3 文件句柄和 Parquet reader 实例设置 reader&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;TPCH 查询&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3897529734675206&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCE38TEibacff1DL6oOqJ4NwQTqYf9BIM8WzeCVKP1b7r5lGNpr77JRpg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2186&quot;/&gt;&lt;/p&gt;&lt;section&gt;当 Velox 初次开源时，只支持一个 TPCH 查询；来自 Meta、Ahana 和字节跳动的工程师添加了许多功能，使得 Velox 支持22条 TPCH 查询中的19条：&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;支持 Date 类型；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;支持 left outer join；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;部分支持相关子查询；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;剩下的3个查询需要对相关子查询提供更多的支持&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;开源协作&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.35188679245283017&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYC51ELOAXo9MYVCWFIEYZLGcv2ic5IyxUViaZSWdBC7J1ruqKFPgJsOj1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2120&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;•&lt;/span&gt;来自开源社区的贡献极大地改进了 Prestissimo 和 Velox&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;当前 Velox 社区是非常活跃的，提交的 PR 会被迅速的 reviewed 并解决的；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;文档是最新的，对初学者非常有帮助；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;社区每月出版一份 news-letter（如下图）&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Velox Slack 通道支持异步通信和协作&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.889010989010989&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCGMO6ehGGuSUzmArgUUk4TCWy82zu5c3bTMqvuX4gRib2EpyV3nWk1eQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;910&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;h2&gt;未来路线&lt;/h2&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5745007680491552&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/0yBD9iarX0nt0VTvdfsnmCqf8rjxI0zYCsnzH2JxK3bgqYK8Vcib0RBjEO5lBC7ch5ibRYTHLFeSfYUCIsCQfgeFA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1302&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;在 Presto 集群中启用 Prestissimo；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;继续为功能和性能添加更多的特性；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;通过运行各种工作负载来强化 Velox 库&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;添加针对云存储和对象存储的 I/O 优化&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;支持所有的 TPC-DS 。&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;相关资源：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;https://github.com/facebookincubator/velox&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;https://facebookincubator.github.io/velox/&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;https://velox-oss.slack.com/&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>482a6e1bc574d1497ed0089083f7a415</guid>
<title>Go 瑞士军刀：各种结构的转换工具</title>
<link>https://toutiao.io/k/102z7ud</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                                    


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;23&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;阅读本文大概需要 3 分钟。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是 polarisxu。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上次推荐的 「Go网址导航」，其中收录了一项：转换器。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.525&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UzjmETLXwBZCfCV31QqXqzGwVzqCgNwldYAC7vvHY1RWDddge9KN6bpYUzCicKiaRwulH3S1XrP7ywOtSTo2ZgJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网址是：https://transform.tools/。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个开源项目，项目地址：https://github.com/ritz078/transform，目前 Star 数 2.8k+。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个网站将转换工具分成了几类：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;SVG&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;HTML&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;JSON&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;JSON Schema&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;CSS&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;JavaScript&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;GraphQL&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;JSON-LD&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TypeScript&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Flow&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Others&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中有一些对 Gopher 比较有用，这里简单列举介绍下。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;01 Go 相关&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;JSON 几乎每个程序员都会用到。在 Go 语言中，会有哪些场景会用到这里 JSON 相关工具呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1）转为 struct&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个很常见的场景，目前也存在很多在线工具，支持 JSON 转为 struct，而且我没记错的话，GoLand 自带将 JSON 转为 struct。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;transform 里也有这样的工具：https://transform.tools/json-to-go&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.1953125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UzjmETLXwBZCfCV31QqXqzGwVzqCgNwl3Tfyria91Hibl23XPYFLJQf3hF9o9arZyKO0wGiaHBb7J7WSgzicab9Exw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在左边改动 JSON，右边会实时显示出对应的 struct。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，顶部的向上箭头，是导入文件，支持从本地导入和远程 URL 导入。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2）转为 BSON&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你存储使用的是 MongoDB，会使用到 BSON。不过 JSON 到 BSON 转换几乎不太需要借助工具。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;BSON 是一种类 JSON 的一种二进制形式的存储格式，简称 Binary JSON，它和 JSON 一样，支持内嵌的文档对象和数组对象，但是 BSON 有 JSON 没有的一些数据类型，如 Date 和 BinData 类型。BSON 可以做为网络数据交换的一种存储形式，这个有点类似于 Google 的 Protocol Buffer，但是 BSON 是一种 schema-less 的存储形式，它的优点是灵活性高，但它的缺点是空间利用率不是很理想，BSON有 三个特点：轻量性、可遍历性、高效性。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，BSON 看起来和 JSON 是一样的。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.1875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UzjmETLXwBZCfCV31QqXqzGwVzqCgNwlXZjXoEum5obYxJPgQl9bqyhFCgSFQpQeoZDyyYojXh2FEoD3mUV0tg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;02 其他配置文件相关&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前常用的配置文件有：yaml、toml、json、xml 等，它们直接是可以直接转换的。这个网站就提供了相关工具，将一种格式转为另一种格式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如讲 yaml 转为 toml（我喜欢的文件类型）：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.34765625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UzjmETLXwBZCfCV31QqXqzGwVzqCgNwlMl9Wozrv5TibXnJEWyO8icVBSGwagj5ibdnDHK9EhZIYn1VV5urib7BCLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;03 总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好的工具可以提升开发速度，我们要善于使用工具。当然，有能力，你也可以自己生产工具。有好工具记得分享，让更多人知晓、使用。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;往期推荐&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UzjmETLXwBYuP3ncUTaemHXQYjOZDS40VoicqII73Hu9RncJv06g0kJhnrVicSmUfJRg5Wf9qcDHj7zf5vTjns5A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我是 polarisxu，北大硕士毕业，曾在 360 等知名互联网公司工作，10多年技术研发与架构经验！2012 年接触 Go 语言并创建了 Go 语言中文网！著有《&lt;/span&gt;&lt;span&gt;Go语言编程之旅&lt;/span&gt;&lt;span&gt;》、开源图书《&lt;/span&gt;&lt;span&gt;Go语言标准库&lt;/span&gt;&lt;span&gt;》等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;坚持输出技术（包括 Go、Rust 等技术）、职场心得和创业感悟！欢迎关注「polarisxu」一起成长！也欢迎加我微信好友交流：&lt;/span&gt;&lt;span&gt;gopherstudio&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>