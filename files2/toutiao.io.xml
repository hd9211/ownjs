<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>dc05c13cb0614d6cdcae7b43cb9c5e2c</guid>
<title>文末送福利｜十一长假干嘛呢？快来吧！</title>
<link>https://toutiao.io/k/8pbs9cx</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;码农周刊是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;码农周刊是一份专为广大程序员、编程爱好者们打造的 IT 技术周刊。每周发送。&lt;br/&gt;2013 年 9 月 12 日创刊至今，已发送 300 多期，订阅用户超 20 万。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;专业、简单、有用&lt;/span&gt;&lt;span&gt;，是我们一直坚持的办刊宗旨。一路走来，我们见证了不少订阅用户从编程新手进阶成了高级程序员、架构师、CTO……&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2020 年 4 月，为了给用户提供更优质的服务，我们推出了「&lt;/span&gt;&lt;span&gt;码农周刊VIP会员&lt;/span&gt;&lt;span&gt;」服务。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;你与 BAT 技术大牛，只差一份「码农周刊VIP会员」的距离！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;VIP会员特权&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. 52 期码农周刊VIP会员&lt;span&gt;专属邮件周报&lt;/span&gt;，让你及时掌握技术动向；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 只限VIP会员加入的&lt;span&gt;交流圈子&lt;/span&gt;，让你与技术大牛切磋学习；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3. VIP会员独享的&lt;span&gt;工作机会&lt;/span&gt;，为你介绍好公司的好机会；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4. 更多会员特权，持续更新……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何加入「码农周刊VIP会员」？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1. 微信扫描下方二维码，加入码农周刊VIP会员知识星球。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;促销期间，一年仅需 108 元！平均一天花费不到 3 毛！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;34&quot; data-cropselx2=&quot;356&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;425&quot; data-ratio=&quot;1.0857487922705313&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/t8lpVibticjQ6h6x4EnYInRLic6PibFNWw4zSv28rAxcJu9dumVJF03PwHGOWxOzeJKIsydVa7UJuTo4jOjrct9NZw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;828&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 加入码农周刊VIP会员知识星球后，客服会联系您，请留意知识星球内的私信。&lt;br/&gt;3. 客服向您发送码农周刊VIP会员欢迎邮件，开启您的码农周刊VIP会员之旅。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;心动不如心动，赶快订阅吧！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ad0a2e8ab02715576afe9127ce87eb76</guid>
<title>听说 Mutex 源码是出名的不好看，我不信，来试一下</title>
<link>https://toutiao.io/k/iwlj7pc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left&quot; aria-describedby=&quot;js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzIxODcxMTIzNQ==&amp;amp;action=getalbum&amp;amp;album_id=1941116857336299528#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;1941116857336299528&quot; data-tag_source=&quot;0&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#Golang源码分析&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;2个&lt;span class=&quot;weui-hidden_abs&quot;&gt;内容&lt;/span&gt;&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mpvoice class=&quot;js_editor_audio audio_iframe js_uneditable custom_select_card&quot; src=&quot;/cgi-bin/readtemplate?t=tmpl/audio_tmpl&amp;amp;name=%E6%9C%AC%E6%96%87%E4%BB%8B%E7%BB%8D&amp;amp;play_length=00:31&quot; isaac2=&quot;1&quot; low_size=&quot;63.48&quot; source_size=&quot;63.5&quot; high_size=&quot;249.61&quot; name=&quot;本文介绍&quot; play_length=&quot;31000&quot; voice_encode_fileid=&quot;MzIxODcxMTIzNV8yMjQ3NDg1NDE1&quot; data-topic_id=&quot;&quot; data-topic_name=&quot;&quot; data-pluginname=&quot;insertaudio&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3065326633165829&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6D16S6UoqClFMZlricLfvUffTuCnIqEsFEwU9efrUjzco1JaKxEkNsqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1592&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.535&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6bnM6UicxHlmMRxGdxBmic9wDRsuUV5yKWHT9VvCFP3QXNzdYQLBAmteQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1600&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;如何实现Mutex&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.1896551724137931&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6uyEDH9BKSmC1TvriaxCZSOD9omrkED4md2QjLputBK7RG94sDMjNvOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1740&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/figure&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;MVP方案&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;br/&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Mutex需要两个变量：key表示锁的使用情况，value 为0表示锁未被持有，1表示锁被持有 且 没有等待者，n表示锁被持有，有n-1个等待者；sema表示等待队列的信号量，sema是个先进先出的队列，用来阻塞、唤醒协程。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Mutex &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt;  key &lt;span&gt;int32&lt;/span&gt;&lt;br/&gt;  sema &lt;span&gt;int32&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;对Mutex加锁本质是用CAS操作设置key+1，如果锁未被持有，则协程持有锁；如果锁被持有，则协程排队等待；&lt;/p&gt;&lt;p&gt;对Mutex解锁本质是用CAS操作设置key-1，如果key为0，代表没有等待者，直接返回；如果key大于0，代表有协程被阻塞，则按照FIFO的顺序唤醒协程。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;把加锁、解锁过程看成排队上厕所，可参考下图，加锁：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.0928725701943844&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6ynVApJ6iawKGibjHYGUkXyjibuZxlFlvY9ktP4pZzzhgOffTMib2NAXJJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;926&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.0547045951859957&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve62qU1N5cXooppJBicv3pTt3745Z1iaiafyfaEAadlID0stmFGuQ7ILD4LA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;914&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.9177570093457944&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6eibWemWG8ibzRv8icaV7hLSQaGyvpkxPAicyIzoqppf78XEibjk1pHPX4jw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1070&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&amp;lt;&amp;lt;&amp;lt; 左右滑动见更多 &amp;gt;&amp;gt;&amp;gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解锁：&lt;img data-ratio=&quot;1.136919315403423&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6WPU3QbYtlnMS9ooBKQspL6Kr3oKbayPWgC5Z4GMLfooVXsge9oELGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;818&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个mvp版本只是单纯的能用，离好用还差很远。比如如果CPU上有协程来抢锁，但是只能严格按照FIFO顺序排队的话，这样协程并发量不高。因为&lt;span&gt;唤醒协程需要做上下文切换，而此时CPU上正运行着其他协程，理论上如果处于&lt;span&gt;CPU&lt;/span&gt;时间片上的协程抢到锁的话会有更好的性能。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;解决调度公平性&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是Go团队更改了调度顺序，CPU上的协程也有机会抢锁。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就好比排队上厕所一样，CPU上的人离厕所门只有1m的距离，而被唤醒的人离厕所门可能有10m的距离，从全局最优的角度考虑，离门近的人进入厕所可以有更高的吞吐。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.44534883720930235&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6cnZILyRBhNEuxzqVXKLP6fgJWN8iajDn8G6xmqNmmHoZIkYBfBVReAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1720&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体是把Mutex结构体中&lt;code&gt;key&lt;/code&gt;由两种含义拓然成了三种含义，并改名为state：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Mutex &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt;  state &lt;span&gt;int32&lt;/span&gt;&lt;br/&gt;  sema &lt;span&gt;uint32&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.47731397459165154&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6uYwyu2nL3rSTic1PM1vp5jm4D12HfvIaLJwWZqgicRng8vibeTia4OApNg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2204&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;这次改进把state中的第一位作为MutexLocked专属位，表示这个Mutex是否已经被协程持有。&lt;/p&gt;&lt;p&gt;第二位作为MutexWoken专属位，表示Mutex是否处于唤醒状态，唤醒操作是一个比较耗性能的操作，由于每次抢锁只会有一个协程获取锁，理论上不需要唤醒太多协程，当前执行唤醒操作时只会唤醒一个协程，且如果已有唤醒的协程就不会再执行唤醒操作了。&lt;/p&gt;&lt;p&gt;剩余位为 MutexWaiterShift 的位置，用来表示等待者的数量。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个版本在加锁时，CPU上正在执行操作的协程可以和被唤醒的协程同时抢锁，而不用严格执行先进先出。解锁时 Mutex 要去除 MutexLocked标记，并根据是否有等待者或是否有已经被唤醒的协程，去决定是否去唤醒协程。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5983263598326359&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6Vm10GBJWkIEgRicoHG9QKU6icOicot5Id8UvX9qrdnEDemZ0lFibXmlZibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1434&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然而这个版本还有一些问题，协程在抢锁时只会执行一次，如果Mutex没有被释放，这个新来的协程可能就被阻塞排队去了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5604229607250756&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6bcKUYJJHqG5iafDricEKRusrtCc8lXvEicw8shytmKYnwKhV6exm6t7qw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1324&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;加入spin机制&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就好比上厕所一样，你排了好久队，好不容易排到了第一位可以去抢厕所了，由于厕所被锁了，不得不重新排队，是不是有点蛋疼。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时如果你在厕所门口转几圈，理论上如果厕所里面的人方便的比较快，你转圈的时候它正好出来了，那你就可以进去了，这就是所谓的spin机制。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5932885906040268&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6vn0gN3eMUwn7KlFfH3pawCDm3hnibuIO72oCtBIMngoE50woJnDNLVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1490&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是 Go 团队继续优化Mutex，这次为Mutex加入了自旋机制，协程检测锁是否被释放时，如果锁没释放会旋转(底层是执行若干次PAUSE指令)，以期望在这个过程中锁被释放。自旋不是无限制的，协程旋转几圈后，如果还没抢到锁，那它只能乖乖去队列尾部排队了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么到这里Mutex是否完美了呢，其实这里还有一个比较大的问题：如果你是第一次来抢Mutex，抢不到让你去队尾排队，这个看起来合乎常理，但是如果你已经排了半天队，好不容易排到队头可以抢厕所了，却被CPU上的协程抢走了锁，还让你去队尾排队有点残忍，有可能造成你次次抢不到厕所，然后反复到队尾排队，最后活活憋死了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4427860696517413&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6kE8yDnaKn5XiaqDbGfEMia5cHzpJa5ph3UIWJTicOBibXzeYHL7bKAjhvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1608&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;span/&gt;&lt;/h4&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;解决饥饿问题&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;br/&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是Go团队接着去解决这个饥饿问题。他们为Mutex又新增了一个状态：&lt;code&gt;mutexStarving&lt;/code&gt;，这个状态表示 Mutex 是否处于饥饿状态。如果一个协程等待时长超过1ms，那Mutex会进入饥饿状态。在饥饿状态下，锁的执行权会由解锁的协程直接交给队列头部的协程,  各个协程不再抢锁，也不再自旋，而是严格按照FIFO的顺序执行。这次改进中，还修复了被唤醒的协程需重新去队尾排队的问题：如果协程被唤醒后抢锁失败，会被放到队列头部等待唤醒。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5313971742543171&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve68WmErATiaZAn58dnoM66XPg2GS8ZHjzuHTF7qAX896ZSeLP26JQiabCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2548&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就是目前Mutex的实现现状~&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;协程的状态&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面介绍了Mutex的3种状态和一种计数，协程内部也有几个状态，这几个状态会影响Mutex的状态，让我们分别来看一下：&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;iter&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;br/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;iter用于记录协程的自旋次数，在go1.15版本时，超过4次就不再自旋了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.517304189435337&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6JJdwOJgC8gH14hlCpyBAfibMN0mBA28iaHHdHlec3juDlo1dGicE53A3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1098&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/h4&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;awoke&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;awoke表示协程是否唤醒。协程在自旋时，相当于CPU上已经有在等锁的协程。为避免Mutex解锁时再唤醒其他协程，自旋时要尝试把Mutex置为唤醒状态，Mutex处于唤醒状态后 要把本协程的 awoke 也置为true。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.42507645259938837&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6Hy03Ub3cBrKZtWicbLrfW09QBoLGz5dneBwIMv2X1xSdiaASZpOWLoog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1308&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在抢锁前如果协程处于唤醒状态，那就需要把Mutex的mutexWoken状态清空，以便于Mutex在解锁时做唤醒操作。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4528593508500773&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6kNoicX6zpkdD7u7CY60Bkfzkg1MbrfoUBzke8In2GHlA09JHyTraVQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1294&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;span/&gt;&lt;/h4&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;starving&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;br/&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;s&lt;/span&gt;&lt;span&gt;tarving 表示协程的等待时间，如果等待时长超过1ms，starving置为true，后续操作会把Mutex也标记为饥饿状态。&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.48197115384615385&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6u7b9nticYNUlcYd8biaPsX88SGhIezXM6zBNJSFiau37WOHFWsRnoCqWA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1664&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;Mutex的状态内部影响&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面介绍了Mutex的3种状态和一种计数，也介绍了协程内部的几个状态，下面来看看抢锁、解锁时，这些状态对一些操作的具体影响：&lt;/p&gt;&lt;section&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;自旋操作&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自旋操作是 协程发现锁被占用时等锁释放的方式。若锁处于饥饿状态，协程不再自旋而是直接去排队；自旋操作能否执行和 协程的旋转次数iter 以及一些机器的CPU信息相关。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;源码中在执行自旋操作时要判断Mutex是否处于饥饿或者加锁状态：如果锁已经释放，或者Mutex处于饥饿状态，就没必要执行自旋操作了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;加锁操作&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;协程抢锁操作是在Mutex非饥饿情况下进行的，如果Mutex处于饥饿状态，协程会直接排队。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;等待者操作&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;增加等待者：若协程自旋操作完成后，Mutex仍然处于加锁或者饥饿状态，那新来的协程只好乖乖去排队了，此时等待者数量加1。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;减少等待者：解锁时要唤醒协程，此时需要把MutexWoken标记为1表示已有唤醒协程，并减少一个等待者。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;若Mutex处于饥饿状态时，调度协程时需要把Mutex标记为加锁，并减少一个等待者。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;饥饿操作&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;什么时候会饥饿：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Mutex的mutexStarving标记是由协程的starving状态计算的，如果一个协程被唤醒后发现距离第一次排队时已经超过了1ms,下次for循环在尝试加锁时会把Mutex标记为饥饿状态。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;什么时候会解除饥饿：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Mutex处于饥饿状态后，如果发现等待队列中只有一个协程，或者这个协程等待时长小于1ms，就需要把Mutex转换为正常模式。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;两个先决函数&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;协程的阻塞操作是调用runtime_SemacquireMutex函数执行的，唤醒操作是调用runtime_Semrelease进行的。本篇文章暂时不讲调度的具体细节。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Mutex源码解析&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到这里铺垫的差不多了，可以正式看源码了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;lock和unlock方法为了内联操作把简单状态的逻辑单独提出来了。大部头的逻辑在lockslow和unlockslow里面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里有两张图表示为啥提出来把大部头逻辑提出来的好处：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;lock代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func (m *Mutex) &lt;span&gt;&lt;span&gt;Lock&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt;  // Fast path&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; atomic.CompareAndSwapInt32(&amp;amp;m.state, 0, mutexLocked) {&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; race.Enabled {&lt;br/&gt;   race.Acquire(unsafe.Pointer(m))&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;  // slow path&lt;br/&gt; m.lockSlow()&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;lock函数 fast path 解决的情况：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.6357388316151202&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6E1KkAzkO4VJH10EQuvhlcdRF8BJwlONfD0haMQfkc7M1ytB5ibQftUg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1164&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.6360424028268551&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6WkWWm5fW16VtNUE2HoLzjc0VC8Vno6JZtWfTatnC02XKVw6xDaAbbQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1132&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&amp;lt;&amp;lt;&amp;lt; 左右滑动见更多 &amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;unlock代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func (m *Mutex) &lt;span&gt;&lt;span&gt;Unlock&lt;/span&gt;&lt;/span&gt;() {&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; race.Enabled {&lt;br/&gt;  _ = m.state&lt;br/&gt;  race.Release(unsafe.Pointer(m))&lt;br/&gt; }&lt;br/&gt;  // Fast path: drop lock bit.&lt;br/&gt; new := atomic.AddInt32(&amp;amp;m.state, -mutexLocked)&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; new != 0 {&lt;br/&gt;    // Slow path&lt;br/&gt;  m.unlockSlow(new)&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;unlock函数 fast path 解决的情况：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.9266503667481663&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6KLhkJUBjzrIUIdA2vdQKCP3I0FibK0C1m0PPQJicwugZSOXTK7d6VXXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;818&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.8151260504201681&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6S2ILeO1ibibph7SjzONqDytzLz0EV2dx1er2NlQmuf9bSUEovJcicTNgw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;952&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&amp;lt;&amp;lt;&amp;lt; 左右滑动见更多 &amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面来看一下lockslow的源码&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我把这部分源码分成三部分，&lt;span&gt;整体执行如图：&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.337295690936107&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6bBicearFdbISJ0G3U6GKjvyIW9sLGia14WKkxfl2Pib9RfpIsOJFGZj4g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1346&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一部分是自旋部分，&lt;span&gt;第二部分是为抢锁&lt;/span&gt;&lt;span&gt;的CAS打铺垫，给Mutex的各种状态赋值，&lt;/span&gt;&lt;span&gt;第三部分是通过cas操作给Mutex赋值，并根据CAS是否成功做一些相关逻辑处理。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;来看每个部分内部的一些细节：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;第一部分细节&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6146572104018913&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6VcemM601TiaG9SzttcgpNibPULqbhsayENRPuD5fia38FDH89f1HoQ3rg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2538&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;第二部分细节&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.1153846153846154&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6I5Xjfqad9FWhILQJdYP42euXGIKfUkHIkcqM5icMe2Or6piagn1b0DrA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;988&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;第三部分细节&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6646989374262101&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6sBibuukJJACqvpWjWsx7NqZwbkowDK3cB6FhNKDoiad4lhGCdZReMW9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1694&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5427509293680297&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6sz47QQo8JIaJaHNuUdbajibsYndiaMvbPOYXg9bu11DePJ4cqibXbn6dw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1614&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接着让我们通过几个例子感受一下流程：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;span&gt;Mutex:0001, 新来协程&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;br/&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.9942418426103646&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6jLia4ic1s7C3tpxGZuZs03BCiaicO2IwfxnXdUpZCx3Bh8Bubxr80UHk7A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1042&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.9884836852207294&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6nwoHWQIdSvXR4HQCIia1QPHUu8KQut4sHQ92uIoZGYFSBIMic1yEc0Zg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1042&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.998109640831758&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve65DJIia2Y1XgEZ2IF01pFFywcgwIr3YZnhia4BTRy7XJYc9BnAGWiaEvtA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1058&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.6070215175537939&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6YHEn4dbzRuTWJ7bqa6g8720MD7RPGMhqAaE8dsIHjHXKNlTuudVPOw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1766&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.0057142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve68EB3CIVMwHrWs9lqkANg5s11uXgwhibb2TdhZk7ySWkxP2yMfn2MkaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1050&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.005791505791506&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6PZtGibNaqGb294ZicBA3owEMAguiaTRZ23mY1bAptEvER5QX41KBxSFYQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1036&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&amp;lt;&amp;lt;&amp;lt; 左右滑动见更多 &amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;Mutex:1001, 等待者被唤醒&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;br/&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.9871794871794872&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6aEDItA6cegcYFTnDicjbMoWOZfIVQavbCWULv8mTYSV0QE3hIy6ib9zQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1092&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.7121001390820584&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6JQllbqN0xbnTU8mgV6KGpUm3ia3Rg9iax5NvWndlZ3sibY4tXpdboDPuA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1438&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.9707495429616088&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve680NoxfeAPHzblyNckHCGMLbygNXibAwynXVRibQWzUuibZgibzPBbKtricQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1094&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&amp;lt;&amp;lt;&amp;lt; 左右滑动见更多 &amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;Mutex:3001, 等待者被唤醒&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;br/&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1.2262156448202959&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6fr9FqZmtI5P3wfkq8jRicwuEGzUzZSzRVrM8IcZLpaYSnVOiaJshax8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;946&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.9393414211438474&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6Z0BQIEhL7LFU8icKmlqQLjk5pTTrrpFibkaxnhCA35QJdCuBTwOTo34A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1154&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.9150641025641025&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve60MjSqwwVFTTB3CgxH3RFTuicxoF9PPkcylwwYFhA6VOVmnq8Deib8PIQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1248&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.5845070422535211&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6jALLA2b0nIClzf3HPnQm6OypibQOdKS9QeLTfvPXpgeTY6txTibyd0SQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1704&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&amp;lt;&amp;lt;&amp;lt; 左右滑动见更多 &amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面来看一下unlockslow的源码&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;unlock&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;unlock的逻辑比较比较简单，核心就是唤醒等待者，是否唤醒等待者是根据是否存在等待者决定的，根据Mutex是否处于饥饿状态决定唤醒那个等待者。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5123094958968347&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6RBzXYZgscVISmM5NuM5qtViaq5EBhicLH5XU6HsgbwurOYDIXRrLicicJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1706&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;Mutex:2101 饥饿时唤醒等待者&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;br/&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.966728280961183&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6rn0nwwQaEkxIbFoKO5lf0HyARibZVZUotr5ibqibQsnqn7N2lbn5cYNibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1082&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.9584120982986768&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9LnsH9vsy0pYH4slwQ4Rve6ciabycOenefOar7rorr3YXENrSF0DmQno2fmm6XXIUribyWuydcGJznA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1058&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&amp;lt;&amp;lt;&amp;lt; 左右滑动见更多 &amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Mutex源码注释&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面是我阅读go1.15中&lt;code&gt;src/sync/mutex.go&lt;/code&gt;源码时写的一些注释，对源码感兴趣的同学可以对照着看看，有啥问题欢迎找我交流：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; Mutex &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt; state &lt;span&gt;int32&lt;/span&gt;&lt;br/&gt; sema  &lt;span&gt;uint32&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; Locker &lt;span&gt;interface&lt;/span&gt; {&lt;br/&gt; Lock()&lt;br/&gt; Unlock()&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; (&lt;br/&gt; mutexLocked = &lt;span&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span&gt;iota&lt;/span&gt; &lt;span&gt;// mutex is locked&lt;/span&gt;&lt;br/&gt; mutexWoken&lt;br/&gt; mutexStarving&lt;br/&gt; mutexWaiterShift = &lt;span&gt;iota&lt;/span&gt;&lt;br/&gt; starvationThresholdNs = &lt;span&gt;1e6&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(m *Mutex)&lt;/span&gt; &lt;span&gt;Lock&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; atomic.CompareAndSwapInt32(&amp;amp;m.state, &lt;span&gt;0&lt;/span&gt;, mutexLocked) {&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; race.Enabled {&lt;br/&gt;   race.Acquire(unsafe.Pointer(m))&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt; m.lockSlow()&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(m *Mutex)&lt;/span&gt; &lt;span&gt;lockSlow&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;var&lt;/span&gt; waitStartTime &lt;span&gt;int64&lt;/span&gt;&lt;br/&gt; starving := &lt;span&gt;false&lt;/span&gt;&lt;br/&gt; awoke := &lt;span&gt;false&lt;/span&gt;&lt;br/&gt; iter := &lt;span&gt;0&lt;/span&gt;&lt;br/&gt; old := m.state&lt;br/&gt;&lt;br/&gt; &lt;span&gt;// 加锁时，会有多个协程会同时来抢Mutex，CAS操作可以保证原子性，如果一个协程修改了Mutex状态后还抢锁失败，&lt;/span&gt;&lt;br/&gt; &lt;span&gt;// 需要重新去抢锁，所以这里用大for循环把逻辑包起来。&lt;/span&gt;&lt;br/&gt; &lt;span&gt;for&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;// 这个if循环主要判断waiter是否可以自旋，自旋条件不满足时，会执行下段代码&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// old&amp;amp;(mutexLocked|mutexStarving) == mutexLocked 这段代码是看old是否处于饥饿状态，饥饿状态没必要自旋&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// 锁释放了，或者处于饥饿状态，或者自旋次数够了，就不再自旋了&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; old&amp;amp;(mutexLocked|mutexStarving) == mutexLocked &amp;amp;&amp;amp; runtime_canSpin(iter) {&lt;br/&gt;   &lt;span&gt;// 设置 mutexWoken 标记，这里貌似和下面Unlock的代码有联动&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;// 这里是为了告知持有锁的goroutine在释放锁时不需要唤醒其他goroutine了，已经有goroutine在等待，以免唤醒太多的等待协程&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; !awoke &amp;amp;&amp;amp; old&amp;amp;mutexWoken == &lt;span&gt;0&lt;/span&gt; &amp;amp;&amp;amp; old&amp;gt;&amp;gt;mutexWaiterShift != &lt;span&gt;0&lt;/span&gt; &amp;amp;&amp;amp;&lt;br/&gt;    atomic.CompareAndSwapInt32(&amp;amp;m.state, old, old|mutexWoken) {&lt;br/&gt;    awoke = &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;   }&lt;br/&gt;   runtime_doSpin()&lt;br/&gt;   iter++&lt;br/&gt;   old = m.state&lt;br/&gt;   &lt;span&gt;continue&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// 下面四个if判断分别用于对3种状态和一个数量进行赋值，都是为了给new赋值&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;new&lt;/span&gt; := old&lt;br/&gt;  &lt;span&gt;// Don&#x27;t try to acquire starving mutex, new arriving goroutines must queue.&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// 新状态只有在非饥饿的条件下才可以加锁&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; old&amp;amp;mutexStarving == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;   &lt;span&gt;new&lt;/span&gt; |= mutexLocked&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;// 如果old已经处于加锁或者饥饿状态，则等待者按照FIFO的顺序排队&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; old&amp;amp;(mutexLocked|mutexStarving) != &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;   &lt;span&gt;new&lt;/span&gt; += &lt;span&gt;1&lt;/span&gt; &amp;lt;&amp;lt; mutexWaiterShift&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// 如果符合饥饿条件 且锁还没有被释放，则将其设置为饥饿状态&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// 如果锁已经释放了，那就去抢一次锁。如果进入饥饿模式，那就乖乖去排队了&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; starving &amp;amp;&amp;amp; old&amp;amp;mutexLocked != &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;   &lt;span&gt;new&lt;/span&gt; |= mutexStarving&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// 这里用来消除 awoke 标记&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; awoke {&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&amp;amp;mutexWoken == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;    throw(&lt;span&gt;&quot;sync: inconsistent mutex state&quot;&lt;/span&gt;)&lt;br/&gt;   }&lt;br/&gt;   &lt;span&gt;// cas成功&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;// 这里用于清除Woken标记，因为后面 goroutine 只会阻塞或者抢锁成功&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;// 释放唤醒标识，当前goroutine都不再是唤醒状态了，以便其他goroutine进来&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;   &lt;span&gt;// cas失败&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;// 丢人，所以需要释放之前抢到的 mutexWoken 标识&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;new&lt;/span&gt; &amp;amp;^= mutexWoken&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// 下面这里尝试给通过CAS操作把old变成new&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// 这里无非就是加锁成功，或者去排队，排队的话需要看排队到头部还是尾部&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; atomic.CompareAndSwapInt32(&amp;amp;m.state, old, &lt;span&gt;new&lt;/span&gt;) {&lt;br/&gt;&lt;br/&gt;   &lt;span&gt;// 这里还需要看一下&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;// 如果原来的old未加锁，且Mutex不处于饥饿状态，那goroutine获取到锁之后就可以直接退出了&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; old&amp;amp;(mutexLocked|mutexStarving) == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;break&lt;/span&gt; &lt;span&gt;// locked the mutex with CAS&lt;/span&gt;&lt;br/&gt;   }&lt;br/&gt;&lt;br/&gt;   &lt;span&gt;// queueLifo 为true，表示其是被唤醒的，排队时排到头部&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;// queueLifo 为false，表示是第一次排队，排队时排到队列尾部&lt;/span&gt;&lt;br/&gt;   queueLifo := waitStartTime != &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;   &lt;span&gt;// 第一次排队要记录排队时间&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; waitStartTime == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;    waitStartTime = runtime_nanotime()&lt;br/&gt;   }&lt;br/&gt;   &lt;span&gt;// 这里会阻塞&lt;/span&gt;&lt;br/&gt;   runtime_SemacquireMutex(&amp;amp;m.sema, queueLifo, &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;   &lt;span&gt;// 后续代码是队列里的goroutine被runtime_Semrelease唤醒后，从让出的地方继续执行&lt;/span&gt;&lt;br/&gt;   &lt;br/&gt;   &lt;span&gt;// 如果这个协程处于饥饿状态 或 等待时间大于1ms，则设置其为饥饿状态&lt;/span&gt;&lt;br/&gt;   starving = starving || runtime_nanotime()-waitStartTime &amp;gt; starvationThresholdNs&lt;br/&gt;&lt;br/&gt;   old = m.state&lt;br/&gt;   &lt;span&gt;// 如果Mutex处于饥饿状态&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; old&amp;amp;mutexStarving != &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;// 这里是一些异常状态&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; old&amp;amp;(mutexLocked|mutexWoken) != &lt;span&gt;0&lt;/span&gt; || old&amp;gt;&amp;gt;mutexWaiterShift == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;     throw(&lt;span&gt;&quot;sync: inconsistent mutex state&quot;&lt;/span&gt;)&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 把Mutex设置为加锁，把等待队列的waiter-1，&lt;/span&gt;&lt;br/&gt;    delta := &lt;span&gt;int32&lt;/span&gt;(mutexLocked - &lt;span&gt;1&lt;/span&gt;&amp;lt;&amp;lt;mutexWaiterShift)&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 根据协程的状态看看是否需要切换至正常模式&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; !starving || old&amp;gt;&amp;gt;mutexWaiterShift == &lt;span&gt;1&lt;/span&gt; {&lt;br/&gt;&lt;br/&gt;     delta -= mutexStarving&lt;br/&gt;    }&lt;br/&gt;    atomic.AddInt32(&amp;amp;m.state, delta)&lt;br/&gt;    &lt;span&gt;break&lt;/span&gt;&lt;br/&gt;   }&lt;br/&gt;&lt;br/&gt;   &lt;span&gt;// goroutine处于正常模式，标记唤醒标识，然后重新自旋去抢锁&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;// 执行到这里，这个goroutine是被唤醒的，需要把awoke标记 标识为true&lt;/span&gt;&lt;br/&gt;   awoke = &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;   iter = &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;  } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;   &lt;span&gt;// mutex被其他goroutine用了，继续回去自旋吧&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;// 赋值失败时还原状态&lt;/span&gt;&lt;br/&gt;   old = m.state&lt;br/&gt;  }&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; race.Enabled {&lt;br/&gt;  race.Acquire(unsafe.Pointer(m))&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(m *Mutex)&lt;/span&gt; &lt;span&gt;Unlock&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; race.Enabled {&lt;br/&gt;  _ = m.state&lt;br/&gt;  race.Release(unsafe.Pointer(m))&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; &lt;span&gt;new&lt;/span&gt; := atomic.AddInt32(&amp;amp;m.state, -mutexLocked)&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; != &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;// 说明state其他位不为0, 那就直接进入slow path吧&lt;/span&gt;&lt;br/&gt;  m.unlockSlow(&lt;span&gt;new&lt;/span&gt;)&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(m *Mutex)&lt;/span&gt; &lt;span&gt;unlockSlow&lt;/span&gt;&lt;span&gt;(&lt;span&gt;new&lt;/span&gt; &lt;span&gt;int32&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;new&lt;/span&gt;+mutexLocked)&amp;amp;mutexLocked == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;  throw(&lt;span&gt;&quot;sync: unlock of unlocked mutex&quot;&lt;/span&gt;)&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;// mutex处于正常模式&lt;/span&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; &lt;span&gt;new&lt;/span&gt;&amp;amp;mutexStarving == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;  old := &lt;span&gt;new&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; {&lt;br/&gt;   &lt;span&gt;// 如果等待队列为空 或者 已经有其他goroutine被唤醒 or 获得了锁 or 锁处于饥饿模式&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; old&amp;gt;&amp;gt;mutexWaiterShift == &lt;span&gt;0&lt;/span&gt; || old&amp;amp;(mutexLocked|mutexWoken|mutexStarving) != &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;// 不需要唤醒goroutine,直接返回即可&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt;&lt;br/&gt;   }&lt;br/&gt;   &lt;span&gt;// 抢占Woken标示位，获取唤醒一个goroutine的权利&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;new&lt;/span&gt; = (old - &lt;span&gt;1&lt;/span&gt;&amp;lt;&amp;lt;mutexWaiterShift) | mutexWoken&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; atomic.CompareAndSwapInt32(&amp;amp;m.state, old, &lt;span&gt;new&lt;/span&gt;) {&lt;br/&gt;    &lt;span&gt;// 调用这里唤醒一个goroutine&lt;/span&gt;&lt;br/&gt;    runtime_Semrelease(&amp;amp;m.sema, &lt;span&gt;false&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt;&lt;br/&gt;   }&lt;br/&gt;   &lt;span&gt;// 抢占不成功就归位，然后循环去吧&lt;/span&gt;&lt;br/&gt;   old = m.state&lt;br/&gt;  }&lt;br/&gt; } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;// 饥饿模式下，后来的goroutine不会争抢锁，&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// 直接唤醒第一个等待者&lt;/span&gt;&lt;br/&gt;  runtime_Semrelease(&amp;amp;m.sema, &lt;span&gt;true&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;一个问题&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果读者朋友觉得看懂了源码，可以留言回答一下这个问题：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;对于Mutex直接Unlock操作为什么会fatal&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;mpvoice class=&quot;js_editor_audio audio_iframe js_uneditable custom_select_card&quot; src=&quot;/cgi-bin/readtemplate?t=tmpl/audio_tmpl&amp;amp;name=%E7%BB%93%E5%B0%BE%E5%BD%A9%E8%9B%8B&amp;amp;play_length=00:34&quot; isaac2=&quot;1&quot; low_size=&quot;67.74&quot; source_size=&quot;67.7&quot; high_size=&quot;267.61&quot; name=&quot;结尾彩蛋&quot; play_length=&quot;34000&quot; voice_encode_fileid=&quot;MzIxODcxMTIzNV8yMjQ3NDg1NDE2&quot; data-topic_id=&quot;&quot; data-topic_name=&quot;&quot; data-pluginname=&quot;insertaudio&quot;/&gt;&lt;br/&gt;&lt;/section&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，给自己打个广告&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;欢迎加入 &lt;strong&gt;随波逐流的薯条&lt;/strong&gt; 微信群。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;薯条目前有草帽群、木叶群、琦玉群，群交流内容不限于技术、投资、趣闻分享等话题。欢迎感兴趣的同学入群交流。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;入群请加薯条的个人微信：709834997。并备注：加入薯条微信群。&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIxODcxMTIzNQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/YdZzofiato9J9Zggib9T7Iibq78c1TUWq8JjURtqFSKYxps1Qur347zl04U3ERmjBgv9B7MUC4fzNyjorW2y0SsvA/0?wx_fmt=png&quot; data-nickname=&quot;薯条的编程修养&quot; data-alias=&quot;yigfuutc&quot; data-signature=&quot;互联网公司一线开发，日常扯扯淡，分享 Golang、数据库、经验总结、系统设计等方面的技术文章&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e2e15c16b5636b085f8e39ceaef5983e</guid>
<title>快手开源 Android Native 弹幕引擎</title>
<link>https://toutiao.io/k/l83dyyw</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;快手开源的，基于游戏引擎架构思想打造的一款 Android Native 弹幕引擎。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;主要针对移动平台视频（直播）播放中的弹幕场景提供包含弹幕流程与数据处理、弹幕展现以及特效处理等功能的全场景解决方案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;以上内容选自「码农周刊 VIP 会员」圈子，每日更新，精彩不断&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;码农周刊是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;码农周刊是一份专为广大程序员、编程爱好者们打造的 IT 技术周刊。每周发送。&lt;br/&gt;2013 年 9 月 12 日创刊至今，已发送 300 多期，订阅用户超 20 万。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;专业、简单、有用&lt;/span&gt;&lt;span&gt;，是我们一直坚持的办刊宗旨。一路走来，我们见证了不少订阅用户从编程新手进阶成了高级程序员、架构师、CTO……&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2020 年 4 月，为了给用户提供更优质的服务，我们推出了「&lt;/span&gt;&lt;span&gt;码农周刊VIP会员&lt;/span&gt;&lt;span&gt;」服务。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;你与 BAT 技术大牛，只差一份「码农周刊VIP会员」的距离！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;VIP会员特权&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. 52 期码农周刊VIP会员&lt;span&gt;专属邮件周报&lt;/span&gt;，让你及时掌握技术动向；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 只限VIP会员加入的&lt;span&gt;交流圈子&lt;/span&gt;，让你与技术大牛切磋学习；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3. VIP会员独享的&lt;span&gt;工作机会&lt;/span&gt;，为你介绍好公司的好机会；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4. 更多会员特权，持续更新……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何加入「码农周刊VIP会员」？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1. 微信扫描下方二维码，加入码农周刊VIP会员知识星球。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;十一期间，一年仅需 90 元！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;391&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;425&quot; data-ratio=&quot;1.5862068965517242&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/t8lpVibticjQ5vBrjaQf3WD99FSiarQm2nxrribdRzA4YwmChD6icLprsUv27eibwOYMJswWBJRNQ7qYBKLUqwdA736Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;580&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 加入码农周刊VIP会员知识星球后，客服会联系您，请留意知识星球内的私信。&lt;br/&gt;3. 客服向您发送码农周刊VIP会员欢迎邮件，开启您的码农周刊VIP会员之旅。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;心动不如心动，赶快订阅吧！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c1e48b9127b06481900f3e952a881efb</guid>
<title>一口气搞懂 Flink Metrics 监控指标和性能优化，全靠这 33 张图和 7 千字</title>
<link>https://toutiao.io/k/j2qpb1g</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是土哥。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近在公司做 Flink 推理任务的性能测试，要对 job 的&lt;code&gt;全链路吞吐&lt;/code&gt;、&lt;code&gt;全链路时延&lt;/code&gt;、&lt;code&gt;吞吐时延&lt;/code&gt;指标进行监控和调优，其中要使用 Flink Metrics 对指标进行监控。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来这篇文章，干货满满，我将带领读者全面了解 Flink Metrics 指标监控，并通过实战案例，对&lt;code&gt;全链路吞吐&lt;/code&gt;、&lt;code&gt;全链路时延&lt;/code&gt;、&lt;code&gt;吞吐时延&lt;/code&gt;的指标进行性能优化，彻底掌握 Flink Metrics 性能调优的方法和 Metrics 的使用。大纲目录如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4319906596614127&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyedwicDgOIBt7SGdcnhtZv97Hun4cicgdichibQTutc71CCicU3eDFQlMtpxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1713&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1 Flink Metrics 简介&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Flink Metrics 是 Flink 集群运行中的各项指标，包含机器系统指标，比如：CPU、内存、线程、JVM、网络、IO、GC 以及任务运行组件（JM、TM、Slot、作业、算子）等相关指标。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Flink Metrics 包含两大作用：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;实时采集监控数据。在 Flink 的 UI 界面上，用户可以看到自己提交的任务状态、时延、监控信息等等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对外提供数据收集接口。用户可以将整个 Flink 集群的监控数据主动上报至第三方监控系统，如：prometheus、grafana 等，下面会介绍。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.1 Flink Metric Types&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Flink 一共提供了四种监控指标：分别为 Counter、Gauge、Histogram、Meter。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4189189189189189&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyesDafugpBOJaqDGs1iaYV4SqniaehHlldU9DAytrhIDOtZBCicjcsdqkHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;814&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1. Count 计数器&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;统计一个  指标的总量。写过 MapReduce 的开发人员就应该很熟悉 Counter，其实含义都是一样的，就是对一个计数器进行累加，即对于多条数据和多兆数据一直往上加的过程。其中 Flink 算子的接收记录总数 (numRecordsIn) 和发送记录总数 (numRecordsOut) 属于 Counter 类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用方式：可以通过调用 counter(String name)来创建和注册 MetricGroup&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7063142437591777&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeicDJxuvqXGnsSkHeSjobJlx1aaGLuU6cPblWRLtxrn0T0WXryUKNUxw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1362&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2. Gauge 指标瞬时值&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Gauge 是最简单的 Metrics ，它反映一个指标的瞬时值。比如要看现在 TaskManager 的 JVM heap 内存用了多少，就可以每次实时的暴露一个 Gauge，Gauge 当前的值就是 heap 使用的量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用前首先创建一个实现 org.apache.flink.metrics.Gauge 接口的类。返回值的类型没有限制。您可以通过在 MetricGroup 上调用 gauge&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8414096916299559&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyepakONQgksZiaYLTHcsdVbNWFlFSBfibyelVNo66Pf6dF91BOQl51wxYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1362&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3. Meter 平均值&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来记录一个指标在某个时间段内的平均值。Flink 中的指标有 Task 算子中的 numRecordsInPerSecond,记录此 Task 或者算子每秒接收的记录数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用方式：通过 markEvent() 方法注册事件的发生。通过markEvent(long n) 方法注册同时发生的多个事件。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7434312210200927&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeQ3VLnHanFPicBmf70gwGkibAAmSagMH3QJR7eqqWicBCOiaLhgIbOLztkA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1294&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4. Histogram 直方图&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Histogram 用于统计一些数据的分布，比如说 Quantile、Mean、StdDev、Max、Min 等，其中最重要一个是统计算子的延迟。此项指标会记录数据处理的延迟信息，对任务监控起到很重要的作用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用方式：通过调用 histogram(String name, Histogram histogram) 来注册一个 MetricGroup&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7434312210200927&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeLcj7nEdiau0LBw6hkmXf5tkyGwevSGicIB05OzvDicVk4qHUyxSMmTH1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1294&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.2 Scope&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Flink 的指标体系按树形结构划分，域相当于树上的顶点分支，表示指标大的分类。每个指标都会分配一个标识符，该标识符将基于 3 个组件进行汇报：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;注册指标时用户提供的名称；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可选的用户自定义域；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;系统提供的域。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如，如果 A.B 是系统域，C.D 是用户域，E 是名称，那么指标的标识符将是 A.B.C.D.E. 你可以通过设置 conf/flink-conf.yam 里面的 metrics.scope.delimiter 参数来配置标识符的分隔符(默认“.”)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举例说明：以算子的指标组结构为例，其默认为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; &amp;lt;host&amp;gt;.taskmanager.&amp;lt;tm_id&amp;gt;.&amp;lt;job_name&amp;gt;.&amp;lt;operator_name&amp;gt;.&amp;lt;subtask_index&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算子的输入记录数指标为：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;hlinkui.taskmanager.1234.wordcount.flatmap.0.numRecordsIn&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1.3 Metrics 运行机制&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在生产环境下，为保证对Flink集群和作业的运行状态进行监控，Flink 提供两种集成方式：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1.3.1 主动方式 MetricReport&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Flink Metrics 通过在 conf/flink-conf.yaml 中配置一个或者一些 reporters，将指标暴露给一个外部系统.这些 reporters 将在每个 job 和 task manager 启动时被实例化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1.3.2 被动方式 RestAPI&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过提供 Rest 接口，被动接收外部系统调用，可以返回集群、组件、作业、Task、算子的状态。Rest API 实现类是 WebMonitorEndpoint&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2 Flink Metrics 监控系统搭建&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Flink 主动方式共提供了 8 种 Report。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们使用 PrometheusPushGatewayReporter 方式 通过 prometheus + pushgateway + grafana 组件搭建 Flink On Yarn 可视化监控。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 用户 使用 Flink 通过 session 模式向 yarn 集群提交一个 job 后，Flink 会通过 PrometheusPushGatewayReporter 将 metrics push 到 pushgateway 的 9091 端口上，然后使用外部系统 prometheus 从 pushgateway 进行 pull 操作，将指标采集过来，通过 Grafana可视化工具展示出来。原理图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4633304572907679&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjye29Oib2h0fVpEBz930D4I7px0XFKmUtjt5CSp7hETeGxiaBYh1D1iav1jg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1159&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，我们先在 Flink On Yarn 集群中提交一个 Job 任务，让其运行起来，然后执行下面的操作。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1 配置 Reporter&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;下面所有工具、jar 包已经全部下载好，需要的朋友在公众号后台回复：08，可以全部获取到&lt;/strong&gt;。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3036649214659686&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeD9wGViaY4wu5rugHREibTPD4ibvBB8doHZ24KFLqTtVfzTmdrVKqy6tPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;573&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.1.1 导包&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将 flink-metrics-prometheus_2.11-1.13.2.jar 包导入 flink-1.13.2/bin 目录下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.1.2 配置 Reporter&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;选取 PrometheusPushGatewayReporter 方式，通过在官网查询 Flink 1.13.2 Metrics 的配置后，在 flink-conf.yaml 设置，配置如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;metrics.reporter.promgateway&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;: &lt;span&gt;org&lt;/span&gt;.&lt;span&gt;apache&lt;/span&gt;.&lt;span&gt;flink&lt;/span&gt;.&lt;span&gt;metrics&lt;/span&gt;.&lt;span&gt;prometheus&lt;/span&gt;.&lt;span&gt;PrometheusPushGatewayReporter&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;metrics&lt;/span&gt;.&lt;span&gt;reporter&lt;/span&gt;.&lt;span&gt;promgateway&lt;/span&gt;.&lt;span&gt;host&lt;/span&gt;: 192.168.244.129&lt;br/&gt;&lt;span&gt;metrics&lt;/span&gt;.&lt;span&gt;reporter&lt;/span&gt;.&lt;span&gt;promgateway&lt;/span&gt;.&lt;span&gt;port&lt;/span&gt;: 9091&lt;br/&gt;&lt;span&gt;metrics&lt;/span&gt;.&lt;span&gt;reporter&lt;/span&gt;.&lt;span&gt;promgateway&lt;/span&gt;.&lt;span&gt;jobName&lt;/span&gt;: &lt;span&gt;myJob&lt;/span&gt;&lt;br/&gt;&lt;span&gt;metrics&lt;/span&gt;.&lt;span&gt;reporter&lt;/span&gt;.&lt;span&gt;promgateway&lt;/span&gt;.&lt;span&gt;randomJobNameSuffix&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;span&gt;metrics&lt;/span&gt;.&lt;span&gt;reporter&lt;/span&gt;.&lt;span&gt;promgateway&lt;/span&gt;.&lt;span&gt;deleteOnShutdown&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;&lt;span&gt;metrics&lt;/span&gt;.&lt;span&gt;reporter&lt;/span&gt;.&lt;span&gt;promgateway&lt;/span&gt;.&lt;span&gt;groupingKey&lt;/span&gt;: &lt;span&gt;k1&lt;/span&gt;&lt;/span&gt;=v1;k2=v2&lt;br/&gt;metrics.reporter.promgateway.interval: &lt;span&gt;60&lt;/span&gt; SECONDS&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2 部署 pushgateway&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Pushgateway 是一个独立的服务，Pushgateway 位于应用程序发送指标和 Prometheus 服务器之间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Pushgateway 接收指标，然后将其作为目标被 Prometheus 服务器拉取。可以将其看作代理服务，或者与 blackbox exporter 的行为相反，它接收度量，而不是探测它们。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.2.1 解压 pushgateway&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.16709511568123395&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeCVJk9kQGcBYSPQ7iaSaQpspSvPAoJBMjQWY8sxmxMbxZ7PUvHs7TFGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;778&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.2.2. 启动 pushgateway&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进入到 pushgateway-1.4.1 目录下&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;./pushgateway &amp;amp;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看是否在后台启动成功&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;ps aux|grep pushgateway&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.2.3. 登录 pushgateway webui&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3597733711048159&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyePKHsQWLNfRljnLjeLywelIApne9jTqzops8gEUf1vaucCV8e7R847A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1059&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3 部署 prometheus&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Prometheus（普罗米修斯）是一个最初在 SoundCloud 上构建的监控系统。自 2012 年成为社区开源项目，拥有非常活跃的开发人员和用户社区。为强调开源及独立维护，Prometheus 于 2016 年加入云原生云计算基金会（CNCF），成为继Kubernetes 之后的第二个托管项目。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.3.1 解压prometheus-2.30.0&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.1437403400309119&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeuc68S6cxHDgDpFoLSKsgR2h79pPXZ0RKia0EhmK9tcquQjuowWeicfcA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;647&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.3.2 编写配置文件&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;scrape_configs:&lt;br/&gt;  - job_name: &lt;span&gt;&#x27;prometheus&#x27;&lt;/span&gt;&lt;br/&gt;    static_configs:&lt;br/&gt;      - targets: [&lt;span&gt;&#x27;192.168.244.129:9090&#x27;&lt;/span&gt;]&lt;br/&gt;        labels:&lt;br/&gt;          instance: &lt;span&gt;&#x27;prometheus&#x27;&lt;/span&gt;&lt;br/&gt;  - job_name: &lt;span&gt;&#x27;linux&#x27;&lt;/span&gt;&lt;br/&gt;    static_configs:&lt;br/&gt;      - targets: [&lt;span&gt;&#x27;192.168.244.129:9100&#x27;&lt;/span&gt;]&lt;br/&gt;        labels:&lt;br/&gt;          instance: &lt;span&gt;&#x27;localhost&#x27;&lt;/span&gt;&lt;br/&gt;  - job_name: &lt;span&gt;&#x27;pushgateway&#x27;&lt;/span&gt;&lt;br/&gt;    static_configs:&lt;br/&gt;      - targets: [&lt;span&gt;&#x27;192.168.244.129:9091&#x27;&lt;/span&gt;]&lt;br/&gt;        labels:&lt;br/&gt;          instance: &lt;span&gt;&#x27;pushgateway&#x27;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.3.3 启动prometheus&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;./prometheus --config.file=prometheus.yml &amp;amp;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;启动完后，可以通过 ps 查看一下端口&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;ps aux|grep prometheus&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.3.4 登录prometheus webui&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.584014532243415&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeLvL39wDAOOB0s2JKVpceSkibu0cfd1Bes7R6whpHGtQRvQicICtb4x9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1101&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.4 部署 grafana&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Grafana 是一个跨平台的开源的度量分析和可视化工具，可以通过将采集的数据查询然后可视化的展示，并及时通知。它主要有以下六大特点：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、展示方式：快速灵活的客户端图表，面板插件有许多不同方式的可视化指标和日志，官方库中具有丰富的仪表盘插件，比如热图、折线图、图表等多种展示方式；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、数据源：Graphite，InfluxDB，OpenTSDB，Prometheus，Elasticsearch，CloudWatch 和 KairosDB 等；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、通知提醒：以可视方式定义最重要指标的警报规则，Grafana将不断计算并发送通知，在数据达到阈值时通过 Slack、PagerDuty 等获得通知；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4、混合展示：在同一图表中混合使用不同的数据源，可以基于每个查询指定数据源，甚至自定义数据源；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5、注释：使用来自不同数据源的丰富事件注释图表，将鼠标悬停在事件上会显示完整的事件元数据和标记；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;6、过滤器：Ad-hoc 过滤器允许动态创建新的键/值过滤器，这些过滤器会自动应用于使用该数据源的所有查询。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.4.1 解压grafana-8.1.5&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3347236704900938&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjye2wFu3E27DgoYKF6g4UbmekPRIUkc3JKX1FVkibjJ3g9flUBaQVWMhIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;959&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.4.2 启动grafana-8.1.5&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;./bin/grafana-server web &amp;amp;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.4.3 登录 grafana&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;登录用户名和密码都是 admin&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7164634146341463&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyelOfoLvQ3QjGcJwkQLjhoj5Pa3fBpSdeDsH0IB5ucMoUnxIcVQ62Jpw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;984&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;grafana 配置中文教程&lt;/strong&gt;：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://grafana.com/docs/grafana/latest/datasources/prometheus/&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.4.4 配置数据源、创建系统负载监控&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要访问 Prometheus 设置，请将鼠标悬停在配置（齿轮）图标上，然后单击数据源，然后单击 Prometheus 数据源，根据下图进行操作。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6269565217391304&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyemyhGcsKanTMXSuwWhldJicu85wWhYT5XlQ2pBhibroDXSUUGk9n3dRQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1150&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;操作完成后，点击进行验证。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5278969957081545&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeZwibNLQyiaQYsWt29byJvicE62HgvwaSF1wrwzk995yfH99kUVfXAQqQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;699&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2.4.5 添加仪表盘&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;点击最左侧 + 号，选择 DashBoard,选择新建一个 pannel&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4434876210979548&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyevELb0k0QAR8sxUsg2GqKILwCJXSC0N0icqu3tpabIcQc5aPPVhOCgGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;929&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.40320962888665995&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeAw0gTErDBtmXFyibC6G7MLcHibaqDtH0lhYATnxloAnryMugKL2bcg4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;997&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至此，Flink 的 metrics 的指标展示在 Grafana 中了&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;flink 指标对应的指标名比较长，可以在 Legend 中配置显示内容，在{{key}} 将 key 换成对应需要展示的字段即可，如：{{job_name}},{{operator_name}}&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3 指标性能测试&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上述监控系统搭建好了之后，我们可以进行性能指标监控了。现在以一个实战案例进行介绍：&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.1 业务场景介绍&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;金融风控场景&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.1.1 业务需求&lt;/strong&gt;:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Flink Source 从 data kafka topic 中读取推理数据，通过 sql 预处理成模型推理要求的数据格式，在进行 keyBy 分组后流入下游 connect 算子，与模型 connect 后进入 Co-FlatMap 算子再进行推理，原理图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3248407643312102&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjye1NFk2K6kMIhsIcZjgekicKHbZDbWj9I10QvjrK8UaicRjDOOiajFQ6MFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;785&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.1.2 业务要求&lt;/strong&gt;：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据模型的复杂程度，要求推理时延到达 20ms 以内，全链路耗时 50ms 以内，
吞吐量达到每秒 1.2w 条以上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.1.3 业务数据&lt;/strong&gt;：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;推理数据：3000w，推理字段 495 个，机器学习 Xgboost 模型字段：495，&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.2 指标解析&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于性能测试要求全链路耗时 50ms 以内，应该使用 Flink Metrics 的 Latency Marker 进行计算&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.2.1 全链路时延计算方式&lt;/strong&gt; &lt;strong&gt;：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;全链路时延指的是&lt;code&gt;一条推理数据&lt;/code&gt;进入 source 算子到数据预处理算子直到最后一个算子输出结果的耗时，即处理一条数据需要多长时间，&lt;strong&gt;包含算子内处理逻辑时间，算子间数据传递时间，缓冲区内等待时间&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;全链路时延要使用 latency metric 计算。latency metric 是由 source 算子根据当前本地时间生成的一个 marker ，并不参与各个算子的逻辑计算，仅仅跟着数据往下游算子流动，每到达一个算子则算出当前本地时间戳并与 source 生成的时间戳相减，得到 source 算子到当前算子的耗时，当到达 sink 算子或者说最后一个算子时，算出当前本地时间戳与 source 算子生成的时间戳相减，即得到全链路时延。原理图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4911092294665538&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyegJzSPG3jfejG2e9gm5mTDiaY3Wic0kia7N9u6Y8P2kf3EWPAOCxzWe6Aw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1181&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于使用到 Lateny marker,所有需要在 flink-conf.yaml 配置参数&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;latency.metrics.interval&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;系统配置截图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2008686210640608&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeWGVfrpFW3m5EerRSUsPiaAXbwicWeKtojB1qnQU5fsibaTGD9Xribq9OAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;921&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.2.2 全链路吞吐计算方式&lt;/strong&gt; &lt;strong&gt;：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;全链路吞吐 = 单位时间处理数据数量 / 单位时间&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.3 提交任务到Flink on Yarn集群&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;**3.3.1 直接提交 Job **&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;# -m jobmanager 的地址&lt;br/&gt;# -yjm &lt;span&gt;1024&lt;/span&gt; 指定 jobmanager 的内存信息&lt;br/&gt;# -ytm &lt;span&gt;1024&lt;/span&gt; 指定 taskmanager 的内存信息&lt;br/&gt;bin/flink run \&lt;br/&gt;-t yarn-per-job -yjm &lt;span&gt;4096&lt;/span&gt; -ytm  &lt;span&gt;8800&lt;/span&gt; -s &lt;span&gt;96&lt;/span&gt;  \&lt;br/&gt;--detached  -c com.threeknowbigdata.datastream.XgboostModelPrediction \&lt;br/&gt;examples/batch/WordCount.jar  \&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;提交完成后，我们通过 Flink WEBUI 可以看到 job 运行的任务结果如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3159025787965616&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeKgzNw7fGMzZCOOXtWo1D4zDia11hcvyFEpfappQYU7oXdrGre7TcHeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1396&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为推理模型只是一个 model，存在状态中，所以&lt;code&gt;全链路吞吐&lt;/code&gt;考虑的是每秒&lt;code&gt;有多少条推理数据进入 source 算子到倒数第二个算子&lt;/code&gt;（最后一个算子只是指标汇总）流出，这个条数就是全链路吞吐。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到在处理 2000W 条数据时，代码直接统计输出的数值和 flink webUI 的统计数值基本一致，所以统计数值是可信的&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.33250927070457353&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeqibdM8QG4GbBrdic1xbsvmFhEcWObxF083V2ru6KZ7rKMr3JiajMmeGbQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;809&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Flink WEBUI 跑的结果数据&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.20616113744075829&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyedQ0tRrvzapzNNgv3ricR4FOnouO6r6YP7snloJHPJIf9wumKffwysYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1266&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;打开 Prometheus 在对话框输入全链路时延计算公式&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;计算公式：&lt;br/&gt;avg(flink_taskmanager_job_latency_source_id_&lt;br/&gt;operator_id _operator_subtask_index_latency{&lt;br/&gt;source_id=&lt;span&gt;&quot;cbc357ccb763df2852fee8c4fc7d55f2&quot;&lt;/span&gt;,&lt;br/&gt;operator_id=&lt;span&gt;&quot;c9c0ca46716e76f6b700eddf4366d243&quot;&lt;/span&gt;,quantile=&lt;span&gt;&quot;0.999&quot;&lt;/span&gt;})&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4646892655367232&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeJzMY7Z07VVhnArVSTfrKnHQ8h9X9qzibicic9Jl8lOzdsQiaJs4DiasPhQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;708&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.4 优化前性能分析&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在将任务提交到集群后，经过全链路时延计算公式、吞吐时延计算公式，最后得到优化前的结果
时延指标统计图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6910755148741419&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjye7HcCuhfh4c4wzHZznxITO1qlMOb3lFJA2lTVkvMBG5ibew37VibA1aCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;437&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;吞吐指标统计图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6373626373626373&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeZCEBN3uz09CsFUIu1yCWzJdZfjH7sFibvP80DDGmexPIMcHq6qEnKQA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;455&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过本次测试完后，从图中可以发现：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;时延指标：加并行度，吞吐量也跟随高，但是全链路时延大幅增长（ 1并行至32并行，时延从 110ms 增加至 3287ms ）&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这远远没有达到要求的结果。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.5 问题分析&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过 Prometheus分析后，结果如下&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.24510514865844815&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeNyz4wlTRaYdnibNHVAsm6FOuibdJcmWjicCe4YxM2D57naT4yHgswicDcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1379&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.5.1 并行度问题&lt;/strong&gt; &lt;strong&gt;：&lt;/strong&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;反压现象：在 Flink WEB-UI 上，可以看到应用存在着&lt;strong&gt;非常严重的反压&lt;/strong&gt;，这说明链路中存在较为耗时的算子，阻塞了整个链路；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据处理慢于拉取数据：数据源&lt;strong&gt;消费&lt;/strong&gt;数据的速度，&lt;strong&gt;大于下游&lt;/strong&gt;数据处理速度；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;增加计算并行度：所以在接下来的测试中会&lt;strong&gt;调大推理算子并行度&lt;/strong&gt;，相当于提高下游数据处理能力；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.5.2 Buffer 超时问题&lt;/strong&gt; &lt;strong&gt;：&lt;/strong&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Flink 虽是纯流式框架，但&lt;strong&gt;默认开启了缓存机制&lt;/strong&gt;（上游累积部分数据再发送到下游）；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;缓存机制可以提高应用的吞吐量，但是也&lt;strong&gt;增大了时延&lt;/strong&gt;；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;推理场景：为获取最好的时延指标，第二轮测试&lt;strong&gt;超时时间置 0&lt;/strong&gt;，记录吞吐量；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.5.3 Buffer 数量问题&lt;/strong&gt; &lt;strong&gt;：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同上，Flink 中的 Buffer 数量是可以配置的；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Buffer 数量越多，能&lt;strong&gt;缓存的数据&lt;/strong&gt;也就&lt;strong&gt;越多&lt;/strong&gt;；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;推理场景：为获取最好的时延指标，第二轮测试：&lt;strong&gt;减小 Flink 的 Buffer&lt;/strong&gt; 数量来优化时延指标；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.5.4 调优参数配置&lt;/strong&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;SOURCE 与 COFLATMAP 的并行度按照 1:12 配置；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Buffer 超时时间配置为 0ms (默认100ms)；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;//在代码中设置&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;senv.setBufferTimeout(&lt;span&gt;0&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Buffer 数量的配置如下：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;修改flink-conf.yaml&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;memory.buffers-per-channel: 2&lt;br/&gt;memory.float-buffers-per-gate: 2&lt;br/&gt;memory.max-buffers-per-channel: 2&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置截图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3120494335736354&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeQ60JXmuqcWXO5CG8by4zibiatF3YyTGHCuRWCo3MPZUHbDiarmJUmia9eg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;971&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.6 优化后性能分析&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过修改配置后，将任务再次提交到集群后，经过全链路时延计算公式、吞吐时延计算公式，最后得到优化后的结果&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;时延指标统计图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6838565022421524&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyegGKteDtfHVoOE7gYK3ic4bL7H20HxSkOjUvN17NrMibIHv7rKIhCicibibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;446&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;吞吐指标统计图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5964912280701754&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeXH3VG9UiatrDzDu0MlibR98vt2S948j3MLv4wpaZYReYWicIRoJ3wdviag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;456&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;优化后 LGB 推理测试总结&lt;/strong&gt; &lt;strong&gt;：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;时延指标：并行度提升，时延也会增加，但幅度很小（可接受）。实际上，在测试过程中存在一定反压，若调大 SOURCE 与 COFLATMAP 的并行度比例，全链路时延可进一步降低；吞吐量指标：随着并行度的增加，吞吐量也随着提高，当并行度提高至 96 时，吞吐量可以达到 1.3W，此时的时延维持在 50ms 左右（比较稳定）；&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.7 优化前后 LGB 分析总结&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图所示：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.4034229828850855&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rLGOIHABwEp2OBssvWiahDO445Y33hjyeTiaiarQsNS1AZl6ElfhWTL4E7ia9ic31icpCQDSod19TnJyjmHUfl9uOp0A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;409&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.7.1吞吐量---影响因素&lt;/strong&gt;：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;内存：对吞吐和时延没什么影响&lt;/strong&gt;， &lt;strong&gt;并行度与吞吐成正相关&lt;/strong&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;增大 kafka 分区,吞吐增加&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;增大 source、维表 source 并行度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;增大 flatmap 推理并行度&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3.7.2全链路时延---影响因素&lt;/strong&gt;：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Buffer 超时越短、个数越少、时延越低&lt;/strong&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;整个链路是否有算子&lt;strong&gt;堵塞&lt;/strong&gt;(车道排队模型)。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;调大推理算子并行度，时延降低，吞吐升高(即增加了推理的处理能力)。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>44c7954be976c9f1fd15693da309f0bd</guid>
<title>一起学 containerd（四）：聊聊 overlayfs</title>
<link>https://toutiao.io/k/y3lnlhn</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;article-content content-container&quot; id=&quot;gallery-content&quot;&gt;

            &lt;p id=&quot;original&quot;&gt;​                                        

  在我们学习docker时，会经常看到到docker依赖linux的cgroups实现资源限制，使用namespace实现资源隔离。使用overlyfs实现容器rootfs。本文就聊聊containerd是如何使用ovlerlayfs的？

   





#### overlayfs到底是什么？

​     overlayfs是内核支持的文件系统，具体可参考[overlayfs in kernel](https://www.kernel.org/doc/html/latest/filesystems/overlayfs.html?highlight=overlayfs)文档中的解释。overlaylfs是文件系统之上的文件系统。可以称之为上层文件系统。了解虚拟化的同学应该了解underly网络和overlay网络。所谓overlay网络也就是在物理网络基础上虚一个网络平面出来。Overlayfs 既然是上层文件系统，他就不需要直接和磁盘等存储系统进行交互，他就直接和其他文件系统交互就行了。

![容器如何工作：OverlayFS](http://testdddddddddd.oss-ap-northeast-1.aliyuncs.com/uPic/v2-cfaaa3e20954ac0206b2a0db8ebb1aa3_1440w-20210930142025880.jpg)

​                                                                                     大师的图

   上面五幅图详细的解释了overlayfs，从上图我们可以得出：

-    overlayfs出现的原因：     

​       通过把image拆分程多个层，每个层都是只读的。那么容器就可以共享这些层。可以节约大量的磁盘空间。

-   如何使用overlay

​            Mount -t overlay overlay -o lowerdir=/low1,low2,low3,upperdir=/upper,workdir=/work

​            命令把多个目录整合成一个目录。用户添加和更新、删除的文本都存放在upper目录中。而lowder是只读的。workdir则是把upper目录和lowerer目录合，这个合并规则就是overlayfs要实现的逻辑。新增文件写入uppder目录。Workerdir删除文件需要记录一个标记.Low1 、low2 、low3、upper优先级逐步提高，如果存在同名同目录文件，以优先级高的为本。修改low目录中文件，则需要拷贝一份low目录文件到upper层。然后修改。此处会导致第一次拷贝慢。

   当前的你的linux系统需要支持overlay文件系统。

#### containerd中的overlayfs 原理



![containerd-overlay](http://testdddddddddd.oss-ap-northeast-1.aliyuncs.com/uPic/containerd-overlay.png)

​                                                                                   图 overlayfs in containerd



  1)在containerd中，用户pull拉镜像时，会返回多个层，这些层都是压缩文件。containerd会把这些压缩文件解压然后存到/var/lib/containerd/io.containerd.snapshooter.v1.overlay中。镜像对应的层文件夹都是只读的。

 2)容器启动时，在/var/lib/containerd/io.containerd.snapshooter.v1.overlay创建一个读写目录，也就是所谓的upper层。

  启动启动时，会通过上文的mount -t overlay命令行创建一个 overlay文件系统。这样用户在容器的更新的文件都存在upper层了。

#### containerd中的overlayfs 实战

##### 1）拉取redis镜像

1. ​       一个镜像由index、manifest、config、多个layer组成。

```bash
[root@172-0-0-4 ~]# ctr image pull docker.io/library/redis:latest
docker.io/library/redis:latest:                                                   resolved       |++++++++++++++++++++++++++++++++++++++| 
index-sha256:a3cee5859456c894a20e7f59ba866ecd81c91e733c14a755ea6530ec17c511cd:    done           |++++++++++++++++++++++++++++++++++++++| 
manifest-sha256:92d5b6fce85ac04f1df2ad2de4f09fda0ba94e1dce2a6c12c7d92353b6eeda84: done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:fd69789c2b0655c40d5978981eccdde60a3f6ef6e2f609e7c676b147f6ac176a:    done           |++++++++++++++++++++++++++++++++++++++| 
config-sha256:5d89766432d0b0b2ddc60fa3806812d64d7ffa6eb1166c85e3609639bfcfd83f:   done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:07aded7c29c6011dfdf02fc98e087c941d3c2661c4e73d134c6491e25231d16c:    done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:1a5d64c027a48426fe5f3b8014a49be40bfe0757f4fd5f2ee38466cc5628f073:    done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:189d728109508968adc06b7d83faa5e499289f911d4ad186f6c2ff49ec4c9fd8:    done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:b85aac102f7d0ffb39661ae5090cdf65db5a466e24ad9ad44eee24abf00f0ba4:    done           |++++++++++++++++++++++++++++++++++++++| 
layer-sha256:fe1bca69301e4f39a9dc2563d1b6f14cd207c645c65caf2dcd3919bd4e66637f:    done           |++++++++++++++++++++++++++++++++++++++| 
elapsed: 30.4s                                                                    total:  36.9 M (1.2 MiB/s)                                       
unpacking linux/amd64 sha256:a3cee5859456c894a20e7f59ba866ecd81c91e733c14a755ea6530ec17c511cd...
```

2. 这些文件存储在那里呢？

   我们知道containerd的存储的静态数据存储在/var/lib/containerd/中。而运行时数据存储在/var/run/containerd。image对应的数据当前存储在/var/lib/containerd中，我们去/var/lib/containerd中找找看啊。可以看到。

   - pull镜像时，镜像对应的config、index、layer、manifest都存储在io.containerd.content.v1.content/blob/sha256中。使用file 这个命令可以看下他们的格式。然后根据格式查看这些文件的内容。其实layer是gzip压缩文件。其他是json.
   - io.containerd.snapshotter.v1.overlayfs中对应的是layer解压后的文件夹。我们看到这些文件夹以1、2、3等命名。它们和层的对应的关系是啥呢？还有这些层之间存在着父子依赖关系，因为每一层的构建都是基于上一层。层与层存在父子关系。这种关系存储在哪里呢？
   - 这些文件夹其实就是overlayfs中的lower目录

   

   ```
   [root@172-0-0-4 containerd]# tree -L 4
   .
   ├── io.containerd.content.v1.content
   │   ├── blobs
   │   │   └── sha256
   │   │       ├── 07aded7c29c6011dfdf02fc98e087c941d3c2661c4e73d134c6491e25231d16c
   │   │       ├── 189d728109508968adc06b7d83faa5e499289f911d4ad186f6c2ff49ec4c9fd8
   │   │       ├── 1a5d64c027a48426fe5f3b8014a49be40bfe0757f4fd5f2ee38466cc5628f073
   │   │       ├── 5d89766432d0b0b2ddc60fa3806812d64d7ffa6eb1166c85e3609639bfcfd83f
   │   │       ├── 92d5b6fce85ac04f1df2ad2de4f09fda0ba94e1dce2a6c12c7d92353b6eeda84
   │   │       ├── a3cee5859456c894a20e7f59ba866ecd81c91e733c14a755ea6530ec17c511cd
   │   │       ├── b85aac102f7d0ffb39661ae5090cdf65db5a466e24ad9ad44eee24abf00f0ba4
   │   │       ├── fd69789c2b0655c40d5978981eccdde60a3f6ef6e2f609e7c676b147f6ac176a
   │   │       └── fe1bca69301e4f39a9dc2563d1b6f14cd207c645c65caf2dcd3919bd4e66637f
   │   └── ingest
   ├── io.containerd.metadata.v1.bolt
   │   └── meta.db
   ├── io.containerd.runtime.v1.linux
   ├── io.containerd.runtime.v2.task
   ├── io.containerd.snapshotter.v1.btrfs
   ├── io.containerd.snapshotter.v1.native
   │   └── snapshots
   ├── io.containerd.snapshotter.v1.overlayfs
   │   ├── metadata.db
   │   └── snapshots
   │       ├── 1
   │       │   ├── fs
   │       │   └── work
   │       ├── 2
   │       │   ├── fs
   │       │   └── work
   │       ├── 3
   │       │   ├── fs
   │       │   └── work
   │       ├── 4
   │       │   ├── fs
   │       │   └── work
   │       ├── 5
   │       │   ├── fs
   │       │   └── work
   │       └── 6
   │           ├── fs
   │           └── work
   └── tmpmounts
   
   ```

![Screen Shot 2021-09-30 at 1.38.22 PM](http://testdddddddddd.oss-ap-northeast-1.aliyuncs.com/uPic/Screen%20Shot%202021-09-30%20at%201.38.22%20PM.png)

##### 2）启动redis镜像

​        启动一个容器后：在io.containerd.runtime.v2.task中新增了一个目录。这个目录其实就是overlayfs 中merge目录。而在overlayfs中新增了14的目录，这个目录其实对应的容器创建的overlayfs中的upper目录。写的文件都在这个文件夹下。

&amp;lt;img src=&quot;http://testdddddddddd.oss-ap-northeast-1.aliyuncs.com/uPic/Screen%20Shot%202021-09-30%20at%201.50.20%20PM.png&quot; alt=&quot;Screen Shot 2021-09-30 at 1.50.20 PM&quot; style=&quot;zoom:50%;&quot; /&amp;gt;

##### 3）验证overlayfs文件系统挂载

最后我们通过mount 查看一下 overlayfs的挂载情况,很显然，和理论对应起来了。

```bash
[root@172-0-0-4 containerd]# mount |grep overlayfs
overlay on /run/containerd/io.containerd.runtime.v2.task/default/98f89f4d8313c8f4b1e05436876e65f74f9a632531f74ea523770c44210da7ed/rootfs type overlay (rw,relatime,seclabel,lowerdir=/var/lib/containerd/io.containerd.snapshotter.v1.**overlayfs**/snapshots/6/fs:/var/lib/containerd/io.containerd.snapshotter.v1.**overlayfs**/snapshots/5/fs:/var/lib/containerd/io.containerd.snapshotter.v1.**overlayfs**/snapshots/4/fs:/var/lib/containerd/io.containerd.snapshotter.v1.**overlayfs**/snapshots/3/fs:/var/lib/containerd/io.containerd.snapshotter.v1.**overlayfs**/snapshots/2/fs:/var/lib/containerd/io.containerd.snapshotter.v1.**overlayfs**/snapshots/1/fs,upperdir=/var/lib/containerd/io.containerd.snapshotter.v1.**overlayfs**/snapshots/14/fs,workdir=/var/lib/containerd/io.containerd.snapshotter.v1.**overlayfs**/snapshots/14/work)


```



具体如何实现的呢？且听下回分解

参考文档

[1]https://cloud.tencent.com/developer/article/1684523&quot;overlayfs介绍&quot;
[2]: https://blog.frognew.com/2021/06/relearning-container-09.html&quot; docker overlayfs&quot;
[3]: https://zhuanlan.zhihu.com/p/183238194&quot; linux文件系统深入讲解&quot;
[4]: https://www.jianshu.com/p/731aa34fc8da&quot;docker文件系统&quot;





### &lt;/p&gt;
            &lt;p class=&quot;container mx-auto px-4 md-content mt-8 max-w-6xl tracking-wider md:leading-relaxed sm:leading-normal cn-pd ct-container loading&quot; id=&quot;write&quot;&gt;
            &lt;/p&gt;
            &lt;p id=&quot;tocFlag&quot;/&gt;
                &lt;aside id=&quot;toc&quot; class=&quot;toc&quot;/&gt;
        &lt;/div&gt;

        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>