<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>439d191b0f2b207cf79e985d5458f4ce</guid>
<title>什么是真正的程序员？| 码农周刊第 323 期</title>
<link>https://toutiao.io/k/v08ikpz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;什么是真正的程序员？| 码农周刊第 323 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第323期（2020-10-28）&lt;/h2&gt;
        &lt;p&gt;☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=323&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3230&quot; target=&quot;_blank&quot;&gt;薪资翻番如何实现？程序员的涨薪秘诀&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;a href=&quot;https://weekly.manong.io/bounce?nid=323&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3230&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_321.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=323&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;业界实战&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;工作地点：成都 | 薪资：15-30K | 简历投递邮箱：xiexiaofang@huobi.com&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;适合入门&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;该框架由阿里云机器学习 PAI 团队研发，让自然语言处理场景的模型预训练和迁移学习开发与部署更加简单和高效。&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;硬核&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;论文笔记&lt;/p&gt;
        
        &lt;p&gt;系列文章&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;因子分解机算法&lt;/p&gt;
        
        &lt;p&gt;深入讲解&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;Yahoo 开源的 Kafka 集群管理平台&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;更多可能&lt;/p&gt;
        
        &lt;p&gt;实战经验&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;源码分析&lt;/p&gt;
        
        &lt;p&gt;一个 Android Jetpack 扩展库&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;一步步教你&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;倾向于使用 Less 或 Stylus&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;这里有最接地气的架构师一线实战经验、核心技能的分享。运营和产品的总结。以及一些个人的深度思考。&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 268968 即可&lt;/p&gt;
        
        &lt;p&gt;GO PHP JS 一网打尽&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 146415 即可&lt;/p&gt;
        
        &lt;p&gt;分享技术，专注程序员成长&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 137785 即可&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;Coding虽易，debug不易....&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 98777 即可&lt;/p&gt;
        
        &lt;p&gt;专注分享Java实战技术、Java基础原理、微服务实战技术、分布式系统架构&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 22887 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;本书为对基本概率论感兴趣的读者以及之前未接触过此方向的人提供了一个坚实的基础。通过对话的方式和详细的数学推导，在迷人的风格和信息丰富的讨论上取得了平衡。欢迎到&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;兑换阅读。&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;真实&lt;/p&gt;
        
        &lt;p&gt;值得思考&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>82f2cb1ca9eadc85ddf2773073692552</guid>
<title>DevOps 视角的前后端分离与实战</title>
<link>https://toutiao.io/k/k4sds4w</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;腾云 CODING&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;coding_net&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;CODING 提供给企业用户全套 DevOps 研发管理工具，包括项目管理，代码托管，持续集成，制品管理等功能，有效提高软件研发团队的代码质量和交付速度。&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>20ba9668dfac1d9eacc67105cb49addf</guid>
<title>我对云原生软件架构的观察与思考</title>
<link>https://toutiao.io/k/pw9ted3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>046175068ffef38fbfd0f7dd84e3520d</guid>
<title>gRPC 初探与简单使用</title>
<link>https://toutiao.io/k/sekzpby</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.0374331550802138&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/gf7zJ2NXUibEatLJbcDLrEklG7PpIJibibEZ243hQfTYAOnUKKO8WJGtNK0FtNOyibfohow3qklfpW5e7l6y8hXefA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;748&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;01&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;概念&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在 gRPC 中，客户端应用程序可以直接在另一台计算机上的服务器应用程序上调用方法，就好像它是本地对象一样，从而使您更轻松地创建分布式应用程序和服务。与许多 RPC 系统一样，gRPC 围绕定义服务的思想，指定可通过其参数和返回类型远程调用的方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;gRPC 可以将 protocol buffers 用作其接口定义语言（IDL）和其基础消息交换格式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;nginx&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;service HelloService {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  rpc SayHello (HelloRequest) returns (HelloResponse);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;message HelloRequest {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  string greeting = 1;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;message HelloResponse {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  string reply = 1;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;02&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;gRPC 架构&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在服务器端，服务器实现此接口并运行 gRPC 服务器以处理客户端调用。在客户端，客户端具有一个存根（在某些语言中仅称为客户端），提供与服务器相同的方法。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4203125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/gf7zJ2NXUibFTaTlpc0v4MiaG523h6CrVg4JLOJQf7yj1SEhLSyiakmdTPphXhpH1y9FPIpic5z7AlYYTvliaGDN9Hg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;从 Google 内部的服务器到您自己的计算机，gRPC 客户端和服务器都可以在各种环境中运行并相互通信，并且可以使用 gRPC 支持的任何语言编写。因此，例如，您可以使用 Go，Python 或 Ruby 的客户端轻松地用 Java 创建gRPC 服务器。此外，最新的 Google API 的接口将具有 gRPC 版本，可让您轻松地在应用程序中内置 Google 功能。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;关于 protocol buffers，可以阅读⎡&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4Mjc1NTMyOQ==&amp;amp;mid=2247483968&amp;amp;idx=1&amp;amp;sn=e899a0efca008b6d490b01fe203feb89&amp;amp;chksm=9f81a82ea8f621382190cbee9dc49260290a176bf3a6275c5b78824adb59ae40915c6ad2f63d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Protobuf - 更小、更快、更简单的交互式数据语言&lt;/a&gt;⎦，此处不再赘述。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;gRPC 可以定义四种服务方法：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1. 一元 RPC，客户端向服务器发送单个请求并获得单个响应，就像普通函数调用一样。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;rpc SayHello(HelloRequest) returns (HelloResponse);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;2. 服务器流式 RPC，客户端在其中向服务器发送请求，并获取流以读取回一系列消息。客户端从返回的流中读取，直到没有更多消息为止。gRPC 保证单个 RPC 调用中的消息顺序。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;rpc LotsOfReplies(HelloRequest) returns (stream HelloResponse);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;3. 客户端流式RPC，客户端在其中编写一系列消息，然后再次使用提供的流将它们发送到服务器。客户端写完消息后，它将等待服务器读取消息并返回响应。gRPC再次保证了在单个RPC调用中的消息顺序。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;rpc LotsOfGreetings(stream HelloRequest) returns (HelloResponse);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;4. 双向流式RPC，双方都使用读写流发送一系列消息。这两个流是独立运行的，因此客户端和服务器可以按照自己喜欢的顺序进行读写：例如，服务器可以在写响应之前等待接收所有客户端消息，或者可以先读取消息再写入消息，或其他一些读写组合。每个流中的消息顺序都会保留。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;rpc BidiHello(stream HelloRequest) returns (stream HelloResponse);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;使用API&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;从 .proto 文件中的服务定义开始，gRPC 提供了protocol buffers 编译器插件，这些插件可生成客户端和服务器端代码。gRPC 用户通常在客户端调用这些 API，并在服务器端实现相应的 API。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;在服务器端，服务器实现服务声明的方法，并运行 gRPC 服务器来处理客户端调用。gRPC 基础结构解码传入的请求，执行服务方法，并对服务响应进行编码。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在客户端，客户端具有一个称为 stub 的本地对象（对于某些语言，首选术语是 client），该对象实现与服务相同的方法。然后，客户端可以只在本地对象上调用这些方法，将调用的参数包装在适当的 protocol buffers消息类型中- gRPC 再将请求发送到服务器并返回服务器的 protocol buffers 响应之后进行查找。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;同步与异步&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;阻塞的同步 RPC 调用直到从服务器收到响应为止是最接近 RPC 所追求的过程调用抽象的近似方法。另一方面，网络本质上是异步的，因此在许多情况下能够启动 RPC 而不阻塞当前线程很有用。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;03&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;RPC 生命周期&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;一元 RPC &lt;/span&gt;&lt;/strong&gt;- &lt;span&gt;最简单的 RPC 类型，其中客户端发送单个请求并返回单个响应。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;客户端调用存根方法后，会通知服务器已使用该调用的客户端元数据，方法名称和指定的期限（如果适用）来调用 RPC。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;然后，服务器可以立即发送自己的初始元数据（必须在发送任何响应之前发送），或者等待客户端的请求消息。首先发生的是特定于应用程序的。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务器收到客户的请求消息后，它将完成创建和填充响应所必需的一切工作。然后将响应（如果成功）连同状态详细信息（状态代码和可选状态消息）以及可选尾随元数据一起返回（如果成功）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果响应状态为 OK，则客户端将获得响应，从而在客户端完成呼叫。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;服务器流式 RPC&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;服务器流式 RPC 与一元 RPC 相似，不同之处在于服务器响应客户端的请求返回消息流。发送所有消息后，服务器的状态详细信息（状态代码和可选状态消息）和可选尾随元数据将发送到客户端。这样就完成了服务器端的处理。客户端收到所有服务器的消息后即完成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;客户端流式 RPC&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;客户端流式 RPC 与一元 RPC 相似，不同之处在于客户端将消息流发送到服务器而不是单个消息。服务器以一条消息（以及其状态详细信息和可选的尾随元数据）作为响应，通常（但不一定）是在它收到所有客户端的消息之后。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;双向流式RPC&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在双向流式 RPC 中，调用由客户端调用方法启动，服务器接收客户端元数据，方法名称和期限。服务器可以选择发回其初始元数据，也可以等待客户端开始流式传输消息。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;客户端和服务器端流处理是特定于应用程序的。由于两个流是独立的，因此客户端和服务器可以按任何顺序读取和写入消息。例如，服务器可以等到收到客户端的所有消息后再写消息，或者服务器和客户端可以打“ping-pong” – 服务器收到请求，然后发回响应，然后客户端发送基于响应的另一个请求，依此类推。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;截止时间 / 超时&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;gRPC 允许客户端指定在 RPC 因 DEADLINE_EXCEEDED 错误终止之前，他们愿意等待 RPC 完成多长时间。在服务器端，服务器可以查询以查看特定的RPC 是否超时，或者还剩下多少时间来完成 RPC。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;指定期限或超时是特定于语言的：某些语言 API 按照超时（时间长度）工作，而某些语言 API 按照期限（固定时间点）工作，并且可能有也可能没有默认期限。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;RPC 终止&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在 gRPC 中，客户端和服务器均对呼叫成功进行独立和本地确定，其结论可能不匹配。这意味着，例如，您可能拥有一个在服务器端成功完成 RPC 的RPC（“我已经发送了所有响应！”），但是在客户端却失败了（“响应在我的截止日期之后到达！”）。服务器也有可能在客户端发送所有请求之前决定完成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;取消 RPC&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;客户端或服务器都可以随时取消 RPC。取消操作会立即终止 RPC，因此不再进行任何工作。并且取消之前所做的更改不会回滚。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;元数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;元数据是以键值对列表的形式提供的有关特定 RPC 调用的信息（例如身份验证详细信息），其中键是字符串，值通常是字符串，但可以是二进制数据。元数据对于 gRPC 本身是不透明的-它允许客户端向服务器提供与调用相关的信息，反之亦然。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对元数据的访问取决于语言。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;通道&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;gRPC 通道提供到指定主机和端口上的 gRPC 服务器的连接。创建客户端存根时使用。客户可以指定通道参数来修改 gRPC 的默认行为，例如打开或关闭消息压缩。通道具有状态，包括已连接和空闲。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;gRPC 如何处理关闭通道取决于语言。某些语言还允许查询通道状态。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;04&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Golang 语言中的 gPRC&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;准备工作&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;简单示例&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;RPC 应用的开发流程：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;编写.proto文件。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用 protoc 编译.proto文件，生成.go文件。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;编写服务器端代码。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;编写客户端代码。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;示例代码：&lt;/p&gt;&lt;p&gt;限于篇幅，示例代码可以点击「阅读原文」链接，访问 Github 阅读示例代码中只包含一元 RPC 和双向流 RPC。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.5405405405405406&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/gf7zJ2NXUibHrBBNc13c09hsck0LRuBWagGRXUlOPE7Nto7kj7M5peJTpdZlgatE5HwOkQibCPDOjUC0FfcboIbA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;370&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;参考资料：&lt;/p&gt;&lt;p&gt;https://grpc.io/docs/&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;推荐阅读：&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4Mjc1NTMyOQ==&amp;amp;mid=2247483968&amp;amp;idx=1&amp;amp;sn=e899a0efca008b6d490b01fe203feb89&amp;amp;chksm=9f81a82ea8f621382190cbee9dc49260290a176bf3a6275c5b78824adb59ae40915c6ad2f63d&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Protobuf - 更小、更快、更简单的交互式数据语言&lt;/a&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>145bb3310d56d68852d307e8c63fd1e7</guid>
<title>两年半完成逆袭，他终于拿到字节跳动的 Offer</title>
<link>https://toutiao.io/k/whq4czc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你见过跨专业考计算机的，你也可能见过寒门子弟通过IT改变命运，但请相信我，真正经历过这些之后再回过头来看反而只有平静。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我是亲眼看着这位研究生室友完成逆袭，他花了两年半。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;大学选专业竟然是为了造原子弹？&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;高中升大学时，除了语数外那些上过课的专业外，知道最多的也就是计算机专业了，根本没有考虑过专业会决定以后的就业方向，更没想过不同专业就业形势差距会这么大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在一次校园企业宣讲会上，伊利集团说他们可以开到七千多的工资，左边的妹子惊呼到“哇哦，这么高”，右边的小哥嘀咕到“七千多这么低，谁会去哦”。对了，多说一句，左边是&lt;strong&gt;经管系&lt;/strong&gt;的，右边是&lt;strong&gt;计算机系&lt;/strong&gt;的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那时候选专业的初衷还是蛮高大上的，能源呢，一个说不准我就去研究原子弹了（笑哭）。有时候大家自嘲小时候想改变世界，读书时想改变国家，进入社会才发现改变自己都很难。我听着十分有感触，我们这代人可不就是这样的嘛。我们读书时都是看着伟人的事迹过来的，每次都读的热血沸腾，恨不能废寝忘食再学二十四小时！&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3ErO1JSrPhd72SstMrXtkwduEn6ia4uibfScp7GXBiaF7CZicrhHibvYU7qjuDYXr8zibKr51UaFM8d3kElA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;236&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有一个原因，高中毕业选专业，还真是丰满的理想遮蔽了我透过现象看本质的双眸，加之对这些五花八门的专业并不是很清楚，主要是那时候也没人告诉我选专业不是选理想，更不是选兴趣爱好啊（流下了后悔的眼泪）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以选择&lt;strong&gt;能源系&lt;/strong&gt;就成了我梦想的开始，虽然后来就业时啪啪打脸，这就是后话了。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;就业难，那就换个专业耍耍呗！&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我认为可以把大学生分为三种人：&lt;strong&gt;冥思苦想修仙派&lt;/strong&gt;（专注小说和游戏）、&lt;strong&gt;独孤求败学霸派&lt;/strong&gt;（常年活跃在图书馆和教室）、&lt;strong&gt;对酒当歌人生几何快乐派&lt;/strong&gt;（完成老师布置的课堂作业应该就够了吧）。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8686131386861314&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3ErO1JSrPhd72SstMrXtkwduCxs2I0uYX7Ou2ATBiawFOrMhApCSxnblsqKDfZVg3CicibbctGZNP56jA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;274&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本科时候的我应该是第三种，不知道是现实毒打了我，还是我把理想给买活埋了，反正大学时没当成学霸，如果再给我一次机会，我一定还做第三种。我是一个中庸的人，总觉得人生短短几十年，如果不及时享乐，那万一没有下辈子可不就亏了，当然不号召大家学我，毕竟都像我这样，咱们国家和社会如何前进。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没做学霸最直接的损失就是没能拿到国奖那一大笔钱钱，实在可惜。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;遭受了就业的现实毒打后，我做了继选专业之后的第二个冲动决定，&lt;strong&gt;换个专业耍&lt;/strong&gt;。要说换专业，这次我可是做了一些功能，没有再追随理想，经过一番深入浅出的研究和朋友间口头调研后，我选择了计算机专业，是不是很有远见，虽然现在回头看这个决策也没什么前瞻性（掩面哭泣）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;跨专业那就得认真准备，命运好歹没有把我放弃，就那么一报名，随随便便那么一考，还真让我给考上了，从此我就跟IT结缘。真正跟导师搞研究的时候发现竟也没想象的那么简单，现实还在不停的扇我耳光。实验室人少，什么前端后端都得一把抓，跟师兄学习，Java得搞、信息安全也得搞、文档管理还是我。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5213581599123768&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/RXvHpViaz3ErO1JSrPhd72SstMrXtkwduIicajkabhK2z0K3vK26cXibU44QMIt7hhKIgpQvibLw5o7LNk5oqvMBFA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;913&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重复的早上实验室打卡、码代码、写文档、跟需求方确认交付时间、需求的变更......晚上打卡回宿舍。高中般的三点一线，简单又无趣。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好巧不巧，真觉得无趣的时候，学院合作的企业来找实习生，Base北京，从小到大还一次都没去过首都，去实习能涨涨见识还可以挣点生活费，应该还不错！&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;北漂不易，实习的我竟然还攒到一万👍&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实习工资四千，不包食宿，还好还好，对于还在读书的学生，没那么多需求也就意味着没那么多花钱的地方。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;去实习前我就想好了，这次出来得攒点钱，作为自己回校后的生活费。说实话，读研的同学竟然很多都已经可以不问家里人要钱了，除了国家给的补贴，还有导师给的工资，想想自己着实惭愧。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8848167539267016&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3ErO1JSrPhd72SstMrXtkwduRDB1mA3K1Rdib5cruicOLgsA2vsY95erdECj3taHtBFtskDicuML8xRxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1146&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回头来看，&lt;strong&gt;北漂&lt;/strong&gt;那段时光真不容易，能熬过来我都佩服我自己，主要是怎么可以为了生活扣扣搜搜成那样。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;电视上经常可以看到，女主角指着繁华的北京质问男主角“我想要融入这个城市，我想要在这里扎根，我有错吗？我不想在小房子里过一辈子，我有错吗？“对于我，吃着馒头就着榨菜，从来没想过这个问题，管好自己的一亩三分地便是自己当时最大的成就了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我住在北京的......搞不清多少环之外，&lt;strong&gt;吃了五个月的馒头榨菜&lt;/strong&gt;，住的比较简单且有点偏僻。学生时候物质欲望比较简单，还真是尤其容易满足，有吃有住有工作还有结余，想着回学校后可以靠自己撑到毕业，自豪感油然而生。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回到学校时我竟然攒了一万，好像还是比较牛的。反正我同学觉得我还是比较坚强、能吃苦耐劳，其实当时也就想着回学校的生活费有着落了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9057971014492754&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3ErO1JSrPhd72SstMrXtkwduylzMFrwh09ktpicSKlibzNHkhJP4RW3aedia8USRkNQmlYK6TILwGY3Zw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;276&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以啊，苦不苦都是欲望这货造成的，简简单单不搞那么多想法，连自己苦不苦都不知道不就得了嘛。当然那是那个时候的我，不是现在的我。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;毕业2.5年后进入头条，我才觉得自己入了IT的门......&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在进头条前这些经历不该忽略，忘了交代研究生时我还是蛮积极的，当上了&lt;strong&gt;学院研究生学生会主席&lt;/strong&gt;，title是不是还可以。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当时也没想太多，就觉得本科阶段没什么精彩的过往，研究生应该过的不一样些。其实学生会主席也没什么，自己当过以后发现就那么回事，带着几个部长，同学间传达一些学院的要求，组织一些活动。虽说经历很普通，但为老师们服务，为同学们服务的过程中，对于自己的与人交流能力和情商提高着实有一定的帮助，发现性格外向、办事靠谱、语言逻辑强的同学很有魅力。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8897058823529411&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3ErO1JSrPhd72SstMrXtkwduficicZF1YZsAMicibJ0ic1Y3k9cdfcJ9m27Bt7pc7KMB1USH7iaJ3nyOTypw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;272&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于&lt;strong&gt;跨专业&lt;/strong&gt;，自己底子自然不如本科就是计算机的同学，由于自己性格中庸，所以读研也还是以前那种态度，按时完成作业型。要走IT这条路，不用等到毕业，你就可以看到人和人之间的差异。实习时好多同学已经是&lt;strong&gt;BAT offer收割机&lt;/strong&gt;了，回头看看自己也是心大，没发现同学之间的差距已经拉开，还在好好享受校园生活，专注那点课业。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;毕业时自己随遇而安的性格使自己忽视了大公司小公司的不同，去了上海的一家小公司。也不知是上海的房价，还是同学在大厂的华丽月饼，总之，我忽然开始不满足自己的工作。不论是工作氛围，还是工资收入，学历不低，那要想去大厂，只能想办法努力提升自己的能力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;画外音：机遇很重要！&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;刷过一些&lt;strong&gt;力扣&lt;/strong&gt;（leetcode）的题，当然没你们想的那么多，确定岗位和题型范围，弄几道深入了解。要知道今日头条总部北京，主要分部在上海，意思就是等人员缺口大的时候，面试要求就会松些，这就是机遇。当然对于我来讲，总体还是有些难的，保不齐所有公司面试时都喜欢来点难的，体现自己公司的门槛不低。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9302325581395349&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3ErO1JSrPhd72SstMrXtkwduC1vjADJAUK9CuRDaI49bOoUPThg4lkk8eEVZibGFgSnVbeRvkfnZ6Kw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;258&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近偶然跟朋友聊起，忽而发现入行IT好几年，但却又好像一切才刚刚开始，进入头条这个决定应该是比较正确的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如果别人出生就在罗马，那我只能更努力！&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;立个flag：在头条好好混，下次让我选工作，而不是让工作来选我！&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>