<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>cbb9ac1dc92411698f9c08d5b64336b4</guid>
<title>周末别闲着，快来吧！</title>
<link>https://toutiao.io/k/sat069j</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>415d8d9c97561b0c489ee80f620229a3</guid>
<title>基于开源工具的人生管理</title>
<link>https://toutiao.io/k/e2ie57j</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content&quot; itemprop=&quot;articleBody&quot;&gt;&amp;#13;
&lt;p&gt;我在《&lt;a href=&quot;https://www.bmpi.dev/self/gtd-tools-i-used/&quot;&gt;我的时间管理工具&lt;/a&gt;》与《&lt;a href=&quot;https://www.bmpi.dev/self/note-system/&quot;&gt;我的笔记系统&lt;/a&gt;》中分享过我不断演进的时间管理工具与笔记系统。在使用这些系统多年后，始终有个困惑萦绕在我耳边，那就是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单纯的记录时间、笔记和资金是一种碎片化的行为，容易导致过于追求细节而忘掉全局，让自己成为一个忙碌的战略懒人。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;时间管理、记账、记笔记、学习、写作、阅读、交流这些行为都不是最终目的，它们只是一种实现个人长期目标的辅助方法，如果做这些事对长期目标毫无帮助，那没必要浪费时间去做。&lt;/p&gt;
&lt;p&gt;虽然我做了大量的时间与资金开销记录，但我也很难评估这些开销对实现长期目标有何影响。这种困扰可以看作个人时间管理的哥德巴赫猜想：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我知道我的时间有一半都被浪费掉，但就是不知道哪一半。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;想解决这个问题，就得简化问题的复杂度，这个问题其实等价于以下两个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;今天我做了啥？&lt;/li&gt;
&lt;li&gt;做这些事对我的长期目标有什么帮助？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经过一段时间的思考，我有了以下的简单模型去解决这个问题。让我们先对问题进行建模。&lt;/p&gt;
&lt;h3&gt;问题建模&lt;/h3&gt;
&lt;p&gt;如果把人看作一个 Machine，这个 Machine 有输入有输出。最初这个 Machine 只拥有时间维度，逐渐它拥有了技能维度，同时积累了金钱维度。如果把时间、技能与金钱看作它的输入端，那它输出端就是金钱、技能与影响力维度。其中金钱和技能在输入与输出间自循环，一般是正向的。我们的金钱和技能都会随着输入与输出的循环而提升，而影响力其实就是知识的变体，我们通过知识去影响别人，通过知识去建立权威与信誉度，最终发展出个人品牌。这个流程看起来非常像是一场 &lt;a href=&quot;https://www.bmpi.dev/self/road_to_life_games/&quot;&gt;打怪升级的游戏&lt;/a&gt;。这些抽象的维度落地后就变为&lt;a href=&quot;https://www.bmpi.dev/self/gtd-tools-i-used/&quot;&gt;时间管理系统（目标、任务与时间）&lt;/a&gt;、&lt;a href=&quot;https://www.bmpi.dev/self/note-system/&quot;&gt;财务管理系统（记账、投资与保险）&lt;/a&gt; 与&lt;a href=&quot;https://www.bmpi.dev/self/build-personal-knowledge-system/&quot;&gt;知识体系（写作、笔记与个人品牌）&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;想象这个场景：通过设定个人 OKR，把一个个 Key Result 拆解为一个个 TODO Task，用时间管理工具去追踪这些 Task 的时间开销，用财务管理去追踪这些 Task 的金钱开销，用知识管理去追踪这些 Task 的笔记，那我们是可以知道每个 Objective 的时间与资金开销，同时也能知道这个 Objective 的输出笔记产物有哪些，最终输出的影响力程度。通过不断优化输入与输出端，我们可以形成高效的学习能力，更好的适应外界的变化。如何优化？就需要记录输入与输出端各个维度的数据。通过记录底层维度数据来把控高层目标的实现。从时间与财务性价比的角度看一个个最终执行的任务，如果某个任务能更好的推动 OKR 目标的实现，那这个任务的投入就有价值。&lt;/p&gt;
&lt;p&gt;理想的情况是，每个人拥有自己的输入与输出各维度的 Dashboard，这样就能从宏观视角看到自己每天做的事情的价值。我们可以量化每件事情的投入产出比，去优化自己的处理流程。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/07/1-life-management-based-on-open-source.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h3&gt;系统设计&lt;/h3&gt;
&lt;p&gt;在对问题建模后，我现在的业务需求是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全局的 Tag 系统。该 Tag 系统可以从个人愿景中设定年度 OKR 目标，之后可以对 OKR 的 Key Result 进行细粒度的 Task 拆分。&lt;/li&gt;
&lt;li&gt;任务时间开销追踪。可以对 OKR 目标的某个 Key Result 统计相关的 Task 的总耗费时间。&lt;/li&gt;
&lt;li&gt;任务资金开销追踪。可以对 OKR 目标的某个 Key Result 统计相关的 Task 的总资金成本。&lt;/li&gt;
&lt;li&gt;任务相关笔记关联。可以对 OKR 目标的某个 Key Result 关联相关的 Task 的笔记。&lt;/li&gt;
&lt;li&gt;Dashboard 原始数据生成。可以自动或手动生成个人 OKR 完成度表现报告与财务健康度报告。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下图是一个从个人愿景到 OKR ，之后从 OKR 生成每日待办任务，追踪任务相关时间、资金与笔记的流程图。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/07/2-life-management-based-on-open-source.jpg&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/07/2-life-management-based-on-open-source-768x368.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;系统实现&lt;/h3&gt;
&lt;p&gt;我的系统实现原则是尽可能用开源的工具组合实现我的需求。所以基本原则有以下几条：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工具需必须要开源。不考虑商业版的原因是未知不可控的商业风险，这些工具都是要长期使用的，选择开源方案是性价比最高的。&lt;/li&gt;
&lt;li&gt;工具需要具备可扩展的能力。只有可扩展的系统才具备组合的能力，这样方便后期定制化的使用。&lt;/li&gt;
&lt;li&gt;工具要有一个好的社区。一个好的社区非常重要，可以让我们解决问题的成本下降很多。也可以使用别人提供的现成解决方案。&lt;/li&gt;
&lt;li&gt;数据必须能自托管。数据必须要存放到自己控制的存储（本地和网络都可以）中，隐私第一原则。&lt;/li&gt;
&lt;li&gt;数据尽可能是纯文本。纯文本更简单，就算工具不可用，也可以直接对文本进行读取或修改。长期来看，这点很重要。&lt;/li&gt;
&lt;li&gt;门槛低。最好一天上手，三天精通，我不想花费数周时间去学习一个复杂的工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;现有解决方案&lt;/h4&gt;
&lt;h5&gt;Emacs&lt;/h5&gt;
&lt;p&gt;如果直接选现成的方案，一定有人会提到这篇 《&lt;a href=&quot;http://doc.norang.ca/org-mode.html&quot;&gt;Organize Your Life In Plain Text!&lt;/a&gt;》。这篇超过 10 年历史的文章看起来如 Emacs 一样强大而久远。用 Emacs 做的确符合以上所有基本原则，问题在于我不是一个 Emacs 专家，我不想学数年 Emacs 后再开始解决这个问题。我的思路是花最多不过一周时间去用开源工具组合出一套解决我需求的方案出来。一周时间，我可能连 Emacs 快捷键都记不住。&lt;/p&gt;
&lt;h5&gt;自己动手做&lt;/h5&gt;
&lt;p&gt;当我看到这篇《&lt;a href=&quot;https://beepb00p.xyz/blog-graph.html&quot;&gt;Blog graph&lt;/a&gt;》 和 《&lt;a href=&quot;https://beepb00p.xyz/myinfra.html&quot;&gt;Map of my personal data infrastructure&lt;/a&gt; 》时整个人都震惊了。作者全部自己动手做了一套类似的系统去管理他的人生。如果我有时间的话我一定会这么尝试去做，但是我没时间。&lt;/p&gt;
&lt;h5&gt;工具选择&lt;/h5&gt;
&lt;p&gt;这套系统实现的关键在于需要有 Tag、TODO、笔记管理、记账等功能，记账可以用 Beancount 去做，只需要结合它的 Tag 功能就可以追逐相关 Tag 的开销。那么只需要选择一个具备 Tag 和 TODO 功能的开源笔记工具就行了。这么看来我们可选择的很有限了。&lt;br/&gt;
以最近大热的 Roam Research 为例，它开启了不少笔记工具的新特性：反向链接、右边栏、每日笔记及图数据库。最重要的其实是它的图数据库特性，因为当一个工具具备了数据库的查询能力时，结合插件特性我们可以做出非常多的应用场景。可惜的是它是一个商业软件且不开源（ Notion 也因为这个原因被排除），所以我找到了一个具备它很多特性的开源软件 Logseq，Logseq 本身受很多笔记工具的启发，如 Roam Research、Tiddlywiki、Workflowy 与 Org Mode 。&lt;br/&gt;
在把玩了几天 Logseq 后我发现最强的就是它底层的 DataScript 内存图数据库，可以通过高级查询做很多自定义界面。这样就可以满足我们的很多需求了，比如生成每日待办任务，根据 OKR 生成的 Tag 来过滤和 OKR 相关的任务，统计相关任务的花费时间等。&lt;br/&gt;
目前 Logseq 还在开发插件系统，等插件系统上线后，很多难以实现的功能都可以通过插件来完成。当然我的需求还不需要插件系统的支持，光高级查询就可以满足。&lt;/p&gt;
&lt;h5&gt;我的方案&lt;/h5&gt;
&lt;p&gt;当确定了笔记工具和记账工具后，我最终的方案如下：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/07/3-life-management-based-on-open-source.jpg&quot;&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/07/3-life-management-based-on-open-source-768x617.jpg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;各工具的职责如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logseq。负责制定 OKR 、设定相关 Tag 、拆分 OKR 相关任务并追踪任务耗费时间（时间管理）及管理这些任务相关的笔记（笔记系统）。&lt;/li&gt;
&lt;li&gt;Beancount。负责记录相关 Tag 的资金开销，当然也是我的记账工具，最终帮助我生成家庭财务健康度的评估报告。&lt;/li&gt;
&lt;li&gt;Tiddlywiki。负责公开笔记的输出。和 Logseq 的区别在于，我会将 Logseq 的一些笔记整理成可供分享的知识后发布到 Tiddlywiki 上。虽然 Logseq 支持公开某个页面，但是为了更好的区分私人笔记和公开笔记，我还是做了这个区分。&lt;/li&gt;
&lt;li&gt;Amazon AWS。我的个人云平台。目前主要是用 S3 + CloudFront 做博客的图床。&lt;a href=&quot;https://www.bmpi.dev/dev/pulumi-aws-serverless-hugo-site-vists/&quot;&gt;博客的页面访问数据&lt;/a&gt; 也是用 &lt;a href=&quot;https://www.bmpi.dev/dev/guide-to-serverless/&quot;&gt;AWS Serverless&lt;/a&gt; 开发实现的。&lt;/li&gt;
&lt;li&gt;Wayback Machine。类似 OneNote 和 Evernote 的 Web 剪藏工具。它可以永久保存网页的所有变更版本，所以一般无需自己把网页内容下载到笔记工具里，这样会导致笔记工具同步缓慢。我当时用 OneNote 剪藏了很多网页导致其存储达几 GB ，每次换设备同步都很头疼。实际上只需要保存网页链接即可，最多加几句总结的话助记。有 Wayback Machine 再也无需担心网页突然不见了。&lt;/li&gt;
&lt;li&gt;GitHub。项目托管与云存储平台。博客、记账与时间管理的所有数据包括文件（某些文件会放到 Google Drive 里）都存放到 GitHub 公开或私有仓库中。&lt;/li&gt;
&lt;li&gt;Vercel。博客与Wiki托管平台。可直接关联 GitHub 后一键发布网站并自带 CDN 且 &lt;a href=&quot;https://www.bmpi.dev/dev/guide-to-setup-blog-site-with-zero-cost-5/&quot;&gt;国内访问速度不错&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;VSCode。文本编辑工具。一般我会用它完成博客写作、笔记写作（也可用浏览器）、绘图（也可用浏览器）、记账及代码开发。&lt;/li&gt;
&lt;li&gt;Google/Twitter/YouTube。主要的信息获取平台。主动搜索用 Google，被动获取用 Twitter 及 YouTube。中文高质量的信息获取平台越来越少了，很多时候需要用英文才能搜索到我想要的信息。所以搜索技能和英文能力已经算基本能力了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最右侧有颜色的三个框就是我的愿景最关注的三个领域了，我的所有输出都会和这三个领域相关。&lt;/p&gt;
&lt;h3&gt;实现效果&lt;/h3&gt;
&lt;p&gt;使用 Logseq 完成的最终效果如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://insights.thoughtworks.cn/wp-content/uploads/2021/07/4-life-management-based-on-open-source.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;每天我都可以在 Logseq 系统首页看到以时间四象限划分法而划分的待办任务。具体如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;📅 在做计划事项。标记为重要的或者和任何 OKR 相关的在做任务。&lt;/li&gt;
&lt;li&gt;🌞 待做计划事项。标记为重要的或者和任何 OKR 相关的待做任务。&lt;/li&gt;
&lt;li&gt;⏰ 在做其他事项。任何不重要的或者和 OKR 不相关的在做任务。&lt;/li&gt;
&lt;li&gt;🚮 待做其他事项。任何不重要的或者和 OKR 不相关的待做任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;底部的区块是和 OKR 相关的信息，让我可以快速了解到目前最重要的 Objective 有哪些。&lt;br/&gt;
当然这个系统远不止如此，更多的信息我会新开一篇文章来介绍如何用 Logseq 实现这些功能。也会写一篇文章介绍如何基于文本使用 Beancount 做复式记账。&lt;/p&gt;
&amp;#13;
&lt;/div&gt;&amp;#13;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3341cf6f94c0487190d7433a93080b67</guid>
<title>了不起的 Chrome 浏览器（四）：Chrome 92 新增 at 和 randomUUID 方法，Canvas 支持 Display P3 色域</title>
<link>https://toutiao.io/k/a333hks</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;7月20日正式发布的Chrome 92，带来了哪些有意思的新特性呢？&lt;/p&gt;&lt;h1 data-lake-id=&quot;34ddb71c8f8a82125eaf87ae6d4ea601&quot;/&gt;&lt;h1 data-lake-id=&quot;34ddb71c8f8a82125eaf87ae6d4ea601&quot;&gt;背景&lt;/h1&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;十多年来，Web技术突飞猛进，其中Chrome功不可没，了解Chrome可以帮助我们理解整个行业的发展趋势。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;因此，我将以《了不起的Chrome浏览器》为题，对Chrome的每一个版本的重要特性进行详细解读，同时分享一些自己的一些思考：&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;通过专注于Chrome的写作，既可以可以提高我的专业能力，也可以提高个人影响力。&lt;span&gt;我的目标是在2025年出版一本关于Chrome的书&lt;/span&gt;，毕竟出版自己的书每一个写作者最高的追求。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;我是寒雁，一个热爱写代码和写文章的程序员，欢迎关注我的微信公众号寒雁Talk。&lt;/p&gt;&lt;h1 data-lake-id=&quot;029f19ae2d05a034702f31a96a8d5500&quot;&gt;&lt;br/&gt;&lt;/h1&gt;&lt;h1 data-lake-id=&quot;029f19ae2d05a034702f31a96a8d5500&quot;&gt;TL;TR&lt;/h1&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;ul data-lake-id=&quot;f47e54ae4cb1ddca0278a84be2ace458&quot; start=&quot;1&quot; lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;Chrome 92最大的亮点是什么？说实话，&lt;span&gt;Chrome92并没有什么特别大的亮点&lt;/span&gt;，不过Array.prototype.at()还是挺实用的&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Chrome 92是哪天发布的？2021-07-20&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Chrome 92更新了多少个特性？14个，具体有哪些特性可以查看Chrome Platform Status&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Chrome 92将使用哪个版本的V8引擎？9.2&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;我感兴趣的新特性依次有哪些？&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-lake-id=&quot;a307463c5681d2c5807a63eedde86843&quot;&gt;&lt;br/&gt;&lt;/h1&gt;&lt;h1 data-lake-id=&quot;a307463c5681d2c5807a63eedde86843&quot;&gt;详细解读&lt;/h1&gt;&lt;h3 data-lake-id=&quot;da2607b47c7f128fa56b5519712d9475&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;da2607b47c7f128fa56b5519712d9475&quot;&gt;Array.prototype.at()&lt;/h3&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;想必大家都写过这样的代码，使用数组长度减1来获取过数组的最后一个元素：&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; A = [&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;]; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(A[A.length - &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;作为一个有代码洁癖的人，这样的写法冗长而奇怪。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;现在好了，Chrome 92支持Array.prototype.at()了：&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; A = [&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;]; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(A.at(&lt;span class=&quot;code-snippet__number&quot;&gt;-1&lt;/span&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;代码少了5个字符，可读性也提高了很多，一举两得!&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;另外，除了Array，String与TypedArray也支持了at方法。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;at方法对应的ECMAScript提案&lt;span&gt;proposal-relative-indexing-method已经处于stage 3&lt;/span&gt;，目测最快明年将会纳入ECMAScript规范。&lt;/p&gt;&lt;h3 data-lake-id=&quot;3d00855a8c2a513153da594cee6bb54b&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;3d00855a8c2a513153da594cee6bb54b&quot;&gt;crypto.randomUUID()&lt;/h3&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;日常开发中，我们经常会需要生成唯一ID，例如给每个用户生成唯一ID。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;npm包uuid的周下载量高达4000万+，我在自己的代码里也搜到了uuid模块：&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;span data-card-type=&quot;inline&quot; data-lake-card=&quot;image&quot; data-card-value=&quot;data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fjpeg%2F928098%2F1626511048566-ef600748-9b21-4dfe-a9bc-62ce08d5656d.jpeg%22%2C%22originWidth%22%3A616%2C%22originHeight%22%3A302%2C%22name%22%3A%22uuid.jpeg%22%2C%22size%22%3A32197%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A23.600388%2C%22y%22%3A26.034937%2C%22width%22%3A89.497292%2C%22height%22%3A19.291891%2C%22text%22%3A%22SEARCH%22%7D%2C%7B%22x%22%3A573.852%2C%22y%22%3A93.99997%2C%22width%22%3A17.957750000000033%2C%22height%22%3A17.957750000000033%2C%22text%22%3A%22*%22%7D%2C%7B%22x%22%3A477.27963%2C%22y%22%3A96.268555%2C%22width%22%3A29.191899999999976%2C%22height%22%3A20.685035%2C%22text%22%3A%22Aa%22%7D%2C%7B%22x%22%3A519.5305%2C%22y%22%3A96.96076%2C%22width%22%3A31.716600000000085%2C%22height%22%3A24.78455000000001%2C%22text%22%3A%22Abl%22%7D%2C%7B%22x%22%3A35.097496%2C%22y%22%3A101.07541%2C%22width%22%3A50.082863999999994%2C%22height%22%3A18.37362999999999%2C%22text%22%3A%22uuid%22%7D%2C%7B%22x%22%3A28.598978%2C%22y%22%3A167.71324%2C%22width%22%3A435.798882%2C%22height%22%3A24.737089999999995%2C%22text%22%3A%2215resultsin15files-Openineditor%22%7D%2C%7B%22x%22%3A85.401146%2C%22y%22%3A223.99823%2C%22width%22%3A163.973474%2C%22height%22%3A30.528879999999987%2C%22text%22%3A%22package.json%22%7D%2C%7B%22x%22%3A44.734283%2C%22y%22%3A229.47353%2C%22width%22%3A29.592957000000006%2C%22height%22%3A11.546019999999999%2C%22text%22%3A%22npm%22%7D%2C%7B%22x%22%3A71.00187%2C%22y%22%3A269.1899%2C%22width%22%3A174.92923%2C%22height%22%3A23.32556999999997%2C%22text%22%3A%22uuid%5C%22%3A%5C%227.0.3%5C%22%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22SEARCH%20*%20Aa%20Abl%20uuid%2015resultsin15files-Openineditor%20package.json%20npm%20uuid%5C%22%3A%5C%227.0.3%5C%22%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A308%2C%22height%22%3A151%2C%22id%22%3A%22yiIrd%22%7D&quot;&gt;&lt;img data-height=&quot;151px&quot; data-ratio=&quot;0.4902597402597403&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UnKibSlmUib8h6VL1oK56FSAYR5QY0f3dDVkuZIib2I3Juichaeajo39ia5Qa5WbPrHAsglUbUGwjgHe4UfqtjZvyEg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;616&quot; title=&quot;uuid.jpeg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;Chrome 92新增了crypto.randomUUID()方法，用于生成符合RFC 4122 version 4规范的唯一ID。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;可惜的是，由于Firefox、Safari等其他浏览器没有支持，因此前端项目中将依然需要使用uuid模块。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;不过，Node.js 14.17.0已经支持了crypto.randomUUID()方法，而生成唯一ID通常是在后端进行，因此目测uuid模块的使用量将会有所降低。使用官方提供的API更加安全，且性能更好。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;要保证随机生成的UUID的唯一性和安全性，是一个看起来简单，但实际非常复杂的问题。图灵奖得主Donald Knuth在他的鸿篇巨制《The Art of Computer Programming》中花了一个章节来讨论随机数：&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;It is not easy to invent a foolproof source of random numbers.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;我们所熟悉的Math.random()其实名不副实，并不随机，它是一个伪随机数生成器（Pseudo Random Number Generator，简称PRNG），当我们指定同一个random_seed启动时，它生成的随机数序列是一样的！&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;node --random_seed=&lt;span class=&quot;code-snippet__number&quot;&gt;42&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Welcome to Node.js v14&lt;span class=&quot;code-snippet__number&quot;&gt;.17&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.3&lt;/span&gt;.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Type &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;.help&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; more information.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;Math&lt;/span&gt;.random()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;0.5254990606499601&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;Math&lt;/span&gt;.random()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;0.963056226312738&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;node --random_seed=&lt;span class=&quot;code-snippet__number&quot;&gt;42&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Welcome to Node.js v14&lt;span class=&quot;code-snippet__number&quot;&gt;.17&lt;/span&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;.3&lt;/span&gt;.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Type &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;.help&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; more information.&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;Math&lt;/span&gt;.random()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;0.5254990606499601&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;Math&lt;/span&gt;.random()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;0.963056226312738&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;也就是说，只要黑客获取了random_seed，就能预测Math.random()所返回的&quot;随机序列&quot;，是不是有点可怕？&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;当然，获取random_seed并不是一件简单的事情，不过并非没有可能，因为random_seed不是随机的，而是依赖于一些内部状态，比如浏览器的启动时间、某个变量的虚拟内存地址，这些内部状态是有规律可循的。2014年，Andriod版的Firefox就曾被人破解过Math.random()。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;span&gt;因此，在对安全性要求比较高的场景中，不要使用Math.random()。&lt;/span&gt;CVE中有多个安全漏洞是与Math.random()相关。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;为了满足大家对于更加安全的加密API的需求，社区提供了很多解决方案，其中最出名的为CryptoJS。但是，对于加密这种CPU密集型应用，纯JavaScript的方案存在比较严重的性能问题，且不够安全。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;因此，2017年，W3C发布了Web Cryptography API，提供更加安全、性能更好的加密API。其中，crypto.getRandomValues()可以用于生成更加安全的随机数，它是密码学安全伪随机数生成器（Cryptographically Secure Pseudo Random Number Generator，简称CSPRNG）。其实，CSPRNG也不能生成真正的随机数，只是它可以通过一些严格的密码学测试，可以认为是安全的。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;51f50693f66baf1ce01a6330f88e7839&quot;&gt;crypto.randomUUID()是基于CSPRNG的，因此也可以认为是安全的。&lt;/p&gt;&lt;p data-lake-id=&quot;346b270359ecdd244fdaa1f36858afd3&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;a4156fd03a3b349d8aa16ede9ded4d06&quot;&gt;crypto.randomUUID()虽然放在cypto对象中，但是它还并未被纳入Web Cryptography API，因此还不是W3C标准。&lt;/p&gt;&lt;h3 data-lake-id=&quot;c52720c8c1e0172fb7ca680a89b969c5&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;c52720c8c1e0172fb7ca680a89b969c5&quot;&gt;Canvas color management&lt;/h3&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;目前，2D canvas仅支持陈旧的sRGB色域，但是现在的屏幕和相机早就支持更大的色域了。&lt;/p&gt;&lt;p data-lake-id=&quot;21da956303b1d9a8d156c67dc2bf6ea5&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;4a0c96cf3239c96adb1866c928625585&quot;&gt;色域是什么呢？它的英文名是Color Gamut或者Color Space，是设备（显示器、投影仪、打印机）可以表达的颜色范围。人眼可见的颜色范围是有限的，而设备能表达的颜色范围是人眼可见的颜色范围的子集，而不同色域标准比如sRGB和Display P3能表达的颜色范围也不一样。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;Chrome 92支持在创建2D canvas时，使用Display P3色域，这将增强2D canvas的颜色还原能力。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;canvas.getContext(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;2d&#x27;&lt;/span&gt;, { &lt;span class=&quot;code-snippet__attr&quot;&gt;colorSpace&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;display-p3&quot;&lt;/span&gt;} );&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;Display P3的色域比sRGB的色域大25%，当我们对比两者时，会发现Display P3要比sRGB明亮很多，区别非常明显：&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;span data-card-type=&quot;inline&quot; data-lake-card=&quot;image&quot; data-card-value=&quot;data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fjpeg%2F928098%2F1626597197633-2387609e-2caf-4c26-84c2-f66df9bba5dc.jpeg%22%2C%22originWidth%22%3A1920%2C%22originHeight%22%3A1080%2C%22name%22%3A%22sRGB_vs_Display%20P3jpg.jpg%22%2C%22size%22%3A317566%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A1269.397%2C%22y%22%3A960.95935%2C%22width%22%3A340.9797000000001%2C%22height%22%3A70.90105000000005%2C%22text%22%3A%22DisplayP3%22%7D%2C%7B%22x%22%3A389.8314%2C%22y%22%3A971.4579%2C%22width%22%3A174.87640000000005%2C%22height%22%3A53.52499999999998%2C%22text%22%3A%22SRGB%22%7D%5D%2C%22style%22%3A%22none%22%2C%22search%22%3A%22DisplayP3%20SRGB%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A480%2C%22height%22%3A270%2C%22id%22%3A%22rmkeH%22%7D&quot;&gt;&lt;img data-height=&quot;270px&quot; data-ratio=&quot;0.5626666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UnKibSlmUib8h6VL1oK56FSAYR5QY0f3dDhCOGwuyTXAxbwxich3BJFnlhWLc7mVIVncavFu4IicqySzLzFssCHibbA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1500&quot; title=&quot;sRGB_vs_Display P3jpg.jpg&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;图片来源：Get Started with Display P3&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;span&gt;对于图像、视频、设计、游戏、地图、外卖、电商等应用，准确还原颜色的重要性不言而喻&lt;/span&gt;。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;大多数情况下，买家秀和卖家秀的明显差异是由于卖家过度PS导致的，但是也有可能是颜色没有得到准确还原导致的。&lt;/p&gt;&lt;h3 data-lake-id=&quot;1eab0fba397f46ead93f4c3e8c9751c0&quot;&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3 data-lake-id=&quot;1eab0fba397f46ead93f4c3e8c9751c0&quot;&gt;Web Bluetooth manufacturer data filter&lt;/h3&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;早在6年前，Chrome就开始开发Web Bluetooth了，不过直到今天，Web Bluetooth也没有成为W3C标准，Safari和Firefox也没有支持Web Bluetooth，这就有点尴尬了。&lt;/p&gt;&lt;p data-lake-id=&quot;e0b33ae1135656caa4d7bbc7ec4897a5&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;510d8be2365cf3b900b008f291b30360&quot;&gt;&lt;span&gt;Chrome以一己之力推动了众多Web技术标准的进步，但是从Web Bluetooth也可以看出，其过程还是比较艰辛的，需要时间和耐心。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;不过，为了让Web可以获得原生应用一样的能力，Chrome也不会放弃Web Bluetooth。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;使用Web Bluetooth，Web应用也可以连接并控制各种蓝牙设备，比如彩灯、玩具车、LED、无人机，还是很有意思的：&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p/&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;视频来源：WebBluetooth demos for Bluetooth.rocks&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;Chrome 92为Web Bluetooth新增了按照蓝牙设备的制造商来过滤蓝牙设备的能力。这样，对于一些针对特定产商的Web应用，就可以只给用户展示对应产商的蓝牙设备。&lt;/p&gt;&lt;h1 data-lake-id=&quot;e0ff11f66e8207127bf9c4be254c79c2&quot;&gt;&lt;br/&gt;&lt;/h1&gt;&lt;h1 data-lake-id=&quot;e0ff11f66e8207127bf9c4be254c79c2&quot;&gt;总结&lt;/h1&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;本篇是《了不起的Chrome浏览器》的第4篇，坚持更新这个系列的博客还是挺难的，一方面工作太忙了，另一方面Chrome 92可以写的内容确实不多，我也不是很熟悉，需要很多时间挖掘。但是，不管怎样，我还是会坚持写下去，因为每次都能学到一些新的东西。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;写博客的过程中，我会阅读大量的参考资料，并且记录阅读笔记，所以我阅读的时间是远远大于写作的时间的。如果不是为了写作，我并不会对某一个知识点进行深究，&lt;span&gt;这也是写作最大的好处，通过输入倒逼输出，倒逼自己进行深度学习&lt;/span&gt;。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;对于比较权威，内容很有启发的参考资料，我都会列到文章后面。这样既是对作者版权的尊重，也是方便自己和读者去阅读相关资料。某个知识点真正优质的内容是非常稀缺的，要找到这些资料是需要一些Google技巧的：准确变换不同的搜索关键词，不断递归地挖掘最原始、最权威的第一手资料。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;另外，我写博客都不是几个小时或者几天时间写完的，长篇的博客写作时间长达一个月，所以改动会很频繁，整个写作过程语雀都会有修改记录。这样写看起来很累，但是其实是把一个大的任务拆分成了一个个小任务，反而轻松很多。另外，每一次写都会有一些新的发现、新的灵感，这对于写作也是非常有帮助的。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;欢迎关注寒雁Talk公众号，关注《了不起的Chrome浏览器》系列博客，与我一起见证大前端的星辰大海！&lt;/p&gt;&lt;h1 data-lake-id=&quot;66e83f284b44207f4edb9c154b825666&quot;&gt;&lt;br/&gt;&lt;/h1&gt;&lt;h1 data-lake-id=&quot;66e83f284b44207f4edb9c154b825666&quot;&gt;参考资料&lt;/h1&gt;&lt;p data-lake-id=&quot;4b8cf913d96df71dd5bbba164fdbd7ff&quot;&gt;&lt;/p&gt;&lt;ul data-lake-id=&quot;a49861708177b3fa3e4972a9e227ecbf&quot; start=&quot;1&quot; lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI4NjI2OTI0Nw==&amp;amp;mid=2247483736&amp;amp;idx=1&amp;amp;sn=48b87e3902fe8f6752aae18b9fe2a18d&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;了不起的Chrome浏览器（1）：Chrome 89开启Web应用的物联网时代&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI4NjI2OTI0Nw==&amp;amp;mid=2247483765&amp;amp;idx=1&amp;amp;sn=cebe653e89518574a785c32b6aad88aa&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;了不起的Chrome浏览器（2）：Chrome 90将默认使用HTTPS，Web更安全了&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI4NjI2OTI0Nw==&amp;amp;mid=2247483785&amp;amp;idx=1&amp;amp;sn=e66890ec12bc3f9ffa88e8712283abbc&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;了不起的Chrome浏览器（3）：Chrome 91支持WebAssembly SIMD，加&lt;/a&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI4NjI2OTI0Nw==&amp;amp;mid=2247483785&amp;amp;idx=1&amp;amp;sn=e66890ec12bc3f9ffa88e8712283abbc&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;Web在AI等领域的应用&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Chrome 92: Web Apps as File Handlers, New JavaScript Features, and More&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;V8 release v9.2&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;at method for relative indexing&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;crypto.randomUUID is three times faster uuid.v4&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Overtaking Firefox Profiles: Vulnerabilities in Firefox for Android&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;TIFU by using Math.random()&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;A Brief History of Random Numbers&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;[V8 Deep Dives] Random Thoughts on Math.random()&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;《Art of Computer Programming, Volume 2: Seminumerical Algorithms, 3rd Edition》Chapter 3: Random Numbers&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Securing JavaScript applications with the Web Cryptography API&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Update on Web Cryptography&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Get Started with Display P3&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Improving Color on the Web&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Pixar in a Box: Color science&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;An Introduction To WebBluetooth&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;WebBluetooth demos for Bluetooth.rocks&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-lake-id=&quot;876710649adfccbc2696bad88f733ccb&quot;&gt;&lt;br/&gt;&lt;/h1&gt;&lt;h1 data-lake-id=&quot;876710649adfccbc2696bad88f733ccb&quot;&gt;招聘&lt;/h1&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;阿里巴巴业务平台事业部长期招聘P6及以上前端大佬，参与建设最前沿的阿里前端生态系统，推动行业技术发展，内推地址：hanyan.lk@alibaba-inc.com&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;欢迎大家关注我的微信公众号寒雁Talk。&lt;/p&gt;&lt;p data-lake-id=&quot;da7032b39bddef89519c381ca7ae23b8&quot;&gt;&lt;span data-card-type=&quot;inline&quot; data-lake-card=&quot;image&quot; data-card-value=&quot;data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2021%2Fwebp%2F928098%2F1619341927214-9586185e-dfc0-4bf1-a2b8-222f7059c1bd.webp%22%2C%22originWidth%22%3A1080%2C%22originHeight%22%3A394%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%2C%22width%22%3A540%2C%22height%22%3A197%2C%22id%22%3A%22pfcLA%22%7D&quot;&gt;&lt;img data-height=&quot;197px&quot; data-ratio=&quot;0.3648148148148148&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/UnKibSlmUib8h6VL1oK56FSAYR5QY0f3dDzLPm5ibCBjlHgrQYNjjL7OQ02gicezTDy8SUt9MibmxLhWQ2VI2TZKz3A/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1080&quot; title=&quot;image&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2094e5ee3263953a0041587a23becd33</guid>
<title>FPGA 双向口的使用及 Verilog 实现</title>
<link>https://toutiao.io/k/khm01t3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText&quot; usegifprops=&quot;[object Object]&quot;&gt;&lt;p&gt;FPGA的双向口在FPGA的设计应用中使用及其广泛，如I2C接口中的SDA，3线制的SPI接口中的数据线，传统控制总线中的数据总线，以及内存的访问DDR3/DDR4的数据总线等都是双向访问的。双向访问涉及到的概念比较多，如三态的概念，高阻的概念，输入、输出引脚合并，输入输出分时复用等概念，因此初学者往往比较迷惑，觉得无所适从，本文从底层基本原理入手，揭示双向口的机理，并用Verilog程序开发为例一步步引导大家如何使用双向口（inout）的使用与开发。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;b&gt;双向口涉及的基本模型&lt;/b&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;为了描述方便，这里给两个命名tri0和tri1（tri是三态门（tri-state的缩略写法，其实在Verilog语法中有两个模型与之对应，分别为bufif0，bufif1。图1，2中的oe在传统的三总线结构中，通常对应OE（读）或WE（写）。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;bufif0是三态门模型，其例化格式如下：&lt;/p&gt;&lt;p&gt;bufif0 tri0 (out, in, oe); //tri0是bufif0的例化名。&lt;/p&gt;&lt;p&gt;其电路形态形态如图1：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-ed854df95a54b98b51756ee13978b51b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;549&quot; data-rawheight=&quot;219&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-ed854df95a54b98b51756ee13978b51b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;549&quot; data-rawheight=&quot;219&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-ed854df95a54b98b51756ee13978b51b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-ed854df95a54b98b51756ee13978b51b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图1 bufif0&lt;/p&gt;&lt;p&gt;在这两个模型中，oe端决定输出的形态，在tri0的模型中，如果oe为’0’， out就得到out0（out0是FPGA内部逻辑产生的值）的值，最终输出到端口PAD上。如果 oe为’1’，此时三态门的输出为高阻状态，在Verilog 描述中用’Z’表示，即三态门与外界是断开状态，如图2所示。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-cd5c553362ebfbf37a06baa3c31d6797_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;517&quot; data-rawheight=&quot;207&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-cd5c553362ebfbf37a06baa3c31d6797_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;517&quot; data-rawheight=&quot;207&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-cd5c553362ebfbf37a06baa3c31d6797_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-cd5c553362ebfbf37a06baa3c31d6797_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图2&lt;/p&gt;&lt;p&gt;图1，2中的oe在传统的三总线结构中，通常对应OE（读）或WE（写）。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;bufif1是另一种三态门模型，其例化格式如下：&lt;/p&gt;&lt;p&gt;bufif1 tri1 (out, in, oe); //tri1是bufif1的例化名。&lt;/p&gt;&lt;p&gt;其电路形态形态如图3：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-cfcff93c94c2733a93bb8fc0bc4cc56b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;300&quot; data-rawheight=&quot;152&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;300&quot; data-rawheight=&quot;152&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-cfcff93c94c2733a93bb8fc0bc4cc56b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图3 buffif1&lt;/p&gt;&lt;p&gt;在这两个模型中，oe端决定输出的形态，在tri1的模型中，如果oe为’1’， out就得到out0（out0是FPGA内部逻辑产生的值）的值，最终输出到端口PAD上。如果 oe为’0’，此时三态门的输出为高阻状态，在Verilog 描述中用’Z’表示，即三态门与外界是断开状态，如图4所示。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-3180aa0884f2a72b90e1616867b94d25_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;305&quot; data-rawheight=&quot;175&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;305&quot; data-rawheight=&quot;175&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-3180aa0884f2a72b90e1616867b94d25_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图4&lt;/p&gt;&lt;p&gt;图3，4中的oe在传统的三总线结构中，通常对应OE#（读）或WE#（写）。&lt;/p&gt;&lt;p&gt;FPGA的I/O基本上都支持双向数据操作，但是由于对外输出端口只有一个，因此需要在端口处合并。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-4ac325d07e94b38a7131914867aa2a7d_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;418&quot; data-rawheight=&quot;252&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;418&quot; data-rawheight=&quot;252&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-4ac325d07e94b38a7131914867aa2a7d_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图5&lt;/p&gt;&lt;p&gt;在图5中，输出流向从FPGA内部逻辑out0–&amp;gt;out–&amp;gt;PAD；输入流向PAD–&amp;gt;in–&amp;gt;FPGA 内部逻辑。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-652fdac97bcdb8865e08487233a23457_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;438&quot; data-rawheight=&quot;243&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-652fdac97bcdb8865e08487233a23457_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;438&quot; data-rawheight=&quot;243&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-652fdac97bcdb8865e08487233a23457_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-652fdac97bcdb8865e08487233a23457_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图6&lt;/p&gt;&lt;p&gt;在图6中，输出流向从FPGA内部逻辑–&amp;gt;out0–&amp;gt;out–&amp;gt;PAD；输入流向PAD–&amp;gt;in–&amp;gt;FPGA 内部逻辑。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;从图5，6可以看出，由于PAD 共享输入、输出。一般在推拉驱动模型中，三态门的输出能力相对较强，考虑到如果接到FPGA外部器件有同样的接口，应该严格控制他们的时序关系，以免发生短路。如图7，&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2c4f4001b58a4ac7b3ff52f3bfacde25_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;478&quot; data-rawheight=&quot;592&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-2c4f4001b58a4ac7b3ff52f3bfacde25_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;478&quot; data-rawheight=&quot;592&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-2c4f4001b58a4ac7b3ff52f3bfacde25_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-2c4f4001b58a4ac7b3ff52f3bfacde25_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图7&lt;/p&gt;&lt;p&gt;在图7中如果a,b两个器件同时输出（两个器件的oe都为’1’），如果恰好一个器件输出为高，一个为低，则会引起短路现象。因此要严格控制时序，保证a,b两个器件避开由内部逻辑同时驱动输出的情况。只有在两个器件oe一个为高，另一个为低，或者两个器件的oe都为低的时候，两个器件的端口才能连在一起。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;ol/&gt;&lt;p&gt;在传统的工业控制总线中，分为主从模式。一般MCU或FPGA为MASTER，SRAM 、EPROM等器件为从模式。在这种模式下，FPGA生成控制信号oe， 同时取反后接到对方的OE端上。如图8：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-c6ebb37d4dec2623ff67956fec8e7c5b_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;480&quot; data-rawheight=&quot;359&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-c6ebb37d4dec2623ff67956fec8e7c5b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;480&quot; data-rawheight=&quot;359&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-c6ebb37d4dec2623ff67956fec8e7c5b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-c6ebb37d4dec2623ff67956fec8e7c5b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图8&lt;/p&gt;&lt;p&gt;图8中，由于oe是由一个主器件控制，因此实现推拉模式，即主器件输入，从器件输出；主器件输出，从器件输入。从输出角度看，在输出的时段内，高低电平直接输出，这一点不同后面要介绍的漏极开路（OD）带上拉电阻的结构。&lt;/p&gt;&lt;p&gt;推拉MOS管模型如图9：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e9e772e7fac9e29b0d8f0cd5e757ff2c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1010&quot; data-rawheight=&quot;714&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-e9e772e7fac9e29b0d8f0cd5e757ff2c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1010&quot; data-rawheight=&quot;714&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-e9e772e7fac9e29b0d8f0cd5e757ff2c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-e9e772e7fac9e29b0d8f0cd5e757ff2c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图9&lt;/p&gt;&lt;p&gt;例1：Master 模式单线控制双向接口（Verilog）。&lt;/p&gt;&lt;p&gt;门级描述：&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;table data-draft-node=&quot;block&quot; data-draft-type=&quot;table&quot; data-size=&quot;normal&quot; data-row-style=&quot;normal&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;12345678910111213141516171819202122232425262728293031323334&lt;/td&gt;&lt;td&gt;module bidir_gate(    input            clk,    input            rst,    inout      [3:0] a,    output           noe,    output reg [3:0] in_val  ); reg [3:0] counta, countb; assign noe = ~counta[3];bufif1 tri1_0(a[0], countb[0], ~noe);bufif1 tri1_1(a[1], countb[1], ~noe);bufif1 tri1_2(a[2], countb[2], ~noe);bufif1 tri1_3(a[3], countb[3], ~noe); always@(posedge clk or posedge rst)if(rst) begin    counta &amp;lt;= 0;    countb &amp;lt;= 0;endelse begin    counta &amp;lt;= counta + 1;     if(counta == 15)        countb &amp;lt;= countb + 1;     if(noe)        in_val &amp;lt;= a;endendmodule&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;RTL描述&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;table data-draft-node=&quot;block&quot; data-draft-type=&quot;table&quot; data-size=&quot;normal&quot; data-row-style=&quot;normal&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1234567891011121314151617181920212223242526272829303132&lt;/td&gt;&lt;td&gt;module bidir_RTL(    input            clk,    input            rst,    inout      [3:0] a,    output           noe,    output reg [3:0] in_val  );  reg [3:0] counta, countb; assign noe = ~counta[3];assign  a  = (!noe) ? countb : 4&#x27;bZZZZ;   //双向口输出  always@(posedge clk or posedge rst)if(rst) begin    counta &amp;lt;= 0;    in_val &amp;lt;= 0;endelse begin    counta &amp;lt;= counta + 1;     if(counta==15)        countb &amp;lt;= countb + 1;     if(noe)        in_val &amp;lt;= a; //获得输入，可以给FPGA内部其它模块使用end endmodule&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;在RTL的描述中可以看出，在Verilog中直接使用高阻4’bZZZZ就起到了三态门的效果，因此应习惯这种使用方法。&lt;/p&gt;&lt;p&gt;例2：Master 模式双向结构(Verilog RTL)， 结构模式参看例1。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;table data-draft-node=&quot;block&quot; data-draft-type=&quot;table&quot; data-size=&quot;normal&quot; data-row-style=&quot;normal&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;12345678910111213141516171819202122232425262728293031323334&lt;/td&gt;&lt;td&gt;module bidir_gate(    input            clk,    input            rst,    inout      [3:0] a,    output           noe,    output           nwe,    output reg [3:0] in_val  );  reg [3:0] counta, countb; assign noe = ~counta[3];assign nwe = counta[3];   //采用tri0模型assign a   = ~nwe ? countb : 4&#x27;bZZZZ; always@(posedge clk or posedge rst)if(rst) begin    counta &amp;lt;= 0;endelse begin    counta &amp;lt;= counta + 1;     if(counta==15)        countb &amp;lt;= countb + 1;    if(~noe) in_val &amp;lt;= a; end   endmodule&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;上拉电阻结构适合总线模型，如I2C总线，485总线等多master多slave的结构。在上拉电阻的结构中，双向口一般不需要读（noe）、写（nwe）控制接口配合。但需要协议配合实现。以I2C 为例，在主、从的结构中都采用OD的方式如图10，因此多个器件的输出端可以直接通过连线接在一起。但在由于输出没有推拉结构，在期望高电平输出时，由于MOS管关闭，实际输出为也为高阻，因此需要在总线上结上拉电阻，以保证在输出阶段且输出为高电平时，可以得到确保的高电平状态，如图11，&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-46760ba4189b6d5c37b864771c5c4778_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;214&quot; data-rawheight=&quot;125&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;214&quot; data-rawheight=&quot;125&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-46760ba4189b6d5c37b864771c5c4778_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图10 OD结构&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-611cf20a5acc6b432c7b99e81bd8d3ce_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;319&quot; data-rawheight=&quot;507&quot; class=&quot;content_image&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;319&quot; data-rawheight=&quot;507&quot; class=&quot;content_image lazy&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-611cf20a5acc6b432c7b99e81bd8d3ce_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图11&lt;/p&gt;&lt;p&gt;在OD（或OC）的设计中，Verilog描述在输入、低电平输出时与推拉结构一致，只有在输出高电平时不同。在输出高电平时要确保真正输出的是高阻。I2C总线接口就是标准的OD结构，在SDA，SDL都要加上拉电阻，如图12&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f8143099483b3baa62809f42579bd9e6_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;460&quot; data-rawheight=&quot;261&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-f8143099483b3baa62809f42579bd9e6_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;460&quot; data-rawheight=&quot;261&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-f8143099483b3baa62809f42579bd9e6_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-f8143099483b3baa62809f42579bd9e6_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;图12&lt;/p&gt;&lt;p&gt;由于inout信号一般只在端口使用，因此在FPGA的内部逻辑（内部模块）将会把inout（双向口）变换成input, output类型进行传递, 具体的使用见例3.&lt;/p&gt;&lt;p&gt;例3：I2C接口Verilog描述。&lt;/p&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;table data-draft-node=&quot;block&quot; data-draft-type=&quot;table&quot; data-size=&quot;normal&quot; data-row-style=&quot;normal&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;12345678910111213141516171819202122232425262728293031323334&lt;/td&gt;&lt;td&gt;module I2C_intereface(    inout        SCL,    inout        SDA,    input  [7:0] datain,    output [7:0] dataout);  wire    SCL_in;wire    SDA_in; wire    SCL_out;wire    SDA_out; assign  SCL     = SCL_out ? 1’bZ : 1’b0;   //这里处理方式与推拉结构不同。assign  SCL_in  = SCL;assign  SDA     = SDA_out ? 1’bZ : 1’b0;assign  SDA_in  = SDA; I2C  I2C_inst(    .SCL_in  (SCL_in),    .SDA_in  (SDA_in),     .SCL_out (SCL_out),    .SDA_out (SDA_out),     .datain  (datain),    .dataout (dataout))  endmodule&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;ztext-empty-paragraph&quot;&gt;&lt;/p&gt;&lt;p&gt;上面程序中，输入直接赋值给SDA_in，是全阶段赋值，即把输出阶段也给输入端赋值，因此在I2C 的程序中，何时使用输入的值，应有严格定时。关于I2C的时序描述请参照I2C部分内容。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>480a742cd866038f887d4f68f93f7fa6</guid>
<title>uni-app 踩坑小记</title>
<link>https://toutiao.io/k/n9nwipg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div itemprop=&quot;articleBody&quot; class=&quot;content__default&quot;&gt;&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 写在前面&lt;/h2&gt; &lt;p&gt;这里记录一些使用 uni-app 和 uView 开发时踩过的坑，希望能对后来者有所帮助。&lt;/p&gt; &lt;h2 id=&quot;_1-微信开发者工具关闭-es6-转-es5&quot;&gt;&lt;a href=&quot;#_1-微信开发者工具关闭-es6-转-es5&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 1. 微信开发者工具关闭 ES6 转 ES5&lt;/h2&gt; &lt;p&gt;如果微信开发者工具开启了 ES6 转 ES5 的功能，会导致引入的 uView 组件无法正常使用，会报类似于下面这样的错：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728092428.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;解决方案：把微信开发者工具的 ES6 转 ES5 功能关掉，设置 -&amp;gt; 项目设置 -&amp;gt; 本地设置。&lt;/p&gt; &lt;h2 id=&quot;_2-ref-不要放在-computed&quot;&gt;&lt;a href=&quot;#_2-ref-不要放在-computed&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 2. ref 不要放在 computed&lt;/h2&gt; &lt;p&gt;下面这份代码，在小程序端运行异常：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;container&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;button&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;button&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  computed&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;buttonRef&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;$refs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;button
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;mounted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;buttonRef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;someMethods&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 在 mp-weixin 会报：buttonRef 为空&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解决方案：不要把 refs 的定义放在 computed，每次使用都直接通过  &lt;code&gt;this.$refs.button&lt;/code&gt; 获取 。&lt;/p&gt; &lt;h2 id=&quot;_3-小程序端的组件样式问题&quot;&gt;&lt;a href=&quot;#_3-小程序端的组件样式问题&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 3. 小程序端的组件样式问题&lt;/h2&gt; &lt;p&gt;有可能你在 h5 编写好一个组件的样式，运行好好的，结果在小程序端却不正常了，原因在于小程序端会在组件外额外增加一层视图容器，这可能会导致诸如一些高度、外边距之类的样式失效，解决方案就是修改这个外层的样式，使它与我们这个组件的最外层样式一致：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;scss&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;span class=&quot;token language-css&quot;&gt;
&lt;span class=&quot;token selector&quot;&gt;// #ifdef MP-WEIXIN
// HACk: 微信小程序端组件外面会多一层，需要给它也设置高度
[data-ref=&#x27;basicLayout&#x27;], // 这里的值在微信开发者工具查看
// #endif
.basic-layout,
.page-content&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; column&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意：由于这个选择器只针对小程序端，所以我们要加一个条件渲染。&lt;/p&gt; &lt;h2 id=&quot;_4-小程序端修改的外部组件样式无效的问题&quot;&gt;&lt;a href=&quot;#_4-小程序端修改的外部组件样式无效的问题&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 4. 小程序端修改的外部组件样式无效的问题&lt;/h2&gt; &lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 问题描述&lt;/h3&gt; &lt;p&gt;如果要在 &lt;code&gt;.vue&lt;/code&gt; 中修改外部组件的样式（如 uni-app 和 uView），像下面这样可能会无效：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;container&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;u-search&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;v-model&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;keyword&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;日照香炉生紫烟&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;u-search&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      keyword&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;scss&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;span class=&quot;token language-css&quot;&gt;
&lt;span class=&quot;token selector&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token selector&quot;&gt;.u-search .u-input&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; red &lt;span class=&quot;token important&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行结果：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728092634.png&quot; alt=&quot;&quot;/&gt; &lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728092644.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;h4 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 解决方案&lt;/h4&gt; &lt;p&gt;这是因为在 uni-app &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;  默认都是 &lt;code&gt;scope&lt;/code&gt; 的，所以需要改成下面这样：&lt;/p&gt; &lt;div class=&quot;language-diff extra-class&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;style lang=&quot;scss&quot;&amp;gt;
&lt;/span&gt;&lt;/span&gt;.container {
&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  .u-search .u-input {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  /deep/ .u-search .u-input {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   color: red !important;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; }
&lt;/span&gt;&lt;/span&gt;}
&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/style&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样 H5 也能运行正常了：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728092659.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;h3 id=&quot;小程序端修改-shadow-root-内部样式&quot;&gt;&lt;a href=&quot;#小程序端修改-shadow-root-内部样式&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 小程序端修改 shadow-root 内部样式&lt;/h3&gt; &lt;p&gt;但是还有一种情况，就是如果你要修改的组件位于 &lt;code&gt;#shadow-root&lt;/code&gt; 下，就有可能无法修改，比如下面这样：&lt;/p&gt; &lt;div class=&quot;language-css extra-class&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code&gt;&lt;span class=&quot;token selector&quot;&gt;.nav-bar&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token selector&quot;&gt;/deep/ .uni-navbar__content&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; unset &lt;span class=&quot;token important&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其实根本没有修改到：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728094252.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;h4 id=&quot;解决方案-2&quot;&gt;&lt;a href=&quot;#解决方案-2&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 解决方案&lt;/h4&gt; &lt;p&gt;这种情况，我们必须在 &lt;code&gt;App.vue&lt;/code&gt; 下的 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 才能进行样式覆盖，但为了方便维护，我们新增了一个 &lt;code&gt;uni-custom-app.scss&lt;/code&gt; 专门做这件事，用于解决上面这种情况：&lt;/p&gt; &lt;div class=&quot;language-css extra-class&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code&gt;// 文件路径：src/styles/uni-custom.scss

&lt;span class=&quot;token comment&quot;&gt;/**
* 这个文件用于修改 uni 或者其他 ui 组件库的样式
* 由于微信小程序的限制，无法在组件内部修改其他外部组件的样式，只能在全局设置
* @link https://ask.dcloud.net.cn/question/68411
*
* 注意：如果不是全局修改，为避免影响其它，需要指定在外层页面和组件
*/&lt;/span&gt;

&lt;span class=&quot;token selector&quot;&gt;// 全局修改
// .u-btn&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
//   &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; red&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
// &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token selector&quot;&gt;// 局部修改
// .page-xxx&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;//   .container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;//     .u-btn&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
//       &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; red&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
//     &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
//   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
// &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也就是说，我们只要把上面的样式移动到这个文件即可：&lt;/p&gt; &lt;div class=&quot;language-diff extra-class&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code&gt;// 文件路径：src/styles/uni-custom.scss

...

&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;.page-message {
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  .nav-bar {
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    /deep/ .uni-navbar__content {
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      overflow: unset !important;
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    }
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  }
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到是有样式的：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728100012.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;但是你会看到我们写的样式权重似乎不够高，但其实样式已经被应用上去了，所以不用在意这里，至于为什么会这样，可能会微信开发者工具的问题吧？&lt;/p&gt; &lt;p&gt;注意：如果此样式只针对某个页面下的组件，建议在外面包一层该页面的唯一 class 名字，以防影响其它页面。&lt;/p&gt; &lt;p&gt;参考链接：&lt;a href=&quot;https://ask.dcloud.net.cn/question/68411&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;https://ask.dcloud.net.cn/question/68411&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;如果是自定义 uButton 样式无效，可以看看：[18. 自定义 uButton 样式](&lt;/p&gt; &lt;h2 id=&quot;_5-在-hbuilder-运行项目&quot;&gt;&lt;a href=&quot;#_5-在-hbuilder-运行项目&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 5. 在 HBuilder 运行项目&lt;/h2&gt; &lt;p&gt;由于我们是使用 cli 的方式生成的项目，所以基本开发只需要在命令行运行 &lt;code&gt;npm run dev:xxx&lt;/code&gt; 即可，但是如果要调试 APP 端，还是使用 HBuilder 要更方便，然而如果在 在 HBuilder 运行 cli 项目 你可能会遇到以下错误：&lt;/p&gt; &lt;div class=&quot;language-bash extra-class&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code&gt;Node Sass could not &lt;span class=&quot;token function&quot;&gt;find&lt;/span&gt; a binding &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; your current environment: OS X &lt;span class=&quot;token number&quot;&gt;64&lt;/span&gt;-bit with Node.js &lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;.x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;说白就是 node-sass 出了问题了，HBuilder 默认使用的 Node 版本是 v8.x，所以我们要修改一下配置，让它使用我们本机的 Node 版本。&lt;/p&gt; &lt;p&gt;在 偏好设置 -&amp;gt; 运行配置 中修改 npm 和 Node 的路径即可：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728100327.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;如果你不知道 Node 的路径在哪，可以这样：&lt;/p&gt; &lt;ul&gt;&lt;li&gt;Linux/Mac： &lt;code&gt;where node&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Windows：直接看系统环境变量&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;参考：&lt;a href=&quot;https://ask.dcloud.net.cn/question/67852&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;https://ask.dcloud.net.cn/question/67852&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;_6-动态插槽名&quot;&gt;&lt;a href=&quot;#_6-动态插槽名&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 6. 动态插槽名&lt;/h2&gt; &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 前言&lt;/h3&gt; &lt;p&gt;要在 uni-app 中使用动态 slot 名字，会比较麻烦，因为：在 MP-WEIXIN、APP-PLUS 都会有坑。&lt;/p&gt; &lt;h3 id=&quot;h5-和-小程序端&quot;&gt;&lt;a href=&quot;#h5-和-小程序端&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; H5 和 小程序端&lt;/h3&gt; &lt;p&gt;我们先说比较常用的 H5 和 MP-WEIXIN 好了：&lt;/p&gt; &lt;p&gt;定义：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- HACK: uni-app 处理动态 slot 名字不兼容，需要使用不同的语法 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #ifdef H5 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;`tab:${item.key}`&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #endif --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #ifdef MP-WEIXIN--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:{{item.key}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #endif --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 slot：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- HACK: uni-app 处理动态 slot 名字不兼容，需要使用不同的语法 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #ifdef H5 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;v-for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item in list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:slot&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;`tab:${item.id}`&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;post-list&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item.id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #endif --&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #ifdef MP-WEIXIN--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;v-for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item in lits&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:professional:{{item.id}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;post-list&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item.id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #endif  --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考链接：&lt;a href=&quot;https://ask.dcloud.net.cn/question/82506&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;https://ask.dcloud.net.cn/question/82506&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3 id=&quot;app-端&quot;&gt;&lt;a href=&quot;#app-端&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; APP 端&lt;/h3&gt; &lt;p&gt;如果还要兼容 APP 端（vue 文件），则情况会变得稍微复杂一点，以上两种情况都不适用，先说结论：&lt;/p&gt; &lt;ol&gt;&lt;li&gt;&lt;strong&gt;不支持拿 data 的数据用于拼接动态 slot 名字&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;在 v-for 中要根据当前项的字段来拼接 slot 名字，则要将 key 指向 &lt;code&gt;item&lt;/code&gt; 本身（不推荐&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;能拿 v-for 的 index 来拼接 slot 名字（推荐&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt; &lt;h4 id=&quot;解决方案-3&quot;&gt;&lt;a href=&quot;#解决方案-3&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 解决方案&lt;/h4&gt; &lt;p&gt;也即，如果是上面的例子，需要改写为如下：：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;swiper-item&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;v-for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;(item, index) in tabs&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item.id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;swiper-item&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- HACK: uni-app 处理动态 slot 名字不兼容，需要使用不同的语法 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #ifdef H5 || APP-PLUS --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;`tab:${index}`&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #endif --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #ifdef MP-WEIXIN--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:{{index}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #endif --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;swiper-item&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用的时候：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;tab-swiper&lt;/span&gt;
  &lt;span class=&quot;token attr-name&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tabSwiper&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token attr-name&quot;&gt;:tabs&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token attr-name&quot;&gt;:current.sync&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;current&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token attr-name&quot;&gt;:swiper-current.sync&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;swiperCurrent&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- HACK: uni-app 处理动态 slot 名字不兼容，需要使用不同的语法 --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #ifndef H5 || APP-PLUS --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;v-for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;(item, index) in list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:slot&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;`tab:${index}`&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;post-list&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item.id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:stagger&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;index % 2 !== 0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #endif --&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #ifdef MP-WEIXIN--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;v-for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;(item, index) in list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:{{item.id}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;post-list&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item.id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:stagger&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;index % 2 !== 0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #endif  --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;tab-swiper&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&quot;排查问题&quot;&gt;&lt;a href=&quot;#排查问题&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 排查问题&lt;/h4&gt; &lt;p&gt;下面开始排查问题，首先我们用以下代码测试用 data 的数据来作为 slot 名字：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    testing dynamic slot
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      test key value
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      key&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;slot-1&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后使用命令行或者 HBuilderx 编译 APP 端代码后，我们在 &lt;code&gt;dist/dev/app-plus/app-view.js&lt;/code&gt;
搜索  &lt;code&gt;testing dynamic slot&lt;/code&gt; ，然后可以看到以下代码：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728093109.png&quot; alt=&quot;&quot;/&gt;
可以看到，即便同样使用了 key 作为属性，但它们编译后的代码是不一样的，slot 节点直接使用 &lt;code&gt;_vm._key&lt;/code&gt; ，而 view 节点变成了 &lt;code&gt;_vm._$(2,&#x27;c&#x27;)&lt;/code&gt; ，由此也推断出 uni-app 内部并没有对 slot 的 &lt;code&gt;name&lt;/code&gt; 属性做额外处理，其实如果打印 &lt;code&gt;_vm.key&lt;/code&gt; 的值， 会发现是空的：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728093132.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;所以结论一：不支持拿 data 的数据用于拼接动态 slot 名字。&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;但直接拿 data 数据来拼接 slot 名字的情况比较少，更多时候是在 v-for 循环内部，所以我们再拿以下代码做测试：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    testing dynamic slot
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;v-for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item in list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item.id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      {{ item.name }}
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;`tab:${item.id}`&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      list&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;a&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;item-a&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;b&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;item-b&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;c&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;item-c&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以上代码在 APP 端依然是不正常的，我们看看编译后的代码：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728093202.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;代码看上去好像挺正常的是吧，但有一点很奇怪：为什么 key 直接指向了 &lt;code&gt;item&lt;/code&gt; ？&lt;/p&gt; &lt;p&gt;果不其然，打印 &lt;code&gt;item&lt;/code&gt; 发现这里的 &lt;code&gt;item&lt;/code&gt; 并不是 v-for 中的那个 &lt;code&gt;item&lt;/code&gt; 对象 ，而是用于指定 &lt;code&gt;key&lt;/code&gt; 的值：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728093223.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;所以 &lt;code&gt;item.id&lt;/code&gt; 依然是空的，实际上这里的 &lt;code&gt;item&lt;/code&gt; === 外部的 &lt;code&gt;item.id&lt;/code&gt; 。&lt;/p&gt; &lt;p&gt;既然如此，我们似乎得到两个解决方案：&lt;/p&gt; &lt;ol&gt;&lt;li&gt;将 v-for 的 key 直接指向 item 本身，使 &lt;code&gt;item.id&lt;/code&gt; 能正常访问&lt;/li&gt; &lt;li&gt;拼接 slot 名字时不使用 &lt;code&gt;item.id&lt;/code&gt; 而是使用 &lt;code&gt;item&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;结论是，方案一可行；方案二不可行。&lt;/p&gt; &lt;p&gt;至于为什么方案二不可行，我认为是 uni-app 的问题，因为打印出来的值是正确的。&lt;/p&gt; &lt;p&gt;但根据 Vue &lt;a href=&quot;https://cn.vuejs.org/v2/guide/list.html#%E7%BB%B4%E6%8A%A4%E7%8A%B6%E6%80%81&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;官方文档&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;指出：&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;不要使用对象或数组之类的非基本类型值作为 v-for 的 key。请用字符串或数值类型的值。&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;strong&gt;结论二：在 v-for 中要根据当前项的字段来拼接 slot 名字，则要将 key 指向 &lt;code&gt;item&lt;/code&gt; 本身。&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;最后一个解决方案，那就是通过 index 拼接 slot 名字：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    testing dynamic slot
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;v-for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;(item, index) in list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item.id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      {{ item.name }}
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;`tab:${index}`&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      list&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;a&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;item-a&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;b&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;item-b&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;c&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;item-c&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以上代码能在 APP 端正常运行。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;结论三：拿 v-for 的 index 来拼接 slot 名字。&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;但毕竟是 HACK，终究原因是 uni-app 目前仍没有在 APP 端支持定义动态 slot ，可见相关的讨论：&lt;/p&gt;  &lt;p&gt;所以 uni-app 官方什么时候支持动态 slot 名字呢？&lt;/p&gt; &lt;h2 id=&quot;_7-小程序端-v-for-中使用-v-if-问题&quot;&gt;&lt;a href=&quot;#_7-小程序端-v-for-中使用-v-if-问题&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 7. 小程序端 v-for 中使用 v-if 问题&lt;/h2&gt; &lt;h3 id=&quot;问题描述-2&quot;&gt;&lt;a href=&quot;#问题描述-2&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 问题描述&lt;/h3&gt; &lt;p&gt;这个问题需要同时满足以下条件才会触发：&lt;/p&gt; &lt;ol&gt;&lt;li&gt;在 v-for 内部使用了 v-if&lt;/li&gt; &lt;li&gt;v-if 的断言依赖了 methods 或者 闭包 computed（就是需要根据入参动态返回结果&lt;/li&gt; &lt;li&gt;在 v-for 内部直接使用了小程序端的语法&lt;/li&gt;&lt;/ol&gt; &lt;h3 id=&quot;排查过程&quot;&gt;&lt;a href=&quot;#排查过程&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 排查过程&lt;/h3&gt; &lt;p&gt;复现代码如下：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;// tab-swiper.vue
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;v-for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;(item, index) in list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item.id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- HACK: uni-app 处理动态 slot 名字不兼容，需要使用不同的语法 --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #ifdef H5 --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;`tab:${item.id}`&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #endif --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #ifndef H5--&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- @see https://ask.dcloud.net.cn/question/82506 --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:{{item.id}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- #endif --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      list&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;recommend&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;推荐&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;public&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;公共知识&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;professional&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;专业项知识&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;index.vue&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;tab-swiper&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:recommend&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;recommend&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:public&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;public&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:professional&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;professional&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;tab-swiper&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; TabSwiper &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;@/components/tab-swiper&#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  components&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    TabSwiper&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面代码一切运行正常，slot 也能正常显示：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728093432.png&quot; alt=&quot;&quot;/&gt;
然而，只要我把代码改成这样：&lt;/p&gt; &lt;div class=&quot;language-diff extra-class&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;template&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;view class=&quot;list&quot;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   &amp;lt;view v-for=&quot;(item, index) in list&quot; :key=&quot;item.id&quot; class=&quot;item&quot;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      &amp;lt;block v-if=&quot;isShow(index)&quot;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;        &amp;lt;view&amp;gt;显示我&amp;lt;/view&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      &amp;lt;/block&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     &amp;lt;!-- HACK: uni-app 处理动态 slot 名字不兼容，需要使用不同的语法 --&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     &amp;lt;!-- #ifdef H5 --&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     &amp;lt;slot :name=&quot;`tab:${item.id}`&quot;&amp;gt;&amp;lt;/slot&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     &amp;lt;!-- #endif --&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     &amp;lt;!-- #ifndef H5--&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     &amp;lt;!-- @see https://ask.dcloud.net.cn/question/82506 --&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     &amp;lt;slot name=&quot;tab:{{item.id}}&quot;&amp;gt;&amp;lt;/slot&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     &amp;lt;!-- #endif --&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   &amp;lt;/view&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;/view&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/template&amp;gt;
&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;script&amp;gt;
&lt;/span&gt;&lt;/span&gt;export default {
&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; data() {
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   return {
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     list: [
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;       {
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         id: &#x27;recommend&#x27;,
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         name: &#x27;推荐&#x27;,
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;       },
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;       {
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         id: &#x27;public&#x27;,
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         name: &#x27;公共知识&#x27;,
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;       },
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;       {
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         id: &#x27;professional&#x27;,
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         name: &#x27;专业项知识&#x27;,
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;       },
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     ],
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   }
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  methods: {
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   isShow(index) {
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     return index % 2 === 0
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   },
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  },
&lt;/span&gt;&lt;/span&gt;}
&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/script&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结果立马变成这样了：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728093448.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;那三个 slot 哪去了？别急，让我们对比一下两者生成的微信小程序代码：&lt;/p&gt; &lt;div class=&quot;language-html extra-class&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- 这是正常的 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;block&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{list}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;for-item&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;for-index&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:{{item.id}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- 这是异常的 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;block&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{$root.l0}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;for-item&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;for-index&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;block&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{item.m0}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;显示我&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:{{item.id}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面开始「找不同」，我们发现最大的不同是： &lt;code&gt;wx:for&lt;/code&gt; 的值不一样，于是我们看下 &lt;code&gt;$root.l0&lt;/code&gt; 的定义：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728093530.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;我们发现，在 &lt;code&gt;$root.l0&lt;/code&gt;  下的每一个 item 项都多了一层 &lt;code&gt;$orig&lt;/code&gt; 放置原本的内容，所以我们下面这行代码并不能访问到它的 id 值：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:{{item.id}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们试着把这个值输出来看看：&lt;/p&gt; &lt;div class=&quot;language-diff extra-class&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; 当前：{{ item.id }}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;slot name=&quot;tab:{{item.id}}&quot;&amp;gt;&amp;lt;/slot&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你会发现居然能显示出来：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728093542.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;再看看生成的微信小程序代码，终于知道其中的奥妙：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;list&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;block&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;for&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{$root.l0}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;for-item&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;for-index&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;key&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;block&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;&lt;span class=&quot;token namespace&quot;&gt;wx:&lt;/span&gt;if&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{{item.m0}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;显示我&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;{{&#x27;当前：&#x27;+item.$orig.id+&#x27;&#x27;}}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;slot&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tab:{{item.id}}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;slot&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&quot;解决方案-4&quot;&gt;&lt;a href=&quot;#解决方案-4&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 解决方案&lt;/h3&gt; &lt;p&gt;原来是 uni-app 自动帮我们添加了 &lt;code&gt;$orig&lt;/code&gt; ，但由于 slot 那一行我们直接用了微信小程序的语法，所以并没有帮我们添加 &lt;code&gt;$orig&lt;/code&gt; ，那么解决方案就是自己手动加上呗：&lt;/p&gt; &lt;div class=&quot;language-diff extra-class&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;slot name=&quot;tab:{{item.id}}&quot;&amp;gt;&amp;lt;/slot&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;slot name=&quot;tab:{{item.$orig.id}}&quot;&amp;gt;&amp;lt;/slot&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;问题是解决了，那么为什么会这样呢？应该是 uni-app 的转换机制，发现 v-for 和 v-if 存在一定关联，就把它们给缓存了，才会出现这种问题。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;核心要点：当微信小程序端异常时，不妨看看生成的代码，说不定有收获哦。&lt;/strong&gt;&lt;/p&gt; &lt;h2 id=&quot;_8-小程序端禁止事件冒泡&quot;&gt;&lt;a href=&quot;#_8-小程序端禁止事件冒泡&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 8. 小程序端禁止事件冒泡&lt;/h2&gt; &lt;h3 id=&quot;问题描述-3&quot;&gt;&lt;a href=&quot;#问题描述-3&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 问题描述&lt;/h3&gt; &lt;p&gt;在小程序端无法动态阻止事件冒泡，也即，在 js 中使用如下无效：&lt;/p&gt; &lt;div class=&quot;language-javascript extra-class&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;token function&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 除了在 h5，其它端均无效&lt;/span&gt;
  e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 同上&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;只能使用修饰符：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;u-button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;@click.native.stop&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;doSomething&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;u-button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意：需要加 &lt;code&gt;native&lt;/code&gt; ，否则可能无法无效。&lt;/p&gt; &lt;p&gt;参考链接：&lt;a href=&quot;https://github.com/dcloudio/uni-app/issues/1067&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;https://github.com/dcloudio/uni-app/issues/1067&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;关于 uni-app 中的修饰符兼容情况：&lt;a href=&quot;https://uniapp.dcloud.io/vue-basics?id=%e4%ba%8b%e4%bb%b6%e4%bf%ae%e9%a5%b0%e7%ac%a6&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;事件修饰符 —— uni-app&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;很显然， 使用事件修饰符的缺点是无法动态决定是否阻止事件冒泡，如果有这种需求，提供个 hack 思路：&lt;/p&gt; &lt;ul&gt;&lt;li&gt;在外面包一层，利用 css 的 pointer-events 属性决定是否触发内层的 dom 事件&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;另外还有一个坑，假设有如下代码：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;container&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;@click&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;show = false&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;u-icon&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;plus-circle-fill&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;@click.native.stop&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;show = !show&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;v-show&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;show&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;这是一条信息&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      show&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述代码想要实现当点击 icon 时切换显示 message，而点击 icon 以外的任意地方则隐藏 message。&lt;/p&gt; &lt;p&gt;在 H5 运行正常，但是在小程序端却会报如下错误：&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;TypeError: Cannot read property &#x27;stopPropagation&#x27; of undefined&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;这是因为我们直接在 &lt;code&gt;@click&lt;/code&gt; 的事件绑定中写了代码，而如果改成绑定 &lt;code&gt;methods&lt;/code&gt; 则没有该问题：&lt;/p&gt; &lt;div class=&quot;language-diff extra-class&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;template&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;view class=&quot;container&quot; @click=&quot;show = false&quot;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    &amp;lt;u-icon name=&quot;plus-circle-fill&quot; @click.native.stop=&quot;show = !show&quot; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    &amp;lt;u-icon name=&quot;plus-circle-fill&quot; @click.native.stop=&quot;toggleShowMessage&quot; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   &amp;lt;view v-show=&quot;show&quot; class=&quot;message&quot;&amp;gt;这是一条信息&amp;lt;/view&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;/view&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/template&amp;gt;
&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;script&amp;gt;
&lt;/span&gt;&lt;/span&gt;export default {
&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; data() {
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   return {
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     show: false,
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   }
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; },
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  methods: {
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    toggleShowMessage() {
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      this.show = !this.show
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    },
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  },  
&lt;/span&gt;&lt;/span&gt;}
&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/script&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;出现该问题的原因：如果直接在 Vue 的事件绑定中编写单行代码（不是绑定具体的方法），而 uni-app 转换为小程序端代码时会将它放到 &lt;code&gt;.js&lt;/code&gt; 文件的方法中，并且由于使用了 &lt;code&gt;.stop&lt;/code&gt; 事件修饰符，也在该方法中添加了 &lt;code&gt;$event.stopPropagation()&lt;/code&gt; ，然而小程序端打印 &lt;code&gt;$event&lt;/code&gt; 根本就是 &lt;code&gt;undefind&lt;/code&gt; ，所以导致错误，可以看看生成的小程序代码：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728093710.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;这应该是 uni-app 的问题，关于这个问题更详细的描述可以看我在 uni-app 仓库提的这个 &lt;a href=&quot;https://github.com/dcloudio/uni-app/issues/2400&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;issue&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;。&lt;/p&gt; &lt;h3 id=&quot;解决方案-5&quot;&gt;&lt;a href=&quot;#解决方案-5&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 解决方案&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;总之：尽量不要在事件绑定中使用单行代码，特别是使用了事件修饰符的时候。&lt;/strong&gt;&lt;/p&gt; &lt;h2 id=&quot;_9-uview-两层-tabsswiper-left-计算问题&quot;&gt;&lt;a href=&quot;#_9-uview-两层-tabsswiper-left-计算问题&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 9. uView 两层 tabsSwiper left 计算问题&lt;/h2&gt; &lt;p&gt;使用 uView 的 tabSwiper 组件时，如果存在两层或多层嵌套，会出现内层的 swiper-item 的 left 值计算错误，这是 uView 的 bug，具体问题描述和临时解决方案可见：&lt;a href=&quot;https://github.com/YanxinNet/uView/issues/749&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;https://github.com/YanxinNet/uView/issues/749&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;_10-scss-文件进行条件渲染&quot;&gt;&lt;a href=&quot;#_10-scss-文件进行条件渲染&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 10. scss 文件进行条件渲染&lt;/h2&gt; &lt;p&gt;在 &lt;code&gt;.scss&lt;/code&gt; 文件中进行 uni-app 的条件渲染，必须为多行注释，如下：&lt;/p&gt; &lt;div class=&quot;language-css extra-class&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code&gt;&lt;span class=&quot;token comment&quot;&gt;/* #ifdef MP-WEIXIN */&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.u-btn&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; red &lt;span class=&quot;token important&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;/* #endif */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另外，如果在 &lt;code&gt;.vue&lt;/code&gt; 中的 &lt;code&gt;style&lt;/code&gt; 标签，则无论使用单行注释还是多行注释，都是有效的。&lt;/p&gt; &lt;h2 id=&quot;_11-方法名不能与生命周期名字冲突&quot;&gt;&lt;a href=&quot;#_11-方法名不能与生命周期名字冲突&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 11. 方法名不能与生命周期名字冲突&lt;/h2&gt; &lt;p&gt;如题，写在 &lt;code&gt;methods&lt;/code&gt; 下的方法名字不要与生命周期一致，否则会出现错误，这里的生命周期包括：&lt;/p&gt;  &lt;h2 id=&quot;_12-调试-uview-组件&quot;&gt;&lt;a href=&quot;#_12-调试-uview-组件&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 12. 调试 uView 组件&lt;/h2&gt; &lt;p&gt;如果使用 uView 组件过程中遇到莫名其妙的问题，建议使用断点调试，可帮助你快速定位问题。&lt;/p&gt; &lt;p&gt;举个例子，想看看  &lt;code&gt;u-tabs-swiper&lt;/code&gt;  组件的某个方法执行过程，可以到  &lt;code&gt;node_modules/uview-ui/components/u-tabs-swiper/u-tabs-swiper.vue&lt;/code&gt; ，找到你想调试的方法，打个断点：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728093759.png&quot; alt=&quot;&quot;/&gt;然后在浏览器刷新，进行某些操作以便触发你想调试的方法，然后就可以进行断点调试了：&lt;/p&gt; &lt;p&gt;遗憾的是 uni-app 的自带组件，虽然也可以在 node-module 目录下找到对应的源码位置，但因为是预编译好的，所以进行修改无效，自然也不能打断点。&lt;/p&gt; &lt;p&gt;大部分 uni-app 的组件都在： &lt;code&gt;node_modules/@dcloudio/uni-h5/src&lt;/code&gt; 下。&lt;/p&gt; &lt;p&gt;&lt;strong&gt;核心要点：当组件莫名其妙地表现不正常时，别忘了使用断点调试。&lt;/strong&gt;&lt;/p&gt; &lt;h2 id=&quot;_13-swipeaction-组件无法自动隐藏按钮&quot;&gt;&lt;a href=&quot;#_13-swipeaction-组件无法自动隐藏按钮&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 13. SwipeAction 组件无法自动隐藏按钮&lt;/h2&gt; &lt;h3 id=&quot;问题描述-4&quot;&gt;&lt;a href=&quot;#问题描述-4&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 问题描述&lt;/h3&gt; &lt;p&gt;在使用 SwipeAction 组件时，发现在小程序端下的「点击收藏按钮后隐藏按钮」功能不正常，在官方示例程序也可复现该问题：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728094505.gif&quot; alt=&quot;img&quot;/&gt;&lt;/p&gt; &lt;p&gt;但实际上在 H5 端它是正常的：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728094538.gif&quot; alt=&quot;img&quot;/&gt;&lt;/p&gt; &lt;p&gt;深入分析源码后，发现点击收藏按钮时，&lt;code&gt;btnClick&lt;/code&gt; 和 &lt;code&gt;touchend&lt;/code&gt; 两个方法的执行顺序在 H5 和 小程序端中表现不一致，分别在两个方法中加入 &lt;code&gt;console.log&lt;/code&gt;，运行结果是：&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;p&gt;H5&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728094614.png&quot; alt=&quot;img&quot;/&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;MP-WEIXIN&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728094625.png&quot; alt=&quot;img&quot;/&gt;&lt;/p&gt; &lt;p&gt;而之所以在小程序端运行异常， 就是因为先执行了 &lt;code&gt;btnClick&lt;/code&gt; 方法，而 &lt;code&gt;btnClick&lt;/code&gt; 内部将 &lt;code&gt;this.status = false&lt;/code&gt;，导致随后执行 &lt;code&gt;touchend&lt;/code&gt; 时进入了错误的条件分支。&lt;/p&gt; &lt;h3 id=&quot;解决方案-6&quot;&gt;&lt;a href=&quot;#解决方案-6&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 解决方案&lt;/h3&gt; &lt;p&gt;这问题怎么解决？在不修改组件源代码的时候下，只能使用下面这种方式 HACK：&lt;/p&gt; &lt;div class=&quot;language- extra-class&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code&gt;methods: {
    click(index, index1) {
      if (index1 == 1) {
        this.list.splice(index, 1)
        this.$u.toast(`删除了第${index}个cell`)
      } else {
        // #ifdef MP-WEIXIN
        /**
         * HACK: 在 MP-WEIXN 表现异常，为避免被覆盖，需要过一段时间再更新值
         * @see https://github.com/YanxinNet/uView/issues/761
         */
        setTimeout(() =&amp;gt; {
          this.list[index].show = false
        }, 100)
        // #endif
        // #ifndef MP-WEIXIN
        this.list[index].show = false
        // #endif
        this.$u.toast(`收藏成功`)
      }
    },
  },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;已向 uView 提 issue：https://github.com/YanxinNet/uView/issues/761&lt;/p&gt; &lt;h2 id=&quot;_14-ios-底部空白安全区域&quot;&gt;&lt;a href=&quot;#_14-ios-底部空白安全区域&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 14. IOS 底部空白安全区域&lt;/h2&gt; &lt;p&gt;子页面在 IOS 会出现一个空白的安全区域，可以通过修改 &lt;code&gt;manifest.json&lt;/code&gt; 禁用它：&lt;/p&gt; &lt;div class=&quot;language-json extra-class&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;app-plus&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;safearea&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;bottom&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;offset&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;none&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考文档：&lt;a href=&quot;https://ask.dcloud.net.cn/article/35564&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;uni-app 全面屏、刘海屏适配（iphoneX适配）及安全区设置&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2 id=&quot;_15-app-端锁定屏幕方向&quot;&gt;&lt;a href=&quot;#_15-app-端锁定屏幕方向&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 15. APP 端锁定屏幕方向&lt;/h2&gt; &lt;p&gt;通过 &lt;code&gt;manifest.json&lt;/code&gt; 的 &lt;a href=&quot;https://uniapp.dcloud.io/collocation/manifest?id=distribute&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;orientation&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt; 选项可以进行横竖屏配置：&lt;/p&gt; &lt;div class=&quot;language-json extra-class&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;distribute&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;orientation&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;portrait-primary&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但如果在测试基座， 以上选项会失效，所以最保险的方式是在 &lt;code&gt;APP.vue&lt;/code&gt; 中进行配置：&lt;/p&gt; &lt;div class=&quot;language-javascript extra-class&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;onLaunch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// #ifdef APP-PLUS&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 锁定竖屏&lt;/span&gt;
    plus&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;screen&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;lockOrientation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#x27;portrait-primary&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// #endif&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用该 API 还可以实现仅允许特定页面旋转方向，关于更多可见：&lt;a href=&quot;https://www.html5plus.org/doc/zh_cn/device.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;HTML+ API Reference&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;关于屏幕旋转的更多可参考：&lt;/p&gt;  &lt;h2 id=&quot;_16-ubutton-自定义样式&quot;&gt;&lt;a href=&quot;#_16-ubutton-自定义样式&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 16. uButton 自定义样式&lt;/h2&gt; &lt;p&gt;根据 uView &lt;a href=&quot;https://uviewui.com/components/button.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;文档&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt; 说明，如果想要给 button 自定义样式，为了兼容小程序，则要在组件中传递 &lt;code&gt;custom-style&lt;/code&gt; 属性，也就意味着需要把 CSS 写在 JS 中，这不是我们想要的，毕竟这样就无法使用 Scss 中的变量了。&lt;/p&gt; &lt;p&gt;为什么要这么麻烦呢？因为在小程序端，原本是一层的元素，被它搞成两层了，所以我们传递过去的 class 属性只应用在外层，而内层才是真正 button。&lt;/p&gt; &lt;p&gt;举个例子：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;test-page&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;u-button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;btn&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;按钮&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;u-button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;scss&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;span class=&quot;token language-css&quot;&gt;
&lt;span class=&quot;token selector&quot;&gt;.test-page&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token selector&quot;&gt;.btn&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; red&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以上代码在 H5 的表现是正常的：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728094742.png&quot; alt=&quot;&quot;/&gt;
但在小程序的表现却是这样的：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728094757.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;如果想 CSS 层面解决该问题，那就是都将它们都作为选择器即可：&lt;/p&gt; &lt;div class=&quot;language-diff extra-class&quot;&gt;&lt;pre class=&quot;language-diff&quot;&gt;&lt;code&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;template&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;view class=&quot;test-page&quot;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   &amp;lt;u-button class=&quot;btn&quot;&amp;gt;按钮&amp;lt;/u-button&amp;gt;
&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;/view&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/template&amp;gt;
&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;style lang=&quot;scss&quot;&amp;gt;
&lt;/span&gt;&lt;/span&gt;.test-page {
&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; .btn {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    &amp;amp;,
&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    button {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     color: red;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; }
&lt;/span&gt;&lt;/span&gt;}
&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/style&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;虽然看上去很丑，但能 work，且兼容性较好，所以推荐使用该方式。&lt;/p&gt; &lt;h2 id=&quot;_17-ubutton-无法自定义-hover-class&quot;&gt;&lt;a href=&quot;#_17-ubutton-无法自定义-hover-class&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 17. uButton 无法自定义 hover-class&lt;/h2&gt; &lt;p&gt;根据 uView &lt;a href=&quot;https://uviewui.com/components/button.html&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;文档&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt; 说明，Button 组件有 hover-class 属性，可自定义 hover 时的 class，但实际使用并无效果，查看源代码后发现代码存在问题。&lt;/p&gt; &lt;p&gt;目前 GitHub 上已有人指出该问题，但维护者仍未处理：&lt;/p&gt;  &lt;p&gt;在不修改原组件的情况下，只能通过强制覆盖它默认的 hover-class 的样式来解决该问题：&lt;/p&gt; &lt;div class=&quot;language-vue extra-class&quot;&gt;&lt;pre class=&quot;language-vue&quot;&gt;&lt;code&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;test-page&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;u-button&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;btn&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;退出登录&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;u-button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;scss&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;span class=&quot;token language-css&quot;&gt;
&lt;span class=&quot;token selector&quot;&gt;.test-page&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token selector&quot;&gt;// HACK: 由于 uButton 的 hover-class 传递无效，暂时只能通过该方式自定义
  /deep/ .btn&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token selector&quot;&gt;&amp;amp;.u-default-hover,
    // 兼容小程序
    button.u-default-hover&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; white &lt;span class=&quot;token important&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$color-primary&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0.8&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token important&quot;&gt;!important&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意：&lt;/p&gt; &lt;ol&gt;&lt;li&gt;为了避免影响其它 button，需要限制选择器范围&lt;/li&gt; &lt;li&gt;class 不一定是 &lt;code&gt;u-default-hover&lt;/code&gt; ，可以自行测试该 button hover 时实际使用哪个 class&lt;/li&gt; &lt;li&gt;兼容小程序那里详见：&lt;a href=&quot;#9WQn6&quot;&gt;18. uButton 自定义样式&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt; &lt;h2 id=&quot;_18-uni-app-只能在-main-js-注册全局组件&quot;&gt;&lt;a href=&quot;#_18-uni-app-只能在-main-js-注册全局组件&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 18. uni-app 只能在 main.js 注册全局组件&lt;/h2&gt; &lt;h3 id=&quot;问题描述-5&quot;&gt;&lt;a href=&quot;#问题描述-5&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 问题描述&lt;/h3&gt; &lt;p&gt;在开发过程中，不可避免需要注册一些全局组件，为了方便管理，我们希望放到一个单独的文件中进行管理，类似下面这样：&lt;/p&gt; &lt;div class=&quot;language-javascript extra-class&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;token comment&quot;&gt;// src/plugins/element.js&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; BasicLayout &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;@/layouts/basic&#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; FullLoading &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;@/components/full-loading&#x27;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function-variable function&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    Vue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#x27;BasicLayout&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; BasicLayout&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    Vue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#x27;FullLoading&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; FullLoading&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// src/main.js&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; element &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;./plugins/element&#x27;&lt;/span&gt;

Vue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;element&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这也是在开发 Vue 项目时常用的方案，但这在微信小程序端会运行异常，根本没有注册到全局组件。&lt;/p&gt; &lt;p&gt;但如果将注册全局组件的工作放到 &lt;code&gt;main.js&lt;/code&gt; ，则是可以正常运行的：&lt;/p&gt; &lt;div class=&quot;language-javascript extra-class&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; element &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;./plugins/element&#x27;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;/**
 * FIXME: 因不明原因，在 main.js 外的文件注册全局组件会导致组件在 mp-weixin 端表现不正常
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; BasicLayout &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;@/layouts/basic&#x27;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; FullLoading &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#x27;@/components/full-loading&#x27;&lt;/span&gt;

Vue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#x27;BasicLayout&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; BasicLayout&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
Vue&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#x27;FullLoading&#x27;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; FullLoading&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该问题也早就有人提出过，但至今仍未看到官方团队有所回应，可见：&lt;/p&gt;  &lt;p&gt;而在 uni-app 官方文档的 &lt;a href=&quot;https://uniapp.dcloud.io/use?id=%e5%85%a8%e5%b1%80%e7%bb%84%e4%bb%b6&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;全局组件&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt; 是这样描述的：
&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728094913.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;虽然说了文档需在 &lt;code&gt;main.js&lt;/code&gt; 中进行全局注册，但根据我们以往对 Vue 的认知，这个工作是可以放到外部文件去的，而 uni-app 也没有明确指出一定只能在 &lt;code&gt;main.js&lt;/code&gt; 进行注册全局组件，这就造成不少用户困扰。&lt;/p&gt; &lt;p&gt;虽然集中在 &lt;code&gt;main.js&lt;/code&gt; 注册全局组件也并不是不能接受，但我们需要知道背后的原因，为什么在外部文件注册就无效？&lt;/p&gt; &lt;p&gt;本文就来一探究竟，了解背后真正的原因。&lt;/p&gt; &lt;h3 id=&quot;结论先行&quot;&gt;&lt;a href=&quot;#结论先行&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 结论先行&lt;/h3&gt; &lt;p&gt;先说结论，说白了就是 uni-app 转换小程序代码时，检测全局组件的方式是通过静态分析 &lt;code&gt;main.js&lt;/code&gt; 文件，所以在其他文件注册全局组件的话，uni-app 就无法得知了。&lt;/p&gt; &lt;p&gt;如果想知道更多细节，欢迎继续往下阅读 👇&lt;/p&gt; &lt;h3 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 问题分析&lt;/h3&gt; &lt;p&gt;首先，我们来看一下在 &lt;code&gt;main.js&lt;/code&gt; 注册全局组件时，生成的微信小程序端 &lt;code&gt;pages.json&lt;/code&gt; 的 &lt;code&gt;usingComponents&lt;/code&gt; :&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728094944.png&quot; alt=&quot;&quot;/&gt;
很明显这是正常的，那我们再看看如果放在外部文件注册全局组件的话，它是空的：
&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728094951.png&quot; alt=&quot;&quot;/&gt;
所以，问题肯定是发生在 uni-app 转换为小程序的过程中，下面就来定位 uni-app 的源码，看看究竟是什么情况。&lt;/p&gt; &lt;p&gt;但问题是，我们并不知道这部分代码在哪个位置，根本不知道从何看起？？&lt;/p&gt; &lt;p&gt;别着急，既然我们关心的代码是与 &lt;code&gt;usingComponents&lt;/code&gt; 的赋值相关的，那我们可以试试在 &lt;code&gt;node_modules/@dcloudio&lt;/code&gt; 搜索关键词 &lt;code&gt;usingComponents =&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728095001.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;可以看到结果比较多，我们快速扫一眼，发现几个比较可疑的：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728095014.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;那我们的做法就是进入这几个文件，分别添加一行 &lt;code&gt;console.log&lt;/code&gt; ，以文件名为区分：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728095027.png&quot; alt=&quot;&quot;/&gt; ，如果执行了这个文件，就会打印对应的值：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728095039.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;注意：笔者这时候是把全局组件注册放在 &lt;code&gt;main.js&lt;/code&gt; 中&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;很明显，我们运气不错，这个 &lt;a href=&quot;https://github.com/dcloudio/uni-app/blob/master/packages/webpack-uni-mp-loader/lib/main-new.js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;main-new.js&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt; 应该就是我们想要的代码，下面我们就来看看 &lt;code&gt;components&lt;/code&gt; 这个值到底是怎么出来的， &lt;code&gt;components&lt;/code&gt; 的定义在 &lt;a href=&quot;https://github.com/dcloudio/uni-app/blob/master/packages/webpack-uni-mp-loader/lib/main-new.js#L84&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;第 84 行&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728095053.png&quot; alt=&quot;&quot;/&gt;
可以看到， &lt;code&gt;components&lt;/code&gt; 是根据传入 &lt;code&gt;content&lt;/code&gt; 到 &lt;code&gt;traverse()&lt;/code&gt; 方法后得到的，我们先来打印一下 &lt;code&gt;content&lt;/code&gt;（为避免干扰，可以先把之前的 console.log 去掉），然后我们看到以下：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728095103.png&quot; alt=&quot;&quot;/&gt;
可以看到这是 &lt;code&gt;main.js&lt;/code&gt; 的内容，难道是通过解析这个文件的内容得到全局组件的？&lt;/p&gt; &lt;p&gt;我们还是看一下它给 &lt;code&gt;traverse()&lt;/code&gt; 传递的参数，发现是一个通过 babel 解析后的 AST 树：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728095113.png&quot; alt=&quot;&quot;/&gt;
然后我们再看看 &lt;code&gt;traverse()&lt;/code&gt; 内部，在 &lt;a href=&quot;https://github.com/dcloudio/uni-app/blob/master/packages/webpack-uni-mp-loader/lib/babel/global-component-traverse.js&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;global-component-traverse.js&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728095125.png&quot; alt=&quot;&quot;/&gt;
那看来的确如此，但这时候我还有一个疑问：&lt;strong&gt;上面只是说明 uni-app 是通过静态解析文件内容得到全局组件，那为什么不可以针对其它文件进行解析呢？&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;我们看到其实 &lt;code&gt;content&lt;/code&gt; 是从外部传入的，也就是说是别的文件传入了 &lt;code&gt;main.js&lt;/code&gt; 的内容：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728095125.png&quot; alt=&quot;&quot;/&gt;
于是搜索当前文件的引用，一路顺藤摸瓜，找到起始的入口，它确实是只针对 &lt;code&gt;main.js&lt;/code&gt; 进行解析，在 &lt;a href=&quot;https://github.com/dcloudio/uni-app/blob/master/packages/vue-cli-plugin-uni/lib/mp/index.js#L112&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;vue-cli-plugin-uni/lib/mp/index.js&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; aria-hidden=&quot;true&quot; focusable=&quot;false&quot; x=&quot;0px&quot; y=&quot;0px&quot; viewbox=&quot;0 0 100 100&quot; class=&quot;icon outbound&quot;&gt;&lt;path fill=&quot;currentColor&quot; d=&quot;M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z&quot;/&gt; &lt;polygon fill=&quot;currentColor&quot; points=&quot;45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9&quot;/&gt;&lt;/svg&gt; &lt;span class=&quot;sr-only&quot;&gt;(opens new window)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;：&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://gd4ark-1258805822.cos.ap-guangzhou.myqcloud.com/images/20210728095253.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;p&gt;到此为止，我们已经知道为什么 uni-app 只能在 &lt;code&gt;main.js&lt;/code&gt; 才能注册全局组件，而其它文件无效了。&lt;/p&gt; &lt;h2 id=&quot;写在最后&quot;&gt;&lt;a href=&quot;#写在最后&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 写在最后&lt;/h2&gt; &lt;p&gt;最后还是得心平气和地评价几句，虽然在使用 uni-app 开发过程中踩了不少的坑，心里也曾不止一次有十万个草泥马奔腾而过，但是不可否认这么一个开发跨平台应用的前端框架来说，它做的还是有值得称赞的地方，至少从生态上面就足以秒杀其它同样是 Vue 语法的开发跨平台框架。&lt;/p&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>