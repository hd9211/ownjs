<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>7ba4447a5cbc7601fd623a2369662682</guid>
<title>腾讯一面：CORS为什么能保障安全？为什么只对复杂请求做预检？</title>
<link>https://toutiao.io/k/quomj0f</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是Peter！提起CORS，大部分的文章都在写什么是简单请求、什么是复杂请求，复杂请求预检的流程又是怎样。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但如果问你：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;CORS为什么要带上源，这是为了保障当前站点的安全还是目的服务器的安全？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么区分简单请求和复杂请求，只对复杂请求做预检？&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这篇文章会围绕CORS是如何保障安全的的，讲清这几个问题。读完可以对CORS知其然，并知其所以然。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;什么是CORS&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相信每个前端的控制台都中都被打印过这样一段话，告诉你：你的跨域请求策略拦截啦！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.39217252396166136&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/cpWiaicnZTauaRgdAib2PSGgqBMLjZq5Wewsk7T8blKNh4EFIwETFEicuzZqsfSoqgicVb7cA65kIrYhFlibLP1NMGiag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1252&quot;/&gt;首先要明确的一点，CORS的目的不是拦截请求，反倒是为了让其能正常请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CORS诞生的背景是「同源策略」。这是一个相当严苛的规定，它禁止了跨域的AJAX请求。但实际的开发中又有这样的需求，于是开一个口子——只要配置了CORS的对应规则，跨域请求就能正常进行。这也正和CORS的名字对应起来了——「跨域资源共享」，就是为了能让跨域请求在「同源策略」的大背景下进行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回到上面提到控制台报错，这不是阻止你做跨域请求，而是提示你：因为没有按照CORS要求做配置，不得不暂时拦截。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;怎样配置CORS&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上文讲清了，只要按照CORS要求做配置，就能突破同源策略的限制，下面将会讲述如何配置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这部分不需要前端操心，完全后端来做：在响应头里面加一个字段&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;（允许请求的来源），这个值要把前端的源包含进去。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;举个例子：请求的后端接口是&lt;code&gt;http://fe_nian&lt;/code&gt;，你本地正在开发前端工程跑在8080端口。那么后端会在响应头里加上&lt;code&gt;Access-Control-Allow-Origin:*&lt;/code&gt;来允许&lt;code&gt;http://localhost:8080&lt;/code&gt;这个源去做跨域请求，因为&lt;code&gt;*&lt;/code&gt;是所有的意思。&lt;/p&gt;&lt;/blockquote&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;跨域请求的流程&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CORS把请求分成简单请求和复杂请求，划分的依据是“是否会产生副作用”。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;简单贴一下定义，同时满足下面这两个条件的是简单请求&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;请求方法是HEAD/GET/POST&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;请求体的文件类型只能是form-urlencoded、form-data、text/plain（这类文章很多，不再赘述，可以看阮一峰-跨域资源共享）&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于简单请求，流程如下：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46904315196998125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/cpWiaicnZTauaRgdAib2PSGgqBMLjZq5WewdCaZAPVHWUm0oQw0JsicnMqzSksOHNC3l2KnwicU1SdIkXfBvbRaI2fA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1066&quot;/&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;浏览器发起请求，并且自动加上请求的来源&lt;code&gt;origin&lt;/code&gt;给服务器检查；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;服务器返回数据，并返回检查结果，配置CORS响应头；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;浏览器检查CORS响应头，如果包含了当前的源则放行，反之拦截；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里需要注意，浏览器是拦截响应，而不是拦截请求，跨域请求是发出去的，并且服务端做了响应，只是浏览器拦截了下来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于复杂请求，整个流程如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6577060931899642&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/cpWiaicnZTauaRgdAib2PSGgqBMLjZq5Wew6fdpavWLd0xyAWkGicYNVby3nezXQ0v5GQxdgewJnRFeibZRrR82ynQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1116&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;浏览器发起预检请求，带上请求的来源&lt;code&gt;origin&lt;/code&gt;，不包含请求体；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;服务器返回检查结果，配置CORS头；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;浏览器发起真正请求；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;浏览器返回数据；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;浏览器会检查第2步中拿到的CORS头，如果没有包含当前的源，后续的第3、4步都不会进行，也就是不会发起真正请求。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;为什么要带上源&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CORS给开发带来了便利，同时也带来了安全隐患——CSRF攻击。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它的基本流程如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7623762376237624&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/cpWiaicnZTauaRgdAib2PSGgqBMLjZq5WewpicDVS1cMTQiclT0BCA4w7UFS0piaPsMpYtJz4q7UKYdkXGDmDcvPYN8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1212&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用户登录受害网站，把获取的身份凭证保存在浏览器的cookie中。也就是上图流程的①②③；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用户用同一浏览器打开黑客网站，黑客网站向受害网站服务器发起一个恶意请求，这时浏览器会自动从cookie中取出身份凭证，把它带上。也就是上图的④⑤；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;受害网站服务端发现有身份凭证，恶意请求被成功受理；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果严格按照同源政策，第2步的跨域请求不能进行的，也就不会造成危害。所以CORS策略的心智模型是：所有跨域请求都是不安全的，浏览器要带上来源给服务器检验。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果做过服务端开发，应该知道，服务端不存在跨域一说，去获取另一个服务器的资源是再顺畅不过的事情。因为服务端不像浏览器一样，作为“容器”存贮着用户身份凭证——也就是上面的第1步发生的事情，它去做跨域请求没有这样的风险。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;为什么只对复杂请求做预检&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上文提到，划分简单请求和复杂请求的依据是“是否产生副作用”。这里的副作用指对数据库做出修改：使用GET请求获取新闻列表，数据库中的记录不会做出改变，而使用PUT请求去修改一条记录，数据库中的记录就发生了改变。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于简单请求，浏览器只会在请求头加上一个&lt;code&gt;origin&lt;/code&gt;字段标识请求来源；对于非简单请求，浏览器会先发出一个预检请求，获得肯定回答后才会发送真正的请求，下面会讲清楚为什么这么做。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以假设网站被CSRF攻击了——黑客网站向银行的服务器发起跨域请求，并且这个银行的安全意识很弱，只要有登录凭证cookie就可以成功响应：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;黑客网站发起一个GET请求，目的是查看受害用户本月的账单。银行的服务器会返回正确的数据，不过影响并不大，而且由于浏览器的拦截，最后黑客也没有拿到这份数据；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;黑客网站发起一个PUT请求，目的是把受害用户的账户余额清零。浏览器会首先做一次预检，发现收到的响应并没有带上CORS响应头，于是真正的PUT请求不会发出；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;幸好有预检机制，否则PUT请求一旦发出，黑客的攻击就成功了。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;结语&lt;/span&gt;&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;回到开头的两个问题，不难得出答案：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;对于跨域请求带上请求来源，是为了防止CSRF攻击；浏览器的心智模型是：跨域请求都是不安全的，CORS的机制是为了保障请求目的服务器的安全；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;依据是否对服务器有副作用，划分了简单请求和复杂请求（但由于历史原因，表单POST请求也被划分成了简单请求），预检机制会把不安全的复杂请求拦截下来，避免对服务器造成危害，而简单请求通常不会对服务器的资源作出修改，即使发出危害不大。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果这篇文章对你有帮助，给我点个赞呗，这是我创作的动力～&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwODIwMDY2OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/sz_mmbiz_png/3GPT1CHiaSVssAs3fYdfweBskcYpVTrKpyGRwvSia0MOULHpGU8497uAkHic3CSPvqbr1BGQY45zoj0rvLexzLVVA/0?wx_fmt=png&quot; data-nickname=&quot;前端巅峰&quot; data-alias=&quot;Java-Script-&quot; data-signature=&quot;不止前端&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;点个在看更好！&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8abac3def174e898c3a3ca8a96f84351</guid>
<title>尤娜，我去面试了</title>
<link>https://toutiao.io/k/hvukye7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;h1&gt;&lt;span&gt;&lt;strong&gt;注意前情回顾&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486894&amp;amp;idx=1&amp;amp;sn=344b221975495bc6e4a2246fe3e0a848&amp;amp;chksm=fafde700cd8a6e16e06e78397e2eb2e229d60335d9a8760072eff23f86fc1a88c1748a271f41&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;尤娜系统的第一次飞行中换引擎的架构垂直拆分改造&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;尤娜系统的第一次飞行中换引擎的架构垂直拆分改造&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;面试前几天&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;尤娜系统经过一次拆分改造，又过去几个月了。目前系统运行稳定。但是并未向尤娜所说的有其他业务接入。在《&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247485131&amp;amp;idx=1&amp;amp;sn=44e4255d78e53a0df58066c25d6f4dc4&amp;amp;chksm=fafdec65cd8a6573509b9bb25018827ae4cd1c00e44c9e5ea1c7c54ab6246d4ec023de51e072&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;提高用户体验的三种技术&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;提高用户体验的三种技术&lt;/strong&gt;&lt;/a&gt;》中，我印象最深的是说学习要学&lt;span&gt;一些工作中用&lt;/span&gt;&lt;span&gt;得&lt;span&gt;着的技术。&lt;/span&gt;&lt;span&gt;最近在梳理业务，很想了解自己的下游小B公司是怎么做的。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;自己通过对业务的观察有了初步的想法，很想确认一下。想想小B毕竟是我的好姐妹，我要去他们公司参观学习她应该不会拒绝吧。于是我约了小B来我家聚聚，顺便说出了自己的想法。没想到她跟我说了另外一件事。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;小B说出了当年上学的时候，小A把她床板坐塌了，她们大吵一架，之后她们一直再没说过话。这背后有个我不知道的原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那时临近毕业，有个大公司招聘一个出国进修2年，回国直接担当要职的岗位，只要一个人。当时有个专场招聘会，小A是陪小B去应聘的。小A在等小B排队走流程的时候，觉得来了都来了，等也是等，不如索性自己也试试。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结果，小A竟然成了那唯一的幸运儿。后来，那个公司的工作人员还特地打电话给小B告知结果，并表示觉得公司也很认可小B，只可惜名额只有一个。小B为了这个职位准备了很久，最终却被小A误打误撞取代了。她咽不下这口气。那天，小A把她床板坐塌了，她觉得小A肯定是故意的，就是处处针对她。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;小B说完，深深叹了口气。真诚的问我能不能去她公司，至少有一个好姐妹和她在一起，让她不再这样孤独。我很犹豫。小B看出来了，只说来不来没关系。正好我也想了解小B公司的系统逻辑，小B就找那个项目的人来找我聊一聊，走个面试的流程。如果我最终决定不想来，权当交流技术。&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;面试当天&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那天，我跟尤娜请了一下午的假，去了小B公司面试。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;面试官大概知道我和小B的关系，非常的客气。面试一开始让我做了自我介绍，面试官边听边不住地点头。然后问了我项目经历，因为我们是合作方，所以也聊&lt;/span&gt;&lt;span&gt;得&lt;span&gt;很多。&lt;/span&gt;&lt;span&gt;我给他画了我们系统架构：&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7907407407407407&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlib9yJ6ORVmdtlUH8PNRESkw5HY52K74iaQMfeM5LTvXCXb80a2HbtEibqKGdJicuydTe0xVH3x23XZsw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;540&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;他问我，如果&lt;/span&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247485702&amp;amp;idx=1&amp;amp;sn=79563d2f2d6a3e38d19459286ac26a6f&amp;amp;chksm=fafde3a8cd8a6abeec857f877d8c1353f2d959871c1634bf138103a7117abd9d5598d4b7ab84&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;kafka&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;kafka&lt;/strong&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;出现了故障，业务连续性怎么保证。我有点蒙，直接了当的问面试官什么是业务连续性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;面试官告诉我：&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486857&amp;amp;idx=1&amp;amp;sn=c95685a190e6e7d3fa6b8b9c7b5b5df9&amp;amp;chksm=fafde727cd8a6e31c2e6b2f00ca606135789545ebc46d029419cb3444f98c157749388e95d2f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;业务连续性&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;业务连续性&lt;/strong&gt;&lt;/a&gt;是计算机容灾技术的升华概念，一种由计划和执行过程组成的策略，其目的是为了保证企业包括生产、销售、市场、财务、管理以及其他各种重要的功能完全在内的运营状况百分之百可用。业务连续性是覆盖整个企业的技术以及操作方式的集合，其目的是保证企业信息流在任何时候以及任何需要的状况下都能保持业务连续运行。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我想了想，觉得这个概念和&lt;/span&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486632&amp;amp;idx=1&amp;amp;sn=7b443147ff6b4d10ab0c09ee6e1e1d73&amp;amp;chksm=fafde606cd8a6f109870d9ad2c47cc42497de5a0f18d84bcdb174d3bf13e49efe8b6bf1a27d2&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;稳定性、高可用、容灾容错和弹力设计&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;稳定性、高可用、容灾容错和弹力设计&lt;/strong&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;都是近义词。但是这五个词又有所侧重。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;我如实跟面试官说在尤娜系统中我还没有设计这块。如果让我设计的话，那我可以设计一个降级操作，如果kafka出现故障，降级http直连。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;面试官接着问：用kafka是为了解耦，这种降级不是又耦合了呢？高峰期压力怎么办呢？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我想了想说：可以在直连上采用限流操作，确保不对下游造成巨大的请求压力。虽然在降级时回归直连是有耦合，但不是强耦合。只有&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247484340&amp;amp;idx=1&amp;amp;sn=66ea4273b461fd994d3ce1186c82722a&amp;amp;chksm=fafde91acd8a600c47fbc8dab508027745d5e9fd37f722575fae2151c7c1098fad731aa28085&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;降级&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;降级&lt;/strong&gt;&lt;/a&gt;时使用，上下游之间的依赖仍然是&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247487034&amp;amp;idx=1&amp;amp;sn=76192e552b7a3ff6efcfc150e6becf2c&amp;amp;chksm=fafde494cd8a6d82abed8d8372e667009cf1de7a2de54913f0c0c81ad7036478e0b9b20dd9fb&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;弱依赖&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;弱依赖&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;面试官继续因势利导：那如果这时候流量很大，一大半的请求被&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247485297&amp;amp;idx=1&amp;amp;sn=e7882369e07e8a1e6d3b4cc7f89e087e&amp;amp;chksm=fafdeddfcd8a64c90c1915187ba1a6d4ae013b5f0ccedf68459b88585c022cb26420a3d91f7c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;限流&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;限流&lt;/strong&gt;&lt;/a&gt;。请求失败了怎么办呢？我顺着这个思想又想了补救方案。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这时候面试官语重心长的对我说：你的想法可以解决问题，但是同时会引入新的问题。这样整个架构设计就越来越复杂。而本身这个问题并不复杂，回到最初的问题：kafka出现故障，本身有&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247485188&amp;amp;idx=1&amp;amp;sn=3618568ba3bf9c396195d8e2c4e6723d&amp;amp;chksm=fafdedaacd8a64bca74024452fb88a56ff99aa6bcd9ae841fca1b91cbff40d4dd78698b09dcc&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;容灾机制&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;容灾机制&lt;/strong&gt;&lt;/a&gt;。我本身想问的是kafka的副本、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247484050&amp;amp;idx=1&amp;amp;sn=3e03ec648d7eebf88b5c857ab487c8dd&amp;amp;chksm=fafde83ccd8a612ac896c3e6176907d78f368a87db5cbface1a74736af72a3a1ca491293bd81&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;ISR&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;&lt;span&gt;ISR&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;、failover这些。尽量采用组件本身的容灾，也是一种领域的内聚。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;面试出来，觉得自己在架构设计中成长了一些。我没有直接回家，而是回到了公司找尤娜。我如实地把自己面试的经过以及小B的心结告诉了尤娜。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;尤娜叹了口气，说她一直知道这件事。在学校时小A就告诉了尤娜，并诉说了自己的纠结。小A当时有自己的苦衷，让尤娜不要告诉别人，哪怕是我。最后其实是尤娜和小A一起运用资源给小B争取了差不多的一个机会。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;尤娜说希望有天小A和小B能够打开心结。至于我，她尊重我的选择。我勾了勾她的鼻子，说：“我怎么舍得离开你。” 我俩相视一笑，今晚又是我们的闺蜜之夜。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;编者按&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我写这个系列，原本是【编程一生】用户群里有朋友提到想知道我们项目中具体是怎么做架构的。这个我没有授权是不能说的。说了也没有很强的普适性。但是想到我可以虚拟一个项目，诠释【架构不是设计出来，而是演进出来的】。通过人物的成长，读者也如同亲身经历了一个项目的各个成长期，从而增强架构底蕴。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;不管是面试有后门，还是合作方在面试中有优势，都是常见的社会现象，也不能一杆子敲定是好是坏。而面试中的问题是很多年前去阿里面试的真实面试题改编，请朋友们能够自己闭上眼睛自己思考一下这道题自己的思路是怎样的。欢迎留言一起探讨。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在尤娜系列的第一篇有朋友问为什么小A和小B到毕业一直没有说话，我其实心里有一整个故事架构蓝图。考虑到故事本身设计的反转性，当时没有明说。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;作为一个程序员出身，不管写程序还是写故事。逻辑都是最重要的，如果发现故事中有逻辑问题，很可能是个伏笔哦。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;另外，大家可能注意到故事中的人物都是女生。这也是我除了讲技术之外想塑造的另外一个主线。现在的很多电视剧、电影，明明讲的是女生的励志故事，具体事件中却是靠着男生的力量一步步向上爬。这并不反映社会现实。那也不是什么励志。希望本系列能掰正这些电视剧和电影对女生的误导。想活成自己想要的样子要靠自己，这一点男生女生没有什么不同。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong data-brushtype=&quot;text&quot;&gt;&lt;span&gt;编程一生&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;span&gt;因&lt;/span&gt;&lt;span&gt;为公众号平台更改了推送规则，如果不想错过内容，记得读完点一下“在看”，加个“星标”，这样每次新文章推送才会第一时间出现在你的订阅列表里。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486113&amp;amp;idx=1&amp;amp;sn=f3623b2cf257aa37ea83768fd4325762&amp;amp;chksm=fafde00fcd8a691928c66f7e484ab2b7f6fa7797dc32833a7f777bb4ebde58c010750f13c118&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;PDCA方法论&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;&lt;strong&gt;PDCA方法论&lt;/strong&gt;&lt;/a&gt;&lt;span&gt;，检查自己是否错过更新：&lt;/span&gt;&lt;span&gt;每周三晚上8点左右，我都会更新文章，如果你没有收到，记得点开【编程一生】公众号找一下(*^▽^*)&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>256d082ca913ddc6ec0e51227cb0660a</guid>
<title>选对圈子，一切都对了！</title>
<link>https://toutiao.io/k/nt2fuep</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;我爱程序员&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;developerWorks&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;我们的产品：《码农周刊》 http://manong.io/ 、《开发者头条》 http://toutiao.io/&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d85f2052b95534420dbfe2b05e84701f</guid>
<title>DataX 异构数据源离线同步</title>
<link>https://toutiao.io/k/7da2396</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI0OTYwNTQ4Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/nKovjAe6LrpVR0GEQn2UGOvBUCta35aF6ibVFvTR0fFPE83DrdKGl8v2sCTVbYNJPnun6Yftg1OAlMJ94kxzgyg/0?wx_fmt=png&quot; data-nickname=&quot;大数据生态&quot; data-alias=&quot;ApacheData&quot; data-signature=&quot;火爆数年的大数据圈，让很多人还没弄懂大数据是什么，就已然身处其中。该订阅号对大数据行业中的各个领域进行梳理，有助于业内人士了解大数据生态圈。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;DataX 版本：3.0&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Github主页地址：https://github.com/alibaba/DataX&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 简介&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DataX 是一个异构数据源离线同步工具，致力于实现包括关系型数据库(MySQL、Oracle等)、HDFS、Hive、ODPS、HBase、FTP 等各种异构数据源之间稳定高效的数据同步功能。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3037608486017358&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6Lrpb4ibexSw1my5zr5hERkjdpNZVLP99eS9ITiah0EBYDFLwMQDwc7McnAo3GFNJh5ibXkJ1QlfllSsbg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1037&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了解决异构数据源同步问题，DataX 将复杂的网状的同步链路变成了星型数据链路，DataX 作为中间传输载体负责连接各种数据源。当需要接入一个新的数据源的时候，只需要将此数据源对接到 DataX，便能跟已有的数据源做到无缝数据同步。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DataX 在阿里巴巴集团内被广泛使用，承担了所有大数据的离线同步业务，并已持续稳定运行了 N 年之久。目前每天完成同步 8w 多道作业，每日传输数据量超过 300TB。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. 架构&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.18576598311218334&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6Lrpb4ibexSw1my5zr5hERkjdpwQNvGVLBUdZ6BeBKym6v1U43wFOh8R1TJv7cyibYWe71bSyYOfxlxYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;829&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DataX 本身作为离线数据同步框架，采用 Framework + Plugin 架构的模式构建。将数据源读取和写入分别抽象为 Reader 和 Writer 插件，并纳入到整个同步框架中：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Reader：作为数据采集模块，负责数据源数据的采集，并将数据发送给 Framework。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Writer：作为数据写入模块，负责从 Framework 中不断的取数据，并将数据写入到目的端。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Framework：用于连接 Reader 和 Writer，作为两者的数据传输通道，并处理缓冲，流控，并发，数据转换等核心技术问题。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. 运行原理&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DataX 3.0 开源版本支持单机多线程模式完成同步作业运行，一个 DataX 作业生命周期的时序图如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.44788087056128295&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6Lrpb4ibexSw1my5zr5hERkjdpz8B5fVQibM68ROfQNNwn4617krTEvibUQqmVqqXJH4TQQXbJXdIbSD2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;873&quot;/&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;生成 Job：DataX 完成单个数据同步的作业称之为 Job。DataX 接收到一个 Job 之后，将启动一个进程来完成整个作业同步。Job 是单个作业的中枢管理节点，承担了数据清理、子任务切分(将单一作业计算转化为多个子 Task)、TaskGroup 管理等功能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Task 切分：Job 启动后，会根据不同的源端切分策略，将 Job 切分成多个小的 Task(子任务)，以便于并发执行。Task 是 DataX 作业的最小单元，每一个 Task 都会负责一部分数据的同步工作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;调度 Task：切分多个 Task 之后，Job 会调用 Scheduler，根据配置的并发数据量，将拆分成的 Task 重新组合为 TaskGroup (任务组)。每一个 TaskGroup 负责以一定的并发运行分配好的 Task。默认单个 TaskGroup 的并发数量为 5。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;运行 Task：每一个 Task 都由 TaskGroup 负责启动。Task 启动后，会固定启动 Reader—&amp;gt;Channel—&amp;gt;Writer 的线程来完成任务同步工作。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DataX 作业运行起来之后， Job 监控并等待多个 TaskGroup 任务的完成，等待所有 TaskGroup 任务完成后 Job 成功退出，否则异常退出。我们举一个具体的例子，假设用户提交了一个 DataX 作业，并且配置了 20 个并发，目的是将一个 100 张分表的 MySQL 数据同步到 Hive 里面。DataX 的调度决策思路是：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;DataX Job 根据分库分表切分成了 100 个 Task。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;配置 20 个并发，由于每个 TaskGroup 能并发处理 5 个 Task，所以需要分配 4 个 TaskGroup。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;4 个 TaskGroup 平分切分好 100 个 Task，每一个 TaskGroup 以 5 个并发来运行 25 个 Task。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. 插件体系&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过几年积累，DataX 目前已经有了比较全面的插件体系，主流的 RDBMS 数据库、NOSQL、大数据计算系统都已经接入。DataX 目前支持数据如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.204644412191582&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6Lrpb4ibexSw1my5zr5hERkjdpFca8tRMUC5fnzZuLdn61zveoxzrYOFiacSPIdbN0lrAfMSCibMsIArvw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;689&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DataX Framework 提供了简单的接口与插件交互，提供简单的插件接入机制，只需要任意加上一种插件，就能无缝对接其他数据源。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. 核心优势&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5.1 可靠的数据质量监控&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(1) 完美解决数据传输个别类型失真问题
DataX 旧版对于部分数据类型(比如时间戳)传输一直存在毫秒阶段等数据失真情况，新版本 DataX 3.0 已经做到支持所有的强数据类型，每一种插件都有自己的数据类型转换策略，让数据可以完整无损的传输到目的端。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(2) 提供作业全链路的流量、数据量运行时监控
DataX 3.0 运行过程中可以将作业本身状态、数据流量、数据速度、执行进度等信息进行全面的展示，让用户可以实时了解作业状态。并可在作业执行过程中智能判断源端和目的端的速度对比情况，给予用户更多性能排查信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(3) 提供脏数据探测
在大量数据的传输过程中，必定会由于各种原因导致很多数据传输报错(比如类型转换错误)，这种数据 DataX 认为就是脏数据。DataX 目前可以实现脏数据精确过滤、识别、采集、展示，为用户提供多种的脏数据处理模式，让用户准确把控数据质量大关！&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5.2 丰富的数据转换功能&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DataX 作为一个服务于大数据的 ETL 工具，除了提供数据快照搬迁功能之外，还提供了丰富数据转换的功能，让数据在传输过程中可以轻松完成数据脱敏，补全，过滤等数据转换功能，另外还提供了自动 groovy 函数，让用户自定义转换函数。详情请看 DataX3 的 transformer 详细介绍。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5.3 精准的速度控制&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还在为同步过程对在线存储压力影响而担心吗？新版本 DataX 3.0 提供了包括通道(并发)、记录流、字节流三种流控模式，可以随意控制你的作业速度，让你的作业在库可以承受的范围内达到最佳的同步速度。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5.4 强劲的同步性能&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DataX3.0 每一种读插件都有一种或多种切分策略，都能将作业合理切分成多个 Task 并行执行，单机多线程执行模型可以让 DataX 速度随并发成线性增长。在源端和目的端性能都足够的情况下，单个作业一定可以打满网卡。另外，DataX 团队对所有的已经接入的插件都做了极致的性能优化，并且做了完整的性能测试。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5.5 健壮的容错机制&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DataX 作业是极易受外部因素的干扰，网络闪断、数据源不稳定等因素很容易让同步到一半的作业报错停止。因此稳定性是DataX的基本要求，在DataX 3.0的设计中，重点完善了框架和插件的稳定性。目前DataX3.0可以做到线程级别、进程级别(暂时未开放)、作业级别多层次局部/全局的重试，保证用户的作业稳定运行。&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI0OTYwNTQ4Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/nKovjAe6LrpVR0GEQn2UGOvBUCta35aF6ibVFvTR0fFPE83DrdKGl8v2sCTVbYNJPnun6Yftg1OAlMJ94kxzgyg/0?wx_fmt=png&quot; data-nickname=&quot;大数据生态&quot; data-alias=&quot;ApacheData&quot; data-signature=&quot;火爆数年的大数据圈，让很多人还没弄懂大数据是什么，就已然身处其中。该订阅号对大数据行业中的各个领域进行梳理，有助于业内人士了解大数据生态圈。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1a6d0e147e77ca0de4e35a97ae672855</guid>
<title>测试用例的评审准则与常见问题</title>
<link>https://toutiao.io/k/4dpi6ts</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-source-line=&quot;1&quot;&gt;&lt;span&gt;在评价实施GJB5000二级/三级的组织的验证/确认过程域的时候，经常会发现测试用例设计存在诸多问题，具体表现在以下方面：&lt;/span&gt;&lt;/p&gt;&lt;ol data-source-line=&quot;3&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;用例沦为需求翻译工&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-source-line=&quot;5&quot;&gt;&lt;span&gt;测试用例设计并没有按照测试用例的编写要求，通过对需求的分析明确测试环境、前提条件，只是在操作步骤中把需求转述（或者说是翻译）甚至照搬过来，在预期的测试结果中也是如此。&lt;/span&gt;&lt;/p&gt;&lt;ol start=&quot;2&quot; data-source-line=&quot;7&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;测试方法模糊&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-source-line=&quot;9&quot;&gt;&lt;span&gt;测试用例设计根本看不出使用了什么测试方法。很多测试用例的输入数据明显可以使用等价类划分或者边界值分析方法的，也没有使用，在操作步骤中仍然像需求描述中说的那样——“输入0~5V电压值”。&lt;/span&gt;&lt;/p&gt;&lt;ol start=&quot;3&quot; data-source-line=&quot;11&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;缺少异常测试用例&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-source-line=&quot;13&quot;&gt;&lt;span&gt;软件不仅能正常地运行，遇到异常情况也能正确处理。测试也不仅要有正常测试用例，也要有异常测试用例。一般异常测试用例至少应占总测试用例的50%。而实际很多项目组设计的异常测试用例都很少，甚至一个没有。&lt;/span&gt;&lt;/p&gt;&lt;ol start=&quot;4&quot; data-source-line=&quot;15&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;测试用例对需求覆盖不全&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-source-line=&quot;17&quot;&gt;&lt;span&gt;这类问题包括：对某些功能需求的主要功能设计了测试用例，但是次要功能或者需求中的约束或异常处理没有设计测试用例；对于性能、可靠性、安全性等非功能需求中部分需求项没有设计测试用例。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;19&quot;&gt;&lt;span&gt;这些测试用例问题的出现，很大的原因是没有做好测试用例的评审。下面的测试用例评审准则，可以帮助你做好测试用例评审。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;21&quot;&gt;&lt;span&gt;测试用例通用评审准则&lt;/span&gt;&lt;/p&gt;&lt;ol data-source-line=&quot;23&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;功能、性能、接口以及可靠性、安全性等各种需求类型是否都设计了测试用例？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;是否分析了每个需求可能的异常情况并且设计了异常测试用例？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对于使用边界值分析的测试用例是否覆盖了所有已知的边界值或无效值？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;对于使用等价类划分的测试用例是否覆盖了所有有效等价类或无效等价类？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;测试用例是否覆盖所有的可靠性、安全性及性能需求？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;测试用例是否覆盖功能需求的所有功能点？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;测试所需的环境是否明确？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;测试的前提条件是否明确？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;测试步骤是否清楚？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;测试预期结果描述是否为可观察到的现象而不是逻辑判断得出的结论？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-source-line=&quot;34&quot;&gt;&lt;span&gt;这正是：&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;36&quot;&gt;&lt;strong&gt;&lt;span&gt;用例评审不能松，否则测试难成功&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-source-line=&quot;38&quot;&gt;&lt;strong&gt;&lt;span&gt;充分有效谈不上，需求漏测是大坑&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-source-line=&quot;40&quot;&gt;&lt;span&gt;参考书目：饿了么质量体系搭建实战，作者：张丙振，檀飞翔，出版社：机械工业出版社&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;h6 data-source-line=&quot;45&quot;&gt;&lt;span&gt;作者简介：王小双，长期从事GJB5000推广、实施、评价、改进的工作，创建《软件工程之思》微信公众号，一直在《软件工程之思》分享GJB5000、CMMI、软件工程的知识和感悟。现致力于GJB5000咨询以及软件过程改进、软件工程能力提升的研究工作。&lt;/span&gt;&lt;/h6&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                          
              &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                  &lt;p class=&quot;tips_global&quot; aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_title&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                    &lt;p role=&quot;option&quot; aria-labelledby=&quot;js_a11y_reward_qr_word js_a11y_comma js_a11y_reward_qr_title js_a11y_reward_qr_money&quot; aria-describedby=&quot;js_a11y_reward_qr_tips &quot; class=&quot;reward_tips&quot; id=&quot;js_a11y_reward_qr_word&quot;/&gt;
                  &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img alt=&quot;赞赏二维码&quot; class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                  &lt;p aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_tips&quot; class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                &lt;/div&gt;
                                              
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>