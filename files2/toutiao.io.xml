<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>810b220539785ee2355a4df72e1c341c</guid>
<title>华为鸿蒙 2.0，让我遇见未来 | 码农周刊第 318 期</title>
<link>https://toutiao.io/k/6rprzrd</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;华为鸿蒙 2.0，让我遇见未来 | 码农周刊第 318 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第318期（2020-09-16）&lt;/h2&gt;
        &lt;p&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=318&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3180&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_316.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=318&amp;amp;aid=19803&amp;amp;url=https%3A%2F%2Fwww.sheca.com%2Fassets%2Fwwx%2Fpage1.html%3Fsite%3Dkaifazhe02&quot; target=&quot;_blank&quot;&gt;SHECA 提供 SSL 证书一站式服务，为你的网络安全保驾护航，上海 CA 权威认证&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=318&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;深入讲解&lt;/p&gt;
        
        &lt;p&gt;业界实战&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;工作地点：成都 | 薪资：15-30K | 简历投递邮箱：xiexiaofang@huobi.com&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;持续更新&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;帮助大家有针对性地准备面试&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;用于播放特效动画的实现方案。具有高压缩率、硬件解码等优点。同时支持 iOS, Android, Web 平台。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;各有千秋&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;附 demo&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;收藏吧&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;经验分享&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;深入研究&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;教你用 Deployment 全搞定&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;程序员进阶系列&lt;/p&gt;
        
        &lt;p&gt;编程体系结构系列&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;看完这个视频你转头也写了一吨&lt;/p&gt;
        
        &lt;p&gt;类似微信的小程序&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;死磕Elasticsearch！&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 272620 即可&lt;/p&gt;
        
        &lt;p&gt;前端 Or NodeJs。喜欢造轮子的懒人&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 95159 即可&lt;/p&gt;
        
        &lt;p&gt;关于计算机很多很多好玩的，一些常见的使用技巧和案例，还有技术方面的&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 72425 即可&lt;/p&gt;
        
        &lt;p&gt;顺势而为; 在技术人的后场; 分享前沿「技术」和「思想」。&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 56624 即可&lt;/p&gt;
        
        &lt;p&gt;五分钟不刷心里发慌&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 378 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=318&amp;amp;aid=19870&amp;amp;url=https%3A%2F%2Fu.jd.com%2FDpNS3m&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/book_318.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;采访实录&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>35d48b9992bbcfe9dc543113743ed3dd</guid>
<title>5 分钟学会雪花算法 (Golang)</title>
<link>https://toutiao.io/k/8o2lqjo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;“&lt;/span&gt;&lt;p&gt;嗨，everybody，我是asong，这是我的第十二篇文章，今天给大家介绍一下雪花算法。介绍雪花算法是次要的，因为大家都太熟悉了，主要目的是推荐一下我的新系列。今天，我突发奇想，想创建一个新系列。这个系列主要是存储我们日常工作开发中使用的算法，比如雪花算法、哈希算法等等。网络上关于这些算法的知识还是很多的，但是很杂，想找一个算法很不容易，还要看各种各样的博客，五花八门的。所以我们现在的想法就是想将这些算法整理到一起，全部采用&lt;code&gt;go&lt;/code&gt;实现，并附带基础知识学习，代码说明这样的详细文档，这样我们想要学习一门新算法时，都可以在这里找到，如果没有也可以提交&lt;code&gt;issues&lt;/code&gt;一块完善。目前也是刚刚起步，现在只有雪花算法的代码文档，以后会慢慢完善起来的，有兴趣的小伙伴欢迎加入进来，我们一起完善。详情请看github说明：https://github.com/asong2020/go-algorithm。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;雪花算法背景&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;雪花算法产生的背景当然是&lt;code&gt;twitter&lt;/code&gt;高并发环境下对唯一ID生成的需求，得益于&lt;code&gt;twitter&lt;/code&gt;内部牛逼的技术，雪花算法能够流传于至今并且被广泛使用，是因为它有几个特点&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;能满足高并发分布式系统环境下ID不重复&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;生成效率高&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;基于时间戳，可以保证基本有序递增&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不依赖于第三方的库或者中间件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;生成的&lt;code&gt;id&lt;/code&gt;具有时序性和唯一性&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;雪花算法原理&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先来看一个图片吧，来源于网络：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3741258741258741&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/k5430ljpYPM3r3ZSwT6eibOK11Gib1toibP4mXmZibce5DQ4BHjJpJv2sjnw58OE8TaA9jDZyIed3P40x1XOKcuicIQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;572&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由图我们可以看出来，&lt;code&gt;snowFlake ID&lt;/code&gt;结构是一个64bit的&lt;code&gt;int&lt;/code&gt;型数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在二进制中最高位为1，表示的是负数，因为我们使用的&lt;code&gt;id&lt;/code&gt;应该都是整数，所以这里最高位应该是0。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;41位可以表示&lt;code&gt;2^41-1&lt;/code&gt;个数字，如果只用来表示正整数，可以表示的数值范围是：0 - (2^41 -1)，这里减去1的原因就是因为数值范围是从0开始计算的，而不是从1开始的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的单位是毫秒，所以41位就可以表示&lt;code&gt;2^41-1&lt;/code&gt;个毫秒值，这样转化成单位年则是&lt;code&gt;(2^41-1)/(1000 * 60 * 60 * 24 * 365) = 69&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里是用来记录工作机器的id。&lt;code&gt;2^10=1024&lt;/code&gt;表示当前规则允许分布式最大节点数为1024个节点。这里包括5位的&lt;code&gt;workerID&lt;/code&gt;和5位的&lt;code&gt;dataCenterID&lt;/code&gt;，这里其实可以不区分，但我下面的代码进行了区分。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来记录同毫秒内产生的不同id。12bit可以表示的最大正整数是&lt;code&gt;2^12-1=4095&lt;/code&gt;，即可以用&lt;code&gt;0,1,2,3,......4094&lt;/code&gt;这&lt;code&gt;4095&lt;/code&gt;个数字，表示同一机器同一时间戳(毫秒)内产生的4095个ID序号。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原理就是上面这些，没有什么难度吧，下面我们看代码如何实现：&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;go实现雪花算法&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. 定义基本常量&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先看代码，我们依次介绍：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; (&lt;br/&gt; workerIDBits =  &lt;span&gt;uint64&lt;/span&gt;(&lt;span&gt;5&lt;/span&gt;)  &lt;span&gt;// 10bit 工作机器ID中的 5bit workerID&lt;/span&gt;&lt;br/&gt; dataCenterIDBits = &lt;span&gt;uint64&lt;/span&gt;(&lt;span&gt;5&lt;/span&gt;) &lt;span&gt;// 10 bit 工作机器ID中的 5bit dataCenterID&lt;/span&gt;&lt;br/&gt; sequenceBits = &lt;span&gt;uint64&lt;/span&gt;(&lt;span&gt;12&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt; maxWorkerID = &lt;span&gt;int64&lt;/span&gt;(&lt;span&gt;-1&lt;/span&gt;) ^ (&lt;span&gt;int64&lt;/span&gt;(&lt;span&gt;-1&lt;/span&gt;) &amp;lt;&amp;lt; workerIDBits) &lt;span&gt;//节点ID的最大值 用于防止溢出&lt;/span&gt;&lt;br/&gt; maxDataCenterID = &lt;span&gt;int64&lt;/span&gt;(&lt;span&gt;-1&lt;/span&gt;) ^ (&lt;span&gt;int64&lt;/span&gt;(&lt;span&gt;-1&lt;/span&gt;) &amp;lt;&amp;lt; dataCenterIDBits)&lt;br/&gt; maxSequence = &lt;span&gt;int64&lt;/span&gt;(&lt;span&gt;-1&lt;/span&gt;) ^ (&lt;span&gt;int64&lt;/span&gt;(&lt;span&gt;-1&lt;/span&gt;) &amp;lt;&amp;lt; sequenceBits)&lt;br/&gt;&lt;br/&gt; timeLeft = &lt;span&gt;uint8&lt;/span&gt;(&lt;span&gt;22&lt;/span&gt;)  &lt;span&gt;// timeLeft = workerIDBits + sequenceBits // 时间戳向左偏移量&lt;/span&gt;&lt;br/&gt; dataLeft = &lt;span&gt;uint8&lt;/span&gt;(&lt;span&gt;17&lt;/span&gt;)  &lt;span&gt;// dataLeft = dataCenterIDBits + sequenceBits&lt;/span&gt;&lt;br/&gt; workLeft = &lt;span&gt;uint8&lt;/span&gt;(&lt;span&gt;12&lt;/span&gt;)  &lt;span&gt;// workLeft = sequenceBits // 节点IDx向左偏移量&lt;/span&gt;&lt;br/&gt; &lt;span&gt;// 2020-05-20 08:00:00 +0800 CST&lt;/span&gt;&lt;br/&gt; twepoch = &lt;span&gt;int64&lt;/span&gt;(&lt;span&gt;1589923200000&lt;/span&gt;) &lt;span&gt;// 常量时间戳(毫秒)&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面对这段代码的每一个常量进行解释：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;worerIDBits&lt;/code&gt;：这里就是对应上图中的10bit-工作机器id，我这里进行拆分了。这是其中5bit``worerIDBits`&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;dataCenterIDBits&lt;/code&gt;：这里就是对应上图中的10bit-工作机器id，我这里进行拆分了。这是其中5bit&lt;code&gt;dataCenterIDBits&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;sequenceBits&lt;/code&gt;：对应上图中的12bit的序列号&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;maxWorkerID&lt;/code&gt;：这里就是求最大，只不过我们采用了异或的方式，因为-1的二进制表示为1的补码，说通俗一点，这里其实就是&lt;code&gt;2^5-1&lt;/code&gt;，还不懂的同学，可以自己验证一下&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;maxDataCenterID&lt;/code&gt;：原理同上&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;maxSequence&lt;/code&gt;：原理同上&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;timeLeft&lt;/code&gt;：时间戳向左偏移量，这么你们可能不懂，看上面的图片，由右向左的偏移量是不是22，这么说你们懂了吗？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;dataLeft&lt;/code&gt;：原理同上，也是求偏移量的&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;workLeft&lt;/code&gt;：原理同上；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;twepoch&lt;/code&gt;：41bit的时间戳，单位是毫秒，这里我选择的时间是&lt;code&gt;2020-05-20 08:00:00 +0800 CST&lt;/code&gt;，这个ID一但生成就不要改了，要不会生成相同的ID。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. 定义&lt;code&gt;worker&lt;/code&gt;工作节点&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为这个是在分布式下使用的ID生成算法，所以我们要生成多个&lt;code&gt;worker&lt;/code&gt;，所以要把节点参数抽象出来。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Worker &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt; mu sync.Mutex&lt;br/&gt; LastStamp &lt;span&gt;int64&lt;/span&gt; &lt;span&gt;// 记录上一次ID的时间戳&lt;/span&gt;&lt;br/&gt; WorkerID &lt;span&gt;int64&lt;/span&gt; &lt;span&gt;// 该节点的ID&lt;/span&gt;&lt;br/&gt; DataCenterID &lt;span&gt;int64&lt;/span&gt; &lt;span&gt;// 该节点的 数据中心ID&lt;/span&gt;&lt;br/&gt; Sequence &lt;span&gt;int64&lt;/span&gt; &lt;span&gt;// 当前毫秒已经生成的ID序列号(从0 开始累加) 1毫秒内最多生成4096个ID&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码解释：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;mu sync.Mutex&lt;/code&gt;：添加互斥锁，确保并发安全性&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;LastStamp int64&lt;/code&gt;：记录上一次生成ID的时间戳&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;WorkerID int64&lt;/code&gt;：该工作节点的ID 对上图中的5bit workerID 一个意思&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;DataCenterID int64&lt;/code&gt;：原理同上&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Sequence int64&lt;/code&gt;：当前毫秒已经生成的id序列号(从0开始累加) 1毫秒内最多生成4096个ID&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3. 创建一个&lt;code&gt;worker&lt;/code&gt;对象&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;//分布式情况下,我们应通过外部配置文件或其他方式为每台机器分配独立的id&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;NewWorker&lt;/span&gt;&lt;span&gt;(workerID,dataCenterID &lt;span&gt;int64&lt;/span&gt;)&lt;/span&gt; *&lt;span&gt;Worker&lt;/span&gt;&lt;/span&gt;  {&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; &amp;amp;Worker{&lt;br/&gt;  WorkerID: workerID,&lt;br/&gt;  LastStamp: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  Sequence: &lt;span&gt;0&lt;/span&gt;,&lt;br/&gt;  DataCenterID: dataCenterID,&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里没有什么好解释的～～～。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4. 生成id&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先看代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(w *Worker)&lt;/span&gt; &lt;span&gt;getMilliSeconds&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;int64&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; time.Now().UnixNano() / &lt;span&gt;1e6&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(w *Worker)&lt;/span&gt;&lt;span&gt;NextID&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;(&lt;span&gt;uint64&lt;/span&gt;,error)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; w.mu.Lock()&lt;br/&gt; &lt;span&gt;defer&lt;/span&gt; w.mu.Unlock()&lt;br/&gt;&lt;br/&gt;&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; w.nextID()&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;(w *Worker)&lt;/span&gt;&lt;span&gt;nextID&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;(&lt;span&gt;uint64&lt;/span&gt;,error)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; timeStamp := w.getMilliSeconds()&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; timeStamp &amp;lt; w.LastStamp{&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;,errors.New(&lt;span&gt;&quot;time is moving backwards,waiting until&quot;&lt;/span&gt;)&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; w.LastStamp == timeStamp{&lt;br/&gt;&lt;br/&gt;  w.Sequence = (w.Sequence + &lt;span&gt;1&lt;/span&gt;) &amp;amp; maxSequence&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; w.Sequence == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;   &lt;span&gt;for&lt;/span&gt; timeStamp &amp;lt;= w.LastStamp {&lt;br/&gt;    timeStamp = w.getMilliSeconds()&lt;br/&gt;   }&lt;br/&gt;  }&lt;br/&gt; }&lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;  w.Sequence = &lt;span&gt;0&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt; w.LastStamp = timeStamp&lt;br/&gt; id := ((timeStamp - twepoch) &amp;lt;&amp;lt; timeLeft) |&lt;br/&gt;  (w.DataCenterID &amp;lt;&amp;lt; dataLeft)  |&lt;br/&gt;  (w.WorkerID &amp;lt;&amp;lt; workLeft) |&lt;br/&gt;  w.Sequence&lt;br/&gt;&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; &lt;span&gt;uint64&lt;/span&gt;(id),&lt;span&gt;nil&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码有点长，我先来依次解释一下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;getMilliSeconds()&lt;/code&gt;：封装的一个方法，用来获取当前的毫秒值&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;func (w *Worker)NextID() (uint64,error)&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个代码的内容没有什么，具体生成ID算法封装在&lt;code&gt;func (w *Worker)nextID() (uint64,error)&lt;/code&gt;这里了，这里不过是为了解藕作用；对了还有一个特别重要的地方，加锁、释放锁，这个步骤很重要。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;func (w *Worker)nextID() (uint64,error)&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里是真正的生成id代码了。分为几个步骤：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;获取当前时间戳，进行判断，要确保当前时间戳值大于上一次生成ID的时间戳，否则会出现重复。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果想等了，首先获取当前的当前毫秒已经生成的id序列号。这里你们可能没看懂，其实他等效于&lt;code&gt;if w.sequence++ &amp;gt; maxSequence&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;, 如果当前毫秒已经生成的id序列号溢出了，则需要等待下一毫秒，如果不等待，就会导致很多重复。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;我们在else里将&lt;code&gt;w.sequence&lt;/code&gt;置零了，这里解释一下，如果当前时间与工作节点上一次生成ID的时间不一致 则需要重置工作节点生成ID的序号。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;最后一步，比较重要，采用了或运算，这里的目的就是各部分的bit进行归位并通过按位或运算(就是这个‘|’)将其整合。&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;这个就是向左偏移的作用进行归位，而&lt;code&gt;|&lt;/code&gt;运算就是为了整合。可能大家还没懂，看下面这一张图片吧：&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.41496598639455784&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/k5430ljpYPM3r3ZSwT6eibOK11Gib1toibPyHE9uM3UPGfBuQD37SkdSAhfACqRy2guUs6DpvOs9O14ib0f8y1erwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;735&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;怎么样，是不是知道什么意思了。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5. 测试&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写好了代码，我们就来测试一下吧，这里我并发10000个&lt;code&gt;goroutine&lt;/code&gt;进行生成ID，存入到map，查看是否出现重复，来看代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;var&lt;/span&gt; wg sync.WaitGroup&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;  {&lt;br/&gt; w := idgen.NewWorker(&lt;span&gt;5&lt;/span&gt;,&lt;span&gt;5&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt; ch := &lt;span&gt;make&lt;/span&gt;(&lt;span&gt;chan&lt;/span&gt; &lt;span&gt;uint64&lt;/span&gt;,&lt;span&gt;10000&lt;/span&gt;)&lt;br/&gt; count := &lt;span&gt;10000&lt;/span&gt;&lt;br/&gt; wg.Add(count)&lt;br/&gt; &lt;span&gt;defer&lt;/span&gt; &lt;span&gt;close&lt;/span&gt;(ch)&lt;br/&gt; &lt;span&gt;//并发 count个goroutine 进行 snowFlake ID 生成&lt;/span&gt;&lt;br/&gt; &lt;span&gt;for&lt;/span&gt; i:=&lt;span&gt;0&lt;/span&gt; ; i &amp;lt; count ; i++ {&lt;br/&gt;  &lt;span&gt;go&lt;/span&gt; &lt;span&gt;&lt;span&gt;func&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;   &lt;span&gt;defer&lt;/span&gt; wg.Done()&lt;br/&gt;   id,_ := w.NextID()&lt;br/&gt;   ch &amp;lt;- id&lt;br/&gt;  }()&lt;br/&gt; }&lt;br/&gt; wg.Wait()&lt;br/&gt; m := &lt;span&gt;make&lt;/span&gt;(&lt;span&gt;map&lt;/span&gt;[&lt;span&gt;uint64&lt;/span&gt;]&lt;span&gt;int&lt;/span&gt;)&lt;br/&gt; &lt;span&gt;for&lt;/span&gt; i := &lt;span&gt;0&lt;/span&gt;; i &amp;lt; count; i++  {&lt;br/&gt;  id := &amp;lt;- ch&lt;br/&gt;  &lt;span&gt;// 如果 map 中存在为 id 的 key, 说明生成的 snowflake ID 有重复&lt;/span&gt;&lt;br/&gt;  _, ok := m[id]&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; ok {&lt;br/&gt;   fmt.Printf(&lt;span&gt;&quot;repeat id %d\n&quot;&lt;/span&gt;,id)&lt;br/&gt;   &lt;span&gt;return&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;// 将 id 作为 key 存入 map&lt;/span&gt;&lt;br/&gt;  m[id] = i&lt;br/&gt; }&lt;br/&gt; &lt;span&gt;// 成功生成 snowflake ID&lt;/span&gt;&lt;br/&gt; fmt.Println(&lt;span&gt;&quot;All&quot;&lt;/span&gt;, &lt;span&gt;len&lt;/span&gt;(m), &lt;span&gt;&quot;snowflake ID Get successed!&quot;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;验证结果：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;All &lt;span&gt;10000&lt;/span&gt; snowflake ID Get successed!&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好啦，这一篇文章到这里结束啦，雪花算法并没有我们想象的那么难，还是很好实现的，你学会了吗？没学会不要紧，下载源代码，再看一看，对你不是问题的～～～。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;GitHub：https://github.com/asong2020/go-algorithm    欢迎star 感谢各位～～～&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;朋友们，还记得我开头说的那些吗？有兴趣的欢迎加入进来呦，我们一起进步～～～。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结尾给大家发一个小福利吧，最近我在看[微服务架构设计模式]这一本书，讲的很好，自己也收集了一本PDF，有需要的小伙可以到自行下载。获取方式：关注公众号：[Golang梦工厂]，后台回复：[微服务]，即可获取。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;我翻译了一份GIN中文文档，会定期进行维护，有需要的小伙伴后台回复[gin]即可下载。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;我是asong，一名普普通通的程序猿，让我一起慢慢变强吧。我自己建了一个&lt;code&gt;golang&lt;/code&gt;交流群，有需要的小伙伴加我&lt;code&gt;vx&lt;/code&gt;,我拉你入群。欢迎各位的关注，我们下期见~~~&lt;/strong&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/k5430ljpYPM3r3ZSwT6eibOK11Gib1toibPvDUOqvQJIBcm6GlC7z7h7W0dAYV2gQOhkNR47MAlxfqDJm8blC6llQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;推荐往期文章：&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8dbf6a3e6bd631803cc0b4d8706b5879</guid>
<title>如何建立测试自动化策略？</title>
<link>https://toutiao.io/k/xtwnfoo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content custom&quot;&gt;&lt;p&gt;自动化意味着使用工具来更有效地执行特定的测试任务。因此，它不是手动测试还是自动测试，而是始终用来支持另一个。从开发人员和产品所有者到CTO，参与产品生命周期的每个人在开始讨论测试自动化时都应牢记这一点。
当实现自动化的想法穿过你的心，不要转移到如何部分马上; 相反，请关注为什么。为实现自动化而使用诸如以下参数的自动化&lt;/p&gt; &lt;div class=&quot;language- extra-class&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code&gt;听起来不错，所以一定不错；
另一家公司的人已经在使用它；
我们可以通过自动化测试覆盖100％的功能；
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;类似的推理通常被误认为是采用自动化测试的绿灯。同时，学习测试自动化策略对于那些想要缩短软件交付周期并为QA工程师留下不那么单调的任务的人来说是一个好主意。
如果您尚未决定目标，那就花点时间。您可以阅读该文章，稍后再返回优点和缺点清单。&lt;/p&gt; &lt;h2 id=&quot;测试自动化策略是…&quot;&gt;&lt;a href=&quot;#测试自动化策略是…&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 测试自动化策略是…&lt;/h2&gt; &lt;p&gt;…质量保证团队在质量保证过程中应用自动化的方式。如果您开始分解测试自动化策略，将获得一系列元素，看起来像这样：
手动和自动测试计划；
测试环境，包括定义和描述；&lt;/p&gt; &lt;div class=&quot;language- extra-class&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code&gt;测试用例;
自动化脚本；
测试数据;
检测结果;
执行日志。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;具有成本效益的测试自动化策略意味着以结果为导向的方法，该方法可以帮助公司紧跟市场趋势并保持领先，或者至少实现其雄心勃勃的业务目标。
每个项目都有特定的测试自动化计划和策略。即使在测试类似产品时，某些方面也需要进行调整。您可以使用相同的模板来创建测试自动化策略，但最终版本至少会稍有不同。&lt;/p&gt; &lt;h2 id=&quot;逐步测试自动化策略&quot;&gt;&lt;a href=&quot;#逐步测试自动化策略&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 逐步测试自动化策略&lt;/h2&gt; &lt;p&gt;因此，您已经知道高效的自动化始于设定目标。让我具体说明一下。目标定义了从长远角度来看要实现的目标，例如：
更好的产品质量，从而提高用户满意度；
减少人力和测试时间；
提高测试效率，同时降低测试成本。
目标更像是“一次一步”。这些是您必须完成以实现目标的较小任务。测试自动化的目标包括：
更广泛的测试范围；
创建易于运行和维护的测试；
每次迭代后提高产品质量；
改进的稳定性和可靠性；
提高质量检查工程师的效率和更好的动力。
如果您想获得列表中每个项目的详细说明，可以在我们博客中有关自动化测试目标的文章中找到。现在，让我们继续进行逐步说明。
&lt;img src=&quot;https://miro.medium.com/max/1400/1*JxWtAWQSSSEWp0XWG2QzFw.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;h2 id=&quot;建立测试自动化策略&quot;&gt;&lt;a href=&quot;#建立测试自动化策略&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 建立测试自动化策略&lt;/h2&gt; &lt;p&gt;＃1。选择要自动化的东西
设置测试自动化是一个非常耗时的过程，因此请考虑从短期和长期的角度计划实现的目标。设定合理的期望。
另外，请记住，选择合适的测试用例开始并不意味着您应该永远使用它们。这些测试在此阶段应该符合您的业务目标，但是随着软件的发展它们变得无关紧要，这是可以的。
现在，请考虑重复进行测试的频率及其需要的工作范围。在理想情况下，您将选择至少满足以下几个条件的测试：&lt;/p&gt; &lt;div class=&quot;language- extra-class&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code&gt;如果手动完成，则很耗时；
涉及大数据集；
涵盖稳定的软件组件；
需要在多个系统（浏览器，操作系统，硬件等）中进行检查；
平凡，不需要创造力；
具有清晰的通过/失败结果；
高度重复。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另一方面，某些测试不适合自动化。例如：&lt;/p&gt; &lt;div class=&quot;language- extra-class&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code&gt;将执行一次的测试；
基于视觉的测试；
测试没有明显的通过/失败结果；
反自动化功能，例如CAPTCHA；
原始和不稳定的功能。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我不建议自动化这些东西。该过程将花费很多时间，运行测试后得到的结果将不准确。例如，UX测试需要明确的人工输入和估计。探索性测试依赖于QA工程师的知识，经验，甚至直觉和偶然性。显然，手动检查在这里更为合理。
##确定测试方法&lt;/p&gt; &lt;p&gt;测试自动化方法定义了如何执行测试。一个积极的态度开始在SDLC的早期阶段测试设计过程。质量保证团队会在创建构建之前发现缺陷。在反应式方法中，测试在编码完成后开始。质量检查小组将检查应该准备发布的产品的初始版本。&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/1400/1*_lYHHbiCAAdDCKY8GdyeCw.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;h2 id=&quot;自动测试的类型&quot;&gt;&lt;a href=&quot;#自动测试的类型&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 自动测试的类型&lt;/h2&gt; &lt;p&gt;测试方法还涵盖团队要执行的测试类型。自动化的最常见候选者是：&lt;/p&gt; &lt;div class=&quot;language- extra-class&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code&gt;单元测试-由熟悉后端的开发团队对代码的最小功能元素进行检查。
组件测试-前端的测试团队分别检查每个对象或软件的一部分。
集成测试-检查单元组合的行为。
API测试-集成测试的一部分，重点放在API功能上。
兼容性测试-分析不同浏览器，操作系统，网络环境，硬件等中的软件行为。
冒烟测试-对旨在证明基本功能（安装，启动，注册等）有效的新版本的审查，以便团队可以继续测试其余功能。
GUI测试-旨在证明图形用户界面符合软件要求中规定的检查。
端到端测试-通过复制实际用户方案，从头到尾检查整个工作流程。
回归测试-一项旨在验证代码更改是否影响最新迭代之后未影响软件功能的部分的分析。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;测试金字塔&quot;&gt;&lt;a href=&quot;#测试金字塔&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 测试金字塔&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/1400/1*MIHP8DxIlcDLukf7hsflIQ.jpeg&quot; alt=&quot;&quot;/&gt;
测试金字塔是一项原则，可帮助您明智地选择自动化案例。单元测试涵盖了最低级别的软件代码，并且具有最高的投资回报率，因为它们有助于避免更严重的错误。因此，将这个级别自动化到最大是合理的。
优先考虑的是组件测试，集成测试和API测试。回归是自动化的又一候选，因为它涵盖了熟悉的功能，每次迭代后都需要进行修订。
然后才进行GUI测试。尽管非常常见，但GUI自动化非常不切实际。这些测试难以维护，价格昂贵，并且存在大量的误报与否定。
测试金字塔
传统方法提出了相反的建议：GUI的自动化程度更高，单元测试的自动化程度更低，而这并不总是有效的。
考虑以下因素来选择测试方法：
应用程序所基于的技术。应用规范会影响所需的测试类型以及以后的测试类型-平台和工具的选择。
团队角色。确保每个团队成员都知道自己的职责，并且有资格涵盖该项目质量保证的特定方面。
涉及的风险。为了消除最可能和最具破坏性的风险，您需要覆盖脆弱的区域。因此，您应该知道风险。创建一个文档，在其中记录以下参数：
风险等级-风险变为现实时的处理难度；
概率—风险变为现实的可能性；
缓解—采取措施解决风险；
成本估算-降低风险的成本。&lt;/p&gt; &lt;h2 id=&quot;选择一个自动化框架&quot;&gt;&lt;a href=&quot;#选择一个自动化框架&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 选择一个自动化框架&lt;/h2&gt; &lt;p&gt;测试自动化框架是一组详细的准则，编码标准，项目层次结构，报告机制等，它们为自动化测试脚本创建了一个支架。
简而言之，这是使测试自动化高效的一种做法。质量检查团队需要选择合适的框架来创建脚本，这些脚本具有更高的重用性，更易于移植和降低维护成本。
一些最受欢迎的做法是：&lt;/p&gt; &lt;div class=&quot;language- extra-class&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code&gt;线性脚本；
依赖的架构；
模块化框架；
数据驱动的框架；
关键字驱动的框架；
混合框架。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;测试自动化框架&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/1400/1*YqyGi7YQi7Of2x7DDUSQTg.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt; &lt;h3 id=&quot;记录和回放（也称为线性脚本，记录和回放）&quot;&gt;&lt;a href=&quot;#记录和回放（也称为线性脚本，记录和回放）&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 记录和回放（也称为线性脚本，记录和回放）&lt;/h3&gt; &lt;p&gt;它是所有框架中最简单的框架，它使质量检查工程师能够手动记录测试过程的每个步骤和验证参数，以便他们以后可以随时回放。
线性脚本是生成脚本的最快方法，甚至不需要自动化经验。缺点是重用少，维护困难。&lt;/p&gt; &lt;h3 id=&quot;结构化脚本（也：库体系结构，功能分解）&quot;&gt;&lt;a href=&quot;#结构化脚本（也：库体系结构，功能分解）&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 结构化脚本（也：库体系结构，功能分解）&lt;/h3&gt; &lt;p&gt;该框架采用使用记录和回放创建的脚本，将相似的脚本分组为函数，将其保存到库中，并在需要时调用。
库体系结构框架可确保更高的重用性，同时降低开发成本和维护工作量。另一方面，它还需要专业知识和更多计划。&lt;/p&gt; &lt;h3 id=&quot;模块化框架&quot;&gt;&lt;a href=&quot;#模块化框架&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 模块化框架&lt;/h3&gt; &lt;p&gt;测试自动化工程师将AUT（被测应用程序）划分为较小的组件（单元，功能，部分），并为每个组件创建一个脚本以进行隔离测试。分层组合这些脚本，可以创建用于更广泛测试运行的整体脚本。
由于数据是经过硬编码的，因此不能使用多个数据集，但是如果应用程序发生更改，则只需要修复单个测试脚本即可。&lt;/p&gt; &lt;h3 id=&quot;数据驱动框架&quot;&gt;&lt;a href=&quot;#数据驱动框架&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 数据驱动框架&lt;/h3&gt; &lt;p&gt;该框架将测试数据与脚本逻辑分开，并将其存储在外部。测试脚本使用此文件读取输入或输出参数。数据驱动的框架非常适合需要使用不同数据集多次测试同一功能的情况。因此，我们可以使用最少的脚本快速测试具有各种数据的方案。
设置数据驱动的框架非常耗时。对于熟练的测试自动化工程师来说，这是一项任务，它能够正确格式化数据并编写可利用此框架所有优点的脚本。&lt;/p&gt; &lt;h3 id=&quot;关键字驱动的框架&quot;&gt;&lt;a href=&quot;#关键字驱动的框架&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 关键字驱动的框架&lt;/h3&gt; &lt;p&gt;该框架主要用于GUI自动化，还意味着将测试数据与脚本分开存储。这些说明是按连续顺序（登录，单击等）描述操作的字词。
使用关键字驱动的框架，您将获得可重用的代码，以将其应用于可独立于AUT构建的多个测试脚本。设置还需要花费大量时间，并且需要付出很多努力才能保持秩序。如果应用程序很大，则证明安装成本高。然后，您可以使用这些脚本几年。&lt;/p&gt; &lt;h3 id=&quot;混合框架&quot;&gt;&lt;a href=&quot;#混合框架&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 混合框架&lt;/h3&gt; &lt;p&gt;每个框架都有其优点和缺点。当测试自动化工程师开始最大程度地发挥积极功能并最大程度减少负面影响时，他们可能会提出各种不同框架的组合，这些框架最适合特定项目。这种混合使混合框架成为敏捷和DevOps测试自动化策略的最常见选择。&lt;/p&gt; &lt;h2 id=&quot;分配专用资源&quot;&gt;&lt;a href=&quot;#分配专用资源&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 分配专用资源&lt;/h2&gt; &lt;p&gt;不要忘记，软件测试自动化是专门为其雇用的人员的任务。有些人试图使自动化成为手动质量检查工程师的兼职工作。但是，这些专家已经承担了其他任务，并且很可能缺乏设置自动化测试的技能。寻找具有脚本编写经验或至少具有相关知识的人员来负责此任务范围会更加有效。&lt;/p&gt; &lt;h2 id=&quot;选择测试工具&quot;&gt;&lt;a href=&quot;#选择测试工具&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 选择测试工具&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/1400/1*K-qh6tPvorodBMtUTUAB5w.jpeg&quot; alt=&quot;&quot;/&gt;
您要注意的第一件事是工具的普及程度，这不是错误。流行的工具通常被证明是可靠的，并在网上进行了广泛的讨论。自动化工程师可以在Web上找到许多有用的技巧和有趣的实践。
此外，要找到精通Selenium，Appium或Cucumber的QA工程师，要比最近才出现且看起来不错的工具容易。除了受欢迎程度外，还有其他要考虑的标准。
测试工具&lt;/p&gt; &lt;h2 id=&quot;技术栈：&quot;&gt;&lt;a href=&quot;#技术栈：&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 技术栈：&lt;/h2&gt; &lt;p&gt;该技术软件已构建。
被测系统的要求。
您熟悉的编程语言。&lt;/p&gt; &lt;h2 id=&quot;工具功能：&quot;&gt;&lt;a href=&quot;#工具功能：&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 工具功能：&lt;/h2&gt; &lt;p&gt;支持的操作系统，平台和环境（例如，自动浏览器测试，本机/混合应用程序测试等）。
跨平台测试支持。
复杂性与易用性。&lt;/p&gt; &lt;h2 id=&quot;预算：&quot;&gt;&lt;a href=&quot;#预算：&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 预算：&lt;/h2&gt; &lt;div class=&quot;language- extra-class&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code&gt;您在寻找开源还是付费选择？
您是否正在寻找付费工具中的开发或运行时许可证？
您打算多久使用一次此工具？
价格合理吗？
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;经验表明，在开源工具上构建自定义框架是最佳选择。尝试几种解决方案。大多数软件都有免费试用期，因此您可以在购买许可证之前权衡商用工具的所有优缺点。&lt;/p&gt; &lt;h2 id=&quot;设计和运行测试&quot;&gt;&lt;a href=&quot;#设计和运行测试&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 设计和运行测试&lt;/h2&gt; &lt;p&gt;因此，您知道要自动化的内容，要应用的测试类型，要使用的框架和工具。现在是时候从安排过渡到实际工作并开始编写脚本了。这里有一些技巧可以帮助您：&lt;/p&gt; &lt;div class=&quot;language- extra-class&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code&gt;概述日常工作和程序。

创建在多个项目中使用的测试用例模板。

在编写新的测试用例之前，记得检查类似的用例是否已经存在。

编写简洁且易于理解的测试，因为在将来，其他人也会使用它们。

使测试脚本尽可能的少，这样它们将容易理解和维护。

将大量测试分解成序列，逐个检查。它们越小，出错的概率就越小。

确保测试不依赖于UI。使用可能改变的UI元素和路径肯定会创建无用的脚本。

对如何解决失败的测试用例有一个清晰的计划(执行特性分析，只是向开发团队报告，等等)。

学习对测试用例进行优先排序。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;保持脚本井井有条&quot;&gt;&lt;a href=&quot;#保持脚本井井有条&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 保持脚本井井有条&lt;/h2&gt; &lt;p&gt;有提供自动化软件测试服务经验的人承认，在维护阶段，事情往往会变得混乱。因此，最重要的是，根据测试的目的对测试进行分类，或者提出另一种分类，以便将来可以快速，轻松地找到相关案例。
不要忘记对新案例进行分类。审查并清理现有案例。它们中的许多并不能永远持续下去，这没关系。解决产品需求，以决定旧案例是否有效，应该使用还是不再适用。永远不要尝试重振无用的东西。&lt;/p&gt; &lt;h2 id=&quot;自动化测试：编写文档&quot;&gt;&lt;a href=&quot;#自动化测试：编写文档&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 自动化测试：编写文档&lt;/h2&gt; &lt;p&gt;文档管理与官僚主义无关，如果管理不当，则会造成延迟。相反，文档比内存更可靠，可以帮助您保持头脑清醒。那要放在纸上呢？
概述工作范围，然后为每个任务设置里程碑和时间表。它将使每个团队成员都在同一页面上。
用流程，角色和技术记录自动化方法。当您需要澄清或解决难题时，它将成为您可以解决的一组准则。
概述自动化环境。在准备好发布之前，为软件创建流水线。
进行风险分析，为“万事大吉”方案做准备。风险始终存在，而忽略风险的可能性只是粗心大意。
创建执行计划以确保没有错误的测试。写下日常任务和程序。启动自动回归之前，请运行单独的测试。确保没有假结果。&lt;/p&gt; &lt;h2 id=&quot;敏捷项目的测试自动化策略&quot;&gt;&lt;a href=&quot;#敏捷项目的测试自动化策略&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 敏捷项目的测试自动化策略&lt;/h2&gt; &lt;p&gt;敏捷的测试自动化策略通常意味着一种主动的方法，并且倾向于自动化的单元测试。这些是使快速发布成为可能的基本条件。
除此之外，请考虑使用关键字驱动的自动化框架。如果选择与业务需求相关的词，则只要这些词与已知命令相对应，就可以使用脚本。关键字也可以成为混合框架的一部分，该混合框架使灵活性在敏捷SDLC中至关重要。
敏捷项目的自动化策略永远不会忽视单元和组件测试。一次测试一个小功能有助于从自动化中提取真正的价值。一方面，您可以在开发人员编写一段代码后立即为功能创建脚本。另一方面，将较小的部分编译成覆盖大部分功能的测试脚本有助于最大程度地减少途中的错误。&lt;/p&gt; &lt;h2 id=&quot;内部与外包测试自动化策略&quot;&gt;&lt;a href=&quot;#内部与外包测试自动化策略&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 内部与外包测试自动化策略&lt;/h2&gt; &lt;p&gt;内部团队和外包团队的质量检查自动化策略之间没有根本区别。在这两种情况下，您都需要确定要使用哪种测试方法和框架，选择自动化工具，并找到有资格的人员来处理任务。
区别在于管理工作的范围。当然，在任何情况下，项目所有者（或负责人）都必须管理该过程。而且，如果您正在阅读有关如何构建测试自动化策略的信息，则可能需要弄清楚有关它的一些信息。
在这两种情况下，您都需要从招聘过程开始。外包测试在这里可以节省时间。组建内部团队并不是一个快速的过程。希望您会找到合格的人员，他们熟悉测试自动化的最佳实践。
如果您选择QA外包，您将拥有一个功能齐全的团队，在软件测试自动化服务，成熟的自动化策略，喜欢的工具和测试脚本模板方面具有相关经验。
换句话说，内部团队至少在开始时就需要更多的参与和管理。使用外包的质量检查，您可以请求报告，指定您感兴趣的详细信息，而其余的则是他们要处理的任务。
拥有质量检查部门的公司通常决定使用内部质量检查资源和外包自动化来覆盖手动软件测试，因为这样做更具成本效益。有些人选择从外部团队开始，然后在任务流程稳定的情况下聘请自动化专家。&lt;/p&gt; &lt;h2 id=&quot;总结一下&quot;&gt;&lt;a href=&quot;#总结一下&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 总结一下&lt;/h2&gt; &lt;p&gt;实现测试自动化需要时间，精力和特定技能。自动化测试并不总是必不可少的。除非您定义明确的目标，否则它不会替代手动测试，也不会使项目受益。那么，如何利用所有人都在谈论的那些优势呢？
知道为什么您确实需要QA自动化。保持合理的期望。从小处着手，并着眼于长远的眼光。如果结果不是即时的，请不要放弃自动化。但是最重​​要的是，仔细研究您的自动化策略。希望我能帮助您，至少有一点帮助。&lt;/p&gt; &lt;h3 id=&quot;author&quot;&gt;&lt;a href=&quot;#author&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; author&lt;/h3&gt; &lt;p&gt;石头 磊哥 seven 随便叫&lt;/p&gt; &lt;h3 id=&quot;company&quot;&gt;&lt;a href=&quot;#company&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; company&lt;/h3&gt; &lt;p&gt;thoughtworks&lt;/p&gt; &lt;p&gt;大家好，本人不才，目前依旧混迹于thoughtworks，做着一名看起来像全栈的QA，兴趣爱好前端，目前是thoughtworks 西安QA社区的leader，如果有兴趣分享话题，或者想加入tw，可以找我&lt;/p&gt; &lt;h3 id=&quot;roles&quot;&gt;&lt;a href=&quot;#roles&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; roles&lt;/h3&gt; &lt;p&gt;QA（营生） dev（front-end dev 兴趣爱好）&lt;/p&gt; &lt;h3 id=&quot;联系方式&quot;&gt;&lt;a href=&quot;#联系方式&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; 联系方式&lt;/h3&gt; &lt;p&gt;如果想转载或者高薪挖我 请直接联系我 哈哈&lt;/p&gt; &lt;h4 id=&quot;wechat&quot;&gt;&lt;a href=&quot;#wechat&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; wechat:&lt;/h4&gt; &lt;p&gt;qileiwangnan&lt;/p&gt; &lt;h4 id=&quot;email&quot;&gt;&lt;a href=&quot;#email&quot; aria-hidden=&quot;true&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt; email:&lt;/h4&gt; &lt;p&gt;qileilove@gmail.com&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>88e636dcc7c4e60a198e176fdb3fb744</guid>
<title>腾讯云 API 3.0 网关的探索与思考</title>
<link>https://toutiao.io/k/78grbpd</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;span&gt;&lt;strong&gt;一.API 网关的定义与职能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;API网关是什么？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在日常工作中，我们听说过很多次网关这个名称，这里说的网关特指API网关。字面意思是指将所有API的调用统一接入API网关层，由网关层负责接入和输出。API网关是业务与用户联通的API入口，是所有服务的大门。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;什么情况下需要API网关？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;单体应用时代，在业务简单的时候，我们常常把功能都集中在一个应用中，但随着业务功能日益增多，将所有的功能集中在一个程序的时候，每更新一个功能模块，势必要更新整个程序。牵一发而动全身，系统将很难维护。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个时候，微服务出现了。微服务有各自的发布、运维等功能，解决了单体应用的弊端。微服务化后就必须有统一的出入口，于是，API 网关就出现了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;API 网关很好的解决了微服务下调用、统一接入等问题，如下图所示：&lt;/span&gt;&lt;span&gt;&lt;shape type=&quot;#_x0000_t75&quot; filled=&quot;f&quot;&gt;&lt;imagedata title=&quot;image1&quot;/&gt;&lt;/shape&gt;&lt;img data-ratio=&quot;0.52&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jiboYA4jZECxeDhDpcIcJXbHIynL61KgMwJnCbiaEib06rhuawibkaUNBaiak2Uu0tMnZIQcFIVvmEhejQNVPpcu0kw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot; data-backw=&quot;554&quot; data-backh=&quot;288&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有了API网关之后，各个API服务提供团队可以专注于自己的业务逻辑处理，而其他公共功能可以交给API网关。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;API网关需要覆盖哪些功能？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先做为一个网关，可以处理一些非业务的逻辑，比如安全，流控，请求路由等等，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其次能够管理API的全生命周期，包括创建、维护、发布、运行、下线等功能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如下图所示：&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.7053571428571429&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jiboYA4jZECxeDhDpcIcJXbHIynL61KgMlI85b63oIKowgxw6doPHk1LViaCXZf4mibdo7iauqPJExTHyqb1TzAFaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;784&quot; data-backw=&quot;554&quot; data-backh=&quot;391&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;二.腾讯云API网关&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;腾讯云每天有数亿的API请求，百万级的用户，数百款产品，为了提供更加安全，规范，易用，高可用的API服务，腾讯云API网关应运而生。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;腾讯云API网关自2013年诞生以来，经过了1.0-&amp;gt;2.0-&amp;gt;3.0的迭代演变，1.0已经完全退出了历史舞台，2.0也在逐步退出历史的舞台，云API3.0网关（以下简称云API3.0）经历了2年多的发展，形成了一整套具备API生命周期管理，请求接入，业务聚合，安全可流控的API网关，已成为腾讯云的API标准。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云API的产品形态如图：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5411764705882353&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jiboYA4jZECxeDhDpcIcJXbHIynL61KgMcjiawzwWMQZrAMFrScRH9k8z90xkdCiaibJ0OfUMfTUmSdgDHicvO7Ria9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1360&quot; data-backw=&quot;554&quot; data-backh=&quot;299&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;提供了控制台，SDK，命令行，小程序，API等多种接入方式，为Iaas，Paas，Saas以及平台服务提供了统一的对外体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云API包含了云API核心框架，云API管理系统和云API监控运营系统三大模块。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;系统架构：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.8144016227180527&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jiboYA4jZECxeDhDpcIcJXbHIynL61KgMZ3SHpkzias7pQiaAq4Ecb6IJSibQwe171cFtE4TwoicQcjWIACJEV8cT4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;986&quot; data-backw=&quot;554&quot; data-backh=&quot;451&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;API核心框架承载着海量的流量输入输出，流控，协议转换，路由等，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;API管理系统是业务录入接口，负责进行&lt;/span&gt;&lt;span&gt;API全生命周期管理和路由策略配置，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;API监控运营系统提供了API各种运营数据以及&lt;/span&gt;&lt;span&gt;画像。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云API 3.0覆盖以下功能：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img data-backh=&quot;377&quot; data-backw=&quot;554&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_png/jiboYA4jZECxeDhDpcIcJXbHIynL61KgM6wQRz89hkp3XT5ny17y3Y5wtAma08RNiaKXy1nNWAosJsiciatmXAE58g/640?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1080&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;663.3217993079584&quot; data-ratio=&quot;0.6138888888888889&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jiboYA4jZECxeDhDpcIcJXbHIynL61KgMZCYmK3YevUseUfk6owia3CpRN1wR8wwfurjJMQU4VVeIlHnup4IPaibg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. 安全性&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;HTTPS 支持，保证 API 的安全通讯。有基础的抗DDos攻击的能力，采用安全可靠的认证方式，可使用 SecretId + SecretKey 的方式或者token的方式进行用户认证，支持V1，V3（TC3-HMAC-SHA256）多种签名方案，更加安全，支持内部调用和全程票据功能，进一步加强了安全性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 接口规范&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云API 3.0制定并落地了统一的接口规范，得到用户的一直好评。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云API 1.0，2.0没有统一的规范，接口定义百花齐放，比如有的接口使用匈牙利命名法，有的接口使用大小驼峰，有的接口使用全小写如resource_id，接口类型也是灵活可变，可以从int转成string，可返回可不返回，但是用户使用体验不统一，遇到很多问题，比如接口名理解门槛高，返回参数和文档不一致无所适从，业务不兼容修改参数造成存量用户调用失败等等，为此，云API 3.0的设计理念就是要充分保证用户的体验，制定了一整套统一的接口的标准规范，使得文档与接口行为必须严格一致，用户不需要根据不同的接口去理解和适配规则，充分保障用户的体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3. 开发者工具&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云API 3.0提供了SDK 3.0，TCCLI，API explorer等开发者工具。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;SDK 3.0目前包含Java、Python、Node.js、PHP、C++、GO 及 .NET 语言，还有其他一些语言也在开发中。SDK 3.0 实现了统一化，各个语言版本的 SDK 具备使用方法相同、接口调用方式相同、错误码和返回包格式，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;TCCLI是管理腾讯云资源的统一工具，通过此工具，您可以快速轻松的调用腾讯云 API来管理您的腾讯云资源，您还可以基于腾讯云的命令行工具来做自动化和脚本处理，能够以更多样的方式进行组合和重用。云API 3.0根据用户的反馈，在version：3.0.252.3之后推出了全新的2020版，新体验优化如下表，力争带给用户更好的体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;img data-ratio=&quot;0.666403785488959&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jiboYA4jZECxeDhDpcIcJXbHIynL61KgMucbt5J95XzfoAviaof92sWyWQHycwpiceEoIfqeGOwX5XrkKoakBoZkA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1268&quot; data-backw=&quot;578&quot; data-backh=&quot;385&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;特别推荐API explorer，它是一款自动化工具，目前已支持云服务器 CVM、私有网络 VPC、云硬盘 CBS 等 &lt;/span&gt;&lt;a href=&quot;https://cloud.tencent.com/product&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;腾讯云产品&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 的 API 接口调用自动化。可实现自动生成 Java、Python、Node.js、PHP、GO 及 .NET 语言的 SDK 代码、在线调用、发送真实请求及签名串自动生成等功能，降低了 SDK 的使用难度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;三.收益&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;用户使用云API 3.0，可以带来哪些好处呢？&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;span/&gt;&lt;/span&gt;&lt;span&gt;高&lt;/span&gt;&lt;span&gt;性能，低延迟：支持用户全地域就近接入云API，请求时延更低，可用性更高。支持内网域名，方便内部调用&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;span/&gt;&lt;/span&gt;&lt;span&gt;安全性高&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o签名v3（TC3-HMAC-SHA256）：签名方法 v3 功能上覆盖了以前的签名方法 v1，安全性更高，支持更大的请求，支持post/json传输格式。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;span/&gt;&lt;/span&gt;&lt;span&gt;限频精准：限频进一步提升，精准的秒级请求过滤和子账号控制。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;span/&gt;&lt;/span&gt;&lt;span&gt;规范统一：让用户在使用腾讯云不同产品时具有标准化统一的体验。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;span/&gt;&lt;/span&gt;&lt;span&gt;开发工具丰富：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o&lt;span/&gt;&lt;/span&gt;&lt;span&gt;更规范的SDK 3.0，支持更多的编程语言。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o&lt;span/&gt;&lt;/span&gt;&lt;span&gt;新增API Explorer在线调试，SDK代码生成，有效降低使用门槛。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o&lt;span/&gt;&lt;/span&gt;&lt;span&gt;全新的TCCLI，提供更丰富的功能，更完备的信息。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;span/&gt;&lt;/span&gt;&lt;span&gt;文档质量高&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o&lt;span/&gt;&lt;/span&gt;&lt;span&gt;更加丰富准确的示例&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o&lt;span/&gt;&lt;/span&gt;&lt;span&gt;更完备的错误码信息&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o&lt;span/&gt;&lt;/span&gt;&lt;span&gt;新增初级用户指导文档，降低上云门槛&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o&lt;span/&gt;&lt;/span&gt;&lt;span&gt;更及时的更新频率&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o&lt;span/&gt;&lt;/span&gt;&lt;span&gt;保持和接口功能的对齐&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;span/&gt;&lt;/span&gt;&lt;span&gt;数据更丰富&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o&lt;span/&gt;&lt;/span&gt;&lt;span&gt;API调用信息更加透明，支持按小时/天查询。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;o&lt;span/&gt;&lt;/span&gt;&lt;span&gt;requestId贯穿全链路，定位问题更容易。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;四. 目标和实现路径&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云API以打造行业标杆作为目标，将从以下几个方向努力：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-云API的全面统一&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;由于历史原因，2.0，3.0的接口共存，2.0用户的体验不佳，业务和平台运维复杂。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在腾讯内部均已使用云API3.0，且获得了不错的反馈和口碑，未来我们也建议使用云API2.0的用户逐步迁移到云API3.0。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;-云API全面标准化&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了给用户更好的体验，云API制定了一系列的标准化规范。目前已经完成接口规范，sdk规范，文档规范，错误码规范，示例规范，上线下线规范，接口导入到处规范，内部调用规范，数据规范等等，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.8733205374280231&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jiboYA4jZECxeDhDpcIcJXbHIynL61KgM9Aaia6nyRZwiaQiab2hv3NlolXibkzRQDgSRMKibU9Fs2qSvwibiaftGJskJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1042&quot; data-backw=&quot;444&quot; data-backh=&quot;388&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;还有更多的规范，比如时间规范化等都在逐步完善中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;- 产品优化&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;span/&gt;&lt;/span&gt;&lt;span&gt;统一的云API对外平台，提供文档，错误码以及错误码解决方案的一站式服务。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;·&lt;span/&gt;&lt;/span&gt;&lt;span&gt;统一的云API控制台，提供用户端的运营数据，监控等一系列能力。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;五. 未来展望&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;云API目前专注服务于腾讯云，与云其他的平台协同，提供了一个标准规范的的API网关平台。但是其他场景也不断有接入的诉求，所以有计划扩展应用场景，也考虑走出去，赋能更多用户。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.15172413793103448&quot; data-type=&quot;png&quot; data-w=&quot;870&quot; data-s=&quot;300,640&quot; data-backh=&quot;103&quot; data-backw=&quot;677&quot; data-before-oversubscription-url=&quot;https://mmbiz.qpic.cn/mmbiz_png/jiboYA4jZECzrtw5rqppTTVzhIvGj8eicElaNtqevkqY9qDOBkHHsr0YSTpSCwdYQlepsVN7qiaSy7CmQDlMDzu4w/640?wx_fmt=png&quot; data-copyright=&quot;0&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jiboYA4jZECzrtw5rqppTTVzhIvGj8eicElaNtqevkqY9qDOBkHHsr0YSTpSCwdYQlepsVN7qiaSy7CmQDlMDzu4w/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MTEwNTM0ODI0MQ==&amp;amp;mid=2653442190&amp;amp;idx=1&amp;amp;sn=932214542304dc2878577fe863ee0299&amp;amp;chksm=720141704576c866dc9d40fe0f5f2d5a25b3859076df91c9f72a6f460b67e70da88d2422d707&amp;amp;token=537422020&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;136&quot; data-backw=&quot;578&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jiboYA4jZECw7HfcJH6RDjSUFiasTARcrDiagicEgianMalQlZ2v058br5picesG7FWfiaoa0N7XQq9AAYU54qjd8RyPg/0?wx_fmt=jpeg&quot; data-cropx1=&quot;1.9852941176470589&quot; data-cropx2=&quot;1074.0441176470588&quot; data-cropy1=&quot;166.76470588235296&quot; data-cropy2=&quot;418.89705882352945&quot; data-ratio=&quot;0.23485554520037277&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1073&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jiboYA4jZECwSSicD9Ox5E11nVX2BLAzQGPiaQAfLLaDwu50j8FnSd94ArJ1DGFrggBaA6fY0vl7Th7n6CvjBNEhA/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MTEwNTM0ODI0MQ==&amp;amp;mid=2653442190&amp;amp;idx=1&amp;amp;sn=932214542304dc2878577fe863ee0299&amp;amp;chksm=720141704576c866dc9d40fe0f5f2d5a25b3859076df91c9f72a6f460b67e70da88d2422d707&amp;amp;token=537422020&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;腾讯的组织能力是什么&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span data-raw-text=&quot;腾&quot; data-textnode-index=&quot;289&quot; data-index=&quot;14402&quot;&gt;&lt;span data-raw-text=&quot;腾&quot; data-textnode-index=&quot;109&quot; data-index=&quot;1666&quot;&gt;&lt;span data-raw-text=&quot;腾&quot; data-textnode-index=&quot;159&quot; data-index=&quot;8844&quot;&gt;&lt;span data-raw-text=&quot;腾&quot; data-textnode-index=&quot;68&quot; data-index=&quot;6080&quot;&gt;腾&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;讯&quot; data-textnode-index=&quot;289&quot; data-index=&quot;14403&quot;&gt;&lt;span data-raw-text=&quot;讯&quot; data-textnode-index=&quot;110&quot; data-index=&quot;1667&quot;&gt;&lt;span data-raw-text=&quot;讯&quot; data-textnode-index=&quot;160&quot; data-index=&quot;8845&quot;&gt;&lt;span data-raw-text=&quot;讯&quot; data-textnode-index=&quot;69&quot; data-index=&quot;6081&quot;&gt;讯&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;289&quot; data-index=&quot;14404&quot;&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;111&quot; data-index=&quot;1668&quot;&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;161&quot; data-index=&quot;8846&quot;&gt;&lt;span data-raw-text=&quot;的&quot; data-textnode-index=&quot;70&quot; data-index=&quot;6082&quot;&gt;的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;组&quot; data-textnode-index=&quot;289&quot; data-index=&quot;14405&quot;&gt;&lt;span data-raw-text=&quot;组&quot; data-textnode-index=&quot;112&quot; data-index=&quot;1669&quot;&gt;&lt;span data-raw-text=&quot;组&quot; data-textnode-index=&quot;162&quot; data-index=&quot;8847&quot;&gt;&lt;span data-raw-text=&quot;组&quot; data-textnode-index=&quot;71&quot; data-index=&quot;6083&quot;&gt;组&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;织&quot; data-textnode-index=&quot;289&quot; data-index=&quot;14406&quot;&gt;&lt;span data-raw-text=&quot;织&quot; data-textnode-index=&quot;113&quot; data-index=&quot;1670&quot;&gt;&lt;span data-raw-text=&quot;织&quot; data-textnode-index=&quot;163&quot; data-index=&quot;8848&quot;&gt;&lt;span data-raw-text=&quot;织&quot; data-textnode-index=&quot;72&quot; data-index=&quot;6084&quot;&gt;织&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;能&quot; data-textnode-index=&quot;289&quot; data-index=&quot;14407&quot;&gt;&lt;span data-raw-text=&quot;能&quot; data-textnode-index=&quot;114&quot; data-index=&quot;1671&quot;&gt;&lt;span data-raw-text=&quot;能&quot; data-textnode-index=&quot;164&quot; data-index=&quot;8849&quot;&gt;&lt;span data-raw-text=&quot;能&quot; data-textnode-index=&quot;73&quot; data-index=&quot;6085&quot;&gt;能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;力&quot; data-textnode-index=&quot;289&quot; data-index=&quot;14408&quot;&gt;&lt;span data-raw-text=&quot;力&quot; data-textnode-index=&quot;115&quot; data-index=&quot;1672&quot;&gt;&lt;span data-raw-text=&quot;力&quot; data-textnode-index=&quot;165&quot; data-index=&quot;8850&quot;&gt;&lt;span data-raw-text=&quot;力&quot; data-textnode-index=&quot;74&quot; data-index=&quot;6086&quot;&gt;力&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;是&quot; data-textnode-index=&quot;289&quot; data-index=&quot;14409&quot;&gt;&lt;span data-raw-text=&quot;是&quot; data-textnode-index=&quot;116&quot; data-index=&quot;1673&quot;&gt;&lt;span data-raw-text=&quot;是&quot; data-textnode-index=&quot;166&quot; data-index=&quot;8851&quot;&gt;&lt;span data-raw-text=&quot;是&quot; data-textnode-index=&quot;75&quot; data-index=&quot;6087&quot;&gt;是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;什&quot; data-textnode-index=&quot;289&quot; data-index=&quot;14410&quot;&gt;&lt;span data-raw-text=&quot;什&quot; data-textnode-index=&quot;117&quot; data-index=&quot;1674&quot;&gt;&lt;span data-raw-text=&quot;什&quot; data-textnode-index=&quot;167&quot; data-index=&quot;8852&quot;&gt;&lt;span data-raw-text=&quot;什&quot; data-textnode-index=&quot;76&quot; data-index=&quot;6088&quot;&gt;什&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;么&quot; data-textnode-index=&quot;289&quot; data-index=&quot;14411&quot;&gt;&lt;span data-raw-text=&quot;么&quot; data-textnode-index=&quot;118&quot; data-index=&quot;1675&quot;&gt;&lt;span data-raw-text=&quot;么&quot; data-textnode-index=&quot;168&quot; data-index=&quot;8853&quot;&gt;&lt;span data-raw-text=&quot;么&quot; data-textnode-index=&quot;77&quot; data-index=&quot;6089&quot;&gt;么&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MTEwNTM0ODI0MQ==&amp;amp;mid=2653442329&amp;amp;idx=1&amp;amp;sn=eb6e0360bc0d694b62cf922d92909a16&amp;amp;chksm=720140e74576c9f195f070025d69b2c201f103d3634282065ce3c6d90d6018427bec77eaf647&amp;amp;token=2062081203&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jiboYA4jZECyPDBumXuAmicRCdK0WPqCXS6LsAOS3OAFG5FQyImGScUSq6MAAkia8Vic6CDV0lD90Iy5OIkfQqnL0w/0?wx_fmt=jpeg&quot; data-cropx1=&quot;5.5276816608996535&quot; data-cropx2=&quot;1065&quot; data-cropy1=&quot;35.00865051903114&quot; data-cropy2=&quot;254.27335640138406&quot; data-ratio=&quot;0.20660377358490567&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1060&quot; data-backw=&quot;578&quot; data-backh=&quot;119&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jiboYA4jZECw44vPXeRg4ZZJxtYe9H9ibnA8wVJuX9LkQL95kZZPVTiaibQh7VzgsuyRhxsdW5PLicXMibdQsxQrI0WA/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MTEwNTM0ODI0MQ==&amp;amp;mid=2653443611&amp;amp;idx=1&amp;amp;sn=6c4754ebd668f6f5b8f235410405cf55&amp;amp;chksm=720147e54576cef3410be1fad140dc62fce127ce76c20acf937310f266505c35affeef75d3ae&amp;amp;token=1977599762&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;112&quot; data-backw=&quot;578&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/jiboYA4jZECwDSLS1RlXmnGvSnRRMXWeT2TrJOLf9BhFDfB9xHjY5conEoAcgeFHlWdia91y4QYNGJZjOwSZqqMg/0?wx_fmt=jpeg&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1008&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;195.32179930795849&quot; data-ratio=&quot;0.19345238095238096&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1008&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jiboYA4jZECwDSLS1RlXmnGvSnRRMXWeTwU1lG522O0o5bXWN5rImeRCslT2DR5nBKEFn0Rz5kI5mOevUkobSbQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.65625&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot; data-backw=&quot;677&quot; data-backh=&quot;444&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/jiboYA4jZECyg5asa7YvWj9MVdwpMRfiaugTX0ZODtYicibgG6lAqia17L773UTuFHTTlz8rsec5Qhp3OzYffibD2YUg/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>116bb178d6a58f19d4ae13b9ccb6e267</guid>
<title>Ribbon 讲解与应用</title>
<link>https://toutiao.io/k/etwq1yw</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-tools=&quot;新媒体管家&quot; data-label=&quot;powered by xmt.cn&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;点击上方“&lt;/span&gt;&lt;strong&gt;&lt;span&gt;掌上编程&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;”，选择“&lt;/span&gt;&lt;strong&gt;&lt;span&gt;置顶或者星标&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;” &lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;优质文章第一时间送达！&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;/p&gt;&lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;Ribbon [ˈrɪbən]&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Ribbon是什么&lt;/span&gt;&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Spring Cloud Ribbon是一个基于HTTP和TCP的 &lt;strong&gt;客户端 负载均衡&lt;/strong&gt; 工具
简单的说，Ribbon是Netflix发布的开源项目，主要功能是提供客户端的软件负载均衡算法，将Netflix的中间层服务连接在一起。Ribbon客户端组件提供一系列完善的配置项如连接超时，重试等。简单的说，就是在配置文件中列出Load Balancer（简称LB）后面所有的机器，Ribbon会自动的帮助你基于某种规则（如简单轮询，随机连接等）去连接这些机器。我们也很容易使用Ribbon实现自定义的负载均衡算法。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;它基于Netflix Ribbon实现。通过Spring Cloud的封装，可以让我们轻松地将面向服务的REST模版请求自动转换成客户端负载均衡的服务调用。Spring Cloud Ribbon虽然只是一个工具类框架，它不像服务注册中心、配置中心、API网关那样需要独立部署，但是它几乎存在于每一个Spring Cloud构建的微服务和基础设施中。因为微服务间的调用，API网关的请求转发等内容，实际上都是通过Ribbon来实现的，包括后续我们将要介绍的Feign，它也是基于Ribbon实现的工具。所以，对Spring Cloud Ribbon的理解和使用，对于我们使用Spring Cloud来构建微服务非常重要。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;面试造飞机, 工作拧螺丝&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/eF01K1HYLqan3H6gPFibMhVkeNvZ1bAv2VtIGFN15242ib4ibzPvEiaUkTpugoC89apsBgyIaeRK3hDYtWia7tmMvFg/0?wx_fmt=png&quot; data-cropx1=&quot;6.795698924731183&quot; data-cropx2=&quot;948&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;621.8064516129033&quot; data-ratio=&quot;0.6592356687898089&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eF01K1HYLqan3H6gPFibMhVkeNvZ1bAv2VZxwI0ExLwP2kgotpUjrLmXx4Wsm5kibmUQd2OA4ef6wk3OmnFJ2Rag/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;942&quot;/&gt;&lt;figcaption&gt;负载均衡-1.1&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Ribbon能干嘛&lt;/span&gt;&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;LB（负载均衡 LB，即负载均衡(Load Balance)，在微服务或分布式集群中经常用的一种应用。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;负载均衡简单的说就是将用户的请求平摊的分配到多个服务上，从而达到系统的HA。&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;常见的负载均衡有软件Nginx，LVS，硬件 F5等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;相应的在中间件，例如：dubbo和SpringCloud中均给我们提供了负载均衡，SpringCloud的负载均衡算法可以自定义。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;负载均衡的简单分类&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;集中式LB &lt;strong&gt;即在服务的消费方和提供方之间使用独立的LB设施&lt;/strong&gt; (可以是硬件，如F5, 也可以是软件，如nginx), 由该设施负责把访问请求通过某种策略转发至服务的提供方；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将LB逻辑集成到消费方，消费方从服务注册中心获知有哪些地址可用，然后自己再从这些地址中选择出一个合适的服务器。Ribbon就属于进程内LB，它只是一个类库，集成于消费方进程，消费方通过它来获取到服务提供方的地址。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意：&lt;strong&gt;Ribbon就属于进程内LB&lt;/strong&gt; ，它只是一个类库，集成于消费方进程，消费方通过它来 &lt;strong&gt;获取到服务提供方的地址&lt;/strong&gt; 。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4256198347107438&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eF01K1HYLqan3H6gPFibMhVkeNvZ1bAv2zfRVHRdNgudiaX9bpde3UdibTQTchgUBwfoEoF28MicpOSZkOkK3qfmSg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;968&quot;/&gt;&lt;figcaption&gt;负载均衡-2.1&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;具体操作&lt;/span&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;pom&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;&lt;span&gt;project&lt;/span&gt; &lt;span&gt;xmlns&lt;/span&gt;=&lt;span&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;&lt;br/&gt;         &lt;span&gt;xmlns:xsi&lt;/span&gt;=&lt;span&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;br/&gt;         &lt;span&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;springcloud&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;cn.com.codingce&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;span&gt;parent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;modelVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;4.0.0&lt;span&gt;&amp;lt;/&lt;span&gt;modelVersion&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;springcloud-consumer-dept&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;&lt;span&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;!--我们需要拿到实体类, 所以要配置api -module--&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;cn.com.codingce&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;springcloud-api&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;!--热部署工具--&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-devtools&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-web&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;!--Ribbon--&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-cloud-starter-ribbon&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.4.6.RELEASE&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;!--Eureka  客户端--&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.springframework.cloud&lt;span&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-cloud-starter-eureka&lt;span&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.4.6.RELEASE&lt;span&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&amp;lt;/&lt;span&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&amp;lt;/&lt;span&gt;project&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;ConfigBean&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; cn.com.codingce.springcloud.config;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.cloud.client.loadbalancer.LoadBalanced;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.context.annotation.Bean;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.context.annotation.Configuration;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.client.RestTemplate;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ConfigBean&lt;/span&gt; &lt;/span&gt;{   &lt;span&gt;//configuration -- spring applicationContext.xml&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//配置负载均衡实现RestTemplate  @LoadBalanced&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;//IRule&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;//AvailabilityFilteringRule: 先会过滤掉, 跳闸, 访问故障服务器&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;//RoundRobinRule    轮询&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;//RandomRule    随机&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;//RetryRule： 会按照轮询获取服务~ 如果服务获取失败, 则会在指定的时间内进行, 重试&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@LoadBalanced&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; RestTemplate &lt;span&gt;getRestTemplate&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RestTemplate();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;DeptConsumerController&lt;/span&gt;&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; cn.com.codingce.springcloud.controller;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; cn.com.codingce.pojo.Dept;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.beans.factory.annotation.Autowired;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.PathVariable;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.RequestMapping;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.RestController;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.web.client.RestTemplate;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.List;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@RestController&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;DeptConsumerController&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// 理解消费者, 不应该有service层&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;//RestFul风格&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;//(url, 实体: Map classs&amp;lt;T&amp;gt; responseType)&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; RestTemplate restTemplate;  &lt;span&gt;//提供多种便捷访问远程http服务的方法&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//原 private static final String REST_URL_PREFIX = &quot;http://localhost:8001&quot;;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;// Ribbon 我们这里是地址   因该是一个变量   通过服务来访问&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; String REST_URL_PREFIX = &lt;span&gt;&quot;http://SPRINGCLOUD-PROVIDER-DEPT&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@RequestMapping&lt;/span&gt;(&lt;span&gt;&quot;/consumer/dept/add&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;add&lt;/span&gt;&lt;span&gt;(Dept dept)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; restTemplate.postForObject(REST_URL_PREFIX + &lt;span&gt;&quot;/dept/add&quot;&lt;/span&gt;, dept, Boolean.class);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//http://localhost:8001/dept/list&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;@RequestMapping&lt;/span&gt;(&lt;span&gt;&quot;/consumer/dept/get/{id}&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Dept &lt;span&gt;get&lt;/span&gt;&lt;span&gt;(@PathVariable(&lt;span&gt;&quot;id&quot;&lt;/span&gt;)&lt;/span&gt; Long id) &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; restTemplate.getForObject(REST_URL_PREFIX + &lt;span&gt;&quot;/dept/get/&quot;&lt;/span&gt; + id, Dept.class );&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@RequestMapping&lt;/span&gt;(&lt;span&gt;&quot;/consumer/dept/list&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; List&amp;lt;Dept&amp;gt; &lt;span&gt;list&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; restTemplate.getForObject(REST_URL_PREFIX + &lt;span&gt;&quot;/dept/list&quot;&lt;/span&gt; , List.class );&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;自定义负载均衡&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2579218865143699&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eF01K1HYLqan3H6gPFibMhVkeNvZ1bAv2hC8AXdMIqAend7GNMS0FuUmrnMl5YXsDBz4OJ4INtnmF57AStqT21g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1357&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.42012448132780084&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eF01K1HYLqan3H6gPFibMhVkeNvZ1bAv26Dy71a3jZUcloF890mKqR1NsIwZGR036ibwRQAX50ibzE4RRFNwn7K8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1928&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;注意一点: 自定义类 单独拿出来 该类不能被@ComponentScan扫描到&lt;/strong&gt;项目截图&lt;img data-ratio=&quot;1.1090909090909091&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eF01K1HYLqan3H6gPFibMhVkeNvZ1bAv2jhunX3xv9KjT4HTTBwHYSIDoZdGQy1AGNeGcwr8jeuYfqicpKYxgIMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;385&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;自定义CodingCeRandomRule&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; cn.com.codingce.myrule;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; com.netflix.client.config.IClientConfig;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; com.netflix.loadbalancer.AbstractLoadBalancerRule;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; com.netflix.loadbalancer.ILoadBalancer;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; com.netflix.loadbalancer.Server;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.List;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; java.util.concurrent.ThreadLocalRandom;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt; * 该类不能被&lt;span&gt;@ComponentScan&lt;/span&gt;扫描到&lt;br/&gt; * &lt;span&gt;@author&lt;/span&gt; xzMa&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;CodingCeRandomRule&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;AbstractLoadBalancerRule&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//自定义 每个服务, 访问5次, 换下一个服务(3个)&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;//total = 0 默认=0 如果=5 我们指向下一个服务点&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; total = &lt;span&gt;0&lt;/span&gt;;  &lt;span&gt;//被调用的次数&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; currentIndex = &lt;span&gt;0&lt;/span&gt;;   &lt;span&gt;//当前是谁在提供服务&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;CodingCeRandomRule&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;//    @SuppressWarnings({&quot;RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE&quot;})&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Server &lt;span&gt;choose&lt;/span&gt;&lt;span&gt;(ILoadBalancer lb, Object key)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (lb == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;            Server server = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;            &lt;span&gt;while&lt;/span&gt;(server == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;                &lt;span&gt;//线程中断&lt;/span&gt;&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; (Thread.interrupted()) {&lt;br/&gt;                    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;                }&lt;br/&gt;&lt;br/&gt;                List&amp;lt;Server&amp;gt; upList = lb.getReachableServers(); &lt;span&gt;//获得活着的服务&lt;/span&gt;&lt;br/&gt;                List&amp;lt;Server&amp;gt; allList = lb.getAllServers();  &lt;span&gt;//获得全部服务&lt;/span&gt;&lt;br/&gt;                &lt;span&gt;int&lt;/span&gt; serverCount = allList.size();&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; (serverCount == &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;                    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;                }&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;                &lt;span&gt;//int index = this.chooseRandomInt(serverCount);  //生成区间随机数&lt;/span&gt;&lt;br/&gt;                &lt;span&gt;//server = (Server)upList.get(index); //从活着的服务, 随机获取一个&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;                &lt;span&gt;//===================================================================&lt;/span&gt;&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; (total &amp;lt; &lt;span&gt;5&lt;/span&gt;) {&lt;br/&gt;                    server = upList.get(currentIndex);&lt;br/&gt;                    total++;&lt;br/&gt;                } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;                    total = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;                    currentIndex++;&lt;br/&gt;                    &lt;span&gt;//判断当前数量是否大于活着的数量&lt;/span&gt;&lt;br/&gt;                    &lt;span&gt;if&lt;/span&gt;(currentIndex &amp;gt; upList.size()) {&lt;br/&gt;                        currentIndex = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;                    }&lt;br/&gt;                    server = upList.get(currentIndex);  &lt;span&gt;//从活着的服务中, 获取指定指定的服务进行操作&lt;/span&gt;&lt;br/&gt;                }&lt;br/&gt;&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; (server == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;                    Thread.yield();&lt;br/&gt;                } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;                    &lt;span&gt;if&lt;/span&gt; (server.isAlive()) {&lt;br/&gt;                        &lt;span&gt;return&lt;/span&gt; server;&lt;br/&gt;                    }&lt;br/&gt;                    server = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;                    Thread.yield();&lt;br/&gt;                }&lt;br/&gt;            }&lt;br/&gt;&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; server;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; &lt;span&gt;chooseRandomInt&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; serverCount)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; ThreadLocalRandom.current().nextInt(serverCount);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Server &lt;span&gt;choose&lt;/span&gt;&lt;span&gt;(Object key)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.choose(&lt;span&gt;this&lt;/span&gt;.getLoadBalancer(), key);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;initWithNiwsConfig&lt;/span&gt;&lt;span&gt;(IClientConfig clientConfig)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;CodingCeRule&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; cn.com.codingce.myrule;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; com.netflix.loadbalancer.IRule;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; com.netflix.loadbalancer.RandomRule;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.context.annotation.Bean;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; org.springframework.context.annotation.Configuration;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@Configuration&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;CodingCeRule&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Bean&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; IRule &lt;span&gt;myRule&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; CodingCeRandomRule();&lt;br/&gt;        &lt;span&gt;//默认是轮询 现在我们定义为 CodingCeRandomRule&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;// 本次自定义   频繁操作 会出现 500 错误 继续自定义写RetryRule&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目地址: https://github.com/xzMhehe/codingce-java&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;pre ng-bind-html=&quot;message.MMActualContent&quot;&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1.0072992700729928&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/v4vz52CcB10g6d3CUFkiaCk2rNzIXwicT9kGzxnZPXRGH0QNGRQia35FUmXicbvOPy4OMbCbhIco5RQiaQ2n3c13Aaw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;137&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;更多推荐内容&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;↓↓↓&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzkwNTMzMg==&amp;amp;mid=2247485522&amp;amp;idx=1&amp;amp;sn=9ebd3307754e00e2c2b1d72d8e26a347&amp;amp;chksm=fde5a809ca92211fb134375394b07050f1a2ff0559a4d9dc740f05e80b18386782d708b6a3c7&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;SQL 语句大全&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzkwNTMzMg==&amp;amp;mid=2247485583&amp;amp;idx=1&amp;amp;sn=00f856332cde40b5a449b1c5c57fb1dc&amp;amp;chksm=fde5a8d4ca9221c2126fbc6a166afebfb05e19039a4d7434318b719372289d58562cf3edbcd6&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;垃圾代码书写准则&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzkwNTMzMg==&amp;amp;mid=2247486132&amp;amp;idx=1&amp;amp;sn=a1dd0ac14d5c90ade2c1120a61f78bdb&amp;amp;chksm=fde5aaefca9223f91b1122185414fbee58040c9be85bdab7ac808c6730c21695d9d5de84d5fc&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;架构设计和常见误区&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzkwNTMzMg==&amp;amp;mid=2247486171&amp;amp;idx=3&amp;amp;sn=f66fc0c30d3512edf808d6f4944e1068&amp;amp;chksm=fde5aa80ca9223965d3e1379f8867a3da536b66141cd1f79ab9f2215552fcb457d345c2f8d49&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;:: 是什么语法？&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzkwNTMzMg==&amp;amp;mid=2247485899&amp;amp;idx=1&amp;amp;sn=8db81731e90d2fb18d8eb1d3745f9263&amp;amp;chksm=fde5a990ca922086f9625aa5843566682c5945fe95fb6ccce0ddde8d63317b223b04f4d1fe01&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;语法糖--JAVA成长之路&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzkwNTMzMg==&amp;amp;mid=2247485766&amp;amp;idx=1&amp;amp;sn=3ba12588d0a828c9317148b2cdb03450&amp;amp;chksm=fde5a91dca92200b34d3265a28e58f38f92109fe284457341b7af65395e13051efac96479989&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;自定义你的github主页&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzkwNTMzMg==&amp;amp;mid=2247486094&amp;amp;idx=1&amp;amp;sn=d697b6edb3f004bbeaf5c5fd0f65e428&amp;amp;chksm=fde5aad5ca9223c37eea478895057fc2362290e7fe9875876cd1670350e95d233f1655a128a6&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;细谈八种架构设计模式及其优缺点概述&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzkwNTMzMg==&amp;amp;mid=2247486105&amp;amp;idx=1&amp;amp;sn=ad3e09a4c25f60bafaae8836a6120768&amp;amp;chksm=fde5aac2ca9223d47362a770473f9a49339fca96f5d30b0a90e2e85eb9b0af0210ac5c44f4cd&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;阿里巴巴JAVA岗发布+内部面试题（含P5-P7）&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzkwNTMzMg==&amp;amp;mid=2247486171&amp;amp;idx=1&amp;amp;sn=9a670893b354d7bc20931912e663d974&amp;amp;chksm=fde5aa80ca922396a3f39f9a5e76790a3b33dcfa079d375f4bc918f9bf2c36d9fa16660c0fe4&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;工作中巧用了这几个设计模式重构代码，女同事直呼666&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4NzkwNTMzMg==&amp;amp;mid=2247486035&amp;amp;idx=1&amp;amp;sn=629c5040a3e96bbf0fd92be11bf96328&amp;amp;chksm=fde5aa08ca92231e4e07464b5fa92b3ec2bd4ab03f6993e96869215c5e4c3e4b434495658be9&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;万字详解，JDK8 的 Lambda、Stream 和日期的使用详解&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a class=&quot;weapp_text_link js_weapp_entry&quot; data-miniprogram-appid=&quot;wxee23f3461202fc71&quot; data-miniprogram-path=&quot;pages/index/index&quot; data-miniprogram-nickname=&quot;掌上编程&quot; href=&quot;&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-servicetype=&quot;&quot;&gt;掌上博客&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;如果你喜欢本文&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;请长按二维码，关注&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;掌上编程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;199&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;199&quot; data-ratio=&quot;1.1582089552238806&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eF01K1HYLqaH0hgtg6cRtT3DYiaBCfc3AKYKicIiakL0WIz1rYcicE0Zhv2BoE5rKibfZn57lTddicdsWY1ia9ic9Y4uxA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;670&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;转发&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;朋友圈&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;，是对我最大的支持哟&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;以上，便是今天的分享，希望大家喜欢，觉得内容不错的，欢迎「&lt;/span&gt;&lt;span&gt;分享&lt;/span&gt;&lt;span&gt;」「&lt;/span&gt;&lt;span&gt;赞&lt;/span&gt;&lt;span&gt;」或者点击「&lt;/span&gt;&lt;span&gt;在看&lt;/span&gt;&lt;span&gt;」支持，谢谢各位。&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>