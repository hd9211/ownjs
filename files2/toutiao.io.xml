<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>01a7594d33e577f7ca834923aa619c13</guid>
<title>[推荐] 快手超大规模集群调度优化实践</title>
<link>https://toutiao.io/k/671eano</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;246&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.4255555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPhukZGKutIgjCpE1ceiawtxqLxc3ogVTgZ1AUrTW5ia8owNjicwnEdEib0fltgiadHhIxTCRkq1mfN2j8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1800&quot;/&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot; data-style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; white-space: normal; max-width: 100%; font-family: -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; letter-spacing: 0.544px; line-height: 27.2px; widows: 1; background-color: rgb(255, 255, 255); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-bottom: -10px; margin-left: -8px; max-width: 100%; width: 18px; height: 18px; border-top: 8px solid rgb(54, 65, 173); border-left: 8px solid rgb(54, 65, 173); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;br data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot;/&gt;&lt;/section&gt;&lt;section data-bgopacity=&quot;50%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot; data-style=&quot;max-width: 100%; width: 543.333px; background: rgb(247, 247, 247); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot;&gt;&lt;p data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot;&gt;&lt;span data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot; data-darkmode-color-16008590572276=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16008590572276=&quot;rgb(0, 128, 255)&quot;&gt;分享嘉宾：房孝敬 快手 大数据架构师&lt;/span&gt;&lt;span data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot; data-darkmode-color-16008590572276=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16008590572276=&quot;rgb(0, 128, 255)&quot;/&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot;&gt;&lt;span data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot; data-darkmode-color-16008590572276=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16008590572276=&quot;rgb(0, 128, 255)&quot;&gt;编辑整理：齐来军&lt;/span&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot;&gt;&lt;span&gt;出品平台：DataFunTalk&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; width: 18px; height: 18px; border-bottom: 8px solid rgb(54, 65, 173); border-right: 8px solid rgb(54, 65, 173); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;导读：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;随着公司业务的快速发展，离线计算集群规模和提交的作业量持续增长，如何支撑超大规模集群，如何满足不同场景的调度需求成为必须要解决的问题。基于以上问题，快手大数据团队基于YARN做了大量的定制和优化，支撑了不同场景下的资源调度需求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;今天的介绍会围绕下面四点展开：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;调度相关背景及快手数据规模与场景&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;快手调度器Kwai scheduler介绍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;多调度场景优化介绍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;其他工作&amp;amp;未来规划&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;01&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;快手数据规模场景&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1. 快手数据规模&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前快手离线计算单集群数万台机器，每日处理数百P数据量，百万级别作业，对大数据存储，计算，调度有非常大的挑战。首先介绍下快手大数据架构体系技术栈。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2. 快手大数据体系架构介绍&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;shape type=&quot;#_x0000_t75&quot; filled=&quot;f&quot;&gt;&lt;imagedata title=&quot;image1&quot;/&gt;&lt;/shape&gt;&lt;img data-backh=&quot;433&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;579&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;433&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPhDMVHAzBYriaOGSWOnc3mc6U6zMySlKiaPLz2ibicLUpwmHhI6UWc2scYc9AS9lRpcMKickS2cZIuInKA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;快手大数据架构底层采用hdfs/hbase构建数据存储层，用于支撑海量数据的存储；&lt;/span&gt;&lt;span&gt;上层是YARN资源调度层，实现百万级别的作业和任务调度；&lt;/span&gt;&lt;span&gt;再上层是各种计算引擎构成的执行层，如Flink、MR、SPARK，PRESTO，TensorFlow等计算框架用于执行业务的计算任务，最上层属于应用层如FLink作业托管平台，机器学习平台，以及SQL提交平台，面向用户提供服务。&lt;/span&gt;&lt;span&gt;本次分享的YARN属于资源调度层，用于把计算引擎的Task快速调度到合适的机器上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3. YARN资源调度系统介绍&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;YARN背景介绍：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;433&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;579&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;433&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPhDMVHAzBYriaOGSWOnc3mc66btqkySFicaqBdVMt01TcIbic52OwfftfmNqCessj5YgNjKwtiaH5LSWw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;YARN是Apache Hadoop旗下的顶级项目，Hadoop 2.0发布时引入，主要用于解决hadoop1.0面临的集群调度性能和扩展性问题。&lt;/span&gt;&lt;span&gt;通过把集群资源管理和作业资源管理拆分成ResourceManager和ApplicationMaster两个组件，实现调度架构从单级架构向二级架构的转变，提升了集群性能。&lt;/span&gt;&lt;span&gt;YARN专注于集群资源管理和调度，包含ResourceManager和NodeManager两个核心组件；&lt;/span&gt;&lt;span&gt;ResourceManager负责集群资源管理和分配；&lt;/span&gt;&lt;span&gt;NodeManager在每台机器上部署，负责管理所在机器上资源。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;YARN调度器演进过程：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;433&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;579&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;433&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPhDMVHAzBYriaOGSWOnc3mc6HQSoMicObzXxGItmqkjMzibNmoDmoMctn5a2APhJhCvnoagvta32hefQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;原生YARN在调度过程中，先选择一个节点，并对队列进行排序，递归从root队列找到最优的叶子队列，再对叶子队列中运行的app进行排序，选出app在这个节点上调度资源。&lt;/span&gt;&lt;span&gt;随着集群规模增长和队列数目的增加，调度耗时越来越长，调度吞吐成为制约集群规模的主要瓶颈。&lt;/span&gt;&lt;span&gt;为提升调度吞吐，调度器的发展经历了三个阶段：&lt;/span&gt;&lt;span&gt;第一阶段通过心跳触发调度过程，实现比较简单，但心跳处理逻辑和调度逻辑在同一个线程，调度和心跳处理逻辑会相互影响。&lt;/span&gt;&lt;span&gt;第二阶段将调度逻辑剥离到单独的线程以降低调度和心跳逻辑耦合性，从而提升了调度性能；&lt;/span&gt;&lt;span&gt;但调度逻辑和心跳处理共享一把大锁，并且调度过程中对队列排序占据大量时间，整体性能提升有限。&lt;/span&gt;&lt;span&gt;第三阶段引入全局调度器的概念，可以并发对队列资源进行调度，最终通过统一的commit过程保证调度结果一致性。&lt;/span&gt;&lt;span&gt;多线程并发调度可以提升调度性能，但没有解决调度过程中排序耗时过多问题，并且引入的多线程调度，会损害调度结果的公平性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;快手基于fair scheduler 单线程调度版本，不断优化单线程调度的性能，但由于单线程调度的局限性，在集群节点接近万台规模时，集群性能出现瓶颈；上线自研的kwai scheduler调度器后，在集群调度性能上有极大的提升，目前单集群规模已达数万台，同时在调度策略方面，支持可插拔的调度架构，方便扩展新的调度策略。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;02&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;Kwai&lt;/span&gt;&lt;span&gt; scheduler&lt;/span&gt;&lt;span&gt;调度器介绍&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;kwai scheduler主要用于解决调度性能问题以及调度策略扩展性问题。性能方面，传统的调度器一次只能调度一个task，并且在调度过程中需要对所有队列以及APP进行排序，有很大的资源开销；kwai scheduler采用多线程并发批量调度模式，一轮可以调度数十万个task。在调度策略方面，传统的调度器先选择节点再选择APP，难以扩充新调度策略。kwai scheduler先选择 APP再选择节点，从而APP可以看到所有节点信息，通过对节点进行过滤与打分排序，可以针对不同场景扩展不同的调度策略。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1. 基于集群状态做全局批量调度&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;433&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;579&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;433&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPhDMVHAzBYriaOGSWOnc3mc66KCDibKsfymib0O1hMzQbsFQyJo6phn9yGGNznBy7K2wic7nDcwgMzs8A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kwai scheduler整体架构如上图所示，ResouceManager中RPC层和事件处理层基本保持不变，主要改动点是将调度逻辑做一个整体的剥离替换原先的fair scheduler调度。&lt;/span&gt;&lt;span&gt;每次调度过程中拉取集群状态做镜像，基于集群镜像并发批量调度，调度完成后，将调度结果推送回去。&lt;/span&gt;&lt;span&gt;App可以通过原有的心跳接口获取调度container。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2. Kwai scheduler 调度流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;433&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;579&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;433&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPhDMVHAzBYriaOGSWOnc3mc6XZ8oAhiczsLuQDrRwVfpBHfXHd5EYAic7sDUkqdyWSKbozbNaEGjNAnQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kwai scheduler 基于集群镜像（节点的资源使用情况；&lt;/span&gt;&lt;span&gt;队列的最小资源和最大资源量，以及当前资源使用量，APP资源使用量和资源需求量等）进行资源的预分配，计算出每个APP可以在这一轮调度中分配多少资源。&lt;/span&gt;&lt;span&gt;APP根据预先分配到的资源量，并发去竞争节点上的空闲资源，如果竞争成功，完成APP的资源调度过程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;APP资源调度过程中，可以根据不同场景为 APP配置不同的调度策略，根据调度策略过滤节点并计算每个节点分数，选出分数最高节点尝试进行资源分配。调度过程中基本都是CPU密集操作，避免了锁的干扰（不同APP竞争节点资源时有轻量的自旋锁），有非常高的性能。并且不同的APP可以多线程并发调度，具备很好的扩展性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3. Kwai scheduler 调度策略&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;433&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;579&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;433&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPhDMVHAzBYriaOGSWOnc3mc6mUoyEh5HX5qus6LPibg5ShSrhrg0RKgEZVTrkuJpDMJlQQNWE3YObHg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kwai scheduler 调度策略主要实现filter和score接口。&lt;/span&gt;&lt;span&gt;filter接口用于过滤节点，score根据节点信息，为节点进行打分，然后选出最优节点进行调度。&lt;/span&gt;&lt;span&gt;比如APP task打散策略，根据每个节点分配的APP资源量，对节点进行打分，节点上分配的APP资源量越多，节点分数越低，从而把APP的task在集群范围内打散到不同的节点。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4. Kwai scheduler调度线上效果&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Kwai scheduler 上线后，支撑单集群数万台机器，1万+作业同时运行，每天调度吞吐量峰值5w/s+，资源分配率93%+，同时支持不同的调度场景。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;03&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;多&lt;/span&gt;&lt;span&gt;调&lt;/span&gt;&lt;span&gt;度场景优化&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1. 离线ETL场景&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;离线场景下如何保障核心作业的SLA是比较核心的问题。在快手，核心作业和普通作业在同一个队列中，通过完善作业分级保障能力和异常节点规避能力，保障核心作业的SLA。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;离线ETL场景中经常会遇到以下情况以及相应的优化方案：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;① 其他队列作业大量占据资源不释放&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过优化队列间资源抢占来解决这个问题。为防止抢占影响过大，默认情况下只有高优先级核心作业触发抢占，并且会限制每轮抢占的最大资源量。抢占过程中根据作业优先级，饥饿等待时间等条件动态计算每个队列可以抢占的资源量，从而把资源倾斜给优先级更高，饥饿等待时间更长的作业。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;② 队列内低优先级作业占据大量资源不释放&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在生产场景下如果低优先级作业占用大量资源不释放，导致优先级比较高的任务无法获取到足够资源，从而导致产出延迟。为解决这个问题提出基于虚拟队列来保障高优先级作业产出。所谓虚拟队列，是在物理队列下，按照一定逻辑规则（比如优先级）抽象出的逻辑队列。每个虚拟队列有一定的资源配额，并且会触发物理队列内部的抢占，从而解决上面的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;③ 低优先级作业占据app solt不释放&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为方便AppSlot资源的管理，抽象出minApp概念，如果App启动时，队列running App小于minApp，将会立刻启动App，不会受限于父队列的maxRunningApp，这样在队列层面保障有可预期的app slot。但同样存在一个问题，队列内部低优先级作业占据大量AppSlot不释放，导致高优先级作业启动延迟。为此提出了App Slot抢占功能。如下图所示，如果发现高优先级作业（P0）长时间pending不能启动，扫描队列内runningApp，选择低优先级作业进入睡眠模式（不再调度新task，极端情况下回收task）从而释放出slot资源，保障高优先级作业能及时启动。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;433&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;579&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;433&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPhDMVHAzBYriaOGSWOnc3mc6KrianOUibnG3Wgjgibm4BgDDAH8Lt4EmS9mJX5AIOopYp9JRc9icGsdBbA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;④ 回溯作业影响生产作业&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;回溯作业的特点在于大量提交多个作业，如果不加控制可能会影响生产作业的产出。主要方案是限制回溯作业最大资源量和最大运行APP数目，将影响控制在一定的范围以内。但是限制最大资源量和运行数目导致大量回溯作业在yarn处于pending状态，对yarn有比较大的压力，通过与上游调度系统打通，反压上层工作流调度系统，阻止新提交的回溯作业，从而减轻了YARN负载。对于已经提交到yarn上的作业，会限制每个队列最大pending app个数，从而保障总体pending app数目可控。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;⑤ 高优先级作业大块资源请求不能及时满足&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;原有的Reserve机制中，调度器可以reserve一批节点，不再调度新task，等待节点上自然释放资源。如果被reserve节点资源长时间不释放，如何处理？针对这个场景开发了reserve抢占功能，用于抢占reserve节点上的低优先级的container，从而保障节点上有足够的空闲资源启动高优先级作业。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;⑥ 规避异常节点，避免核心作业长尾&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过采集节点物理指标，task失败率，task运行速度，以及shuffle失败率等，将此节点标记为异常节点，不再调度新Task。从而尽量减少异常节点的影响范围，规避其导致的Task长尾，失败问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2. Adhoc即时查询场景&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;AdHoc场景主要着力于提升每个用户的查询体验。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过虚拟队列技术，从user维度来划分虚拟队列，实现基于user公平的资源的分配，配合基于user的资源抢占，从而避免大量资源被某一个用户占用，导致其他用户长时间得不到资源。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;433&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;579&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;433&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPhDMVHAzBYriaOGSWOnc3mc6Kv9kp5HW7OhYNzcchIzaGAqiaGojR5HRDvkEFb4ATEhtDROsAHDXwkQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3. 机器学习训练场景&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;机器学习训练场景下，资源需求呈现all or nothing特点，在队列资源紧张时，如果基于yarn原生的公平调度方式，为每个app分配部分资源，容易产生资源分配死锁问题。为此我们采用APP轮转调度策略，采用类似FIFO策略，保障头部APP（头部会动态变化，轮转策略名称的由来）的资源需求，避免死锁问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;4. Flink实时作业场景&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;FLink实时场景下，主要介绍故障发生时，如何尽量减少故障的影响范围，以及如何快速恢复故障作业：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;433&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;579&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;433&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPhDMVHAzBYriaOGSWOnc3mc6a98NpPOrq6NvdBqiaCsd7Z68jHnWsjUicS41pMaCK9FDATZbnE7VNO2g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;虽然可以基于Hawk秒级发现节点宕机，但作业恢复过程可能需要几分钟（申请资源，下载jar包，job recover等）。&lt;/span&gt;&lt;span&gt;我们通过资源冗余分配策略，优化掉其中资源申请和下载jar包过程，最终实现秒级作业恢复。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;04&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;其他工作&lt;/span&gt;&lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;未来规划&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;支持超大规模集群：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;主要目标支撑十万量级的集群规模，目前基于社区的federation方案进行改造。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Hadoop跨IDC集群建设：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;受限于公司物理集群规划，离线集群会分布在不同的IDC，如何基于有限的跨IDC带宽，对数据和计算进行合理排布，是一个非常有挑战的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;在离线资源混合部署：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于在线机器的空闲资源运行离线任务，在资源调度和隔离方面有很多工作要做，目前已经取得一定收益。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;在离线资源统一管理：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前YARN托管离线调度，k8s托管在线调度，如何让资源更弹性更统一？我们也在做一些尝试。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;流shuffle服务建设：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;shuffle过程产生大量大量的随机IO，通过流shuffle服务接管MR和SPARK shuffle过程，将随机IO转变成顺序IO，提升集群算力并减少在离线混部过程中IO影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大家如何有兴趣或者疑问可以随时联系我，也欢迎考虑快手大数据架构的工作机会，一起解决更有挑战的事儿。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16008590572276=&quot;rgb(136, 151, 171)&quot; data-darkmode-original-color-16008590572276=&quot;rgb(63, 74, 89)&quot; data-style=&quot;color: rgb(63, 74, 89); font-family: 微软雅黑; font-size: 11pt; letter-spacing: 0.4pt; text-align: left; text-indent: 0pt; visibility: visible;&quot;&gt;今天的分享就到这里，谢谢大家。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;在文末分享、点赞、在看，给个3连击呗~&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;嘉宾介绍：&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;274&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;274&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;500&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vrk53t8TibicrOhUKmZqaRcO3v2ib1EJI9wlbhjkJlibMiak7TQGCHVEc0Bo19iaKNJKvznRJxTrY8RfFjibLKb9W3oMw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;房孝敬&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;快手 | 大数据架构师&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2017&lt;/span&gt;&lt;span&gt;年加入快手，负责快手大数据资源调度方向，包括超大规模分布式资源调度，分布式计算，&lt;/span&gt;&lt;span&gt;AI&lt;/span&gt;&lt;span&gt;架构等。&lt;/span&gt;&lt;span&gt;此前曾在阿里，腾讯，负责搜索&lt;/span&gt;&lt;span&gt;&amp;amp;&lt;/span&gt;&lt;span&gt;大数据系统研发工作，&lt;/span&gt;&lt;span&gt;hadoop&lt;/span&gt;&lt;span&gt;／&lt;/span&gt;&lt;span&gt;spark&lt;/span&gt;&lt;span&gt;／&lt;/span&gt;&lt;span&gt;k8s&lt;/span&gt;&lt;span&gt;社区的&lt;/span&gt;&lt;span&gt;contributor。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;社群推荐：&lt;/span&gt;&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;欢迎加入 &lt;/span&gt;&lt;strong&gt;&lt;span&gt;DataFunTalk 大数据 &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;交流群，跟同行零距离交流。&lt;strong&gt;识别二维码&lt;/strong&gt;，添加小助手微信，&lt;strong&gt;入群。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;3&quot; data-cropselx2=&quot;223&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;227&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zHbzQPKIBPjWF4KeBlBY77bxkY6RkGYibHjAzoDzvpicWmiamn1unXwekUjw5gfc21jwoGBMEPxsUy3SW0RKicjZYA/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;关于我们：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;DataFunTalk &lt;/span&gt;&lt;/strong&gt;&lt;span&gt;专注于大数据、人工智能技术应用的分享与交流。发起于2017年，在北京、上海、深圳、杭州等城市举办超过100场线下沙龙、论坛及峰会，已邀请近600位专家和学者参与分享。其公众号 DataFunTalk 累计生产原创文章300+，百万+阅读，9万+精准粉丝。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU1NTMyOTI4Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPgiaIKm4YqA09u83TvzKbfsabjfX1TLzaXLAK9MWmC4qI6cuTBJnxygZLZPU49O8g6j8QI9264NMqQ/0?wx_fmt=png&quot; data-nickname=&quot;DataFunTalk&quot; data-alias=&quot;datafuntalk&quot; data-signature=&quot;专注于大数据、人工智能技术应用的分享与交流。致力于成就百万数据科学家。定期组织技术分享直播，并整理大数据、推荐/搜索算法、广告算法、NLP 自然语言处理算法、智能风控、自动驾驶、机器学习/深度学习等技术应用文章。&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;🧐&lt;strong&gt;分享、点赞、在看&lt;/strong&gt;，给个&lt;strong&gt;3连击&lt;/strong&gt;呗！&lt;strong&gt;👇&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5da1976b49486d6cd5fc5c65556570eb</guid>
<title>[推荐] 流量复制方案对比：TCPCopy vs Goreplay</title>
<link>https://toutiao.io/k/cpf8p4q</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;「流量复制」常常应用在准生产环境的测试中，将线上的流量复制到一个准生产环境服务中，测试新功能和服务的承压能力。流量复制可以完全模拟线上的流量，对复杂的业务场景进行真实的服务测试，又不会对生产服务产生任何副作用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于复杂的流量复制应用场景和需求，完全可以立项开发一套完整的复制架构，可参考字节团队自研的 &lt;span&gt;ByteCopy&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt; 项目。而对于一些简单的需求，开源的工具基本可以搞定。开源的流量复制工具有很多，常用的有 goreplay、tcpreplay、tcpcopy 等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文主要来探讨下 tcpcopy 和 goreplay 的方案实现，废话不多说开整。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.57&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sM0hH9BhiaDcSWIdf6OZ7OWfWvYuQcJLx8CvnL8kFib9awH0CHQiaJSLt4FmAVnbCb6icYL6js1iatjyDLdCia3hu9qA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot;/&gt;&lt;figcaption&gt;目录&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;tcpcopy 方案实现&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;tcpcopy 简介&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tcpcopy 由网易技术部&lt;span&gt;王斌&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;等开发，并于 2011 年 9 月开源的。tcpcopy 最新架构如下（来自作者王斌博客：https://blog.csdn.net/wangbin579/article/details/8949315）：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9359165424739195&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sM0hH9BhiaDcSWIdf6OZ7OWfWvYuQcJLxhf6Faic1pY8lx4YDbtxv0m21yCYmotlDHNs3IuwYcSwicWB2AxFNAPMg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;671&quot;/&gt;&lt;figcaption&gt;架构&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tcpcopy 主要有两个组件构成 tcpcopy client 和 intercept 。client 端负责复制流量和转发，intercept 负责对回应流量的拦截和 tcpcopy 的链接处理。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;tcpcopy 搭建&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;实例环境如下，下面来阐述下整个架构的搭建过程：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;192.168.33.11 生产服务器，部署 tcpcopy client&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;192.168.33.12 辅助服务器，部署 intercept&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;192.168.33.13 测试服务器&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;各组件可直接从 github 下载源码包，编译安装：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 起压机部署 tcpcopy client 192.168.33.11&lt;/span&gt;&lt;br/&gt;wget https://github.com/session-replay-tools/tcpcopy/archive/1.0.0.tar.gz&lt;br/&gt;tar xvf 1.0.0.tar.gz&lt;br/&gt;&lt;span&gt;cd&lt;/span&gt; tcpcopy-1.0.0&lt;br/&gt;./configure --prefix=/opt/tcpcopy&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 辅助机部署 intercept 192.168.33.12 , 截获包需要依赖 libpcap 抓包函数库&lt;/span&gt;&lt;br/&gt;yum -y install libpcap-devel&lt;br/&gt;&lt;span&gt;# ubuntu&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# apt install -y libpcap-dev&lt;/span&gt;&lt;br/&gt;https://github.com/session-replay-tools/intercept/archive/1.0.0.tar.gz&lt;br/&gt;tar xvf 1.0.0.tar.gz&lt;br/&gt;&lt;span&gt;cd&lt;/span&gt; intercept-1.0.0&lt;br/&gt;./configure --prefix=/opt/tcpcopy/&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;安装完之后，先启动 intercept，运行如下命令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;/opt/tcpcopy/sbin/intercept -i enp0s8 -F &lt;span&gt;&#x27;tcp and src port 8000&#x27;&lt;/span&gt; -d&lt;br/&gt;&lt;span&gt;# -i，指定网卡 enp0s8&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# -F，过滤，语法和pcap抓包工具一直，如tcpdump&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# -d，以domain的形式启动。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 其他参数可 -h 查看。&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;启动 intercept 之后，再启动 tcpcopy client 。tcpcopy 启动依赖 intercept ，启动时确保 intercept 启动成功。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;/opt/tcpcopy/sbin/tcpcopy -x 8000-192.168.33.13:8000 -s 192.168.33.12 -c 192.168.1.x -n 2 -d&lt;br/&gt;&lt;span&gt;# -x，复制本地8000端口的流量，转发到192.168.33.13机器的8000端口&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# -s，辅助服务器intercept 地址&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# -c，修改转发包的原地址为该地址段的地址，这里也可以是明确的ip。这个ip端用来伪装数据包，方便intercept做路由劫持。&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# -n，流量倍数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# -d，以domain的形式运行&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在测试服务器添加拦截路由，如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 测试机 192.168.33.13&lt;/span&gt;&lt;br/&gt;route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.33.12&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该路由相当于把到 192.168.1.0 网段的包都走网关 192.168.33.12，对测试服务器的回包做伪地址拦截。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这便是 tcpcopy 的整个架构部署了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;包流向分析&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面我们抓包看看这个过程中包是如何流动的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我在 tcpcopy client 机器 192.168.33.11 和测试机器 192.168.33.13 使用 &lt;code&gt;python -m SimpleHTTPServer&lt;/code&gt; 分别起了一个 8000 端口的服务用来测试，从我本机 192.168.33.1 发送请求，在三台机器上抓包。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;tcpcopy client 机器 192.168.33.11 包信息如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3251231527093596&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sM0hH9BhiaDcSWIdf6OZ7OWfWvYuQcJLxzTB8hE02CLOhqYsJCG2bToEArPXUuFcn8lK9MwDrD2ibwf9WiaPfMicicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1827&quot;/&gt;&lt;figcaption&gt;tcpcopy&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;红色标注块为我本机（192.168.33.1）和 tcpcopy client 机器（192.168.33.11）的正常请求交换，从三次握手，到 http 请求，到最后的断链。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;蓝色标注块则为 tcpcopy 复制的流量，可以看到为了让 intercepter 拦截回包流量，tcpcopy 已将包源 ip 地址替换为我们指定的伪网段（192.168.1.0）的地址，这样在回包时，就会根据测试服务器上的路由将回包指向辅助服务器 intercept，避免对生产流量造成影响。这也是为什么复制流量三次握手和 http 都没有回包的原因。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看测试服务器 192.168.33.13 的包：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.1618685497012493&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sM0hH9BhiaDcSWIdf6OZ7OWfWvYuQcJLx9wt7w3pZWKVZjeFuqbr4gQLCpCcWRn6uKcHSmLUYHPI3QM33dlFEZg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1841&quot;/&gt;&lt;figcaption&gt;test server&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;测试服务器的包和正常流量包一样，三次握手到 http 请求，最后断连。这里和测试服务器 192.168.33.13 交互的源地址 ip 已经被 tcpcopy 替换为伪 ip 192.168.1.1 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看 intercept 192.168.33.12 的包：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.23268698060941828&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sM0hH9BhiaDcSWIdf6OZ7OWfWvYuQcJLxgTGadLOqQHMs6cSpdcB7FoVCOhdkbYyytKmfMr5KCIGQEGO0A2eiapg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1805&quot;/&gt;&lt;figcaption&gt;image&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到辅助服务器拦截下来的请求，标注块 1 为复制流量三次握手时的回包，标注块 2 为 http 请求的回包，这便是 intercept 的拦截功能。可以看到在标注块 1、2 之后，辅助服务器（192.168.33.12）和 tcpcopy 服务器（192.168.33.11）进行了数据交换，这部分便是 intercept 的 tcp 处理功能，它把有用的信息返回给 tcpcopy 以便能使 tcpcopy 和测试机的 tcp 链接完成。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据上边抓包，我们得到了和架构图一样的包流动过程，总结如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;生产流量正常请求，服务正常回应。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;tcpcopy 服务在生产机器上复制流量，并修改流量包的源 ip 地址为我们指定的伪网络段(-c 参数指定)，之后将流量转发到测试服务器。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;测试服务器，接受到流量，但包的源地址为伪网络段的地址，回包时根据提前配置好的伪路由，将回包导流到辅助服务器。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;辅助服务器接收测试服务器的回包，但是并不转发。而是解包，只返回部分必要的信息给 tcpcopy，以便完成 tcpcopy 和测试服务器之间的 tcp 交互。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据官方文档，我们还需要注意几个问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;辅助服务器不做包的转发，需要关闭内核参数 &lt;code&gt;ip_forward&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在做测试时，注意上行流量的过滤和测试数据源的隔离，防止对生产数据造成多次操作的影响。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;上边为在线实时的复制模式，tcpcopy 还支持离线方式，具体可查阅&lt;span&gt;文档&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;辅助机需要和测试机在一个网段，以便辅助机作为伪网段的网关使用。这里可以加一次代理，解除这个限制。如使用 nginx 作为测试中转机，将伪路由添加到 nginx 服务器上，测试机只需要向 nginx 注册即可，无需做其他配置。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;goreplay 方案实现&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;goreplay 简介&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Goreplay 是另一个比较常用的流量复制开源工具。与 tcpcopy 相比它的架构更简单，只有一个 gor 组件，如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5818363273453094&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sM0hH9BhiaDcSWIdf6OZ7OWfWvYuQcJLx87DlSNEEbqgdMv15OiaQRKZZxPTNunvEfx8o1d9S6PFsTNnMy6Kbusg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1002&quot;/&gt;&lt;figcaption&gt;image&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只需要在生产服务器上启动一个 gor 进程，它负责所有的工作包括监听、过滤和转发。它的设计遵循 Unix 设计哲学：&lt;em&gt;一切都是由管道组成的，各种输入将数据复用为输出&lt;/em&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输入输出通常被成为插件，常见的有下面几种。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可用输入：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;--input-raw 用于捕获 HTTP 流量，您应该指定 IP 地址或接口和应用程序端口。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;--input-file 接受流量输出的文件（--output-file），用来离线流量重放。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;--input-tcp 如果您决定将来自多个转发器 Gor 实例的流量转发给它，则由 Gor 聚合实例使用。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可用输出：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;--output-http 重放 HTTP 流量到给定的端点，接受基础 URL。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;--output-file 记录传入的流量到文件。更多关于保存和从文件重播&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;--output-tcp 将传入数据转发给另一个 Gor 实例，并与其一起使用--input-tcp。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;--output-stdout 用于调试，输出所有数据到 stdout。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你可以对数据进行限速、过滤、重新，还可以重用中间件实现一些自定义逻辑处理，如私有数据的过滤、认证等个性需求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其他常用参数：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;--output-http &quot;http://staging.com|10&quot; 输出流量的 10%&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;--http-allow-method 根据请求方式过滤。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;--http-allow-url url 白名单，其他请求将会被丢弃。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;--http-disallow-url 遇上一个 url 相反，黑名单，其他的请求会被捕获到。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文不对中间件做过多描述，仅讨论常用功能，对中间件有需求的可参考&lt;span&gt;中间件文档&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;goreplay 搭建&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Goreplay 是使用 golang 开发的，我们可以直接使用编译好的对应各系统的二进制文件，也可以自己编译，我们这里直接使用二进制文件。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;wget https://github.com/buger/goreplay/releases/download/v1.3.0_RC1/gor_1.3_RC1_x64.tar.gz&lt;br/&gt;tar zxvf gor_1.3_RC1_x64.tar.gz&lt;br/&gt;&lt;span&gt;# 解压出二进制文件 gor&lt;/span&gt;&lt;br/&gt;gor&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，直接启动 gor 即可复制流量和转发。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;sudo ./gor --input-raw :8000 --output-http=&lt;span&gt;&quot;http://192.168.33.13:8001&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;复制本地 8000 端口的流量到 http 远端服务&lt;code&gt;http://192.168.33.13:8001&lt;/code&gt;。(复制同端口的流量时，流量会重复。这是 gor 的一个 bug，截止目前 1.3 版本仍可复现，可见&lt;span&gt;issue292&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;goreplay 的流量转发，并不是直接 tcp 包的转发，而是重新组织 http 协议级别的请求，发送到测试服务器。所以它是新的 gor 线程和测试服务器的交互，和监听线程无关，所以无需对流量进行拦截。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;包流向分析&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面我们来看下 gor 复制的流量包的流向过程：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4105720492396814&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sM0hH9BhiaDcSWIdf6OZ7OWfWvYuQcJLxRibWGGxK3ibHs1cy68hGAgv6sKmyft3iaMEibHO3eqwCYRADHCV7utFcgg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2762&quot;/&gt;&lt;figcaption&gt;gor&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;红色标注块为正常流量，蓝色标注块为复制的流量。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到此处，你可能会有疑问，为什么 gor 不用拦截流量？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家仔细看 tcpcopy 和 gor 复制流量的端口，在生产机和测试机建立连接时，tcpcopy 虽然修改了 tcp 包的源 ip，但端口还是用的请求客户端的端口，是 tcp 数据链路层级别的流量复制。而 gor 这里严格来说并不是复制，而是重新构建了 http 请求。使用新端口来和测试机建连，相对的测试机在回包时，即使包是回到了生产机，但由于是和客户端不同的端口，也不会对生产流量造成影响。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;对比总结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到此，我们对流量复制有了些基本的概念和应用了，也对 tcpcopy 和 goreplay 两款开源工具有了一定的认知。两款开源工具各有优缺点，我们来一块总结下。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;tcpcopy 部署架构相对复杂，goreplay 相对简单只需启动一个进程。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;tcpcopy 支持的协议比较丰富，goreplay 根据架构特点仅支持 http。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;tcpcopy 和 goreplay 都支持离线和在线录制回放。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;goreplay 有个中间件模块，可自定义部分过滤逻辑。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单 http 复制 goreplay 完全可以胜任，稍复杂点或应用场景更复杂，那么推荐 tcpcopy。更复杂，要求更高的流量复制，那只能我们自己定制了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，本篇到这结束了，欢迎留言讨论，你觉着最佳流量复制方案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我是DeanWu，一个努力成为真正SRE的人。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;关注公众号「码农吴先生」, 可第一时间获取最新文章。回复关键字「go」「python」获取我收集的学习资料，也可回复关键字「小二」，加我wx拉你进技术交流群，聊技术聊人生~&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3287037037037037&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sM0hH9BhiaDcSWIdf6OZ7OWfWvYuQcJLxC0wYGQ9FOT7AlslkQTMzHKEYKeVjLHMW3rzldm0pRsiayvt4gPgvSmg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2592&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;ByteCopy: &lt;em&gt;https://juejin.cn/post/6857688805835866126&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;王斌: &lt;em&gt;https://github.com/wangbin579&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;文档: &lt;em&gt;https://github.com/session-replay-tools/tcpcopy&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;中间件文档: &lt;em&gt;https://github.com/buger/goreplay/tree/master/middleware&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;p&gt;issue292: &lt;em&gt;https://github.com/buger/goreplay/issues/292&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4b14f0dd83e57e3d5fdf17e03cd4cd60</guid>
<title>[推荐] 硬核！漫画图解 HTTP 基础 + 面试题</title>
<link>https://toutiao.io/k/rmckht1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;blockquote&gt;&lt;p&gt;文章持续更新，可以微信搜一搜「golang小白成长记」第一时间阅读，回复【教程】获golang免费视频教程。本文已经收录在GitHub https://github.com/xiaobaiTech/golangFamily , 有大厂面试完整考点和成长路线，欢迎Star。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img data-ratio=&quot;2.3391959798994977&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEOLVsZs70k5AcZ7Kj8VAaFCn2IxsiccFkYTO1VibibnbtiaIawr7SboXC8w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;398&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.447719298245614&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrE3qZicIZ9g0GgOn0lsEu0tRYcicSTm02Uklst5g5Yyt3kQa8zg4LZ6zag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2850&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h1&gt;&lt;span&gt;什么是HTTP&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;HTTP 全称&lt;strong&gt;超⽂文本传输协议&lt;/strong&gt;，也就是&lt;strong&gt;H&lt;/strong&gt;yper&lt;strong&gt;T&lt;/strong&gt;ext &lt;strong&gt;T&lt;/strong&gt;ransfer &lt;strong&gt;P&lt;/strong&gt;rotocol。&lt;br/&gt;其中我们常见的&lt;strong&gt;文本，图片，视频&lt;/strong&gt;这些东西都可以用超文本进行表示，而我常看的猫片，也属于超文本，所以大家不要再说我偷偷看猫片了，我只是在看超文本。HTTP只是定义了一套传输超文本的规则，只要符合了这一套规则，不管你是用iphone，还是用老爷机，都可以实现猫片的传输。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5171306209850107&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrE1yzbyHae0QvV8fBvK2DxjWiadOTfcg06ZxCvibd1rMaSVicibaoaYoBKbA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;934&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h1&gt;&lt;span&gt;七层网络&lt;/span&gt;&lt;/h1&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.7202702702702702&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrE1TeyxpDmoafh8Bj3TJ1GANKEa8E6ibuJtTjmf7sSj8JKyaKsKQR2Jhg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;740&quot; title=&quot;网络协议&quot;/&gt;&lt;figcaption&gt;网络协议&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;大概了解了&lt;strong&gt;HTTP&lt;/strong&gt;后，给大家看看它在它们家族里的地位。HTTP位于&lt;strong&gt;应用层&lt;/strong&gt;，跟它类似的协议还有常见的&lt;strong&gt;FTP协议&lt;/strong&gt;，常见的&lt;strong&gt;某影天堂&lt;/strong&gt;的下载链接曾经经常是以&lt;strong&gt;FTP开头&lt;/strong&gt;的。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.36675461741424803&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEHOUhRiaAHeiaH2ibjBo3a85WoIdLEO7akzjJGuLUHJOr3lS0DFLzXmzdA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1516&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h1&gt;&lt;span&gt;HTTP报文格式&lt;/span&gt;&lt;/h1&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.8658043654001617&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEftmEXb72BqPP0vNibG855QmNic2eQ9NZD1b5icO1rKMwW5Wyq6ibBjwtFA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1237&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.906&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrELyicjsjC1XfsQbKqBFxdjdY6E7aBjpVDFkmQfvfdJejedodS1ELvpPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;500&quot;/&gt;&lt;/p&gt;&lt;p&gt;有点抽象？不知道小白说的啥？那实操一下，用&lt;code&gt;wireshark&lt;/code&gt;抓包看一下猫片里的请求报文和响应报文具体长什么样子吧&lt;/p&gt;&lt;h2&gt;&lt;span&gt;请求报文&lt;/span&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;GET /cmaskboss/164203142_30_1.enhance.webmask HTTP/1.1&lt;br/&gt;Host: upos-sz-staticks3.bilivideo.com&lt;br/&gt;Connection: keep-alive&lt;br/&gt;User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36&lt;br/&gt;Accept: */*&lt;br/&gt;Origin: https://www.bilibili.com&lt;br/&gt;Sec-Fetch-Site: cross-site&lt;br/&gt;Sec-Fetch-Mode: cors&lt;br/&gt;Sec-Fetch-Dest: empty&lt;br/&gt;Referer: https://www.bilibili.com/&lt;br/&gt;Accept-Encoding: identity&lt;br/&gt;Accept-Language: zh-CN,zh;q=0.9&lt;br/&gt;Range: bytes=0-16&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这上面第一行的GET 就是&lt;strong&gt;请求方法&lt;/strong&gt;，&lt;code&gt;/cmaskboss/164203142_30_1.enhance.webmask&lt;/code&gt; 则是 &lt;strong&gt;URL&lt;/strong&gt; , 而&lt;code&gt;HTTP/1.1&lt;/code&gt;则是&lt;strong&gt;协议版本&lt;/strong&gt;。接下来从&lt;code&gt;Host&lt;/code&gt;开始到最后一行&lt;code&gt;Range&lt;/code&gt;，都是&lt;strong&gt;Headers头&lt;/strong&gt;。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;响应报文&lt;/span&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;HTTP/1.1 &lt;span&gt;206&lt;/span&gt; Partial Content&lt;br/&gt;&lt;span&gt;Content-Type: application/octet-stream&lt;br/&gt;Content-Length: 17&lt;br/&gt;Connection: keep-alive&lt;br/&gt;Server: Tengine&lt;br/&gt;ETag: &quot;92086de1e6d1d4791fb950a0ac7e30ba&quot;&lt;br/&gt;Date: Sat, 30 Jan 2021 09:31:31 GMT&lt;br/&gt;Last-Modified: Sun, 04 Oct 2020 01:54:28 GMT&lt;br/&gt;Expires: Mon, 01 Mar 2021 09:31:31 GMT&lt;br/&gt;Age: 1018695&lt;br/&gt;Content-Range: bytes 0-16/353225&lt;br/&gt;Accept-Ranges: bytes&lt;br/&gt;X-Application-Context: application&lt;br/&gt;x-kss-request-id: 75bcbfa8ab194e3c825e89c81a912692&lt;br/&gt;x-kss-BucketOwner: MjAwMDAyMDEwNw==&lt;br/&gt;X-Info-StorageClass: -&lt;br/&gt;Content-MD5: kght4ebR1HkfuVCgrH4wug==&lt;br/&gt;X-Cache-Status: HIT from KS-CLOUD-JH-MP-01-03&lt;br/&gt;X-Cache-Status: HIT from KS-CLOUD-TJ-UN-14-13&lt;br/&gt;X-Cache-Status: HIT from KS-CLOUD-LF-UN-11-25&lt;br/&gt;Access-Control-Allow-Origin: https://www.bilibili.com&lt;br/&gt;Access-Control-Allow-Headers: Origin,X-Requested-With,Content-Type,Accept,range&lt;br/&gt;X-Cdn-Request-ID: 7e2c783ca7d392624118593ec1dc66bc&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;类似请求报文，&lt;code&gt;HTTP/1.1&lt;/code&gt;是&lt;strong&gt;协议版本&lt;/strong&gt;，&lt;code&gt;206&lt;/code&gt;是&lt;strong&gt;状态码&lt;/strong&gt;，&lt;code&gt;Partial Content&lt;/code&gt; 则是&lt;strong&gt;状态描述符&lt;/strong&gt;。接下来从&lt;code&gt;Content-Type&lt;/code&gt;开始到最后一行&lt;code&gt;X-Cdn-Request-ID&lt;/code&gt;都是&lt;strong&gt;Headers信息&lt;/strong&gt;。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;报文信息解读&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;其实上面的抓包信息，在浏览器里按F12就能看到，之所以要用&lt;code&gt;wireshark&lt;/code&gt;可能&lt;strong&gt;只是装X效果比较好吧&lt;/strong&gt;。按下F12看到的响应数据就跟下图展示的那样。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.8342541436464088&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrE22P3ic8ibogfmLuE2AKvhPsZiaRN7YnVs0NfOdhejwGEOHvArpLPBAZOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1086&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;1.请求数据&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.017786561264822&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEmorI6ucwY46Z9YfwzXqX6eBBsU55hqFxXDnYd2O1mAMbENuaTEMlcw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1012&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;2.响应数据&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.094758064516129&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEs2qgWqFdk4F0FCIgENfhUQ0tCKbvS5Z6mhiapFlSx3ibXN26t1W2DibEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;992&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;3.Request URL&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;URL是什么&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;URL 代表着是统一资源定位符（Uniform Resource Locator）。作用是为了告诉使用者 某个资源在 Web 上的地址。这个资源可以是一个 HTML 页面，一个 CSS 文档，一幅图像或一个猫片等等。上面我们请求猫片的URL就是 &lt;code&gt;https://upos-sz-staticks3.bilivideo.com/cmaskboss/164203142_30_1.enhance.webmask&lt;/code&gt; 这里面细分，又可以分为好几个部分。&lt;/p&gt;&lt;p&gt;表示该URL的协议部分为http还是https，会用//为分隔符。上面的URL表示网页用的是HTTPS协议，而上面提到的X影天堂用的则是ftp协议的下载链接。&lt;/p&gt;&lt;p&gt;域名是&lt;code&gt;upos-sz-staticks3.bilivideo.com&lt;/code&gt;，在发送请求前，会向DNS服务器解析IP，如果已经知道ip，还可以跳过DNS解析那一步，直接把IP当做域名部分使用。&lt;/p&gt;&lt;p&gt;域名后面有些时候会带有端口，和域名之间用:分隔，端口不是一个URL的必须的部分。当网址为&lt;strong&gt;http://&lt;/strong&gt;时，默认端口为&lt;strong&gt;80&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;当网址为&lt;strong&gt;https://&lt;/strong&gt;时，默认端口为&lt;strong&gt;443&lt;/strong&gt;，以上两种都可以省略端口号。上面的URL其实&lt;strong&gt;省略了443端口&lt;/strong&gt;号。&lt;/p&gt;&lt;p&gt;从域名的第一个/开始到最后一个/为止，是虚拟目录的部分。虚拟目录也不是URL必须的部分，本例中的虚拟目录是&lt;code&gt;/cmaskboss/&lt;/code&gt;&lt;/p&gt;&lt;p&gt;从域名最后一个/开始到?为止，是文件名部分；如果没有?，则是从域名最后一个/开始到#为止，是文件名部分；如果没有?和#，那么就从域名的最后一个/从开始到结束，都是文件名部分。本例中的文件名是&lt;code&gt;164203142_30_1.enhance.webmask&lt;/code&gt;，文件名也不是一个URL的必须部分。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;URL 和 URI 的区别&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;其实一直有个误解，很多人以为URI是URL的子集，其实应该反过来。URL是URI的子集才对。简单解释下。&lt;br/&gt;假设&quot;小白&quot;(URI)是一种资源，而&quot;在迪丽亦巴的怀里&quot;表明了一个位置。如果你想要找到（locate）小白，那么你可以到&quot;在迪丽亦巴怀里&quot;找到小白，而&quot;在迪丽亦巴怀里的/小白&quot;才是我们常说的URL。而&quot;在迪丽亦巴怀里的/小白&quot;（URL）显然是&quot;小白&quot;（URI）的子集，毕竟，&quot;小白&quot;还可能是&quot;在牛亦菲怀里的/小白&quot;（其他URL）。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.46277097078228085&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEFiaeOdEvCaLYicNsr6bSjG9Ks6lQ60rDyfJzkLicol39IBG7nhWAsrqTA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1061&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;4.Request Method&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;HTTP 定义了一组&lt;strong&gt;请求方法&lt;/strong&gt;，以表明要对给定资源执行的操作。指示针对给定资源要执行的期望动作.。虽然他们也可以是名词，但这些请求方法有时被称为HTTP动词.。每一个请求方法都实现了不同的语义。&lt;/p&gt;&lt;p&gt;这次请求B站猫片的请求里用的是GET，意味着获取。但其实HTTP定义了多种请求方法，来满足各种需求。除了Get，还有几个POST、HEAD、OPTIONS、PUT、DELETE、TRACE 和 CONNECT。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.0987012987012987&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEQd3YkOiax8WhkOpaDcEQGbWAohMh63t9JCWS39nibYCS7iauaR6wcFjKA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;385&quot;/&gt;&lt;/p&gt;&lt;p&gt;常见的各个请求方法的具体功能如下：&lt;/p&gt;&lt;h3&gt;&lt;span&gt;GET&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;请求指定的页面信息，并返回消息主体(body)+头信息(header)。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;HEAD：&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;HEAD和GET本质是一样的，区别在于HEAD只返回头信息(header)，不返回消息主体(body)。大家不要以为它没用，它跟GET和POST一样，在http/1.0的时候就存在了，实属三元老之一了。主要用途&lt;/p&gt;&lt;h3&gt;&lt;span&gt;POST&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;向服务器提交数据。这个方法用途广泛，几乎目前所有的提交操作都是靠这个完成。POST跟GET最常用，但最大的区别在于，POST每次调用都可能会修改数据，是非幂等的，而GET类似于只读，是幂等的。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;PUT：&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;这个方法比较少见。在HTTP规范中POST是非等幂的，多次调用会产生不同的结果。比如：创建一个用户,由于网络原因或是其他原因多创建了几次,那么将会有多个用户被创建。而PUT id/xiaobai 则会创建一个id为 xiaobai 的用户，多次调用还是会创建的结果是一样的，所以PUT是等幂的。但是一般为了避免造成心智负担，实战中也会使用POST替代PUT。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;DELETE：&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;删除某一个资源。基本上这个也很少见，一般实战中如果是删除操作，也是使用POST来替代。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;OPTIONS：&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;span&gt;options是什么&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;它用于获取当前URL所支持的方法。若请求成功，则它会在HTTP响应头部中带上给各种“Allow”的头，表明某个请求在对应的服务器中都支持哪种请求方法。比如下图：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.0512820512820513&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEcPHg8kxmK0OWwicbic1jduvicafhOXgHhcmAsLntSULkNahoU6vrKDyRQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1014&quot;/&gt;&lt;/p&gt;&lt;p&gt;这里面需要关注的点有两个&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;Request Header里的关键字段&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.1807372175980975&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEUicpNnu4UKJptMXMDM4etg3x2zffQicpk5uSGC2uK1gOTb9bmpQibN6dw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;841&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Response Header里的关键字段&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.33753943217665616&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEn0mxNyyCMvUqQwAJoxHLN6rR022bZIOg09RSISGLiahtj19JRhxDCzA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;951&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;code&gt;Options&lt;/code&gt;堪称是网络协议中的老实人，就好像老实人刚谈了个女朋友，每次牵手前都要问下人家 “我可以牵你的手吗？”， “我可以抱你吗？”，得到了答应后才会下手。差点被这老实人气质感动得留下了不争气的泪水。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.9850993377483444&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEt4hwlvQGsRBIwrWddOUQY3zTmX1yIRFDHlInXJVHDySdT2oHRwLCfg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;604&quot;/&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;什么时候需要使用options&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;在&lt;strong&gt;跨域&lt;/strong&gt;（记住这个词，待会解释）的情况下，浏览器发起&lt;strong&gt;复杂请求前&lt;/strong&gt;会&lt;strong&gt;自动&lt;/strong&gt;发起 options 请求。跨域共享标准规范要求，对那些可能对服务器数据产生副作用的 HTTP 请求方法（特别是 GET 以外的 HTTP 请求，或者搭配某些 MIME 类型的 POST 请求），浏览器必须首先使用 options 方法发起一个预检请求，从而获知服务端是否允许该跨域请求。服务器确认允许之后，才发起实际的 HTTP 请求。&lt;/p&gt;&lt;p&gt;这里提到了两个关键词：&lt;/p&gt;&lt;h4&gt;&lt;span&gt;什么是简单请求和复杂请求。&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;某些请求不会触发 CORS 预检请求，这样的请求一般称为&quot;简单请求&quot;，而会触发预检的请求则为&quot;复杂请求&quot;。&lt;/p&gt;&lt;p&gt;1.简单请求&lt;/p&gt;&lt;p&gt;2.复杂请求&lt;/p&gt;&lt;p&gt;由此可见，因为上述请求在获取B站资源的请求Headers里带有 &lt;code&gt;Access-Control-Request-Headers: range&lt;/code&gt; , 而&lt;code&gt;range&lt;/code&gt;正好不在简单请求的条件2中提到的Headers范围里，因此属于&lt;strong&gt;复杂请求&lt;/strong&gt;，于是触发预检options请求。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;什么是跨域&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;刚刚提到了一个词叫&lt;strong&gt;跨域&lt;/strong&gt;，那什么是跨域呢？在了解跨域之前，首先要了解一个概念：&lt;strong&gt;同源&lt;/strong&gt;。所谓&lt;strong&gt;同源&lt;/strong&gt;是指，&lt;strong&gt;域名、协议、端口均相同&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.906&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrELyicjsjC1XfsQbKqBFxdjdY6E7aBjpVDFkmQfvfdJejedodS1ELvpPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;500&quot;/&gt;&lt;/p&gt;&lt;p&gt;不明白没关系，举个例子。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.23585598824393827&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrE8323QcdLJjeAVnz0BaiaQfPNEjcEUKd1snzibibq9g58odsdkaNjELuCA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1361&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;需要特别注意的是，localhost和127.0.0.1虽然都指向本机，但也&lt;strong&gt;不属于同源&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;而&lt;strong&gt;非同源&lt;/strong&gt;之间网页调用就是我们所说的&lt;strong&gt;跨域&lt;/strong&gt;。在&lt;strong&gt;浏览器&lt;/strong&gt;同源策略限制下，向不同&lt;strong&gt;源&lt;/strong&gt;发送XHR请求，&lt;strong&gt;浏览器&lt;/strong&gt;认为该请求不受信任，禁止请求，具体表现为请求后不正常响应。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;options带来什么问题&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;由此可见，复杂请求的条件其实非常容易满足，而一旦满足复杂请求的条件，则浏览器便会发送2次请求（一次预检options，一次复杂请求），这一次options就一来一回（一个RTT），显然会导致延迟和不必要的网络资源浪费，高并发情况下则可能为服务器带来严重的性能消耗。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;2.287878787878788&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEXbNa1I3v7aico54ibiaq1HVvOWSQBA5WC9I2Fnv6dHIXibAVlyZkvgK8RQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;924&quot;/&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;如何优化options&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;每次复杂请求前都会调用一次options，这其实非常没有必要。因为大部分时候相同的请求，短时间内获得的结果是不会变的，是否可以通过浏览器缓存省掉这一次查询？&lt;/p&gt;&lt;p&gt;&lt;code&gt;Access-Control-Max-Age&lt;/code&gt;就是优化这个流程中使用的一个Header。它的作用是当你每次请求&lt;code&gt;options&lt;/code&gt;方法时，服务端返回调用支持的方法（Access-Control-Allow-Methods ）和Headers（Access-Control-Allow-Headers）有哪些，同时告诉你，它在接下来 &lt;code&gt;Access-Control-Max-Age&lt;/code&gt;时间（单位是秒）里都支持，则这段时间内，不再需要使用options进行请求。特别注意的是，当&lt;code&gt;Access-Control-Max-Age&lt;/code&gt;的值为-1时，表示禁用缓存，每一次请求都需要发送预检请求，即用OPTIONS请求进行检测。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.1715976331360947&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEuicSFP7ocJArXFp1nfeKkw78EvAgA1JgibdNTPwNtwuCibL6iaayLtibdwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1014&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;5.Status Code&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;状态码是什么&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;HTTP Status Code是常说的HTTP状态码。当用户访问一个网页时，浏览器会向网页所在服务器发出请求。服务器则会根据请求作出响应，而状态码则是响应的一部分，代表着本次请求的结果。所有状态码的第一个数字代表了响应的大概含义，组合上第二第三个数字则可以表示更具体的原因。如果请求失败了，通过这个状态码，大概初步判断出这次请求失败的原因。以下是五类状态码的含义。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.43193997856377275&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrE8TglTFFicSf4DL9XSQXYaY6ibXicWTMicO0EqjFLe9icRRgZruBvLUxLYbw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;933&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;状态码流程&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;可以根据以下流程图了解下各类状态码间的关系。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5417348608837971&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEW0CsR8ERKn65Lm2TEngVGJliarrsBvmq7ofib1DY3GDxa0icaeRNS3zxw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1222&quot;/&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1.998759305210918&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEmLXtPbG8cPfoibcPKiafgCsYIKuYwPoIiaZKzSEozwRduNuuku0q22P3Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1612&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-ratio=&quot;2.8615209988649264&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEojbeia7juhLfgic5ic6pPE4V3licCOPEC7bsWIDzESRNQBOEXibpcYQStQQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1762&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.8120649651972158&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEqqbkxZmX326mfOHlrhBCMDHiarcricYcxRF0zhVF5BbcaOXSreWcY6PA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;862&quot;/&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;常见状态码介绍&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;这是最常见的状态码。代表请求已成功，数据也正常返回。而B站猫片里虽然响应成功了，但却不是200，而是206，是为什么呢，接下去继续看看。&lt;/p&gt;&lt;p&gt;这个状态码在上面B站请求的响应结果。服务器已经成功处理了部分 GET 请求。类似于B站看视频或者迅雷这类的 HTTP下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;307 Temporary Redirect&lt;/p&gt;&lt;p&gt;内部重定向。重定向的意思是，当你输入一个网址的时候，浏览器会自动帮你跳转到另外一个网址上。比如，当你在浏览器输入框输入&lt;code&gt;http://www.baidu.com/&lt;/code&gt;时。由于使用http并不安全，百度会自动帮你跳转到它对应的https网页上。而此时，需要重定向的地址，会通过&lt;code&gt;Response Headers&lt;/code&gt;的&lt;code&gt;Location&lt;/code&gt;返回&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.6003717472118959&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrE4jsEsticM9rrxpWfkACHicLlYEQZtjHtMRLX0V851g1iap772pzcGaKlg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1076&quot;/&gt;&lt;/p&gt;&lt;p&gt;404 Not Found&lt;/p&gt;&lt;p&gt;请求失败，请求所希望得到的资源未被在服务器上发现。出现这个错误的最有可能的原因是服务器端没有这个页面，或者是Request Method与注册URL的Method不一致，比如我有一个URL在服务端注册的Request Method 为 &lt;strong&gt;POST&lt;/strong&gt;，但调用的时候却错误用了&lt;strong&gt;GET&lt;/strong&gt;，则也会出现404错误。&lt;/p&gt;&lt;p&gt;499 Client has closed connection&lt;/p&gt;&lt;p&gt;网络请求过程中，由于服务端处理时间过长，客户端超时。一般常见于，后端服务器处理时间过长，而客户端也设置了一个超时等待时间，客户端等得“不耐烦”了，主动关掉连接时报出。&lt;/p&gt;&lt;figure/&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7015625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEc39zPecdHQoyzVasylAMR4mnQPK1bdenbose5V165NFtxb808HW73Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;502 Bad Gateway&lt;/p&gt;&lt;p&gt;服务器方面无法给予正常的响应。一般常见于服务器崩溃后，nginx 无法正常收到服务端的响应，给客户端返回502状态码。&lt;/p&gt;&lt;figure&gt;&lt;br/&gt;&lt;/figure&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6921875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEc7m7jb5VMiaWOSGl9zHMwUbTcTyjegfygfia4iamrFwiakHPwRPPiaOZ5HQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;504 Gateway Timeout&lt;/p&gt;&lt;p&gt;网络请求过程中，由于服务端处理时间过长，网关超时。一般常见于，后端服务器逻辑处理时间过长，甚至长于 nginx设置的最长等待时间时报错。它跟 499 状态码非常像，区别在于499 表示的是客户端超时，504是网关超时。如果是499超时，可以考虑修改客户端的代码调整超时时间，如果是504，则考虑调整nginx的超时配置。&lt;/p&gt;&lt;figure&gt;&lt;br/&gt;&lt;/figure&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.71015625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEXTkeldSlJwU2iatpaM4ERtV4q5KGOeAXS9UaSCky7ticQG8bQI4sblicg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span&gt;6. Headers&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;Content-Length&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Content-Length&lt;/code&gt;是HTTP的消息长度, 用&lt;strong&gt;十进制数字&lt;/strong&gt;表示。&lt;code&gt;Content-Length&lt;/code&gt;首部指出报文中消息的当前实际字节大小。如果消息文本进行了gzip压缩的话， &lt;code&gt;Content-Length&lt;/code&gt;指的就是压缩后的大小而不是原始大小。&lt;/p&gt;&lt;p&gt;正常情况下&lt;code&gt;Content-Length&lt;/code&gt;是不需要手动去设置的，大部分语言的网络库都会自动封装好，但是如果在一些特殊情况下，出现&lt;code&gt;Content-Length&lt;/code&gt;与实际要发送的消息大小不一致，就会出现一些问题。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;如果&lt;code&gt;Content-Length&lt;/code&gt; &amp;lt; 实际长度&lt;/p&gt;&lt;p&gt;下面启动一个HTTP服务器，所有语言都一样，示例里使用了golang。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt;  &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&quot;io/ioutil&quot;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&quot;log&quot;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&quot;net/http&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;// w表示response对象，返回给客户端的内容都在对象里处理&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// r表示客户端请求对象，包含了请求头，请求参数等等&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;index&lt;/span&gt;&lt;span&gt;(w http.ResponseWriter, r *http.Request)&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  b, _ := ioutil.ReadAll(r.Body)&lt;br/&gt;  fmt.Printf(&lt;span&gt;&quot;request body=%#v, content_length=%v \nheaders=%v&quot;&lt;/span&gt;,&lt;span&gt;string&lt;/span&gt;(b), r.ContentLength, r.Header)&lt;br/&gt;  &lt;span&gt;// 往w里写入内容，就会在浏览器里输出&lt;/span&gt;&lt;br/&gt;  fmt.Fprintf(w, &lt;span&gt;string&lt;/span&gt;(b))&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;// 设置路由，如果访问/，则调用index方法&lt;/span&gt;&lt;br/&gt;  http.HandleFunc(&lt;span&gt;&quot;/&quot;&lt;/span&gt;, index)&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;// 启动web服务，监听9090端口&lt;/span&gt;&lt;br/&gt;  err := http.ListenAndServe(&lt;span&gt;&quot;:9999&quot;&lt;/span&gt;, &lt;span&gt;nil&lt;/span&gt;)&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; err != &lt;span&gt;nil&lt;/span&gt; {&lt;br/&gt;      log.Fatal(&lt;span&gt;&quot;ListenAndServe: &quot;&lt;/span&gt;, err)&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在控制台输入&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot; style=&quot;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;&quot;&amp;gt; curl -L -X POST &#x27;http://127.0.0.1:9999&#x27; -H &#x27;Content-Type: application/json&#x27; -H &#x27;Content-Length: 5&#x27; -d &#x27;1234567&#x27; |  jq&lt;br/&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt; Total    % Received % Xferd  Average Speed   Time    Time     Time  Current&lt;/span&gt;&lt;br/&gt;                               Dload  Upload   Total   Spent    Left  Speed&lt;br/&gt;100    12  100     5  100     7    828   1160 --:--:-- --:--:-- --:--:--  1400&lt;br/&gt;12345&lt;br/&gt;&amp;lt;/span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入的body是 &lt;code&gt;1234567&lt;/code&gt;，共&lt;strong&gt;7个数字&lt;/strong&gt;，但是输入的 &lt;code&gt;Content-Length&lt;/code&gt;为 5。到了服务器那，收到了 &lt;code&gt;12345&lt;/code&gt;，共&lt;strong&gt;5个数字&lt;/strong&gt;，数量上跟输入的&lt;code&gt;Content-Length&lt;/code&gt;一致。由此可见当&lt;code&gt;Content-Length&lt;/code&gt; &amp;lt; 实际长度， 消息会被截断。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果&lt;code&gt;Content-Length&lt;/code&gt; &amp;gt;  实际长度&lt;/p&gt;&lt;p&gt;还是上面的服务端代码，但是控制台输入以下命令&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;$&lt;/span&gt;&lt;span&gt; curl -L -X POST &lt;span&gt;&#x27;http://127.0.0.1:9999&#x27;&lt;/span&gt; -H &lt;span&gt;&#x27;Content-Type: application/json&#x27;&lt;/span&gt; -H &lt;span&gt;&#x27;Content-Length: 100&#x27;&lt;/span&gt; -d &lt;span&gt;&#x27;1234567&#x27;&lt;/span&gt; | jq&lt;/span&gt;&lt;br/&gt;&lt;span&gt;%&lt;/span&gt;&lt;span&gt; Total    % Received % Xferd  Average Speed   Time    Time     Time  Current&lt;/span&gt;&lt;br/&gt;                               Dload  Upload   Total   Spent    Left  Speed&lt;br/&gt;100     7    0     0    0     7      0      0 --:--:--  0:01:19 --:--:--     0&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这次情况不太一样，会发现请求一直阻塞没有返回。这是因为输入的body是 &lt;code&gt;1234567&lt;/code&gt;，共&lt;strong&gt;7个数字&lt;/strong&gt;，但是输入的 &lt;code&gt;Content-Length&lt;/code&gt;为 100。也就是服务端一直认为这次的body&lt;strong&gt;长度为100&lt;/strong&gt;，但是目前只收到了&lt;strong&gt;部分消息（长度为7）&lt;/strong&gt;，剩余的长度为93的消息由于各种原因&lt;strong&gt;还在路上&lt;/strong&gt;，因此选择&lt;strong&gt;傻傻等待剩下的消息&lt;/strong&gt;，就造成了上面提到的阻塞。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;Range&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.8592592592592593&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEVaMJquVzGtic48Ox4ViaUib5jHGGVdXqI82yboz41zoSanrzvy1bp7bBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1350&quot;/&gt;&lt;/p&gt;&lt;p&gt;视频播放需要支持用户调整播放进度，支持让用户选择直接跳到中间部分开始播放。为了实现这个功能，需要通过HTTP Range Requests 协议用于指定需要获取视频片段。而 Request Header里的range头则是用于指定要请求文件的起始和结束位置。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.0528846153846154&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEhuXVdGdfNfW6T2CxylwwdpziaHLaBkULA29eHzoXe24W8usPhbqIVgw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;832&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.1063348416289593&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEXEjQ6JQl8YuiaQkQ9oicUPntZX6goqia444Gqu9HwK1nicQrhV47VF5KSQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;884&quot;/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;如果服务器不支持，直接忽略 Range 头，浏览器会正常按流式加载整个视频文件，以状态码 200 响应即可。另外，当我们在 html 中放一个 video 标签，浏览器会直接发起一个 &lt;code&gt;Range: bytes=0-&lt;/code&gt; 的请求，向服务器请求从开始到结尾的完整文件。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如果服务器支持 Range Requests，会读取视频文件，并将他的第 162653～242638 字节提取出来，响应码为 206，则浏览器会在接收到足够字节（比如当前播放进度往后推20s）时结束掉请求，以节省网络流量；当播放进度继续往前，缓存不够时，浏览器会发起一个新的 Range Requests 请求，请求的 Range 直接从缓存结尾的字节开始，只加载剩余的部分文件。同时返回的Response Headers中有一个 content-range 的字段域，用于告诉了客户端发送了多少数据。content-range  描述了响应覆盖的范围和整个实体长度。一般格式：&lt;code&gt;Content-Range：开始字节位置-结束字节位置／文件大小（byte）&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;Connection&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;span&gt;长连接和短连接&lt;/span&gt;&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;Connection: close&lt;/p&gt;&lt;p&gt;表示请求响应完成之后立即关闭连接，这是HTTP/1.0请求的默认值。每次请求都经过“创建tcp连接 -&amp;gt; 请求资源 -&amp;gt; 响应资源 -&amp;gt; 释放连接”这样的过程&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Connection: keep-alive&lt;/p&gt;&lt;p&gt;表示连接不立即关闭，可以继续响应下一个请求。HTTP/1.1的请求默认使用一个持久连接。可以做到只建立一次连接，多次资源请求都复用该连接，完成后关闭。流程上是 建立tcp连接 -&amp;gt; 请求资源 -&amp;gt; 响应资源 -&amp;gt; … （保持连接）…  -&amp;gt;  第n次请求资源 -&amp;gt; 第n次响应资源 -&amp;gt; 释放连接。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;在http1.1中Request Header和Reponse Header中都有可能出现一个Connection: keep-alive 头信息。Request Header里的Connection: keep-alive 头是为了告诉服务端，客户端想要以长连接形式进行通信。而Response Header里的Connection: keep-alive 头是服务端告诉客户端，我的服务器支持以长连接的方式进行通信。如果不能使用长连接，会&lt;strong&gt;返回  Connection: close ，相当于告诉客户端“我不支持长连接，你死了这条心，老老实实用短连接吧&lt;/strong&gt;” 。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;HTTP为什么要使用长连接&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;我们知道 HTTP 建立在 TCP 传输层协议之上，而 TCP 的建立需要三次握手，关闭需要四次挥手，这些步骤都需要时间，带给 HTTP 的就是请求响应时延。如果使用短连接，那么每次数据传输都需要经历一次上面提到的几个步骤，如果能只连接一次，保持住这个连接不断开，期间通信就可以省下建立连接和断开连接的过程，对于提升HTTP性能有很大的帮助。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;2.885157096424702&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrECxhRZULRugDkTicq4Hv0WU1S6F8EWgvpR4L4NanZTjIS0icRXgNfuAiaQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;923&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.9989154013015185&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEPF5akEr3ZCdjKMSu5NLVzV1Gpdic7zMAhWY8xGFWibV0LiaUBPgDd9yJQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;922&quot;/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;长连接&lt;/strong&gt;可以&lt;strong&gt;省去较多的TCP建立和关闭的操作，减少浪费，节约时间&lt;/strong&gt;。对于频繁请求资源的客户来说，较适用长连接。但是在长连接的应用场景下，需要有一方主动关闭连接。如果客户端和服务端之间的连接一直不关闭的话，连接数则会越来越多，严重的时候会造成资源占用过高。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;解决方案也比较简单。如果这些连接其实长时间内并没有任何数据传输的话，那其实属于空闲连接，这时候可以在服务端设置空闲连接的存活时间，超过一定时间后由服务端主动断掉，从而保证无用连接及时释放。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;Cookies&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;span&gt;Cookies是什么&lt;/span&gt;&lt;/h4&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;Cookie 是浏览器访问服务器后，服务器传给浏览器的一段数据。里面一般带有该浏览器的身份信息。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;浏览器需要保存这段数据，不得轻易删除。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;此后每次浏览器访问该服务器，都必须带上这段数据。服务器用使用这段数据确认浏览器身份信息。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4&gt;&lt;span&gt;Cookie的作用&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;Cookie 一般有两个作用。&lt;/p&gt;&lt;p&gt;1.识别用户身份。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;举个例子。用户 A 用浏览器访问了“猫猫网”，“猫猫网”的服务器就会立刻给 A 返回一段Cookie数据，内含「uid=a」。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;当 A 再次访问“猫猫网”下的其他页面时，比如跳转到“猫猫交友评论”，就会附带上「uid=a」这段数据。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;同理，用户 B 用浏览器访问“猫猫网” 时，就给 B 分配了一段Cookie数据，内含「uid=b」。B 之后访问“猫猫网”的时候，就会一直带上「uid=b」这段数据。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;因此“猫猫网”的服务器通过Cookie数据就能区分 A 和 B 两个用户了。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;2.持久化用户信息。&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;因为cookies的数据会被用户浏览器保存到本地下。因此可以利用这一特点保持一些简单的用户数据。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;比如一些博客网站，可以通过cookies记录下用户的性别年龄等信息，以此进行一些个性化展示。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;当然上面提到的都是一些比较粗糙的场景，是为了方便大家理解cookies的功能。实际使用cookies会非常谨慎。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;Referrer Policy 和 Referrer&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.1950207468879668&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrETULWrTtorwZiauv1NhQ1roIQsHMZRicfYrDZOqp0JqRgHXpqFcXUugCg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;482&quot;/&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;Referrer是什么&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;Referrer 是HTTP请求header的报文头，用于指明当前流量的来源参考页面，常被用于分析用户来源等信息。通过这个信息，我们可以知道访客是怎么来到当前页面的。比如在上面的请求截图里，可以看出我是使用&lt;code&gt;https://www.bilibili.com/&lt;/code&gt;访问的视频资源。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;Referrer Policy 是什么&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;为什么要这么麻烦呢？因为有些网站一些用户敏感信息，比如 sessionid 或是 token 放在地址栏里，如果当做Referrer字段全部传递的话，那第三方网站就会拿到这些信息，会有一定的安全隐患。所以就有了 Referrer Policy，用于过滤 Referrer 报头内容。&lt;/p&gt;&lt;p&gt;比如在上面的请求截图里，可以看出我是使用&lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt;策略，含义是跨域时将当前页面URL过滤掉参数及路径部分，仅将协议、域名和端口（如果有的话）当作 Referrer。否则 Referrer 还是传递当前页的全路径。同时当发生降级（比如从 https:// 跳转到 http:// ）时，不传递 Referrer 报头。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;Cache-control&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;&lt;span&gt;什么是cache-control&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;cache-control，用于控制浏览器缓存。简而言之，当某人访问网站时，其浏览器将在本地保存某些资源，例如图像和网站数据。当该用户重新访问同一网站时，缓存控制设置的规则会确定该用户是否从本地缓存中加载这些资源，或者浏览器是否必须向服务器发送新资源的请求。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;什么是浏览器缓存&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;浏览器缓存是指浏览器本地保存网站资源，以便不必再次通过网络从服务器获取它们。例如，“猫猫网”的背景图像可以保存到本地缓存中，这样在用户第二次访问该页面时，该图像将从用户的本地文件加载，剩下网络获取资源的时间，页面加载速度就会更快。&lt;/p&gt;&lt;p&gt;但是浏览器也不会永远把这些网站资源放在本地，否则本地磁盘就会炸，所以会限定保存资源的时间，这叫生存时间（TTL）。如果 TTL 过期后用户请求缓存的资源，浏览器必须再次通过网络与服务器建立连接并重新下载这个资源。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;常见的缓存控制策略&lt;/span&gt;&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;cache-control: private&lt;br/&gt;具有“private”指令的响应只能由客户端缓存，不能由中间代理（例如 CDN或代理）缓存。这些资源通常是包含私密数据的资源，例如显示用户个人信息的网站。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;cache-control: public&lt;br/&gt;相反，“public”指令表示资源可以由任何缓存存储。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;cache-control: no-store&lt;br/&gt;带有“no-store”指令的响应无法缓存到任何位置，也永不缓存。也就是说，用户每次请求此数据时，都必须将请求发送到源站服务器以获取新副本。此指令通常保留给包含极其敏感数据的资源，例如银行帐户信息。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;cache-control: max-age&lt;br/&gt;此指令指定了生存时间，也就是资源在下载后可以缓存多少秒钟。例如，如果将最大期限设置为 1800，则首次从服务器请求资源后的 1800 秒（30 分钟）内，后续请求都会向用户提供该资源的缓存版本。如果 30 分钟后用户再次请求资源，则客户端需要向服务器重新请求该资源。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;cache-control: no-cache&lt;/p&gt;&lt;p&gt;从B站截图里可以看出，使用的缓存控制指令是&lt;code&gt;cache-control: no-cache&lt;/code&gt;。它表示，只有先检查资源没有更新版本后，才可使用所请求资源的缓存版本。那么问题来了，怎么判断资源是否有更新版本呢？这就需要 &lt;code&gt;ETag&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;ETag&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.072549019607843&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEtNDibEzkbVcyCtxRtV7EichMJKoVnIszoCxTOCaibwq4T2D9ic7wcaw6rA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1020&quot;/&gt;&lt;/p&gt;&lt;p&gt;Etag是 Entity tag的缩写，是服务端的一个资源版本的令牌标识。在 HTTP 响应头中将其传送到客户端。每当资源更新时，此令牌会更新。&lt;/p&gt;&lt;p&gt;比如，浏览器第一次请求资源的时候，服务端返回了这个资源的&lt;code&gt;ETag: &quot;095933fff2323351d3b495f2f879616f1762f752&quot;&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;当浏览器再次请求这个资源的时候，浏览器会将&lt;code&gt;If-None-Match: &quot;095933fff2323351d3b495f2f879616f1762f752&quot;&lt;/code&gt; 传输给服务端，服务端拿到该ETAG，对比资源是否发生变化。&lt;/p&gt;&lt;p&gt;此过程可确保用户始终获得资源的最新版本，并且无需进行不必要的下载。&lt;/p&gt;&lt;h1&gt;&lt;span&gt;最后&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;果然B站是个充满学习氛围的地方，看个猫片都能学到这么多硬核知识。接下来我打算去舞蹈区看看有没有适合你们的知识点。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.002&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrE5FjleBe3Ny5XrFjla3LiaefbEKdEbQicuBMB2qlW8qCMkKTkKSrTdekg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot;/&gt;&lt;/p&gt;&lt;p&gt;我是小白，有空？一起在知识的海洋里呛水啊，懂我意思？&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.8574561403508771&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEuTnic9sSf39YRzqLQbH5YyWO7NibiapL3KXq2fC54ynWibPuMSwkicqSMBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;912&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5555555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/FmVWPHrDdnlAaoSXY0YM0UFgz62fPnrEaMTUbapm8DVqiaVqCwq7qBRtvOQ3DhPPV9ibeAzRh8txzmzAzlGUlPRg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;- [1] 计算机网络自动向下&lt;/p&gt;&lt;p&gt;- [2] 极客时间-趣谈网络协议&lt;/p&gt;&lt;p&gt;- [3] 极客时间-透视HTTP&lt;/p&gt;&lt;p&gt;- [4] 图解HTTP&lt;/p&gt;&lt;p&gt;- [5] 漫画形象-小肥柴&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0f097d64e2670b3813365167f7bb43cf</guid>
<title>[推荐] 副业刚需：在 GitHub 上也能年入百万？</title>
<link>https://toutiao.io/k/r9tqaw3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;span/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;编者荐语：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;大家好，我是你们的朋友 耳东双月。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;108&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;转自：机器之心  （张倩、蛋酱）&lt;br/&gt;原文链接：https://calebporzio.com/i-just-hit-dollar-100000yr-on-github-sponsors-heres-how-i-did-it&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;如果提到靠打赏生活的人，我们首先想到的会是主播。但现实情况是，程序员也可以。这位活成主播的程序员名叫 Caleb Porzio。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;见过一个在职的朋友利用业余时间实现小程序矩阵，一个月大概赚了3000多，主要收入来自于小程序中插广告。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;那么问题来了，个人开发者如何通过小程序变现？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;最简单、粗暴的就是做流量主，通过小程序中的插入的广告变现！&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;门槛极低，变现难度对于个人开发者几乎没有!&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;那些小程序工具抖音去水印、头像制作、星座类的，微信搜索指数就能看出来，有非常巨大的流量入口，垂直工具虽然使用频率不是非常高，但是流量大的“足以发挥想象”啊！&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当然“发挥”才是重点！至于怎么发挥，对于程序员来说，流量入口是一定要有的。&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzMDAzMDIwMQ==&amp;amp;mid=2647848911&amp;amp;idx=1&amp;amp;sn=a56e484d8d5bd15a84f65e9948b7c151&amp;amp;chksm=f09ff9d9c7e870cf793e0e7c1a218fb11077ae56eb8b2c3e63caf2a13ba8d7f2d52ed26772d3&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;副业刚需，个人开发者如何通过小程序变现？已经有朋友变现月入4k了！&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Github打赏也能实现副业刚需？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在过去的一年里，他靠 GitHub 项目的打赏赚到了 10 万美元。在他的自述文章中，他分享了自己靠 GitHub 项目赚钱的经历和技巧。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.869684499314129&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;729&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZdowyhHFq7Y2iabdj4argc21taADIyGbE9ZBjs2d2nuf4O68SCzhAxhA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Caleb Porzio 发推庆祝自己靠 GitHub 打赏（GitHub Sponsors）赚到了 10 万美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;GitHub Sponsors &lt;/span&gt;&lt;span&gt;是 GitHub 2019 年 5 月份推出的一个功能，允许&lt;/span&gt;&lt;span&gt;开发者通过自己的项目获取报酬/赞赏。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;全职开发转自由职业，是怎样一种体验？以下是 Caleb 的故事。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我要分享一下自己走上自由职业的经历。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2018 年是我做全职开发的最后一年，当时我的年收入大概是 9 万美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.30178173719376394&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;898&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZd7uBPLRb6z5lIRPRNBjLrU7Uz5tbT59eJr6vcakbQQESjwGx0bD7UA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;嗯，虽然说现在开发人员的薪资水平比较疯狂，但 9 万美元对我来说也是一笔可观的收入了。再加上我妻子的收入，以及「胡子主义」生活哲学的指导，我们可以省下很多的钱。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2019 年 1 月 11 日，我离开原来的公司开始「休假」，想要换种心情，做自己想做的一切。几个月后，我正式开始了自由职业者的生活。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;「休假」期间，我读到了这篇文章：《Phoenix LiveView: Interactive, Real-Time Apps. No Need to Write JavaScript》，并从中受到启发。我发现自己也可以做出类似的成果。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当时我还发了一条推特：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9406919275123559&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1214&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZM1SiaYoMFxttYbc8nE0BBxuTWic5WmZJ1F2mUmoxY6kvqVzk2DUtkAHA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;「决定开发一个类似 Laravel 的东西。我感觉这可能是个重大改变。」&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;现在看来，这确实改变了我的生活。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;也是在这一天，我的「休假期」结束了。我完全被这个后来叫做 Livewire 的项目迷住了，并开始全身心地投入于此，这种沉迷一直持续到现在。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;我也创建了一个非常流行的 JS 框架，叫做 AlpineJS，目前也是由我在管理和维护。但那是另外一个故事了……&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;做开源软件不能完全养活自己，所以我也接过一些小型的代码指导方面的需求，让 2019 全年的收入维持在一个稳定的状态。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这张图是我 2019 年通过自由职业方式获得的收入：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2609375&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZ260lnByypxYBg3tVa32QH9Iia10RKTtTia5EmlT9VCgU0fm9HAKoWDmQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我的收入减少了 7 万美元，看起来是比较冒险的举动。但我知道，如果此刻不开始做这件事，以后可能就更没有机会了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;一路走来，有很多好心人联系我，询问他们是否能够提供项目上的帮助。比如这种：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1359375&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZSzJHCKtlcibUWde9KEa54oChhibVyjJ8yB44ibhrtID3gJyicaDBicDdOgw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;很长一段时间我没有更新 Patreon（一个众筹创作网站），那里会有一些人每个月给我五美元。如此也很好，但对我来说没有意义。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;然后，我发现了 GitHub 的打赏功能，把项目直接托管在 GitHub 上即可。2019 年 12 月 12 日，我成为了 GitHub Sponsors 的一员。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.33578431372549017&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;816&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZ6ekKlFpt5pfmiaUTm8JFB3LtF83wLlwLeDqStKn5P8SGXiadhrdDN1jw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;这是我的第一个打赏者，Brian，谢谢你！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;迄今为止，我已经从 GitHub sponsors 那里收到了 2.5 万美元打赏金。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.39296875&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZZeo77Ek5f4XSeIuRXa00RYbiayBYRYdUwSW2zRp5RIH5VCZJWBUErQw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;直到撰写本文时，我的 GitHub 年度打赏金额已经达到了 112680 美元。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5125&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZcyFGh16Pq69z325bGxLUohaYazlHIB8oPRUfoKRkuRSAVUJhSfj8hQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;是运气，还是实力？我有点不敢相信我在开源社区里做开源软件，赚的钱比以往任何时候都多。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;掐我一下，我是在做梦吗？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;是因为我开发的软件太过优秀？让 535 位开发者每个月都打赏我 14 美元。不管怎么说，继续努力吧！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;接下来，我想分享一些过程中的经验，希望能帮到也想从事类似开发工作的人们。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;通过 GitHub 打赏赚钱的三个阶段&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;阶段 1：热心人士&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;最初，GitHub Sponsors 是一个让忠实粉丝能够资助他们所支持项目的平台。这些人的数量，和真正使用软件以及从中赚钱的人数比起来，并不算多。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基于开源的前提，人们本来就可以免费获得该软件。所有收入完全是来自那些友善热心肠的人们。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.61015625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZaWONl7ibEtZBuFeKhiaT2uT3NYhxxgWXy2Tqo89AO5UEwYV3rOpvWUKA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;首先，非常感谢这些人。然后我们谈谈第一个高峰是怎么到来的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;阶段 2：打赏软件&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这个阶段，事情开始变得奇妙。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.8366666666666667&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZ1aVAUn2V9fGuFdYMjannEiaC79OxniagHePWYqrSdPJ1GfPia7BwFQGDQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;当时，我和我的兄弟 Daniel 录制了一期《No Plans To Merge》。在思考如何将其变现时，我们想到了一个新颖的想法：「打赏软件」。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;它的工作方式如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;创建一个很棒的软件；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使其仅对打赏者开放，直到你积累了一定数量的打赏者；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;然后将项目开源给全世界。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这是一种双赢。效果很好，几天之内我的收入就增加了 1.1 万美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.61015625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZGvjVHI08mZEXGpCg9XEDCXYLZCsc1JSibXN3dzKHL72IegVlFUV15zA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我另外一位朋友 Nuno Maduro 最近在他的 Pest 项目中复制了这一方法，同样取得了成功：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.77&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZRsJNH4Ptg5kEXBcMHrae95bQ1OicMPiaWqYTRQpJXC5TTyss0Eo2xic5Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这种方法很棒，但是需要不断地提供新的想法，所有的这些都将成为我必须持续进行的项目。长远来看，我需要更合理的东西。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;阶段 3：教学视频&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我得到的大部分打赏金都是这个阶段来的：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.61015625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZElf7XRHmbbRXPoibCicd1yDzS48nXn06ovJ8LLTTk1cjjDJnYdibHI3Sg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这里边有什么秘诀吗？答案是：录制教学视频。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;构建有用的软件是一回事，但教别人怎么用完全是另一回事。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我尽力创建高质量的文档，但总有人需要更加高级的内容。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为了满足这些需求，我录了一系列教学视频。在这之后的三个月里，我的总收入从 4 万美元涨到了 10 万美元以上。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9016666666666666&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZCXfrbpMoHIJHfV0YINCxibX1Dh1fnB3n9hmH3Kfdia1k9moL3mNPSg9A/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我在文档的适当位置嵌入了这些视频的链接，以帮助大家找到它们：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.25625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZZM7hvBBEM2mQFAdI5VKofBlfxZQ6xTHMxMuJI4H6Bxj73oSp6xydPA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;几个星期之后，我又为 GitHub 打赏者专门建立了一个「私有」的视频小组：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5265625&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZUib5ewwCrCr5unMsbYxdwbJt6DFP3VkoRbLRfXl2r3ALpgAC2Fbw9Jw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这就是我的秘诀（为了做到以上这些，我利用 GitHub 认证构建了一个 Laravel app 来调用 GitHub API，以验证用户是否为打赏者）。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;现在，那些看免费视频的人自然会遇到这些「私有」视频，如果他们喜欢前面那些免费的内容，他们就会给我打赏来获取后面的视频。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;每次有新特性出现，我都会放出一批新视频。此外，我还会给每位打赏者提供访问每节课源代码的入口。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在 90 天的时间里，我的年收入增长了大约 8 万美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;现在我有了连续的收入，不用再将所有时间都花在课程发布上了。我将用空出来的时间继续开发这个软件，同时放出新的视频。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;如何通过&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;打赏赚更多钱？&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;实力是第一位的&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;要做到靠打赏谋生，首先离不开日益月累的磨练，你做的东西要真正有用才行。我把我所有的一切都投入到工作中，这点没有捷径。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你可以发现，我在一个开源项目中全职工作了整整一年才看到收入。能得到人们赞助的工作必须是高质量的，而且始终是排在第一位的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;积极寻找用户&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;你可以在网上创建优秀的工具，但如果没有人关注，再出色的工具也无法为你带来收入。因此，找到用户是赚钱的关键。在这方面，你的 Twitter 粉丝和邮件订阅者都是潜在的挖掘对象。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;打赏金额设置不要太保守&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;很多 GitHub 开发者犯的最大的一个错误就是在初级打赏设置中写的钱数太少。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果打赏者能选 1-5 美元 / 月，谁还会选更高的打赏金额。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我很早就意识到，如果我真的想做这件事，只有 5 美元的打赏肯定是不够的，所以我后来涨到了 14 美元。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;给打赏等级取一个好名字&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在给打赏等级取名的时候，记得取一个能描述打赏者类型的恰当名字。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;举个例子，对于一个高级打赏等级来说，它的标签应该是「The Agency（代理）」或其他能够暗示一个公司应该给予高级打赏的标签，而不是「Platinum（白金）」这种模糊的说法。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这样一来，人们看到这个标签首先想到的会是：「我的用途到底属于哪一类」，而不是：「我每个月要花多少钱」。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;不要羞于谈钱&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在我的成长过程中，我一直认为谈钱是不礼貌的，但其实这是一个谎言。有一次，我一股脑涨了 1 万美元，因为一个合作者告诉我他们都赚多少钱。在得知他们的收入情况后，我对自己的要价感到心安理得。但如果他们不告诉我这个情况，什么都不会发生。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;透明是一个健康的现象。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我不会隐瞒自己的收入，因为别人也不对我隐瞒他们的收入，这让我从中获利。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;即使他们赚的比我多得多，我也不会感到心痛或想分一杯羹。相反，我只会感到激动和鼓舞。我希望其他人也能保持这种心态。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;直接告诉别人你完全依赖这笔钱生活也没什么不礼貌的，而且这笔钱帮你打造出了人们每天都在用且从中受益的软件。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;不要因为赚了很多钱而感到内疚&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我一直都在提醒自己，我不是一个开发者布道师。如果我的打赏收入超过了平均生活水准，那也不错。我经营的也不是非营利组织。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我的收入和我的软件所带给别人的价值成正比，这没什么问题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我做的不是什么神圣的工作，那些软件是企业拿来赚钱的，他们从中牟利，所以我从中赚钱也是 OK 的。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;网友：我也能这么做吗？&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Caleb Porzio 的这份经历也引起了许多开发者的关注，讨论最热烈的问题是：在我的国家或者地区，这个方法行得通吗？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3270300333704116&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;899&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZkpRBhHicKQPEIDHibUIiaVaE6ic79PZlvl1nVwUYEwjkYicBmTnV4G0o6Zw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;「看到这些，我为自己国家芬兰的法律而感到难过。我们有一项名为筹款法的法律，其中规定，要想收取捐款（即无任何回报的支付）必须获得许可。这个许可证是付费的，而且不发给个人，只授予非营利活动。」&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这就意味着，如果你在软件项目上看到捐赠按钮，并且该笔资金流向芬兰人，这个过程是违法的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;所以这位芬兰的开发者表示，他自己托管了一个免费项目，为此不得不成立一家公司（独资经营）并出售一些其他的东西，以便从服务中获利。即便人们有捐赠的意愿，他也不能「合法地」接受这些钱。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3311036789297659&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;598&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZIZw0NtCDqXqKDOyqoXuj3ugYg9iaGTHGgdWOmJD4J36AHBibzXI4bibzw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;有人表示，在大多数西方国家都有类似的规定。因此，对于这些国家的人来说，自由职业虽然「自由」，但也同样需要花费更多的精力去管理琐事。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.453125&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;448&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicEm6GtRiaSurkfz9SCTvrQZZo8RStXqNuMSyoO54shJ9z2U7ZQsAvAG1rrXtLISSiaicrRSCOGQAv9Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;但在美国，这种做法的门槛要低得多。「如果是在美国的话，你可以作为个人接受无偿礼品，也可以作为个体经营者接受营业收入，无需额外注册什么。与往常一样，你需要精确缴纳税费，包括预扣税。」&lt;/span&gt;&lt;/section&gt;&lt;p data-tools=&quot;西瓜插件，运行于电脑浏览器上的插件，可在公众号后台找优质文章素材，一键美化排版，检测文章违规，查看任意公众号粉丝阅读数&quot; data-label=&quot;Power by：chajian.xiguaji.com&quot;&gt;&lt;/p&gt;&lt;p data-tools=&quot;西瓜插件，运行于电脑浏览器上的插件，可在公众号后台找优质文章素材，一键美化排版，检测文章违规，查看任意公众号粉丝阅读数&quot; data-label=&quot;Power by：chajian.xiguaji.com&quot;&gt;&lt;/p&gt;&lt;p data-tools=&quot;西瓜插件，运行于电脑浏览器上的插件，可在公众号后台找优质文章素材，一键美化排版，检测文章违规，查看任意公众号粉丝阅读数&quot; data-label=&quot;Power by：chajian.xiguaji.com&quot;&gt;&lt;/p&gt;&lt;p data-tools=&quot;西瓜插件，运行于电脑浏览器上的插件，可在公众号后台找优质文章素材，一键美化排版，检测文章违规，查看任意公众号粉丝阅读数&quot; data-label=&quot;Power by：chajian.xiguaji.com&quot;&gt;&lt;/p&gt;&lt;p data-tools=&quot;西瓜插件，运行于电脑浏览器上的插件，可在公众号后台找优质文章素材，一键美化排版，检测文章违规，查看任意公众号粉丝阅读数&quot; data-label=&quot;Power by：chajian.xiguaji.com&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;img data-copyright=&quot;0&quot; data-ratio=&quot;0.12232415902140673&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;981&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/eG8xOx80VBYiaJhD1vUfQVK5y8qBXic4l1O1ticfN6IicXyf73hRGQsOjxVCw7hUGmibjKOtGtADZiawF5sT4RKWSExg/640?wx_fmt=jpeg&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;45&quot; data-index=&quot;822&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;31&quot; data-index=&quot;639&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【关闭】&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;47&quot; data-index=&quot;828&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;37&quot; data-index=&quot;645&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;48&quot; data-index=&quot;829&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;38&quot; data-index=&quot;646&quot; class=&quot;character&quot;&gt;学&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index=&quot;48&quot; data-index=&quot;830&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index=&quot;39&quot; data-index=&quot;647&quot; class=&quot;character&quot;&gt;关&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;闭&quot; data-textnode-index=&quot;48&quot; data-index=&quot;831&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;闭&quot; data-textnode-index=&quot;40&quot; data-index=&quot;648&quot; class=&quot;character&quot;&gt;闭&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;微&quot; data-textnode-index=&quot;48&quot; data-index=&quot;832&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;微&quot; data-textnode-index=&quot;41&quot; data-index=&quot;649&quot; class=&quot;character&quot;&gt;微&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;信&quot; data-textnode-index=&quot;48&quot; data-index=&quot;833&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;信&quot; data-textnode-index=&quot;42&quot; data-index=&quot;650&quot; class=&quot;character&quot;&gt;信&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;朋&quot; data-textnode-index=&quot;48&quot; data-index=&quot;834&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;朋&quot; data-textnode-index=&quot;43&quot; data-index=&quot;651&quot; class=&quot;character&quot;&gt;朋&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;友&quot; data-textnode-index=&quot;48&quot; data-index=&quot;835&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;友&quot; data-textnode-index=&quot;44&quot; data-index=&quot;652&quot; class=&quot;character&quot;&gt;友&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;圈&quot; data-textnode-index=&quot;48&quot; data-index=&quot;836&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;圈&quot; data-textnode-index=&quot;45&quot; data-index=&quot;653&quot; class=&quot;character&quot;&gt;圈&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;广&quot; data-textnode-index=&quot;48&quot; data-index=&quot;837&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;广&quot; data-textnode-index=&quot;46&quot; data-index=&quot;654&quot; class=&quot;character&quot;&gt;广&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;告&quot; data-textnode-index=&quot;48&quot; data-index=&quot;838&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;告&quot; data-textnode-index=&quot;47&quot; data-index=&quot;655&quot; class=&quot;character&quot;&gt;告&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-raw-text=&quot;告&quot; data-textnode-index=&quot;48&quot; data-index=&quot;838&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;告&quot; data-textnode-index=&quot;47&quot; data-index=&quot;655&quot; class=&quot;character&quot;&gt;&lt;span&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index=&quot;48&quot; data-index=&quot;830&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;关&quot; data-textnode-index=&quot;39&quot; data-index=&quot;647&quot; class=&quot;character&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;45&quot; data-index=&quot;822&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;31&quot; data-index=&quot;639&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【实战】&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;47&quot; data-index=&quot;828&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;37&quot; data-index=&quot;645&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;获取20套实战源码&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;49&quot; data-index=&quot;839&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;48&quot; data-index=&quot;656&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【被删】&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;51&quot; data-index=&quot;845&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;54&quot; data-index=&quot;662&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;52&quot; data-index=&quot;846&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;55&quot; data-index=&quot;663&quot; class=&quot;character&quot;&gt;学&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;查&quot; data-textnode-index=&quot;52&quot; data-index=&quot;847&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;查&quot; data-textnode-index=&quot;56&quot; data-index=&quot;664&quot; class=&quot;character&quot;&gt;查&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;看&quot; data-textnode-index=&quot;52&quot; data-index=&quot;848&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;看&quot; data-textnode-index=&quot;57&quot; data-index=&quot;665&quot; class=&quot;character&quot;&gt;看&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;你&quot; data-textnode-index=&quot;52&quot; data-index=&quot;849&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;你&quot; data-textnode-index=&quot;58&quot; data-index=&quot;666&quot; class=&quot;character&quot;&gt;你&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;哪&quot; data-textnode-index=&quot;52&quot; data-index=&quot;850&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;哪&quot; data-textnode-index=&quot;59&quot; data-index=&quot;667&quot; class=&quot;character&quot;&gt;哪&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;个&quot; data-textnode-index=&quot;52&quot; data-index=&quot;851&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;个&quot; data-textnode-index=&quot;60&quot; data-index=&quot;668&quot; class=&quot;character&quot;&gt;个&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;好&quot; data-textnode-index=&quot;52&quot; data-index=&quot;852&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;好&quot; data-textnode-index=&quot;61&quot; data-index=&quot;669&quot; class=&quot;character&quot;&gt;好&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;友&quot; data-textnode-index=&quot;52&quot; data-index=&quot;853&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;友&quot; data-textnode-index=&quot;62&quot; data-index=&quot;670&quot; class=&quot;character&quot;&gt;友&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;删&quot; data-textnode-index=&quot;52&quot; data-index=&quot;854&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;删&quot; data-textnode-index=&quot;63&quot; data-index=&quot;671&quot; class=&quot;character&quot;&gt;删&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;除&quot; data-textnode-index=&quot;52&quot; data-index=&quot;855&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;除&quot; data-textnode-index=&quot;64&quot; data-index=&quot;672&quot; class=&quot;character&quot;&gt;除&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;了&quot; data-textnode-index=&quot;52&quot; data-index=&quot;856&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;了&quot; data-textnode-index=&quot;65&quot; data-index=&quot;673&quot; class=&quot;character&quot;&gt;了&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;你&quot; data-textnode-index=&quot;52&quot; data-index=&quot;857&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;你&quot; data-textnode-index=&quot;66&quot; data-index=&quot;674&quot; class=&quot;character&quot;&gt;你&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;巧&quot; data-textnode-index=&quot;52&quot; data-index=&quot;858&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;巧&quot; data-textnode-index=&quot;67&quot; data-index=&quot;675&quot; class=&quot;character&quot;&gt;巧&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span data-raw-text=&quot;包&quot; data-textnode-index=&quot;60&quot; data-index=&quot;894&quot; class=&quot;character&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;57&quot; data-index=&quot;878&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;回&quot; data-textnode-index=&quot;104&quot; data-index=&quot;712&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【访客】&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;59&quot; data-index=&quot;884&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;】&quot; data-textnode-index=&quot;109&quot; data-index=&quot;718&quot; class=&quot;character&quot;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;60&quot; data-index=&quot;885&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;学&quot; data-textnode-index=&quot;110&quot; data-index=&quot;719&quot; class=&quot;character&quot;&gt;学&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;微&quot; data-textnode-index=&quot;60&quot; data-index=&quot;887&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;微&quot; data-textnode-index=&quot;111&quot; data-index=&quot;720&quot; class=&quot;character&quot;&gt;微&lt;/span&gt;&lt;/span&gt;&lt;span data-raw-text=&quot;信&quot; data-textnode-index=&quot;60&quot; data-index=&quot;888&quot; class=&quot;character&quot;&gt;&lt;span data-raw-text=&quot;信&quot; data-textnode-index=&quot;112&quot; data-index=&quot;721&quot; class=&quot;character&quot;&gt;信&lt;/span&gt;&lt;span data-raw-text=&quot;查&quot; data-textnode-index=&quot;112&quot; data-index=&quot;722&quot; class=&quot;character&quot;&gt;查&lt;/span&gt;&lt;span data-raw-text=&quot;看&quot; data-textnode-index=&quot;112&quot; data-index=&quot;723&quot; class=&quot;character&quot;&gt;看&lt;/span&gt;&lt;span data-raw-text=&quot;朋&quot; data-textnode-index=&quot;112&quot; data-index=&quot;724&quot; class=&quot;character&quot;&gt;朋&lt;/span&gt;&lt;span data-raw-text=&quot;友&quot; data-textnode-index=&quot;112&quot; data-index=&quot;725&quot; class=&quot;character&quot;&gt;友&lt;/span&gt;&lt;span data-raw-text=&quot;圈&quot; data-textnode-index=&quot;112&quot; data-index=&quot;726&quot; class=&quot;character&quot;&gt;圈&lt;/span&gt;&lt;span data-raw-text=&quot;访&quot; data-textnode-index=&quot;112&quot; data-index=&quot;727&quot; class=&quot;character&quot;&gt;访&lt;/span&gt;&lt;span data-raw-text=&quot;客&quot; data-textnode-index=&quot;112&quot; data-index=&quot;728&quot; class=&quot;character&quot;&gt;客&lt;/span&gt;&lt;span data-raw-text=&quot;记&quot; data-textnode-index=&quot;112&quot; data-index=&quot;729&quot; class=&quot;character&quot;&gt;记&lt;/span&gt;&lt;span data-raw-text=&quot;录&quot; data-textnode-index=&quot;112&quot; data-index=&quot;730&quot; class=&quot;character&quot;&gt;录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【小程序】&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;学获取15套【入门+实战+赚钱】小程序源码&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【python】&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;学微获取全套0基础Python知识手册&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【2019】&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;获取2019 .NET 开发者峰会资料PPT&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;回复&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;【加群】加入dotnet微信交流群&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend-list&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2649759837_1&quot; data-recommend-article-time=&quot;1614089250&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/sz_mmbiz_jpg/TZMx5vHDhKqebJOTCu6TFdnLCjSAGnsh69aibTOs2icrdkdYicwnvCQV7MYQtVjdGEwJavCIqsgOwJObdWcNico9qw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;@程序员，这笔钱下个月可以领！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzIxNjIwNzQ5Mw==&amp;amp;mid=2649759837&amp;amp;idx=1&amp;amp;sn=a2d65aa80773249bfcb1bc2ec9e2fcb5&amp;amp;chksm=8f8819b7b8ff90a1de965aeccd3e4f9e759de34aca17afb34ca8df62585de3e5fe0387081c13#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxNjIwNzQ5Mw==&amp;amp;mid=2649759837&amp;amp;idx=1&amp;amp;sn=a2d65aa80773249bfcb1bc2ec9e2fcb5&amp;amp;chksm=8f8819b7b8ff90a1de965aeccd3e4f9e759de34aca17afb34ca8df62585de3e5fe0387081c13&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.425&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/TZMx5vHDhKqebJOTCu6TFdnLCjSAGnsh69aibTOs2icrdkdYicwnvCQV7MYQtVjdGEwJavCIqsgOwJObdWcNico9qw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;@程序员，这笔钱下个月可以领！&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2649759863_1&quot; data-recommend-article-time=&quot;1614173224&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/rbiaHnT7CcvzS9n04VKndkxt6lKhGuSU0WsQfz16Egia45AK63nS33AKZfGDl64xVjJUA4TKqOw9QbxGKBQB6r2w/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;一个程序员的水平能差到什么程度......&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzIxNjIwNzQ5Mw==&amp;amp;mid=2649759863&amp;amp;idx=1&amp;amp;sn=9ffd2741e5719fa00a13883480ba52bc&amp;amp;chksm=8f88199db8ff908b63dddc2087a29e769ff86b5d39f11f3651b81f84cb92f949e4bfe0f7862c#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxNjIwNzQ5Mw==&amp;amp;mid=2649759863&amp;amp;idx=1&amp;amp;sn=9ffd2741e5719fa00a13883480ba52bc&amp;amp;chksm=8f88199db8ff908b63dddc2087a29e769ff86b5d39f11f3651b81f84cb92f949e4bfe0f7862c&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.4263803680981595&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/rbiaHnT7CcvzS9n04VKndkxt6lKhGuSU0WsQfz16Egia45AK63nS33AKZfGDl64xVjJUA4TKqOw9QbxGKBQB6r2w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;326&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;一个程序员的水平能差到什么程度......&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9989f101324f727c4bfa03c41d52171f</guid>
<title>[推荐] 2021 阿里淘系工程师推荐书单</title>
<link>https://toutiao.io/k/txzl2gg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;img class=&quot;rich_pages __bg_gif&quot; data-ratio=&quot;0.16666666666666666&quot; data-s=&quot;300,640&quot; data-type=&quot;gif&quot; data-w=&quot;900&quot; data-backw=&quot;578&quot; data-backh=&quot;96&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/33P2FdAnju95xNQaJWFlU3fWicicxBac5nuOMtveZ6lxCCnoZU1Xd6ITUVhoibJib5eyx6d2hePhGFNbQ4nT3Gicgpg/640?wx_fmt=gif&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88287&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;读书有点像机器学习从初始参数开始的局部最小化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;无论是数学、科学、技术、管理，还是历史、文学，读书的过程，就是根据一维的文字流，在立体的思维空间中重新建构。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这种建构的意义，将我们自身和世界连接了起来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;（阿里巴巴淘系技术部资深算法专家 乐田）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上个月，我们推出了2020淘系技术年货《技术人的百宝黑皮书》。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（公众号后台回复&lt;strong&gt;“黑皮书”&lt;/strong&gt;即可获取电子书下载链接）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在书的第三部分，我们开列了来自阿里工程师倾情推荐的本年度书单，涵盖了技术硬核参考、商业思维培养以及文化、科普、工具方法等多个类别，受到不少好评。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;以下是关于这份书单的详细扩充介绍，希望能够帮助技术人员精进技术实力，提高思维能力和眼界认知。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（收藏起来，我的懒癌还可以抢救一下）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;类别一：技术硬核参考&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.3284132841328413&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6AgSw8B1QXaFDD5gHgicBGw5CesJcfuCwVHT41o6Aib8QALQpiaK9L1ePw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;542&quot;/&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;85927&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;《深度探索C++对象模型》 &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] Stanley B·Lippman&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这本书探索“对象导向程序所支持的C++对象模型”下的程序行为，对于“对象导向性质之基础实现技术”以及“各种性质背后的隐含利益交换”提供一个清楚的认识。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.3080357142857142&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6r8Lw2Bym9SHBKV0rrkvj8rIsOWGUpW4kymxIibFMIR3FxHtzeTto4QQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;448&quot;/&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;85927&quot;&gt;&lt;section&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;《你不知道的JavaScript》&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] Kyle Simpson&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;JavaScript语言有很多复杂的概念，但却用简单的方式体现出来（比如回调函数）。“你不知道的JavaScript”系列就是要让不求甚解的JavaScript开发者迎难而上，深入语言内部，弄清楚JavaScript每一个零部件的用途。本书介绍了该系列的两个主题：“作用域和闭包”以及“this和对象原型”。掌握了这些知识之后，无论什么技术、框架和流行词语，你都能轻松理解。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.3624678663239074&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6aHfJEiaIBvib6vkDn8Hg2nFJmicDUpCbWiaPOicUkAXJZfTobl9rz85DS9w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;389&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;《深入理解ES6》&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] Nicholas C. Zakas&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;深入理解ES6的特性对于所有JavaScript开发者而言至关重要，在可预见的未来，ES6中引入的语言特性会成为JavaScript应用程序的主流特性。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.3161434977578474&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6a56NnTwiaXl0JV992hTgFYxNvNibOWdMN1ibMBHFH9ZMleQHQgkW5WvZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;446&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;《程序员修炼之道》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] Andrew Hunt / David Thomas&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;《程序员修炼之道》由一系列的独立的部分组成，涵盖的主题从个人责任、职业发展，直到用于使代码保持灵活、并且易于改编和复用的各种架构技术。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.3537549407114624&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6Ic2mHY51a7mEBB8M1jX6Y3YuvkPqdLvib1xlLUichQBfQcSkBFc3QRgA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;506&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;《架构整洁之道》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] Robert C. Martin &lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;《架构整洁之道》是创造“Clean神话”的Bob大叔在架构领域的登峰之作，围绕“架构整洁”这一重要导向，系统地剖析其缘起、内涵及应用场景，涵盖软件研发完整过程及所有核心架构模式。&lt;/span&gt;&lt;br/&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.278772378516624&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6yic2QAE0hBY0pFtuok7RfiaTaFnEhEibHHRUFqSicIMxHZgFpdSfQ7mcvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;391&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;《支持向量机导论》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] 克里斯蒂亚尼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本书是第一本综合介绍支持向量机（SVM）的书籍，它从机器学习算法的基本问题开始，循序渐进地介绍相关的背景知识，包括线性分类器、核函数特征空间、推广性理论和优化理论，在此基础上很自然地引出了支持向量机的算法。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.2722222222222221&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6vwEm2YGWgAsaXEMAxsqh2n2O1iat0stGWvf7gFhB7vtiaJ4KQWACeCXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;《代码的未来》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[日] 松本行弘 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;作者对云计算、大数据时代下的各种编程语言以及相关技术进行了剖析，并&lt;/span&gt;&lt;span&gt;对编程语言的未来发展趋势做出预测，内容涉及Go、VoltDB、node.js、CoffeeScript、Dart、MongoDB、摩尔定律、编程语言、多核、NoSQL等当今备受关注的话题。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.1627906976744187&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6iaguqNUvVqlZw8TRW1dzMJ2plQJPAZ6QkMzSD4oMvOSP4r5phnyrb5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;172&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《Head First 设计模式》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] 弗里曼 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一本设计模式入门书籍，用实际的编程案例讲解算法设计中会遇到的各种问题和需求变更，并以此逐步推导出良好的设计模式解决办法。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.2566666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6xIqLL9lqWJqAAGVUNXy5Lzc3oQc2Of6uMSI4OoqaBbZib1PCndmnKnw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《领域驱动设计》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] Eric Evans &lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;全书围绕着设计和开发实践，结合若干真实的项目案例，向读者阐述如何在真实的软件开发中应用领域驱动设计。&lt;/span&gt;&lt;span&gt;书中给出了领域驱动设计的系统化方法，并将人们普遍接受的一些最佳实践综合到一起，融入了作者的见解和经验，展现了一些可扩展的设计最佳实践、已验证过的技术以及便于应对复杂领域的软件项目开发的基本原则。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.2531328320802004&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6NWxKuhGdUiarrgDqibYP5lvwVbjABibOx9gLcKPU1Vp9RkTYfFxgiayQRg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;399&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《Effective Java&lt;/span&gt;&lt;/strong&gt;》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;Joshua Bloch&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Eff&lt;/span&gt;&lt;span&gt;ective Java Programming Language Guide distills the hard-won wisdom of today&#x27;s best Java programmers into 50 techniques for designing and constructing more robust, high-performance software. Josh Bloch, one of Sun&#x27;s most widely respected Java developers, focuses on the practical problems virtually every Java developer encounters, offering specific solutions and top-notch code examples.&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.313572542901716&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG60gbWwJribC97wfibianQciajI7KlAdm7y52dhJstKyznYKD6pq9uuvtiahA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;641&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;《&lt;strong&gt;&lt;span&gt;Deep Learning&lt;/span&gt;&lt;/strong&gt;》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;Ian Goodfellow &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;The text offers mathematical and conceptual background, covering relevant concepts in linear algebra, probability theory and information theory, numerical computation, and machine learning. It describes deep learning techniques used by practitioners in industry, including deep feedforward networks, regularization, optimization algorithms, convolutional networks, sequence modeling, and practical methodology; and it surveys such applications as natural language processing, speech recognition, computer vision, online recommendation systems, bioinformatics, and videogames. &lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;类别二：商业思维养成&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6yia4qIkyxmUE63mNJYfTwIia07wicHicZD103m7a8ibtV4ZDicdrydgyBlUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《刷新》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美]  Satya Nadella &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;任何组织和个人，达到某个临界点时，都需要自我刷新。为了迎接智能时代的挑战，作者提出自我刷新的三个关键步骤：拥抱同理心，培养“无所不学”的求知欲，以及建立成长型思维。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.3513513513513513&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6bHWhkfFeH2ibs6AqdyxsOyJ7f5210rqNvw451MuBfxNkjM8uqUqa1XA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;370&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《商业的本质》 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] Jack Welch&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;任何组织和个人，达到某个临界点时，都需要自我刷新。为了迎接智能时代的挑战，作者提出自我刷新的三个关键步骤：拥抱同理心，培养“无所不学”的求知欲，以及建立成长型思维。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.3333333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6uZRt4LYg7RicQVVibt6lmQ17VQHcLoMC6LfVGZP9UD5EhnnRXtpZtIibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;450&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《规模: 复杂世界的简单法则》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[英] Geoffrey West &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;《规模》将帮助你重新思考生命、认识自身、了解你的生活与工作，并告诉你复杂世界其实充满简单的逻辑，只要跳脱思维框架，打破学科限制，你就会重新看清你周遭的一切。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.348148148148148&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG601cu4Qf9vCOrmDIypRHvOiaAQM22VAyzickwHEwNTkM4JA9cib9HxibpTA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《债务危机》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] Ray Dalio &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在这本书中，达利欧通过三部分内容阐述了债务危机及其应对原则：&lt;/span&gt;&lt;span&gt;债务大周期模型（解释模型）、3个重要案例（深入考察20世纪20年代德国魏玛共和国、20世纪30年代的美国大萧条和2008年金融危机）、48个历史案例和数据对照分析，以备受启发的新方式理解经济与市场。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;类别三：文化&amp;amp;科普&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.4970059880239521&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6uyCGdib5NGahmJ5icRQu67MD3To7nFHgoouvKf0vIiafib10SyKBrLgxkw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;334&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;《&lt;strong&gt;&lt;span&gt;The Book of Why&lt;/span&gt;&lt;/strong&gt;》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[美] Judea Pearl / Dana Ma&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Pearl&#x27;s work enables us to know not just whether one thing causes another: it lets us explore the world that is and the worlds that could have been. It shows us the essence of human thought and key to artificial intelligence. Anyone who wants to understand either needs The Book of Why.&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.45&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6AYJMEUibmLF20pdMMlYdoiaiazldsUwrl94A4pjYeyYN87sz59XjSgyjQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;200&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;《&lt;strong&gt;&lt;span&gt;魔鬼经济学&lt;/span&gt;&lt;/strong&gt;》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;[美] 史蒂芬·列维特 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;《魔鬼经济学》中确立了一个有悖于传统智慧的观点：&lt;/span&gt;&lt;span&gt;如果说伦理道德代表了我们心目中理想的社会运行模式的话，那么经济学就是在向我们描述这个社会到底是如何运行的。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.845679012345679&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6Z1tMKVxFgY5VgGuVoIJ9zoRZjVx4f6xF8ncX5BibVBUmwVOBpdC2dibw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;324&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《罗马人的故事》15卷本 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[日] 盐野七生&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;还原一个意大利半岛的小国成为世界帝国，持续1300年的辉煌历程，再现一个英雄辈出的时代……读懂了罗马，才能读懂过去的欧洲和今天的世界。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.4356846473029046&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG60sDS7jTrr74Nk2rbfKdax6rCEr0ep70s7xY8EqCX9pYqk9Ldj7IH2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;241&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《孙子兵法》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;孙武&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我国最古老最杰出的一部兵书。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.4125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6w4KrfZKltibUEzLjnZLZp6Licb26kJWsWyMHoCoV1RoduFEs6iclQEmlQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;160&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《QED》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[美] 理查德·费曼&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一个新的视角来看量子世界。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.4598540145985401&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6licjWd9RHRppWCVuFbtZrRKSyf6kfm68gzrfGxhsshj0M2yWLDZMjeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;685&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《枢纽》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;施展&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;中国历史演进的逻辑，中国奇迹持续的原因，以及，该如何认知我们的世界角色。&lt;/span&gt;&lt;span&gt;在这个关键节点，每个人都在思考未来。&lt;/span&gt;&lt;span&gt;我们在思考未来的时候，最重要的事情是对目标的设定。&lt;/span&gt;&lt;span&gt;而如何设定目标，取决于你怎么理解自己、理解中国、理解世界。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.466275659824047&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6a8H2REEqRs53cuX4A2k50yle3pMUGfMNOTtibV91XPcibMxukqw3YcMw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;341&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《叩响命运的门》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;马小平&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;《叩响命运的门》精选了古今中外最为著名的人文素养经典文本88篇。这些篇章充满生命的智慧和力量，通过对经典的阅读，我们可以和无缘谋面的历史巨人或不相识的朋友进行精神的对话，并在这一过程中实现了文化意义的交流与传承。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.7786666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6q2CYKmjfXsyOUTBR6OibRv7MFKNQx745T0vpMoGE46XRXkedlssOR1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《星空的琴弦-天文学史话》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;汪洁&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是一部人类探索天文的历史，更是一部人类理性崛起的历史。&lt;/span&gt;&lt;span&gt;跟随本书，你将回到过去，在那一个个激动人心的天文大发现的历史现场，和科学家们一起感受当时的兴奋，也体会他们探索的艰辛。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;类别四：工具&amp;amp;方法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.36&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6wickprViayDaLpo2pJJu8OZxNiaYrwun3OFhibbPXbheW1rSRgOURXYf9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;200&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《金字塔原理》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[美] Barbara Minto &lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一本讲解写作逻辑与思维逻辑的读物。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.4315068493150684&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6HEAibHf8n3S39clr8qC0icCX6npe6Azsu3PHgyejraIcaOF9JxzLgU3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;292&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《高效能人士的七个习惯》 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[美]  史蒂芬·柯维&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;精选柯维博士“七个习惯”的最核心思想和方法，为忙碌人士带来超价值的自我提升体验。用最少的时间，参透高效能人士的持续成功之路。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.256&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8yfAmMpLAyVPOqYaI1DLG6cRcJkx1jiawcOVeYOrwje123LcNU3MX4a8XR0V4HyCgZvTCfD12hmJg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;500&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; hm_fix=&quot;390:637&quot;&gt;&lt;span data-brushtype=&quot;text&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;《软技能 - 代码之外的生存指南》&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[美]  John Z. Sonmez &lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本书聚焦于软件开发人员生活的方方面面，从揭秘面试的流程到精耕细作出一份杀手级简历，从创建大受欢迎的博客到打造你，从提高自己工作效率到与如何与“拖延症”做斗争，甚至包括如何投资不动产，如何关注自己的健康。本书共分为职业篇、自我营销篇、学习篇、生产力篇、理财篇、健身篇、精神篇等七篇，概括了软件行业从业人员所需的“软技能”。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;今日话题：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;你收藏的书单有哪些，欢迎下方留言～&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;331&quot; data-backw=&quot;578&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/33P2FdAnju9qJSYLusYZ20IeW1JcwLxOiboFmk6AE4WC0UFUU2MfXQS9E9ibVUdVZoMpic6wE97ylUl6r4olNpDow/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;720&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;412.318339100346&quot; data-ratio=&quot;0.5722222222222222&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/33P2FdAnju9qJSYLusYZ20IeW1JcwLxOmYpQKzz1XI7PlgmOA3cPARTxwZuKFw6osZsksibeH7HrS9oiaVooQSZQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;96&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.16666666666666666&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;900&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju9I3TY9EP8M3D7oDuMfTuEh37yxribyjc3viaicCKBT9nJhqBcib36SSRaib3vIobcZbx93RYyf9QvgzOA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>