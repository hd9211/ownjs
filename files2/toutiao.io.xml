<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>995ec60dcbd8f1e6d983b1febb496875</guid>
<title>我在 GitHub 上读清华</title>
<link>https://toutiao.io/k/d749gee</link>
<content:encoded>&lt;div&gt;&lt;div&gt;

                

                
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ffe6d9349157ef9ae0a95971c19afb74</guid>
<title>小团队中微服务的可怕之处</title>
<link>https://toutiao.io/k/qekwna8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;微服务听起来很棒，每一个团队可以彼此独立工作而不影响其他团队。你可以轻松地维护和扩展微服务。你也可以在同一项目中使用不同的技术。它们如此稳定，所以，你的产品会有极好的扩展。在 2021 年，不应该把任何应用作为单体来构建，对吧？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很遗憾，微服务并非在每一种环境下都可以发挥作用，在盲目使用之前，你必须确定它们提供了你所需要的价值。我见过几个典型的项目，有 4~6 名开发者，基本上是一个团队。客户想要构建微服务的应用程序，因为它们非常棒。IT 经理同意了，于是团队开始设计应用程序。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户管理？是的，这是一个微服务。访问权限管理？也是微服务。管理和预约？同样是微服务！通过连接到几个第三方 API 来管理和发送订单？这绝对是一个微服务。不错，现在每个人都可以得到一个微服务了！有时候你可能会违反物理学法则，每个人都有多个微服务。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;恐怖开始&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当你开始这个伟大的旅程时，你的团队需要确保每一个微服务都可以独立开发。每一个微服务都有它自己的 CI/CD 管道，自己的数据库和自己的版本化 API。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在，在启动一个新项目时，你可能只有一个团队。将在同一个团队中构建所有这些微服务。这种情况经常发生：一个人为了实现一个新功能而承担多个微服务。让我们就叫她 Ellie 吧。Ellie 需要在任何地方进行一些调整，同时进行测试。当她遇到问题时，她可以开始对两个微服务进行并行调试，以尝试了解它们之间的通信。如果它实际上是应用程序的一部分，那么 Ellie 就拥有一个更简单的工作环境，并且可以直接在应用程序中进行调试。此外，她还不需要为这些微服务之间的分布式、可能是异步通信编写大量定义和代码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之后，你的应用程序的第一个版本将提供给你的客户。当你更新应用程序并尝试开始滚动更新时，你将面临在某一时间内运行微服务的多个版本。要么它们都与其他版本兼容（这也需要在开发过程中进行一些工作），要么你需要以某种方式优雅地更新它们。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在最坏的情况下，你正在构建一个分布式的单体应用。而且，在你的小团队里，你会发现微服务的所有缺点，但是很可能并没有从这些中获益。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;微服务的亮点在哪里？&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;亚马逊和 Netflix 是最早提到他们使用微服务的大公司之一，他们解释了微服务为何如此有用。亚马逊提出了两个披萨原则，并表示：“如果两个披萨不足以喂饱一个项目团队，那么这个团队可能就显得太大了”。每个团队都应该有自己的微服务，它绝不应该在两个团队之间分割。要获得完全的所有权，团队必须对其组件及其相关的所有东西拥有完全的控制权。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在单体应用中管理代码和依赖项，面对庞大的软件和数百人的工作，是相当麻烦的。因为微服务与其他所有东西解耦，这是一个完美的方法，可以扩展开发团队的数量。他们可以在自己的微服务上工作，使用已经构建的 API，并扩展现有产品。他们无须与其他 80 个团队中的每个决策保持一致，而且他们可能不必选择相同的技术或保持版本一致。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;微服务对于管理大型软件来说并不是必需的，而是管理大量使用这些软件的人。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;我现在该怎么办？&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但这并不意味着微服务就会陷入混乱。但是，我要你真正思考微服务对你的意义，以及你是否能从中获益。当然，它们可以为你提供许多好处，但同时也增加了许多复杂性。假如这些好处对你无关紧要，你就可以跳过它们。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个很好的软件开发范式是保持简单。既然可以简单地实现相同的结果，为什么还要选择更复杂的方式呢？你只会让它变得更难理解，以后也更难改变。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;微服务同样如此。既然你的团队必须处理所有微服务，并完全控制应用程序，为何还要增加微服务的复杂性？你的产品可能会增长，但是两周内它并不会成为下一个 Netflix。就像俗话所说的：“过早的优化是万恶之源”，所以不要急着优化！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相反，享受一个相当单一的应用程序的好处。尽情享用更快的开发速度，因为你不需要担心改进微服务间的通信，不需要花费更多时间调试和测试微服务间共享通用代码的意义，不需要尝试协调复杂的分阶段微服务发布，甚至不需要在每个微服务上处理巨大的 docker 映像大小和内存需求，因为你正在使用 Spring Boot。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.4788732394366197&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/PxMzT0Oibf4hVFOU49r75m9OLJibHLicHpL9uicPPZ0lyMicAgHicMIx2zsVwM1uq9ULNzTERjSykbmCAVWhVUpO9hNw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;284&quot;/&gt;&lt;figcaption&gt;&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你也不需要全心致力于单体或微服务。你仍可以将应用程序划分为有意义的部分 —— 甚至遵循领域驱动设计的指导原则。有了合适的架构，你的代码和模块仍然可以被恰当地解耦，并且你的应用程序符合 12 要素原则。可以在相同的应用程序中运行这些模块，可以共享相同的构建管道，只需部署一个版本即可进行部署。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;但我如何扩大规模呢？&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你发布了你的产品，而且非常成功。你希望构建更多功能并适当地扩展。你雇佣并组建了多个开发团队，你是否真的从微服务中获益？现在正是将你的应用拆分到微服务的绝佳时机。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;若你的应用程序构建正确，且不同模块已经解耦并易于理解，则拆分它们应该不会太困难。是啊，得费点功工夫。当然，你可以从一开始就直接使用微服务来避免这个问题。但是在这种情况下，你也必须从一开始就直接处理复杂的事情，并且拖拖拉拉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;保证在适当的时候选择合适的架构并且保持简单。&lt;span data-mpa-emphasize-underline=&quot;t&quot;&gt;&lt;span&gt;关注代码架构和质量。&lt;/span&gt;&lt;span data-mpa-emphasize-underline-bg-line=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;原文链接：http://t.hk.uy/yC4&lt;br/&gt;&lt;/span&gt;&lt;span&gt;作者介绍：Manuel Reinfurt，InCloud 首席技术官。负责技术领导与新工作。精通Azure、.NET/C#、云计算开发。&lt;/span&gt;&lt;span&gt;&lt;br/&gt;作者 ｜ Manuel Reinfurt&lt;br/&gt;译者 ｜ Sambodhi&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>19139237ebe9bc1e27f3f836f5c454fc</guid>
<title>Go 语言的 IO 库那么多，我该怎么选？</title>
<link>https://toutiao.io/k/zco3258</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在计算机和信息技术领域里&lt;code&gt;I/O&lt;/code&gt;这个术语表示输入 / 输出 ( 英语：Input / Output ) ，通常指数据在存储器（内部和外部）或其他周边设备之间的输入和输出，是信息处理系统与外部之间的通信。输入是系统接收的信号或数据，输出则是从其发送的信号或数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在Go语言中涉及&lt;code&gt;I/O&lt;/code&gt;操作的内置库有很多种，比如：&lt;code&gt;io&lt;/code&gt;库，&lt;code&gt;os&lt;/code&gt;库，&lt;code&gt;ioutil&lt;/code&gt;库，&lt;code&gt;bufio&lt;/code&gt;库，&lt;code&gt;bytes&lt;/code&gt;库，&lt;code&gt;strings&lt;/code&gt;库等等。拥有这么多内置库是好事，但是具体到涉及&lt;code&gt;I/O&lt;/code&gt;的场景我们应该选择哪个库呢？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;io.Reader/Writer&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Go语言里使用&lt;code&gt;io.Reader&lt;/code&gt;和&lt;code&gt;io.Writer&lt;/code&gt;两个 interface 来抽象&lt;code&gt;I/O&lt;/code&gt;，他们的定义如下。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Reader &lt;span&gt;interface&lt;/span&gt; {&lt;br/&gt; Read(p []&lt;span&gt;byte&lt;/span&gt;) (n &lt;span&gt;int&lt;/span&gt;, err error)&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; Writer &lt;span&gt;interface&lt;/span&gt; {&lt;br/&gt; Write(p []&lt;span&gt;byte&lt;/span&gt;) (n &lt;span&gt;int&lt;/span&gt;, err error)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;io.Reader&lt;/code&gt; 接口代表一个可以从中读取字节流的实体，而&lt;code&gt;io.Writer&lt;/code&gt;则代表一个可以向其写入字节流的实体。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;io.Reader/Writer 常用的几种实现&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;net.Conn: 表示网络连接。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;os.Stdin, os.Stdout, os.Stderr: 标准输入、输出和错误。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;os.File: 网络,标准输入输出,文件的流读取。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;strings.Reader: 字符串抽象成 io.Reader 的实现。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;bytes.Reader: []byte抽象成 io.Reader 的实现。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;bytes.Buffer: []byte抽象成 io.Reader 和 io.Writer 的实现。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;bufio.Reader/Writer: 带缓冲的流读取和写入（比如按行读写）。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了这几种实现外常用的还有&lt;code&gt;ioutil&lt;/code&gt;工具库包含了很多IO工具函数，编码相关的内置库&lt;code&gt;encoding/base64&lt;/code&gt;、&lt;code&gt;encoding/binary&lt;/code&gt;等也是通过 io.Reader 和 io.Writer 实现各自的编码功能的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些常用实现和工具库与io.Reader和io.Writer间的关系可以用下图表示。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6137339055793991&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/z4pQ0O5h0f4Su3aNL1vDWgHXQ2LcA5E7XTxnlibOhNsMjQvDAEtF7h2vwre0HUVXd61iaRTlrLUsInfU3iayfLeWw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;932&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;每种I/O库的使用场景&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;io库&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;io&lt;/code&gt;库属于底层接口定义库。它的作用主要是定义个&lt;code&gt;I/O&lt;/code&gt;的基本接口和个基本常量，并解释这些接口的功能。在实际编写代码做&lt;code&gt;I/O&lt;/code&gt;操作时，这个库一般只用来调用它的常量和接口定义，比如用&lt;code&gt;io.EOF&lt;/code&gt;判断是否已经读取完，用&lt;code&gt;io.Reader&lt;/code&gt;做变量的类型声明。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 字节流读取完后，会返回io.EOF这个error&lt;/span&gt;&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; {&lt;br/&gt; n, err := r.Read(buf)&lt;br/&gt; fmt.Println(n, err, buf[:n])&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; err == io.EOF {&lt;br/&gt;  &lt;span&gt;break&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;os 库&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;os&lt;/code&gt;库主要是处理操作系统操作的，它作为Go程序和操作系统交互的桥梁。创建文件、打开或者关闭文件、Socket等等这些操作和都是和操作系统挂钩的，所以都通过&lt;code&gt;os&lt;/code&gt;库来执行。这个库经常和&lt;code&gt;ioutil&lt;/code&gt;，&lt;code&gt;bufio&lt;/code&gt;等配合使用&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;ioutil库&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ioutil&lt;/code&gt;库是一个有工具包，它提供了很多实用的 IO 工具函数，例如 ReadAll、ReadFile、WriteFile、ReadDir。唯一需要注意的是它们都是一次性读取和一次性写入，所以使用时，尤其是把数据从文件里一次性读到内存中时需要注意文件的大小。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;读出文件中的所有内容&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;readByFile&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  data, err := ioutil.ReadFile( &lt;span&gt;&quot;./file/test.txt&quot;&lt;/span&gt;)&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; err != &lt;span&gt;nil&lt;/span&gt; {&lt;br/&gt;    log.Fatal(&lt;span&gt;&quot;err:&quot;&lt;/span&gt;, err)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;  fmt.Println(&lt;span&gt;&quot;data&quot;&lt;/span&gt;, &lt;span&gt;string&lt;/span&gt;(data)) &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将数据一次性写入文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;writeFile&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  err := ioutil.WriteFile(&lt;span&gt;&quot;./file/write_test.txt&quot;&lt;/span&gt;, []&lt;span&gt;byte&lt;/span&gt;(&lt;span&gt;&quot;hello world!&quot;&lt;/span&gt;), &lt;span&gt;0644&lt;/span&gt;)&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; err != &lt;span&gt;nil&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;panic&lt;/span&gt;(err)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;bufio库&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;bufio，可以理解为在&lt;code&gt;io&lt;/code&gt;库的基础上额外封装加了一个缓存层，它提供了很多按行进行读写的函数，从io库的按字节读写变为按行读写对写代码来说还是方便了不少。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;readBigFile&lt;/span&gt;&lt;span&gt;(filePath &lt;span&gt;string&lt;/span&gt;)&lt;/span&gt; &lt;span&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt;  f, err := os.Open(filePath)&lt;br/&gt;  &lt;span&gt;defer&lt;/span&gt; f.Close()&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; err != &lt;span&gt;nil&lt;/span&gt; {&lt;br/&gt;    log.Fatal(err)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; err&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  buf := bufio.NewReader(f)&lt;br/&gt;  count := &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// 循环中打印前100行内容&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; {&lt;br/&gt;    count += &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;    line, err := buf.ReadString(&lt;span&gt;&#x27;\n&#x27;&lt;/span&gt;)&lt;br/&gt;    line = strings.TrimSpace(line)&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; err != &lt;span&gt;nil&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; err&lt;br/&gt;    }&lt;br/&gt;    fmt.Println(&lt;span&gt;&quot;line&quot;&lt;/span&gt;, line)&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; count &amp;gt; &lt;span&gt;100&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;break&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;nil&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;ReadLine和ReadString方法：buf.ReadLine()，buf.ReadString(&quot;\n&quot;)都是按行读，只不过ReadLine读出来的是[]byte，后者直接读出了string，最终他们底层调用的都是ReadSlice方法。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;bufio VS ioutil 库：bufio  和 ioutil 库都提供了读写文件的能力。它们之间唯一的区别是 bufio 有一个额外的缓存层。这个优势主要体现在读取大文件的时候。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;bytes 和 strings 库&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;bytes 和 strings 库里的 bytes.Reader 和string.Reader，它们都实现了&lt;code&gt;io.Reader&lt;/code&gt;接口，也都提供了NewReader方法用来从&lt;code&gt;[]byte&lt;/code&gt;或者&lt;code&gt;string&lt;/code&gt;类型的变量直接构建出相应的Reader实现。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;r := strings.NewReader(&lt;span&gt;&quot;abcde&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;// 或者是 bytes.NewReader([]byte(&quot;abcde&quot;))&lt;/span&gt;&lt;br/&gt;buf := &lt;span&gt;make&lt;/span&gt;([]&lt;span&gt;byte&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; {&lt;br/&gt; n, err := r.Read(buf)&lt;br/&gt; fmt.Println(n, err, buf[:n])&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; err == io.EOF {&lt;br/&gt;  &lt;span&gt;break&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另一个区别是 bytes 库有Buffer的功能，而 strings 库则没有。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;var&lt;/span&gt; buf bytes.Buffer&lt;br/&gt;fmt.Fprintf(&amp;amp;buf, &lt;span&gt;&quot;Size: %d MB.&quot;&lt;/span&gt;, &lt;span&gt;85&lt;/span&gt;)&lt;br/&gt;s := buf.String()) &lt;span&gt;// s == &quot;Size: 85 MB.&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于&lt;code&gt;io.Reader&lt;/code&gt;和&lt;code&gt;io.Writer&lt;/code&gt;接口，可以简单理解为读源和写源。也就是说，只要实现了&lt;code&gt;Reader&lt;/code&gt;中的&lt;code&gt;Read&lt;/code&gt;方法，这个东西就可以作为读源，里面可以包含数据，被我们读取。&lt;code&gt;Writer&lt;/code&gt;也是如此。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上是我对Go语言里做&lt;code&gt;I/O&lt;/code&gt;操作时经常会用到的Go语言内置库在使用场景和每个库要解决的问题上的一些总结，希望能帮大家理清思路，作为参考，在开发任务中需要时正确选择合适的库完成&lt;code&gt;I/O&lt;/code&gt;操作。如果文章中的叙述有错误，欢迎留言指正，也欢迎在留言中对文章内容进行探讨和提出建议。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;推荐阅读：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>502afbb813a1666013670b85a715ad03</guid>
<title>如何进行指标质量治理：指标系统（提质篇）</title>
<link>https://toutiao.io/k/qpn3cho</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;作者：小见；数据中台产品负责人；UBDC全域大数据峰会“灯塔人物”；擅长埋点模型、指标治理，数仓架构等；&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;01&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;指标质量治理概述&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;指标质量治理主要分为两个部分：提质与增效。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;可以简单从字面进行理解，提质就是提升指标质量，主要是针对指标本身而言，保障指标在应用的过程中不会出现歧义、误解，并且指导数仓的规范化建设，而增效则是增加指标的效益，主要是针对指标与企业的关系而言，让指标在企业的业务活动中，能更高效、更准确地反映出企业的内在情况与业务问题，为企业的发展方向提供指导。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;本文主要是指标提质为主，指标增效部分择日再续。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;02&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;指标提质的工作主要分为两个阶段&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;A、面对已存在的、混乱的旧指标现状，进行全业务的指标梳理与重建；&lt;/p&gt;&lt;p&gt;B、约束新指标需求，规范化指标开发流程。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;03&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;指标提质需要达到的目标&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;A阶段：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1、输出全局指标字典：用于相关使用人员检索、查询、确认；&lt;/p&gt;&lt;p&gt;2、调整指标的呈现：从数仓字段到报表、数据产品的功能上，对梳理后的指标进行优化、重整；&lt;/p&gt;&lt;p&gt;3、指导数仓的重构：重新规划数仓分层与数据加工流程。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;B阶段：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1、制定指标需求审核流程；&lt;/p&gt;&lt;p&gt;2、输出指标作业手册，从指标的变更、动议到方案、执行，制定严格的流程；&lt;/p&gt;&lt;p&gt;3、研发指标系统，规范化指标开发流程，并最终将指标落地到指标字典。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;04&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;针对指标进行前提的调研&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;指标混乱的原因主要有以下 7 个方面（4 个不一致，3 个不清晰）：&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;1、相同指标名称，口径不一致&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;如对于 “新用户” 的定义：&lt;/p&gt;&lt;p&gt;运营部的口径是：首次下单并完成支付的用户。&lt;/p&gt;&lt;p&gt;产品部的口径是：当日新增注册的用户。&lt;/p&gt;&lt;p&gt;两者描述的是不同的目标用户群，但由于命名上相同，所以在使用上容易让人混淆。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;2、相同口径，不同指标名称&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;如 “优惠券” 的相关指标：&lt;/p&gt;&lt;p&gt;衡量企业日常经营活动的健康度：优惠券抵扣金额。&lt;/p&gt;&lt;p&gt;衡量市场活动效果：优惠券消耗金额。&lt;/p&gt;&lt;p&gt;两者都是衡量优惠券抵扣的金额，但由于不同名，所以导致认知上出现了偏差。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;3、限定词不同，但业务事实相同的两个指标，描述事实部分的口径不一致&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;如涉及到 “购买” 这个业务事实的相关指标：&lt;/p&gt;&lt;p&gt;白金会员的支付用户数中，“支付用户数” 的口径定义是：统计周期内下单并且成功支付的去重用户数。&lt;/p&gt;&lt;p&gt;黄金会员的支付用户数中，“支付用户数” 的口径定义是：统计周期内下单并且支付成功，并排除退单的去重用户数。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;两者描述的都是 “用户支付商品订单” 的这个业务过程，记录都是 “支付” 这个事实，区别在于，一个限定词是白金会员，另外一个是黄金会员。但根据一致性原则，虽然这两个指标不同，但是“支付”这个事实是相同的，所以“支付用户数”这个指标的业务口径、计算逻辑应该是一致的。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;4、指标口径与计算逻辑不一致&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这个问题的根本是指标的需求方或开发人员对于指标的认识不清晰，导致指标在开发逻辑上产生了错误导致。&lt;span&gt;如 “近 7 日 UV” 这个指标：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;正确的定义是：最近 7 天内，有登录过的去重用户数。但是在实际应用场景中，有的会定义成：“7 日日均 UV” 也就是近 7 日，每日的 UV 相加除以 7 取平均值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这个问题在梳理的过程中是比较难发现的，因为它涉及到计算逻辑跟口径之间的校准，所以需要更仔细地梳理指标开发逻辑。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;5、指标口径不清晰&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;部分指标口径的描述比较笼统，或者部分名词具有多义性。&lt;/p&gt;&lt;p&gt;如&lt;span&gt;描述笼统的 “关单金额” 的口径描述是 “关闭订单的金额”，但关闭订单会有两种理解，1 是支付后退款，2 是支付前取消；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;名词多义性的：“地址” 这个维度，有多种涵义，如户籍地址、常住地地址、IP地址、GPS 地址等；&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;指标描述不清晰，就会让使用者产生误解，所以在记录的时候，必须对这些容易产生误解的地方进行标注。&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;6、指标命名不清晰&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在实际的业务操作过程中，因为各业务部门只着眼于自己的业务，没有进行全局的设计，所以有很多指标在自己的部门内部使用是没有问题，但是跟其他部门沟通时就会产生歧义，如 ROI、销售额、支付人数等。这些词都是普通名词（也即原子指标），是没有一个具体的指称的，所以必须将这些普通名词都加上具体指称的业务对象（也即指标的聚合粒度），变成专有名词，如：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;xx渠道 ROI，或是xx活动 ROI；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;xx专题销售额，或是全平台销售额；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;xx课程支付人数，或是xx专题支付人数。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;除此之外，所有的指标都包含了一定的统计周期，只要涉及到具体的数值，就必然要加上统计周期，所有的指标，也都是在最小粒度上去累加出来的，如近一个月xx专题支付人数，是 sum 了 30 个近一天xx专题支付人数，而近一天xx专题支付人数，是 sum 了 24 个近一小时xx专题支付人数，然后到分、到秒。具体需要聚合到什么粒度，根据具体的需求来设计，所以上述的指标需要调整成：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;近一周xx渠道 ROI；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;近一月xx专题销售额；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;近一年xx课程支付人数。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;7、指标来源和计算逻辑不清晰&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这个问题主要出现在一个指标可以通过多个数据源，不同的计算逻辑分别统计得出。比如：某个课程的销售额，既可以从课程的角度，对单个课程的销售金额进行累加；也可以从用户的角度，对购买过该课程的用户的子单的支付金额进行计算。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果指标有多个来源，就需要进行来源统一，否则，如果来源不清楚，一旦指标发生问题，很难去溯源定位。另外，有些指标的计算逻辑比较复杂，仅仅凭借业务口径一段描述，使用指标的人还是无法理解这个指标的计算逻辑，这个时候就需要有一些伪码或者  SQL 描述。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;05&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;具体的实施步骤&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;1、由数据产品牵头，各业务线数据分析师辅助，成立攻坚小组，进行全局指标的梳理；&lt;/p&gt;&lt;p&gt;2、明确梳理计划，进行全业务的指标收集（以下模版供参考）；&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;564&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;502&quot; data-ratio=&quot;0.18013856812933027&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;866&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jWg3EibnYW99v4ribErZboWZzILFBFLcbkloOopAibOI3xhtoTeVpwUdo2fnlLODcjgPibhKcdOjcUyEUxVQAH2hAw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;3、对于收集到的指标，进行初步讨论去重，口径相同的进行合并，并与业务方进行确认；&lt;/p&gt;&lt;p&gt;4、将剩余指标进行归集，明确主题域、业务过程；&lt;/p&gt;&lt;p&gt;5、区分指标类型，拆分原子指标与派生指标，对于派生指标，要定义统计的实体、业务修饰词、统计周期等；&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.14665127020785218&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;866&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jWg3EibnYW99v4ribErZboWZzILFBFLcbkaIZQpiaVhrJaaiclibM1kDrdpDlRpmGG0Sp17xkSJKSl7FKc1b9XT9U0Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;6、输出全局统一的指标字典；&lt;/p&gt;&lt;p&gt;7、根据指标字典，拆分出的原子指标、派生指标、主题域、业务修饰词等内容，指导数据仓库的重构；&lt;/p&gt;&lt;p&gt;8、进行指标系统的搭建，组件化新指标的开发流程。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.651270207852194&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jWg3EibnYW99v4ribErZboWZzILFBFLcbk3ewzYcu4plBGwwGdbseGEmibqhKe1GuiaV7MsskwDuxjvyHNSfXWiaSOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;866&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6443418013856813&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jWg3EibnYW99v4ribErZboWZzILFBFLcbkMqnQyG7qTMtibMXUrbTGEVcia0jTxGibsMn8hOw1MVt118EUsYqNYOib9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;866&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;06&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;写在最后&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;指标提质的最终成果，就是要形成一个包含生产自动化、开发逻辑规范化、口径一致化的指标系统。它既包含指标的开发工具，可以让各部门业务人员自行组装指标，也提供全局业务口径一致的指标字典，方便使用人员快速了解指标的业务含义和计算逻辑，避免对指标的口径产生歧义。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;转自：&lt;/strong&gt;&lt;strong&gt;一个数据人的自留地；&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>091107e1fe32d56a5a24688a010d4db1</guid>
<title>有了这个开源项目，不会 Web 开发也能让数据 “动” 起来</title>
<link>https://toutiao.io/k/r7skget</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;本文面向有 Python 基础的小伙伴，有 Web 基础的更好&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6546875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcyUsLibunKePjhTngDpqbVxXWia9PiaFkhzkI5OrDRgTJ1DT9ibuPBCv91Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作者：HelloGitHub-吱吱&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里是 &lt;strong&gt;HelloGitHub 推出的《讲解开源项目》系列&lt;/strong&gt;，今天要向小伙伴们介绍的是一个能够快速地把数据制作成可视化、交互页面的 Python 框架：Streamlit，分分钟让你的数据动起来！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;犹记得我在做机器学习和数据分析方面的毕设时，曾经为了制作精美的图表而抓耳挠腮，曾经为了在页面可视化、交互式展示数据而绞尽脑汁。现在摆在我们面前的是一个能够快速可视化数据并且制作成交互页面的 Python 框架，&lt;strong&gt;仅需几分钟就可以快速构建和部署功能强大的数据应用程序&lt;/strong&gt;，写到这里 Streamlit 的高傲已经尽数体现了。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Streamlit - The &lt;strong&gt;fastest&lt;/strong&gt; way to build and share data apps 👊&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.570230607966457&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcdLTv2X39sTZIX0jAiaGJF89NO9OZL9Wj78RS423bx4xS3z6libZHkMsA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2862&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;下面我们就一起来上手这个强大的 Python 数据可视化框架吧！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一、浅尝&lt;span&gt;辄止&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、本地实验环境：&lt;code&gt;Python 3.6 - Python 3.8&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、安装 Streamlit 体验官方提供的 hello world 小 demo。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;pip install streamlit&lt;br/&gt;streamlit hello&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2111111111111111&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcve1b5TPJtF8F1KyrZ7YXHhjibHCn1NpM1TYaiaZQLxliaRiaOUdHkLn5ZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、运行上述命令后会自动打开 Streamlit 的初始页面 &lt;code&gt;http://localhost:8501/&lt;/code&gt;。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.42407407407407405&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdc5cG2s4XkrEkzX8tRKubRXiad0ofYby2ckibURnLff6tSM3IhrlZpUq5g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4、通过左边栏可以选择四个内置小项目并查看其代码，例如分形动画、折线图和层叠地图等，能在网页上点击选择设置一些参数，动态查看效果。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8832866479925303&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdciben8uqkhMTwmnqdYc7tdwlPKH5Ql6RBNVHNJBIOS8aI8DmBa95meMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1071&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5573827851644506&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcniaXfEKgPYV7hoMMX05I0HFMrPqhuamRJOprFnCta7hASVbzSV4KicPA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2858&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二、熟能生巧&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过 Streamlit 提供的接口，完美避开 Django 和 Flask 框架，无需编写 HTML、CSS、JavaScript 代码，与魔幻的前端 say goodbye。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.1 开发自己的 app&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、首先创建一个 Python 文件，命名为 &lt;code&gt;test.py&lt;/code&gt;，导入 Streamlit 库。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; streamlit &lt;span&gt;as&lt;/span&gt; st&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、通过如下命令启动项目，&lt;code&gt;Ctrl + c&lt;/code&gt; 即可结束项目。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# filename 自己的 py 文件名称&lt;/span&gt;&lt;br/&gt;streamlit run [filename]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.11481481481481481&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdchzNOG2uqRga6gA0BbJGdrX7toT6OUJic51XEUNHxtupLyv6XsAgyWOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、当应用程序正在运行时，每次修改 Python 文件并保存，网页都会弹出提示“Source file changed”，可以选择“Rerun”或者“Always rerun”，使得页面能够重新刷新。忽略掉小小的等待时间，我们能够在快速交互循环中「所见即所得」。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4、我们在任何时候对网页内容进行更新，包括：修改源码、使用者和网页进行交互（点击网页的按钮、输入文本），Streamlit 都是自上而下扫描解析并且运行整个代码。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2 基础命令&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.1 显示文本&lt;span/&gt;&lt;/h4&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;命令&lt;/th&gt;&lt;th&gt;效果&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.title()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;添加一个标题&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.write()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Streamlit 的瑞士军刀，可渲染如文本、Matplotlib 和 Altair 图表等几乎任何数据参数&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.text()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;显示纯文本&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.header()&lt;/code&gt;、&lt;code&gt;st.subheader()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;二级标题和三级标题&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.markdown()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;显示 Markdown&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.latex()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;显示格式为 LaTeX 的数学表达式&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.code()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;显示带有可选语法高亮显示的代码块&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2764378478664193&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcbuP6uuOX9WIJ7uzReatZ4a22slzoUba5PzYX9ibSHM8YVHzq4IeZkgw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1078&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.2「魔法」&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我愿称之为懒人命令——用尽量少的代码达到同样的效果。在不调用任何 Streamlit 方法的情况下，当用户自定义的变量出现在单行中，等同于 st.write() 效果。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; pandas &lt;span&gt;as&lt;/span&gt; pd&lt;br/&gt;df = pd.DataFrame({&lt;br/&gt;  &lt;span&gt;&#x27;first column&#x27;&lt;/span&gt;: [&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;],&lt;br/&gt;  &lt;span&gt;&#x27;second column&#x27;&lt;/span&gt;: [&lt;span&gt;10&lt;/span&gt;, &lt;span&gt;20&lt;/span&gt;, &lt;span&gt;30&lt;/span&gt;, &lt;span&gt;40&lt;/span&gt;]&lt;br/&gt;})&lt;br/&gt;&lt;br/&gt;df&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2764378478664193&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdc2bnZZMktmaJcVibOMkmbzWiaWnNXvXDn6XI4w8Q4sp0mnujJ0ZrszeNg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1078&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也可以将 &lt;code&gt;&#x27;&#x27;&#x27;&lt;/code&gt; 和 &lt;code&gt;&#x27;&lt;/code&gt; 包裹的内容直接显示。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# Draw a title and some text to the app:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&#x27;&#x27;&#x27;&lt;br/&gt;# Welcome to HelloGitHub&lt;br/&gt;&lt;br/&gt;_快来加入我们吧_&lt;br/&gt;&#x27;&#x27;&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;x = &lt;span&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&#x27;x&#x27;&lt;/span&gt;, x  &lt;span&gt;# &amp;lt;-- Draw the string &#x27;x&#x27; and then the value of x&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.27340129749768305&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcgo1FfBsTn0v5tiaQXBecrScakJIsBhPgfvibFoMx9Nya1aZv9RicSfTvg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1079&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.3 显示数据表&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Streamlit 能从多个不同角度快速、交互地可视化数据，原始数据、图表、JSON 数据等皆可。&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;命令&lt;/th&gt;&lt;th&gt;效果&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.dataframe()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;将数据框显示为交互式表格&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.table()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;显示静态表格&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.json()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;将对象或字符串显示为 JSON 字符串&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3187543736878936&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdc4TeyC5EL7bYG7HRxGByiaIVbfMtic3erMys2vx0u0PFDtXXhLrn8ibbOA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2858&quot;/&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.4 绘制图表和地图&lt;span/&gt;&lt;br/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Streamlit 支持多种流行的数据图表库，如 Matplotlib、Altair、deck.gl 等。&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;命令&lt;/th&gt;&lt;th&gt;效果&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.line_chart()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;折线图&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.area_chart()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;面积图&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.bar_chart()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;条形图&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.map()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在地图上显示数据点&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.pyplot()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;matplotlib.pyplot 图表&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.altair_chart()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;使用 Altair 库显示图表&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.vega_lite_chart()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;使用 vega_lite_chart 库显示图表&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.pydeck_chart()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;使用 PyDeck 库绘制图表&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.36641929499072357&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdccztGWZbXS6iar0aw7iaAyAbCpncfX3jMzWlS5ZQxIReJaibc2HasdBH0g/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1078&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.5 显示多媒体&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;动动鼠标即可将图像、视频和音频文件直接嵌入 Streamlit 应用程序。&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;命令&lt;/th&gt;&lt;th&gt;效果&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.image()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;图片&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.audio()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;音频&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.video()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;视频&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2504638218923933&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdc2lmIpLbQTPJjC2yRhzZod5jMnGcot5UJGv6XGIKKQJ1KMcTXliaiaqRg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1078&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.6 交互式小部件&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;盯👀：漂亮的按钮、滑块、输入框等小部件。每次用户与小部件交互时，Python 脚本都会重新执行，并且该小部件的输出值会在运行期间设置为新值。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、按钮 &lt;code&gt;button&lt;/code&gt;。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt; st.button(&lt;span&gt;&#x27;HelloGitHub&#x27;&lt;/span&gt;):&lt;br/&gt;    st.write(&lt;span&gt;&#x27;Subscribe our channels~&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2683379758588672&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcs0ydzBGMBd03jc0ASkMpDXRjcG5g4icr1Kiba0U760Q4uZSXbzsqVC3g/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1077&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、复选框 &lt;code&gt;checkbox&lt;/code&gt;。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ret = st.checkbox(&lt;span&gt;&#x27;I love HelloGitHub!&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; ret:&lt;br/&gt;  st.write(&lt;span&gt;&#x27;Me too~&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2683379758588672&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdc73pIpeaDnW2qQohe90EllNAF6tceQliauxMJDGlhbMsYsBp2E79xaRA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1077&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、滑块 &lt;code&gt;slider&lt;/code&gt;，可以选择 int / float / data / time / datetime 等类型。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;age = st.slider(&lt;span&gt;&#x27;HelloGitHub 几岁了?&#x27;&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;st.write(&lt;span&gt;&quot;HelloGitHub &quot;&lt;/span&gt;, age, &lt;span&gt;&#x27; 岁了~&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3358070500927644&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcC0E6ibaQXCIuRQuERfaeXibIauqALVB3kSWTjj7p6RB9AJ9V6MngAR2Q/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1078&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4、常用的命令列举&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;命令&lt;/th&gt;&lt;th&gt;效果&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.radio()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;单选按钮&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.select()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;单选框&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.multiselect()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;多选框&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.text_input()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;单行文本输入框&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.text_area()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;多行文本输入框&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.number_input()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;数字输入框&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.date_input()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;日期输入框&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.time_input()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;时间输入框&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.file_uploader()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;文件上传&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.color_picker()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;取色器&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.7 显示进程和状态&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、进度条 &lt;code&gt;progress&lt;/code&gt;。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; time&lt;br/&gt;my_bar = st.progress(&lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; percent_complete &lt;span&gt;in&lt;/span&gt; range(&lt;span&gt;100&lt;/span&gt;):&lt;br/&gt;    time.sleep(&lt;span&gt;0.1&lt;/span&gt;)&lt;br/&gt;    my_bar.progress(percent_complete + &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2548656163113994&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcodl4fIhqqicuYR2icKy4uCeDrY6jN6Q7A1Ruf667uu7N1OxjatDROj1A/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1079&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、&lt;code&gt;spinner&lt;/code&gt;：在执行代码块时临时显示一条消息。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; time&lt;br/&gt;&lt;span&gt;with&lt;/span&gt; st.spinner(&lt;span&gt;&#x27;Wait for it...&#x27;&lt;/span&gt;):&lt;br/&gt;    time.sleep(&lt;span&gt;5&lt;/span&gt;)&lt;br/&gt;st.success(&lt;span&gt;&#x27;Done!&#x27;&lt;/span&gt;)&lt;br/&gt;st.balloons()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.43744207599629287&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcQLUVgj5E0BsVY2039u7AEpBo2auBPlBMAeVCTjibkNMGiaUvCo9f0gMQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1079&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、其他&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;命令&lt;/th&gt;&lt;th&gt;效果&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.balloons()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;庆祝气球&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;st.error()&lt;/code&gt; / &lt;code&gt;st.warning()&lt;/code&gt; / &lt;code&gt;st.info()&lt;/code&gt; / &lt;code&gt;st.success()&lt;/code&gt; / &lt;code&gt;st.exception()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;错误、警告、提示、成功、报错信息提示&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.8 性能优化&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5611111111111111&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcNoEvsDQbOQDTXrcKaZ4XSDLr2ps8vu7DA6emKWTsZLKRbpmS048YAg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Streamlit 使用 &lt;code&gt;@st.cache&lt;/code&gt; 装饰器使得页面能够快速“无痕”刷新。当我们给函数打上 &lt;code&gt;cache&lt;/code&gt; 标记时，Streamlit 在碰到该函数的时候会检查三个值：函数名称、函数体、输入参数。如果发现这三个值的组合第一次出现，则会运行函数，并且将结果存储在本地缓存中。当下次调用该函数时，如果这三个值没有改变，则 Streamlit 会跳过函数执行，直接读取本地缓存返回结果。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@st.cache&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;HelloGitHub&lt;/span&gt;&lt;span&gt;(url)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;# 返回相应数据&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; data&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 第一次遇到，执行该函数&lt;/span&gt;&lt;br/&gt;d1 = HelloGitHub(DATA_URL_1)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 传入参数一致，第二次遇到不会执行该函数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 而会直接返回前一次计算的结果，d1 = d2&lt;/span&gt;&lt;br/&gt;d2 = HelloGitHub(DATA_URL_1)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 传入参数不同，重新执行该函数&lt;/span&gt;&lt;br/&gt;d3 = HelloGitHub(DATA_URL_2)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.2.9 布局设置&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、将交互小部件放入侧边栏。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;add_selectbox = st.sidebar.selectbox(&lt;br/&gt;    &lt;span&gt;&quot;Which one?&quot;&lt;/span&gt;,&lt;br/&gt;    (&lt;span&gt;&quot;C++&quot;&lt;/span&gt;, &lt;span&gt;&quot;Java&quot;&lt;/span&gt;, &lt;span&gt;&quot;Python&quot;&lt;/span&gt;)&lt;br/&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2342007434944238&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcUIQ6U1icB9aSskePrIzdV4NMFj8ibEuicXNIUKmWUeYoHVXe1RnEDIibnQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1076&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、表单 &lt;code&gt;st.form()&lt;/code&gt;：将元素与“提交”按钮一起处理。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# 向表单插入元素&lt;/span&gt;&lt;br/&gt;&lt;span&gt;with&lt;/span&gt; st.form(&lt;span&gt;&quot;my_form1&quot;&lt;/span&gt;):&lt;br/&gt;    st.write(&lt;span&gt;&quot;我在 1 框框里~&quot;&lt;/span&gt;)&lt;br/&gt;    slider_val = st.slider(&lt;span&gt;&quot;框框滑块&quot;&lt;/span&gt;)&lt;br/&gt;    checkbox_val = st.checkbox(&lt;span&gt;&quot;pick me&quot;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;# Every form must have a submit button.&lt;/span&gt;&lt;br/&gt;    submitted = st.form_submit_button(&lt;span&gt;&quot;1-Submit&quot;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 乱序插入元素&lt;/span&gt;&lt;br/&gt;form = st.form(&lt;span&gt;&quot;my_form2&quot;&lt;/span&gt;)&lt;br/&gt;form.slider(&lt;span&gt;&quot;我在 2 框框里~&quot;&lt;/span&gt;)&lt;br/&gt;st.slider(&lt;span&gt;&quot;我在外面&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;# Now add a submit button to the form:&lt;/span&gt;&lt;br/&gt;form.form_submit_button(&lt;span&gt;&quot;2-Submit&quot;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8564814814814815&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcPmErdVAccISSg8q4dkgtWcGeaOwsIw1eQMCvP5ofmQ72fJyUdtGzGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、插入列并排的容器&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# 官方示例&lt;/span&gt;&lt;br/&gt;col1, col2, col3 = st.beta_columns(&lt;span&gt;3&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;with&lt;/span&gt; col1:&lt;br/&gt;    st.header(&lt;span&gt;&quot;A cat&quot;&lt;/span&gt;)&lt;br/&gt;    st.image(&lt;span&gt;&quot;https://static.streamlit.io/examples/cat.jpg&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;with&lt;/span&gt; col2:&lt;br/&gt;    st.header(&lt;span&gt;&quot;A dog&quot;&lt;/span&gt;)&lt;br/&gt;    st.image(&lt;span&gt;&quot;https://static.streamlit.io/examples/dog.jpg&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;with&lt;/span&gt; col3:&lt;br/&gt;    st.header(&lt;span&gt;&quot;An owl&quot;&lt;/span&gt;)&lt;br/&gt;    st.image(&lt;span&gt;&quot;https://static.streamlit.io/examples/owl.jpg&quot;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.3 修改配置&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、查看所有的配置选项：&lt;code&gt;streamlit config show&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、Windows 系统可以在 &lt;code&gt;%userprofile%/.streamlit/config.toml&lt;/code&gt; 全局文件下或者在当前运行 Streamlit 的文件夹下建立 &lt;code&gt;.streamlit/config.toml&lt;/code&gt; 文件进行设置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、某些配置例如外观、主题等点击网页上的 &lt;code&gt;Settings&lt;/code&gt; 也可轻松选择。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.962474645030426&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdcibibibHcGSHeXC6SicYzDohO4VokYZLlD9Hmn3k4QgyCd0BnDAktibzQVnw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;986&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2.4 在 Streamlit sharing 上部署、管理和共享&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、将自己的项目代码上传到 GitHub 的共有仓库，添加需求文件以管理任何外部依赖项，例如 &lt;code&gt;requirements.txt&lt;/code&gt; 等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、在 &lt;code&gt;https://streamlit.io/sharing&lt;/code&gt; 上注册账号并且申请邀请「Request an invite!」。收到邀请电子邮件后，即可使用该平台部署管理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、选择 &lt;code&gt;New app&lt;/code&gt; 在 &lt;code&gt;Deploy an app&lt;/code&gt; 中填入相应信息即可。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.42777777777777776&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOH2a2IpTu8MLuySiaibVjsdct3j3SNibXVQ63lEcYzScicXZOuqBbS6ia55xkBNeJcYOofgfms0lFiaOVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4、若应用程序有很多依赖项，则第一次部署可能需要一些时间，最终应用程序可以使用如下链接访问：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;https://share.streamlit.io/[user name]/[repo name]/[branch name]/[app path]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;三、精益求精&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;到此，Streamlit 框架的基本接口和用法都已经讲完啦！更多详情还需要友友们在实践中探索，并将指令成功“嵌入”到自己的项目中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多命令在文档的「API cheat sheet」中都可以快速搜索到，希望很快就能够在 Streamlit Gallery 上看到大家分享的应用，可以留言给我地址我会去把玩的~。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，您的关注和宝贵三连「收藏、点赞、在看」，是对我们 HelloGitHub 莫大的支持，我们将会为您源源不断推送新鲜、有趣的开源项目。&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA5MzYyNzQ0MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNOqkqThUJBICyFBlvLvTyOCgBpibwWotSxGExfnOYFfPiaL9yn3GMUOCEVYN2RNslGCdQwgZy6ticdyA/0?wx_fmt=png&quot; data-nickname=&quot;HelloGitHub&quot; data-alias=&quot;GitHub520&quot; data-signature=&quot;分享 GitHub 上有趣、入门级的开源项目。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;👆「点击关注」第一时间收到更新&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;👆&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>