<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>652151a5cb097ffd2bbbead2ddcabb42</guid>
<title>“拖文件自动上传到远程服务器”，支持多种平台的原生终端。</title>
<link>https://toutiao.io/k/ea4uy8e</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;container app-preview post-body&quot;&gt;
  &lt;div class=&quot;preview&quot;&gt;&lt;p&gt;1 、在本地使用 trzsz -d ssh x.x.x.x 登录服务器。加 -d 是开启拖文件上传功能，默认是不开启的。&lt;/p&gt;

&lt;p&gt;2 、将 trz 和 tsz 放到服务器某个 PATH 目录下，要有可执行权限。执行命令 trz -v 不会报错即可。&lt;/p&gt;

&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/trzsz/trzsz-go&quot;&gt;https://github.com/trzsz/trzsz-go&lt;/a&gt; ，给个 Star 支持下？&lt;/p&gt;

&lt;p&gt;在 Release 中下载的 zip 里就是三个 trzsz、trz、tsz 可执行程序，也可以自己 clone 下来 make 编译。&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>33ed643e348a08f8229809cc561ccd43</guid>
<title>线上真实排队系统重构案例分享——实战篇</title>
<link>https://toutiao.io/k/4vki4nq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;写在前面&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上篇文章聊了聊 &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU5NTg1ODg2MQ==&amp;amp;mid=2247484221&amp;amp;idx=1&amp;amp;sn=1467781e7846cd3fcbefe668dc29ca90&amp;amp;chksm=fe6ac7ffc91d4ee9b2a8e57abef12750b8ff3d87f256e2b30fb9e3e19db676744658b9bd7abd&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;如何设计可落地的重构技术方案——理论篇&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;如何设计可落地的重构技术方案——理论篇&lt;/a&gt; 这篇文章主要以最近正在做的线上重构项目——乘客排队系统重构为场景，介绍一篇完整的系统重构技术方案。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;详细技术方案介绍&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;一、背景&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、现状:&lt;/p&gt;&lt;section&gt;* 目前线上乘客排队性能瓶颈很明显，主要采用Redis  List存储结构。随着队列中订单量增大，查询、插入、判断订单是否在队列中等操作RT指数级增长。&lt;/section&gt;&lt;section&gt;* 目前乘客排队架构，无法满足业务扩展需求，为支撑之后业务快速迭代，乘客排队重构迫在眉睫。&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;2、调研事项&lt;/section&gt;&lt;section&gt;* 使用Mysql存储排队信息可行性分析(线下环境压测) &lt;/section&gt;&lt;section&gt;* 对外接口和影响范围梳理(目前对外提供的20个左右接口分析)，&lt;/section&gt;&lt;section&gt;表格如下:&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;接口名称&lt;/th&gt;&lt;th&gt;接口路径&lt;/th&gt;&lt;th&gt;调用方&lt;/th&gt;&lt;th&gt;QPS&lt;/th&gt;&lt;th&gt;RT(995)&lt;/th&gt;&lt;th&gt;平均RT&lt;/th&gt;&lt;th&gt;备注&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;入队&lt;/td&gt;&lt;td&gt;/queue/enter&lt;/td&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;二、目标&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、对外接口不变，从底层存储改造，兼容目前线上显示场景，乘客排名显示和出队解耦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;排名显示保留普通队列、渠道队列、优先队列(包含绝对优先), 按入队时间排序&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;出队排序因子入队时根据固定规则计算, 采用更加灵活的策略算法计算出队优先级， 出队时只需根据排序因子排序，从而间接决定出队顺序,&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、数据存储排名采用Redis有序集合，队列信息新增mysql存储，分128张表。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3、解决目前性能瓶颈问题，支持后续业务快速迭代，以及后续需求扩展。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;三、整体方案&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1、新老方案对比&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重构前存储架构: redis: list数据结构  ,  key：蜂巢中心点 + 车型 + 队列类型 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重构后存储架构: &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;       排名队列: redis有序集合, key: 蜂巢中心点 + 车型 + 队列类型(为了兼容老的) &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;       队列信息表:  queue_info_xxx,   mysql存储， 按蜂巢中心点 hash分表，订单号 + 车型 建联合唯一索引&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;部分接口新—老对比&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;接口&lt;/th&gt;&lt;th&gt;查看排名&lt;/th&gt;&lt;th&gt;是否在队列中&lt;/th&gt;&lt;th&gt;入队&lt;/th&gt;&lt;th&gt;出队&lt;/th&gt;&lt;th&gt;插队&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;重构前&lt;/td&gt;&lt;td&gt;1. 循环所有队列中所有元素，循环判断计算位置，2.查询算法组计算预估时间&lt;/td&gt;&lt;td&gt;遍历查询出队列所有元素，循环判断是否contain&lt;/td&gt;&lt;td&gt;先判断是否在队列中存在，这里也会判断根据命中不同队列类型，写入redis 队列(list) 中&lt;/td&gt;&lt;td&gt;根据车型循环&amp;amp;多队列类型循环出队，并记录log&lt;/td&gt;&lt;td&gt;权益卡插队&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;重构后&lt;/td&gt;&lt;td&gt;通过订单号从”队列信息表“ 中查询排队信息，存在排队记录，判断是否存在排名，若不存在排名显示M+(排名队列存在上线控制)，否则查询”排名队列“直接返回顺序 。查询算法组计算预估时间&lt;/td&gt;&lt;td&gt;直接查询&quot;队列信息表&quot;判断是否存在记录&lt;/td&gt;&lt;td&gt;先写入&quot;队列信息表&quot;，若未超过排号阈值，则写入对应&quot;排名队列&quot;&lt;/td&gt;&lt;td&gt;更新&quot;队列信息表&quot;状态，若存在排名，则从排名队列中移除，并异步通知候补，并记录log&lt;/td&gt;&lt;td&gt;直接通过更新队列信息表”order_by“字段 即可改变出队顺序&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重构前瓶颈分析: 每次请求都会将队列中元素全部取出循环遍历(当排队订单量增大时，RT呈指数级增长，卖个关子，原因大家可以想想为啥？)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重构后存储架构优势: 将原来的O(n)时间复杂度，变为O(1)复杂度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2、重构后架构图&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6204259967231022&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kulR6Bq67W96Y3QbiammBAHWHa6YY1rjibBibagsibia1wKnWV319evQKpWYPE41tkAL7AfhSBHlI1nHgrl6ibw7NSqA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1831&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;关于队列大小统计问题:&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;排名未限流队列:   直接通过ZCARD获取 (O(1)  时间复杂度)&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;排名限流队列: 通过计数器获取总长度 (O(1)), 降级通过ZCARD获取&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）关于新增运力撮合——查询列表【橙色部分】可能存在瓶颈问题——后期优化方向有2种
可以排名前N抽离出缓冲集合
队列截断 —— 大小超过N转为其它表存储&lt;/p&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;其它流程图: 入队、出队流程图 （此处省略）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;表结构设计&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt; queue_info_[001 ~ 128] : 排队信息表 按蜂巢中线点 hash % 128 规则分表，数据按天归档&lt;/p&gt;&lt;p&gt;&lt;span&gt;   &lt;/span&gt;&lt;span&gt;queue_manager : &lt;/span&gt;&lt;span&gt;排&lt;/span&gt;&lt;span&gt;名队列管理表 主要控制是否限流状态，和蜂巢队列信息&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;queue_log_[001~128]&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span&gt; 订单入队&amp;amp;出队记录表，按蜂巢中线点  hash % 128 规则分表，后期再考虑归档。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;详细表结构 —— 省略&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;四、排序字段(order_by) 设计&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;针对排队场景，时间越小，越在前。可以使用时间差逆序计算，公式如下: ~(-1L &amp;lt;&amp;lt; 39L) &amp;amp; (~(毫秒级时间差))&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其它规则此处省略.&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;五、历史队列场景兼容问题&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;排名显示:   普通队列、渠道队列、优先队列&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;订单出队:  通过权重系数不同配置，最后计算出不同排序&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;六、灰度方案&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;按城市灰度，先选小流量城市。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;七、回滚方案&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关闭城市灰度开关，已存在队列中数据会影响，需要迁移工具刷新数据&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;八、数据归档方案 &amp;amp; 兜底方案&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据归档:   乘客排队信息按天归档&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;兜底策略:  长时间(可配置)排队状态未变更(可能出现异常)，强制退出&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;九、数据监控&amp;amp;报警&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;乘客排队Grafana监控:
监控指标:  城市、蜂巢、车型、普通队列数、渠道队列数、优先队列数
报警: 队列数超过阈值钉钉报警&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;十、时间规划&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;方案调研的接口(20个接口)增加改造方案、责任人，进度项&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;接口名称&lt;/th&gt;&lt;th&gt;接口路径&lt;/th&gt;&lt;th&gt;调用方&lt;/th&gt;&lt;th&gt;QPS&lt;/th&gt;&lt;th&gt;RT(995)&lt;/th&gt;&lt;th&gt;平均RT&lt;/th&gt;&lt;th&gt;备注&lt;/th&gt;&lt;th&gt;改造方案&lt;/th&gt;&lt;th&gt;责任人&lt;/th&gt;&lt;th&gt;进度&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;入队&lt;/td&gt;&lt;td&gt;/queue/enter&lt;/td&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td&gt;XXX&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8293991416309013&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/kulR6Bq67W96Y3QbiammBAHWHa6YY1rjib7IreKmXSpLKLiaDcax2R6LJ5wLsFOH7O7yMDH1y0sjo7Gt70PSpFegQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1864&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意: 接口自测 和 CR是在开发阶段完成的，监控报警不影响测试的开发，可以在测试阶段开发。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;十一、关联组&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;略&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;十二、所需资源&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;略&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重构需要考虑到细节很多，需要考虑到每一个可能出现瓶颈的地方，以及后续优化，扩展问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所有改动项，必须责任到个人(避免遗漏)，另外提测之前必须全部自测通过(单元测试)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前该方案代码开发已经基本完成，下一篇文章继续以排队系统重构为场景，将给大家聊一聊灰度阶段压测方案如何设计，敬请期待。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;欢迎关注&quot;浅谈架构&quot;公众号，不定期分享原创技术文章，后续有机会给大家直播分享系统重构技术细节。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.36484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kulR6Bq67WicS8obXBjC9RqxibSJcgOsnicwSlKjFSxuEECwjZjYS8Y9zpmCdyv6z4yeSicSQSDNz2XUzRppBjuGXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;file&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f3245593491d5a22af72c050fdb6c186</guid>
<title>高并发下如何防重？</title>
<link>https://toutiao.io/k/ulsc0so</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大家好，我是苏三，又跟大家见面了。&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;文末留言送书啦！！！&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近测试给我提了一个bug，说我之前提供的一个批量复制商品的接口，产生了重复的商品数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;追查原因之后发现，这个事情没想象中简单，可以说一波多折。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1. 需求&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;产品有个需求：用户选择一些品牌，点击确定按钮之后，系统需要基于一份&lt;code&gt;默认&lt;/code&gt;品牌的商品数据，复制出一批&lt;code&gt;新&lt;/code&gt;的商品。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;拿到这个需求时觉得太简单了，三下五除二就搞定。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我提供了一个复制商品的基础接口，给商城系统调用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当时的流程图如下：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2962382445141066&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5iaKjv5crmHjKwiakCWXlN74v073cEphxgnuialQdxJ1APTqGmxga34icfB9dD7VVPPq7rjYbYF7Pdyqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1276&quot;/&gt;如果每次复制的商品数量不多，使用同步接口调用的方案问题也不大。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2. 性能优化&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但由于每次需要复制的商品数量比较多，可能有几千。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果每次都是用同步接口的方式复制商品，可能会有性能问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此，后来我把复制商品的逻辑改成使用&lt;code&gt;mq&lt;/code&gt;异步处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;改造之后的流程图：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.25058823529411767&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5iaKjv5crmHjKwiakCWXlN74vGmIG2UQ0ACq9ibuIG9mV02Bjdjtw4ibmE06BJucicvkBTaAgibNuEeLdsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1700&quot;/&gt;复制商品的结果还需要通知商城系统：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4166666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5iaKjv5crmHjKwiakCWXlN74vfCDzNOsHJ1a6TElFvSNKEEA8B7320Rhm2hje3tib4B8cdGUzMHK94KQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1128&quot;/&gt;这个方案看起来，挺不错的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但后来出现问题了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3. 出问题了&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;测试给我们提了一个bug，说我之前提供的一个批量复制商品的接口，产生了重复的商品数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过追查之后发现，商城系统为了性能考虑，也改成异步了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;他们没有在接口中直接调用基础系统的复制商品接口，而是在&lt;code&gt;job&lt;/code&gt;中调用的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;站在他们的视角流程图是这样的：&lt;img data-ratio=&quot;0.28144458281444584&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5iaKjv5crmHjKwiakCWXlN74vibicaial4QeBQweXfssQVwcqaMnTPY52iaBOGzRd6GuajlLDmicAsHKq0Pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1606&quot;/&gt;用户调用商城的接口，他们会往&lt;code&gt;请求记录表&lt;/code&gt;中写入一条数据，然后在另外一个&lt;code&gt;job&lt;/code&gt;中，异步调用基础系统的接口去复制商品。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但实际情况是这样的：商城系统内部出现了bug，在请求记录表中，同一条请求产生了重复的数据。这样导致的结果是，在job中调用基础系统复制商品接口时，发送了重复的请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;刚好基础系统现在是使用&lt;code&gt;RocketMQ&lt;/code&gt;异步处理的。由于商城的job一次会取一批数据（比如:20条记录），在极短的时间内（其实就是在一个for循环中）多次调用接口，可能存在相同的请求参数连续调用复制商品接口情况。于是，出现了并发插入重复数据的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么会出现这个问题呢？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4. 多线程消费&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;RocketMQ&lt;/code&gt;的消费者，为了性能考虑，默认是用多线程并发消费的，最大支持&lt;code&gt;64&lt;/code&gt;个线程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@RocketMQMessageListener&lt;/span&gt;(topic = &lt;span&gt;&quot;${com.susan.topic:PRODUCT_TOPIC}&quot;&lt;/span&gt;,&lt;br/&gt;        consumerGroup = &lt;span&gt;&quot;${com.susan.group:PRODUCT_TOPIC_GROUP}&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MessageReceiver&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;RocketMQListener&lt;/span&gt;&amp;lt;&lt;span&gt;MessageExt&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;onMessage&lt;/span&gt;&lt;span&gt;(MessageExt message)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        String message = &lt;span&gt;new&lt;/span&gt; String(message.getBody(), StandardCharsets.UTF_8);&lt;br/&gt;        doSamething(message);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是说，如果在极短的时间内，连续发送重复的消息，就会被不同的线程消费。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即使在代码中有这样的判断：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Product oldProduct = query(hashCode);&lt;br/&gt;&lt;span&gt;if&lt;/span&gt;(oldProduct == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;    productMapper.insert(product);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在插入数据之前，先判断该数据是否已经存在，只有不存在才会插入。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但由于在并发情况下，不同的线程都判断商品数据不存在，于是同时进行了插入操作，所以就产生了&lt;code&gt;重复数据&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图所示：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.432601880877743&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5iaKjv5crmHjKwiakCWXlN74vqwIZ9vSeRvxOrn1vhCYibVaGM9Zz9z9sTlu9LrDFUoCROAiaMN4k81Xw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;638&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5. 顺序消费&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了解决上述并发消费重复消息的问题，我们从两方面着手：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;商城系统修复产生重复记录的bug。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;基础系统将消息改成&lt;code&gt;单线程顺序消费&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我仔细思考了一下，如果只靠商城系统修复bug，以后很难避免不出现类似的重复商品问题，比如：如果用户在极短的时间内点击创建商品按钮多次，或者商城系统主动发起重试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，基础系统还需进一步处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实&lt;code&gt;RocketMQ&lt;/code&gt;本身是支持顺序消费的，需要消息的生产者和消费者一起改。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生产者改为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;rocketMQTemplate.asyncSendOrderly(topic, message, hashKey, &lt;span&gt;new&lt;/span&gt; SendCallback() {&lt;br/&gt;  &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;onSuccess&lt;/span&gt;&lt;span&gt;(SendResult sendResult)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;      log.info(&lt;span&gt;&quot;sendMessage success&quot;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;onException&lt;/span&gt;&lt;span&gt;(Throwable e)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;      log.error(&lt;span&gt;&quot;sendMessage failed!&quot;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重点是要调用&lt;code&gt;rocketMQTemplate&lt;/code&gt;对象的&lt;code&gt;asyncSendOrderly&lt;/code&gt;方法，发送顺序消息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消费者改为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;@RocketMQMessageListener&lt;/span&gt;(topic = &lt;span&gt;&quot;${com.susan.topic:PRODUCT_TOPIC}&quot;&lt;/span&gt;,&lt;br/&gt;        consumeMode = ConsumeMode.ORDERLY,&lt;br/&gt;        consumerGroup = &lt;span&gt;&quot;${com.susan.group:PRODUCT_TOPIC_GROUP}&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;MessageReceiver&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;RocketMQListener&lt;/span&gt;&amp;lt;&lt;span&gt;MessageExt&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;onMessage&lt;/span&gt;&lt;span&gt;(MessageExt message)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        String message = &lt;span&gt;new&lt;/span&gt; String(message.getBody(), StandardCharsets.UTF_8);&lt;br/&gt;        doSamething(message);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接收消息的重点是&lt;code&gt;RocketMQMessageListener&lt;/code&gt;注解中的&lt;code&gt;consumeMode&lt;/code&gt;参数，要设置成&lt;code&gt;ConsumeMode.ORDERLY&lt;/code&gt;，这样就能顺序消费消息了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;修改后关键流程图如下：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.2842105263157895&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5iaKjv5crmHjKwiakCWXlN74vmDcibWsNfwwiag30A8LHM0UIjibtV9tDYv9HFmL6xQuDxNe5MFfxC7kjA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;380&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两边都修改之后，复制商品这一块就没有再出现重复商品的问题了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;But，修完bug之后，我又思考了良久。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;复制商品只是创建商品的其中一个入口，如果有其他入口，跟复制商品功能同时创建新商品呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不也会出现重复商品问题？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽说，这种概率非常非常小。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但如果一旦出现重复商品问题，后续涉及到要合并商品的数据，非常麻烦。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过这一次的教训，一定要防微杜渐。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不管是用户，还是自己的内部系统，从不同的入口创建商品，都需要解决重复商品创建问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，如何解决这个问题呢？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6. 唯一索引&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;解决重复商品数据问题，最快成本最低最有效的办法是：&lt;code&gt;给表建唯一索引&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想法是好的，但我们这边有个规范就是：&lt;code&gt;业务表必须都是逻辑删除&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而我们都知道，要删除表的某条记录的话，如果用&lt;code&gt;delete&lt;/code&gt;语句操作的话。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;delete&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; product &lt;span&gt;where&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;=&lt;span&gt;123&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种delete操作是&lt;code&gt;物理删除&lt;/code&gt;，即该记录被删除之后，后续通过sql语句基本查不出来。（不过通过其他技术手段可以找回，那是后话了）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有另外一种是逻辑删除，主要是通过&lt;code&gt;update&lt;/code&gt;语句操作的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;update&lt;/span&gt; product &lt;span&gt;set&lt;/span&gt; delete_status=&lt;span&gt;1&lt;/span&gt;,edit_time=&lt;span&gt;now&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;) &lt;br/&gt;&lt;span&gt;where&lt;/span&gt; &lt;span&gt;id&lt;/span&gt;=&lt;span&gt;123&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;逻辑删除需要在表中额外增加一个&lt;code&gt;删除状态字段&lt;/code&gt;，用于记录数据是否被删除。在所有的业务查询的地方，都需要过滤掉已经删除的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过这种方式删除数据之后，数据任然还在表中，只是从逻辑上过滤了删除状态的数据而已。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实对于这种逻辑删除的表，是没法加&lt;code&gt;唯一索引&lt;/code&gt;的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设之前给商品表中的name和model加了唯一索引，如果用户把某条记录删除了，delete_status设置成1了。后来，该用户发现不对，又重新添加了一模一样的商品。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于唯一索引的存在，该用户第二次添加商品会失败，即使该商品已经被删除了，也没法再添加了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个问题显然有点严重。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有人可能会说：把name、model和delete_status三个字段同时做成唯一索引不就行了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答：这样做确实可以解决用户逻辑删除了某个商品，后来又重新添加相同的商品时，添加不了的问题。但如果第二次添加的商品，又被删除了。该用户第三次添加相同的商品，不也出现问题了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由此可见，如果表中有逻辑删除功能，是不方便创建唯一索引的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5. 分布式锁&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，你想到的第二种解决数据重复问题的办法可能是：&lt;code&gt;加分布式锁&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前最常用的性能最高的分布式锁，可能是&lt;code&gt;redis分布式锁&lt;/code&gt;了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用redis分布式锁的伪代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;try&lt;/span&gt;{&lt;br/&gt;  String result = jedis.set(lockKey, requestId, &lt;span&gt;&quot;NX&quot;&lt;/span&gt;, &lt;span&gt;&quot;PX&quot;&lt;/span&gt;, expireTime);&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;&quot;OK&quot;&lt;/span&gt;.equals(result)) {&lt;br/&gt;      doSamething();&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;false&lt;/span&gt;;&lt;br/&gt;} &lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;    unlock(lockKey,requestId);&lt;br/&gt;}  &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过需要在&lt;code&gt;finally&lt;/code&gt;代码块中&lt;code&gt;释放锁&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中lockKey是由商品表中的name和model组合而成的，requestId是每次请求的唯一标识，以便于它每次都能正确得释放锁。还需要设置一个过期时间expireTime，防止释放锁失败，锁一直存在，导致后面的请求没法获取锁。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果只是单个商品，或者少量的商品需要复制添加，则加分布式锁没啥问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要流程如下：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.8079470198675496&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5iaKjv5crmHjKwiakCWXlN74vGcexEIvtOkk5Jfh2JwW8cvMKIibvp3JvHQdQoia82efOcepStGicuTNcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;604&quot;/&gt;可以在复制添加商品之前，先尝试加锁。如果加锁成功，则在查询商品是否存在，如果不存在，则添加商品。此外，在该流程中如果加锁失败，或者查询商品时不存在，则直接返回。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;加分布式锁的目的是：保证查询商品和添加商品的两个操作是原子性的操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但现在的问题是，我们这次需要复制添加的商品数量很多，如果每添加一个商品都要加分布式锁的话，会非常影响性能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;显然对于批量接口，加redis分布式锁，不是一个理想的方案。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6. 统一mq异步处理&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面我们已经聊过，在批量复制商品的接口，我们是通过RocketMQ的顺序消息，单线程异步复制添加商品的，可以暂时解决商品重复的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但那只改了一个添加商品的入口，还有其他添加商品的入口。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;能不能把添加商品的底层逻辑统一一下，最终都调用同一段代码。然后通过RocketMQ的顺序消息，单线程异步添加商品。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;主要流程如下图所示：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6787762906309751&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibJZVicC7nz5iaKjv5crmHjKwiakCWXlN74vp4QahsQibEx0YLVVX1xLYMzETZOdC0LNJP9VwkNo5MxANC3moic6ZZ2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1046&quot;/&gt;这样确实能够解决重复商品的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但同时也带来了另外两个问题：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;现在所有的添加商品功能都改成异步了，之前同步添加商品的接口如何返回数据呢？这就需要修改前端交互，否则会影响用户体验。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;之前不同的添加商品入口，是多线程添加商品的，现在改成只能由一个线程添加商品，这样修改的结果导致添加商品的整体效率降低了。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由此，综合考虑了一下各方面因素，这个方案最终被否定了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;7. insert on duplicate key update&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实，在mysql中存在这样的语法，即：&lt;code&gt;insert on duplicate key update&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在添加数据时，mysql发现数据不存在，则直接&lt;code&gt;insert&lt;/code&gt;。如果发现数据已经存在了，则做&lt;code&gt;update&lt;/code&gt;操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过要求表中存在&lt;code&gt;唯一索引&lt;/code&gt;或&lt;code&gt;PRIMARY KEY&lt;/code&gt;，这样当这两个值相同时，才会触发更新操作，否则是插入。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在的问题是PRIMARY KEY是商品表的主键，是根据&lt;code&gt;雪花算法&lt;/code&gt;提前生成的，不可能产生重复的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但由于商品表有逻辑删除功能，导致唯一索引在商品表中创建不了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由此，insert on duplicate key update这套方案，暂时也没法用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，insert on duplicate key update在高并发的情况下，可能会产生&lt;code&gt;死锁&lt;/code&gt;问题，需要特别注意一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;感兴趣的小伙伴，也可以找我私聊。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实insert on duplicate key update的实战，我在另一篇文章《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==&amp;amp;mid=2247490289&amp;amp;idx=1&amp;amp;sn=bc311da9f4a4d3f48ee5dc207bf31a8b&amp;amp;chksm=c0ebc219f79c4b0fc711116723b9df3a5531cda32f0f5d00f065910aa552af6ff03b3f1528fc&amp;amp;token=751314179&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;我用kafka两年踩过的一些非比寻常的坑&lt;/a&gt;》中介绍过的，感兴趣的小伙伴，可以看看。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;8. insert ignore&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在mysql中还存在这样的语法，即：&lt;code&gt;insert ... ignore&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在insert语句执行的过程中：mysql发现如果数据重复了，就忽略，否则就会插入。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它主要是用来忽略，插入重复数据产生的&lt;code&gt;Duplicate entry &#x27;XXX&#x27; for key &#x27;XXXX&#x27;&lt;/code&gt;异常的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过也要求表中存在&lt;code&gt;唯一索引&lt;/code&gt;或&lt;code&gt;PRIMARY KEY&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但由于商品表有逻辑删除功能，导致唯一索引在商品表中创建不了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由此可见，这个方案也不行。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;温馨的提醒一下，使用insert ... ignore也有可能会导致&lt;code&gt;死锁&lt;/code&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;9. 防重表&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前聊过，因为有逻辑删除功能，给商品表加唯一索引，行不通。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后面又说了加分布式锁，或者通过mq单线程异步添加商品，影响创建商品的性能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么，如何解决问题呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们能否换一种思路，加一张&lt;code&gt;防重表&lt;/code&gt;，在防重表中增加商品表的name和model字段作为唯一索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;CREATE&lt;/span&gt; &lt;span&gt;TABLE&lt;/span&gt; &lt;span&gt;`product_unique`&lt;/span&gt; (&lt;br/&gt;  &lt;span&gt;`id`&lt;/span&gt; &lt;span&gt;bigint&lt;/span&gt;(&lt;span&gt;20&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;id&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`name`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;130&lt;/span&gt;) &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;名称&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`model`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;)  &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;规格&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`user_id`&lt;/span&gt; &lt;span&gt;bigint&lt;/span&gt;(&lt;span&gt;20&lt;/span&gt;) &lt;span&gt;unsigned&lt;/span&gt; &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;创建用户id&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`user_name`&lt;/span&gt; &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;30&lt;/span&gt;)  &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;创建用户名称&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;`create_date`&lt;/span&gt; datetime(&lt;span&gt;3&lt;/span&gt;) &lt;span&gt;NOT&lt;/span&gt; &lt;span&gt;NULL&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt;(&lt;span&gt;3&lt;/span&gt;) &lt;span&gt;COMMENT&lt;/span&gt; &lt;span&gt;&#x27;创建时间&#x27;&lt;/span&gt;,&lt;br/&gt;  PRIMARY &lt;span&gt;KEY&lt;/span&gt; (&lt;span&gt;`id`&lt;/span&gt;),&lt;br/&gt;  &lt;span&gt;UNIQUE&lt;/span&gt; &lt;span&gt;KEY&lt;/span&gt; &lt;span&gt;`ux_name_model`&lt;/span&gt; (&lt;span&gt;`name`&lt;/span&gt;,&lt;span&gt;`model`&lt;/span&gt;)&lt;br/&gt;) &lt;span&gt;ENGINE&lt;/span&gt;=&lt;span&gt;InnoDB&lt;/span&gt; &lt;span&gt;DEFAULT&lt;/span&gt; &lt;span&gt;CHARSET&lt;/span&gt;=utf8mb4 &lt;span&gt;COMMENT&lt;/span&gt;=&lt;span&gt;&#x27;商品防重表&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中表中的id可以用商品表的id，表中的name和model就是商品表的name和model，不过在这张防重表中增加了这两个字段的唯一索引。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;视野一下子被打开了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在添加商品数据之前，先添加防重表。如果添加成功，则说明可以正常添加商品，如果添加失败，则说明有重复数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;防重表添加失败，后续的业务处理，要根据实际业务需求而定。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果业务上允许添加一批商品时，发现有重复的，直接抛异常，则可以提示用户：系统检测到重复的商品，请刷新页面重试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;  transactionTemplate.execute((status) -&amp;gt; {&lt;br/&gt;      productUniqueMapper.batchInsert(productUniqueList);&lt;br/&gt;      productMapper.batchInsert(productList);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; Boolean.TRUE;&lt;br/&gt;  });&lt;br/&gt;} &lt;span&gt;catch&lt;/span&gt;(DuplicateKeyException e) {&lt;br/&gt;   &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; BusinessException(&lt;span&gt;&quot;系统检测到重复的商品，请刷新页面重试&quot;&lt;/span&gt;);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在批量插入数据时，如果出现了重复数据，捕获&lt;code&gt;DuplicateKeyException&lt;/code&gt;异常，转换成&lt;code&gt;BusinessException&lt;/code&gt;这样运行时的业务异常。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有一种业务场景，要求即使出现了重复的商品，也不抛异常，让业务流程也能够正常走下去。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;  transactionTemplate.execute((status) -&amp;gt; {&lt;br/&gt;      productUniqueMapper.insert(productUnique);&lt;br/&gt;      productMapper.insert(product);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; Boolean.TRUE;&lt;br/&gt;  });&lt;br/&gt;} &lt;span&gt;catch&lt;/span&gt;(DuplicateKeyException e) {&lt;br/&gt;   product = productMapper.query(product);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在插入数据时，如果出现了重复数据，则捕获&lt;code&gt;DuplicateKeyException&lt;/code&gt;，在&lt;code&gt;catch&lt;/code&gt;代码块中再查询一次商品数据，将数据库已有的商品直接返回。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果调用了同步添加商品的接口，这里非常关键的一点，是要返回已有数据的id，业务系统做后续操作，要拿这个id操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然在执行execute之前，还是需要先查一下商品数据是否存在，如果已经存在，则直接返回已有数据，如果不存在，才执行execute方法。这一步千万不能少。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Product oldProduct = productMapper.query(product);&lt;br/&gt;&lt;span&gt;if&lt;/span&gt;(Objects.nonNull(oldProduct)) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; oldProduct;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;  transactionTemplate.execute((status) -&amp;gt; {&lt;br/&gt;      productUniqueMapper.insert(productUnique);&lt;br/&gt;      productMapper.insert(product);&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; Boolean.TRUE;&lt;br/&gt;  });&lt;br/&gt;} &lt;span&gt;catch&lt;/span&gt;(DuplicateKeyException e) {&lt;br/&gt;   product = productMapper.query(product);&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;return&lt;/span&gt; product;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;千万注意：防重表和添加商品的操作必须要在同一个事务中，否则会出问题。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;顺便说一下，还需要对商品的删除功能做特殊处理一下，在逻辑删除商品表的同时，要物理删除防重表。用商品表id作为查询条件即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说实话，解决重复数据问题的方案挺多的，没有最好的方案，只有最适合业务场景的，最优的方案。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此外，如果你对重复数据衍生出的幂等性问题感兴趣的话，可以看看我的另一篇文章《&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==&amp;amp;mid=2247490307&amp;amp;idx=1&amp;amp;sn=b9eeb427c33cb171da6c3f11243a88f4&amp;amp;chksm=c0ebc3ebf79c4afd0d5a1851a975534b672d86c531d28c5933013140173e794f5f53e78a6765&amp;amp;token=751314179&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;高并发下如何保证接口的幂等性？&lt;/a&gt;》，里面有非常详细的介绍。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>40ff79f8597480800bba9e5f25c0ccec</guid>
<title>收藏！14 种异常检测方法总结</title>
<link>https://toutiao.io/k/z3twv9y</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;section class=&quot;mp_profile_iframe_wrp&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4OTQ1MTA4OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYJ1LbaTxqd4VPOibfZ1tf0fXDUqFOLlPcRPvv4W4Cro4YnhRx2Xib5MId5rECtVMBkmvJk8nSNnsekw/0?wx_fmt=png&quot; data-nickname=&quot;数据挖掘工程师&quot; data-alias=&quot;DataMinings&quot; data-signature=&quot;数万名数据挖掘爱好者的聚集地，致力于前沿数据技术研究。公众号以数据为核心，分享大数据、数据分析、机器学习、深度学习等干货，想学数据我等你来。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;作者丨Ai，&lt;/span&gt;&lt;span&gt;来源丨宅码&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;编辑丨极市平台&lt;/span&gt;&lt;/section&gt;&lt;section&gt;本文收集整理了公开网络上一些常见的异常检测方法（附资料来源和代码）。不足之处，还望批评指正。&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5605095541401274&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRr8MVwNibaNC3WXBCMvrSuo2v2LQnHfwrkv8aRjQrTTKMzDUNVVu9ryHQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;942&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;一、基于分布的方法&lt;/strong&gt;&lt;/h1&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1. 3sigma&lt;/h3&gt;&lt;section&gt;基于正态分布，3sigma准则认为超过3sigma的数据为异常点。&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7266666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRrzIOTCM2ktiaOaicreZApT30VvbJicBhdBolGqMe9ib0Tb4ibibMonicL1j0Hw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;450&quot;/&gt;&lt;figcaption&gt;图1: 3sigma&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;three_sigma&lt;/span&gt;&lt;span&gt;(s)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    mu, std = np.mean(s), np.std(s)&lt;br/&gt;    lower, upper = mu&lt;span&gt;-3&lt;/span&gt;*std, mu+&lt;span&gt;3&lt;/span&gt;*std&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; lower, upper&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2. Z-score&lt;/h3&gt;&lt;section&gt;Z-score为标准分数，测量数据点和平均值的距离，若A与平均值相差2个标准差，Z-score为2。当把Z-score=3作为阈值去剔除异常点时，便相当于3sigma。&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;z_score&lt;/span&gt;&lt;span&gt;(s)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;  z_score = (s - np.mean(s)) / np.std(s)&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; z_score&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3. boxplot&lt;/h3&gt;&lt;section&gt;箱线图时基于四分位距（IQR）找异常点的。&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRrIdDVWNicrt7elFkhWkjibYiaNICyTXIdAj2q7xq52q4dFUVCb5HXcNtLQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;图2: boxplot&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;boxplot&lt;/span&gt;&lt;span&gt;(s)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    q1, q3 = s.quantile(&lt;span&gt;.25&lt;/span&gt;), s.quantile(&lt;span&gt;.75&lt;/span&gt;)&lt;br/&gt;    iqr = q3 - q1&lt;br/&gt;    lower, upper = q1 - &lt;span&gt;1.5&lt;/span&gt;*iqr, q3 + &lt;span&gt;1.5&lt;/span&gt;*iqr&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; lower, upper&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4. Grubbs假设检验&lt;/h3&gt;&lt;section&gt;&lt;strong&gt;资料来源：&lt;/strong&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;[1] 时序预测竞赛之异常检测算法综述 - 鱼遇雨欲语与余，知乎：https://zhuanlan.zhihu.com/p/336944097&lt;/section&gt;&lt;section&gt;[2] 剔除异常值栅格计算器_数据分析师所需的统计学：异常检测 - weixin_39974030，CSDN：https://blog.csdn.net/weixin_39974030/article/details/112569610&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;Grubbs’Test为一种假设检验的方法，常被用来检验服从正态分布的单变量数据集（univariate data set）Y中的单个异常值。若有异常值，则其必为数据集中的最大值或最小值。原假设与备择假设如下：&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;H0: 数据集中没有异常值&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;H1: 数据集中有一个异常值&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;使用Grubbs测试需要总体是正态分布的。算法流程：&lt;/section&gt;&lt;section&gt;1. 样本从小到大排序&lt;/section&gt;&lt;section&gt;2. 求样本的mean和dev&lt;/section&gt;&lt;section&gt;3. 计算min/max与mean的差距，更大的那个为可疑值&lt;/section&gt;&lt;section&gt;4. 求可疑值的z-score (standard score)，如果大于Grubbs临界值，那么就是outlier&lt;/section&gt;&lt;section&gt;Grubbs临界值可以查表得到，它由两个值决定：检出水平α（越严格越小），样本数量n，排除outlier，对剩余序列循环做 1-4 步骤 [1]。详细计算样例可以参考。&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;from outliers &lt;span&gt;import&lt;/span&gt; smirnov_grubbs as grubbs&lt;br/&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(grubbs.test([&lt;span&gt;8&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;], alpha=&lt;span&gt;0.05&lt;/span&gt;))&lt;/span&gt;&lt;br/&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(grubbs.min_test_outliers([&lt;span&gt;8&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;], alpha=&lt;span&gt;0.05&lt;/span&gt;))&lt;/span&gt;&lt;br/&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(grubbs.max_test_outliers([&lt;span&gt;8&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;], alpha=&lt;span&gt;0.05&lt;/span&gt;))&lt;/span&gt;&lt;br/&gt;&lt;span&gt;print&lt;/span&gt;&lt;span&gt;(grubbs.max_test_indices([&lt;span&gt;8&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;, &lt;span&gt;10&lt;/span&gt;, &lt;span&gt;50&lt;/span&gt;, &lt;span&gt;9&lt;/span&gt;], alpha=&lt;span&gt;0.05&lt;/span&gt;))&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;局限：&lt;/section&gt;&lt;section&gt;1、只能检测单维度数据&lt;/section&gt;&lt;section&gt;2、无法精确的输出正常区间&lt;/section&gt;&lt;section&gt;3、它的判断机制是“逐一剔除”，所以每个异常值都要单独计算整个步骤，数据量大吃不消。&lt;/section&gt;&lt;section&gt;4、需假定数据服从正态分布或近正态分布&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;二、基于距离的方法&lt;/strong&gt;&lt;/h1&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1. KNN&lt;/h3&gt;&lt;section&gt;&lt;strong&gt;资料来源：&lt;/strong&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;[3] 异常检测算法之(KNN)-K Nearest Neighbors - 小伍哥聊风控，知乎：https://zhuanlan.zhihu.com/p/501691799&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;依次计算每个样本点与它最近的K个样本的平均距离，再利用计算的距离与阈值进行比较，如果大于阈值，则认为是异常点。优点是不需要假设数据的分布，缺点是仅可以找出全局异常点，无法找到局部异常点。&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;from&lt;/span&gt; pyod.models.knn &lt;span&gt;import&lt;/span&gt; KNN&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 初始化检测器clf&lt;/span&gt;&lt;br/&gt;clf = KNN( method=&lt;span&gt;&#x27;mean&#x27;&lt;/span&gt;, n_neighbors=&lt;span&gt;3&lt;/span&gt;, )&lt;br/&gt;clf.fit(X_train)&lt;br/&gt;&lt;span&gt;# 返回训练数据上的分类标签 (0: 正常值, 1: 异常值)&lt;/span&gt;&lt;br/&gt;y_train_pred = clf.labels_&lt;br/&gt;&lt;span&gt;# 返回训练数据上的异常值 (分值越大越异常)&lt;/span&gt;&lt;br/&gt;y_train_scores = clf.decision_scores_&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;三、基于密度的方法&lt;/strong&gt;&lt;/h1&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1. Local Outlier Factor (LOF)&lt;/h3&gt;&lt;section&gt;&lt;strong&gt;资料来源：&lt;/strong&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;[4] 一文读懂异常检测 LOF 算法（Python代码）- 东哥起飞，知乎：https://zhuanlan.zhihu.com/p/448276009&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;LOF是基于密度的经典算法（Breuning et. al. 2000），通过给每个数据点都分配一个依赖于邻域密度的离群因子 LOF，进而判断该数据点是否为离群点。它的好处在于可以量化每个数据点的异常程度（outlierness）。&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8285163776493256&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRrUwP6gWWpgtu6qVc7RgCr8MHK8ic76N76u8y4OnWSyib3iaRrx668kKNyw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;519&quot;/&gt;&lt;figcaption&gt;图3：LOF异常检测&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;数据点 &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 503 636&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 的局部相对密度（局部异常因子）为点 &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 503 636&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 邻域内点的平均局部可达密度跟数据 点 &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 503 636&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 的局部可达密度的比值, 即：&lt;/section&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;L O F_{k}(P)=\frac{\sum_{O \ni N_{k}(P)} \frac{\operatorname{lrd}(O)}{\operatorname{lr}(P)}}{\left|N_{k}(P)\right|}=\frac{\sum_{O \ni N_{k}(P)} \operatorname{lrd}(O)}{\left|N_{k}(P)\right|} / \operatorname{lrd}(P)&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uOO7ZNXJaZgAnibLlfn4b5p0G95Rwubt58WYEPB7JEb3U36AWicftsQDSzASNibnpPTvb/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;数据点P的&lt;strong&gt;局部可达密度&lt;/strong&gt;=P最近邻的平均可达距离的倒数。距离越大，密度越小。&lt;/section&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\operatorname{lrd}_{k}(P)=\frac{1}{\frac{\sum_{O \ni N_{k}(P)} \text { reach }_{d} i s t_{k}(P, O)}{\left|N_{k}(P)\right|}}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uOwyo6g1ebFo5GN7FDyPdSqHrdpKJh7kXhv6rTuowbYcS73DuYiaypxzy2bFGpvM9TT/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;点P到点O的&lt;strong&gt;第k可达距离&lt;/strong&gt;=max(点O的k近邻距离，点P到点O的距离)。&lt;/section&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\operatorname{reach}_{-} \operatorname{dist}_{k}(O, P)=\max \left\{d_{k}(O), d(O, P)\right\}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uObRY1zvCG5qTlmt8Lbuus3SVPyqDgicrdSkPEiaiaw3go0V4oiaEtwthcsUYvyP1L6nME/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6850533807829181&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRrkWFrtAuibez5MkrnN1gfQzzIVQmRRukP5lyQXPJmlZicUw7zO8KFCkMw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;562&quot;/&gt;&lt;figcaption&gt;图4：可达距离&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;点O的k近邻距离=第k个最近的点跟点O之间的距离。&lt;/section&gt;&lt;section&gt;整体来说，LOF算法流程如下：&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;对于每个数据点，计算它与其他所有点的距离，并按从近到远排序；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;对于每个数据点，找到它的K-Nearest-Neighbor，计算LOF得分。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;from&lt;/span&gt; sklearn.neighbors &lt;span&gt;import&lt;/span&gt; LocalOutlierFactor &lt;span&gt;as&lt;/span&gt; LOF&lt;br/&gt;&lt;br/&gt;X = [[&lt;span&gt;-1.1&lt;/span&gt;], [&lt;span&gt;0.2&lt;/span&gt;], [&lt;span&gt;100.1&lt;/span&gt;], [&lt;span&gt;0.3&lt;/span&gt;]]&lt;br/&gt;clf = LOF(n_neighbors=&lt;span&gt;2&lt;/span&gt;)&lt;br/&gt;res = clf.fit_predict(X)&lt;br/&gt;print(res)&lt;br/&gt;print(clf.negative_outlier_factor_)&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2. Connectivity-Based Outlier Factor (COF)&lt;/h3&gt;&lt;section&gt;&lt;strong&gt;资料来源：&lt;/strong&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;[5] Nowak-Brzezińska, A., &amp;amp; Horyń, C. (2020). Outliers in rules-the comparision of LOF, COF and KMEANS algorithms. *Procedia Computer Science*, *176*, 1420-1429.&lt;/section&gt;&lt;section&gt;[6] 機器學習_學習筆記系列(98)：基於連接異常因子分析(Connectivity-Based Outlier Factor)  - 劉智皓 (Chih-Hao Liu)&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;COF是LOF的变种，相比于LOF，COF可以处理低密度下的异常值，COF的局部密度是基于平均链式距离计算得到。在一开始的时候我们一样会先计算出每个点的k-nearest neighbor。而接下来我们会计算每个点的Set based nearest Path，如下图：&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4380165289256198&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRr705VOAiavoQgic0YKZa5LkL4zX5vGbGeaZkUMdvrcZeRmo4rJSzN0brA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;605&quot;/&gt;&lt;figcaption&gt;图5：Set based nearest Path&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;假使我们今天我们的k=5，所以F的neighbor为B、C、D、E、G。而对于F离他最近的点为E，所以SBN Path的第一个元素是F、第二个是E。离E最近的点为D所以第三个元素为D，接下来离D最近的点为C和G，所以第四和五个元素为C和G，最后离C最近的点为B，第六个元素为B。所以整个流程下来，F的SBN Path为{F, E, D, C, G, C, B}。而对于SBN Path所对应的距离e={e1, e2, e3,…,ek}，依照上面的例子e={3,2,1,1,1}。&lt;/section&gt;&lt;section&gt;所以我们可以说假使我们想计算p点的SBN Path，我们只要直接计算p点和其neighbor所有点所构成的graph的minimum spanning tree，之后我们再以p点为起点执行shortest path算法，就可以得到我们的SBN Path。&lt;/section&gt;&lt;section&gt;而接下来我们有了SBN Path我们就会接着计算，p点的链式距离：&lt;/section&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\text { ac_ } \operatorname{dist}(p)=\sum_{i=1}^{k} \frac{2(k+1-i)}{k(k+1)} \operatorname{dist}\left(e_{i}\right)&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uOlbfsWc9oaqTicajNyUibgVCDZ0vhFDQSFia28qOaJmb42cjzh3mkeX7qhVAzvA9lBe1/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;有了ac_distance后，我们就可以计算COF：&lt;/section&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\operatorname{COF}(p)=\frac{a c_{-} \operatorname{dist}(p)}{\frac{1}{k} \sum_{o \in N_{k}(p)} a c_{-} \operatorname{dist}(o)}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uOc5aDOOtDOcqJNHic5Nmu4aprianYCIicRWF5QV5MR15OBClSBHwX6FeP0kicvqMLH5yt/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;# https://zhuanlan.zhihu.com/p/362358580&lt;/span&gt;&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; pyod.models.cof &lt;span&gt;import&lt;/span&gt; COF&lt;br/&gt;cof = COF(contamination = &lt;span&gt;0.06&lt;/span&gt;,  &lt;span&gt;## 异常值所占的比例&lt;/span&gt;&lt;br/&gt;          n_neighbors = &lt;span&gt;20&lt;/span&gt;,      &lt;span&gt;## 近邻数量&lt;/span&gt;&lt;br/&gt;        )&lt;br/&gt;cof_label = cof.fit_predict(iris.values) &lt;span&gt;# 鸢尾花数据&lt;/span&gt;&lt;br/&gt;print(&lt;span&gt;&quot;检测出的异常值数量为:&quot;&lt;/span&gt;,np.sum(cof_label == &lt;span&gt;1&lt;/span&gt;))&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3. Stochastic Outlier Selection (SOS)&lt;/h3&gt;&lt;section&gt;&lt;strong&gt;资料来源：&lt;/strong&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;[7] 异常检测之SOS算法 - 呼广跃，知乎：https://zhuanlan.zhihu.com/p/34438518&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;将特征矩阵（feature martrix）或者相异度矩阵（dissimilarity matrix）输入给SOS算法，会返回一个异常概率值向量（每个点对应一个）。SOS的思想是：当一个点和其它所有点的关联度（affinity）都很小的时候，它就是一个异常点。&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5656660412757973&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRrY402Y6IUnU5Wrpo4qibvX0fsQtBsKY7ybBr1NMQEOZUmZI9TeWHicCCg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1066&quot;/&gt;&lt;figcaption&gt;图6：SOS计算流程&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;SOS的流程：&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;计算相异度矩阵D；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;计算关联度矩阵A；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;计算关联概率矩阵B；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;算出异常概率向量。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;相异度矩阵D是各样本两两之间的度量距离, 比如欧式距离或汉明距离等。关联度矩阵反映的是 度量距离方差, 如图7, 点 &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 975.6 607.6&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(572, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;35&quot; d=&quot;M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 的密度最大, 方差最小; &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 975.6 607.6&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(572, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;36&quot; d=&quot;M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 的密度最小, 方差最大。而关联概率 矩阵 &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 708 683&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;42&quot; d=&quot;M131 622Q124 629 120 631T104 634T61 637H28V683H229H267H346Q423 683 459 678T531 651Q574 627 599 590T624 512Q624 461 583 419T476 360L466 357Q539 348 595 302T651 187Q651 119 600 67T469 3Q456 1 242 0H28V46H61Q103 47 112 49T131 61V622ZM511 513Q511 560 485 594T416 636Q415 636 403 636T371 636T333 637Q266 637 251 636T232 628Q229 624 229 499V374H312L396 375L406 377Q410 378 417 380T442 393T474 417T499 456T511 513ZM537 188Q537 239 509 282T430 336L329 337H229V200V116Q229 57 234 52Q240 47 334 47H383Q425 47 443 53Q486 67 511 104T537 188Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; (binding probability matrix)就是把关联矩阵(affinity matrix)按行归一化得到的, 如图 8 所 示。&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7275280898876404&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRriapOYjOZiaDgOd9GMoXSPxviahpKdBzXAbDSTofQdQ0HUvQ33g4bZk6sw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;356&quot;/&gt;&lt;figcaption&gt;图7：关联度矩阵中密度可视化&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2597402597402597&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRrTa739sS4geyxwC8o4WEUq8mvwvEC4tP8Pwlqn6vE5obpGscKgNF5bQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;539&quot;/&gt;&lt;figcaption&gt;图8：关联概率矩阵&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;得到了binding probability matrix，每个点的异常概率值就用如下的公式计算，当一个点和其它所有点的关联度（affinity）都很小的时候，它就是一个异常点。&lt;/section&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;p\left(\mathrm{x}_{i} \in \mathcal{C}_{0}\right)=\prod_{j \neq i}\left(1-b_{j i}\right)&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -950 10382.3 2325.3&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mrow&quot; transform=&quot;translate(503, 0)&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(389, 0)&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(528, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;69&quot; d=&quot;M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1488.7, 0)&quot;&gt;&lt;path data-c=&quot;2208&quot; d=&quot;M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(2433.5, 0)&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;43&quot; d=&quot;M201 -25Q167 -25 136 -14T75 23T29 94T12 202Q12 290 50 394T161 574Q227 642 303 673T433 704Q435 705 457 705Q533 701 533 640Q533 606 507 548T464 474Q431 444 396 444Q381 444 381 453Q381 459 388 473T407 513T428 563Q433 580 433 594Q433 636 381 636Q314 636 260 594T175 489T128 363T112 247Q112 157 153 101T273 44Q347 44 398 121Q413 144 437 157T481 171Q496 171 496 160Q496 150 476 123Q426 56 350 16T201 -25Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(527, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;30&quot; d=&quot;M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3364.1, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4533.8, 0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;munder&quot; transform=&quot;translate(5589.6, 0)&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;220F&quot; d=&quot;M220 812Q220 813 218 819T214 829T208 840T199 853T185 866T166 878T140 887T107 893T66 896H56V950H1221V896H1211Q1080 896 1058 812V-311Q1076 -396 1211 -396H1221V-450H725V-396H735Q864 -396 888 -314Q889 -312 889 -311V896H388V292L389 -311Q405 -396 542 -396H552V-450H56V-396H66Q195 -396 219 -314Q220 -312 220 -311V812Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(96.3, -1123.3) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6A&quot; d=&quot;M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(412, 0)&quot;&gt;&lt;path data-c=&quot;2260&quot; d=&quot;M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1190, 0)&quot;&gt;&lt;path data-c=&quot;69&quot; d=&quot;M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mrow&quot; transform=&quot;translate(6867.6, 0)&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(389, 0)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1111.2, 0)&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(2111.4, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;62&quot; d=&quot;M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(429, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6A&quot; d=&quot;M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(412, 0)&quot;&gt;&lt;path data-c=&quot;69&quot; d=&quot;M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3125.7, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;# Ref: https://github.com/jeroenjanssens/scikit-sos&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; pandas &lt;span&gt;as&lt;/span&gt; pd&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; sksos &lt;span&gt;import&lt;/span&gt; SOS&lt;br/&gt;iris = pd.read_csv(&lt;span&gt;&quot;http://bit.ly/iris-csv&quot;&lt;/span&gt;)&lt;br/&gt;X = iris.drop(&lt;span&gt;&quot;Name&quot;&lt;/span&gt;, axis=&lt;span&gt;1&lt;/span&gt;).values&lt;br/&gt;detector = SOS()&lt;br/&gt;iris[&lt;span&gt;&quot;score&quot;&lt;/span&gt;] = detector.predict(X)&lt;br/&gt;iris.sort_values(&lt;span&gt;&quot;score&quot;&lt;/span&gt;, ascending=&lt;span&gt;False&lt;/span&gt;).head(&lt;span&gt;10&lt;/span&gt;)&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;四、基于聚类的方法&lt;/strong&gt;&lt;/h1&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1. DBSCAN&lt;/h3&gt;&lt;section&gt;DBSCAN算法（Density-Based Spatial Clustering of Applications with Noise）的输入和输出如下，对于无法形成聚类簇的孤立点，即为异常点（噪声点）。&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;输入：数据集，邻域半径Eps，邻域中数据对象数目阈值MinPts;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;输出：密度联通簇。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7391742195367573&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRrb1DRdYwF0icgK1Uw4BpxpTVDdpFu1jZibQu2PPweuicC5ibdicYotCpHhPQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;993&quot;/&gt;&lt;figcaption&gt;图9：DBSCAN&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;处理流程如下：&lt;/strong&gt;&lt;/section&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;从数据集中任意选取一个数据对象点p；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果对于参数Eps和MinPts，所选取的数据对象点p为核心点，则找出所有从p密度可达的数据对象点，形成一个簇；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;如果选取的数据对象点 p 是边缘点，选取另一个数据对象点；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;重复以上2、3步，直到所有点被处理。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;# Ref: https://zhuanlan.zhihu.com/p/515268801&lt;/span&gt;&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; sklearn.cluster &lt;span&gt;import&lt;/span&gt; DBSCAN&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; numpy &lt;span&gt;as&lt;/span&gt; np&lt;br/&gt;X = np.array([[&lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;], [&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;], [&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;],&lt;br/&gt;              [&lt;span&gt;8&lt;/span&gt;, &lt;span&gt;7&lt;/span&gt;], [&lt;span&gt;8&lt;/span&gt;, &lt;span&gt;8&lt;/span&gt;], [&lt;span&gt;25&lt;/span&gt;, &lt;span&gt;80&lt;/span&gt;]])&lt;br/&gt;clustering = DBSCAN(eps=&lt;span&gt;3&lt;/span&gt;, min_samples=&lt;span&gt;2&lt;/span&gt;).fit(X)&lt;br/&gt;&lt;br/&gt;clustering.labels_&lt;br/&gt;array([ &lt;span&gt;0&lt;/span&gt;,  &lt;span&gt;0&lt;/span&gt;,  &lt;span&gt;0&lt;/span&gt;,  &lt;span&gt;1&lt;/span&gt;,  &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;-1&lt;/span&gt;])&lt;br/&gt;&lt;span&gt;# 0，,0，,0：表示前三个样本被分为了一个群&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 1, 1：中间两个被分为一个群&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# -1：最后一个为异常点，不属于任何一个群&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;五、基于树的方法&lt;/strong&gt;&lt;/h1&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1. Isolation Forest (iForest)&lt;/h3&gt;&lt;section&gt;&lt;strong&gt;资料来源：&lt;/strong&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;[8] 异常检测算法 -- 孤立森林（Isolation Forest）剖析 - 风控大鱼，知乎：https://zhuanlan.zhihu.com/p/74508141&lt;/section&gt;&lt;section&gt;[9] 孤立森林(isolation Forest)-一个通过瞎几把乱分进行异常检测的算法 - 小伍哥聊风控，知乎：https://zhuanlan.zhihu.com/p/484495545&lt;/section&gt;&lt;section&gt;[10] 孤立森林阅读 - Mark_Aussie，博文：https://blog.csdn.net/MarkAustralia/article/details/120181899&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;孤立森林中的 “孤立” (isolation) 指的是 “把异常点从所有样本中孤立出来”，论文中的原文是 “separating an instance from the rest of the instances”。&lt;/section&gt;&lt;section&gt;我们用一个随机超平面对一个数据空间进行切割，切一次可以生成两个子空间。接下来，我们再继续随机选取超平面，来切割第一步得到的两个子空间，以此循环下去，直到每子空间里面只包含一个数据点为止。我们可以发现，那些密度很高的簇要被切很多次才会停止切割，即每个点都单独存在于一个子空间内，但那些分布稀疏的点，大都很早就停到一个子空间内了。所以，整个孤立森林的算法思想：异常样本更容易快速落入叶子结点或者说，异常样本在决策树上，距离根节点更近。&lt;/section&gt;&lt;section&gt;随机选择m个特征，通过在所选特征的最大值和最小值之间随机选择一个值来分割数据点。观察值的划分递归地重复，直到所有的观察值被孤立。&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.087037037037037&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRrAwgt1KVTWIM7zH3A3FIdLdE1WYpeUiaogUpCTvDM1P2VbJpwonL1HicA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;图10：孤立森林&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;获得 t 个孤立树后，单棵树的训练就结束了。接下来就可以用生成的孤立树来评估测试数据了，即计算异常分数 s。对于每个样本 x，需要对其综合计算每棵树的结果，通过下面的公式计算异常得分：&lt;/section&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;s(x, n)=2^{-\frac{E(h(x))}{c(n)}}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -1237.8 7342.5 1487.8&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;73&quot; d=&quot;M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(469, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(858, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1430, 0)&quot;&gt;&lt;path data-c=&quot;2C&quot; d=&quot;M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1874.7, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2474.7, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3141.4, 0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(4197.2, 0)&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(500, 497.4) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mfrac&quot; transform=&quot;translate(778, 0)&quot;&gt;&lt;g data-mml-node=&quot;mrow&quot; transform=&quot;translate(220, 516.8) scale(0.707)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;45&quot; d=&quot;M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(764, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1153, 0)&quot;&gt;&lt;path data-c=&quot;68&quot; d=&quot;M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1729, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2118, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2690, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3079, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mrow&quot; transform=&quot;translate(805.8, -370.3) scale(0.707)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;63&quot; d=&quot;M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(433, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(822, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1422, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;rect x=&quot;120&quot; y=&quot;220&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;h(x)：为样本在iTree上的PathLength；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;E(h(x))：为样本在t棵iTree的PathLength的均值；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 1811 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;63&quot; d=&quot;M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(433, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(822, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1422, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; : 为 &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 600 453&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 个样本构建一个二叉搜索树BST中的末成功搜索平均路径长度 (均值h(x)对外部节点终端的估计等同于BST中的末成功搜索）。&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 5779 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;45&quot; d=&quot;M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(764, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1153, 0)&quot;&gt;&lt;path data-c=&quot;68&quot; d=&quot;M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1729, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2118, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2690, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3079, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot; transform=&quot;translate(3468, 0)&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;2F&quot; d=&quot;M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(3968, 0)&quot;&gt;&lt;path data-c=&quot;63&quot; d=&quot;M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4401, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(4790, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(5390, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 是对样本x的路径长度 &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 1862 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;68&quot; d=&quot;M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(556, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot; transform=&quot;translate(945, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1473, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 进行标准化处理。&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 3806.4 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;48&quot; d=&quot;M128 622Q121 629 117 631T101 634T58 637H25V683H36Q57 680 180 680Q315 680 324 683H335V637H302Q262 636 251 634T233 622L232 500V378H517V622Q510 629 506 631T490 634T447 637H414V683H425Q446 680 569 680Q704 680 713 683H724V637H691Q651 636 640 634T622 622V61Q628 51 639 49T691 46H724V0H713Q692 3 569 3Q434 3 425 0H414V46H447Q489 47 498 49T517 61V332H232V197L233 61Q239 51 250 49T302 46H335V0H324Q303 3 180 3Q45 3 36 0H25V46H58Q100 47 109 49T128 61V622Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(750, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot; transform=&quot;translate(1139, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1917.2, 0)&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(2917.4, 0)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3417.4, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 是调和数, 可使用 &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 10890.9 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6C&quot; d=&quot;M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z&quot;/&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z&quot; transform=&quot;translate(278, 0)&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(834, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot; transform=&quot;translate(1223, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2001.2, 0)&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(3001.4, 0)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3501.4, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4112.7, 0)&quot;&gt;&lt;path data-c=&quot;2B&quot; d=&quot;M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(5112.9, 0)&quot;&gt;&lt;path data-c=&quot;30&quot; d=&quot;M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z&quot;/&gt;&lt;path data-c=&quot;2E&quot; d=&quot;M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z&quot; transform=&quot;translate(500, 0)&quot;/&gt;&lt;path data-c=&quot;35&quot; d=&quot;M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z&quot; transform=&quot;translate(778, 0)&quot;/&gt;&lt;path data-c=&quot;37&quot; d=&quot;M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z&quot; transform=&quot;translate(1278, 0)&quot;/&gt;&lt;path data-c=&quot;37&quot; d=&quot;M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z&quot; transform=&quot;translate(1778, 0)&quot;/&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot; transform=&quot;translate(2278, 0)&quot;/&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot; transform=&quot;translate(2778, 0)&quot;/&gt;&lt;path data-c=&quot;35&quot; d=&quot;M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z&quot; transform=&quot;translate(3278, 0)&quot;/&gt;&lt;path data-c=&quot;36&quot; d=&quot;M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z&quot; transform=&quot;translate(3778, 0)&quot;/&gt;&lt;path data-c=&quot;36&quot; d=&quot;M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z&quot; transform=&quot;translate(4278, 0)&quot;/&gt;&lt;path data-c=&quot;34&quot; d=&quot;M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z&quot; transform=&quot;translate(4778, 0)&quot;/&gt;&lt;path data-c=&quot;39&quot; d=&quot;M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z&quot; transform=&quot;translate(5278, 0)&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; (欧拉常数) 估算。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\begin{aligned}&amp;#10;c(n) &amp;amp;=2 H(n-1)-\frac{2(n-1)}{n} \\&amp;#10;&amp;amp;=2[\ln (n-1)+0.5772156649]-\frac{2(n-1)}{n}&amp;#10;\end{aligned}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uOGpwPdssHMaGEPNNzT9TN8xGBAu4JL1Uzqtm9CuVy3ROlogF951mLB96SqztBk6dc/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;指数部分值域为(−∞,0)，因此s值域为(0,1)。当PathLength越小，s越接近1，此时样本为异常值的概率越大。&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;# Ref：https://zhuanlan.zhihu.com/p/484495545&lt;/span&gt;&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; sklearn.datasets &lt;span&gt;import&lt;/span&gt; load_iris &lt;br/&gt;&lt;span&gt;from&lt;/span&gt; sklearn.ensemble &lt;span&gt;import&lt;/span&gt; IsolationForest&lt;br/&gt;&lt;br/&gt;data = load_iris(as_frame=&lt;span&gt;True&lt;/span&gt;) &lt;br/&gt;X,y = data.data,data.target &lt;br/&gt;df = data.frame &lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 模型训练&lt;/span&gt;&lt;br/&gt;iforest = IsolationForest(n_estimators=&lt;span&gt;100&lt;/span&gt;, max_samples=&lt;span&gt;&#x27;auto&#x27;&lt;/span&gt;,  &lt;br/&gt;                          contamination=&lt;span&gt;0.05&lt;/span&gt;, max_features=&lt;span&gt;4&lt;/span&gt;,  &lt;br/&gt;                          bootstrap=&lt;span&gt;False&lt;/span&gt;, n_jobs=&lt;span&gt;-1&lt;/span&gt;, random_state=&lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;#  fit_predict 函数 训练和预测一起 可以得到模型是否异常的判断，-1为异常，1为正常&lt;/span&gt;&lt;br/&gt;df[&lt;span&gt;&#x27;label&#x27;&lt;/span&gt;] = iforest.fit_predict(X) &lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 预测 decision_function 可以得出 异常评分&lt;/span&gt;&lt;br/&gt;df[&lt;span&gt;&#x27;scores&#x27;&lt;/span&gt;] = iforest.decision_function(X)&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;六、基于降维的方法&lt;/strong&gt;&lt;/h1&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1. Principal Component Analysis (PCA)&lt;/h3&gt;&lt;section&gt;&lt;strong&gt;资料来源：&lt;/strong&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;[11] 机器学习-异常检测算法（三）：Principal Component Analysis - 刘腾飞，知乎：https://zhuanlan.zhihu.com/p/29091645&lt;/section&gt;&lt;section&gt;[12] Anomaly Detection异常检测--PCA算法的实现 - CC思SS，知乎：https://zhuanlan.zhihu.com/p/48110105&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;PCA在异常检测方面的做法，大体有两种思路：&lt;/section&gt;&lt;section&gt;(1) 将数据映射到低维特征空间，然后在特征空间不同维度上查看每个数据点跟其它数据的偏差；&lt;/section&gt;&lt;section&gt;(2) 将数据映射到低维特征空间，然后由低维特征空间重新映射回原空间，尝试用低维特征重构原始数据，看重构误差的大小。&lt;/section&gt;&lt;section&gt;PCA在做特征值分解，会得到：&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;特征向量：反应了原始数据方差变化程度的不同方向；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;特征值：数据在对应方向上的方差大小。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;所以，最大特征值对应的特征向量为数据方差最大的方向，最小特征值对应的特征向量为数据方差最小的方向。原始数据在不同方向上的方差变化反应了其内在特点。如果单个数据样本跟整体数据样本表现出的特点不太一致，比如在某些方向上跟其它数据样本偏离较大，可能就表示该数据样本是一个异常点。&lt;/section&gt;&lt;section&gt;在前面提到第一种做法中，样本&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -442 866 599.8&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(572, -150) scale(0.707)&quot;&gt;&lt;path data-c=&quot;69&quot; d=&quot;M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;的异常分数为该样本在所有方向上的偏离程度：&lt;/section&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\operatorname{Score}\left(\mathbf{x}_{\mathbf{i}}\right)=\sum_{j=1}^{n} d_{i j}=\sum_{j=1}^{n} \frac{\left(\mathbf{x}_{\mathbf{i}}^{\mathbf{T}} \cdot \mathbf{e}_{\mathbf{j}}\right)^{\mathbf{2}}}{\lambda_{j}}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uOWWnIhPTtyQVMRgt6okWFDTgqkOOzPMRPOCGxQjI68CrBaH8x3Ll4hsMGEZ8QEoBib/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;其中, &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -1047.5 4002.9 1397&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msup&quot;&gt;&lt;g data-mml-node=&quot;mrow&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M152 251Q152 646 388 850H416Q422 844 422 841Q422 837 403 816T357 753T302 649T255 482T236 250Q236 124 255 19T301 -147T356 -251T403 -315T422 -340Q422 -343 416 -349H388Q359 -325 332 -296T271 -213T212 -97T170 56T152 251Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msubsup&quot; transform=&quot;translate(458, 0)&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(607, 363) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;54&quot; d=&quot;M36 443Q37 448 46 558T55 671V677H666V671Q667 666 676 556T685 443V437H645V443Q645 445 642 478T631 544T610 593Q593 614 555 625Q534 630 478 630H451H443Q417 630 414 618Q413 616 413 339V63Q420 53 439 50T528 46H558V0H545L361 3Q186 1 177 0H164V46H194Q264 46 283 49T309 63V339V550Q309 620 304 625T271 630H244H224Q154 630 119 601Q101 585 93 554T81 486T76 443V437H36V443Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(607, -290.1) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;69&quot; d=&quot;M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1847.8, 0)&quot;&gt;&lt;path data-c=&quot;22C5&quot; d=&quot;M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(2348, 0)&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;65&quot; d=&quot;M32 225Q32 332 102 392T272 452H283Q382 452 436 401Q494 343 494 243Q494 226 486 222T440 217Q431 217 394 217T327 218H175V209Q175 177 179 154T196 107T236 69T306 50Q312 49 323 49Q376 49 410 85Q421 99 427 111T434 127T442 133T463 135H468Q494 135 494 117Q494 110 489 97T468 66T431 32T373 5T292 -6Q181 -6 107 55T32 225ZM383 276Q377 346 348 374T280 402Q253 402 230 390T195 357Q179 331 176 279V266H383V276Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(527, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6A&quot; d=&quot;M98 609Q98 637 116 653T160 669Q183 667 200 652T217 609Q217 579 200 564T158 549Q133 549 116 564T98 609ZM28 -163Q58 -168 64 -168Q124 -168 135 -77Q137 -65 137 141T136 353Q132 371 120 377T72 385H52V408Q52 431 54 431L58 432Q62 432 70 432T87 433T108 434T133 436Q151 437 171 438T202 441T214 442H218V184Q217 -36 217 -59T211 -98Q195 -145 153 -175T58 -205Q9 -205 -23 -179T-55 -117Q-55 -94 -40 -79T-2 -64T36 -79T52 -118Q52 -143 28 -163Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3141.4, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M305 251Q305 -145 69 -349H56Q43 -349 39 -347T35 -338Q37 -333 60 -307T108 -239T160 -136T204 27T221 250T204 473T160 636T108 740T60 807T35 839Q35 850 50 850H56H69Q197 743 256 566Q305 425 305 251Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(3599.4, 576.6) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mn&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 为样本在重构空间里离特征向量的距离。若存在样本点偏离各主成分越远, &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 1105.3 988.2&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;64&quot; d=&quot;M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(520, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;69&quot; d=&quot;M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(345, 0)&quot;&gt;&lt;path data-c=&quot;6A&quot; d=&quot;M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 会越大, 意味偏移程度大, 异常分数高。&lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 924.3 988.2&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;3BB&quot; d=&quot;M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(583, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6A&quot; d=&quot;M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 是特征值, 用于归一化, 使不同方向上的偏离程度具有可比性。&lt;/section&gt;&lt;section&gt;在计算异常分数时，关于特征向量（即度量异常用的标杆）选择又有两种方式：&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;考虑在前k个特征向量方向上的偏差：前k个特征向量往往直接对应原始数据里的某几个特征，在前几个特征向量方向上偏差比较大的数据样本，往往就是在原始数据中那几个特征上的极值点。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;考虑后r个特征向量方向上的偏差：后r个特征向量通常表示某几个原始特征的线性组合，线性组合之后的方差比较小反应了这几个特征之间的某种关系。在后几个特征方向上偏差比较大的数据样本，表示它在原始数据里对应的那几个特征上出现了与预计不太一致的情况。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\sum_{j=1}^{k} d_{i j}&amp;gt;C_{1} \quad \text { or } \quad \sum_{j=n-r+1}^{n} d_{i j}&amp;gt;C_{2}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uOic3MSyajtNlJibnJWIZPNGu045UYvWIsEtibdLpXPE8icnLcjibQ6ZboBzEibTp5BvnaXJ/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;得分大于阈值C则判断为异常。&lt;/section&gt;&lt;section&gt;第二种做法，PCA提取了数据的主要特征，如果一个数据样本不容易被重构出来，表示这个数据样本的特征跟整体数据样本的特征不一致，那么它显然就是一个异常的样本：&lt;/section&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\operatorname{Score}\left(x_{i}\right)=\sum_{k=1}^{n}\left(\left|\mathbf{x}_{\mathbf{i}}-\mathbf{x}_{\mathbf{i} \mathbf{k}}^{\prime}\right|\right) \times e v(k)&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uOW1JiaxxuwcUM41sOqvELIzFUoJhB7tBY1bFxjo53GId9ica9v2Xthjhp5a6ceW3nTu/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;e v(k)=\frac{\sum_{j=1}^{k} \lambda_{j}}{\sum_{j=1}^{n} \lambda_{j}}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uOhuibPwUkMT4Uu6aKfiamL8deQj4gTGVRzl0lW9rZj5sVoUowHuAOuNA5YwhjZxGkBF/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;其中, &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -759 2311.8 1037&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msubsup&quot; transform=&quot;translate(1000, 0)&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(607, 363) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;2032&quot; d=&quot;M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(607, -278) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;69&quot; d=&quot;M72 610Q72 649 98 672T159 695Q193 693 217 670T241 610Q241 572 217 549T157 525Q120 525 96 548T72 610ZM46 442L136 446L226 450H232V62H294V0H286Q271 3 171 3Q67 3 49 0H40V62H109V209Q109 358 108 362Q103 380 55 380H43V442H46Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(319, 0)&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M32 686L123 690Q214 694 215 694H221V255L377 382H346V444H355Q370 441 476 441Q544 441 556 444H562V382H476L347 277L515 62H587V0H579Q564 3 476 3Q370 3 352 0H343V62H358L373 63L260 206L237 189L216 172V62H285V0H277Q259 3 157 3Q46 3 37 0H29V62H98V332Q98 387 98 453T99 534Q99 593 97 605T83 620Q69 624 42 624H29V686H32Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 是基于 &lt;span&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -694 521 705&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6B&quot; d=&quot;M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt; 维特征向量重构的样本。&lt;/section&gt;&lt;section&gt;基于低维特征进行数据样本的重构时，舍弃了较小的特征值对应的特征向量方向上的信息。换一句话说，重构误差其实主要来自较小的特征值对应的特征向量方向上的信息。基于这个直观的理解，PCA在异常检测上的两种不同思路都会特别关注较小的特征值对应的特征向量。所以，我们说PCA在做异常检测时候的两种思路本质上是相似的，当然第一种方法还可以关注较大特征值对应的特征向量。&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;# Ref: [https://zhuanlan.zhihu.com/p/48110105](https://zhuanlan.zhihu.com/p/48110105)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; sklearn.decomposition &lt;span&gt;import&lt;/span&gt; PCA&lt;br/&gt;pca = PCA()&lt;br/&gt;pca.fit(centered_training_data)&lt;br/&gt;transformed_data = pca.transform(training_data)&lt;br/&gt;y = transformed_data&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 计算异常分数&lt;/span&gt;&lt;br/&gt;lambdas = pca.singular_values_&lt;br/&gt;M = ((y*y)/lambdas)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 前k个特征向量和后r个特征向量&lt;/span&gt;&lt;br/&gt;q = &lt;span&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span&gt;print&lt;/span&gt; &lt;span&gt;&quot;Explained variance by first q terms: &quot;&lt;/span&gt;, sum(pca.explained_variance_ratio_[:q])&lt;br/&gt;q_values = list(pca.singular_values_ &amp;lt; &lt;span&gt;.2&lt;/span&gt;)&lt;br/&gt;r = q_values.index(&lt;span&gt;True&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 对每个样本点进行距离求和的计算&lt;/span&gt;&lt;br/&gt;major_components = M[:,range(q)]&lt;br/&gt;minor_components = M[:,range(r, len(features))]&lt;br/&gt;major_components = np.sum(major_components, axis=&lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;minor_components = np.sum(minor_components, axis=&lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 人为设定c1、c2阈值&lt;/span&gt;&lt;br/&gt;components = pd.DataFrame({&lt;span&gt;&#x27;major_components&#x27;&lt;/span&gt;: major_components, &lt;br/&gt;                               &lt;span&gt;&#x27;minor_components&#x27;&lt;/span&gt;: minor_components})&lt;br/&gt;c1 = components.quantile(&lt;span&gt;0.99&lt;/span&gt;)[&lt;span&gt;&#x27;major_components&#x27;&lt;/span&gt;]&lt;br/&gt;c2 = components.quantile(&lt;span&gt;0.99&lt;/span&gt;)[&lt;span&gt;&#x27;minor_components&#x27;&lt;/span&gt;]&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 制作分类器&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;classifier&lt;/span&gt;&lt;span&gt;(major_components, minor_components)&lt;/span&gt;:&lt;/span&gt;  &lt;br/&gt;    major = major_components &amp;gt; c1&lt;br/&gt;    minor = minor_components &amp;gt; c2    &lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; np.logical_or(major,minor)&lt;br/&gt;&lt;br/&gt;results = classifier(major_components=major_components, minor_components=minor_components)&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2. AutoEncoder&lt;/h3&gt;&lt;section&gt;&lt;strong&gt;资料来源：&lt;/strong&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;[13] 利用Autoencoder进行无监督异常检测(Python) - SofaSofa.io，知乎：https://zhuanlan.zhihu.com/p/46188296&lt;/section&gt;&lt;section&gt;[14] 自编码器AutoEncoder解决异常检测问题（手把手写代码） - 数据如琥珀，知乎：https://zhuanlan.zhihu.com/p/260882741&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;PCA是线性降维，AutoEncoder是非线性降维。根据正常数据训练出来的AutoEncoder，能够将正常样本重建还原，但是却无法将异于正常分布的数据点较好地还原，导致还原误差较大。因此如果一个新样本被编码，解码之后，它的误差超出正常数据编码和解码后的误差范围，则视作为异常数据。需要注意的是，AutoEncoder训练使用的数据是正常数据（即无异常值），这样才能得到重构后误差分布范围是多少以内是合理正常的。所以AutoEncoder在这里做异常检测时，算是一种有监督学习的方法。&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.767402376910017&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRrjiaIFamfsXO8mp65RpKAqTCUbggY2xKPlOGS2exmLXrwhgE4VIdKYGQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;589&quot;/&gt;&lt;figcaption&gt;图11：自编码器&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;# Ref: [https://zhuanlan.zhihu.com/p/260882741](https://zhuanlan.zhihu.com/p/260882741)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; tensorflow &lt;span&gt;as&lt;/span&gt; tf&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; keras.models &lt;span&gt;import&lt;/span&gt; Sequential&lt;br/&gt;&lt;span&gt;from&lt;/span&gt; keras.layers &lt;span&gt;import&lt;/span&gt; Dense&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 标准化数据&lt;/span&gt;&lt;br/&gt;scaler = preprocessing.MinMaxScaler()&lt;br/&gt;X_train = pd.DataFrame(scaler.fit_transform(dataset_train),&lt;br/&gt;                              columns=dataset_train.columns,&lt;br/&gt;                              index=dataset_train.index)&lt;br/&gt;&lt;span&gt;# Random shuffle training data&lt;/span&gt;&lt;br/&gt;X_train.sample(frac=&lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;X_test = pd.DataFrame(scaler.transform(dataset_test),&lt;br/&gt;                             columns=dataset_test.columns,&lt;br/&gt;                             index=dataset_test.index)&lt;br/&gt;&lt;br/&gt;tf.random.set_seed(&lt;span&gt;10&lt;/span&gt;)&lt;br/&gt;act_func = &lt;span&gt;&#x27;relu&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# Input layer:&lt;/span&gt;&lt;br/&gt;model=Sequential()&lt;br/&gt;&lt;span&gt;# First hidden layer, connected to input vector X.&lt;/span&gt;&lt;br/&gt;model.add(Dense(&lt;span&gt;10&lt;/span&gt;,activation=act_func,&lt;br/&gt;                kernel_initializer=&lt;span&gt;&#x27;glorot_uniform&#x27;&lt;/span&gt;,&lt;br/&gt;                kernel_regularizer=regularizers.l2(&lt;span&gt;0.0&lt;/span&gt;),&lt;br/&gt;                input_shape=(X_train.shape[&lt;span&gt;1&lt;/span&gt;],)&lt;br/&gt;               )&lt;br/&gt;         )&lt;br/&gt;model.add(Dense(&lt;span&gt;2&lt;/span&gt;,activation=act_func,&lt;br/&gt;                kernel_initializer=&lt;span&gt;&#x27;glorot_uniform&#x27;&lt;/span&gt;))&lt;br/&gt;model.add(Dense(&lt;span&gt;10&lt;/span&gt;,activation=act_func,&lt;br/&gt;                kernel_initializer=&lt;span&gt;&#x27;glorot_uniform&#x27;&lt;/span&gt;))&lt;br/&gt;model.add(Dense(X_train.shape[&lt;span&gt;1&lt;/span&gt;],&lt;br/&gt;                kernel_initializer=&lt;span&gt;&#x27;glorot_uniform&#x27;&lt;/span&gt;))&lt;br/&gt;model.compile(loss=&lt;span&gt;&#x27;mse&#x27;&lt;/span&gt;,optimizer=&lt;span&gt;&#x27;adam&#x27;&lt;/span&gt;)&lt;br/&gt;print(model.summary())&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# Train model for 100 epochs, batch size of 10:&lt;/span&gt;&lt;br/&gt;NUM_EPOCHS=&lt;span&gt;100&lt;/span&gt;&lt;br/&gt;BATCH_SIZE=&lt;span&gt;10&lt;/span&gt;&lt;br/&gt;history=model.fit(np.array(X_train),np.array(X_train),&lt;br/&gt;                  batch_size=BATCH_SIZE,&lt;br/&gt;                  epochs=NUM_EPOCHS,&lt;br/&gt;                  validation_split=&lt;span&gt;0.05&lt;/span&gt;,&lt;br/&gt;                  verbose = &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;plt.plot(history.history[&lt;span&gt;&#x27;loss&#x27;&lt;/span&gt;],&lt;br/&gt;         &lt;span&gt;&#x27;b&#x27;&lt;/span&gt;,&lt;br/&gt;         label=&lt;span&gt;&#x27;Training loss&#x27;&lt;/span&gt;)&lt;br/&gt;plt.plot(history.history[&lt;span&gt;&#x27;val_loss&#x27;&lt;/span&gt;],&lt;br/&gt;         &lt;span&gt;&#x27;r&#x27;&lt;/span&gt;,&lt;br/&gt;         label=&lt;span&gt;&#x27;Validation loss&#x27;&lt;/span&gt;)&lt;br/&gt;plt.legend(loc=&lt;span&gt;&#x27;upper right&#x27;&lt;/span&gt;)&lt;br/&gt;plt.xlabel(&lt;span&gt;&#x27;Epochs&#x27;&lt;/span&gt;)&lt;br/&gt;plt.ylabel(&lt;span&gt;&#x27;Loss, [mse]&#x27;&lt;/span&gt;)&lt;br/&gt;plt.ylim([&lt;span&gt;0&lt;/span&gt;,&lt;span&gt;.1&lt;/span&gt;])&lt;br/&gt;plt.show()&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 查看训练集还原的误差分布如何，以便制定正常的误差分布范围&lt;/span&gt;&lt;br/&gt;X_pred = model.predict(np.array(X_train))&lt;br/&gt;X_pred = pd.DataFrame(X_pred,&lt;br/&gt;                      columns=X_train.columns)&lt;br/&gt;X_pred.index = X_train.index&lt;br/&gt;&lt;br/&gt;scored = pd.DataFrame(index=X_train.index)&lt;br/&gt;scored[&lt;span&gt;&#x27;Loss_mae&#x27;&lt;/span&gt;] = np.mean(np.abs(X_pred-X_train), axis = &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;plt.figure()&lt;br/&gt;sns.distplot(scored[&lt;span&gt;&#x27;Loss_mae&#x27;&lt;/span&gt;],&lt;br/&gt;             bins = &lt;span&gt;10&lt;/span&gt;,&lt;br/&gt;             kde= &lt;span&gt;True&lt;/span&gt;,&lt;br/&gt;            color = &lt;span&gt;&#x27;blue&#x27;&lt;/span&gt;)&lt;br/&gt;plt.xlim([&lt;span&gt;0.0&lt;/span&gt;,&lt;span&gt;.5&lt;/span&gt;])&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 误差阈值比对，找出异常值&lt;/span&gt;&lt;br/&gt;X_pred = model.predict(np.array(X_test))&lt;br/&gt;X_pred = pd.DataFrame(X_pred,&lt;br/&gt;                      columns=X_test.columns)&lt;br/&gt;X_pred.index = X_test.index&lt;br/&gt;threshod = &lt;span&gt;0.3&lt;/span&gt;&lt;br/&gt;scored = pd.DataFrame(index=X_test.index)&lt;br/&gt;scored[&lt;span&gt;&#x27;Loss_mae&#x27;&lt;/span&gt;] = np.mean(np.abs(X_pred-X_test), axis = &lt;span&gt;1&lt;/span&gt;)&lt;br/&gt;scored[&lt;span&gt;&#x27;Threshold&#x27;&lt;/span&gt;] = threshod&lt;br/&gt;scored[&lt;span&gt;&#x27;Anomaly&#x27;&lt;/span&gt;] = scored[&lt;span&gt;&#x27;Loss_mae&#x27;&lt;/span&gt;] &amp;gt; scored[&lt;span&gt;&#x27;Threshold&#x27;&lt;/span&gt;]&lt;br/&gt;scored.head()&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;七、基于分类的方法&lt;/strong&gt;&lt;/h1&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1. One-Class SVM&lt;/h3&gt;&lt;section&gt;&lt;strong&gt;资料来源：&lt;/strong&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;[15] Python机器学习笔记：One Class SVM - zoukankan，博文：http://t.zoukankan.com/wj-1314-p-10701708.html&lt;/section&gt;&lt;section&gt;[16] 单类SVM: SVDD - 张义策，知乎：https://zhuanlan.zhihu.com/p/65617987&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;One-Class SVM，这个算法的思路非常简单，就是寻找一个超平面将样本中的正例圈出来，预测就是用这个超平面做决策，在圈内的样本就认为是正样本，在圈外的样本是负样本，用在异常检测中，负样本可看作异常样本。它属于无监督学习，所以不需要标签。&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.75&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRroRmO5dn1Ep89wCcquBdqgILmZrPrqD5UrXfCXNu5LqeDHQqCYxiav1Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot;/&gt;&lt;figcaption&gt;图12：One-Class SVM&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;One-Class SVM又一种推导方式是SVDD（Support Vector Domain Description，支持向量域描述），对于SVDD来说，我们期望所有不是异常的样本都是正类别，同时它采用一个超球体，而不是一个超平面来做划分，该算法在特征空间中获得数据周围的球形边界，期望最小化这个超球体的体积，从而最小化异常点数据的影响。&lt;/section&gt;&lt;section&gt;假设产生的超球体参数为中心 o 和对应的超球体半径r&amp;gt;0，超球体体积V(r)被最小化，中心o是支持行了的线性组合；跟传统SVM方法相似，可以要求所有训练数据点xi到中心的距离严格小于r。但是同时构造一个惩罚系数为C的松弛变量 ζi，优化问题入下所示：&lt;/section&gt;&lt;section&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\begin{gathered}&amp;#10;\underbrace{\min }_{r \rho} V(r)+C \sum_{i=1}^{m} \zeta_{i} \\&amp;#10;\left\|x_{i}-o\right\|_{2} \leq r+\xi_{i}, i-1,2,3 \ldots m \\&amp;#10;\xi_{i} \geq 0, i=1,2, \ldots m&amp;#10;\end{gathered}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/kMaz9nc8bgKEKFNcxsevN4ePgj26q8uODeD32oIFUZsLUUI7Rk5PWsP0p6zb9Evnpp7eoE8iaYgp0KFBGqbuolxLoFvrz8ADN/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;C是调节松弛变量的影响大小，说的通俗一点就是，给那些需要松弛的数据点多少松弛空间，如果C比较小，会给离群点较大的弹性，使得它们可以不被包含进超球体。详细推导过程参考资料[15] [16]。&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;&lt;span&gt;from&lt;/span&gt; sklearn &lt;span&gt;import&lt;/span&gt; svm&lt;br/&gt;&lt;span&gt;# fit the model&lt;/span&gt;&lt;br/&gt;clf = svm.OneClassSVM(nu=&lt;span&gt;0.1&lt;/span&gt;, kernel=&lt;span&gt;&#x27;rbf&#x27;&lt;/span&gt;, gamma=&lt;span&gt;0.1&lt;/span&gt;)&lt;br/&gt;clf.fit(X)&lt;br/&gt;y_pred = clf.predict(X)&lt;br/&gt;n_error_outlier = y_pred[y_pred == &lt;span&gt;-1&lt;/span&gt;].size&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;八、基于预测的方法&lt;/strong&gt;&lt;/h1&gt;&lt;section&gt;&lt;strong&gt;资料来源：&lt;/strong&gt;&lt;/section&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section&gt;[17] 【TS技术课堂】时间序列异常检测 - 时序人，文章：https://mp.weixin.qq.com/s/9TimTB_ccPsme2MNPuy6uA&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;对于单条时序数据，根据其预测出来的时序曲线和真实的数据相比，求出每个点的残差，并对残差序列建模，利用KSigma或者分位数等方法便可以进行异常检测。具体的流程如下：&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2615803814713897&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRrj8Mkr7FicbwPm5hJyjWLiaAnjPFEKQ5gHEjUSAwI5IlUIC6f5cyU2RTQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;367&quot;/&gt;&lt;figcaption&gt;图13：基于预测的方法&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;九、总结&lt;/strong&gt;&lt;/h1&gt;&lt;section&gt;异常检测方法总结如下：&lt;/section&gt;&lt;section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5605095541401274&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/gYUsOT36vfqxTEmcsemR4yvVB9psjkRr8MVwNibaNC3WXBCMvrSuo2v2LQnHfwrkv8aRjQrTTKMzDUNVVu9ryHQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;942&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;strong/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[1] 时序预测竞赛之异常检测算法综述 - 鱼遇雨欲语与余，知乎：https://zhuanlan.zhihu.com/p/336944097&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[2] 剔除异常值栅格计算器_数据分析师所需的统计学：异常检测 - weixin_39974030，CSDN：https://blog.csdn.net/weixin_39974030/article/details/112569610&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[3] 异常检测算法之(KNN)-K Nearest Neighbors - 小伍哥聊风控，知乎：https://zhuanlan.zhihu.com/p/501691799&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[4] 一文读懂异常检测 LOF 算法（Python代码）- 东哥起飞，知乎：https://zhuanlan.zhihu.com/p/448276009&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[5] Nowak-Brzezińska, A., &amp;amp; Horyń, C. (2020). Outliers in rules-the comparision of LOF, COF and KMEANS algorithms. *Procedia Computer Science*, *176*, 1420-1429.&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[6] 機器學習_學習筆記系列(98)：基於連接異常因子分析(Connectivity-Based Outlier Factor)  - 劉智皓 (Chih-Hao Liu)&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[7] 异常检测之SOS算法 - 呼广跃，知乎：https://zhuanlan.zhihu.com/p/34438518&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[8] 异常检测算法 -- 孤立森林（Isolation Forest）剖析 - 风控大鱼，知乎：https://zhuanlan.zhihu.com/p/74508141&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[9] 孤立森林(isolation Forest)-一个通过瞎几把乱分进行异常检测的算法 - 小伍哥聊风控，知乎：https://zhuanlan.zhihu.com/p/484495545&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[10] 孤立森林阅读 - Mark_Aussie，博文：https://blog.csdn.net/MarkAustralia/article/details/12018189&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[11] 机器学习-异常检测算法（三）：Principal Component Analysis - 刘腾飞，知乎：https://zhuanlan.zhihu.com/p/29091645&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[12] Anomaly Detection异常检测--PCA算法的实现 - CC思SS，知乎：https://zhuanlan.zhihu.com/p/48110105&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[13] 利用Autoencoder进行无监督异常检测(Python) - SofaSofa.io，知乎：https://zhuanlan.zhihu.com/p/46188296&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[14] 自编码器AutoEncoder解决异常检测问题（手把手写代码） - 数据如琥珀，知乎：https://zhuanlan.zhihu.com/p/260882741&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[15] Python机器学习笔记：One Class SVM - zoukankan，博文：http://t.zoukankan.com/wj-1314-p-10701708.html&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;[16] 单类SVM: SVDD - 张义策，知乎：https://zhuanlan.zhihu.com/p/65617987[17] 【TS技术课堂】时间序列异常检测 - 时序人，文章：https://mp.weixin.qq.com/s/9TimTB_ccPsme2MNPuy6uA&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4OTQ1MTA4OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/Iefry9dPrYJ1LbaTxqd4VPOibfZ1tf0fXDUqFOLlPcRPvv4W4Cro4YnhRx2Xib5MId5rECtVMBkmvJk8nSNnsekw/0?wx_fmt=png&quot; data-nickname=&quot;数据挖掘工程师&quot; data-alias=&quot;DataMinings&quot; data-signature=&quot;数万名数据挖掘爱好者的聚集地，致力于前沿数据技术研究。公众号以数据为核心，分享大数据、数据分析、机器学习、深度学习等干货，想学数据我等你来。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;推荐阅读&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4OTQ1MTA4OQ==&amp;amp;mid=2247500946&amp;amp;idx=1&amp;amp;sn=35d33828ff50f373709086a636eb4964&amp;amp;chksm=fdcfdeaccab857babe6ce58dfc0444ffc58cac52a28c23774e14a6126a685103e492d1e2e395&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;2021科大讯飞-车辆贷款违约预测赛事 Top1方案（Python代码）&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;2021科大讯飞-车辆贷款违约预测赛事 Top1方案（Python代码）&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4OTQ1MTA4OQ==&amp;amp;mid=2247500459&amp;amp;idx=1&amp;amp;sn=8e15c48bc67abdc03caa649689479140&amp;amp;chksm=fdcfd895cab85183fb6a03ac22f9804b973ebea2e96a5d153a062067a6fe6c1e241b2aeb7b0a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;10 种聚类算法的完整 Python 操作示例&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;10 种聚类算法的完整 Python 操作示例&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4OTQ1MTA4OQ==&amp;amp;mid=2247500259&amp;amp;idx=2&amp;amp;sn=e52aa3206765ab55d7ebc89d8ba4a29c&amp;amp;chksm=fdcfdbddcab852cbb2a9763745871ed2a266b1f997f1e37b52d2db244dbc6faa1f61f5aa1548&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;为什么回归问题用MSE？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;为什么回归问题用MSE？&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4OTQ1MTA4OQ==&amp;amp;mid=2247500237&amp;amp;idx=1&amp;amp;sn=c15c8ef92403c01730a5ee3a28c487d0&amp;amp;chksm=fdcfdbf3cab852e5f17b75b8a0ac72cb0b9754c609dc3ea91fc45617b067e8be5f5657709a17&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;时序特征相关系数的稳定性分析(附代码)&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;时序特征相关系数的稳定性分析(附代码)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4OTQ1MTA4OQ==&amp;amp;mid=2247499891&amp;amp;idx=1&amp;amp;sn=53f97dd57de38f9e27bf3f5c18180e36&amp;amp;chksm=fdcfda4dcab8535b8cd129d90dd40927f2f33c6039d2dbe921fc1daae45f84fb3bf9f80bdc99&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;时间序列预测方法汇总：从理论到实践（附Kaggle经典比赛方案）&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;时间序列预测方法汇总：从理论到实践（附Kaggle经典比赛方案）&lt;/a&gt;&lt;/p&gt;&lt;/pre&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>05114a1b046ab65eeb3b285fa2e4a23e</guid>
<title>肝了一个月的 DDD，一文带你掌握！</title>
<link>https://toutiao.io/k/bclz2n6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg3OTU5NzQ1Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLFTdSvrrpJnCZ0Fp5Z1wKkhKFQBxTaFfxOpib3E2zgUu39BFbsBqqJbEpxicUvz3H6csoL2JQ9EP1yQ/0?wx_fmt=png&quot; data-nickname=&quot;楼仔&quot; data-alias=&quot;&quot; data-signature=&quot;7 年一线大厂经验（百度/小米/滴滴），带你进大厂，不限于Java、Go、高并发、架构选型、消息队列、设计模式、MySQL、Redis、DDD、项目管理、软技能等。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5010706638115632&quot; data-type=&quot;jpeg&quot; data-w=&quot;1868&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4gLEtiaF0kBhicwhUNx0lUnzDGdOj5Lvs3Q848jM91TOglvW1o7xtLuZzQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;整体阅读时间，在 30 分钟左右。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是楼仔！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;去年倒腾了一个半月，写过一篇 DDD 的文章，当时没有推广，完全自嗨，为了不让这篇好文被埋没，现重新整理，突出重点，可读性更强！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;为了证明该文没有注水，列一下当时的学习资料：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;小米内部 DDD 系列分享；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;小米内部 DDD 脚手架；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;小米内部授权认证项目（应用 DDD）；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;极客时间欧创新的《 DDD 实战课》；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;掘金“柏炎”的 DDD 系列文档和 DDD Demo；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;美团技术团队、阿里云开发社区、网上博客等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不 BB，直接上思维导图！&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5296404275996113&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4gQysHznWicFBVfUNmFXeJB8sjYBRVuNjsN4qnicNQH1u2jZXVOaV5JFmw/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. 走进 DDD&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.1 为什么要用 DDD ？&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;面向对象设计，数据行为绑定，告别贫血模型；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;降低复杂度，分而治之；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;优先考虑领域模型，而不是切割数据和行为；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;准确传达业务规则，业务优先；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;代码即设计；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;它通过边界划分将复杂业务领域简单化，帮我们设计出清晰的领域和应用边界，可以很容易地实现业务和技术统一的架构演进；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;领域知识共享，提升协助效率；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;增加可维护性和可读性，延长软件生命周期；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;中台化的基石。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.39765625&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4gcibPaJcRMCM40R7SLW2cCxVs09pFQShIv8QkRkUXx28OWYRN3pF1icjg/640?wx_fmt=jpeg&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.2 DDD 作用&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说到 DDD，绕不开 MVC，在 MVC 三层架构中，我们进行功能开发的之前，拿到需求，解读需求。往往最先做的一步就是先设计表结构，在逐层设计上层 dao，service，controller。对于产品或者用户的需求都做了一层自我理解的转化。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.08333333333333333&quot; data-type=&quot;png&quot; data-w=&quot;1632&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4gxfcvFgsx9IKicEGmiaaBic8OVWSdAemib1EhdqvyvqK63Z5QMmVKz6C0aw/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户需求在被提出之后经过这么多层的转化后，特别是研发需求在数据库结构这一层转化后，将业务以主观臆断行为进行了转化。一旦业务边界划分模糊，考虑不全，大量的逻辑补充堆积到了代码层实现，变得越来越难维护。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如我们现在要做一个电商订单下单的需求，涉及到用户选定商品，下订单、支付订单、对用户下单时的订单发货：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;MVC 架构&lt;/strong&gt;：我们常见的做法是在分析好业务需求之后，就开始设计表结构了，订单表，支付表，商品表等等。然后编写业务逻辑。这是第一个版本的需求，功能迭代饿了，订单支付后我可以取消，下单的商品我们退换货，是不是又需要进行加表，紧跟着对于的实现逻辑也进行修改。功能不断迭代，代码就不断的层层往上叠。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;DDD 架构&lt;/strong&gt;：我们先进行划分业务边界。这里面核心是订单。那么订单就是这个业务领域里面的聚合逻辑体现。支付，商品信息，地址等等都是围绕着订单实体。订单本身的属性决定之后，类似于地址只是一个属性的体现。当你将订单的领域模型构建好之后，后续的逻辑边界与仓储设计也就随之而来了。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;DDD 整体作用总结如下：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;消除信息不对称；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;常规MVC三层架构中自底向上的设计方式做一个反转，以业务为主导，自顶向下的进行业务领域划分；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将大的业务需求进行拆分，分而治之。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. DDD 架构&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.1 DDD 分层架构&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;严格分层架构：某层只能与直接位于的下层发生耦合。&lt;/p&gt;&lt;p&gt;松散分层架构：允许上层与任意下层发生耦合。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在领域驱动设计（DDD）中采用的是松散分层架构，层间关系不那么严格。每层都可能使用它下面所有层的服务，而不仅仅是下一层的服务。每层都可能是半透明的，这意味着有些服务只对上一层可见，而有些服务对上面的所有层都可见。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6012364760432767&quot; data-type=&quot;png&quot; data-w=&quot;1294&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4gH4zTYicZIwYwpa46cW4g4apHxCD9IehxDhc6V37kDSnsia8SQHKIhZ4Q/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;分层的作用，从上往下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;用户交互层&lt;/strong&gt;：web 请求，rpc 请求，mq 消息等外部输入均被视为外部输入的请求，可能修改到内部的业务数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;业务应用层&lt;/strong&gt;：与 MVC 中的 service 不同的不是，service 中存储着大量业务逻辑。但在应用服务的实现中，它负责编排、转发、校验等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;领域层&lt;/strong&gt;：或称为模型层，系统的核心，负责表达业务概念，业务状态信息以及业务规则。即包含了该领域所有复杂的业务知识抽象和规则定义。该层主要精力要放在领域对象分析上，可以从实体，值对象，聚合（聚合根），领域服务，领域事件，仓储，工厂等方面入手。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;基础设施层&lt;/strong&gt;：主要有 2 方面内容，一是为领域模型提供持久化机制，当软件需要持久化能力时候才需要进行规划；一是对其他层提供通用的技术支持能力，如消息通信，通用工具，配置等的实现。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在设计和开发时，不要将本该放在领域层的业务逻辑放到应用层中实现，因为庞大的应用层会使领域模型失焦，时间一长你的服务就会演化为传统的三层架构，业务逻辑会变得混乱。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.2 各层数据转换&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每一层都有自己特定的数据，可以做如下区分：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;VO（View Object）&lt;/strong&gt;：视图对象，主要对应界面显示的数据对象。对于一个WEB页面，或者SWT、SWING的一个界面，用一个VO对象对应整个界面的值。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;DTO（Data Transfer Object）&lt;/strong&gt;：数据传输对象，主要用于远程调用等需要大量传输对象的地方。比如我们一张表有 100 个字段，那么对应的 PO 就有 100 个属性。但是我们界面上只要显示 10 个字段，客户端用 WEB service 来获取数据，没有必要把整个 PO 对象传递到客户端，这时我们就可以用只有这 10 个属性的 DTO 来传递结果到客户端，这样也不会暴露服务端表结构。到达客户端以后，如果用这个对象来对应界面显示，那此时它的身份就转为 VO。在这里，我泛指用于展示层与服务层之间的数据传输对象。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;DO（Domain Object）&lt;/strong&gt;：领域对象，就是从现实世界中抽象出来的有形或无形的业务实体。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;PO（Persistent Object）&lt;/strong&gt;：持久化对象，它跟持久层（通常是关系型数据库）的数据结构形成一一对应的映射关系，如果持久层是关系型数据库，那么，数据表中的每个字段（或若干个）就对应 PO 的一个（或若干个）属性。最形象的理解就是一个 PO 就是数据库中的一条记录，好处是可以把一条记录作为一个对象处理，可以方便的转为其它对象。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. DDD 基础&lt;/h1&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.790273556231003&quot; data-type=&quot;png&quot; data-w=&quot;987&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4g1H77UIiaarqZyRCdtyibq12D99axNhibaGtMlibiaAQFpmxbaZmHkh3zP4A/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;学习 DDD 前，有很多基础概念需要掌握，这幅图总结的很全，他把 DDD 划分不同的层级：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;最里层是值、属性、唯一标识等，这个是最基本的数据单位，但不能直接使用。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;然后是实体，这个把基础的数据进行封装，可以直接使用，在代码中就是封装好的一个个实体对象。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;之后就是领域层，它按照业务划分为不同的领域，比如订单领域、商品领域、支付领域等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最后是应用服务，它对业务逻辑进行编排，也可以理解为业务层。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.1 领域和子域&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在研究和解决业务问题时，DDD 会按照一定的规则将业务领域进行细分，当领域细分到一定的程度后，DDD 会将问题范围限定在特定的边界内，在这个边界内建立领域模型，进而用代码实现该领域模型，解决相应的业务问题。简言之，DDD 的领域就是这个边界内要解决的业务问题域。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;领域可以进一步划分为子领域。我们把划分出来的多个子领域称为子域，每个子域对应一个更小的问题域或更小的业务范围。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;领域的核心思想就是将问题域逐级细分，来降低业务理解和系统实现的复杂度。通过领域细分，逐步缩小服务需要解决的问题域，构建合适的领域模型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;举个简单的例子&lt;/strong&gt;，对于保险领域，我们可以把保险细分为承保、收付、再保以及理赔等子域，而承保子域还可以继续细分为投保、保全（寿险）、批改（财险）等子子域。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.2 核心域、通用域和支撑域&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;子域可以根据重要程度和功能属性划分为如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;核心域&lt;/strong&gt;：决定产品和公司核心竞争力的子域，它是业务成功的主要因素和公司的核心竞争力。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;通用域&lt;/strong&gt;：没有太多个性化的诉求，同时被多个子域使用的通用功能的子域。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;支撑域&lt;/strong&gt;：但既不包含决定产品和公司核心竞争力的功能，也不包含通用功能的子域。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;核心域、支撑域和通用域的主要目标&lt;/strong&gt;：通过领域划分，区分不同子域在公司内的不同功能属性和重要性，从而公司可对不同子域采取不同的资源投入和建设策略，其关注度也会不一样。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多公司的业务，表面看上去相似，但商业模式和战略方向是存在很大差异的，因此公司的关注点会不一样，在划分核心域、通用域和支撑域时，其结果也会出现非常大的差异。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如同样都是电商平台的淘宝、天猫、京东和苏宁易购，他们的商业模式是不同的。淘宝是 C2C 网站，个人卖家对个人买家，而天猫、京东和苏宁易购则是 B2C 网站，是公司卖家对个人买家。即便是苏宁易购与京东都是 B2C 的模式，苏宁易购是典型的传统线下卖场转型成为电商，京东则是直营加部分平台模式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此，在公司建立领域模型时，我们就要结合公司战略重点和商业模式，重点关注核心域。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.3 通用语言和限界上下文&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;通用语言&lt;/strong&gt;：就是能够简单、清晰、准确描述业务涵义和规则的语言。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;限界上下文&lt;/strong&gt;：用来封装通用语言和领域对象，提供上下文环境，保证在领域之内的一些术语、业务相关对象等（通用语言）有一个确切的含义，没有二义性。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.3.1 通用语言&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通用语言是团队统一的语言，不管你在团队中承担什么角色，在同一个领域的软件生命周期里都使用统一的语言进行交流。那么，通用语言的价值也就很明了，它可以解决交流障碍这个问题，使领域专家和开发人员能够协同合作，从而确保业务需求的正确表达。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个通用语言到场景落地，大家可能还很模糊，其实就是把领域对象、属性、代码模型对象等，通过代码和文字建立映射关系，可以通过 Excel 记录这个关系，这样研发可以通过代码知道这个含义，产品或者业务方可以通过文字知道这个含义，沟通起来就不会有歧义，说的简单一点，其实就是统一产品和研发的话术。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接看下面这幅图（来源于极客时间欧创新的 DDD 实战课）：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46597812879708383&quot; data-type=&quot;png&quot; data-w=&quot;1646&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4gfKFMUOOUT7n1venjo2biaNaVNA2oicgEiaWfoecD35LKGqX692EzhO6LQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.3.2 限界上下文&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通用语言也有它的上下文环境，为了避免同样的概念或语义在不同的上下文环境中产生歧义，DDD 在战略设计上提出了“限界上下文”这个概念，用来确定语义所在的领域边界。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;限界上下文是一个显式的语义和语境上的边界，领域模型便存在于边界之内。边界内，通用语言中的所有术语和词组都有特定的含义。把限界上下文拆解开看，限界就是领域的边界，而上下文则是语义环境。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过领域的限界上下文，我们就可以在统一的领域边界内用统一的语言进行交流。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.4 实体和值对象&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.4.1 实体&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;实体 = 唯一身份标识 + 可变性【状态 + 行为】&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDD 中要求实体是唯一的且可持续变化的。意思是说在实体的生命周期内，无论其如何变化，其仍旧是同一个实体。唯一性由唯一的身份标识来决定的。可变性也正反映了实体本身的状态和行为。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;实体以 DO（领域对象）的形式存在&lt;/strong&gt;，每个实体对象都有唯一的 ID。我们可以对一个实体对象进行多次修改，修改后的数据和原来的数据可能会大不相同。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，由于它们拥有相同的 ID，它们依然是同一个实体。比如商品是商品上下文的一个实体，通过唯一的商品 ID 来标识，不管这个商品的数据如何变化，商品的 ID 一直保持不变，它始终是同一个商品。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.4.2 值对象&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;值对象 = 将一个值用对象的方式进行表述，来表达一个具体的固定不变的概念。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当你只关心某个对象的属性时，该对象便可作为一个值对象。 我们需要将值对象看成不变对象，不要给它任何身份标识，还应该尽量避免像实体对象一样的复杂性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还是举个订单的例子，订单是一个实体，里面包含地址，这个地址可以只通过属性嵌入的方式形成的订单实体对象，也可以将地址通过 json 序列化一个 string 类型的数据，存到 DB 的一个字段中，那么这个 Json 串就是一个值对象，是不是很好理解？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面给个简单的图（同样是源于极客时间欧创新的 DDD 实战课）：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.24033613445378152&quot; data-type=&quot;png&quot; data-w=&quot;1190&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4giabLQgdFH95qmHjMToKfelbQCicTicdOBHh5m2dh8thvw1e1Rm8x6SwUw/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3280943025540275&quot; data-type=&quot;png&quot; data-w=&quot;1018&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4gJbnlkngwfbp2D2OxicF9DI4zVFdzzr3YFvpJajPXA5urCibVqsjCJ0Xg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.5 聚合和聚合根&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.5.1 聚合&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;聚合&lt;/strong&gt;：我们把一些关联性极强、生命周期一致的实体、值对象放到一个聚合里。聚合是领域对象的显式分组，旨在支持领域模型的行为和不变性，同时充当一致性和事务性边界。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;聚合有一个聚合根和上下文边界，这个边界根据业务单一职责和高内聚原则，定义了聚合内部应该包含哪些实体和值对象，而聚合之间的边界是松耦合的。按照这种方式设计出来的服务很自然就是“高内聚、低耦合”的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;聚合在 DDD 分层架构里属于领域层，领域层包含了多个聚合，共同实现核心业务逻辑。跨多个实体的业务逻辑通过领域服务来实现，跨多个聚合的业务逻辑通过应用服务来实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如有的业务场景需要同一个聚合的 A 和 B 两个实体来共同完成，我们就可以将这段业务逻辑用领域服务来实现；而有的业务逻辑需要聚合 C 和聚合 D 中的两个服务共同完成，这时你就可以用应用服务来组合这两个服务。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.5.2 聚合根&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果把聚合比作组织，那聚合根就是这个组织的负责人。&lt;strong&gt;聚合根也称为根实体，它不仅是实体，还是聚合的管理者。&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;首先它作为实体本身，拥有实体的属性和业务行为，实现自身的业务逻辑。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其次它作为聚合的管理者，在聚合内部负责协调实体和值对象按照固定的业务规则协同完成共同的业务逻辑。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最后在聚合之间，它还是聚合对外的接口人，以聚合根 ID 关联的方式接受外部任务和请求，在上下文内实现聚合之间的业务协同。也就是说，聚合之间通过聚合根 ID 关联引用，如果需要访问其它聚合的实体，就要先访问聚合根，再导航到聚合内部实体，外部对象不能直接访问聚合内实体。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面讲的还是有些抽象，下面看一个图就能很好理解（同样是源于极客时间欧创新的DDD实战课）：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5461441213653603&quot; data-type=&quot;png&quot; data-w=&quot;1582&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4gUNqMr7v4mS1Ikv4m3UcmNUJMUgPFrP37pbw4mcuicUYRSbbOdM8Xabg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单概括一下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;通过事件风暴（我理解就是头脑风暴，不过我们一般都是先通过个人理解，然后再和相关核心同学进行沟通），得到实体和值对象；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将这些实体和值对象聚合为“投保聚合”和“客户聚合”，其中“投保单”和“客户”是两者的聚合根；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;找出与聚合根“投保单”和“客户”关联的所有紧密依赖的实体和值对象；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在聚合内根据聚合根、实体和值对象的依赖关系，画出对象的引用和依赖模型。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.6 领域服务和应用服务&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.6.1 领域服务&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当一些逻辑不属于某个实体时，可以把这些逻辑单独拿出来放到领域服务中，理想的情况是没有领域服务，如果领域服务使用不恰当，慢慢又演化回了以前逻辑都在 service 层的局面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以使用领域服务的情况：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;执行一个显著的业务操作&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对领域对象进行转换&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;以多个领域对象作为输入参数进行计算，结果产生一个值对象&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3.6.2 应用服务&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用层作为展现层与领域层的桥梁，是用来表达用例和用户故事的主要手段。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用层通过应用服务接口来暴露系统的全部功能。在应用服务的实现中，它负责编排和转发，它将要实现的功能委托给一个或多个领域对象来实现，它本身只负责处理业务用例的执行顺序以及结果的拼装。通过这样一种方式，它隐藏了领域层的复杂性及其内部实现机制。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用层相对来说是较“薄”的一层，除了定义应用服务之外，在该层我们可以进行安全认证，权限校验，持久化事务控制，或者向其他系统发生基于事件的消息通知，另外还可以用于创建邮件以发送给客户等。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.7 领域事件&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;领域事件 = 事件发布 + 事件存储 + 事件分发 + 事件处理。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;领域事件是一个领域模型中极其重要的部分，用来表示领域中发生的事件。忽略不相关的领域活动，同时明确领域专家要跟踪或希望被通知的事情，或与其他模型对象中的状态更改相关联。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面简单说明领域事件：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;事件发布&lt;/strong&gt;：构建一个事件，需要唯一标识，然后发布；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;事件存储&lt;/strong&gt;：发布事件前需要存储，因为接收后的事建也会存储，可用于重试或对账等；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;事件分发&lt;/strong&gt;：服务内直接发布给订阅者，服务外需要借助消息中间件，比如Kafka，RabbitMQ等；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;事件处理&lt;/strong&gt;：先将事件存储，然后再处理。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如下订单后，给用户增长积分与赠送优惠券的需求。如果使用瀑布流的方式写代码。一个个逻辑调用，那么不同用户，赠送的东西不同，逻辑就会变得又臭又长。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的比较好的方式是，用户下订单成功后，发布领域事件，积分聚合与优惠券聚合监听订单发布的领域事件进行处理。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.8 资源库【仓储】&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;仓储介于领域模型和数据模型之间，主要用于聚合的持久化和检索。它隔离了领域模型和数据模型，以便我们关注于领域模型而不需要考虑如何进行持久化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们将暂时不使用的领域对象从内存中持久化存储到磁盘中。当日后需要再次使用这个领域对象时，根据 key 值到数据库查找到这条记录，然后将其恢复成领域对象，应用程序就可以继续使用它了，这就是领域对象持久化存储的设计思想。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;是不是感觉这块内容比较抽象？直接对着Demo学习吧，很多东西你就会豁然开朗。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. DDD实战&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.1 项目介绍&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;主要是围绕用户、角色和两者的关系，构建权限分配领域模型。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;采用 DDD 4 层架构，包括用户接口层、应用层、领域层和基础服务层。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据通过 VO、DTO、DO、PO 转换，进行分层隔离。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;采用 SpringBoot + MyBatis Plus 框架，存储用 MySQL。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.2 工程目录&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目划分为用户接口层、应用层、领域层和基础服务层，每一层的代码结构都非常清晰，包括每一层 VO、DTO、DO、PO 的数据定义，对于每一层的公共代码，比如常量、接口等，都抽离到 ddd-common 中。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;./ddd-application  // 应用层&lt;br/&gt;├── pom.xml&lt;br/&gt;└── src&lt;br/&gt;    └── main&lt;br/&gt;        └── java&lt;br/&gt;            └── com&lt;br/&gt;                └── ddd&lt;br/&gt;                    └── applicaiton&lt;br/&gt;                        ├── converter&lt;br/&gt;                        │   └── UserApplicationConverter.java // 类型转换器&lt;br/&gt;                        └── impl&lt;br/&gt;                            └── AuthrizeApplicationServiceImpl.java // 业务逻辑&lt;br/&gt;./ddd-common&lt;br/&gt;├── ddd-common // 通用类库&lt;br/&gt;│   ├── pom.xml&lt;br/&gt;│   └── src&lt;br/&gt;│       └── main&lt;br/&gt;│           └── java&lt;br/&gt;│               └── com&lt;br/&gt;│                   └── ddd&lt;br/&gt;│                       └── common&lt;br/&gt;│                           ├── exception // 异常&lt;br/&gt;│                           │   ├── ServiceException.java&lt;br/&gt;│                           │   └── ValidationException.java&lt;br/&gt;│                           ├── result // 返回结果集&lt;br/&gt;│                           │   ├── BaseResult.javar&lt;br/&gt;│                           │   ├── Page.java&lt;br/&gt;│                           │   ├── PageResult.java&lt;br/&gt;│                           │   └── Result.java&lt;br/&gt;│                           └── util // 通用工具&lt;br/&gt;│                               ├── GsonUtil.java&lt;br/&gt;│                               └── ValidationUtil.java&lt;br/&gt;├── ddd-common-application // 业务层通用模块&lt;br/&gt;│   ├── pom.xml&lt;br/&gt;│   └── src&lt;br/&gt;│       └── main&lt;br/&gt;│           └── java&lt;br/&gt;│               └── com&lt;br/&gt;│                   └── ddd&lt;br/&gt;│                       └── applicaiton&lt;br/&gt;│                           ├── dto // DTO&lt;br/&gt;│                           │   ├── RoleInfoDTO.java&lt;br/&gt;│                           │   └── UserRoleDTO.java&lt;br/&gt;│                           └── servic // 业务接口&lt;br/&gt;│                               └── AuthrizeApplicationService.java&lt;br/&gt;├── ddd-common-domain&lt;br/&gt;│   ├── pom.xml&lt;br/&gt;│   └── src&lt;br/&gt;│       └── main&lt;br/&gt;│           └── java&lt;br/&gt;│               └── com&lt;br/&gt;│                   └── ddd&lt;br/&gt;│                       └── domain&lt;br/&gt;│                           ├── event // 领域事件&lt;br/&gt;│                           │   ├── BaseDomainEvent.java&lt;br/&gt;│                           │   └── DomainEventPublisher.java&lt;br/&gt;│                           └── service // 领域接口&lt;br/&gt;│                               └── AuthorizeDomainService.java&lt;br/&gt;└── ddd-common-infra&lt;br/&gt;    ├── pom.xml&lt;br/&gt;    └── src&lt;br/&gt;        └── main&lt;br/&gt;            └── java&lt;br/&gt;                └── com&lt;br/&gt;                    └── ddd&lt;br/&gt;                        └── infra&lt;br/&gt;                            ├── domain // DO&lt;br/&gt;                            │   └── AuthorizeDO.java&lt;br/&gt;                            ├── dto &lt;br/&gt;                            │   ├── AddressDTO.java&lt;br/&gt;                            │   ├── RoleDTO.java&lt;br/&gt;                            │   ├── UnitDTO.java&lt;br/&gt;                            │   └── UserRoleDTO.java&lt;br/&gt;                            └── repository&lt;br/&gt;                                ├── UserRepository.java // 领域仓库&lt;br/&gt;                                └── mybatis&lt;br/&gt;                                    └── entity // PO&lt;br/&gt;                                        ├── BaseUuidEntity.java&lt;br/&gt;                                        ├── RolePO.java&lt;br/&gt;                                        ├── UserPO.java&lt;br/&gt;                                        └── UserRolePO.java&lt;br/&gt;./ddd-domian  // 领域层&lt;br/&gt;├── pom.xml&lt;br/&gt;└── src&lt;br/&gt;    └── main&lt;br/&gt;        └── java&lt;br/&gt;            └── com&lt;br/&gt;                └── ddd&lt;br/&gt;                    └── domain&lt;br/&gt;                        ├── event // 领域事件&lt;br/&gt;                        │   ├── DomainEventPublisherImpl.java&lt;br/&gt;                        │   ├── UserCreateEvent.java&lt;br/&gt;                        │   ├── UserDeleteEvent.java&lt;br/&gt;                        │   └── UserUpdateEvent.java&lt;br/&gt;                        └── impl // 领域逻辑&lt;br/&gt;                            └── AuthorizeDomainServiceImpl.java&lt;br/&gt;./ddd-infra  // 基础服务层&lt;br/&gt;├── pom.xml&lt;br/&gt;└── src&lt;br/&gt;    └── main&lt;br/&gt;        └── java&lt;br/&gt;            └── com&lt;br/&gt;                └── ddd&lt;br/&gt;                    └── infra&lt;br/&gt;                        ├── config&lt;br/&gt;                        │   └── InfraCoreConfig.java  // 扫描Mapper文件&lt;br/&gt;                        └── repository&lt;br/&gt;                            ├── converter&lt;br/&gt;                            │   └── UserConverter.java // 类型转换器&lt;br/&gt;                            ├── impl&lt;br/&gt;                            │   └── UserRepositoryImpl.java&lt;br/&gt;                            └── mapper&lt;br/&gt;                                ├── RoleMapper.java&lt;br/&gt;                                ├── UserMapper.java&lt;br/&gt;                                └── UserRoleMapper.java&lt;br/&gt;./ddd-interface&lt;br/&gt;├── ddd-api  // 用户接口层&lt;br/&gt;│   ├── pom.xml&lt;br/&gt;│   └── src&lt;br/&gt;│       └── main&lt;br/&gt;│           ├── java&lt;br/&gt;│           │   └── com&lt;br/&gt;│           │       └── ddd&lt;br/&gt;│           │           └── api&lt;br/&gt;│           │               ├── DDDFrameworkApiApplication.java // 启动入口&lt;br/&gt;│           │               ├── converter&lt;br/&gt;│           │               │   └── AuthorizeConverter.java // 类型转换器&lt;br/&gt;│           │               ├── model&lt;br/&gt;│           │               │   ├── req // 入参 req&lt;br/&gt;│           │               │   │   ├── AuthorizeCreateReq.java&lt;br/&gt;│           │               │   │   └── AuthorizeUpdateReq.java&lt;br/&gt;│           │               │   └── vo  // 输出 VO&lt;br/&gt;│           │               │       └── UserAuthorizeVO.java&lt;br/&gt;│           │               └── web     // API&lt;br/&gt;│           │                   └── AuthorizeController.java&lt;br/&gt;│           └── resources // 系统配置&lt;br/&gt;│               ├── application.yml&lt;br/&gt;│           └── resources // Sql文件&lt;br/&gt;│               └── init.sql&lt;br/&gt;└── ddd-task&lt;br/&gt;    └── pom.xml&lt;br/&gt;./pom.xml&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.3 数据库&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;包括 3 张表，分别为用户、角色和用户角色表，一个用户可以拥有多个角色，一个角色可以分配给多个用户。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;create&lt;/span&gt; &lt;span&gt;table&lt;/span&gt; t_user&lt;br/&gt;(&lt;br/&gt;    &lt;span&gt;id&lt;/span&gt;           &lt;span&gt;bigint&lt;/span&gt; auto_increment &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;主键&#x27;&lt;/span&gt; primary &lt;span&gt;key&lt;/span&gt;,&lt;br/&gt;    user_name    &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;64&lt;/span&gt;)                        &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;用户名&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;password&lt;/span&gt;     &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;255&lt;/span&gt;)                       &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;密码&#x27;&lt;/span&gt;,&lt;br/&gt;    real_name    &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;64&lt;/span&gt;)                        &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;真实姓名&#x27;&lt;/span&gt;,&lt;br/&gt;    phone        &lt;span&gt;bigint&lt;/span&gt;                             &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;手机号&#x27;&lt;/span&gt;,&lt;br/&gt;    province     &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;64&lt;/span&gt;)                        &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;用户名&#x27;&lt;/span&gt;,&lt;br/&gt;    city         &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;64&lt;/span&gt;)                        &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;用户名&#x27;&lt;/span&gt;,&lt;br/&gt;    county       &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;64&lt;/span&gt;)                        &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;用户名&#x27;&lt;/span&gt;,&lt;br/&gt;    unit_id      &lt;span&gt;bigint&lt;/span&gt;                             &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;单位id&#x27;&lt;/span&gt;,&lt;br/&gt;    unit_name    &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;64&lt;/span&gt;)                        &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;单位名称&#x27;&lt;/span&gt;,&lt;br/&gt;    gmt_create   datetime &lt;span&gt;default&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;创建时间&#x27;&lt;/span&gt;,&lt;br/&gt;    gmt_modified datetime &lt;span&gt;default&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;on&lt;/span&gt; &lt;span&gt;update&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;修改时间&#x27;&lt;/span&gt;,&lt;br/&gt;    deleted      &lt;span&gt;bigint&lt;/span&gt;   &lt;span&gt;default&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;                 &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;是否删除，非0为已删除&#x27;&lt;/span&gt;&lt;br/&gt;)&lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;用户表&#x27;&lt;/span&gt; &lt;span&gt;collate&lt;/span&gt; = utf8_bin;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;create&lt;/span&gt; &lt;span&gt;table&lt;/span&gt; t_role&lt;br/&gt;(&lt;br/&gt;    &lt;span&gt;id&lt;/span&gt;           &lt;span&gt;bigint&lt;/span&gt; auto_increment &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;主键&#x27;&lt;/span&gt; primary &lt;span&gt;key&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;name&lt;/span&gt;         &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;256&lt;/span&gt;)                       &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;名称&#x27;&lt;/span&gt;,&lt;br/&gt;    code         &lt;span&gt;varchar&lt;/span&gt;(&lt;span&gt;64&lt;/span&gt;)                        &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;角色code&#x27;&lt;/span&gt;,&lt;br/&gt;    gmt_create   datetime &lt;span&gt;default&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;创建时间&#x27;&lt;/span&gt;,&lt;br/&gt;    gmt_modified datetime &lt;span&gt;default&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;on&lt;/span&gt; &lt;span&gt;update&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;修改时间&#x27;&lt;/span&gt;,&lt;br/&gt;    deleted      &lt;span&gt;bigint&lt;/span&gt;   &lt;span&gt;default&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;                 &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;是否已删除&#x27;&lt;/span&gt;&lt;br/&gt;)&lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;角色表&#x27;&lt;/span&gt; &lt;span&gt;charset&lt;/span&gt; = utf8;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;create&lt;/span&gt; &lt;span&gt;table&lt;/span&gt; t_user_role (&lt;br/&gt;    &lt;span&gt;id&lt;/span&gt;           &lt;span&gt;bigint&lt;/span&gt; auto_increment &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;主键id&#x27;&lt;/span&gt; primary &lt;span&gt;key&lt;/span&gt;,&lt;br/&gt;    user_id      &lt;span&gt;bigint&lt;/span&gt;                             &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;用户id&#x27;&lt;/span&gt;,&lt;br/&gt;    role_id      &lt;span&gt;bigint&lt;/span&gt;                             &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;角色id&#x27;&lt;/span&gt;,&lt;br/&gt;    gmt_create   datetime &lt;span&gt;default&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;创建时间&#x27;&lt;/span&gt;,&lt;br/&gt;    gmt_modified datetime &lt;span&gt;default&lt;/span&gt; &lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;修改时间&#x27;&lt;/span&gt;,&lt;br/&gt;    deleted      &lt;span&gt;bigint&lt;/span&gt;   &lt;span&gt;default&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;                 &lt;span&gt;not&lt;/span&gt; &lt;span&gt;null&lt;/span&gt; &lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;是否已删除&#x27;&lt;/span&gt;&lt;br/&gt;)&lt;span&gt;comment&lt;/span&gt; &lt;span&gt;&#x27;用户角色关联表&#x27;&lt;/span&gt; &lt;span&gt;charset&lt;/span&gt; = utf8;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.4 基础服务层&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;仓储（资源库）介于领域模型和数据模型之间，主要用于聚合的持久化和检索。它隔离了领域模型和数据模型，以便我们关注于领域模型而不需要考虑如何进行持久化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如保存用户，需要将用户和角色一起保存，也就是创建用户的同时，需要新建用户的角色权限，这个可以直接全部放到仓储中：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; AuthorizeDO &lt;span&gt;save&lt;/span&gt;&lt;span&gt;(AuthorizeDO user)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    UserPO userPo = userConverter.toUserPo(user);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(Objects.isNull(user.getUserId())){&lt;br/&gt;        userMapper.insert(userPo);&lt;br/&gt;        user.setUserId(userPo.getId());&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        userMapper.updateById(userPo);&lt;br/&gt;        userRoleMapper.delete(Wrappers.&amp;lt;UserRolePO&amp;gt;lambdaQuery()&lt;br/&gt;                .eq(UserRolePO::getUserId, user.getUserId()));&lt;br/&gt;    }&lt;br/&gt;    List&amp;lt;UserRolePO&amp;gt; userRolePos = userConverter.toUserRolePo(user);&lt;br/&gt;    userRolePos.forEach(userRoleMapper::insert);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.query(user.getUserId());&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;仓储对外暴露的接口如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// 用户领域仓储&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;interface&lt;/span&gt; &lt;span&gt;UserRepository&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// 删除&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;void&lt;/span&gt; &lt;span&gt;delete&lt;/span&gt;&lt;span&gt;(Long userId)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;// 查询&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;AuthorizeDO &lt;span&gt;query&lt;/span&gt;&lt;span&gt;(Long userId)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;// 保存&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;AuthorizeDO &lt;span&gt;save&lt;/span&gt;&lt;span&gt;(AuthorizeDO user)&lt;/span&gt;&lt;/span&gt;;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基础服务层不仅仅包括资源库，与第三方的调用，都需要放到该层，Demo 中没有该示例，我们可以看一个小米内部具体的实际项目，他把第三方的调用放到了 remote 目录中：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9962121212121212&quot; data-type=&quot;png&quot; data-w=&quot;528&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4gPYETyldgWBibEwayiaHvUpqlrlrMYEx1AKp66NKGAwrA6PWKib1LgCic2w/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.5 领域层&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.5.1 聚合&amp;amp;聚合根&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们有用户和角色两个实体，可以将用户、角色和两者关系进行聚合，然后用户就是聚合根，聚合之后的属性，我们称之为“权限”。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于地址 Address，目前是作为字段属性存储到 DB 中，如果对地址无需进行检索，可以把地址作为“值对象”进行存储，即把地址序列化为 Json 存，存储到 DB 的一个字段中。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;AuthorizeDO&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// 用户ID&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Long userId;&lt;br/&gt;    &lt;span&gt;// 用户名&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; String userName;&lt;br/&gt;    &lt;span&gt;// 真实姓名&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; String realName;&lt;br/&gt;    &lt;span&gt;// 手机号&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; String phone;&lt;br/&gt;    &lt;span&gt;// 密码&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; String password;&lt;br/&gt;    &lt;span&gt;// 用户单位&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; UnitDTO unit;&lt;br/&gt;    &lt;span&gt;// 用户地址&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; AddressDTO address;&lt;br/&gt;    &lt;span&gt;// 用户角色&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; List&amp;lt;RoleDTO&amp;gt; roles;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.5.2 领域服务&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Demo中的领域服务比较薄，通过单位ID后去获取单位名称，构建单位信息：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Service&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;AuthorizeDomainServiceImpl&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;AuthorizeDomainService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;// 设置单位信息&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;associatedUnit&lt;/span&gt;&lt;span&gt;(AuthorizeDO authorizeDO)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        String unitName = &lt;span&gt;&quot;武汉小米&quot;&lt;/span&gt;;&lt;span&gt;// &lt;span&gt;TODO:&lt;/span&gt; 通过第三方获取&lt;/span&gt;&lt;br/&gt;        authorizeDO.getUnit().setUnitName(unitName);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们其实可以把领域服务再进一步抽象，可以抽象出领域能力，通过这些领域能力去构建应用层逻辑，比如账号相关的领域能力可以包括授权领域能力、身份认证领域能力等，这样每个领域能力相对独立，就不会全部揉到一个文件中，下面是实际项目的领域层截图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.796875&quot; data-type=&quot;png&quot; data-w=&quot;512&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4gmkUttpBicdc9jg9iaKqYWqL1VQG4mJ8BFEgxZXpqCOaHyofUwqOpENibg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4.5.3 领域事件&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;领域事件 = 事件发布 + 事件存储 + 事件分发 + 事件处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个 Demo 中，对领域事件的处理非常简单，还是一个应用内部的领域事件，就是每次执行一次具体的操作时，把行为记录下来。Demo 中没有记录事件的库表，事件的分发还是同步的方式，所以 Demo 中的领域事件还不完善，后面我会再继续完善 Demo 中的领域事件，通过 Java 消息机制实现解耦，甚至可以借助消息队列，实现异步。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 领域事件基类&lt;br/&gt; *&lt;br/&gt; * &lt;span&gt;@author&lt;/span&gt; louzai&lt;br/&gt; * &lt;span&gt;@since&lt;/span&gt; 2021/11/22&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Getter&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Setter&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@NoArgsConstructor&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;abstract&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;BaseDomainEvent&lt;/span&gt;&amp;lt;&lt;span&gt;T&lt;/span&gt;&amp;gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;Serializable&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;long&lt;/span&gt; serialVersionUID = &lt;span&gt;1465328245048581896L&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 发生时间&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; LocalDateTime occurredOn;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * 领域事件数据&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; T data;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;BaseDomainEvent&lt;/span&gt;&lt;span&gt;(T data)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.data = data;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.occurredOn = LocalDateTime.now();&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;/**&lt;br/&gt; * 用户新增领域事件&lt;br/&gt; *&lt;br/&gt; * &lt;span&gt;@author&lt;/span&gt; louzai&lt;br/&gt; * &lt;span&gt;@since&lt;/span&gt; 2021/11/20&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;UserCreateEvent&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;BaseDomainEvent&lt;/span&gt;&amp;lt;&lt;span&gt;AuthorizeDO&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;UserCreateEvent&lt;/span&gt;&lt;span&gt;(AuthorizeDO user)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;super&lt;/span&gt;(user);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;/**&lt;br/&gt; * 领域事件发布实现类&lt;br/&gt; *&lt;br/&gt; * &lt;span&gt;@author&lt;/span&gt; louzai&lt;br/&gt; * &lt;span&gt;@since&lt;/span&gt; 2021/11/20&lt;br/&gt; */&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Component&lt;/span&gt;&lt;br/&gt;&lt;span&gt;@Slf&lt;/span&gt;4j&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;DomainEventPublisherImpl&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;DomainEventPublisher&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Autowired&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; ApplicationEventPublisher applicationEventPublisher;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;publishEvent&lt;/span&gt;&lt;span&gt;(BaseDomainEvent event)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        log.debug(&lt;span&gt;&quot;发布事件,event:{}&quot;&lt;/span&gt;, GsonUtil.gsonToString(event));&lt;br/&gt;        applicationEventPublisher.publishEvent(event);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.4 应用层&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用层就非常好理解了，只负责简单的逻辑编排，比如创建用户授权：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Transactional&lt;/span&gt;(rollbackFor = Exception&lt;span&gt;.&lt;span&gt;class&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;createUserAuthorize&lt;/span&gt;(&lt;span&gt;UserRoleDTO&lt;/span&gt; &lt;span&gt;userRoleDTO&lt;/span&gt;)&lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;// DTO转为DO&lt;/span&gt;&lt;br/&gt;    AuthorizeDO authorizeDO = userApplicationConverter.toAuthorizeDo(userRoleDTO);&lt;br/&gt;    &lt;span&gt;// 关联单位单位信息&lt;/span&gt;&lt;br/&gt;    authorizeDomainService.associatedUnit(authorizeDO);&lt;br/&gt;    &lt;span&gt;// 存储用户&lt;/span&gt;&lt;br/&gt;    AuthorizeDO saveAuthorizeDO = userRepository.save(authorizeDO);&lt;br/&gt;    &lt;span&gt;// 发布用户新建的领域事件&lt;/span&gt;&lt;br/&gt;    domainEventPublisher.publishEvent(&lt;span&gt;new&lt;/span&gt; UserCreateEvent(saveAuthorizeDO));&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查询用户授权信息：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;&lt;span&gt;public&lt;/span&gt; UserRoleDTO &lt;span&gt;queryUserAuthorize&lt;/span&gt;&lt;span&gt;(Long userId)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;      &lt;span&gt;// 查询用户授权领域数据&lt;/span&gt;&lt;br/&gt;      AuthorizeDO authorizeDO = userRepository.query(userId);&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (Objects.isNull(authorizeDO)) {&lt;br/&gt;          &lt;span&gt;throw&lt;/span&gt; ValidationException.of(&lt;span&gt;&quot;UserId is not exist.&quot;&lt;/span&gt;, &lt;span&gt;null&lt;/span&gt;);&lt;br/&gt;      }&lt;br/&gt;      &lt;span&gt;// DO转DTO&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;return&lt;/span&gt; userApplicationConverter.toAuthorizeDTO(authorizeDO);&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;细心的同学可以发现，我们应用层和领域层，通过 DTO 和 DO 进行数据转换。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.5 用户接口层&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后就是提供 API 接口：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;@GetMapping&lt;/span&gt;(&lt;span&gt;&quot;/query&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; Result&amp;lt;UserAuthorizeVO&amp;gt; &lt;span&gt;query&lt;/span&gt;&lt;span&gt;(@RequestParam(&lt;span&gt;&quot;userId&quot;&lt;/span&gt;)&lt;/span&gt; Long userId)&lt;/span&gt;{&lt;br/&gt;    UserRoleDTO userRoleDTO = authrizeApplicationService.queryUserAuthorize(userId);&lt;br/&gt;    Result&amp;lt;UserAuthorizeVO&amp;gt; result = &lt;span&gt;new&lt;/span&gt; Result&amp;lt;&amp;gt;();&lt;br/&gt;    result.setData(authorizeConverter.toVO(userRoleDTO));&lt;br/&gt;    result.setCode(BaseResult.CODE_SUCCESS);&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; result;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;@PostMapping&lt;/span&gt;(&lt;span&gt;&quot;/save&quot;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; Result&amp;lt;Object&amp;gt; &lt;span&gt;create&lt;/span&gt;&lt;span&gt;(@RequestBody AuthorizeCreateReq authorizeCreateReq)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;    authrizeApplicationService.createUserAuthorize(authorizeConverter.toDTO(authorizeCreateReq));&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; Result.ok(BaseResult.INSERT_SUCCESS);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据的交互，包括入参、DTO 和 VO，都需要对数据进行转换。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.6 项目运行&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;新建库表：通过文件 &quot;ddd-interface/ddd-api/src/main/resources/init.sql&quot; 新建库表。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;修改 SQL 配置：修改 &quot;ddd-interface/ddd-api/src/main/resources/application.yml&quot; 的数据库配置。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;启动服务：直接启动服务即可。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;测试用例：&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;请求 URL：http://127.0.0.1:8087/api/user/save&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Post body：{&quot;userName&quot;:&quot;louzai&quot;,&quot;realName&quot;:&quot;楼&quot;,&quot;phone&quot;:13123676844,&quot;password&quot;:&quot;***&quot;,&quot;unitId&quot;:2,&quot;province&quot;:&quot;湖北省&quot;,&quot;city&quot;:&quot;鄂州市&quot;,&quot;county&quot;:&quot;葛店开发区&quot;,&quot;roles&quot;:[{&quot;roleId&quot;:2}]}&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.7 项目地址&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DDD Demo 代码已经上传到 GitHub 中：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;https://github.com/lml200701158/ddd-framework&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;或者通过下面命令直接获取：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;git &lt;span&gt;clone&lt;/span&gt; git@github.com:lml200701158/ddd-framework.git&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. 结语&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;谈谈我对 DDD 的理解，我觉得 DDD 不像一门技术，我理解的技术比如高并发、缓存、消息队列等，&lt;strong&gt;DDD 更像是一项软技能，一种方法论，包含了很多设计理念。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这篇文章写于去年，所以当时对 DDD 理解的其实还不够深入，今年做过一些 DDD 的项目，所以现在对 DDD 的理解又加深了几分。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家不要认为，掌握了一些概念，以及 DDD 的基本思想，就掌握了 DDD，然后做项目时，照葫芦画瓢，这样你会死的很惨！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;只掌握 DDD 表面的东西，其实是不够的，&lt;strong&gt;我觉得 DDD 最复杂的地方，其实是在它的领域设计部分&lt;/strong&gt;，项目启动前，你一定要设计各个领域对象，以及它们直接的交互关系。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如我们之前做过一个项目，因为这块没有做好，大家一边写代码，一边还在思考，这个领域对象该如何构造，严重影响开发效率，&lt;strong&gt;最后又不得不回退到 MVC 的模式。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不要为了炫技，啥都要搞个 DDD，两者如何选择：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;MVC&lt;/strong&gt;：上来就可以开干，短平快，&lt;strong&gt;前期用起来很香，整体开发效率也更高&lt;/strong&gt;，所以对于紧急，或者不那么重要的项目，我会直接用 MVC 怼，不好的地方就是，后面会越来越复杂，可能最后就是一坨屎山，&lt;strong&gt;但是很多时候，比如老板进度催的紧，我哪想到那么多以后呢？&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;DDD&lt;/strong&gt;：前期需要花大量时间设计好领域模型，&lt;strong&gt;对于一些基础组件，或者一些核心服务，如果对象模型非常复杂，建议采用 DDD&lt;/strong&gt;，前期可能会稍微痛苦一些，但是后期维护起来会非常方便。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6. 参考文章&lt;/h1&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;极客时间：https://time.geekbang.org/column/intro/100037301?tab=catalog&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一文带你落地DDD：https://juejin.cn/post/7004002483601145863&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;领域驱动设计在互联网业务开发中的实践：https://tech.meituan.com/2017/12/22/ddd-in-practice.html&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;浅析VO、DTO、DO、PO：https://developer.aliyun.com/article/269676&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;「文章汇总」&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;汇总目录&lt;/strong&gt;：&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg3OTU5NzQ1Mw==&amp;amp;mid=2247487713&amp;amp;idx=1&amp;amp;sn=9661f1520e6237d18536ccf496f8793a&amp;amp;chksm=cf035203f874db157eb05a3909725daeadd4625b8702f358abe9d77dd52fefd08c50279ce771&amp;amp;token=1760780777&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;楼仔原创精选荟萃&lt;/a&gt; 🔥🔥🔥&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;推荐理由&lt;/strong&gt;：一百多篇原创好文，近 2 年的坚持，&lt;strong&gt;无论你是小白，还是资深大佬，总能找到属于你自己的段位。&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg3OTU5NzQ1Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLFTdSvrrpJnCZ0Fp5Z1wKkhKFQBxTaFfxOpib3E2zgUu39BFbsBqqJbEpxicUvz3H6csoL2JQ9EP1yQ/0?wx_fmt=png&quot; data-nickname=&quot;楼仔&quot; data-alias=&quot;&quot; data-signature=&quot;7 年一线大厂经验（百度/小米/滴滴），带你进大厂，不限于Java、Go、高并发、架构选型、消息队列、设计模式、MySQL、Redis、DDD、项目管理、软技能等。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;「学习交流」&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前我们已经成立多个技术交流群！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;长按二维码，回复 &lt;strong&gt;「加群」&lt;/strong&gt;，欢迎一起学习交流哈~~ 👏🏻👏🏻👏🏻&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5726210350584308&quot; data-type=&quot;png&quot; data-w=&quot;1198&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/sXFqMxQoVLESpJibWtYnlHsuuI2wOYE4ghmO8iaBZQUKAsgOicu9oDImWqhd3OGic2Pm8esPd0PLWBrKXGUbl6InDQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;尽信书则不如无书，因个人能力有限，难免有疏漏和错误之处，如发现 bug 或者有更好的建议，欢迎批评指正，不吝感激。&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>