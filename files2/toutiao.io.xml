<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>f3f40b796d0af43fe3a58971be2bf82d</guid>
<title>离线安装 Kubernetes 1.18.3 版本，万字教程，企业级部署！</title>
<link>https://toutiao.io/k/ey91eet</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;离线安装 Kubernetes 1.18.3 版本&lt;/h3&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;目录&lt;/h2&gt;&lt;h3/&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;一、Kubernetes 简介&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.Kubernetes 架构设计图&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.Kubernetes 常见组件介绍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;二、Kubernetes 二进制方式安装&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;1.创建 CA 证书和密钥&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.安装 ETCD 组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、创建 ETCD 证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、生成证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、创建启动脚本&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、启动 ETCD&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;3.安装 Flannel 网络插件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、创建 Flannel 证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、生成证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、编写启动脚本&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、启动并验证&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;4.安装 Docker 服务&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;5.安装 Kubectl 服务&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、创建 Admin 证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、生成证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、创建 Kubeconfig 文件&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、创建 Kubectl 配置文件，并配置命令补全工具&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;三、安装 Kubenetes 相关组件&lt;/strong&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、安装 Kube-APIServer 组件&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、创建 Kubernetes 证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、生成证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、配置 Kube-APIServer 审计&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、配置 Metrics-Server&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、创建启动脚本&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;6、启动 Kube-APIServer 并验证&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2.安装 Controller Manager 组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、创建 Controller Manager 证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、生成证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、创建 Kubeconfig 文件&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、创建启动脚本&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、启动并验证&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;3.安装 Kube-Scheduler 组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、创建 Kube-Scheduler 证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、生成证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、创建 Kubeconfig 文件&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、创建 Kube-Scheduler 配置文件&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、创建启动脚本&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;6、启动并验证&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;4.安装 Kubelet 组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、创建 Kubelet 启动脚本&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、启动并验证&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、Approve CSR 请求&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、手动 Approve Server Cert Csr&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、Kubelet API 接口配置&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;5.安装 Kube-Proxy 组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、创建 Kube-Proxy 证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、生成证书和密钥&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、创建 Kubeconfig 文件&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、创建 Kube-Proxy 配置文件&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、创建启动脚本&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、启动并验证&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;6.安装 CoreDNS 插件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、修改 Coredns 配置&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、创建 Coredns 并启动&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、验证&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;7.安装 Dashboard 仪表盘&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、创建证书&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、修改 Dashboard 配置&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、验证&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI4NTM1NDgwNw==&amp;amp;mid=2247500365&amp;amp;idx=1&amp;amp;sn=7abfd8b30427d4ac15bb351c3dbb640c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;注 意 文末有：7701页互联网大厂面试题 &quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;注 意&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzI4NTM1NDgwNw==&amp;amp;mid=2247500365&amp;amp;idx=1&amp;amp;sn=7abfd8b30427d4ac15bb351c3dbb640c&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;注 意 文末有：7701页互联网大厂面试题 &quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;&lt;strong&gt; 文末有：7701页互联网大厂面试题 &lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;一、Kubernetes 简介&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kubernetes，也称为 K8s，是由 Google 公司开源的容器集群管理系统，在 Docker 技术的基础上，为容器化的应用提供部署运行、资源调度、服务发现和动态伸缩等一系列完整功能，提高了大规模容器集群管理的便捷性。Kubernetes 官方&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;1.Kubernetes 架构设计图&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kubernetes 是由一个 Master 和多个 Node 组成，Master 通过 API 提供服务，并接收 Kubectl 发送过来的请求来调度管理整个集群。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kubectl 是 K8s 平台的管理命令。&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5254110612855007&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjCafjTHnCPZq0REHmHBc8on8C9K9VfeJMyxtltMbZWczroITAzLWExQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1338&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;2.Kubernetes 常见组件介绍&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;APIServer：&lt;/strong&gt; 所有服务的统一访问入口，并提供认证、授权、访问控制、API 注册和发现等机制；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Controller Manager（控制器）：&lt;/strong&gt; 主要就是用来维持 Pod 的一个副本数，比如故障检测、自动扩展、滚动更新等；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Scheduler（调度器）：&lt;/strong&gt; 主要就是用来分配任务到合适的节点上（资源调度）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;ETCD：&lt;/strong&gt; 键值对数据库，存放了 K8s 集群中所有的重要信息（持久化）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Kubelet：&lt;/strong&gt; 直接和容器引擎交互，用来维护容器的一个生命周期；同时也负责 Volume（CVI）和网络（CNI）的管理；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Kube-Porxy：&lt;/strong&gt; 用于将规则写入至 iptables 或 IPVS 来实现服务的映射访问；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;其它组件：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;CoreDNS：主要就是用来给 K8s 的 Service 提供一个域名和 IP 的对应解析关系。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Dashboard：主要就是用来给 K8s 提供一个 B/S 结构的访问体系（即，我们可以通过 Web 界面来对 K8s 进行管理）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Ingress Controller：主要就是用来实现 HTTP 代理（七层），官方的 Service 仅支持 TCP\UDP 代理（四层）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Prometheus：主要就是用来给 K8s 提供一个监控能力，使我们能够更加清晰的看到 K8s 相关组件及 Pod 的使用情况。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;ELK：主要就是用来给 K8s 提供一个日志分析平台。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Kubernetes 工作原理：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用户可以通过 Kubectl 命令来提交需要运行的 Docker Container 到 K8s 的 APIServer 组件中；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;接着 APIServer 接收到用户提交的请求后，会将请求存储到 ETCD 这个键值对存储中；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;然后由 Controller Manager 组件来创建出用户定义的控制器类型（Pod ReplicaSet Deployment DaemonSet 等）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;然后 Scheduler 组件会对 ETCD 进行扫描，并将用户需要运行的 Docker Container 分配到合适的主机上；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;最后由 Kubelet 组件来和 Docker 容器进行交互，创建、删除、停止容器等一系列操作。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;kube-proxy&lt;/code&gt; 主要就是为 Service 提供服务的，来实现内部从 Pod 到 Service 和外部 NodePort 到 Service 的访问。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;二、Kubernetes 二进制方式安装&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们下面的安装方式就是单纯的使用二进制方式安装，并没有对 Kube-APIServer 组件进行高可用配置，因为像我们安装 K8s 的话，其实主要还是为了学习 K8s，通过 K8s 来完成某些事情，所以并不需要关心高可用这块的东西。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要是对Kubernetes 做高可用的话，其实并不难，像一些在云上的 K8s，一般都是通过 SLB 来代理到两台不同服务器上，来实现高可用；而像云下的 K8s，基本上也是如上，我们可以通过 Keepalived 加 Nginx 来实现高可用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;准备工作：&lt;/p&gt;&lt;table data-tool=&quot;mdnice编辑器&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt;主机名&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;操作系统&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;IP 地址&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;所需组件&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;code&gt;k8s-master01&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;CentOS 7.4&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;192.168.1.1&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;所有组件都安装 &lt;strong&gt;（合理利用资源）&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;code&gt;k8s-master02&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;CentOS 7.4&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;192.168.1.2&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;所有组件都安装&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;&lt;code&gt;k8s-node&lt;/code&gt;&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;CentOS 7.4&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;192.168.1.3&lt;/td&gt;&lt;td align=&quot;left&quot;&gt;&lt;code&gt;docker&lt;/code&gt; &lt;code&gt;kubelet&lt;/code&gt; &lt;code&gt;kube-proxy&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）在各个节点上配置主机名，并配置 Hosts 文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@ddkk&lt;/span&gt;.com ~]# hostnamectl set-hostname k8s-master01&lt;br/&gt;[root&lt;span&gt;@ddkk&lt;/span&gt;.com ~]# bash&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# cat &amp;lt;&amp;lt;END &amp;gt;&amp;gt; /etc/hosts&lt;br/&gt;&lt;span&gt;192.168.1.1&lt;/span&gt; k8s-master01&lt;br/&gt;&lt;span&gt;192.168.1.2&lt;/span&gt; k8s-master02&lt;br/&gt;&lt;span&gt;192.168.1.3&lt;/span&gt; k8s-node01&lt;br/&gt;END&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）在&lt;code&gt;k8s-master01&lt;/code&gt; 上配置 SSH 密钥对，并将公钥发送给其余主机&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# ssh-keygen -t rsa            # 三连回车&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# ssh-copy-id root@&lt;span&gt;192.168.1.1&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# ssh-copy-id root@&lt;span&gt;192.168.1.2&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# ssh-copy-id root@&lt;span&gt;192.168.1.3&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）编写 K8s 初始环境脚本&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# vim k8s-init.sh&lt;br/&gt;#!/bin/bash&lt;br/&gt;#****************************************************************#&lt;br/&gt;# ScriptName: k8s-init.sh&lt;br/&gt;# Initialize the machine. This needs to be executed on every machine.&lt;br/&gt;# Mkdir k8s directory&lt;br/&gt;yum -y install wget ntpdate &amp;amp;&amp;amp; ntpdate ntp1.aliyun.com&lt;br/&gt;wget -O /etc/yum.repos.d/CentOS-Base.repo https:&lt;span&gt;//mirrors.aliyun.com/repo/Centos-7.repo&lt;/span&gt;&lt;br/&gt;yum -y install epel-release&lt;br/&gt;mkdir -p /opt/k8s/bin/&lt;br/&gt;mkdir -p /data/k8s/docker&lt;br/&gt;mkdir -p /data/k8s/k8s&lt;br/&gt;# Disable the SELinux.&lt;br/&gt;swapoff -a&lt;br/&gt;sed -i &lt;span&gt;&#x27;/swap/s/^/#/&#x27;&lt;/span&gt; /etc/fstab&lt;br/&gt;# Turn off and disable the firewalld.&lt;br/&gt;systemctl stop firewalld&lt;br/&gt;systemctl disable firewalld&lt;br/&gt;# Modify related kernel parameters &amp;amp; Disable the swap.&lt;br/&gt;cat &amp;gt; /etc/sysctl.d/k8s.conf &amp;lt;&amp;lt; EOF&lt;br/&gt;net.ipv4.ip_forward = &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;net.bridge.bridge-nf-call-ip6tables = &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;net.bridge.bridge-nf-call-iptables = &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;net.ipv4.tcp_tw_recycle = &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;vm.swappiness = &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;vm.overcommit_memory = &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;vm.panic_on_oom = &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;net.ipv6.conf.all.disable_ipv6 = &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;EOF&lt;br/&gt;sysctl -p /etc/sysctl.d/k8s.conf &amp;gt;&amp;amp; /dev/&lt;span&gt;null&lt;/span&gt;&lt;br/&gt;# Add ipvs modules&lt;br/&gt;cat &amp;gt; /etc/sysconfig/modules/ipvs.modules &amp;lt;&amp;lt; EOF&lt;br/&gt;#!/bin/bash&lt;br/&gt;modprobe -- ip_vs&lt;br/&gt;modprobe -- ip_vs_rr&lt;br/&gt;modprobe -- ip_vs_wrr&lt;br/&gt;modprobe -- ip_vs_sh&lt;br/&gt;modprobe -- br_netfilter&lt;br/&gt;modprobe -- nf_conntrack&lt;br/&gt;modprobe -- nf_conntrack_ipv4&lt;br/&gt;EOF&lt;br/&gt;chmod &lt;span&gt;755&lt;/span&gt; /etc/sysconfig/modules/ipvs.modules&lt;br/&gt;source /etc/sysconfig/modules/ipvs.modules&lt;br/&gt;# Install rpm&lt;br/&gt;yum install -y conntrack ntpdate ntp ipvsadm ipset jq iptables curl sysstat libseccomp wget gcc gcc-c++ make libnl libnl-devel libnfnetlink-devel openssl-devel vim openssl-devel bash-completion&lt;br/&gt;# ADD k8s bin to PATH&lt;br/&gt;echo &lt;span&gt;&#x27;export PATH=/opt/k8s/bin:$PATH&#x27;&lt;/span&gt; &amp;gt;&amp;gt; /root/.bashrc &amp;amp;&amp;amp; chmod +x /root/.bashrc &amp;amp;&amp;amp; source /root/.bashrc&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# bash k8s-init.sh&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4）配置环境变量&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# vim environment.sh&lt;br/&gt;#!/bin/bash&lt;br/&gt;# 生成 EncryptionConfig 所需的加密 Key&lt;br/&gt;export ENCRYPTION_KEY=$(head -c &lt;span&gt;32&lt;/span&gt; /dev/urandom | base64)&lt;br/&gt;&lt;br/&gt;# 集群 Master 机器 IP 数组&lt;br/&gt;export MASTER_IPS=(&lt;span&gt;192.168.1.1&lt;/span&gt; &lt;span&gt;192.168.1.2&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;# 集群 Master IP 对应的主机名数组&lt;br/&gt;export MASTER_NAMES=(k8s-master01 k8s-master02)&lt;br/&gt;&lt;br/&gt;# 集群 Node 机器 IP 数组&lt;br/&gt;export NODE_IPS=(&lt;span&gt;192.168.1.3&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;# 集群 Node IP 对应的主机名数组&lt;br/&gt;export NODE_NAMES=(k8s-node01)&lt;br/&gt;&lt;br/&gt;# 集群所有机器 IP 数组&lt;br/&gt;export ALL_IPS=(&lt;span&gt;192.168.1.1&lt;/span&gt; &lt;span&gt;192.168.1.2&lt;/span&gt; &lt;span&gt;192.168.1.3&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;# 集群所有 IP 对应的主机名数组&lt;br/&gt;export ALL_NAMES=(k8s-master01 k8s-master02 k8s-node01)&lt;br/&gt;&lt;br/&gt;# Etcd 集群服务地址列表&lt;br/&gt;export ETCD_ENDPOINTS=&lt;span&gt;&quot;https://192.168.1.1:2379,https://192.168.1.2:2379&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# Etcd 集群间通信的 IP 和端口&lt;br/&gt;export ETCD_NODES=&lt;span&gt;&quot;k8s-master01=https://192.168.1.1:2380,k8s-master02=https://192.168.1.2:2380&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# Kube-apiserver 的 IP 和端口&lt;br/&gt;export KUBE_APISERVER=&lt;span&gt;&quot;https://192.168.1.1:6443&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# 节点间互联网络接口名称&lt;br/&gt;export IFACE=&lt;span&gt;&quot;ens32&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# Etcd 数据目录&lt;br/&gt;export ETCD_DATA_DIR=&lt;span&gt;&quot;/data/k8s/etcd/data&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# Etcd WAL 目录. 建议是 SSD 磁盘分区. 或者和 ETCD_DATA_DIR 不同的磁盘分区&lt;br/&gt;export ETCD_WAL_DIR=&lt;span&gt;&quot;/data/k8s/etcd/wal&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# K8s 各组件数据目录&lt;br/&gt;export K8S_DIR=&lt;span&gt;&quot;/data/k8s/k8s&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# Docker 数据目录&lt;br/&gt;export DOCKER_DIR=&lt;span&gt;&quot;/data/k8s/docker&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;## 以下参数一般不需要修改&lt;br/&gt;# TLS Bootstrapping 使用的 Token. 可以使用命令 head -c &lt;span&gt;16&lt;/span&gt; /dev/urandom | od -An -t x | tr -d &lt;span&gt;&#x27; &#x27;&lt;/span&gt; 生成&lt;br/&gt;BOOTSTRAP_TOKEN=&lt;span&gt;&quot;41f7e4ba8b7be874fcff18bf5cf41a7c&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# 最好使用当前未用的网段来定义服务网段和 Pod 网段&lt;br/&gt;# 服务网段. 部署前路由不可达. 部署后集群内路由可达(kube-proxy 保证)&lt;br/&gt;SERVICE_CIDR=&lt;span&gt;&quot;10.20.0.0/16&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# Pod 网段. 建议 /&lt;span&gt;16&lt;/span&gt; 段地址. 部署前路由不可达. 部署后集群内路由可达(flanneld 保证)&lt;br/&gt;CLUSTER_CIDR=&lt;span&gt;&quot;10.10.0.0/16&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# 服务端口范围 (NodePort Range)&lt;br/&gt;export NODE_PORT_RANGE=&lt;span&gt;&quot;1-65535&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# Flanneld 网络配置前缀&lt;br/&gt;export FLANNEL_ETCD_PREFIX=&lt;span&gt;&quot;/kubernetes/network&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# Kubernetes 服务 IP (一般是 SERVICE_CIDR 中第一个 IP)&lt;br/&gt;export CLUSTER_KUBERNETES_SVC_IP=&lt;span&gt;&quot;10.20.0.1&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# 集群 DNS 服务 IP (从 SERVICE_CIDR 中预分配)&lt;br/&gt;export CLUSTER_DNS_SVC_IP=&lt;span&gt;&quot;10.20.0.254&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# 集群 DNS 域名(末尾不带点号)&lt;br/&gt;export CLUSTER_DNS_DOMAIN=&lt;span&gt;&quot;cluster.local&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;# 将二进制目录 /opt/k8s/bin 加到 PATH 中&lt;br/&gt;export PATH=/opt/k8s/bin:$PATH&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;上面像那些 IP 地址和网卡啥的，你们要改成自身对应的信息。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# chmod +x environment.sh &amp;amp;&amp;amp; source environment.sh&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面的这些操作，我们只需要在 &lt;code&gt;k8s-master01&lt;/code&gt; 主机上操作即可（因为下面我们会通过 &lt;code&gt;for&lt;/code&gt; 循环来发送到其余主机上）&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;1.创建 CA 证书和密钥&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为Kubernetes 系统的各个组件需要使用 TLS 证书对其通信加密以及授权认证，所以我们需要在安装前先生成相关的 TLS 证书；我们可以使用 &lt;code&gt;openssl&lt;/code&gt; &lt;code&gt;cfssl&lt;/code&gt; &lt;code&gt;easyrsa&lt;/code&gt; 来生成 Kubernetes 的相关证书，我们下面使用的是 &lt;code&gt;cfssl&lt;/code&gt; 方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）安装 &lt;code&gt;cfssl&lt;/code&gt; 工具集&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# mkdir -p /opt/k8s/cert&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# curl -L https:&lt;span&gt;//pkg.cfssl.org/R1.2/cfssl_linux-amd64 -o /opt/k8s/bin/cfssl&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# curl -L https:&lt;span&gt;//pkg.cfssl.org/R1.2/cfssljson_linux-amd64 -o /opt/k8s/bin/cfssljson&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# curl -L https:&lt;span&gt;//pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 -o /opt/k8s/bin/cfssl-certinfo&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# chmod +x /opt/k8s/bin&lt;span&gt;/*&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2）创建根证书配置文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# mkdir -p /opt/k8s/work&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# cd /opt/k8s/work/&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; ca-config.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;signing&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;        &lt;span&gt;&quot;default&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;            &lt;span&gt;&quot;expiry&quot;&lt;/span&gt;: &lt;span&gt;&quot;876000h&quot;&lt;/span&gt;&lt;br/&gt;        },&lt;br/&gt;        &lt;span&gt;&quot;profiles&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;            &lt;span&gt;&quot;kubernetes&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;                &lt;span&gt;&quot;expiry&quot;&lt;/span&gt;: &lt;span&gt;&quot;876000h&quot;&lt;/span&gt;,&lt;br/&gt;                &lt;span&gt;&quot;usages&quot;&lt;/span&gt;: [&lt;br/&gt;                    &lt;span&gt;&quot;signing&quot;&lt;/span&gt;,&lt;br/&gt;                    &lt;span&gt;&quot;key encipherment&quot;&lt;/span&gt;,&lt;br/&gt;                    &lt;span&gt;&quot;server auth&quot;&lt;/span&gt;,&lt;br/&gt;                    &lt;span&gt;&quot;client auth&quot;&lt;/span&gt;&lt;br/&gt;                ]&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;signing：表示当前证书可用于签名其它证书；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;server auth：表示 Client 可以用这个 CA 对 Server 提供的证书进行校验；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;client auth：表示 Server 可以用这个 CA 对 Client 提供的证书进行验证；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&quot;expiry&quot;: &quot;876000h&quot;：表示当前证书有效期为 100 年；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3）创建根证书签名请求文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; ca-csr.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span&gt;&quot;kubernetes&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;key&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;        &lt;span&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span&gt;&quot;rsa&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;2048&lt;/span&gt;&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&quot;names&quot;&lt;/span&gt;: [&lt;br/&gt;        {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;            &lt;span&gt;&quot;C&quot;&lt;/span&gt;: &lt;span&gt;&quot;CN&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;L&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;O&quot;&lt;/span&gt;: &lt;span&gt;&quot;k8s&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;OU&quot;&lt;/span&gt;: &lt;span&gt;&quot;System&quot;&lt;/span&gt;&lt;br/&gt;        }&lt;br/&gt;    ],&lt;br/&gt;    &lt;span&gt;&quot;ca&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;        &lt;span&gt;&quot;expiry&quot;&lt;/span&gt;: &lt;span&gt;&quot;876000h&quot;&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;CN：Kube-APIServer 将会把这个字段作为请求的用户名，来让浏览器验证网站是否合法。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;C：&lt;strong&gt;国家&lt;/strong&gt;；ST：&lt;strong&gt;州，省&lt;/strong&gt;；L：&lt;strong&gt;地区，城市&lt;/strong&gt;；O：&lt;strong&gt;组织名称，公司名称&lt;/strong&gt;；OU：&lt;strong&gt;组织单位名称，公司部门。&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4）生成 CA 密钥 &lt;code&gt;ca-key.pem&lt;/code&gt; 和证书 &lt;code&gt;ca.pem&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cfssl gencert -initca ca-csr.json | cfssljson -bare ca&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;生成证书后，因为 Kubernetes 集群需要 &lt;strong&gt;双向 TLS 认证&lt;/strong&gt;，所以我们可以将生成的文件传送到所有主机中。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5）使用 &lt;code&gt;for&lt;/code&gt; 循环来遍历数组，将配置发送给所有主机&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;mkdir -p /etc/kubernetes/cert&quot;&lt;/span&gt;&lt;br/&gt;    scp ca*.pem ca-config.json root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/etc/kubernetes/cert&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;2.安装 ETCD 组件&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ETCD 是基于 Raft 的分布式 &lt;code&gt;key-value&lt;/code&gt; 存储系统，由 CoreOS 开发，常用于服务发现、共享配置以及并发控制（如 &lt;code&gt;leader&lt;/code&gt; 选举、分布式锁等）；Kubernetes 主要就是用 ETCD 来存储所有的运行数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下载ETCD&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# wget https:&lt;span&gt;//github.com/etcd-io/etcd/releases/download/v3.3.22/etcd-v3.3.22-linux-amd64.tar.gz&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# tar -zxf etcd-v3&lt;span&gt;.3.22&lt;/span&gt;-linux-amd64.tar.gz&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp etcd-v3&lt;span&gt;.3.22&lt;/span&gt;-linux-amd64/etcd* root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/opt/k8s/bin&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;chmod +x /opt/k8s/bin/*&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）创建 ETCD 证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; etcd-csr.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span&gt;&quot;etcd&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;hosts&quot;&lt;/span&gt;: [&lt;br/&gt;        &lt;span&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;192.168.1.1&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;192.168.1.2&quot;&lt;/span&gt;&lt;br/&gt;  ],&lt;br/&gt;    &lt;span&gt;&quot;key&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;        &lt;span&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span&gt;&quot;rsa&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;2048&lt;/span&gt;&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&quot;names&quot;&lt;/span&gt;: [&lt;br/&gt;        {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;            &lt;span&gt;&quot;C&quot;&lt;/span&gt;: &lt;span&gt;&quot;CN&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;L&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;O&quot;&lt;/span&gt;: &lt;span&gt;&quot;k8s&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;OU&quot;&lt;/span&gt;: &lt;span&gt;&quot;System&quot;&lt;/span&gt;&lt;br/&gt;        }&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;hosts：用来指定给 ETCD 授权的 IP 地址或域名列表。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2）生成证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cfssl gencert -ca=/opt/k8s/work/ca.pem -ca-key=/opt/k8s/work/ca-key.pem -config=/opt/k8s/work/ca-config.json -profile=kubernetes etcd-csr.json | cfssljson -bare etcd&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;mkdir -p /etc/etcd/cert&quot;&lt;/span&gt;&lt;br/&gt;    scp etcd*.pem root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/etcd/cert/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3）创建启动脚本&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; etcd.service.template &amp;lt;&amp;lt; EOF&lt;br/&gt;[Unit]&lt;br/&gt;Description=Etcd Server&lt;br/&gt;After=network.target&lt;br/&gt;After=network-online.target&lt;br/&gt;Wants=network-online.target&lt;br/&gt;Documentation=https:&lt;span&gt;//github.com/coreos&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Service]&lt;br/&gt;Type=notify&lt;br/&gt;WorkingDirectory=${&lt;br/&gt;   &lt;br/&gt;     ETCD_DATA_DIR}&lt;br/&gt;ExecStart=/opt/k8s/bin/etcd \\&lt;br/&gt;  --enable-v2=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --data-dir=${&lt;br/&gt;   &lt;br/&gt;     ETCD_DATA_DIR} \\&lt;br/&gt;  --wal-dir=${&lt;br/&gt;   &lt;br/&gt;     ETCD_WAL_DIR} \\&lt;br/&gt;  --name=##MASTER_NAME## \\&lt;br/&gt;  --cert-file=/etc/etcd/cert/etcd.pem \\&lt;br/&gt;  --key-file=/etc/etcd/cert/etcd-key.pem \\&lt;br/&gt;  --trusted-ca-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --peer-cert-file=/etc/etcd/cert/etcd.pem \\&lt;br/&gt;  --peer-key-file=/etc/etcd/cert/etcd-key.pem \\&lt;br/&gt;  --peer-trusted-ca-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --peer-client-cert-auth \\&lt;br/&gt;  --client-cert-auth \\&lt;br/&gt;  --listen-peer-urls=https:&lt;span&gt;//##MASTER_IP##:2380 \\&lt;/span&gt;&lt;br/&gt;  --initial-advertise-peer-urls=https:&lt;span&gt;//##MASTER_IP##:2380 \\&lt;/span&gt;&lt;br/&gt;  --listen-client-urls=https:&lt;span&gt;//##MASTER_IP##:2379,http://127.0.0.1:2379 \\&lt;/span&gt;&lt;br/&gt;  --advertise-client-urls=https:&lt;span&gt;//##MASTER_IP##:2379 \\&lt;/span&gt;&lt;br/&gt;  --initial-cluster-token=etcd-cluster-&lt;span&gt;0&lt;/span&gt; \\&lt;br/&gt;  --initial-cluster=${&lt;br/&gt;   &lt;br/&gt;     ETCD_NODES} \\&lt;br/&gt;  --initial-cluster-state=&lt;span&gt;new&lt;/span&gt; \\&lt;br/&gt;  --auto-compaction-mode=periodic \\&lt;br/&gt;  --auto-compaction-retention=&lt;span&gt;1&lt;/span&gt; \\&lt;br/&gt;  --max-request-bytes=&lt;span&gt;33554432&lt;/span&gt; \\&lt;br/&gt;  --quota-backend-bytes=&lt;span&gt;6442450944&lt;/span&gt; \\&lt;br/&gt;  --heartbeat-interval=&lt;span&gt;250&lt;/span&gt; \\&lt;br/&gt;  --election-timeout=&lt;span&gt;2000&lt;/span&gt;&lt;br/&gt;Restart=on-failure&lt;br/&gt;RestartSec=&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;LimitNOFILE=&lt;span&gt;65536&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Install]&lt;br/&gt;WantedBy=multi-user.target&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; (( A=&lt;span&gt;0&lt;/span&gt;; A &amp;lt; &lt;span&gt;2&lt;/span&gt;; A++ ))&lt;br/&gt;&lt;span&gt;do&lt;/span&gt;&lt;br/&gt;sed -e &lt;span&gt;&quot;s/##MASTER_NAME##/${MASTER_NAMES[A]}/&quot;&lt;/span&gt; -e &lt;span&gt;&quot;s/##MASTER_IP##/${MASTER_IPS[A]}/&quot;&lt;/span&gt; etcd.service.template &amp;gt; etcd-${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[A]}.service&lt;br/&gt;done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4）启动 ETCD&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp etcd-${&lt;br/&gt;   &lt;br/&gt;     master_ip}.service root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/systemd/system/etcd.service&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;mkdir -p ${ETCD_DATA_DIR} ${ETCD_WAL_DIR}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;systemctl daemon-reload &amp;amp;&amp;amp; systemctl enable etcd &amp;amp;&amp;amp; systemctl restart etcd&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看ETCD 当前的 Leader（领导）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# ETCDCTL_API=&lt;span&gt;3&lt;/span&gt; /opt/k8s/bin/etcdctl \&lt;br/&gt;-w table --cacert=/etc/kubernetes/cert/ca.pem \&lt;br/&gt;--cert=/etc/etcd/cert/etcd.pem \&lt;br/&gt;--key=/etc/etcd/cert/etcd-key.pem \&lt;br/&gt;--endpoints=${&lt;br/&gt;   &lt;br/&gt;     ETCD_ENDPOINTS} endpoint status&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2901155327342747&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjpq5FBsuQT8KKhc4muTOU5KnDaia8qrWLdjBACCPibHqgrvfd9B1qBk8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1558&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;3.安装 Flannel 网络插件&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Flannel 是一种基于 &lt;code&gt;overlay&lt;/code&gt; 网络的跨主机容器网络解决方案，也就是将 TCP 数据封装在另一种网络包里面进行路由转发和通信。Flannel 是使用 Go 语言开发的，主要就是用来让不同主机内的容器实现互联。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下载Flannel&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# mkdir flannel&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# wget https:&lt;span&gt;//github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# tar -zxf flannel-v0&lt;span&gt;.11.0&lt;/span&gt;-linux-amd64.tar.gz -C flannel&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp flannel/{&lt;br/&gt;   &lt;br/&gt;     flanneld,mk-docker-opts.sh} root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/opt/k8s/bin/&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;chmod +x /opt/k8s/bin/*&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）创建 Flannel 证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; flanneld-csr.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span&gt;&quot;flanneld&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;hosts&quot;&lt;/span&gt;: [],&lt;br/&gt;    &lt;span&gt;&quot;key&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;        &lt;span&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span&gt;&quot;rsa&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;2048&lt;/span&gt;&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&quot;names&quot;&lt;/span&gt;: [&lt;br/&gt;        {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;            &lt;span&gt;&quot;C&quot;&lt;/span&gt;: &lt;span&gt;&quot;CN&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;L&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;O&quot;&lt;/span&gt;: &lt;span&gt;&quot;k8s&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;OU&quot;&lt;/span&gt;: &lt;span&gt;&quot;System&quot;&lt;/span&gt;&lt;br/&gt;        }&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2）生成证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cfssl gencert -ca=/opt/k8s/work/ca.pem -ca-key=/opt/k8s/work/ca-key.pem -config=/opt/k8s/work/ca-config.json -profile=kubernetes flanneld-csr.json | cfssljson -bare flanneld&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;mkdir -p /etc/flanneld/cert&quot;&lt;/span&gt;&lt;br/&gt;    scp flanneld*.pem root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/etc/flanneld/cert&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置Pod 的网段信息&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# etcdctl \&lt;br/&gt;--endpoints=${&lt;br/&gt;   &lt;br/&gt;     ETCD_ENDPOINTS} \&lt;br/&gt;--ca-file=/opt/k8s/work/ca.pem \&lt;br/&gt;--cert-file=/opt/k8s/work/flanneld.pem \&lt;br/&gt;--key-file=/opt/k8s/work/flanneld-key.pem \&lt;br/&gt;mk ${&lt;br/&gt;   &lt;br/&gt;     FLANNEL_ETCD_PREFIX}/config &lt;span&gt;&#x27;{&quot;Network&quot;:&quot;&#x27;&lt;/span&gt;${&lt;br/&gt;   &lt;br/&gt;     CLUSTER_CIDR}&lt;span&gt;&#x27;&quot;, &quot;SubnetLen&quot;: 21, &quot;Backend&quot;: {&quot;Type&quot;: &quot;vxlan&quot;}}&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.27921279212792127&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjgSlWmXFYz7wZrTadCyRJjFxr5yWYaBR77puPiceue5IOxhO3SEzcibIA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1626&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3）编写启动脚本&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; flanneld.service &amp;lt;&amp;lt; EOF&lt;br/&gt;[Unit]&lt;br/&gt;Description=Flanneld overlay address etcd agent&lt;br/&gt;After=network.target&lt;br/&gt;After=network-online.target&lt;br/&gt;Wants=network-online.target&lt;br/&gt;After=etcd.service&lt;br/&gt;Before=docker.service&lt;br/&gt;&lt;br/&gt;[Service]&lt;br/&gt;Type=notify&lt;br/&gt;ExecStart=/opt/k8s/bin/flanneld \\&lt;br/&gt;  -etcd-cafile=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  -etcd-certfile=/etc/flanneld/cert/flanneld.pem \\&lt;br/&gt;  -etcd-keyfile=/etc/flanneld/cert/flanneld-key.pem \\&lt;br/&gt;  -etcd-endpoints=${&lt;br/&gt;   &lt;br/&gt;     ETCD_ENDPOINTS} \\&lt;br/&gt;  -etcd-prefix=${&lt;br/&gt;   &lt;br/&gt;     FLANNEL_ETCD_PREFIX} \\&lt;br/&gt;  -iface=${&lt;br/&gt;   &lt;br/&gt;     IFACE} \\&lt;br/&gt;  -ip-masq&lt;br/&gt;ExecStartPost=/opt/k8s/bin/mk-docker-opts.sh -k DOCKER_NETWORK_OPTIONS -d /run/flannel/docker&lt;br/&gt;Restart=always&lt;br/&gt;RestartSec=&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;StartLimitInterval=&lt;span&gt;0&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Install]&lt;br/&gt;WantedBy=multi-user.target&lt;br/&gt;RequiredBy=docker.service&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4）启动并验证&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp flanneld.service root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/etc/systemd/system/&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;systemctl daemon-reload &amp;amp;&amp;amp; systemctl enable flanneld --now&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1）查看 Pod 网段信息&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# etcdctl \&lt;br/&gt;--endpoints=${&lt;br/&gt;   &lt;br/&gt;     ETCD_ENDPOINTS} \&lt;br/&gt;--ca-file=/etc/kubernetes/cert/ca.pem \&lt;br/&gt;--cert-file=/etc/flanneld/cert/flanneld.pem \&lt;br/&gt;--key-file=/etc/flanneld/cert/flanneld-key.pem \&lt;br/&gt;get ${&lt;br/&gt;   &lt;br/&gt;     FLANNEL_ETCD_PREFIX}/config&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.33081570996978854&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjNO7b7dMzesWcYJzM9ib5dtVRkOV69pmjd1cNpQFxvN6zOyAAvuqrSrw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1324&quot;/&gt;&lt;br/&gt;2）查看已分配的 Pod 子网段列表&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# etcdctl \&lt;br/&gt;--endpoints=${&lt;br/&gt;   &lt;br/&gt;     ETCD_ENDPOINTS} \&lt;br/&gt;--ca-file=/etc/kubernetes/cert/ca.pem \&lt;br/&gt;--cert-file=/etc/flanneld/cert/flanneld.pem \&lt;br/&gt;--key-file=/etc/flanneld/cert/flanneld-key.pem \&lt;br/&gt;ls ${&lt;br/&gt;   &lt;br/&gt;     FLANNEL_ETCD_PREFIX}/subnets&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3300604229607251&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjXqUcyax1icQK1QntEGE1d4qBdwoHLo7geDYw00h8j2fpz3LOfCPJzqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1324&quot;/&gt;&lt;br/&gt;3）查看某一 Pod 网段对应的节点 IP 和 Flannel 接口地址&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# etcdctl \&lt;br/&gt;--endpoints=${&lt;br/&gt;   &lt;br/&gt;     ETCD_ENDPOINTS} \&lt;br/&gt;--ca-file=/etc/kubernetes/cert/ca.pem \&lt;br/&gt;--cert-file=/etc/flanneld/cert/flanneld.pem \&lt;br/&gt;--key-file=/etc/flanneld/cert/flanneld-key.pem \&lt;br/&gt;get ${&lt;br/&gt;   &lt;br/&gt;     FLANNEL_ETCD_PREFIX}/subnets/&lt;span&gt;10.10.208.0&lt;/span&gt;-&lt;span&gt;21&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3273542600896861&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjucRwIcNl3NK8bf2oW1EAAfvpEJCriceQpNVnibbpADsezhXbXOqat0gA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1338&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;4.安装 Docker 服务&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Docker 运行和管理容器，Kubelet 通过 Container Runtime Interface (CRI) 与它进行交互。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下载Docker&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# wget https:&lt;span&gt;//download.docker.com/linux/static/stable/x86_64/docker-19.03.12.tgz&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# tar -zxf docker-&lt;span&gt;19.03.12&lt;/span&gt;.tgz&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;安装Docker&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp docker&lt;span&gt;/*  root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/opt/k8s/bin/&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &quot;chmod +x /opt/k8s/bin/*&quot;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）创建启动脚本&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; docker.service &amp;lt;&amp;lt; &lt;span&gt;&quot;EOF&quot;&lt;/span&gt;&lt;br/&gt;[Unit]&lt;br/&gt;Description=Docker Application Container Engine&lt;br/&gt;Documentation=http:&lt;span&gt;//docs.docker.io&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Service]&lt;br/&gt;WorkingDirectory=##DOCKER_DIR##&lt;br/&gt;Environment=&lt;span&gt;&quot;PATH=/opt/k8s/bin:/bin:/sbin:/usr/bin:/usr/sbin&quot;&lt;/span&gt;&lt;br/&gt;EnvironmentFile=-/run/flannel/docker&lt;br/&gt;ExecStart=/opt/k8s/bin/dockerd $DOCKER_NETWORK_OPTIONS&lt;br/&gt;ExecReload=/bin/kill -s HUP $MAINPID&lt;br/&gt;Restart=on-failure&lt;br/&gt;RestartSec=&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;LimitNOFILE=infinity&lt;br/&gt;LimitNPROC=infinity&lt;br/&gt;LimitCORE=infinity&lt;br/&gt;Delegate=yes&lt;br/&gt;KillMode=process&lt;br/&gt;&lt;br/&gt;[Install]&lt;br/&gt;WantedBy=multi-user.target&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# sed -i -e &lt;span&gt;&quot;s|##DOCKER_DIR##|${DOCKER_DIR}|&quot;&lt;/span&gt; docker.service&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp docker.service root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/etc/systemd/system/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置&lt;code&gt;daemon.json&lt;/code&gt; 文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; daemon.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;registry-mirrors&quot;&lt;/span&gt;: [&lt;span&gt;&quot;https://ipbtg5l0.mirror.aliyuncs.com&quot;&lt;/span&gt;],&lt;br/&gt;    &lt;span&gt;&quot;exec-opts&quot;&lt;/span&gt;: [&lt;span&gt;&quot;native.cgroupdriver=cgroupfs&quot;&lt;/span&gt;],&lt;br/&gt;    &lt;span&gt;&quot;data-root&quot;&lt;/span&gt;: &lt;span&gt;&quot;${DOCKER_DIR}/data&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;exec-root&quot;&lt;/span&gt;: &lt;span&gt;&quot;${DOCKER_DIR}/exec&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;log-driver&quot;&lt;/span&gt;: &lt;span&gt;&quot;json-file&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;log-opts&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;      &lt;span&gt;&quot;max-size&quot;&lt;/span&gt;: &lt;span&gt;&quot;100m&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;max-file&quot;&lt;/span&gt;: &lt;span&gt;&quot;5&quot;&lt;/span&gt;&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&quot;storage-driver&quot;&lt;/span&gt;: &lt;span&gt;&quot;overlay2&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;storage-opts&quot;&lt;/span&gt;: [&lt;br/&gt;      &lt;span&gt;&quot;overlay2.override_kernel_check=true&quot;&lt;/span&gt;&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;mkdir -p /etc/docker/ ${DOCKER_DIR}/{data,exec}&quot;&lt;/span&gt;&lt;br/&gt;    scp daemon.json root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/etc/docker/daemon.json&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2）启动 Docker&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;systemctl daemon-reload &amp;amp;&amp;amp; systemctl enable docker --now&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;5.安装 Kubectl 服务&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下载Kubectl&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# wget https:&lt;span&gt;//storage.googleapis.com/kubernetes-release/release/v1.18.3/kubernetes-client-linux-amd64.tar.gz&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# tar -zxf kubernetes-client-linux-amd64.tar.gz&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kubernetes/client/bin/kubectl root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/opt/k8s/bin/&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;chmod +x /opt/k8s/bin/*&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）创建 Admin 证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; admin-csr.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span&gt;&quot;admin&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;hosts&quot;&lt;/span&gt;: [],&lt;br/&gt;    &lt;span&gt;&quot;key&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;        &lt;span&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span&gt;&quot;rsa&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;2048&lt;/span&gt;&lt;br/&gt;    },&lt;br/&gt;    &lt;span&gt;&quot;names&quot;&lt;/span&gt;: [&lt;br/&gt;        {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;            &lt;span&gt;&quot;C&quot;&lt;/span&gt;: &lt;span&gt;&quot;CN&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;L&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;O&quot;&lt;/span&gt;: &lt;span&gt;&quot;system:masters&quot;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;&quot;OU&quot;&lt;/span&gt;: &lt;span&gt;&quot;System&quot;&lt;/span&gt;&lt;br/&gt;        }&lt;br/&gt;    ]&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3）生成证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cfssl gencert -ca=/opt/k8s/work/ca.pem -ca-key=/opt/k8s/work/ca-key.pem -config=/opt/k8s/work/ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4）创建 Kubeconfig 文件&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置集群参数&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-cluster kubernetes \&lt;br/&gt;--certificate-authority=/opt/k8s/work/ca.pem \&lt;br/&gt;--embed-certs=&lt;span&gt;true&lt;/span&gt; \&lt;br/&gt;--server=${&lt;br/&gt;   &lt;br/&gt;     KUBE_APISERVER} \&lt;br/&gt;--kubeconfig=kubectl.kubeconfig&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置客户端认证参数&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-credentials admin \&lt;br/&gt;--client-certificate=/opt/k8s/work/admin.pem \&lt;br/&gt;--client-key=/opt/k8s/work/admin-key.pem \&lt;br/&gt;--embed-certs=&lt;span&gt;true&lt;/span&gt; \&lt;br/&gt;--kubeconfig=kubectl.kubeconfig&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置上下文参数&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-context kubernetes \&lt;br/&gt;--cluster=kubernetes \&lt;br/&gt;--user=admin \&lt;br/&gt;--kubeconfig=kubectl.kubeconfig&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置默认上下文&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config use-context kubernetes --kubeconfig=kubectl.kubeconfig&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;5）创建 Kubectl 配置文件，并配置命令补全工具&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;mkdir -p ~/.kube&quot;&lt;/span&gt;&lt;br/&gt;    scp kubectl.kubeconfig root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:~/.kube/config&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;echo &#x27;export KUBECONFIG=\$HOME/.kube/config&#x27; &amp;gt;&amp;gt; ~/.bashrc&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;echo &#x27;source &amp;lt;(kubectl completion bash)&#x27; &amp;gt;&amp;gt; ~/.bashrc&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面命令需要在 &lt;code&gt;k8s-master01&lt;/code&gt; 和 &lt;code&gt;k8s-master02&lt;/code&gt; 上配置：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# source /usr/share/bash-completion/bash_completion&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# source &amp;lt;(kubectl completion bash)&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# bash ~/.bashrc&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;三、安装 Kubenetes 相关组件&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;1.安装 Kube-APIServer 组件&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下载Kubernetes 二进制文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# wget https:&lt;span&gt;//storage.googleapis.com/kubernetes-release/release/v1.18.3/kubernetes-server-linux-amd64.tar.gz&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# tar -zxf kubernetes-server-linux-amd64.tar.gz&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cd kubernetes&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 kubernetes]# tar -zxf kubernetes-src.tar.gz&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 kubernetes]# cd ..&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp -rp kubernetes/server/bin/{&lt;br/&gt;   &lt;br/&gt;     apiextensions-apiserver,kube-apiserver,kube-controller-manager,kube-scheduler,kubeadm,kubectl,mounter} root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/opt/k8s/bin/&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;chmod +x /opt/k8s/bin/*&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）创建 Kubernetes 证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kubernetes-csr.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;  &lt;span&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span&gt;&quot;kubernetes&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;hosts&quot;&lt;/span&gt;: [&lt;br/&gt;    &lt;span&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;192.168.1.1&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;192.168.1.2&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;${CLUSTER_KUBERNETES_SVC_IP}&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;kubernetes&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;kubernetes.default&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;kubernetes.default.svc&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;kubernetes.default.svc.cluster&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;kubernetes.default.svc.cluster.local.&quot;&lt;/span&gt;&lt;br/&gt;  ],&lt;br/&gt;  &lt;span&gt;&quot;key&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span&gt;&quot;rsa&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;2048&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;names&quot;&lt;/span&gt;: [&lt;br/&gt;    {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;      &lt;span&gt;&quot;C&quot;&lt;/span&gt;: &lt;span&gt;&quot;CN&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;L&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;O&quot;&lt;/span&gt;: &lt;span&gt;&quot;k8s&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;OU&quot;&lt;/span&gt;: &lt;span&gt;&quot;System&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2）生成证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cfssl gencert -ca=/opt/k8s/work/ca.pem -ca-key=/opt/k8s/work/ca-key.pem -config=/opt/k8s/work/ca-config.json -profile=kubernetes kubernetes-csr.json | cfssljson -bare kubernetes&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;mkdir -p /etc/kubernetes/cert&quot;&lt;/span&gt;&lt;br/&gt;    scp kubernetes*.pem root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/kubernetes/cert/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3）配置 Kube-APIServer 审计&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建加密配置文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; encryption-config.yaml &amp;lt;&amp;lt; EOF&lt;br/&gt;kind: EncryptionConfig&lt;br/&gt;apiVersion: v1&lt;br/&gt;resources:&lt;br/&gt;  - resources:&lt;br/&gt;      - secrets&lt;br/&gt;    providers:&lt;br/&gt;      - aescbc:&lt;br/&gt;          keys:&lt;br/&gt;            - name: zhangsan&lt;br/&gt;              secret: ${&lt;br/&gt;   &lt;br/&gt;     ENCRYPTION_KEY}&lt;br/&gt;      - identity: {&lt;br/&gt;   &lt;br/&gt;     }&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp encryption-config.yaml root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/kubernetes/encryption-config.yaml&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建审计策略文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; audit-policy.yaml &amp;lt;&amp;lt; EOF&lt;br/&gt;apiVersion: audit.k8s.io/v1beta1&lt;br/&gt;kind: Policy&lt;br/&gt;rules:&lt;br/&gt;  # The following requests were manually identified as high-volume and low-risk, so drop them.&lt;br/&gt;  - level: None&lt;br/&gt;    resources:&lt;br/&gt;      - group: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;        resources:&lt;br/&gt;          - endpoints&lt;br/&gt;          - services&lt;br/&gt;          - services/status&lt;br/&gt;    users:&lt;br/&gt;      - &lt;span&gt;&#x27;system:kube-proxy&#x27;&lt;/span&gt;&lt;br/&gt;    verbs:&lt;br/&gt;      - watch&lt;br/&gt;&lt;br/&gt;  - level: None&lt;br/&gt;    resources:&lt;br/&gt;      - group: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;        resources:&lt;br/&gt;          - nodes&lt;br/&gt;          - nodes/status&lt;br/&gt;    userGroups:&lt;br/&gt;      - &lt;span&gt;&#x27;system:nodes&#x27;&lt;/span&gt;&lt;br/&gt;    verbs:&lt;br/&gt;      - get&lt;br/&gt;&lt;br/&gt;  - level: None&lt;br/&gt;    namespaces:&lt;br/&gt;      - kube-system&lt;br/&gt;    resources:&lt;br/&gt;      - group: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;        resources:&lt;br/&gt;          - endpoints&lt;br/&gt;    users:&lt;br/&gt;      - &lt;span&gt;&#x27;system:kube-controller-manager&#x27;&lt;/span&gt;&lt;br/&gt;      - &lt;span&gt;&#x27;system:kube-scheduler&#x27;&lt;/span&gt;&lt;br/&gt;      - &lt;span&gt;&#x27;system:serviceaccount:kube-system:endpoint-controller&#x27;&lt;/span&gt;&lt;br/&gt;    verbs:&lt;br/&gt;      - get&lt;br/&gt;      - update&lt;br/&gt;&lt;br/&gt;  - level: None&lt;br/&gt;    resources:&lt;br/&gt;      - group: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;        resources:&lt;br/&gt;          - namespaces&lt;br/&gt;          - namespaces/status&lt;br/&gt;          - namespaces/finalize&lt;br/&gt;    users:&lt;br/&gt;      - &lt;span&gt;&#x27;system:apiserver&#x27;&lt;/span&gt;&lt;br/&gt;    verbs:&lt;br/&gt;      - get&lt;br/&gt;&lt;br/&gt;  # Don&lt;span&gt;&#x27;t log HPA fetching metrics.&lt;br/&gt;  - level: None&lt;br/&gt;    resources:&lt;br/&gt;      - group: metrics.k8s.io&lt;br/&gt;    users:&lt;br/&gt;      - &#x27;&lt;/span&gt;system:kube-controller-manager&lt;span&gt;&#x27;&lt;br/&gt;    verbs:&lt;br/&gt;      - get&lt;br/&gt;      - list&lt;br/&gt;&lt;br/&gt;  # Don&#x27;&lt;/span&gt;t log these read-only URLs.&lt;br/&gt;  - level: None&lt;br/&gt;    nonResourceURLs:&lt;br/&gt;      - &lt;span&gt;&#x27;/healthz*&#x27;&lt;/span&gt;&lt;br/&gt;      - /version&lt;br/&gt;      - &lt;span&gt;&#x27;/swagger*&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;  # Don&lt;span&gt;&#x27;t log events requests.&lt;br/&gt;  - level: None&lt;br/&gt;    resources:&lt;br/&gt;      - group: &quot;&quot;&lt;br/&gt;        resources:&lt;br/&gt;          - events&lt;br/&gt;&lt;br/&gt;  # node and pod status calls from nodes are high-volume and can be large, don&#x27;&lt;/span&gt;t log responses &lt;span&gt;for&lt;/span&gt; expected updates from nodes&lt;br/&gt;  - level: Request&lt;br/&gt;    omitStages:&lt;br/&gt;      - RequestReceived&lt;br/&gt;    resources:&lt;br/&gt;      - group: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;        resources:&lt;br/&gt;          - nodes/status&lt;br/&gt;          - pods/status&lt;br/&gt;    users:&lt;br/&gt;      - kubelet&lt;br/&gt;      - &lt;span&gt;&#x27;system:node-problem-detector&#x27;&lt;/span&gt;&lt;br/&gt;      - &lt;span&gt;&#x27;system:serviceaccount:kube-system:node-problem-detector&#x27;&lt;/span&gt;&lt;br/&gt;    verbs:&lt;br/&gt;      - update&lt;br/&gt;      - patch&lt;br/&gt;&lt;br/&gt;  - level: Request&lt;br/&gt;    omitStages:&lt;br/&gt;      - RequestReceived&lt;br/&gt;    resources:&lt;br/&gt;      - group: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;        resources:&lt;br/&gt;          - nodes/status&lt;br/&gt;          - pods/status&lt;br/&gt;    userGroups:&lt;br/&gt;      - &lt;span&gt;&#x27;system:nodes&#x27;&lt;/span&gt;&lt;br/&gt;    verbs:&lt;br/&gt;      - update&lt;br/&gt;      - patch&lt;br/&gt;&lt;br/&gt;  # deletecollection calls can be large, don&lt;span&gt;&#x27;t log responses for expected namespace deletions&lt;br/&gt;  - level: Request&lt;br/&gt;    omitStages:&lt;br/&gt;      - RequestReceived&lt;br/&gt;    users:&lt;br/&gt;      - &#x27;&lt;/span&gt;system:serviceaccount:kube-system:namespace-controller&lt;span&gt;&#x27;&lt;br/&gt;    verbs:&lt;br/&gt;      - deletecollection&lt;br/&gt;&lt;br/&gt;  # Secrets, ConfigMaps, and TokenReviews can contain sensitive &amp;amp; binary data,&lt;br/&gt;  # so only log at the Metadata level.&lt;br/&gt;  - level: Metadata&lt;br/&gt;    omitStages:&lt;br/&gt;      - RequestReceived&lt;br/&gt;    resources:&lt;br/&gt;      - group: &quot;&quot;&lt;br/&gt;        resources:&lt;br/&gt;          - secrets&lt;br/&gt;          - configmaps&lt;br/&gt;      - group: authentication.k8s.io&lt;br/&gt;        resources:&lt;br/&gt;          - tokenreviews&lt;br/&gt;  # Get repsonses can be large; skip them.&lt;br/&gt;  - level: Request&lt;br/&gt;    omitStages:&lt;br/&gt;      - RequestReceived&lt;br/&gt;    resources:&lt;br/&gt;      - group: &quot;&quot;&lt;br/&gt;      - group: admissionregistration.k8s.io&lt;br/&gt;      - group: apiextensions.k8s.io&lt;br/&gt;      - group: apiregistration.k8s.io&lt;br/&gt;      - group: apps&lt;br/&gt;      - group: authentication.k8s.io&lt;br/&gt;      - group: authorization.k8s.io&lt;br/&gt;      - group: autoscaling&lt;br/&gt;      - group: batch&lt;br/&gt;      - group: certificates.k8s.io&lt;br/&gt;      - group: extensions&lt;br/&gt;      - group: metrics.k8s.io&lt;br/&gt;      - group: networking.k8s.io&lt;br/&gt;      - group: policy&lt;br/&gt;      - group: rbac.authorization.k8s.io&lt;br/&gt;      - group: scheduling.k8s.io&lt;br/&gt;      - group: settings.k8s.io&lt;br/&gt;      - group: storage.k8s.io&lt;br/&gt;    verbs:&lt;br/&gt;      - get&lt;br/&gt;      - list&lt;br/&gt;      - watch&lt;br/&gt;&lt;br/&gt;  # Default level for known APIs&lt;br/&gt;  - level: RequestResponse&lt;br/&gt;    omitStages:&lt;br/&gt;      - RequestReceived&lt;br/&gt;    resources:&lt;br/&gt;      - group: &quot;&quot;&lt;br/&gt;      - group: admissionregistration.k8s.io&lt;br/&gt;      - group: apiextensions.k8s.io&lt;br/&gt;      - group: apiregistration.k8s.io&lt;br/&gt;      - group: apps&lt;br/&gt;      - group: authentication.k8s.io&lt;br/&gt;      - group: authorization.k8s.io&lt;br/&gt;      - group: autoscaling&lt;br/&gt;      - group: batch&lt;br/&gt;      - group: certificates.k8s.io&lt;br/&gt;      - group: extensions&lt;br/&gt;      - group: metrics.k8s.io&lt;br/&gt;      - group: networking.k8s.io&lt;br/&gt;      - group: policy&lt;br/&gt;      - group: rbac.authorization.k8s.io&lt;br/&gt;      - group: scheduling.k8s.io&lt;br/&gt;      - group: settings.k8s.io&lt;br/&gt;      - group: storage.k8s.io&lt;br/&gt;&lt;br/&gt;  # Default level for all other requests.&lt;br/&gt;  - level: Metadata&lt;br/&gt;    omitStages:&lt;br/&gt;      - RequestReceived&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp audit-policy.yaml root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/kubernetes/audit-policy.yaml&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4）配置 Metrics-Server&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建&lt;code&gt;metrics-server&lt;/code&gt; 的 CA 证书请求文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; proxy-client-csr.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;  &lt;span&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span&gt;&quot;system:metrics-server&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;hosts&quot;&lt;/span&gt;: [],&lt;br/&gt;  &lt;span&gt;&quot;key&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span&gt;&quot;rsa&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;2048&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;names&quot;&lt;/span&gt;: [&lt;br/&gt;    {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;      &lt;span&gt;&quot;C&quot;&lt;/span&gt;: &lt;span&gt;&quot;CN&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;L&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;O&quot;&lt;/span&gt;: &lt;span&gt;&quot;k8s&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;OU&quot;&lt;/span&gt;: &lt;span&gt;&quot;System&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生成证书和密钥&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cfssl gencert -ca=/opt/k8s/work/ca.pem -ca-key=/opt/k8s/work/ca-key.pem -config=/opt/k8s/work/ca-config.json -profile=kubernetes proxy-client-csr.json | cfssljson -bare proxy-client&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp proxy-client*.pem root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/kubernetes/cert/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;5）创建启动脚本&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kube-apiserver.service.template &amp;lt;&amp;lt; EOF&lt;br/&gt;[Unit]&lt;br/&gt;Description=Kubernetes API Server&lt;br/&gt;Documentation=https:&lt;span&gt;//github.com/GoogleCloudPlatform/kubernetes&lt;/span&gt;&lt;br/&gt;After=network.target&lt;br/&gt;&lt;br/&gt;[Service]&lt;br/&gt;WorkingDirectory=${&lt;br/&gt;   &lt;br/&gt;     K8S_DIR}/kube-apiserver&lt;br/&gt;ExecStart=/opt/k8s/bin/kube-apiserver \\&lt;br/&gt;  --insecure-port=&lt;span&gt;0&lt;/span&gt; \\&lt;br/&gt;  --secure-port=&lt;span&gt;6443&lt;/span&gt; \\&lt;br/&gt;  --bind-address=##MASTER_IP## \\&lt;br/&gt;  --advertise-address=##MASTER_IP## \\&lt;br/&gt;  --&lt;span&gt;default&lt;/span&gt;-not-ready-toleration-seconds=&lt;span&gt;360&lt;/span&gt; \\&lt;br/&gt;  --&lt;span&gt;default&lt;/span&gt;-unreachable-toleration-seconds=&lt;span&gt;360&lt;/span&gt; \\&lt;br/&gt;  --feature-gates=DynamicAuditing=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --max-mutating-requests-inflight=&lt;span&gt;2000&lt;/span&gt; \\&lt;br/&gt;  --max-requests-inflight=&lt;span&gt;4000&lt;/span&gt; \\&lt;br/&gt;  --&lt;span&gt;default&lt;/span&gt;-watch-cache-size=&lt;span&gt;200&lt;/span&gt; \\&lt;br/&gt;  --delete-collection-workers=&lt;span&gt;2&lt;/span&gt; \\&lt;br/&gt;  --encryption-provider-config=/etc/kubernetes/encryption-config.yaml \\&lt;br/&gt;  --etcd-cafile=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --etcd-certfile=/etc/kubernetes/cert/kubernetes.pem \\&lt;br/&gt;  --etcd-keyfile=/etc/kubernetes/cert/kubernetes-key.pem \\&lt;br/&gt;  --etcd-servers=${&lt;br/&gt;   &lt;br/&gt;     ETCD_ENDPOINTS} \\&lt;br/&gt;  --tls-cert-file=/etc/kubernetes/cert/kubernetes.pem \\&lt;br/&gt;  --tls-&lt;span&gt;private&lt;/span&gt;-key-file=/etc/kubernetes/cert/kubernetes-key.pem \\&lt;br/&gt;  --audit-dynamic-configuration \\&lt;br/&gt;  --audit-log-maxage=&lt;span&gt;30&lt;/span&gt; \\&lt;br/&gt;  --audit-log-maxbackup=&lt;span&gt;3&lt;/span&gt; \\&lt;br/&gt;  --audit-log-maxsize=&lt;span&gt;100&lt;/span&gt; \\&lt;br/&gt;  --audit-log-truncate-enabled=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --audit-log-path=${&lt;br/&gt;   &lt;br/&gt;     K8S_DIR}/kube-apiserver/audit.log \\&lt;br/&gt;  --audit-policy-file=/etc/kubernetes/audit-policy.yaml \\&lt;br/&gt;  --profiling \\&lt;br/&gt;  --anonymous-auth=&lt;span&gt;false&lt;/span&gt; \\&lt;br/&gt;  --client-ca-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --enable-bootstrap-token-auth=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --requestheader-allowed-names=&lt;span&gt;&quot;system:metrics-server&quot;&lt;/span&gt; \\&lt;br/&gt;  --requestheader-client-ca-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --requestheader-extra-headers-prefix=X-Remote-Extra- \\&lt;br/&gt;  --requestheader-group-headers=X-Remote-Group \\&lt;br/&gt;  --requestheader-username-headers=X-Remote-User \\&lt;br/&gt;  --service-account-key-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --authorization-mode=Node,RBAC \\&lt;br/&gt;  --runtime-config=api/all=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,NodeRestriction \\&lt;br/&gt;  --allow-privileged=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --apiserver-count=&lt;span&gt;3&lt;/span&gt; \\&lt;br/&gt;  --event-ttl=&lt;span&gt;168&lt;/span&gt;h \\&lt;br/&gt;  --kubelet-certificate-authority=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --kubelet-client-certificate=/etc/kubernetes/cert/kubernetes.pem \\&lt;br/&gt;  --kubelet-client-key=/etc/kubernetes/cert/kubernetes-key.pem \\&lt;br/&gt;  --kubelet-https=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --kubelet-timeout=&lt;span&gt;10&lt;/span&gt;s \\&lt;br/&gt;  --proxy-client-cert-file=/etc/kubernetes/cert/proxy-client.pem \\&lt;br/&gt;  --proxy-client-key-file=/etc/kubernetes/cert/proxy-client-key.pem \\&lt;br/&gt;  --service-cluster-ip-range=${&lt;br/&gt;   &lt;br/&gt;     SERVICE_CIDR} \\&lt;br/&gt;  --service-node-port-range=${&lt;br/&gt;   &lt;br/&gt;     NODE_PORT_RANGE} \\&lt;br/&gt;  --logtostderr=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --v=&lt;span&gt;2&lt;/span&gt;&lt;br/&gt;Restart=on-failure&lt;br/&gt;RestartSec=&lt;span&gt;10&lt;/span&gt;&lt;br/&gt;Type=notify&lt;br/&gt;LimitNOFILE=&lt;span&gt;65535&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Install]&lt;br/&gt;WantedBy=multi-user.target&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;6）启动 Kube-APIServer 并验证&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; (( A=&lt;span&gt;0&lt;/span&gt;; A &amp;lt; &lt;span&gt;2&lt;/span&gt;; A++ ))&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    sed -e &lt;span&gt;&quot;s/##MASTER_NAME##/${MASTER_NAMES[A]}/&quot;&lt;/span&gt; -e &lt;span&gt;&quot;s/##MASTER_IP##/${MASTER_IPS[A]}/&quot;&lt;/span&gt; kube-apiserver.service.template &amp;gt; kube-apiserver-${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[A]}.service&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kube-apiserver-${&lt;br/&gt;   &lt;br/&gt;     master_ip}.service root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/systemd/system/kube-apiserver.service&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;mkdir -p ${K8S_DIR}/kube-apiserver&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;systemctl daemon-reload &amp;amp;&amp;amp; systemctl enable kube-apiserver --now&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看Kube-APIServer 写入 ETCD 的数据&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# ETCDCTL_API=&lt;span&gt;3&lt;/span&gt; etcdctl \&lt;br/&gt;--endpoints=${&lt;br/&gt;   &lt;br/&gt;     ETCD_ENDPOINTS} \&lt;br/&gt;--cacert=/opt/k8s/work/ca.pem \&lt;br/&gt;--cert=/opt/k8s/work/etcd.pem \&lt;br/&gt;--key=/opt/k8s/work/etcd-key.pem \&lt;br/&gt;get /registry/ --prefix --keys-only&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看集群信息&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl cluster-info&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl get all --all-namespaces&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl get componentstatuses&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# netstat -anpt | grep &lt;span&gt;6443&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.32405891980360063&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjIsmia0OD2UbFqMic53VwRXydTtFicKxBeaFdib3vc0ezRibpI8FoiadpC6Bg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1833&quot;/&gt;&lt;br/&gt;授予&lt;code&gt;kube-apiserver&lt;/code&gt; 访问 &lt;code&gt;kubelet&lt;/code&gt; API 的权限&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl create clusterrolebinding kube-apiserver:kubelet-apis --clusterrole=system:kubelet-api-admin --user kubernetes&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;2.安装 Controller Manager 组件&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）创建 Controller Manager 证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kube-controller-manager-csr.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;  &lt;span&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span&gt;&quot;system:kube-controller-manager&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;hosts&quot;&lt;/span&gt;: [&lt;br/&gt;    &lt;span&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;192.168.1.1&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;192.168.1.2&quot;&lt;/span&gt;&lt;br/&gt;  ],&lt;br/&gt;  &lt;span&gt;&quot;key&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span&gt;&quot;rsa&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;2048&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;names&quot;&lt;/span&gt;: [&lt;br/&gt;    {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;      &lt;span&gt;&quot;C&quot;&lt;/span&gt;: &lt;span&gt;&quot;CN&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;L&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;O&quot;&lt;/span&gt;: &lt;span&gt;&quot;system:kube-controller-manager&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;OU&quot;&lt;/span&gt;: &lt;span&gt;&quot;System&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2）生成证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cfssl gencert -ca=/opt/k8s/work/ca.pem -ca-key=/opt/k8s/work/ca-key.pem -config=/opt/k8s/work/ca-config.json -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kube-controller-manager*.pem root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/kubernetes/cert/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3）创建 Kubeconfig 文件&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-cluster kubernetes \&lt;br/&gt;--certificate-authority=/opt/k8s/work/ca.pem \&lt;br/&gt;--embed-certs=&lt;span&gt;true&lt;/span&gt; \&lt;br/&gt;--server=${&lt;br/&gt;   &lt;br/&gt;     KUBE_APISERVER} \&lt;br/&gt;--kubeconfig=kube-controller-manager.kubeconfig&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-credentials system:kube-controller-manager \&lt;br/&gt;--client-certificate=kube-controller-manager.pem \&lt;br/&gt;--client-key=kube-controller-manager-key.pem \&lt;br/&gt;--embed-certs=&lt;span&gt;true&lt;/span&gt; \&lt;br/&gt;--kubeconfig=kube-controller-manager.kubeconfig&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-context system:kube-controller-manager \&lt;br/&gt;--cluster=kubernetes \&lt;br/&gt;--user=system:kube-controller-manager \&lt;br/&gt;--kubeconfig=kube-controller-manager.kubeconfig&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config use-context system:kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kube-controller-manager.kubeconfig root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/kubernetes/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4）创建启动脚本&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kube-controller-manager.service.template &amp;lt;&amp;lt; EOF&lt;br/&gt;[Unit]&lt;br/&gt;Description=Kubernetes Controller Manager&lt;br/&gt;Documentation=https:&lt;span&gt;//github.com/GoogleCloudPlatform/kubernetes&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Service]&lt;br/&gt;WorkingDirectory=${&lt;br/&gt;   &lt;br/&gt;     K8S_DIR}/kube-controller-manager&lt;br/&gt;ExecStart=/opt/k8s/bin/kube-controller-manager \\&lt;br/&gt;  --secure-port=&lt;span&gt;10257&lt;/span&gt; \\&lt;br/&gt;  --bind-address=&lt;span&gt;127.0.0.1&lt;/span&gt; \\&lt;br/&gt;  --profiling \\&lt;br/&gt;  --cluster-name=kubernetes \\&lt;br/&gt;  --controllers=*,bootstrapsigner,tokencleaner \\&lt;br/&gt;  --kube-api-qps=&lt;span&gt;1000&lt;/span&gt; \\&lt;br/&gt;  --kube-api-burst=&lt;span&gt;2000&lt;/span&gt; \\&lt;br/&gt;  --leader-elect \\&lt;br/&gt;  --use-service-account-credentials\\&lt;br/&gt;  --concurrent-service-syncs=&lt;span&gt;2&lt;/span&gt; \\&lt;br/&gt;  --tls-cert-file=/etc/kubernetes/cert/kube-controller-manager.pem \\&lt;br/&gt;  --tls-&lt;span&gt;private&lt;/span&gt;-key-file=/etc/kubernetes/cert/kube-controller-manager-key.pem \\&lt;br/&gt;  --authentication-kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig \\&lt;br/&gt;  --client-ca-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --requestheader-allowed-names=&lt;span&gt;&quot;system:metrics-server&quot;&lt;/span&gt; \\&lt;br/&gt;  --requestheader-client-ca-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --requestheader-extra-headers-prefix=&lt;span&gt;&quot;X-Remote-Extra-&quot;&lt;/span&gt; \\&lt;br/&gt;  --requestheader-group-headers=X-Remote-Group \\&lt;br/&gt;  --requestheader-username-headers=X-Remote-User \\&lt;br/&gt;  --cluster-signing-cert-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --cluster-signing-key-file=/etc/kubernetes/cert/ca-key.pem \\&lt;br/&gt;  --experimental-cluster-signing-duration=&lt;span&gt;87600&lt;/span&gt;h \\&lt;br/&gt;  --horizontal-pod-autoscaler-sync-period=&lt;span&gt;10&lt;/span&gt;s \\&lt;br/&gt;  --concurrent-deployment-syncs=&lt;span&gt;10&lt;/span&gt; \\&lt;br/&gt;  --concurrent-gc-syncs=&lt;span&gt;30&lt;/span&gt; \\&lt;br/&gt;  --node-cidr-mask-size=&lt;span&gt;24&lt;/span&gt; \\&lt;br/&gt;  --service-cluster-ip-range=${&lt;br/&gt;   &lt;br/&gt;     SERVICE_CIDR} \\&lt;br/&gt;  --cluster-cidr=${&lt;br/&gt;   &lt;br/&gt;     CLUSTER_CIDR} \\&lt;br/&gt;  --pod-eviction-timeout=&lt;span&gt;6&lt;/span&gt;m \\&lt;br/&gt;  --terminated-pod-gc-threshold=&lt;span&gt;10000&lt;/span&gt; \\&lt;br/&gt;  --root-ca-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --service-account-&lt;span&gt;private&lt;/span&gt;-key-file=/etc/kubernetes/cert/ca-key.pem \\&lt;br/&gt;  --kubeconfig=/etc/kubernetes/kube-controller-manager.kubeconfig \\&lt;br/&gt;  --logtostderr=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --v=&lt;span&gt;2&lt;/span&gt;&lt;br/&gt;Restart=on-failure&lt;br/&gt;RestartSec=&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Install]&lt;br/&gt;WantedBy=multi-user.target&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4）启动并验证&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kube-controller-manager.service.template root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/systemd/system/kube-controller-manager.service&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;mkdir -p ${K8S_DIR}/kube-controller-manager&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;systemctl daemon-reload &amp;amp;&amp;amp; systemctl enable kube-controller-manager --now&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看输出的 Metrics&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# curl -s --cacert /opt/k8s/work/ca.pem --cert /opt/k8s/work/admin.pem --key /opt/k8s/work/admin-key.pem https:&lt;span&gt;//127.0.0.1:10257/metrics | head&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看权限&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl describe clusterrole system:kube-controller-manager&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl get clusterrole | grep controller&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl describe clusterrole system:controller:deployment-controller&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看当前的 Leader&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl get endpoints kube-controller-manager --namespace=kube-system -o yaml&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;3.安装 Kube-Scheduler 组件&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）创建 Kube-Scheduler 证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kube-scheduler-csr.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;  &lt;span&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span&gt;&quot;system:kube-scheduler&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;hosts&quot;&lt;/span&gt;: [&lt;br/&gt;    &lt;span&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;192.168.1.1&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;192.168.1.2&quot;&lt;/span&gt;&lt;br/&gt;  ],&lt;br/&gt;  &lt;span&gt;&quot;key&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span&gt;&quot;rsa&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;2048&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;names&quot;&lt;/span&gt;: [&lt;br/&gt;    {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;      &lt;span&gt;&quot;C&quot;&lt;/span&gt;: &lt;span&gt;&quot;CN&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;L&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;O&quot;&lt;/span&gt;: &lt;span&gt;&quot;system:kube-scheduler&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;OU&quot;&lt;/span&gt;: &lt;span&gt;&quot;System&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2）生成证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cfssl gencert -ca=/opt/k8s/work/ca.pem -ca-key=/opt/k8s/work/ca-key.pem -config=/opt/k8s/work/ca-config.json -profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-scheduler&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kube-scheduler*.pem root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/kubernetes/cert/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3）创建 Kubeconfig 文件&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-cluster kubernetes \&lt;br/&gt;--certificate-authority=/opt/k8s/work/ca.pem \&lt;br/&gt;--embed-certs=&lt;span&gt;true&lt;/span&gt; \&lt;br/&gt;--server=${&lt;br/&gt;   &lt;br/&gt;     KUBE_APISERVER} \&lt;br/&gt;--kubeconfig=kube-scheduler.kubeconfig&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-credentials system:kube-scheduler \&lt;br/&gt;--client-certificate=kube-scheduler.pem \&lt;br/&gt;--client-key=kube-scheduler-key.pem \&lt;br/&gt;--embed-certs=&lt;span&gt;true&lt;/span&gt; \&lt;br/&gt;--kubeconfig=kube-scheduler.kubeconfig&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-context system:kube-scheduler \&lt;br/&gt;--cluster=kubernetes \&lt;br/&gt;--user=system:kube-scheduler \&lt;br/&gt;--kubeconfig=kube-scheduler.kubeconfig&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config use-context system:kube-scheduler --kubeconfig=kube-scheduler.kubeconfig&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kube-scheduler.kubeconfig root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/kubernetes/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4）创建 Kube-Scheduler 配置文件&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kube-scheduler.yaml.template &amp;lt;&amp;lt; EOF&lt;br/&gt;apiVersion: kubescheduler.config.k8s.io/v1alpha1&lt;br/&gt;kind: KubeSchedulerConfiguration&lt;br/&gt;bindTimeoutSeconds: &lt;span&gt;600&lt;/span&gt;&lt;br/&gt;clientConnection:&lt;br/&gt;  burst: &lt;span&gt;200&lt;/span&gt;&lt;br/&gt;  kubeconfig: &lt;span&gt;&quot;/etc/kubernetes/kube-scheduler.kubeconfig&quot;&lt;/span&gt;&lt;br/&gt;  qps: &lt;span&gt;100&lt;/span&gt;&lt;br/&gt;enableContentionProfiling: &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;enableProfiling: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;hardPodAffinitySymmetricWeight: &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;healthzBindAddress: &lt;span&gt;127.0.0.1&lt;/span&gt;:&lt;span&gt;10251&lt;/span&gt;&lt;br/&gt;leaderElection:&lt;br/&gt;  leaderElect: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;metricsBindAddress: &lt;span&gt;127.0.0.1&lt;/span&gt;:&lt;span&gt;10251&lt;/span&gt;&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kube-scheduler.yaml.template root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/kubernetes/kube-scheduler.yaml&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;5）创建启动脚本&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kube-scheduler.service.template &amp;lt;&amp;lt; EOF&lt;br/&gt;[Unit]&lt;br/&gt;Description=Kubernetes Scheduler&lt;br/&gt;Documentation=https:&lt;span&gt;//github.com/GoogleCloudPlatform/kubernetes&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Service]&lt;br/&gt;WorkingDirectory=${&lt;br/&gt;   &lt;br/&gt;     K8S_DIR}/kube-scheduler&lt;br/&gt;ExecStart=/opt/k8s/bin/kube-scheduler \\&lt;br/&gt;  --port=&lt;span&gt;0&lt;/span&gt; \\&lt;br/&gt;  --secure-port=&lt;span&gt;10259&lt;/span&gt; \\&lt;br/&gt;  --bind-address=&lt;span&gt;127.0.0.1&lt;/span&gt; \\&lt;br/&gt;  --config=/etc/kubernetes/kube-scheduler.yaml \\&lt;br/&gt;  --tls-cert-file=/etc/kubernetes/cert/kube-scheduler.pem \\&lt;br/&gt;  --tls-&lt;span&gt;private&lt;/span&gt;-key-file=/etc/kubernetes/cert/kube-scheduler-key.pem \\&lt;br/&gt;  --authentication-kubeconfig=/etc/kubernetes/kube-scheduler.kubeconfig \\&lt;br/&gt;  --client-ca-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --requestheader-allowed-names=&lt;span&gt;&quot;system:metrics-server&quot;&lt;/span&gt; \\&lt;br/&gt;  --requestheader-client-ca-file=/etc/kubernetes/cert/ca.pem \\&lt;br/&gt;  --requestheader-extra-headers-prefix=&lt;span&gt;&quot;X-Remote-Extra-&quot;&lt;/span&gt; \\&lt;br/&gt;  --requestheader-group-headers=X-Remote-Group \\&lt;br/&gt;  --requestheader-username-headers=X-Remote-User \\&lt;br/&gt;  --authorization-kubeconfig=/etc/kubernetes/kube-scheduler.kubeconfig \\&lt;br/&gt;  --logtostderr=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --v=&lt;span&gt;2&lt;/span&gt;&lt;br/&gt;Restart=always&lt;br/&gt;RestartSec=&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;StartLimitInterval=&lt;span&gt;0&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Install]&lt;br/&gt;WantedBy=multi-user.target&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;6）启动并验证&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kube-scheduler.service.template root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/etc/systemd/system/kube-scheduler.service&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;mkdir -p ${K8S_DIR}/kube-scheduler&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;systemctl daemon-reload &amp;amp;&amp;amp; systemctl enable kube-scheduler --now&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# netstat -nlpt | grep kube-schedule&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;10251：接收 http 请求，非安全端口，不需要认证授权；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;10259：接收 https 请求，安全端口，需要认认证授权（两个接口都对外提供 /metrics 和 /healthz 的访问）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看输出的 Metrics&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# curl -s --cacert /opt/k8s/work/ca.pem --cert /opt/k8s/work/admin.pem --key /opt/k8s/work/admin-key.pem https:&lt;span&gt;//127.0.0.1:10257/metrics | head&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看权限&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl describe clusterrole system:kube-controller-manager&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl get clusterrole | grep controller&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl describe clusterrole system:controller:deployment-controller&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看当前的 Leader&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl get endpoints kube-controller-manager --namespace=kube-system -o yaml&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;4.安装 Kubelet 组件&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kubernetes/server/bin/kubelet root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/opt/k8s/bin/&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;chmod +x /opt/k8s/bin/*&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_name in ${&lt;br/&gt;   &lt;br/&gt;     ALL_NAMES[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_name}&quot;&lt;/span&gt;&lt;br/&gt;    export BOOTSTRAP_TOKEN=$(kubeadm token create \&lt;br/&gt;      --description kubelet-bootstrap-token \&lt;br/&gt;      --groups system:bootstrappers:${&lt;br/&gt;   &lt;br/&gt;     all_name} \&lt;br/&gt;      --kubeconfig ~/.kube/config)&lt;br/&gt;    kubectl config set-cluster kubernetes \&lt;br/&gt;      --certificate-authority=/etc/kubernetes/cert/ca.pem \&lt;br/&gt;      --embed-certs=&lt;span&gt;true&lt;/span&gt; \&lt;br/&gt;      --server=${&lt;br/&gt;   &lt;br/&gt;     KUBE_APISERVER} \&lt;br/&gt;      --kubeconfig=kubelet-bootstrap-${&lt;br/&gt;   &lt;br/&gt;     all_name}.kubeconfig&lt;br/&gt;    kubectl config set-credentials kubelet-bootstrap \&lt;br/&gt;      --token=${&lt;br/&gt;   &lt;br/&gt;     BOOTSTRAP_TOKEN} \&lt;br/&gt;      --kubeconfig=kubelet-bootstrap-${&lt;br/&gt;   &lt;br/&gt;     all_name}.kubeconfig&lt;br/&gt;    kubectl config set-context &lt;span&gt;default&lt;/span&gt; \&lt;br/&gt;      --cluster=kubernetes \&lt;br/&gt;      --user=kubelet-bootstrap \&lt;br/&gt;      --kubeconfig=kubelet-bootstrap-${&lt;br/&gt;   &lt;br/&gt;     all_name}.kubeconfig&lt;br/&gt;    kubectl config use-context &lt;span&gt;default&lt;/span&gt; --kubeconfig=kubelet-bootstrap-${&lt;br/&gt;   &lt;br/&gt;     all_name}.kubeconfig&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubeadm token list --kubeconfig ~/.kube/config     # 查看 Kubeadm 为各节点创建的 Token&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl get secrets -n kube-system | grep bootstrap-token   # 查看各 Token 关联的 Secret&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.36592865928659285&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjB9Vw3Gxy2HjSeiaibicTx1l2v1nVassr3xElpAqmTlpnB2Ma6jlR23Frw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1626&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_name in ${&lt;br/&gt;   &lt;br/&gt;     ALL_NAMES[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_name}&quot;&lt;/span&gt;&lt;br/&gt;    scp kubelet-bootstrap-${&lt;br/&gt;   &lt;br/&gt;     all_name}.kubeconfig root@${&lt;br/&gt;   &lt;br/&gt;     all_name}:/etc/kubernetes/kubelet-bootstrap.kubeconfig&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建Kubelet 参数配置文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kubelet-config.yaml.template &amp;lt;&amp;lt; EOF&lt;br/&gt;kind: KubeletConfiguration&lt;br/&gt;apiVersion: kubelet.config.k8s.io/v1beta1&lt;br/&gt;address: &lt;span&gt;&quot;##ALL_IP##&quot;&lt;/span&gt;&lt;br/&gt;staticPodPath: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;syncFrequency: &lt;span&gt;1&lt;/span&gt;m&lt;br/&gt;fileCheckFrequency: &lt;span&gt;20&lt;/span&gt;s&lt;br/&gt;httpCheckFrequency: &lt;span&gt;20&lt;/span&gt;s&lt;br/&gt;staticPodURL: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;port: &lt;span&gt;10250&lt;/span&gt;&lt;br/&gt;readOnlyPort: &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;rotateCertificates: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;serverTLSBootstrap: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;authentication:&lt;br/&gt;  anonymous:&lt;br/&gt;    enabled: &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;  webhook:&lt;br/&gt;    enabled: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;  x509:&lt;br/&gt;    clientCAFile: &lt;span&gt;&quot;/etc/kubernetes/cert/ca.pem&quot;&lt;/span&gt;&lt;br/&gt;authorization:&lt;br/&gt;  mode: Webhook&lt;br/&gt;registryPullQPS: &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;registryBurst: &lt;span&gt;20&lt;/span&gt;&lt;br/&gt;eventRecordQPS: &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;eventBurst: &lt;span&gt;20&lt;/span&gt;&lt;br/&gt;enableDebuggingHandlers: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;enableContentionProfiling: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;healthzPort: &lt;span&gt;10248&lt;/span&gt;&lt;br/&gt;healthzBindAddress: &lt;span&gt;&quot;##ALL_IP##&quot;&lt;/span&gt;&lt;br/&gt;clusterDomain: &lt;span&gt;&quot;${CLUSTER_DNS_DOMAIN}&quot;&lt;/span&gt;&lt;br/&gt;clusterDNS:&lt;br/&gt;  - &lt;span&gt;&quot;${CLUSTER_DNS_SVC_IP}&quot;&lt;/span&gt;&lt;br/&gt;nodeStatusUpdateFrequency: &lt;span&gt;10&lt;/span&gt;s&lt;br/&gt;nodeStatusReportFrequency: &lt;span&gt;1&lt;/span&gt;m&lt;br/&gt;imageMinimumGCAge: &lt;span&gt;2&lt;/span&gt;m&lt;br/&gt;imageGCHighThresholdPercent: &lt;span&gt;85&lt;/span&gt;&lt;br/&gt;imageGCLowThresholdPercent: &lt;span&gt;80&lt;/span&gt;&lt;br/&gt;volumeStatsAggPeriod: &lt;span&gt;1&lt;/span&gt;m&lt;br/&gt;kubeletCgroups: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;systemCgroups: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;cgroupRoot: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;cgroupsPerQOS: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;cgroupDriver: cgroupfs&lt;br/&gt;runtimeRequestTimeout: &lt;span&gt;10&lt;/span&gt;m&lt;br/&gt;hairpinMode: promiscuous-bridge&lt;br/&gt;maxPods: &lt;span&gt;220&lt;/span&gt;&lt;br/&gt;podCIDR: &lt;span&gt;&quot;${CLUSTER_CIDR}&quot;&lt;/span&gt;&lt;br/&gt;podPidsLimit: -&lt;span&gt;1&lt;/span&gt;&lt;br/&gt;resolvConf: /etc/resolv.conf&lt;br/&gt;maxOpenFiles: &lt;span&gt;1000000&lt;/span&gt;&lt;br/&gt;kubeAPIQPS: &lt;span&gt;1000&lt;/span&gt;&lt;br/&gt;kubeAPIBurst: &lt;span&gt;2000&lt;/span&gt;&lt;br/&gt;serializeImagePulls: &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;evictionHard:&lt;br/&gt;  memory.available:  &lt;span&gt;&quot;100Mi&quot;&lt;/span&gt;&lt;br/&gt;nodefs.available:  &lt;span&gt;&quot;10%&quot;&lt;/span&gt;&lt;br/&gt;nodefs.inodesFree: &lt;span&gt;&quot;5%&quot;&lt;/span&gt;&lt;br/&gt;imagefs.available: &lt;span&gt;&quot;15%&quot;&lt;/span&gt;&lt;br/&gt;evictionSoft: {&lt;br/&gt;   &lt;br/&gt;     }&lt;br/&gt;enableControllerAttachDetach: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;failSwapOn: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;containerLogMaxSize: &lt;span&gt;20&lt;/span&gt;Mi&lt;br/&gt;containerLogMaxFiles: &lt;span&gt;10&lt;/span&gt;&lt;br/&gt;systemReserved: {&lt;br/&gt;   &lt;br/&gt;     }&lt;br/&gt;kubeReserved: {&lt;br/&gt;   &lt;br/&gt;     }&lt;br/&gt;systemReservedCgroup: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;kubeReservedCgroup: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;enforceNodeAllocatable: [&lt;span&gt;&quot;pods&quot;&lt;/span&gt;]&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    sed -e &lt;span&gt;&quot;s/##ALL_IP##/${all_ip}/&quot;&lt;/span&gt; kubelet-config.yaml.template &amp;gt; kubelet-config-${&lt;br/&gt;   &lt;br/&gt;     all_ip}.yaml.template&lt;br/&gt;    scp kubelet-config-${&lt;br/&gt;   &lt;br/&gt;     all_ip}.yaml.template root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/etc/kubernetes/kubelet-config.yaml&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）创建 Kubelet 启动脚本&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kubelet.service.template &amp;lt;&amp;lt; EOF&lt;br/&gt;[Unit]&lt;br/&gt;Description=Kubernetes Kubelet&lt;br/&gt;Documentation=https:&lt;span&gt;//github.com/GoogleCloudPlatform/kubernetes&lt;/span&gt;&lt;br/&gt;After=docker.service&lt;br/&gt;Requires=docker.service&lt;br/&gt;&lt;br/&gt;[Service]&lt;br/&gt;WorkingDirectory=${&lt;br/&gt;   &lt;br/&gt;     K8S_DIR}/kubelet&lt;br/&gt;ExecStart=/opt/k8s/bin/kubelet \\&lt;br/&gt;  --bootstrap-kubeconfig=/etc/kubernetes/kubelet-bootstrap.kubeconfig \\&lt;br/&gt;  --cert-dir=/etc/kubernetes/cert \\&lt;br/&gt;  --cgroup-driver=cgroupfs \\&lt;br/&gt;  --cni-conf-dir=/etc/cni/net.d \\&lt;br/&gt;  --container-runtime=docker \\&lt;br/&gt;  --container-runtime-endpoint=unix:&lt;span&gt;///var/run/dockershim.sock \\&lt;/span&gt;&lt;br/&gt;  --root-dir=${&lt;br/&gt;   &lt;br/&gt;     K8S_DIR}/kubelet \\&lt;br/&gt;  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \\&lt;br/&gt;  --config=/etc/kubernetes/kubelet-config.yaml \\&lt;br/&gt;  --hostname-override=##ALL_NAME## \\&lt;br/&gt;  --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause-amd64:&lt;span&gt;3.2&lt;/span&gt; \\&lt;br/&gt;  --image-pull-progress-deadline=&lt;span&gt;15&lt;/span&gt;m \\&lt;br/&gt;  --volume-plugin-dir=${&lt;br/&gt;   &lt;br/&gt;     K8S_DIR}/kubelet/kubelet-plugins/volume/exec/ \\&lt;br/&gt;  --logtostderr=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --v=&lt;span&gt;2&lt;/span&gt;&lt;br/&gt;Restart=always&lt;br/&gt;RestartSec=&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;StartLimitInterval=&lt;span&gt;0&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Install]&lt;br/&gt;WantedBy=multi-user.target&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_name in ${&lt;br/&gt;   &lt;br/&gt;     ALL_NAMES[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_name}&quot;&lt;/span&gt;&lt;br/&gt;    sed -e &lt;span&gt;&quot;s/##ALL_NAME##/${all_name}/&quot;&lt;/span&gt; kubelet.service.template &amp;gt; kubelet-${&lt;br/&gt;   &lt;br/&gt;     all_name}.service&lt;br/&gt;    scp kubelet-${&lt;br/&gt;   &lt;br/&gt;     all_name}.service root@${&lt;br/&gt;   &lt;br/&gt;     all_name}:/etc/systemd/system/kubelet.service&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2）启动并验证&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;授权&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --group=system:bootstrappers&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;启动Kubelet&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_name in ${&lt;br/&gt;   &lt;br/&gt;     ALL_NAMES[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_name}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_name} &lt;span&gt;&quot;mkdir -p ${K8S_DIR}/kubelet/kubelet-plugins/volume/exec/&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_name} &lt;span&gt;&quot;systemctl daemon-reload &amp;amp;&amp;amp; systemctl enable kubelet --now&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看Kubelet 服务&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_name in ${&lt;br/&gt;   &lt;br/&gt;     ALL_NAMES[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_name}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_name} &lt;span&gt;&quot;systemctl status kubelet | grep active&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl get csr         # 因为我们还没做认证. 所以显示 Pengding 状态&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3759148369926813&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjsR548wIJVEPW7iaoMneHibkrpI3Uhbc3sZDvNX9a8WUUUCN3yno6PQUg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1503&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3）Approve CSR 请求&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;自动Approve CSR 请求（创建三个 ClusterRoleBinding，分别用于自动 &lt;code&gt;approve client&lt;/code&gt; &lt;code&gt;renew client&lt;/code&gt; &lt;code&gt;renew server&lt;/code&gt; 证书）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; csr-crb.yaml &amp;lt;&amp;lt; EOF&lt;br/&gt; # Approve all CSRs &lt;span&gt;for&lt;/span&gt; the group &lt;span&gt;&quot;system:bootstrappers&quot;&lt;/span&gt;&lt;br/&gt; kind: ClusterRoleBinding&lt;br/&gt; apiVersion: rbac.authorization.k8s.io/v1&lt;br/&gt; metadata:&lt;br/&gt;   name: auto-approve-csrs-&lt;span&gt;for&lt;/span&gt;-group&lt;br/&gt; subjects:&lt;br/&gt; - kind: Group&lt;br/&gt;   name: system:bootstrappers&lt;br/&gt;   apiGroup: rbac.authorization.k8s.io&lt;br/&gt; roleRef:&lt;br/&gt;   kind: ClusterRole&lt;br/&gt;   name: system:certificates.k8s.io:certificatesigningrequests:nodeclient&lt;br/&gt;   apiGroup: rbac.authorization.k8s.io&lt;br/&gt;---&lt;br/&gt; # To let a node of the group &lt;span&gt;&quot;system:nodes&quot;&lt;/span&gt; renew its own credentials&lt;br/&gt; kind: ClusterRoleBinding&lt;br/&gt; apiVersion: rbac.authorization.k8s.io/v1&lt;br/&gt; metadata:&lt;br/&gt;   name: node-client-cert-renewal&lt;br/&gt; subjects:&lt;br/&gt; - kind: Group&lt;br/&gt;   name: system:nodes&lt;br/&gt;   apiGroup: rbac.authorization.k8s.io&lt;br/&gt; roleRef:&lt;br/&gt;   kind: ClusterRole&lt;br/&gt;   name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient&lt;br/&gt;   apiGroup: rbac.authorization.k8s.io&lt;br/&gt;---&lt;br/&gt;# A ClusterRole which instructs the CSR approver to approve a node requesting a&lt;br/&gt;# serving cert matching its client cert.&lt;br/&gt;kind: ClusterRole&lt;br/&gt;apiVersion: rbac.authorization.k8s.io/v1&lt;br/&gt;metadata:&lt;br/&gt;  name: approve-node-server-renewal-csr&lt;br/&gt;rules:&lt;br/&gt;- apiGroups: [&lt;span&gt;&quot;certificates.k8s.io&quot;&lt;/span&gt;]&lt;br/&gt;  resources: [&lt;span&gt;&quot;certificatesigningrequests/selfnodeserver&quot;&lt;/span&gt;]&lt;br/&gt;  verbs: [&lt;span&gt;&quot;create&quot;&lt;/span&gt;]&lt;br/&gt;---&lt;br/&gt; # To let a node of the group &lt;span&gt;&quot;system:nodes&quot;&lt;/span&gt; renew its own server credentials&lt;br/&gt; kind: ClusterRoleBinding&lt;br/&gt; apiVersion: rbac.authorization.k8s.io/v1&lt;br/&gt; metadata:&lt;br/&gt;   name: node-server-cert-renewal&lt;br/&gt; subjects:&lt;br/&gt; - kind: Group&lt;br/&gt;   name: system:nodes&lt;br/&gt;   apiGroup: rbac.authorization.k8s.io&lt;br/&gt; roleRef:&lt;br/&gt;   kind: ClusterRole&lt;br/&gt;   name: approve-node-server-renewal-csr&lt;br/&gt;   apiGroup: rbac.authorization.k8s.io&lt;br/&gt;EOF&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl apply -f csr-crb.yaml&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;验证（等待一段时间 &lt;code&gt;1 ~ 5&lt;/code&gt; 分钟)，三个节点的 CSR 都自动 &lt;code&gt;approved&lt;/code&gt;）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl get csr | grep boot    # 等待一段时间 (&lt;span&gt;1&lt;/span&gt;-&lt;span&gt;10&lt;/span&gt; 分钟)，三个节点的 CSR 都自动 approved&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl get nodes       # 所有节点均 Ready&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2741184298070526&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjc4jicK7Y0iaKSXaqA5mWl6dibaKGfHibkNFibKicN3w9vv79f1q57KI7R9qA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1503&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# ls -l /etc/kubernetes/kubelet.kubeconfig&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# ls -l /etc/kubernetes/cert/ | grep kubelet&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.23401950162513543&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjmV6xHNrRsLkFJMQ9YODhOltEUQXkM4cwFJTEUmMtuDehJpibs6lwFkw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1846&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4）手动 Approve Server Cert Csr&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于安全性考虑，CSR &lt;code&gt;approving controllers&lt;/code&gt; 不会自动 &lt;code&gt;approve kubelet server&lt;/code&gt; 证书签名请求，需要手动 &lt;code&gt;approve&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# kubectl get csr | grep node&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3169912693082606&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjWA5Wb0dwCSoctOROAv29jrHVcLHU9RH984ke3VZCvNRIKFAXVbib2zQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1489&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# kubectl get csr | grep Pending | awk &lt;span&gt;&#x27;{print $1}&#x27;&lt;/span&gt; | xargs kubectl certificate approve&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# ls -l /etc/kubernetes/cert/kubelet-*&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2502708559046587&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjpGrQdTHz1GT4G1iblDeLBodU9Db0ibNM9VoIO91PgDlZYX3henicib0fCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1846&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;5）Kubelet API 接口配置&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kubelet API 认证和授权&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# curl -s --cacert /etc/kubernetes/cert/ca.pem https:&lt;span&gt;//192.168.1.1:10250/metrics&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# curl -s --cacert /etc/kubernetes/cert/ca.pem -H &lt;span&gt;&quot;Authorization: Bearer 123456&quot;&lt;/span&gt; https:&lt;span&gt;//192.168.1.1:10250/metrics&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.27824267782426776&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFj5yanN3ZIMwTF9H9lp2oicQ5RsXgW1cU6UcFcdzfmxjzNial2tmj7tibbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1434&quot;/&gt;&lt;br/&gt;证书认证和授权&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;// 默认权限不足&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# curl -s --cacert /etc/kubernetes/cert/ca.pem --cert /etc/kubernetes/cert/kube-controller-manager.pem --key /etc/kubernetes/cert/kube-controller-manager-key.pem https:&lt;span&gt;//192.168.1.1:10250/metrics&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// 使用最高权限的 admin&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# curl -s --cacert /etc/kubernetes/cert/ca.pem --cert /opt/k8s/work/admin.pem --key /opt/k8s/work/admin-key.pem https:&lt;span&gt;//192.168.1.1:10250/metrics | head&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建Bear Token 认证和授权&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# kubectl create serviceaccount kubelet-api-test&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# kubectl create clusterrolebinding kubelet-api-test --clusterrole=system:kubelet-api-admin --serviceaccount=&lt;span&gt;default&lt;/span&gt;:kubelet-api-test&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# SECRET=$(kubectl get secrets | grep kubelet-api-test | awk &lt;span&gt;&#x27;{print $1}&#x27;&lt;/span&gt;)&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# TOKEN=$(kubectl describe secret ${&lt;br/&gt;   &lt;br/&gt;     SECRET} | grep -E &lt;span&gt;&#x27;^token&#x27;&lt;/span&gt; | awk &lt;span&gt;&#x27;{print $2}&#x27;&lt;/span&gt;)&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# echo ${&lt;br/&gt;   &lt;br/&gt;     TOKEN}&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# curl -s --cacert /etc/kubernetes/cert/ca.pem -H &lt;span&gt;&quot;Authorization: Bearer ${TOKEN}&quot;&lt;/span&gt; https:&lt;span&gt;//192.168.1.1:10250/metrics | head&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;5.安装 Kube-Proxy 组件&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kube-Proxy 运行在所有主机上，用来监听 APIServer 中的 Service 和 Endpoint 的变化情况，并创建路由规则来提供服务 IP 和负载均衡功能。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kubernetes/server/bin/kube-proxy root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/opt/k8s/bin/&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;chmod +x /opt/k8s/bin/*&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）创建 Kube-Proxy 证书和密钥&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建Kube-Proxy 的 CA 证书请求文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kube-proxy-csr.json &amp;lt;&amp;lt; EOF&lt;br/&gt;{&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;  &lt;span&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span&gt;&quot;system:kube-proxy&quot;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;&quot;key&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;    &lt;span&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span&gt;&quot;rsa&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;size&quot;&lt;/span&gt;: &lt;span&gt;2048&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;names&quot;&lt;/span&gt;: [&lt;br/&gt;    {&lt;br/&gt;   &lt;br/&gt;     &lt;br/&gt;      &lt;span&gt;&quot;C&quot;&lt;/span&gt;: &lt;span&gt;&quot;CN&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;L&quot;&lt;/span&gt;: &lt;span&gt;&quot;Shanghai&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;O&quot;&lt;/span&gt;: &lt;span&gt;&quot;k8s&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;OU&quot;&lt;/span&gt;: &lt;span&gt;&quot;System&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2）生成证书和密钥&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cfssl gencert -ca=/opt/k8s/work/ca.pem -ca-key=/opt/k8s/work/ca-key.pem -config=/opt/k8s/work/ca-config.json -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3）创建 Kubeconfig 文件&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-cluster kubernetes \&lt;br/&gt;  --certificate-authority=/opt/k8s/work/ca.pem \&lt;br/&gt;  --embed-certs=&lt;span&gt;true&lt;/span&gt; \&lt;br/&gt;  --server=${&lt;br/&gt;   &lt;br/&gt;     KUBE_APISERVER} \&lt;br/&gt;  --kubeconfig=kube-proxy.kubeconfig&lt;br/&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-credentials kube-proxy \&lt;br/&gt;  --client-certificate=kube-proxy.pem \&lt;br/&gt;  --client-key=kube-proxy-key.pem \&lt;br/&gt;  --embed-certs=&lt;span&gt;true&lt;/span&gt; \&lt;br/&gt;  --kubeconfig=kube-proxy.kubeconfig&lt;br/&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config set-context &lt;span&gt;default&lt;/span&gt; \&lt;br/&gt;  --cluster=kubernetes \&lt;br/&gt;  --user=kube-proxy \&lt;br/&gt;  --kubeconfig=kube-proxy.kubeconfig&lt;br/&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# kubectl config use-context &lt;span&gt;default&lt;/span&gt; --kubeconfig=kube-proxy.kubeconfig&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    scp kube-proxy.kubeconfig root@${&lt;br/&gt;   &lt;br/&gt;     all_ip}:/etc/kubernetes/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4）创建 Kube-Proxy 配置文件&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kube-proxy-config.yaml.template &amp;lt;&amp;lt; EOF&lt;br/&gt;kind: KubeProxyConfiguration&lt;br/&gt;apiVersion: kubeproxy.config.k8s.io/v1alpha1&lt;br/&gt;clientConnection:&lt;br/&gt;  burst: &lt;span&gt;200&lt;/span&gt;&lt;br/&gt;  kubeconfig: &lt;span&gt;&quot;/etc/kubernetes/kube-proxy.kubeconfig&quot;&lt;/span&gt;&lt;br/&gt;  qps: &lt;span&gt;100&lt;/span&gt;&lt;br/&gt;bindAddress: ##ALL_IP##&lt;br/&gt;healthzBindAddress: ##ALL_IP##:&lt;span&gt;10256&lt;/span&gt;&lt;br/&gt;metricsBindAddress: ##ALL_IP##:&lt;span&gt;10249&lt;/span&gt;&lt;br/&gt;enableProfiling: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;clusterCIDR: ${&lt;br/&gt;   &lt;br/&gt;     CLUSTER_CIDR}&lt;br/&gt;hostnameOverride: ##ALL_NAME##&lt;br/&gt;mode: &lt;span&gt;&quot;ipvs&quot;&lt;/span&gt;&lt;br/&gt;portRange: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;kubeProxyIPTablesConfiguration:&lt;br/&gt;  masqueradeAll: &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;kubeProxyIPVSConfiguration:&lt;br/&gt;  scheduler: rr&lt;br/&gt;  excludeCIDRs: []&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; (( i=&lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;3&lt;/span&gt;; i++ ))&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${ALL_NAMES[i]}&quot;&lt;/span&gt;&lt;br/&gt;    sed -e &lt;span&gt;&quot;s/##ALL_NAME##/${ALL_NAMES[i]}/&quot;&lt;/span&gt; -e &lt;span&gt;&quot;s/##ALL_IP##/${ALL_IPS[i]}/&quot;&lt;/span&gt; kube-proxy-config.yaml.template &amp;gt; kube-proxy-config-${&lt;br/&gt;   &lt;br/&gt;     ALL_NAMES[i]}.yaml.template&lt;br/&gt;    scp kube-proxy-config-${&lt;br/&gt;   &lt;br/&gt;     ALL_NAMES[i]}.yaml.template root@${&lt;br/&gt;   &lt;br/&gt;     ALL_NAMES[i]}:/etc/kubernetes/kube-proxy-config.yaml&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;4）创建启动脚本&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cat &amp;gt; kube-proxy.service &amp;lt;&amp;lt; EOF&lt;br/&gt;[Unit]&lt;br/&gt;Description=Kubernetes Kube-Proxy Server&lt;br/&gt;Documentation=https:&lt;span&gt;//github.com/GoogleCloudPlatform/kubernetes&lt;/span&gt;&lt;br/&gt;After=network.target&lt;br/&gt;&lt;br/&gt;[Service]&lt;br/&gt;WorkingDirectory=${&lt;br/&gt;   &lt;br/&gt;     K8S_DIR}/kube-proxy&lt;br/&gt;ExecStart=/opt/k8s/bin/kube-proxy \\&lt;br/&gt;  --config=/etc/kubernetes/kube-proxy-config.yaml \\&lt;br/&gt;  --logtostderr=&lt;span&gt;true&lt;/span&gt; \\&lt;br/&gt;  --v=&lt;span&gt;2&lt;/span&gt;&lt;br/&gt;Restart=on-failure&lt;br/&gt;RestartSec=&lt;span&gt;5&lt;/span&gt;&lt;br/&gt;LimitNOFILE=&lt;span&gt;65536&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;[Install]&lt;br/&gt;WantedBy=multi-user.target&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_name in ${&lt;br/&gt;   &lt;br/&gt;     ALL_NAMES[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_name}&quot;&lt;/span&gt;&lt;br/&gt;    scp kube-proxy.service root@${&lt;br/&gt;   &lt;br/&gt;     all_name}:/etc/systemd/system/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;5）启动并验证&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; all_ip in ${&lt;br/&gt;   &lt;br/&gt;     ALL_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_ip}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;mkdir -p ${K8S_DIR}/kube-proxy&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;modprobe ip_vs_rr&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_ip} &lt;span&gt;&quot;systemctl daemon-reload &amp;amp;&amp;amp; systemctl enable kube-proxy --now&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看&lt;code&gt;ipvs&lt;/code&gt; 路由规则&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# ipvsadm -ln&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.33987915407854985&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjG7AgZtVk1h0M13PY5PCBToFibso96WL9KzUZcbfnUnRoPw4SXN1xeYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1324&quot;/&gt;&lt;br/&gt;&lt;strong&gt;问题：&lt;/strong&gt; 当我们在启动 &lt;code&gt;kube-proxy&lt;/code&gt; 组件后，通过 &lt;code&gt;systemctl&lt;/code&gt; 查看该组件状态时，出现如下错误&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Not using --random-fully in the MASQUERADE rule &lt;span&gt;for&lt;/span&gt; iptables because the local version of iptables does not support it&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面报错是因为我们的 &lt;code&gt;iptables&lt;/code&gt; 版本不支持 &lt;code&gt;--random-fully&lt;/code&gt; 配置（1.6.2 版本上支持），所以我们需要对 &lt;code&gt;iptables&lt;/code&gt; 进行升级操作。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@master&lt;/span&gt;01 work]# wget https:&lt;span&gt;//www.netfilter.org/projects/iptables/files/iptables-1.6.2.tar.bz2 --no-check-certificate&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@master&lt;/span&gt;01 work]# &lt;span&gt;for&lt;/span&gt; all_name in ${&lt;br/&gt;   &lt;br/&gt;     ALL_NAMES[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${all_name}&quot;&lt;/span&gt;&lt;br/&gt;    scp iptables-&lt;span&gt;1.6.2&lt;/span&gt;.tar.bz2 root@${&lt;br/&gt;   &lt;br/&gt;     all_name}:/root/&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_name} &lt;span&gt;&quot;yum -y install gcc make libnftnl-devel libmnl-devel autoconf automake libtool bison flex libnetfilter_conntrack-devel libnetfilter_queue-devel libpcap-devel bzip2&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_name} &lt;span&gt;&quot;export LC_ALL=C &amp;amp;&amp;amp; tar -xf iptables-1.6.2.tar.bz2 &amp;amp;&amp;amp; cd iptables-1.6.2 &amp;amp;&amp;amp; ./autogen.sh &amp;amp;&amp;amp; ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     all_name} &lt;span&gt;&quot;systemctl daemon-reload &amp;amp;&amp;amp; systemctl restart kubelet &amp;amp;&amp;amp; systemctl restart kube-proxy&quot;&lt;/span&gt;&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;6.安装 CoreDNS 插件&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）修改 Coredns 配置&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 ~]# cd /opt/k8s/work/kubernetes/cluster/addons/dns/coredns&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 coredns]# cp coredns.yaml.base coredns.yaml&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 coredns]# sed -i -e &lt;span&gt;&quot;s/__PILLAR__DNS__DOMAIN__/${CLUSTER_DNS_DOMAIN}/&quot;&lt;/span&gt; -e &lt;span&gt;&quot;s/__PILLAR__DNS__SERVER__/${CLUSTER_DNS_SVC_IP}/&quot;&lt;/span&gt; -e &lt;span&gt;&quot;s/__PILLAR__DNS__MEMORY__LIMIT__/200Mi/&quot;&lt;/span&gt; coredns.yaml&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2）创建 Coredns 并启动&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置调度策略&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 coredns]# kubectl label nodes k8s-master01 node-role.kubernetes.io/master=&lt;span&gt;true&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 coredns]# kubectl label nodes k8s-master02 node-role.kubernetes.io/master=&lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 coredns]# vim coredns.yaml&lt;br/&gt;......&lt;br/&gt;apiVersion: apps/v1&lt;br/&gt;kind: Deployment&lt;br/&gt;......&lt;br/&gt;spec:&lt;br/&gt;  replicas: &lt;span&gt;2&lt;/span&gt;               # 配置成两个副本&lt;br/&gt;......&lt;br/&gt;      tolerations:&lt;br/&gt;        - key: &lt;span&gt;&quot;node-role.kubernetes.io/master&quot;&lt;/span&gt;&lt;br/&gt;          operator: &lt;span&gt;&quot;Equal&quot;&lt;/span&gt;&lt;br/&gt;          value: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;          effect: NoSchedule&lt;br/&gt;      nodeSelector:&lt;br/&gt;        node-role.kubernetes.io/master: &lt;span&gt;&quot;true&quot;&lt;/span&gt;&lt;br/&gt;......&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 coredns]# kubectl create -f coredns.yaml&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3721498371335505&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjQXSJ15Evr3fvibxJyzavJliatO8W2HKA6iafFiaVsVCQYQUZxuzfT9yqxg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1228&quot;/&gt;&lt;figcaption&gt; &lt;/figcaption&gt;&lt;/figure&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;kubectl describe pod Pod-Name -n kube-system           # Pod-Name 你们需要换成自己的&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为上面镜像使用的是 K8s 官方的镜像（国外），所以可能会出现：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Normal   BackOff    &lt;span&gt;72&lt;/span&gt;s (x6 over &lt;span&gt;3&lt;/span&gt;m47s)   kubelet, k8s-master01  Back-off pulling image &lt;span&gt;&quot;k8s.gcr.io/coredns:1.6.5&quot;&lt;/span&gt;&lt;br/&gt;Warning  Failed     &lt;span&gt;57&lt;/span&gt;s (x7 over &lt;span&gt;3&lt;/span&gt;m47s)   kubelet, k8s-master01  Error: ImagePullBackOff&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;出现如上问题后，我们可以通过拉取其它仓库中的镜像，拉取完后重新打个标签即可。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;如：docker pull k8s.gcr.io/coredns:&lt;span&gt;1.6.5&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;我们可以：&lt;br/&gt;docker pull registry.aliyuncs.com/google_containers/coredns:&lt;span&gt;1.6.5&lt;/span&gt;&lt;br/&gt;docker tag registry.aliyuncs.com/google_containers/coredns:&lt;span&gt;1.6.5&lt;/span&gt; k8s.gcr.io/coredns:&lt;span&gt;1.6.5&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3）验证&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 coredns]# kubectl run -it --rm test-dns --image=busybox:&lt;span&gt;1.28.4&lt;/span&gt; sh&lt;br/&gt;If you don&lt;span&gt;&#x27;t see a command prompt, try pressing enter.&lt;br/&gt;/ # &lt;br/&gt;/ # nslookup kubernetes&lt;br/&gt;Server:    10.20.0.254&lt;br/&gt;Address 1: 10.20.0.254 kube-dns.kube-system.svc.cluster.local&lt;br/&gt;&lt;br/&gt;Name:      kubernetes&lt;br/&gt;Address 1: 10.20.0.1 kubernetes.default.svc.cluster.local&lt;br/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;7.安装 Dashboard 仪表盘&lt;/h2&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 coredns]# cd /opt/k8s/work/&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# mkdir metrics&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cd metrics/&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 metrics]# wget https:&lt;span&gt;//github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.6/components.yaml&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 metrics]# vim components.yaml&lt;br/&gt;......&lt;br/&gt;apiVersion: apps/v1&lt;br/&gt;kind: Deployment&lt;br/&gt;metadata:&lt;br/&gt;  name: metrics-server&lt;br/&gt;  namespace: kube-system&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: metrics-server&lt;br/&gt;spec:&lt;br/&gt;  replicas: &lt;span&gt;2&lt;/span&gt;            # 修改副本数&lt;br/&gt;  selector:&lt;br/&gt;    matchLabels:&lt;br/&gt;      k8s-app: metrics-server&lt;br/&gt;  template:&lt;br/&gt;    metadata:&lt;br/&gt;      name: metrics-server&lt;br/&gt;      labels:&lt;br/&gt;        k8s-app: metrics-server&lt;br/&gt;    spec:&lt;br/&gt;      hostNetwork: &lt;span&gt;true&lt;/span&gt;          # 配置主机网络&lt;br/&gt;      serviceAccountName: metrics-server&lt;br/&gt;      volumes:&lt;br/&gt;      # mount in tmp so we can safely use from-scratch images and/or read-only containers&lt;br/&gt;      - name: tmp-dir&lt;br/&gt;        emptyDir: {&lt;br/&gt;   &lt;br/&gt;     }&lt;br/&gt;      containers:&lt;br/&gt;      - name: metrics-server&lt;br/&gt;        image: registry.aliyuncs.com/google_containers/metrics-server-amd64:v0&lt;span&gt;.3.6&lt;/span&gt;  # 修改镜像名&lt;br/&gt;        imagePullPolicy: IfNotPresent&lt;br/&gt;        args:&lt;br/&gt;          - --cert-dir=/tmp&lt;br/&gt;          - --secure-port=&lt;span&gt;4443&lt;/span&gt;&lt;br/&gt;          - --kubelet-insecure-tls       # 新加的&lt;br/&gt;          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP # 新加的&lt;br/&gt;......&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 metrics]# kubectl create -f components.yaml &lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;验证：&lt;img data-ratio=&quot;0.39086294416243655&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjqa7zr5c7Z8Oh7HPOD2I1AwOUQlnDx1zwpO0KXHReFKKThBC6B0IPUg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1379&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;1）创建证书&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 metrics]# cd /opt/k8s/work/&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# mkdir -p /opt/k8s/work/dashboard/certs&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# openssl req -x509 -nodes -days &lt;span&gt;365&lt;/span&gt; -newkey rsa:&lt;span&gt;2048&lt;/span&gt; -keyout tls.key -out tls.crt -subj &lt;span&gt;&quot;/C=CN/ST=ZheJiang/L=HangZhou/O=Xianghy/OU=Xianghy/CN=k8s.odocker.com&quot;&lt;/span&gt;&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# &lt;span&gt;for&lt;/span&gt; master_ip in ${&lt;br/&gt;   &lt;br/&gt;     MASTER_IPS[@]}&lt;br/&gt;  &lt;span&gt;do&lt;/span&gt;&lt;br/&gt;    echo &lt;span&gt;&quot;&amp;gt;&amp;gt;&amp;gt; ${master_ip}&quot;&lt;/span&gt;&lt;br/&gt;    ssh root@${&lt;br/&gt;   &lt;br/&gt;     master_ip} &lt;span&gt;&quot;mkdir -p /opt/k8s/work/dashboard/certs&quot;&lt;/span&gt; &lt;br/&gt;    scp tls.* root@${&lt;br/&gt;   &lt;br/&gt;     master_ip}:/opt/k8s/work/dashboard/certs/&lt;br/&gt;  done&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;2）修改 Dashboard 配置&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;手动创建 Secret&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@master&lt;/span&gt;01 ~]# kubectl create namespace kubernetes-dashboard&lt;br/&gt;[root&lt;span&gt;@master&lt;/span&gt;01 ~]# kubectl create secret generic kubernetes-dashboard-certs --from-file=/opt/k8s/work/dashboard/certs -n kubernetes-dashboard&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;修改Dashboard 配置（你们可以通过这个地址来看 Dashboard 的 &lt;code&gt;yaml&lt;/code&gt; 文件：传送门）&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 work]# cd dashboard/&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 dashboard]# vim dashboard.yaml&lt;br/&gt;apiVersion: v1&lt;br/&gt;kind: ServiceAccount&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: kubernetes-dashboard&lt;br/&gt;  name: kubernetes-dashboard&lt;br/&gt;  namespace: kubernetes-dashboard&lt;br/&gt;---&lt;br/&gt;kind: Service&lt;br/&gt;apiVersion: v1&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: kubernetes-dashboard&lt;br/&gt;  name: kubernetes-dashboard&lt;br/&gt;  namespace: kubernetes-dashboard&lt;br/&gt;spec:&lt;br/&gt;  type: NodePort&lt;br/&gt;  ports:&lt;br/&gt;    - port: &lt;span&gt;443&lt;/span&gt;&lt;br/&gt;      targetPort: &lt;span&gt;8443&lt;/span&gt;&lt;br/&gt;      nodePort: &lt;span&gt;30080&lt;/span&gt;&lt;br/&gt;  selector:&lt;br/&gt;    k8s-app: kubernetes-dashboard&lt;br/&gt;---&lt;br/&gt;apiVersion: v1&lt;br/&gt;kind: Secret&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: kubernetes-dashboard&lt;br/&gt;  name: kubernetes-dashboard-csrf&lt;br/&gt;  namespace: kubernetes-dashboard&lt;br/&gt;type: Opaque&lt;br/&gt;data:&lt;br/&gt;  csrf: &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;---&lt;br/&gt;apiVersion: v1&lt;br/&gt;kind: Secret&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: kubernetes-dashboard&lt;br/&gt;  name: kubernetes-dashboard-key-holder&lt;br/&gt;  namespace: kubernetes-dashboard&lt;br/&gt;type: Opaque&lt;br/&gt;---&lt;br/&gt;kind: ConfigMap&lt;br/&gt;apiVersion: v1&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: kubernetes-dashboard&lt;br/&gt;  name: kubernetes-dashboard-settings&lt;br/&gt;  namespace: kubernetes-dashboard&lt;br/&gt;---&lt;br/&gt;kind: Role&lt;br/&gt;apiVersion: rbac.authorization.k8s.io/v1&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: kubernetes-dashboard&lt;br/&gt;  name: kubernetes-dashboard&lt;br/&gt;  namespace: kubernetes-dashboard&lt;br/&gt;rules:&lt;br/&gt;  - apiGroups: [&lt;span&gt;&quot;&quot;&lt;/span&gt;]&lt;br/&gt;    resources: [&lt;span&gt;&quot;secrets&quot;&lt;/span&gt;]&lt;br/&gt;    resourceNames: [&lt;span&gt;&quot;kubernetes-dashboard-key-holder&quot;&lt;/span&gt;, &lt;span&gt;&quot;kubernetes-dashboard-certs&quot;&lt;/span&gt;, &lt;span&gt;&quot;kubernetes-dashboard-csrf&quot;&lt;/span&gt;]&lt;br/&gt;    verbs: [&lt;span&gt;&quot;get&quot;&lt;/span&gt;, &lt;span&gt;&quot;update&quot;&lt;/span&gt;, &lt;span&gt;&quot;delete&quot;&lt;/span&gt;]&lt;br/&gt;  - apiGroups: [&lt;span&gt;&quot;&quot;&lt;/span&gt;]&lt;br/&gt;    resources: [&lt;span&gt;&quot;configmaps&quot;&lt;/span&gt;]&lt;br/&gt;    resourceNames: [&lt;span&gt;&quot;kubernetes-dashboard-settings&quot;&lt;/span&gt;]&lt;br/&gt;    verbs: [&lt;span&gt;&quot;get&quot;&lt;/span&gt;, &lt;span&gt;&quot;update&quot;&lt;/span&gt;]&lt;br/&gt;  - apiGroups: [&lt;span&gt;&quot;&quot;&lt;/span&gt;]&lt;br/&gt;    resources: [&lt;span&gt;&quot;services&quot;&lt;/span&gt;]&lt;br/&gt;    resourceNames: [&lt;span&gt;&quot;heapster&quot;&lt;/span&gt;, &lt;span&gt;&quot;dashboard-metrics-scraper&quot;&lt;/span&gt;]&lt;br/&gt;    verbs: [&lt;span&gt;&quot;proxy&quot;&lt;/span&gt;]&lt;br/&gt;  - apiGroups: [&lt;span&gt;&quot;&quot;&lt;/span&gt;]&lt;br/&gt;    resources: [&lt;span&gt;&quot;services/proxy&quot;&lt;/span&gt;]&lt;br/&gt;    resourceNames: [&lt;span&gt;&quot;heapster&quot;&lt;/span&gt;, &lt;span&gt;&quot;http:heapster:&quot;&lt;/span&gt;, &lt;span&gt;&quot;https:heapster:&quot;&lt;/span&gt;, &lt;span&gt;&quot;dashboard-metrics-scraper&quot;&lt;/span&gt;, &lt;span&gt;&quot;http:dashboard-metrics-scraper&quot;&lt;/span&gt;]&lt;br/&gt;    verbs: [&lt;span&gt;&quot;get&quot;&lt;/span&gt;]&lt;br/&gt;---&lt;br/&gt;kind: ClusterRole&lt;br/&gt;apiVersion: rbac.authorization.k8s.io/v1&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: kubernetes-dashboard&lt;br/&gt;  name: kubernetes-dashboard&lt;br/&gt;rules:&lt;br/&gt;  # Allow Metrics Scraper to get metrics from the Metrics server&lt;br/&gt;  - apiGroups: [&lt;span&gt;&quot;metrics.k8s.io&quot;&lt;/span&gt;]&lt;br/&gt;    resources: [&lt;span&gt;&quot;pods&quot;&lt;/span&gt;, &lt;span&gt;&quot;nodes&quot;&lt;/span&gt;]&lt;br/&gt;    verbs: [&lt;span&gt;&quot;get&quot;&lt;/span&gt;, &lt;span&gt;&quot;list&quot;&lt;/span&gt;, &lt;span&gt;&quot;watch&quot;&lt;/span&gt;]&lt;br/&gt;---&lt;br/&gt;apiVersion: rbac.authorization.k8s.io/v1&lt;br/&gt;kind: RoleBinding&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: kubernetes-dashboard&lt;br/&gt;  name: kubernetes-dashboard&lt;br/&gt;  namespace: kubernetes-dashboard&lt;br/&gt;roleRef:&lt;br/&gt;  apiGroup: rbac.authorization.k8s.io&lt;br/&gt;  kind: Role&lt;br/&gt;  name: kubernetes-dashboard&lt;br/&gt;subjects:&lt;br/&gt;  - kind: ServiceAccount&lt;br/&gt;    name: kubernetes-dashboard&lt;br/&gt;    namespace: kubernetes-dashboard&lt;br/&gt;---&lt;br/&gt;apiVersion: rbac.authorization.k8s.io/v1&lt;br/&gt;kind: ClusterRoleBinding&lt;br/&gt;metadata:&lt;br/&gt;  name: kubernetes-dashboard&lt;br/&gt;roleRef:&lt;br/&gt;  apiGroup: rbac.authorization.k8s.io&lt;br/&gt;  kind: ClusterRole&lt;br/&gt;  name: kubernetes-dashboard&lt;br/&gt;subjects:&lt;br/&gt;  - kind: ServiceAccount&lt;br/&gt;    name: kubernetes-dashboard&lt;br/&gt;    namespace: kubernetes-dashboard&lt;br/&gt;---&lt;br/&gt;kind: Deployment&lt;br/&gt;apiVersion: apps/v1&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: kubernetes-dashboard&lt;br/&gt;  name: kubernetes-dashboard&lt;br/&gt;  namespace: kubernetes-dashboard&lt;br/&gt;spec:&lt;br/&gt;  replicas: &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  revisionHistoryLimit: &lt;span&gt;10&lt;/span&gt;&lt;br/&gt;  selector:&lt;br/&gt;    matchLabels:&lt;br/&gt;      k8s-app: kubernetes-dashboard&lt;br/&gt;  template:&lt;br/&gt;    metadata:&lt;br/&gt;      labels:&lt;br/&gt;        k8s-app: kubernetes-dashboard&lt;br/&gt;    spec:&lt;br/&gt;      containers:&lt;br/&gt;        - name: kubernetes-dashboard&lt;br/&gt;          image: kubernetesui/dashboard:v2&lt;span&gt;.0.0&lt;/span&gt;-beta8&lt;br/&gt;          imagePullPolicy: IfNotPresent&lt;br/&gt;          ports:&lt;br/&gt;            - containerPort: &lt;span&gt;8443&lt;/span&gt;&lt;br/&gt;              protocol: TCP&lt;br/&gt;          args:&lt;br/&gt;            - --auto-generate-certificates&lt;br/&gt;            - --namespace=kubernetes-dashboard&lt;br/&gt;            - --tls-key-file=tls.key&lt;br/&gt;            - --tls-cert-file=tls.crt&lt;br/&gt;            - --token-ttl=&lt;span&gt;3600&lt;/span&gt;&lt;br/&gt;          volumeMounts:&lt;br/&gt;            - name: kubernetes-dashboard-certs&lt;br/&gt;              mountPath: /certs&lt;br/&gt;            - mountPath: /tmp&lt;br/&gt;              name: tmp-volume&lt;br/&gt;          livenessProbe:&lt;br/&gt;            httpGet:&lt;br/&gt;              scheme: HTTPS&lt;br/&gt;              path: /&lt;br/&gt;              port: &lt;span&gt;8443&lt;/span&gt;&lt;br/&gt;            initialDelaySeconds: &lt;span&gt;30&lt;/span&gt;&lt;br/&gt;            timeoutSeconds: &lt;span&gt;30&lt;/span&gt;&lt;br/&gt;          securityContext:&lt;br/&gt;            allowPrivilegeEscalation: &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;            readOnlyRootFilesystem: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;            runAsUser: &lt;span&gt;1001&lt;/span&gt;&lt;br/&gt;            runAsGroup: &lt;span&gt;2001&lt;/span&gt;&lt;br/&gt;      volumes:&lt;br/&gt;        - name: kubernetes-dashboard-certs&lt;br/&gt;          secret:&lt;br/&gt;            secretName: kubernetes-dashboard-certs&lt;br/&gt;        - name: tmp-volume&lt;br/&gt;          emptyDir: {&lt;br/&gt;   &lt;br/&gt;     }&lt;br/&gt;      serviceAccountName: kubernetes-dashboard&lt;br/&gt;      nodeSelector:&lt;br/&gt;        &lt;span&gt;&quot;beta.kubernetes.io/os&quot;&lt;/span&gt;: linux&lt;br/&gt;      tolerations:&lt;br/&gt;        - key: node-role.kubernetes.io/master&lt;br/&gt;          effect: NoSchedule&lt;br/&gt;---&lt;br/&gt;kind: Service&lt;br/&gt;apiVersion: v1&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: dashboard-metrics-scraper&lt;br/&gt;  name: dashboard-metrics-scraper&lt;br/&gt;  namespace: kubernetes-dashboard&lt;br/&gt;spec:&lt;br/&gt;  ports:&lt;br/&gt;    - port: &lt;span&gt;8000&lt;/span&gt;&lt;br/&gt;      targetPort: &lt;span&gt;8000&lt;/span&gt;&lt;br/&gt;  selector:&lt;br/&gt;    k8s-app: dashboard-metrics-scraper&lt;br/&gt;---&lt;br/&gt;kind: Deployment&lt;br/&gt;apiVersion: apps/v1&lt;br/&gt;metadata:&lt;br/&gt;  labels:&lt;br/&gt;    k8s-app: dashboard-metrics-scraper&lt;br/&gt;  name: dashboard-metrics-scraper&lt;br/&gt;  namespace: kubernetes-dashboard&lt;br/&gt;spec:&lt;br/&gt;  replicas: &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;  revisionHistoryLimit: &lt;span&gt;10&lt;/span&gt;&lt;br/&gt;  selector:&lt;br/&gt;    matchLabels:&lt;br/&gt;      k8s-app: dashboard-metrics-scraper&lt;br/&gt;  template:&lt;br/&gt;    metadata:&lt;br/&gt;      labels:&lt;br/&gt;        k8s-app: dashboard-metrics-scraper&lt;br/&gt;      annotations:&lt;br/&gt;        seccomp.security.alpha.kubernetes.io/pod: &lt;span&gt;&#x27;runtime/default&#x27;&lt;/span&gt;&lt;br/&gt;    spec:&lt;br/&gt;      containers:&lt;br/&gt;        - name: dashboard-metrics-scraper&lt;br/&gt;          image: kubernetesui/metrics-scraper:v1&lt;span&gt;.0.1&lt;/span&gt;&lt;br/&gt;          imagePullPolicy: IfNotPresent&lt;br/&gt;          ports:&lt;br/&gt;            - containerPort: &lt;span&gt;8000&lt;/span&gt;&lt;br/&gt;              protocol: TCP&lt;br/&gt;          livenessProbe:&lt;br/&gt;            httpGet:&lt;br/&gt;              scheme: HTTP&lt;br/&gt;              path: /&lt;br/&gt;              port: &lt;span&gt;8000&lt;/span&gt;&lt;br/&gt;            initialDelaySeconds: &lt;span&gt;30&lt;/span&gt;&lt;br/&gt;            timeoutSeconds: &lt;span&gt;30&lt;/span&gt;&lt;br/&gt;          volumeMounts:&lt;br/&gt;          - mountPath: /tmp&lt;br/&gt;            name: tmp-volume&lt;br/&gt;          securityContext:&lt;br/&gt;            allowPrivilegeEscalation: &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;            readOnlyRootFilesystem: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;            runAsUser: &lt;span&gt;1001&lt;/span&gt;&lt;br/&gt;            runAsGroup: &lt;span&gt;2001&lt;/span&gt;&lt;br/&gt;      serviceAccountName: kubernetes-dashboard&lt;br/&gt;      nodeSelector:&lt;br/&gt;        &lt;span&gt;&quot;beta.kubernetes.io/os&quot;&lt;/span&gt;: linux&lt;br/&gt;      tolerations:&lt;br/&gt;        - key: node-role.kubernetes.io/master&lt;br/&gt;          effect: NoSchedule&lt;br/&gt;      volumes:&lt;br/&gt;        - name: tmp-volume&lt;br/&gt;          emptyDir: {&lt;br/&gt;   &lt;br/&gt;     }&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 dashboard]# kubectl create -f dashboard.yaml          &lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建管理员账户&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 dashboard]# kubectl create serviceaccount admin-user -n kubernetes-dashboard&lt;br/&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 dashboard]# kubectl create clusterrolebinding admin-user --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:admin-user&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;3）验证&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;获取登录令牌&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[root&lt;span&gt;@k&lt;/span&gt;8s-master01 dashboard]# kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk &lt;span&gt;&#x27;{print $1}&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34816941852117733&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjd7xna7LNnkXjhCtUickcfnbOgOnAibRiaica1mGlFobNptTAbhEiaWnZNpw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1393&quot;/&gt;&lt;br/&gt;访问：&lt;code&gt;https://192.168.1.1:30080&lt;/code&gt;&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46749024707412223&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFjRgv8aG1HI87QCkKoJicn75IXPFrVl8zxvaZuVu2L9YibNeey7AZJUVicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1538&quot;/&gt;&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5359375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/GpcH5Yqqj0n9Cliag8kbwng634qNfmqFj7kwBMxjjPuomuTbIe30CS9JhWTsMzsjyKiacQiacAIW57xpjaMmWek7g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1920&quot;/&gt;&lt;br/&gt;到此，我们的 Kubernetes 便搭建完成了，如果你们在安装中出现问题，可以通过下面的推广信息来联系博主共同探讨。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>91e75588a2319593515719ba33a047d2</guid>
<title>Spring框架详解 - SpringMVC处理请求的原理分析</title>
<link>https://toutiao.io/k/5rid6le</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;theme-default-content content__default&quot;&gt;&lt;h1 id=&quot;spring进阶---springmvc实现原理之dispatcherservlet处理请求的过程&quot;&gt;&lt;a href=&quot;#spring进阶---springmvc实现原理之dispatcherservlet处理请求的过程&quot; class=&quot;header-anchor&quot;&gt;¶&lt;/a&gt; Spring进阶 - SpringMVC实现原理之DispatcherServlet处理请求的过程&lt;/h1&gt; &lt;blockquote&gt;&lt;p&gt;前文我们有了IOC的源码基础以及SpringMVC的基础，我们便可以进一步深入理解SpringMVC主要实现原理，包含DispatcherServlet的初始化过程和DispatcherServlet处理请求的过程的源码解析。本文是第二篇：DispatcherServlet处理请求的过程的源码解析。@pdai&lt;/p&gt;&lt;/blockquote&gt;  &lt;h2 id=&quot;dispatcherservlet处理请求的过程&quot;&gt;&lt;a href=&quot;#dispatcherservlet处理请求的过程&quot; class=&quot;header-anchor&quot;&gt;¶&lt;/a&gt; DispatcherServlet处理请求的过程？&lt;/h2&gt; &lt;blockquote&gt;&lt;p&gt;一个请求发出，经过DispatcherServlet进行了什么样的处理，最后将内容返回的呢？&lt;/p&gt;&lt;/blockquote&gt; &lt;h3 id=&quot;回顾整理处理流程&quot;&gt;&lt;a href=&quot;#回顾整理处理流程&quot; class=&quot;header-anchor&quot;&gt;¶&lt;/a&gt; 回顾整理处理流程&lt;/h3&gt; &lt;p&gt;首先让我们整体看一下Spring Web MVC 处理请求的流程：&lt;/p&gt; &lt;p&gt;&lt;img alt=&quot;&quot; data-src=&quot;/_images/spring/springframework/spring-springframework-mvc-5.png&quot; loading=&quot;lazy&quot; class=&quot;lazy&quot;/&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;核心架构的具体流程步骤&lt;/strong&gt;如下：&lt;/p&gt; &lt;ol&gt;&lt;li&gt;&lt;strong&gt;首先用户发送请求——&amp;gt;DispatcherServlet&lt;/strong&gt;，前端控制器收到请求后自己不进行处理，而是委托给其他的解析器进行
处理，作为统一访问点，进行全局的流程控制；&lt;/li&gt; &lt;li&gt;&lt;strong&gt;DispatcherServlet——&amp;gt;HandlerMapping&lt;/strong&gt;， HandlerMapping 将会把请求映射为 HandlerExecutionChain 对象（包含一
个Handler 处理器（页面控制器）对象、多个HandlerInterceptor 拦截器）对象，通过这种策略模式，很容易添加新
的映射策略；&lt;/li&gt; &lt;li&gt;&lt;strong&gt;DispatcherServlet——&amp;gt;HandlerAdapter&lt;/strong&gt;，HandlerAdapter 将会把处理器包装为适配器，从而支持多种类型的处理器，
即适配器设计模式的应用，从而很容易支持很多类型的处理器；&lt;/li&gt; &lt;li&gt;&lt;strong&gt;HandlerAdapter——&amp;gt;处理器功能处理方法的调用&lt;/strong&gt;，HandlerAdapter 将会根据适配的结果调用真正的处理器的功能处
理方法，完成功能处理；并返回一个ModelAndView 对象（包含模型数据、逻辑视图名）；&lt;/li&gt; &lt;li&gt;&lt;strong&gt;ModelAndView 的逻辑视图名——&amp;gt; ViewResolver&lt;/strong&gt;，ViewResolver 将把逻辑视图名解析为具体的View，通过这种策
略模式，很容易更换其他视图技术；&lt;/li&gt; &lt;li&gt;&lt;strong&gt;View——&amp;gt;渲染&lt;/strong&gt;，View 会根据传进来的Model 模型数据进行渲染，此处的Model 实际是一个Map 数据结构，因此
很容易支持其他视图技术；&lt;/li&gt; &lt;li&gt;&lt;strong&gt;返回控制权给DispatcherServlet&lt;/strong&gt;，由DispatcherServlet 返回响应给用户，到此一个流程结束。&lt;/li&gt;&lt;/ol&gt; &lt;h3 id=&quot;doget入口&quot;&gt;&lt;a href=&quot;#doget入口&quot; class=&quot;header-anchor&quot;&gt;¶&lt;/a&gt; doGet入口&lt;/h3&gt; &lt;blockquote&gt;&lt;p&gt;我们以上个demo中这个GET请求为例，请求URL是http://localhost:8080/011_spring_framework_demo_springmvc_war_exploded/user&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;我们知道servlet处理get请求是doGet方法，所以我们去找DispatcherServlet类结构中的doGet方法。&lt;/p&gt; &lt;div class=&quot;language-java line-numbers-mode&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;processRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p class=&quot;line-numbers-wrapper&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;processRequest处理请求的方法如下：&lt;/p&gt; &lt;div class=&quot;language-java line-numbers-mode&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code&gt;&lt;span class=&quot;token comment&quot;&gt;/**
  * Process this request, publishing an event regardless of the outcome.
  * &amp;lt;p&amp;gt;The actual event handling is performed by the abstract
  * {@link #doService} template method.
  */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;processRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// 计算处理请求的时间&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; startTime &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt; failureCause &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token class-name&quot;&gt;LocaleContext&lt;/span&gt; previousLocaleContext &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LocaleContextHolder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getLocaleContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token class-name&quot;&gt;LocaleContext&lt;/span&gt; localeContext &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;buildLocaleContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token class-name&quot;&gt;RequestAttributes&lt;/span&gt; previousAttributes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RequestContextHolder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getRequestAttributes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token class-name&quot;&gt;ServletRequestAttributes&lt;/span&gt; requestAttributes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;buildRequestAttributes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; previousAttributes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token class-name&quot;&gt;WebAsyncManager&lt;/span&gt; asyncManager &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebAsyncUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAsyncManager&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;registerCallableInterceptor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;FrameworkServlet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RequestBindingInterceptor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// 初始化context&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;initContextHolders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; localeContext&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; requestAttributes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 看这里&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;doService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    failureCause &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    failureCause &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NestedServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Request processing failed&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 重置context&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;resetContextHolders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; previousLocaleContext&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; previousAttributes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;requestAttributes &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      requestAttributes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestCompleted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;logResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; failureCause&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; asyncManager&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;publishRequestHandledEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; startTime&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; failureCause&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p class=&quot;line-numbers-wrapper&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;28&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;29&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;30&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;31&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;32&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;33&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;34&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;35&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;36&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;37&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;38&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;39&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;40&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;41&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;42&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;43&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;44&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;45&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;46&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;47&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;本质上就是调用doService方法，由DispatchServlet类实现&lt;/p&gt; &lt;div class=&quot;language-java line-numbers-mode&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code&gt;&lt;span class=&quot;token comment&quot;&gt;/**
  * Exposes the DispatcherServlet-specific request attributes and delegates to {@link #doDispatch}
  * for the actual dispatching.
  */&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;logRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// 保存下请求之前的参数.&lt;/span&gt;
  &lt;span class=&quot;token class-name&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; attributesSnapshot &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;WebUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isIncludeRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    attributesSnapshot &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;Enumeration&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; attrNames &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttributeNames&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;attrNames&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;hasMoreElements&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; attrName &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; attrNames&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;nextElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cleanupAfterInclude &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; attrName&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DEFAULT_STRATEGIES_PREFIX&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        attributesSnapshot&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;attrName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;attrName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// 方便后续 handlers 和 view 要使用它们.&lt;/span&gt;
  request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;WEB_APPLICATION_CONTEXT_ATTRIBUTE&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getWebApplicationContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;LOCALE_RESOLVER_ATTRIBUTE&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;localeResolver&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;THEME_RESOLVER_ATTRIBUTE&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;themeResolver&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;THEME_SOURCE_ATTRIBUTE&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getThemeSource&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;flashMapManager &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;FlashMap&lt;/span&gt; inputFlashMap &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;flashMapManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;retrieveAndUpdate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputFlashMap &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;INPUT_FLASH_MAP_ATTRIBUTE&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;unmodifiableMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputFlashMap&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;OUTPUT_FLASH_MAP_ATTRIBUTE&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FlashMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;FLASH_MAP_MANAGER_ATTRIBUTE&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;flashMapManager&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token class-name&quot;&gt;RequestPath&lt;/span&gt; previousRequestPath &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parseRequestPath&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    previousRequestPath &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RequestPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ServletRequestPathUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;PATH_ATTRIBUTE&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;ServletRequestPathUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parseAndCache&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 看这里，终于将这个请求分发出去了&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;doDispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;WebAsyncUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAsyncManager&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isConcurrentHandlingStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// Restore the original attribute snapshot, in case of an include.&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;attributesSnapshot &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;restoreAttributesAfterInclude&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; attributesSnapshot&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parseRequestPath&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token class-name&quot;&gt;ServletRequestPathUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setParsedRequestPath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;previousRequestPath&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p class=&quot;line-numbers-wrapper&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;28&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;29&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;30&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;31&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;32&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;33&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;34&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;35&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;36&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;37&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;38&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;39&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;40&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;41&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;42&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;43&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;44&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;45&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;46&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;47&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;48&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;49&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;50&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;51&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;52&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;53&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;54&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;55&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;56&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;57&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;58&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;h3 id=&quot;请求分发&quot;&gt;&lt;a href=&quot;#请求分发&quot; class=&quot;header-anchor&quot;&gt;¶&lt;/a&gt; 请求分发&lt;/h3&gt; &lt;p&gt;doDispatch方法是真正处理请求的核心方法&lt;/p&gt; &lt;div class=&quot;language-java line-numbers-mode&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code&gt;&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doDispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; processedRequest &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token class-name&quot;&gt;HandlerExecutionChain&lt;/span&gt; mappedHandler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; multipartRequestParsed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token class-name&quot;&gt;WebAsyncManager&lt;/span&gt; asyncManager &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebAsyncUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAsyncManager&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; mv &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; dispatchException &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// 判断是不是文件上传类型的request&lt;/span&gt;
      processedRequest &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;checkMultipart&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      multipartRequestParsed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;token comment&quot;&gt;// 根据request获取匹配的handler.&lt;/span&gt;
      mappedHandler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mappedHandler &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;noHandlerFound&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;token comment&quot;&gt;// 根据handler获取匹配的handlerAdapter&lt;/span&gt;
      &lt;span class=&quot;token class-name&quot;&gt;HandlerAdapter&lt;/span&gt; ha &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getHandlerAdapter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;token comment&quot;&gt;// 如果handler支持last-modified头处理&lt;/span&gt;
      &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; method &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; isGet &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;GET&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;isGet &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;HEAD&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; lastModified &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ha&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getLastModified&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletWebRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;checkNotModified&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lastModified&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; isGet&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;applyPreHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;token comment&quot;&gt;// 真正handle处理，并返回modelAndView&lt;/span&gt;
      mv &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ha&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isConcurrentHandlingStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;token comment&quot;&gt;// 通过视图的prefix和postfix获取完整的视图名&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;applyDefaultViewName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;token comment&quot;&gt;// 应用后置的拦截器&lt;/span&gt;
      mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;applyPostHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      dispatchException &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// As of 4.3, we&#x27;re processing Errors thrown from handler methods as well,&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// making them available for @ExceptionHandler methods and other scenarios.&lt;/span&gt;
      dispatchException &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NestedServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Handler dispatch failed&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// 处理handler处理的结果，显然就是对ModelAndView 或者 出现的Excpetion处理&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;processDispatchResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dispatchException&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;triggerAfterCompletion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;triggerAfterCompletion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NestedServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Handler processing failed&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isConcurrentHandlingStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// Instead of postHandle and afterCompletion&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mappedHandler &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;applyAfterConcurrentHandlingStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// Clean up any resources used by a multipart request.&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;multipartRequestParsed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;cleanupMultipart&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p class=&quot;line-numbers-wrapper&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;28&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;29&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;30&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;31&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;32&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;33&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;34&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;35&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;36&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;37&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;38&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;39&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;40&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;41&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;42&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;43&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;44&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;45&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;46&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;47&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;48&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;49&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;50&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;51&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;52&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;53&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;54&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;55&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;56&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;57&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;58&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;59&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;60&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;61&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;62&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;63&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;64&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;65&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;66&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;67&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;68&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;69&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;70&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;71&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;72&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;73&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;74&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;75&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;76&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;77&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;78&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;79&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;80&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;81&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;82&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;83&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;84&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;85&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;86&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;87&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;h3 id=&quot;映射和适配器处理&quot;&gt;&lt;a href=&quot;#映射和适配器处理&quot; class=&quot;header-anchor&quot;&gt;¶&lt;/a&gt; 映射和适配器处理&lt;/h3&gt; &lt;p&gt;对于真正的handle方法，我们看下其处理流程&lt;/p&gt; &lt;div class=&quot;language-java line-numbers-mode&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code&gt;&lt;span class=&quot;token comment&quot;&gt;/**
  * This implementation expects the handler to be an {@link HandlerMethod}.
  */&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; handler&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleInternal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; handler&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p class=&quot;line-numbers-wrapper&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;10&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;交给handleInternal方法处理，以RequestMappingHandlerAdapter这个HandlerAdapter中的处理方法为例&lt;/p&gt; &lt;div class=&quot;language-java line-numbers-mode&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleInternal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethod&lt;/span&gt; handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; mav&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;checkRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Execute invokeHandlerMethod in synchronized block if required.&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;synchronizeOnSession&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;HttpSession&lt;/span&gt; session &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; mutex &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSessionMutex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mutex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        mav &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeHandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// No HttpSession available -&amp;gt; no mutex necessary&lt;/span&gt;
      mav &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeHandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// No synchronization on session demanded at all...&lt;/span&gt;
    mav &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeHandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;containsHeader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;HEADER_CACHE_CONTROL&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSessionAttributesHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;hasSessionAttributes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;applyCacheSeconds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cacheSecondsForSessionAttributeHandlers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;prepareResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; mav&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p class=&quot;line-numbers-wrapper&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;28&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;29&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;30&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;31&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;32&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;33&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;34&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;35&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;36&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;37&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt=&quot;&quot; data-src=&quot;/_images/spring/springframework/spring-springframework-mvc-27.png&quot; loading=&quot;lazy&quot; class=&quot;lazy&quot;/&gt;&lt;/p&gt; &lt;p&gt;然后执行invokeHandlerMethod这个方法，用来对RequestMapping（usercontroller中的list方法）进行处理&lt;/p&gt; &lt;div class=&quot;language-java line-numbers-mode&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code&gt;&lt;span class=&quot;token comment&quot;&gt;/**
  * Invoke the {@link RequestMapping} handler method preparing a {@link ModelAndView}
  * if view resolution is required.
  * @since 4.2
  * @see #createInvocableHandlerMethod(HandlerMethod)
  */&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeHandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethod&lt;/span&gt; handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token class-name&quot;&gt;ServletWebRequest&lt;/span&gt; webRequest &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletWebRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token class-name&quot;&gt;WebDataBinderFactory&lt;/span&gt; binderFactory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getDataBinderFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;ModelFactory&lt;/span&gt; modelFactory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getModelFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; binderFactory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// 重要：设置handler(controller#list)方法上的参数，返回值处理，绑定databinder等&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;ServletInvocableHandlerMethod&lt;/span&gt; invocableMethod &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createInvocableHandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argumentResolvers &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      invocableMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setHandlerMethodArgumentResolvers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argumentResolvers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;returnValueHandlers &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      invocableMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setHandlerMethodReturnValueHandlers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;returnValueHandlers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    invocableMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setDataBinderFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;binderFactory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    invocableMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setParameterNameDiscoverer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parameterNameDiscoverer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token class-name&quot;&gt;ModelAndViewContainer&lt;/span&gt; mavContainer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndViewContainer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    mavContainer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addAllAttributes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;RequestContextUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getInputFlashMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    modelFactory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;initModel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;webRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; invocableMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    mavContainer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setIgnoreDefaultModelOnRedirect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;ignoreDefaultModelOnRedirect&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    
    &lt;span class=&quot;token class-name&quot;&gt;AsyncWebRequest&lt;/span&gt; asyncWebRequest &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebAsyncUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createAsyncWebRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    asyncWebRequest&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;asyncRequestTimeout&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token class-name&quot;&gt;WebAsyncManager&lt;/span&gt; asyncManager &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebAsyncUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAsyncManager&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setTaskExecutor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;taskExecutor&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAsyncWebRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;asyncWebRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;registerCallableInterceptors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;callableInterceptors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;registerDeferredResultInterceptors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;deferredResultInterceptors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;hasConcurrentResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getConcurrentResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      mavContainer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ModelAndViewContainer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getConcurrentResultContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;clearConcurrentResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token class-name&quot;&gt;LogFormatUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;traceDebug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; traceOn &lt;span class=&quot;token operator&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; formatted &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LogFormatUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;formatValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;traceOn&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Resume with async result [&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; formatted &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;]&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      invocableMethod &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; invocableMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;wrapConcurrentResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// 执行controller中方法&lt;/span&gt;
    invocableMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;invokeAndHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;webRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isConcurrentHandlingStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getModelAndView&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; modelFactory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; webRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    webRequest&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;requestCompleted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p class=&quot;line-numbers-wrapper&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;28&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;29&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;30&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;31&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;32&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;33&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;34&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;35&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;36&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;37&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;38&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;39&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;40&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;41&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;42&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;43&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;44&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;45&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;46&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;47&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;48&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;49&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;50&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;51&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;52&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;53&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;54&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;55&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;56&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;57&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;58&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;59&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;60&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;61&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;62&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;63&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;64&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;65&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;invokeAndHandle交给UserController中具体执行list方法执行&lt;/p&gt; &lt;p&gt;&lt;img alt=&quot;&quot; data-src=&quot;/_images/spring/springframework/spring-springframework-mvc-29.png&quot; loading=&quot;lazy&quot; class=&quot;lazy&quot;/&gt;&lt;/p&gt; &lt;p&gt;后续invoke执行的方法，直接看整个请求流程的调用链即可&lt;/p&gt; &lt;p&gt;&lt;img alt=&quot;&quot; data-src=&quot;/_images/spring/springframework/spring-springframework-mvc-30.png&quot; loading=&quot;lazy&quot; class=&quot;lazy&quot;/&gt;&lt;/p&gt; &lt;p&gt;执行后获得视图和Model&lt;/p&gt; &lt;p&gt;&lt;img alt=&quot;&quot; data-src=&quot;/_images/spring/springframework/spring-springframework-mvc-31.png&quot; loading=&quot;lazy&quot; class=&quot;lazy&quot;/&gt;&lt;/p&gt; &lt;h3 id=&quot;视图渲染&quot;&gt;&lt;a href=&quot;#视图渲染&quot; class=&quot;header-anchor&quot;&gt;¶&lt;/a&gt; 视图渲染&lt;/h3&gt; &lt;p&gt;接下来继续执行processDispatchResult方法，对视图和model（如果有异常则对异常处理）进行处理（显然就是渲染页面了）&lt;/p&gt; &lt;div class=&quot;language-java line-numbers-mode&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code&gt;&lt;span class=&quot;token comment&quot;&gt;/**
  * Handle the result of handler selection and handler invocation, which is
  * either a ModelAndView or an Exception to be resolved to a ModelAndView.
  */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;processDispatchResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerExecutionChain&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; exception&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; errorView &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// 如果处理过程有异常，则异常处理&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;exception &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;exception &lt;span class=&quot;token keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndViewDefiningException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;ModelAndViewDefiningException encountered&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; exception&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      mv &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ModelAndViewDefiningException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; exception&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getModelAndView&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; handler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mappedHandler &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      mv &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;processHandlerException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handler&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; exception&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      errorView &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mv &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// 是否需要渲染视图&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mv &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;mv&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;wasCleared&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mv&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 渲染视图&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;errorView&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token class-name&quot;&gt;WebUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;clearErrorRequestAttributes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isTraceEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;No view rendering, null ModelAndView returned.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;WebAsyncUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAsyncManager&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isConcurrentHandlingStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Concurrent handling started during a forward&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mappedHandler &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Exception (if any) is already handled..&lt;/span&gt;
    mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;triggerAfterCompletion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p class=&quot;line-numbers-wrapper&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;28&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;29&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;30&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;31&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;32&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;33&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;34&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;35&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;36&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;37&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;38&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;39&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;40&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;41&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;42&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;43&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;44&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;45&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;46&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;接下来显然就是渲染视图了, spring在initStrategies方法中初始化的组件（LocaleResovler等）就派上用场了。&lt;/p&gt; &lt;div class=&quot;language-java line-numbers-mode&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code&gt;&lt;span class=&quot;token comment&quot;&gt;/**
  * Render the given ModelAndView.
  * &amp;lt;p&amp;gt;This is the last stage in handling a request. It may involve resolving the view by name.
  * @param mv the ModelAndView to render
  * @param request current HTTP servlet request
  * @param response current HTTP servlet response
  * @throws ServletException if view is missing or cannot be resolved
  * @throws Exception if there&#x27;s a problem rendering the view
  */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Determine locale for request and apply it to the response.&lt;/span&gt;
  &lt;span class=&quot;token class-name&quot;&gt;Locale&lt;/span&gt; locale &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;localeResolver &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;localeResolver&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolveLocale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getLocale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setLocale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;locale&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token class-name&quot;&gt;View&lt;/span&gt; view&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; viewName &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewName &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// We need to resolve the view name.&lt;/span&gt;
    view &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;resolveViewName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;viewName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getModelInternal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; locale&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;view &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Could not resolve view with name &#x27;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getViewName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
          &lt;span class=&quot;token string&quot;&gt;&quot;&#x27; in servlet with name &#x27;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getServletName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&#x27;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// No need to lookup: the ModelAndView object contains the actual View object.&lt;/span&gt;
    view &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getView&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;view &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;ModelAndView [&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; mv &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;] neither contains a view name nor a &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;
          &lt;span class=&quot;token string&quot;&gt;&quot;View object in servlet with name &#x27;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getServletName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&#x27;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Delegate to the View object for rendering.&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isTraceEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Rendering view [&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; view &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;] &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mv&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mv&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    view&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mv&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getModelInternal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isDebugEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Error rendering view [&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; view &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;]&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p class=&quot;line-numbers-wrapper&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;28&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;29&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;30&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;31&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;32&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;33&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;34&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;35&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;36&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;37&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;38&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;39&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;40&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;41&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;42&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;43&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;44&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;45&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;46&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;47&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;48&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;49&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;50&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;51&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;后续就是通过viewResolver进行解析了，这里就不再继续看代码了，上述流程基本上够帮助你构建相关的认知了。&lt;/p&gt; &lt;p&gt;最后无非是返回控制权给DispatcherServlet，由DispatcherServlet 返回响应给用户。&lt;/p&gt; &lt;p&gt;最后的最后我们看下请求的日志：&lt;/p&gt; &lt;div class=&quot;language-bash line-numbers-mode&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code&gt;&lt;span class=&quot;token number&quot;&gt;21&lt;/span&gt;:45:53.390 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;http-nio-8080-exec-6&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; DEBUG org.springframework.web.servlet.DispatcherServlet - GET &lt;span class=&quot;token string&quot;&gt;&quot;/011_spring_framework_demo_springmvc_war_exploded/user&quot;&lt;/span&gt;, &lt;span class=&quot;token assign-left variable&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;21&lt;/span&gt;:45:53.400 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;http-nio-8080-exec-6&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to tech.pdai.springframework.springmvc.controller.UserController&lt;span class=&quot;token comment&quot;&gt;#list(HttpServletRequest, HttpServletResponse)&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;22&lt;/span&gt;:51:14.504 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;http-nio-8080-exec-6&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; DEBUG org.springframework.web.servlet.view.JstlView - View name &lt;span class=&quot;token string&quot;&gt;&#x27;userList&#x27;&lt;/span&gt;, model &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;dateTime&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;Fri Apr &lt;span class=&quot;token number&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;21&lt;/span&gt;:45:53 CST &lt;span class=&quot;token number&quot;&gt;2022&lt;/span&gt;, &lt;span class=&quot;token assign-left variable&quot;&gt;userList&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;tech.pdai.springframework.springmvc.entity.User@7b8c8dc&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;22&lt;/span&gt;:51:14.550 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;http-nio-8080-exec-6&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; DEBUG org.springframework.web.servlet.view.JstlView - Forwarding to &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;/WEB-INF/views/userList.jsp&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;22&lt;/span&gt;:51:44.395 &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;http-nio-8080-exec-6&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; DEBUG org.springframework.web.servlet.DispatcherServlet - Completed &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt; OK
&lt;/code&gt;&lt;/pre&gt; &lt;p class=&quot;line-numbers-wrapper&quot;&gt;&lt;span class=&quot;line-number&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line-number&quot;&gt;5&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5f67098d8b0a3a4bf6aa680fcb7b6d32</guid>
<title>阿里前端智能化技术探索和未来思考</title>
<link>https://toutiao.io/k/ivrddev</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;p&gt;作者：霸天、欣余、灝阳、苏川、继风、闻梦、缺月、妙净、甄子&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8cSu1GFiaZBEXILeZibcXcn5eywZYKeqBBNms6yrtuUHEszcfg7OX1luPg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;这是阿里技术&lt;span&gt;2022&lt;/span&gt;年的第&lt;span&gt;23&lt;/span&gt;篇原创文章&lt;/p&gt;&lt;p&gt;（ 本文阅读时间：20分钟 ）&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;未来十年，智能化将不断渗入各领域，改变我们的生活和工作。本文将会分享阿里前端智能化技术的技术实践，探索未来UI智能化的发展方向。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;最近看到一个研判：过去十年是智能化蓬勃发展的十年，但未来十年会是智能化渗入各领域不断改变我们生活和工作的十年。对此深以为然。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;随着对神经网络加速的专用处理器成为硬件标配、DSP越来越多地从专业领域进入消费电子领域、CPU厂商收购FPGA公司、4nm工艺和3D堆叠工艺以及单周期多指令发射等处理器运算能力的机制提升让PPA不断突破极限，即将把围绕智能化的技术变革推向高潮。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;作为立足于改变前端技术工程体系的一群阿里前端，我们期待走在最前沿。从谷歌 TensorFlow团队的合作，到顶会论文的发表、技术雷达收录，再到多项成果在集团乃至行业大范围推广和落地取得成果，阿里前端智能化小组始终在坚定前行。在这篇文章中，我们将从阿里前端智能化整体技术大图中挑选一些有实质突破的部分，分享我们的研究、实践过程。期待和更多前端同行一起参与到前端智能化方向的探索，把这个方向建设的更丰满、更实在、更普惠。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8cVHJo7S0iazrTfzNoRJKL58E7ITRFlybMRSLrgOoeqX5rufibzDgKK45Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;阿里前端智能化技术大图&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;文章框架&lt;/strong&gt;（注：内容较多，可直接滑到感兴趣的部分阅读）&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;前端智能化技术基座：数据和算法技术工程能力是升级的基础&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;端智能：通过对端智能的介绍，帮助大家把数据能力和算法能力真正应用到前端技术场景&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;前端智能化技术应用&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;未来UI 智能化的发展趋势&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;01&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;前端智能化技术基座篇&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;2021~2022 年是PipCook项目明显变化的一年，在这之前，PipCook更多的是做一个JS社区易用的深度学习的工程框架，很多时候忽略了和业务的结合，也忽略了数据本身的价值。今年，PipCook重点依托于cloud云平台打通业务数据链路，赋能前端数据能力，同时基于datacook提供的分析建模能力深度剖析业务数据，在围绕消费者体验问题上紧扣业务，建立起数据指导迭代的链路，为业务提供价值。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;PipCook-Cloud  增强前端数据分析和智能化算法能力&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;在传统产研结构中：产品经理、设计师、运营、商务、服务端、客户端、前端、测试、BI 等诸多角色中，前端一直是职能角色间接参与业务，对业务的发展无直接影响。但是要为业务提供增长，前端作为将价值输送给用户的桥梁，必须要体系化且深入本质的理解商家与消费者的关系，在平台视角、生态视角之上叠加用户视角，建立起用户运营技术赋能的途径和手段，并将之与商家运营和平台运营、生态运营有机结合在一起。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在这种要求下，&lt;span&gt;&lt;strong&gt;数据分析和基于数据的建模能力将会至关重要&lt;/strong&gt;&lt;/span&gt;，我们希望可以通过Pipcook-Cloud这个项目增强前端数据分析和智能化算法能力，&lt;span&gt;&lt;strong&gt;逐渐将技术产出、用户使用行为数据以及业务指标三者关联在一起&lt;/strong&gt;&lt;/span&gt;。通过三者关联的指标，逐步系统化和逻辑严谨的描绘出一副从业务目标到产品设计再到技术交付和用户体验的完整图画，在这张图画上指标驱动和数据支撑让用户运营能力有了技术支撑，让产品交付价值有了用户体验指标度量，让前端在业务全生命周期中有了完整的用户价值和情感连接的桥梁。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;而目前我们的大数据开发主要是围绕着DataWorks相关工具进行的，开发语言以ODPS SQL为主，同时也可以开发基于Python和 Java的UDF (用户自定义函数)。对于一些数据模型的开发需求，可能也会基于PAI平台进行。当前基于ODPS SQL、Python和Java的开发方式对于前端同学成本有点儿高，原因主要有两个，一方面是有一定的入门门槛，包括语言门槛，处理逻辑编排的门槛，以及对于数据本身理解的门槛，另一方面前端缺乏对于常见的业务数据分析经验(端上用户行为动线分析，人群分成行为分析，前端性能分析，用户点击热力图分析等等)的沉淀，导致很难直接复用一些常见的前端场景的数据分析能力。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;同时，目前的报表和数据可视化工具主要面向的人群为BI、运营和数据PD，通过可视化配置数据源和拖拽图表组件的方式搭建报表。对于前端同学来说，一方面，这种方式缺乏灵活性，只能使用准备好的图表组件和能力，很难拓展和自定义跟适合自己业务的报表，而前端恰恰在可视化能力上有天然优势，另一方面，也很难通过模板等方式向用户提供我们沉淀的前端数据分析场景的可视化报表。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;基于以上原因，PipCook-Cloud聚焦于前端数据能力和用户体验和用户增长分析能力，在今年主要解决了以下几个方面的问题：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;让前端同学理解数据开发可以做什么，可以为业务带来哪些价值&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;让前端同学清晰明确的编排自己数据开发的全流程，以完成开发目的&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;让前端同学在编写数据处理的逻辑的时候，可以低门槛无成本的实现&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;让前端同学在需要一些必要的机器学习模型能力的时候，可以快速完成&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;让前端同学基于数据可以轻松开发出业务报表，以阐述自己的结论，帮助业务理解&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8ca8zQ6ibCrCiaq8vBlIuic7ibcQkdjKzBcuWdOQxGhgrict285PylLS2jRrw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们在1.0，一直努力将PipCook变成：让前端工程师也能开发靠谱的机器学习应用；而在2.0，我们对此做了稍微的变化：&lt;strong&gt;&lt;span&gt;让前端工程师都能开发靠谱的机器学习应用&lt;/span&gt;&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在过去一年，我们继续深耕于PipCook提供的深度学习的CI/CD能力，提供模型训练和数据分析的可持续集成和交付，PipCook 1.0的版本让Web开发者能够以比较低的门槛开始深度学习之路。而在实践的过程中，我们也发现了一些问题，比如安装 PipCook比较困难，安装时长长，初次启动训练时PipCook会安装插件也会耗费大量时间，另一方面，也有配置难、不易上手等问题，基于这些问题的解决，我们推出了 PipCook 2.0，目前这块也已经开源&lt;em&gt;&lt;span&gt; [08]&lt;/span&gt;&lt;/em&gt;。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;DataCook 提升数据分析和处理能力&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;如果说PipCook-Cloud打通了前端和业务数据的桥梁，通过平台化产品化的方式提供了数据加工和数据开发的工程能力，那么DataCook则是在底层供给PipCook平台的燃料。&lt;/strong&gt;&lt;/span&gt;DataCook提供了JS生态下面向前端的数据科学和机器学习工具库，帮助前端同学轻松运用分析建模能力剖析自己的业务数据，产出具有价值的分析成果。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;目前DataCook已经涵盖了包括数据预处理，数据统计分析，机器学习，可视化和跨平台流程部署等多项能力，提供了诸如线性回归，逻辑回归，决策树，PCA等多个模型，方便在各种场景下的建模分析，DataCook目前也已经开源&lt;span&gt;&lt;em&gt; [09]&lt;/em&gt;&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8ctdNdOKBof5Bup7GEejqZ0p9vc0euU2p0EUgmk4HJEYVJH3F2sEjAtg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;02&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;端智能篇&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;去年，淘系开始发力消费者体验。基于个性化消费场景，构建探索性货品供给、智能化信息表达，是端智能发力的机会。端智能立足于实时性、隐私保护性的基础上提供智能化能力，让前端能够用这些技术手段不断优化消费体验。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;过去三年，我们和Google的TensorFlow.js团队在推动前端智能化在端智能应用方向上达成战略合作。前端技术标准组织W3C也密集推出WebCL（见《OpenCL 2.0 异构计算》第三版）、WebGL、WebGPU、WebNN、WASM等前端端智能加速技术，尤其是2022年推出的Web Neural Network API，针对神经网络、张量和图计算加速。摘自：&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.w3.org/TR/webnn/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;比起客户端，前端算力并未被彻底释放。从CPU上来说，虽然WASM的支持率已经高于很多JavaScript的新特性了，但是SIMD指令的支持率仍然较低。WASM虽然比起JavaScript有优势，但是跟JavaScript+WebGL比起来，因为完全发挥不出CPU的优势，造成运算资源的浪费。WebGL仍然是十几年前的技术，跟OpenGL ES是同一个年代的技术，不支持GPGPU的操作。虽然有 WebGL2支持计算管线，但是因为苹果不支持这部分功能，导致无法使用。而 WebGPU可以从caniuse网站上看到，桌面上浏览器在2018-2020年都已经开始支持WebGPU，移动版浏览器也在跟进。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8czo0LT1UicclQRYH28YG3rmwNqPnGpiaZvcmqUuB12RLib4l2oPLLL752Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;所以我们2021年选定了两个方向来优化我们的端上引擎：WASM+Rust+SIMD和WebGPU。TensorFlow.js虽然没有使用Rust，但是也在使用WASM+SIMD。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;WASM + RUST + SIMD&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;摆脱了Javascript，使用native语言编写WASM，首先的问题就是选择哪个语言。在2021年，Rust在Nightly版本实验性支持了SIMD，成为我们目前最好的选择。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;WebGL/WebGPU&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;下面我们用一个实际例子看看如何在浏览中，借助TensorFlow.js的技术生态把算法模型在纯W3C标准下跑起来，并且通过WebGL对模型预测进行加速。为了能够把神经网络在浏览器里跑起来，并让JavaScript可以调用，首先需要将神经网络存储成文件。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;model.save(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;saved_model/w4model&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;存储到目录后会得到两个文件：&lt;span&gt;keras_metadata.pb&lt;/span&gt;和&lt;span&gt;saved_model.pb&lt;/span&gt;以及两个目录：&lt;span&gt;assets&lt;/span&gt;和&lt;span&gt;variables&lt;/span&gt;。这里使用的是TensorFlow的&lt;span&gt;tf_saved_model&lt;/span&gt;，下面转换模型给TensorFlow.js在浏览器使用的时候会用到这个参数。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;为了能够让模型在浏览器运行，先安装&lt;span&gt;pip install tensorflowjs&lt;/span&gt;用 &lt;span&gt;tensorflowjs_converter&lt;/span&gt;命令行转换工具进行模型的转换：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;tensorflowjs_converter&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;--input_format=tf_saved_model \&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;--output_node_names=&quot;w4model&quot; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;--saved_model_tags&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;serve ./saved_model/w4model ./web_model&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里&lt;span&gt;--input_format&lt;/span&gt;参数&lt;span&gt;tf_saved_model&lt;/span&gt;对应之前模型存储使用的方法，要注意不同方法保存的文件格式和结构的不同相互不兼容。&lt;span&gt;--output_node_names&lt;/span&gt;是模型的名称，&lt;span&gt;--saved_model_tags&lt;/span&gt;中&lt;span&gt;tag&lt;/span&gt;是用来区别不同的&lt;span&gt;MetaGraphDef&lt;/span&gt;，这是在加载模型所需要的参数其默认值是&lt;span&gt;serve&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;通过&lt;span&gt;tensorflowjs_converter&lt;/span&gt;进行模型转换后，我们在&lt;span&gt;web_model&lt;/span&gt;文件夹里会看到&lt;span&gt;group1-shard1of1.bin&lt;/span&gt;以及&lt;span&gt;model.json&lt;/span&gt;两个文件。这两个文件中，以&lt;span&gt;.json&lt;/span&gt;后缀结尾的文件是模型定义文件，以&lt;span&gt;.bin&lt;/span&gt;后缀结尾的文件是模型的权重文件。您可以把模型定义文件看做4PL和多项式的函数，把模型权重文件看做函数的参数。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;通过npm初始化一个node.js项目，然后在&lt;span&gt;package.json&lt;/span&gt;配置文件里加入：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;perl&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;: {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@tensorflow/tfjs&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;^3.18.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@tensorflow/tfjs-converter&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;^3.18.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里的&lt;span&gt;@tensorflow/tfjs&lt;/span&gt;是TensorFlow.js提供的运行时依赖，而&lt;span&gt;@tensorflow/tfjs-converter&lt;/span&gt;则是加载我们转换的模型所需要的依赖。接下来，在EntryPoint的JavaScript程序文件里加入：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;as&lt;/span&gt; tf &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@tensorflow/tfjs&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; { loadGraphModel } &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@tensorflow/tfjs-converter&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;将依赖引入到程序文件中，这里要注意&lt;span&gt;loadGraphModel&lt;/span&gt;是我们从&lt;span&gt;@tensorflow/tfjs-converter&lt;/span&gt;依赖中导入的，虽然&lt;span&gt;@tensorflow/tfjs&lt;/span&gt;提供 &lt;span&gt;tf.loadGraphModel()&lt;/span&gt;方法加载模型，但是这个方法只适用于TensorFlow.js中保存的模型，我们通过Python里&lt;span&gt;model.save()&lt;/span&gt;方法保存，并用Converter转换的模型，必须用&lt;span&gt;tfjs-converter&lt;/span&gt;依赖包中提供的&lt;span&gt;loadGraphModel&lt;/span&gt;方法进行加载。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;接着是程序完整的代码：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import * &lt;span class=&quot;code-snippet__keyword&quot;&gt;as&lt;/span&gt; tf &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@tensorflow/tfjs&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import { loadGraphModel } &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@tensorflow/tfjs-converter&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;window.onload = &lt;span class=&quot;code-snippet__keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; resultElement = document.getElementById(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;result&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; MODEL_URL = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;model.json&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;•&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  console.time(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Loading of model&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; model = &lt;span class=&quot;code-snippet__keyword&quot;&gt;await&lt;/span&gt; loadGraphModel(MODEL_URL);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  console.timeEnd(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Loading of model&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;•&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; test_data = tf.tensor([&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;0.0&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;500.0&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;1000.0&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;1500.0&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;2500.0&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;6000.0&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;8000.0&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;10000.0&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;12000.0&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  tf.print(test_data);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  console.time(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Loading of model&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;let&lt;/span&gt; outputs = model.execute(test_data);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  console.timeEnd(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;execute：&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  tf.print(outputs);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  resultElement.innerText = outputs.toString();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里需要注意的是，由于我们的模型在预测时使用的是张量作为输入，因此，需要用&lt;span&gt;tf.tensor()&lt;/span&gt;方法来返回经过包装的张量作为模型的输入。运行程序后，我们可以从浏览器开发者工具的控制台看到打印的调试信息：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;[&lt;span class=&quot;code-snippet__meta&quot;&gt;Violation&lt;/span&gt;] &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;load&#x27;&lt;/span&gt; handler took &lt;span class=&quot;code-snippet__number&quot;&gt;340&lt;/span&gt;ms&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;index.js:&lt;span class=&quot;code-snippet__number&quot;&gt;12&lt;/span&gt; Loading of model: &lt;span class=&quot;code-snippet__number&quot;&gt;67.19482421875&lt;/span&gt; ms&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;print.ts:&lt;span class=&quot;code-snippet__number&quot;&gt;34&lt;/span&gt; Tensor&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;[0    &lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;500  &lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;1000 &lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;1500 &lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;2500 &lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;6000 &lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;8000 &lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;10000&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;12000&lt;/span&gt;]]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;index.js:&lt;span class=&quot;code-snippet__number&quot;&gt;28&lt;/span&gt; execute: &lt;span class=&quot;code-snippet__number&quot;&gt;257.47607421875&lt;/span&gt; ms&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;print.ts:&lt;span class=&quot;code-snippet__number&quot;&gt;34&lt;/span&gt; Tensor&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    [&lt;span class=&quot;code-snippet__meta&quot;&gt;[-1.7345995 &lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;90.0198822 &lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;159.9183655&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;210.0600586&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;260.0179443&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;347.4320068&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;357.5788269&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;367.5332947&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     [&lt;span class=&quot;code-snippet__meta&quot;&gt;377.4856262&lt;/span&gt;]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里加载模型花费了 67ms，执行预测花费了 257ms，还是蛮长的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;as&lt;/span&gt; tf &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@tensorflow/tfjs&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; { loadGraphModel } &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@tensorflow/tfjs-converter&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;window&lt;/span&gt;.onload = &lt;span class=&quot;code-snippet__keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  tf.setBackend(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;webgl&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(tf.getBackend());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; resultElement = &lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;result&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; MODEL_URL = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;model.json&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们会看到控制台输出&lt;span&gt;webgl&lt;/span&gt;代表TensorFlow.js成功启用了WebGL的加速能力，在其加速之下，我们在&lt;span&gt;&lt;strong&gt;预测的时候速度会从257ms大幅度提升到131ms，多次预测时间由于权重和计算图已经加载到显存中速度会更快，达到78ms左右。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;放眼未来，不管多困难，我们会继续推进基于WASM+SIMD/WebGPU引擎的落地、投入支持WebXR尤其是AR。&lt;/strong&gt;&lt;/span&gt;其实，AR本质上是个机器学习问题。改名Meta的Facebook公司正在训练比GPT-3还大的模型，用于理解AR情况下的文本、图像和语音。模型训练出来了，如何在手机上落地进行推理，将是对前端智能化的重大考验，也是我们研究和储备技术的重要方向。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;03&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;前端智能化技术应用篇&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;应用1：代码推荐-sophon&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;2019年，学术界以深度学习为代表的机器智能技术在不断突破，在工程界又有TabNine, aiXCoder在内的优秀的代码推荐服务涌现，但开始它们还都依赖于云端服务，对于代码安全不太友好，所以我们基于智能化的实践和探索做了一版前端代码推荐插件Sophon Code IntelliSense&lt;span&gt;&lt;em&gt; [10]&lt;/em&gt;&lt;/span&gt;，期望通过代码补全代码的方式提升前端同学的研发效率。整个2021年，我们在C2C方向继续艰难爬坡。除了在深入优化模型，今年还花了很大气力完善整个工程基建、代码智能相关知识宣传和跟踪业界最新动态。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;代码数据资产管理&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8cv7O3BeHBHgib8GSPuWNwkQSfibibJUlwbGANYibwEtxJK9qtmKfnZNZdnw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;除了在代码推荐能力的持续优化之外，另一个重点是代码智能领域资产管理的建设。所有优秀的深度模型都离不开一份准确、标准的数据集，而一份这样的数据集在提供“评估基准”的同时，无疑会推动算法模型的持续优化。作为阿里大数据和AI平台的研发，我们知道应该怎样去获取数据、处理数据和管理数据，因此主动接过了代码智能相关的数据资产管理平台的建设工作。经过一年的探索和实践，已经针对数据集管理形成了一套基本成熟的方案。具体如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8c7o3Guwnc7uICjp9RYVjj8tLicZAHd8hWMxkVJ7dyoLia8gCMpwNWX11A/640?wx_fmt=jpeg&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;基于Git OpenAPI实现开源代码的获取，这里经常获取star数大于100的仓库代码，并经过处理（剔除非前端代码、删除测试代码、代码分块）之后代码文件上传到OSS上进行保存。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用脚本获取OSS代码文件，进行结构化处理之后导入到ODPS表，同时会为ODPS表设置基本的DQC质量监控来保证数据的可用性。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;新建SQL任务，从ODPS底表处理数据之后倒入到子任务的ODPS表，各子表有各个子任务对应的不同监控规则。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;定时循环以上流程，按时间形成对应的版本进行存储、管理。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;基于ODPS表数据，可生成对应的数据服务API提供使用方直接使用，或直接数据导出为文本文件方便模型读取。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;以上方案构建了一套自动化的代码数据集管理方案，基于此方案可以很方便的实现代码智能相关的数据集资产管理。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;今年，我们同时在代码智能领域进行了持续的探索，以目前业界整体发展看，我们判断整个代码智能推荐领域依然在未来一段时间内会长期处于缓慢上升的阶段，我们还是会基于不断产生的数据去优化模型。其次持续跟进整个资产管理平台的建设，期望帮助更多的团队去构建自己的代码推荐等服务，真正去提升前端的研发效率和质量。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;应用2：设计稿生成代码-imgcook&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;imgcook是一个设计稿智能生成代码平台，能够将设计稿（Sketch、Figma、PSD、图片）一键生成可维护的前端代码（HTML、React、Vue、小程序、Flutter等）。imgcook也已经经历了4年的发展，当前已有33400+位用户在imgcook平台中上传了96200+个页面，累计生成了7007万+行代码，imgcook的D2C能力作为基础服务，被集团内部超10个BU和部门调用， 帮助前端开发者提升编码效率。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8cWJbIG0ia81e9Gy4QdSKc4f3GtQY7hIxBiapXIERBa4RluU9kibgGoFCCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;在这几年中，imgcook经历了几个大的发展阶段，有产品能力的不断增强、有智能化技术应用的持续探索、也有一些走过的曲折和弯路。3.0升级完善技术体系，并为天马模块研发提供一站式研发方案。同时，在前端智能化方向上深耕，在D2C各个技术分层探索智能化落地方案，提升智能化程度，部分模型实现了闭环迭代，解决D2C中代码语义化等问题。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这个阶段以D2C一站式研发和D2C智能化能力分层能力提升为主线，这里有个结合了一站式研发链路和智能化识别应用的演示流程：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8cCk8D6QoDuPb1edEyT2dtpTnCLLJ6icgybntWOQ3eJKwPgP7LxYhBnhA/640?wx_fmt=gif&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;（imgcook 3.0 产品演示）&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;3.0阶段在D2C各个技术分层都有探索新的智能化方案，包括图层解析阶段、物料识别阶段、布局识别阶段和逻辑生成阶段等，关于D2C的智能化能力提升方案和落地情况，可以查看AI助力90.4%双11模块代码生成&lt;span&gt;&lt;em&gt; [11] &lt;/em&gt;&lt;/span&gt;系列文章。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8cJl7F8cVGicibPOjSFyl7O7kJxjBMRH312DG4QZDBvDWJCrpoRt8SsR6Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;（imgcook 3.0 技术框架）&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在从1.0到3.0的发展过程中，imgcook产品化能力、开放能力、营销链路研发解决方案、智能化方向的探索和落地在持续迭代，但依然有用户反馈：设计稿不规范、生成的代码结构不合理、样式冗余等。这背后的核心问题是什么？D2C核心流程只有3步，图层解析、布局分析、DSL转换生成代码。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8cZHUMIFDGDRBs9Rfzm4wFa1pp1FfiaUn6ZE2gGjR0Tic4te9ZXm7EEQ3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;图层解析，Design to JSON，提取 Sketch、Figma、PSD、图片等类型设计稿中的元素信息，转换为没有层级结构的、绝对定位的JSON描述，主要包括：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;布局分析，JSON to JSON，将没有层级结构的、绝对定位的JSON描述经过布局分析转换成有层级结构、相对定位的JSON描述，主要包括：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;父子节点包含关系，DOM层级结构&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;兄弟节点间距，padding、margin等&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;布局样式，display、position等&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p&gt;DSL 转换，JSON to Code，将具有符合代码结构和语义的JSON描述转换成前端代码，主要包括：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;作为imgcook用户，最关心的是结果，是生成代码的布局嵌套结构和布局样式，如果生成的布局结构不可用，随之业务逻辑生成以及其他智能识别语义增强等能力都不可用，配套的研发链路做的再完善也用不上。如果说在imgcook中投入的人力是100%，放在布局嵌套结构和布局样式的投入至少要80%。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在使用imgcook生成代码时，可能会得到不如预期的代码，出现一些细节问题，例如：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这些都是用户最关心的问题，出现在代码生成过程中的各种细节里。所以过去一年里，我们把精力聚焦在核心能力以及用户体验上，从设计稿中的样式解析开始，清理了从Sketch to CSS的所有问题，在布局算法层将内部各层进行了解耦, 并加入了“宽高设定策略”, “flex布局”, “同层成组”等功能, 同时添加了“纠错层”来解决设计稿带来的部分噪音问题。另外提升了现有已比较成熟的模型的识别准确率，应用到设计稿解析和布局分析过程中。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;✪ 代码准确率提升&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;⍟ 图层解析：从设计稿中解析出样式&lt;/p&gt;&lt;/section&gt;&lt;p&gt;图层解析（Design to JSON）的工作是提取 Sketch、Figma、PSD、图片等类型设计稿中的元素信息，转换为没有层级结构的、绝对定位的 JSON 描述，主要包括：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;但是 Sketch 中的样式描述与 CSS 中的样式描述是有很多差异的，另外，因为设计师仅关注视觉设计效果，设计方法和操作不受限制，会出现一些“不规范”的图层。需要梳理出每种情况的差异并解析出来。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;例如设计师用Sketch来设计高保真的UI页面，需要使用Sketch中的一系列工具来完成，例如在工具栏（ 图示区域2 ）中添加 形状、图像、文本等不同类型的图层，在 Inspector 面板（ 图示区域3 ）中为图层添加样式。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这些各式各样的操作所设计的图层，要想转换成CSS样式，需要将Sketch的所有设计操作梳理出来并解析成CSS，但凡有缺失和解析错误，生成的代码就会有一些细节上的问题。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8c904GiaMbZLNamObsibxiciaYT6erfkqm9dic61RzXtsgXtxESgA2LHaExMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;（Sketch 设计面板）&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们树立了Sketch中的设计样式与Web中CSS样式的差异和解析办法，以及一些还没有办法将设计稿解析出来的场景。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8cj842h68HjDwC2H9TDEwhfvE5ic7IKiaAMKaLOOSoSkkqhgHtL7nckfUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;（Sketch 中各种设计操作的测试用例）&lt;/p&gt;&lt;section&gt;&lt;p&gt;⍟ 布局分析：生成布局树和布局样式&lt;/p&gt;&lt;/section&gt;&lt;p&gt;布局分析（JSON to JSON）的工作是将没有层级结构的、绝对定位的JSON描述经过布局分析转换成有层级结构、相对定位的JSON描述，主要包括：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;父子节点包含关系，DOM层级结构&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;兄弟节点间距，padding、margin 等&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;布局样式，display、position 等&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;新版的布局算法主要解决了这几大问题：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;设计不规范带来的布局噪音问题&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;flex 布局问题&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;文本宽高设定问题&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;p&gt;⍟ 代码生成：DSL转换生成代码&lt;/p&gt;&lt;/section&gt;&lt;p&gt;DSL转换（JSON to Code）的工作是将具有符合代码结构和语义的JSON描述转换成前端代码，主要包括：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在老版本的官方DSL中，仅支持各种DSL类型的转换，并没有CSS类型、样式引入方式、样式单位以及公共样式的生成。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8c9f4wlSCjXAf9QSic5b4TUteNiaE5WfB7Gtic1IfZ1dPkuUB7z0FZZqeog/640?wx_fmt=gif&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;智能化能力提升&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;在前面 3.0 阶段进行了大量的智能化方案探索后，已经沉淀了几个较为成熟的方案，和在D2C的链路中产生了实际应用价值的模型，过去一年主要是通过迭代闭环链路优化训练样本来提升模型的识别准确度。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;文本/图片的语义深度学习模型识别能力增强，用于完善或提升背景图/碎图合并和代码语义化。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8c1aNMmhOsWFIULialelDc5miaHvs75sXbAgzCsUKh1oiccxdeLPrjCfOoA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;引入机器学习算法识别设计稿中的空白区域是“活动”(“FreeSpace”)的, 或是“静止”(“Margin/Padding”)的，用于布局样式生成，目前Beta版本内测中， 体验地址：&lt;span&gt;https://www.imgcook.com/editor#/?from=flexboxLayout&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;产品体验优化&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;imgcook的产品能力比较健全完善，涉及的面比较广，例如：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;设计稿解析方面包含：Sketch插件、PSD插件、Figma插件、Sketch文件上传解析、PSD文件上传解析、图片文件上传解析&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;协作管理方面包含：工作站团队/项目/页面管理、团队配置&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;开发者服务包含：自定义组件库、自定义编辑器、自定义画布、自定义DSL、自定义Plugin、自定义模型、自定义业务逻辑库、API接口服务开放&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;工程效率方面包含：imgcook命令行工具、VS CODE imgcook插件&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;官方维护的 10+ DSL包含：React、Rax、Vue、HTML5、微信小程序等&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;其他方面如：广场案例、编辑器&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;功能模块较多，蕴藏着的使用体验问题也比较多，例如Sketch插件中融合了代码导出与设计资源管理能力导致前端用户反馈多数界面用不着、仅支持Github登录对设计师不友好且登录速度慢、首次使用需要手动创建团队项目导致代码生成链路断层、模块很多时检索麻烦、以及生成代码时自适应、公共样式抽离等多样化需求。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在过去的一年中，从用户角度，将使用频率较高的功能模块进行了全面的体验优化，核心包括以下这些方面：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;Sketch插件全新升级，交互体验和解析准确度都得到了很大提升；&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持多样化出码设置，例如可以选择类名风格、不同转换样式单位、样式引入方式、公共样式提取等；&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;编辑器体验全新升级，界面更清晰，交互更流畅，同时支持批量下载图片资源；&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持钉钉登录和第三方账号解绑；&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;首页更有效的信息表达；&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;工作站更方便有效的管理界面，支持设置常用团队，按我收藏的和我创建的筛选项目和模块等；&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;展示一些用户案例&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;imgcook的业务应用：智能UI&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;商品的个性化推荐为业务带来了非常显著的增量，但是随着海量商品的上线，商品的数据化信息激增，个性化的商品推荐依旧有非常多的商品表达信息需要用户进行决策，一定程度上“过多的决策”会带来用户的流失。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;所以非常需要通过智能UI（UI的个性化）来缩短用户的“购物决策时间”，在有限的空间中为用户展示他最关心的内容，为业务带来更多的增长可能。目前我们的&lt;strong&gt;&lt;span&gt;UI个性化策略&lt;/span&gt;&lt;/strong&gt;是：&lt;strong&gt;&lt;span&gt;（通过识别用户的特征标签，划分出不同身份画像，设计不同的UI，个性化展示给用户）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;通过将UI卡片拆解为“布局”和“物料”的概念，我们可以灵活的进行UI自由组装。再通过为不同的信息设计不同的UI样式，突出卡片中的信息，从而“引导”用户注意到他最关心的内容，为用户提供更好的UI体验。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8ciaOZza873mEZp7wuN8p5dPwVnqzPZINctaGicVbdpcmLK9xKuFkXz2Jg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;通过将UI设计拆解成元子化的模块，我们能够很灵活组装推品卡片，调整物料和布局，能够生成几十种甚至几百种UI组合方案。再通过结合算法的UI推荐能力，将我们的用户和UI进行精准匹配，从而提高卡片点击率。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;智能UI在2021年表现依旧十分突出，在1688，淘系，猫超均得到了非常不错的业务效能提升。&lt;strong&gt;&lt;span&gt;未来智能UI 将会覆盖更多的导购场景，通过智能UI的个性化UI表达，从技术侧为业务提效。&lt;/span&gt;&lt;/strong&gt;对于智能UI我们有很宏伟的目标，希望通过整体的对接链路升级和产品化能力建设，将智能UI成为阿里内部“全网UI表达策略”，缩短用户筛选信息的决策时间，提高找货效率。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;面向未来我们会继续在业务接入及效果提升、迭代升级技术能力两个方向努力：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;新一年已经开始，imgcook将继续在三个方向发力：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;业务赋能：&lt;/strong&gt;&lt;/span&gt;深入结合阿里业务场景，无缝融入阿里研发流程形成各个业务自己的研发解决方案，帮助提高业务交付效率。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;研发提效：&lt;/strong&gt;&lt;/span&gt;聚焦代码生成可用性，对标内部专业前端对代码的可维护性要求，生成高可用代码。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;夯实基础：&lt;/strong&gt;&lt;/span&gt;沉淀高质量数据集，提升深度学习模型准确率，辅助提升生成代码可用性。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;04&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;憧憬未来：UI智能化&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;2019年8月 ，我曾去过美国山景城Google总部，这次经历让我对智能UI有了一些全新的理解和认识，&lt;strong&gt;&lt;span&gt;不仅仅是 UI 样式和信息表达的智能化，要穿透UI和信息去感知和理解用户的意图，用智能化手段协助用户实现其意图从而做到真正的AI User Interface。&lt;/span&gt;&lt;/strong&gt;把用户和数字世界以及通过数字世界和物理世界穿越时空的连接，实际上用户操作的对象会从应用程序变成现实世界的服务。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;服务业与工业、农业不同，它所提供的产品就是服务，这种服务具有无形性、非储存性、同时性和主动性。服务业的这“四性”特征，决定了服务业必须把标准化作为前提和基础。如果没有有效的服务标准，服务行为就无法数字化，服务行为无法数字化就难以用互联网技术为其构建声明式的操作界面，没有声明式的操作界面就会造成技术研发和对接成本高难以规模化，难以规模化就无法为用户提供充分的选择来帮助用户实现其意图。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果深入考察这个问题，你会发现因为没有标准而引发的问题不仅仅在服务业，内容的标准化产生了RSS订阅能力，应用程序调用的标准化产生了唤端能力，iOS还在应用程序的互操作性上制定标准，用Siri完成对应用背后提供的服务进行操作，比如阅读微信消息、打开健康码等。所以，实现UI智能化的前提是有脱离用户的服务操作能力和程序操作能力等，而这些能力就需要有标准来支持以提供规范的开放性降低研发和接入成本，从而实现规模化以实现用户意图。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;针对习惯性的交互行为优化用户高频操作，大体上应用程序有两个技术路线，一种是自动化，另一种是智能化。自动化可以追溯到Windows上的批处理、Fireworks和 Photoshop提供的自动化以及Excel和游戏中的宏命令，由用户借助应用程序开放的能力编排触发条件、流程和输入输出。移动端上类似的自动化能力比如在抖音和B站进行视频一键下载等，尤其是借助Safari浏览器对应用程序分享、在浏览器中打开等能力巧妙实现一些繁琐却高频的用户操作。另一种是智能化技术路线，对比服务端计算，端上计算有隐私保护的巨大优势，可以更好地识别和理解用户行为，从而了解用户的习惯。通过各种实时数据进行训练把其中的模式抽象为“场景”，再根据用户在特定场景下的行为，就能够精确判断用户的习惯性高频操作并简化之。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;你可能会想到一个问题：即便是基于端智能简化用户的习惯性高频操作，其本质上和自动化没有太大区别？是的，端智能只是智能生成并推荐了自动化操作而已，虽然有智能的成分，还是那句话：蜡烛怎么改进也无法变成灯泡。基于端智能简化用户习惯性高频操作的技术基础是什么？还是自动化和依赖于应用程序有限开放的功能，遇到一些“自我”的APP迫使用户必须打开应用使用其功能，自动化就显得束手无策了。我认为未来应该思考如何才能用一个数字化和智能化的助手替代用户做一些繁琐的事情，从而让用户使用终端的时候更加高效。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在一个结构性复杂的系统中，复杂度不会消失只会转移，因此，在面对结构性复杂的系统问题时，要想办法把复杂度转移到合理可控的区域。对于用户使用移动终端来说，一样是结构性复杂的。从移动操作系统到移动应用，由于商业和市场考量只能围绕通用性做妥协，而不会针对个体做深度的个性化，这样体验虽然能极致化但成本太高。比如在拱墅区爆发疫情的期间，我每天都要打开今日头条、点击抗疫tab、滑动到杭州疫情并点击，然后查找杭州疫情的动态，每天早晚各一次并期待着有好消息让我解除居家吃方便面的苦日子。在这个动态变化的世界中围绕动态变化的我们，习惯性的高频操作也是不断变化的，如果助手APP能够像秘书一样理解世界、理解我、理解我面对的问题，就能够在我面对这种结构性复杂的局面时提供真正有效的协助。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;助手APP的效用和其理解的能力成正比，理解和端智能的能力成正比，端智能的能力和模型算法的能力及其训练使用的用户数据量成正比，可用的用户数据量和对用户隐私保护的能力成正比，模型算法能力和端上算力成正比，所以&lt;strong&gt;&lt;span&gt;最终影响助手APP效用的关键是隐私保护和端上算力。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;有了隐私和算力的保障，应该怎样去构建一个助手APP去协助用户？可以参考马斯洛需求层次结构：生理、安全、社交需要、尊重和自我实现。简单做个类比，今天获取信息已经像吃饭、睡觉一样成为生理需求的一部分，而安全则是在信息获取中的特殊和紧急部分。因此，做好生理和安全的简单需求是做好助手APP并提供有效协助的第一步。有了生理和安全的有效协助，我们的助手APP就会获取协助对象的信任，这一点非常重要。有了信任的基础，助手APP在必要时提醒用户给家人打个电话联络一下感情，才不会让其觉得突兀，反而会让用户愈发觉得助手APP是有温度和感情的，而不是个冷冰冰的Robot。从熟人社交（如家人）开始分界，随着愈发向陌生人社交、尊重和自我实现迈进，用户本地和个人的信息愈发显得不足，助手APP需要更多外部的信息输入和对外部常识、知识的理解，才能够有效协助用户解决这些高层次复杂需求。不管怎么说，有了信任的基础，用户就会像给词典应用或输入法添加词库一样自然地接受给助手APP添加外部信息和尝试、知识。（这些外部数据的透明和安全依然非常重要）&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当然，解决用户高层次复杂需求时，外部输入只是一部分，另一部分是助手APP会逐渐人格化。一旦我们能够设计开发出像能干的私人秘书一般的助手APP，用户的终端设备也会因为交互的改变而发生巨大的变化。为什么交互会改变？因为用户不必再和冷冰冰的机器和UI打交道了。用户会和自己的“私人秘书”助手APP进行交互，而助手APP又是人格化的，所以用户可以用更加自然的语言甚至眼神来跟助手APP交流。此外，由于助手APP本质上是应用程序，所以其跟数字世界打交道的方式会更加直接和高效，不存在把二进制数据用协议解析成文本、图片、音频、视频等等，直接用二进制进行交互。由于直接和高效的交互，用户终端设备的计算消耗会下降，除了不需要对数据进行解析处理外，省去了渲染UI 、听取用户输入、处理用户输入、响应输出等过程，这对于用户终端设备的小型化和可穿戴是极大的利好。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;综上所述，&lt;strong&gt;&lt;span&gt;UI智能化会朝着没有UI的方向演进，应用会向着服务化和二进制输入输出演进，移动操作系统会进化为只有一个APP —— 用户的私人智能体，其它APP被服务化并和该智能体进行二进制交互，而用户则会回归自然、社会和生活。未来，大家可能只佩戴眼镜或耳机就可以完成今天手机上的大部分功能。&lt;/span&gt;&lt;/strong&gt;作为实现用户交互的我们，前端工程师在智能化能力建设和储备上不断提升，在新的技术变革到来时，我们就是构建UI智能化的主力军。&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;延展阅读&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;[01] 代码推荐：《和你说说智能代码推荐》&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://juejin.cn/post/6995373415553040398&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;[02] 代码缺陷检测：《代码智能之缺陷检测》&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://juejin.cn/post/7007623998980751396&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;[03] 代码克隆检测：《代码智能之克隆检测》&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://juejin.cn/post/7024376085663973384&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;[04] 代码搜索：《代码智能之代码搜索》&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://juejin.cn/post/7041469468836364296&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;[05] Word2Vec的学习：《Word2Vec 和词嵌入 - 初学者指南（译）》&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://juejin.cn/post/7000677293169311757&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;[06] Copilot的使用体验 ：《Copilot ！智能代码尝鲜推荐！》&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://juejin.cn/post/7052605030104301582&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;[07] VsCode代码提示插件 ：《开发一款专属的 VsCode 代码提示插件》&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://juejin.cn/post/7064402460663611399&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;[08] PipCook 2.0&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/alibaba/pipcook&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;[09] DataCook&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://github.com/imgcook/datacook&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;[10] Sophon Code IntelliSense&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://marketplace.visualstudio.com/items?itemName=dataworks.dataworks-intellisense&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;[11] AI助力90.4%双11前端模块自动生成&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.imgcook.com/blog/2020-foreword&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1592592592592592&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30GVM3dIDnibBhHy2LdAuqf8cs5H5xlBJVjRs0pQvQE2JPc9IibR58icZerJeT7aAYbxcqzBrOm4vn41Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/OmCbZ5JK30EMKQ9icwneSbNQzo1Y2ia3I0W9hCptKWotZ2XxAibQ8Zg0yrTBmkxPzEMjQWoJaCI5YQXZfbp7UPE5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-type=&quot;gif&quot; data-ratio=&quot;1.3265306122448979&quot; data-w=&quot;49&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/OmCbZ5JK30GMpsz1kdxGBRiclB5yjhBh5iamZLYrF2BOK4YNhXbjibibx63B6o5ubgOvYGRyUa0DK6gpI9YibkKUUCQ/640?wx_fmt=gif&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;欢迎留言一起参与讨论~&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>96dea521812d4c1aabd3c92285ed10b9</guid>
<title>基于Packer+Ansible实现云平台黄金镜像统一构建和发布</title>
<link>https://toutiao.io/k/bqo29jv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4186046511627907&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0boEE7WZFP9d3HlsErR1zA2jjuc9qZicyOWTppqV8fBPrX55NQV3v5qv6VdCJrYx5cSPmHn3r6z6iaj9GuDVZDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;946&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;黄金镜像(Golden Image)是云平台虚拟机启动的镜像模板，通常由管理员基于ISO镜像或者各操作系统发行版发行的Base镜像之上添加安全合规基线配置以及预装必要的agent，如cloud-init、qemu-guest-agent、监控agent等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;手动做镜像一直是非常繁琐的事，首先需要准备一个KVM/QEMU虚拟机环境启动虚拟机，当然也可以直接在云平台基于一个Base镜像启动虚拟机。然后手动执行一系列脚本，安装各种必要工具及配置，接着把虚拟机关机，生成快照镜像，最后上传到云平台镜像仓库，预计至少需要半个小时以上完成整个黄金镜像的制作和发布。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式至少存在如下几个问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;很难维护，一旦黄金镜像需要修改某个配置，就需要重新走整个制作镜像流程，非常耗费时间。如果只是简单配置修改，倒也是可以通过把镜像文件通过loop设备挂载到本地，然后chroot文件系统去直接改。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;镜像是一个二进制制品文件，没法做版本管理，无法跟踪变化，无法代码化。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;基本无法串联到任何pipeline中，比如镜像漏洞扫描等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此还在采用如上这种效率极低的手动方式的已经很少了，往往都会借助一些镜像构建工具，本文接下来会分别介绍OpenStack私有云和AWS公有云场景下的镜像构建工具，最后将介绍多云或者混合云场景下基于Packer+Ansible的镜像构建最佳实践。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;备选方案：OpenStack diskimage-builder&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;OpenStack维护的DIB(disk image builder)项目，目前是TripleO项目的子项目，主要用于构建OpenStack镜像。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DIB的原理就是把一些操作封装成Shell脚本，比如创建用户(devuser)、安装cloud-init(cloud-init)、配置yum源(yum)、部署tgtadm(deploy-tgtadm)等，这些脚本称为Element，位于目录&lt;code&gt;diskimage-builder/diskimage_builder/elements&lt;/code&gt;，你可以根据自己的需求自己定制elements，elements之间会有依赖，依赖通过element-deps文件指定，比如elements centos7的element-deps为：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;cache-url&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;redhat-common&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;rpm-distro&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;source-repositories&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;yum&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以&lt;code&gt;devuser&lt;/code&gt; Element为例，该Element为创建一个操作系统用户，脚本如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;#!/bin/bash&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# ...省略部分代码&lt;/span&gt;&lt;br/&gt;user_shell_args=&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; [ -n &lt;span&gt;&quot;&lt;span&gt;${DIB_DEV_USER_SHELL}&lt;/span&gt;&quot;&lt;/span&gt; ]; &lt;span&gt;then&lt;/span&gt;&lt;br/&gt;    user_shell_args=&lt;span&gt;&quot;-s &lt;span&gt;${DIB_DEV_USER_SHELL}&lt;/span&gt;&quot;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;fi&lt;/span&gt;&lt;br/&gt;useradd -m &lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt; &lt;span&gt;$user_shell_args&lt;/span&gt;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; [ -n &lt;span&gt;&quot;&lt;span&gt;${DIB_DEV_USER_PASSWORD}&lt;/span&gt;&quot;&lt;/span&gt; ]; &lt;span&gt;then&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;Setting password.&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;&lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt;:&lt;span&gt;${DIB_DEV_USER_PASSWORD}&lt;/span&gt;&quot;&lt;/span&gt; | chpasswd&lt;br/&gt;&lt;span&gt;fi&lt;/span&gt;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; [ -n &lt;span&gt;&quot;&lt;span&gt;${DIB_DEV_USER_PWDLESS_SUDO}&lt;/span&gt;&quot;&lt;/span&gt; ]; &lt;span&gt;then&lt;/span&gt;&lt;br/&gt;    cat &amp;gt; /etc/sudoers.d/&lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt; &amp;lt;&amp;lt; EOF&lt;br/&gt;&lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt; ALL=(ALL) NOPASSWD:ALL&lt;br/&gt;EOF&lt;br/&gt;    chmod 0440 /etc/sudoers.d/&lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt;&lt;br/&gt;    visudo -c || rm /etc/sudoers.d/&lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt;&lt;br/&gt;&lt;span&gt;fi&lt;/span&gt;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; [ -f /tmp/in_target.d/devuser-ssh-authorized-keys ]; &lt;span&gt;then&lt;/span&gt;&lt;br/&gt;    mkdir -p /home/&lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt;/.ssh&lt;br/&gt;    cp /tmp/in_target.d/devuser-ssh-authorized-keys /home/&lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt;/.ssh/authorized_keys&lt;br/&gt;&lt;span&gt;fi&lt;/span&gt;&lt;br/&gt;chown -R &lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt;:&lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt; /home/&lt;span&gt;${DIB_DEV_USER_USERNAME}&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可见该脚本就是使用Shell命令完成创建用户、设置密码以及配置sudo权限等工作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DIB执行时会首先下载一个Base镜像，然后通过用户指定的elements列表，一个一个chroot进去执行，从而完成了镜像的制作，整个过程不需要启动虚拟机。这有点类似Dockerfile的构建过程，Dockerfile的每个指令都会生成一个临时的容器，然后在容器里面执行命令。DIB则每个elements都会chroot到文件系统中执行elements中的脚本。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如制作Ubuntu 18.04镜像：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;export&lt;/span&gt; DIB_RELEASE=bionic&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; DIB_DEV_USER_USERNAME=ubuntu&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; DIB_DEV_USER_PASSWORD=secret&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; DIB_DEV_USER_PWDLESS_SUDO=YES&lt;br/&gt;disk-image-create -o ubuntu-18.04.qcow2 vm ubuntu cloud-init-datasources devuser&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DIB工具实现了OpenStack镜像自动化构建，相对手动制作镜像大大提高了效率。存在的问题是Elements是通过Shell脚本实现的，容易出错且不太好维护，很多判断逻辑都是和操作系统版本有关，很难做到完全兼容。另外，DIB通过chroot方式修改镜像，因此只支持主流的Linux操作系统，不支持Windows。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;备选方案：AWS EC2 Image Builder&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;EC2 Image Builder是AWS上的镜像构建服务，它的原理是基于AWS已有托管的一个Source Base镜像启动一个EC2虚拟机实例，然后SSH到虚拟机执行一系列脚本安装软件和配置，最后创建快照制作成AMI镜像。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.2947080291970803&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0boEE7WZFP9d3HlsErR1zA2jjuc9qZic6iagnLnhjPvUcndiaGicOGUyZXpkAxrFmNnHwQjZMTZibfnib0wUQfsygUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1096&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;aws ec2 image builder&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和DIB有点类似，EC2 Image Builder也是把一些操作封装成Shell脚本，在DIB中称为Element，而AWS上称为Component，这些Comontents可以由用户自己写，AWS也提供一些托管的Components可以直接使用，比如安装amazon-cloudwatch-agent-linux、预装apache-tomcat-9-linux等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个最简单的HelloWorld Component如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;name:&lt;/span&gt; &lt;span&gt;HelloWorldComponent&lt;/span&gt;&lt;br/&gt;&lt;span&gt;description:&lt;/span&gt; &lt;span&gt;This&lt;/span&gt; &lt;span&gt;is&lt;/span&gt; &lt;span&gt;hello&lt;/span&gt; &lt;span&gt;world&lt;/span&gt; &lt;span&gt;testing&lt;/span&gt; &lt;span&gt;component.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;schemaVersion:&lt;/span&gt; &lt;span&gt;1.0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;phases:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;build&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;steps:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;HelloWorldStep&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;action:&lt;/span&gt; &lt;span&gt;ExecuteBash&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;inputs:&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;commands:&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;-&lt;/span&gt; &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;Hello World! Build.&quot;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;validate&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;steps:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;HelloWorldStep&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;action:&lt;/span&gt; &lt;span&gt;ExecuteBash&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;inputs:&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;commands:&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;-&lt;/span&gt; &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;Hello World! Validate.&quot;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;test&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;steps:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;HelloWorldStep&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;action:&lt;/span&gt; &lt;span&gt;ExecuteBash&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;inputs:&lt;/span&gt;&lt;br/&gt;          &lt;span&gt;commands:&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;-&lt;/span&gt; &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;Hello World! Test.&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和DIB不一样，DIB是通过chroot到镜像文件系统，注定无法制作Windows镜像，而EC2 Image Builder启动了一个虚拟机，Windows虚拟机可以通过WinRM执行PowerShell脚本，因此EC2 Image Builder是支持Windows的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;EC2 Image Builder除了执行脚本外，还封装了一些高级Action模块，比如从S3上上传下载文件、修改文件权限、复制文件等，通过这些高级模块不需要自己写脚本，可以简化Component。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;EC2 Image Builder可以与其他生态服务结合完成自动构建，比如一旦Component代码更新或者Base镜像更新后，EC2 Image Builder会自动触发镜像构建，因此能够保证黄金镜像是最新的。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;推荐方案：Packer+Ansible&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Packer是Hashicorp开源的镜像构建工具，Hashicorp这个公司除了开源了Packer项目，还包括Consul、Terraform、Vault、Vagrant等非常流行的工具。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果说DIB解决了OpenStack私有云镜像自动化构建问题，EC2 Image Builder解决了AWS公有云镜像构建，那么Packer则同时解决了私有云、公有云、混合云的黄金镜像统一构建问题，它不仅支持主流公有云如AWS、阿里云、腾讯云、Google云、Azure等，还支持如QEMU、VirtualBox、VMware、OpenStack等私有云环境。&lt;/span&gt;&lt;figcaption/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Packer的原理和EC2 Image Builder比较类似都是通过启动一个虚拟机，然后通过SSH(Linux)或者WinRM(Windows)在虚拟机环境中执行脚本完成自动化配置，最后生成镜像模板。比如制作AWS黄金镜像会创建一个EC2实例，而如果是QEMU，则通过&lt;code&gt;qemu-system-x86&lt;/code&gt;命令配合kickstart启动一个初始化虚拟机。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Packer支持并行在多平台上构建镜像，在混合云场景下，Packer能基于同样的标准同时并行构建公有云镜像和私有云镜像，保持多平台的镜像一致性。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除此之外，Packer和前面介绍的两个镜像构建工具不一样的是，除了支持常规的Shell或者Powershll脚本，Packer更推荐结合自动化配置管理工具构建镜像模板，比如大家熟悉的Ansible、Puppet、Chef、Salt等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文接下来主要简要介绍如何使用Packer + Ansible构建OpenStack以及AWS镜像。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先介绍Packer的最主要的两个概念：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Builder：Builder就是告诉Packer要构建什么镜像（AWS Or OpenStack）以及一些必要的环境配置信息，比如AWS的AccessKey/AccessSecret、Source AMI、规格等，OpenStack的AuthURL、Project、Domain、Username、Password、Source Image等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Provisioner：Provisioner就是告诉Packer要如何构建镜像，你可以告诉Packer执行一些Shell脚本、执行Ansible playbook等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以构建OpenStack镜像为例，样例模板如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;  &lt;span&gt;&quot;variables&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;region&quot;&lt;/span&gt;: &lt;span&gt;&quot;RegionOne&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;flavor&quot;&lt;/span&gt;: &lt;span&gt;&quot;m1.micro&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;network_id&quot;&lt;/span&gt;: &lt;span&gt;&quot;695c8e70-ae94-4c39-86f0-c15dcaea7dd2&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;source_image&quot;&lt;/span&gt;: &lt;span&gt;&quot;4e61e55b-c635-44e7-a722-674b2a454927&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;ssh_username&quot;&lt;/span&gt;: &lt;span&gt;&quot;ubuntu&quot;&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;builders&quot;&lt;/span&gt;: [&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;openstack&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;region&quot;&lt;/span&gt;: &lt;span&gt;&quot;{{user `region`}}&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;ssh_username&quot;&lt;/span&gt;: &lt;span&gt;&quot;{{user `ssh_username`}}&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;image_name&quot;&lt;/span&gt;: &lt;span&gt;&quot;Packer-ubuntu-20.04-x86&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;source_image&quot;&lt;/span&gt;: &lt;span&gt;&quot;{{user `source_image`}}&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;flavor&quot;&lt;/span&gt;: &lt;span&gt;&quot;{{user `flavor` }}&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;networks&quot;&lt;/span&gt;: [&lt;br/&gt;        &lt;span&gt;&quot;{{user `network_id`}}&quot;&lt;/span&gt;&lt;br/&gt;      ]&lt;br/&gt;    }&lt;br/&gt;  ],&lt;br/&gt;  &lt;span&gt;&quot;provisioners&quot;&lt;/span&gt;: [&lt;br/&gt;    {&lt;br/&gt;      &lt;span&gt;&quot;type&quot;&lt;/span&gt;: &lt;span&gt;&quot;shell&quot;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&quot;inline&quot;&lt;/span&gt;: [&lt;br/&gt;        &lt;span&gt;&quot;sudo useradd -m -r -s /bin/bash int32bit&quot;&lt;/span&gt;,&lt;br/&gt;        &lt;span&gt;&quot;echo &#x27;int32bit:1sReAe7nUGO5M&#x27; | sudo chpasswd -e&quot;&lt;/span&gt;&lt;br/&gt;      ]&lt;br/&gt;    }&lt;br/&gt;  ]&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个模板只配置了一个OpenStack Builder，Provisioner也比较简单，仅通过Shell脚本创建了一个&lt;code&gt;int32bit&lt;/code&gt;用户。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种JSON格式模板对于程序是友好的，但是对于程序员编写不太方便，Packer模板还支持HCL(Hashicorp Configuration Language)语言，目前还处于Beta阶段，不过亲测可以用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Terraform使用的就是HCL，因此使用过Terraform的对HCL语言肯定不陌生了，前面的例子转化成HCL格式为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;variable &quot;flavor&quot; {&lt;br/&gt;  type    = string&lt;br/&gt;  default = &quot;m1.micro&quot;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;variable &quot;network_id&quot; {&lt;br/&gt;  type    = string&lt;br/&gt;  default = &quot;unset&quot;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;variable &quot;region&quot; {&lt;br/&gt;  type    = string&lt;br/&gt;  default = &quot;RegionOne&quot;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;variable &quot;source_image&quot; {&lt;br/&gt;  type    = string&lt;br/&gt;  default = &quot;unset&quot;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;variable &quot;ssh_username&quot; {&lt;br/&gt;  type    = string&lt;br/&gt;  default = &quot;ubuntu&quot;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;source &quot;openstack&quot; &quot;test_openstack&quot; {&lt;br/&gt;  flavor       = &quot;${var.flavor}&quot;&lt;br/&gt;  image_name   = &quot;Packer-ubuntu-20.04-x86&quot;&lt;br/&gt;  networks     = [&quot;${var.network_id}&quot;]&lt;br/&gt;  region       = &quot;${var.region}&quot;&lt;br/&gt;  source_image = &quot;${var.source_image}&quot;&lt;br/&gt;  ssh_username = &quot;${var.ssh_username}&quot;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;build {&lt;br/&gt;  sources = [&quot;source.openstack.test_openstack&quot;]&lt;br/&gt;&lt;br/&gt;  provisioner &quot;shell&quot; {&lt;br/&gt;    inline = [&lt;br/&gt;        &quot;sudo useradd -m -r -s /bin/bash int32bit&quot;,&lt;br/&gt;        &quot;echo &#x27;int32bit:1sReAe7nUGO5M&#x27; | sudo chpasswd -e&quot;&lt;br/&gt;    ]&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;调用packer命令即可构建如上镜像:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;packer build -var source_image=xxxx -var network_id=xxxx ubuntu.pkr.hcl&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.51015625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0boEE7WZFP9d3HlsErR1zA2jjuc9qZicY8jVRzaDxorQtzMewfFUMv4JmJx2QZhqS92RD3UYFlRnwNhHRKrbVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;packer openstack packer&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上的Provisioner通过内嵌Shell脚本进行配置，简单的功能还好，复杂的配置则更推荐使用自动化配置工具，接下来以Ansible为例，介绍如何构建黄金镜像。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面介绍的DIB、EC2 Image Builder按照功能分别拆分的Element和Component，这样便于模块化管理。使用Ansible我们可以把不同的功能划分为不同的Ansible Role。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以安装cloud-init为例，首先使用&lt;code&gt;ansible-galaxy&lt;/code&gt;初始化Role：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;mkdir -p packer_template/ansible/roles&lt;br/&gt;&lt;span&gt;cd&lt;/span&gt; packer_template/ansible/roles&lt;br/&gt;ansible-galaxy role init cloud-init&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Role的playbook如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# cat ansible/roles/cloud-init/tasks/main.yml&lt;/span&gt;&lt;br/&gt;&lt;span&gt;---&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# tasks file for cloud-init&lt;/span&gt;&lt;br/&gt;&lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;Install&lt;/span&gt; &lt;span&gt;cloud-init&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;package:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;cloud-init&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;state:&lt;/span&gt; &lt;span&gt;present&lt;/span&gt;&lt;br/&gt;&lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;Enable&lt;/span&gt; &lt;span&gt;cloud-init&lt;/span&gt; &lt;span&gt;service&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;service:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;cloud-init&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;enabled:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建入口playbook &lt;code&gt;build_image.yaml&lt;/code&gt;如下:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# cat ansible/build_image.yaml&lt;/span&gt;&lt;br/&gt;&lt;span&gt;---&lt;/span&gt;&lt;br/&gt;&lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;Config&lt;/span&gt; &lt;span&gt;Task&lt;/span&gt; &lt;span&gt;For&lt;/span&gt; &lt;span&gt;Build&lt;/span&gt; &lt;span&gt;Image&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;hosts:&lt;/span&gt; &lt;span&gt;all&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;gather_facts:&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;become:&lt;/span&gt; &lt;span&gt;yes&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;become_method:&lt;/span&gt; &lt;span&gt;sudo&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;tasks:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;-&lt;/span&gt; &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;Setup&lt;/span&gt; &lt;span&gt;cloud-init&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;include_role:&lt;/span&gt;&lt;br/&gt;      &lt;span&gt;name:&lt;/span&gt; &lt;span&gt;cloud-init&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建Packer template，这里我们同时构建AWS和OpenStack镜像，为了使代码简单，去掉了&lt;code&gt;variable&lt;/code&gt;部分，OpenStack的认证信息通过环境变量获取，AWS的认证通过STS Role指定，对应template模板文件如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;source &quot;openstack&quot; &quot;test_openstack&quot; {&lt;br/&gt;  image_name    = &quot;Packer-test-ubuntu&quot;&lt;br/&gt;  flavor        = &quot;m1.micro&quot;&lt;br/&gt;  ports         = [&quot;695c8e70-ae94-4c39-86f0-c15dcaea7dd2&quot;]&lt;br/&gt;  region        = &quot;RegionOne&quot;&lt;br/&gt;  source_image  = &quot;4e61e55b-c635-44e7-a722-674b2a454927&quot;&lt;br/&gt;  ssh_username  = &quot;ubuntu&quot;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;source &quot;amazon-ebs&quot; &quot;test_aws&quot; {&lt;br/&gt;  ami_name      = &quot;Packer-test-ubuntu&quot;&lt;br/&gt;  region        = &quot;cn-northwest-1&quot;&lt;br/&gt;  source_ami    = &quot;ami-04effa29f4d91541f&quot;&lt;br/&gt;  instance_type = &quot;t2.micro&quot;&lt;br/&gt;  ssh_username  = &quot;ubuntu&quot;&lt;br/&gt;  vpc_id        = &quot;vpc-02f7b6239c82c9cd1&quot;&lt;br/&gt;  subnet_id     = &quot;subnet-053ab0880cea4e85c&quot;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;build {&lt;br/&gt;  sources = [&lt;br/&gt;    &quot;source.openstack.test_openstack&quot;,&lt;br/&gt;    &quot;source.amazon-ebs.test_aws&quot;&lt;br/&gt;  ]&lt;br/&gt;  provisioner &quot;ansible&quot; {&lt;br/&gt;    playbook_file = &quot;ansible/build_image.yaml&quot;&lt;br/&gt;    user          = &quot;ubuntu&quot;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;与前面的例子不同的是：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;sources指定了多个builder，这里分别为OpenStack和AWS。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;provisioner指定为&lt;code&gt;ansible&lt;/code&gt;类型，指定了playbook路径。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用packer命令执行：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;packer build ubuntu.pkr.hcl&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出如图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.715625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/J0boEE7WZFP9d3HlsErR1zA2jjuc9qZicOGJE0FNFyKZGTzxVm2xZqIV1ZqibTXjD2VE91MTCiaEGbkBkDEq2PsZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;figcaption&gt;packer openstack and aws&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不同的builder通过颜色区分，最后会输出生成的所有镜像制品ID：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;==&amp;gt; Wait completed after 5 minutes 53 seconds&lt;br/&gt;&lt;br/&gt;==&amp;gt; Builds finished. The artifacts of successful builds are:&lt;br/&gt;--&amp;gt; amazon-ebs.test_aws: AMIs were created:&lt;br/&gt;cn-northwest-1: ami-071e19313c601b374&lt;br/&gt;--&amp;gt; openstack.test_openstack: An image was created: &lt;br/&gt;583a0bac-b973-47aa-8424-8929dfa99288&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上例子通过Packer+Ansible使用同一个Provision配置并行构建了OpenStack私有云镜像和AWS公有云镜像，实现黄金镜像的构建自动化和代码化。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;结论&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文首先介绍了私有云场景下OpenStack DIB工具以及公有云AWS EC2 Image Builder服务两个主流镜像构建方案，对比了其优缺点，然后介绍了适合多云或者混合云场景下的Packer镜像构建工具，最后引入Packer+Ansible镜像最佳构建实践。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过Packer可同时并行构建私有云和公有云镜像，并且由于Provision是一样的，最后构建的镜像也是完全一样的，通过Packer实现了混合云模式下镜像的统一构建和发布。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时通过Ansible自动化工具简化了代码的编写，Ansible playbook相对Shell脚本更易于维护和管理，不需要自己脚本判断操作系统类型，Ansible会自己判断。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;镜像构建完全代码化，因此可以很容易地通过代码仓库做版本控制，集成企业CICD，实现镜像的统一构建和发布。&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8480e08c08381dab632cbf5af2843d14</guid>
<title>如何管理分布式团队？</title>
<link>https://toutiao.io/k/m8adr69</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;fieldset data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkyNTI5NTQ1NQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/wxcY9TH8dPsYAnrjaZktBe0iahF8ic9QkF26cAw8pK6HPR1bfFEImdyJspvkQvQwmnYxP4eEVW60ewVVickcWXnrQ/0?wx_fmt=png&quot; data-nickname=&quot;架构文摘&quot; data-alias=&quot;ArchDigest&quot; data-signature=&quot;每天一篇架构领域重磅好文，涉及一线互联网公司应用架构（高可用、高性能、高稳定）、大数据、机器学习、Java架构等各个热门领域。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/fieldset&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;如今，寻找和雇用所有必要的人才来建立你的数字产品是具有挑战性的。因此，许多企业选择替代解决方案，并将其项目的某些部分外包。因此，他们可以扩大专业知识，实现更大的灵活性，提高生产力，并降低成本。在外包模式中，分布式软件开发团队是值得考虑的。这种模式涉及在其他地区、国家或大陆雇用远程专家。它使你能够进入全球IT人才库。因此，你可以选择可靠的技术合作伙伴，不受地域限制。分布式团队使用多种工具和技术进行沟通、规划和管理项目。这篇文章将分享管理分布式软件开发团队的工作流程时使用的见解、有价值的提示和高效的技术。   &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;分布式团队和远程工人之间的区别是什么？&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在外包数字产品开发时，许多人对企业可以选择的各种模式之间的区别感到困惑。那么，建立一个分布式软件开发团队和雇用远程专家之间有什么区别？让我们澄清这些术语来了解一下。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;远程团队&lt;/strong&gt;&lt;br/&gt;远程软件开发或虚拟团队是一群不在你办公室的员工，但被认为是你内部团队的一部分。他们通过聊天、视频通话和在线会议进行工作沟通。在大多数情况下，你仍然可以把你的核心团队留在办公室，把特定的任务委托给远程工人。因此，对工作流程的管理和控制仍然是你的责任。这意味着，你应该确保你的远程员工适应其文化。此外，你还必须进行入职培训，控制专家的职业发展，并与人力资源管理部门打交道，以保留你的团队成员。同时，对于分布式团队，你将不需要直接参与上述所有过程。相反，为你提供团队的供应商会承担起所有这些责任。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;分布式团队&lt;/strong&gt;&lt;br/&gt;分布式开发团队是一个典型的外包模式。它涉及到雇用几个供应商或独立承包商在不同地点工作。与虚拟团队不同，分布式团队不是集中的。他们中的每一个人都可能在项目的一个特定方面工作。项目经理确保良好的组织和对工作流程的控制。另外，分布式团队应该使用有效的沟通和协作工具，让所有的利益相关者和团队成员都能在同一起跑线上。简而言之，一个分布式团队与两家公司合作，每个人都做自己最擅长的事情。创业公司负责创意、战略、资金和其他商业流程，而供应商则负责人员配置、保留和实施你的创意。这样的角色分配往往是相当有帮助的。为什么呢？因为对最佳人才的竞争是非常激烈的。所以初创企业缺乏雇用和保留合适候选人的能力。 &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;分布式开发团队的好处是什么？&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;分布式模式可以获得更广泛的人员配置机会，对工作过程采取灵活的方法，以及团队的敏捷性，这在今天是非常需要的。为你的软件产品开发建立一个分布式团队的主要优势在这里。增加灵活性。分布式模式本身在人员配置和项目管理方面是灵活的。雇佣的供应商可以在没有客户参与的情况下增加所需的专业知识，因此在扩大项目规模时，你不会浪费时间和精力。广泛的人才库。快速增长的IT人才短缺是当今企业面临的关键挑战之一。而你可以通过分布式团队模式来解决这个问题，该模式提供了进入全球人才库的机会。敏捷的方法。敏捷方法涉及设定目标，并通过进行短期但高效的冲刺来更快地实现目标。分布式团队经常转向这种方法，争取更好地组织和适应需求的变化。成本效益。转向离岸供应商或建立一个分布式团队要比内部解决方案便宜得多。你可以投资于更紧急的业务需求，而不是大量的劳动力支出。生产力。分布式团队通过多种软件和工具组织充分的沟通流。它还可以促进各种流程，从项目管理到文件维护。有效的项目管理。分布式团队模式使客户不需要浪费时间来处理众多的管理问题。许多与人员配置、团队扩展、风险管理、积压更新等相关的小需求都在供应商那边执行。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;分布式团队管理的秘诀和黑科技&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;我们的团队在众多的项目中工作，以满足客户的期望和个人要求。我们的主要原则之一是让客户感觉到他们的内部团队和我们加入项目的远程专业人员之间没有区别。特别是，我们有在分布式软件开发团队模式下工作的经验。在处理这类项目时，我们已经开发了特定的战术和项目管理技术，并已证明其有效性。我想分享一些关于管理分布式开发团队的最有价值的见解。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;最佳经验&lt;/strong&gt;&lt;br/&gt;我们所做的产品是用于监控和管理云资源的复杂软件。简而言之，这是一个努力促进DevOps工作的产品，为他们提供多种指标、系统健康检查、调试功能等。我们已经在这个项目上工作了两年多了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;分布式团队由三部分组成：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;客户在美国的内部团队（超过20位专家，其中5或6位与我们保持联系）&lt;br/&gt;我们的团队（10名专家，包括5名开发人员）&lt;br/&gt;另一个来自东欧的团队（7名专家）&lt;br/&gt;我们的团队负责项目的用户界面和前端开发。因此，整体的分布式团队是相当大的，而项目是复杂的，并经历定期的变化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;挑战和解决方案&lt;/strong&gt;&lt;br/&gt;由于客户的项目是一个初创公司，任务的分配造成了特殊的物流问题，直接影响到团队的互动。这很可能发生在项目的早期阶段，当时各团队还不习惯对方的方法，而且还存在具体的沟通问题。因此，我们的关键目标之一是与其他团队协调所有的计划和期望，以避免不必要的工作和给其他参与者带来麻烦。为了解决这个挑战，值得在像Swagger这样的工具中提前准备规范。它可以让所有分布在各地的团队成员更好地了解彼此的目标，从而解决一个有组织的工作流程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;沟通流程&lt;/strong&gt;&lt;br/&gt;在最初的开发阶段，从事该项目的各团队之间存在着某些误解。然而，我们通过高质量的沟通和妥协解决了所有这些问题。为了工作流程的效率，团队成员应该尽其所能。建立良好的沟通是分布式团队成功的关键。我们开始使用电子邮件和Discord，但这些沟通方式被证明是不方便的，所以我们转移到Slack的共享工作空间。我们为以下目的创建了频道。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;我们团队的内部频道&lt;/strong&gt;&lt;br/&gt;一个用于与后台和API团队沟通的频道&lt;br/&gt;额外的频道，用于与经理们进行小组聊天。&lt;br/&gt;Slack是一个非常有益的工具，它可以帮助分布式团队把所有的东西放在一个地方，快速解决问题，并在所有的渠道中保持联系。此外，我们在客户方面使用Jira进行有效的项目管理。它还通过减少额外的电话和会议帮助我们节省时间。此外，我们没有把时间浪费在不必要的官僚主义上，而是直接给那些从事具体工作的人打上标签，没有决策者和等级制度的参与。此外，我们在聊天中调整了特定的机器人。它们在工作日结束时被触发，唤起跨团队的沟通。因此，问题在渠道中被立即讨论，这减少了对定期耗时会议的需求。最后，产品负责人向我们提供所有必要的信息并澄清问题点，包括与后台有关的要求和更新。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;会议和电话&lt;/strong&gt;&lt;br/&gt;在产品的测试版发布之前，我们每天都进行会议，提出问题，得到需求的澄清，并分享我们阻碍开发过程的问题。这种会议的主要目标是在挑战出现时立即解决，并立即报告开发进度。同时，这也是我们商定发布日期、冲刺计划、里程碑等的地方。此外，每隔两三天，我们会进行冲刺审查。这是必要的，因为工作范围的不断变化。在这样的会议上，我们实时纠正和更新冲刺计划。最后，我们定期与其他团队进行同步会议。我们在这些会议上讨论我们的共同问题，以确保每个人都在同一起跑线上。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;内部沟通流程&lt;/strong&gt;&lt;br/&gt;至于我们的内部沟通，我们一直保持着联系，并每天进行会议。其中两个是语音或视频电话，其他的是聊天，这样可以节省很多时间。此外，为了讨论一些小问题，必要时我们会发短信或打电话给对方。我们的团队成员在每周的技术会议上讨论所有的技术决定、库、方法等等。通常情况下，我们在聊天中钉上相关的问题，之后每个人都会讲述他们的进展、成就和失败。这使我们能够跟上与快速发展的项目有关的最新事件。还会设计一个两周的冲刺计划，钉在频道上，标明最后期限和负责该任务的团队成员。冲刺计划的审查每两三天就会进行一次。此外，开发人员讨论工作流程的挑战，建立重构计划，并在回顾性会议上讨论基本问题。如果需要的话，也可以召开讨论新功能、需求和任务分解的会议。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以下是我们应用的其他一些做法，以改善我们团队中的沟通：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;在Github上设置带有标签的行动，以加速审查&lt;br/&gt;打私人电话来讨论紧急和关键的任务&lt;br/&gt;在聊天中告知其他团队成员我们的缺席或日程变化&lt;br/&gt;在项目的中间阶段展示当前的成果，以减少对工作范围的误解&lt;br/&gt;明确表达我们对冲刺阶段的期望&lt;br/&gt;对已实施的未达成一致的变化给出理由&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;团队管理&lt;/strong&gt;&lt;br/&gt;为了保持团队成员的工作效率和参与度，我们为他们的发展组织计划。每位员工每三个月与团队领导和经理有一次1-2-1的会议。我们讨论他们对当前任务的兴趣和在项目中发展的愿望。为每个新的团队成员提供一个负责他们有效入职的导师也是值得的。导师应该向新人解释业务逻辑、项目、团队和内部流程。这个指导过程可能会持续两个月之久。它可以帮助新成员感到更有信心和了解项目的具体情况。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;录制视频&lt;/strong&gt;&lt;br/&gt;最后，使用视频向分散的团队成员传递信息是有价值的。我们经常使用这种方法来向新员工解释项目的具体内容。项目经理录制视频，描述知识库应用程序的工作方式。我们将视频与关键团队的通话和关于新功能的讨论存储在一个私人的YouTube频道，而带有所有链接的基地则在Confluence中。&lt;span&gt;&lt;span&gt;我们选择YouTube是因为它有方便的标签，可以快速搜索。这种方法适用于任何任务。例如，你可以为未来的项目制作一个视频，演示设计布局的功能。然后，将制作布局的人可以观看这些功能是如何工作的，看到一些交互场景，并得到按钮的描述。&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另外，这种方法对于回顾会议来说也很方便。它可以帮助跟踪一个特定的功能是如何变化的，有哪些实现的想法被考虑过。其中一些可能没有被用于MVP，但对接下来的开发阶段是有帮助的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以下是录制此类视频的几个关键原因：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;它能够存储任何数据，不管接受这些数据的人是否还在公司工作。&lt;br/&gt;它有助于回答一般在开始时出现的问题，并引出更详细的问题，有助于新团队成员的沉浸感。&lt;br/&gt;问答环节能够在观看特定视频后实时提出更多问题。&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YK9e7vHy9IQATwibKVicOpXZibX8VOvBrnF39NdpXQMwdpyIgN0ibicEwRdge0mXthxjHagHgwpWhrsibvMZFibaQC6vQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot; mpa-is-content=&quot;t&quot;&gt;&lt;strong&gt;如何让分布式开发团队的工作变得有利，而不是有压力&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1.2857142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/orc2J6rib40bATuJM23UiaHQ0tsVpvjgyuhk7To5zFqb2fyL9pCr1U7hfeKJELCht0KxWnuias6TLibMdcRhM7QhyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;14&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;管理一个分布式开发团队需要一个完善的、细致的方法。乍一看，这样的模式可能看起来相当复杂和具有挑战性。然而，通过适当的组织、有效的项目管理以及强大的工具和技术，分布式团队模式为现代企业提供了许多机会和好处。有了经验丰富的技术伙伴和正确的管理方法，转向分布式团队模式将可能帮助你无痛而有效地实现你的商业目标。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;28&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;section data-recommend-type=&quot;list-normal&quot; data-recommend-tid=&quot;2&quot; data-mpa-template=&quot;t&quot; data-mid=&quot;&quot; data-from=&quot;yb-recommend&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501257_1&quot; data-recommend-article-time=&quot;1636251616&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/zc3KLDBfJlm8bD2WBlwbvnsktMdtfSudNaJWbHr1Iyr6HkwCxETHiaiceaWYLmq7tWmHV29U8Xv8UnoeCAOYNj9Q/0?wx_fmt=jpeg&amp;amp;amp;random=0.27521905775014543&quot; data-recommend-article-title=&quot;强势开源一款小程序！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501257&amp;amp;idx=1&amp;amp;sn=7b4e27cdb1d3146a5e7e1951b5bdc9e8&amp;amp;chksm=c1ca33f9f6bdbaefd3874fa6313e422c8fb6b2799b40d09f36620f0ceaed4fd63c820da1f3ff#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501257&amp;amp;idx=1&amp;amp;sn=7b4e27cdb1d3146a5e7e1951b5bdc9e8&amp;amp;chksm=c1ca33f9f6bdbaefd3874fa6313e422c8fb6b2799b40d09f36620f0ceaed4fd63c820da1f3ff&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;强势开源一款小程序！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-11-07&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42592592592592593&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/zc3KLDBfJlm8bD2WBlwbvnsktMdtfSudNaJWbHr1Iyr6HkwCxETHiaiceaWYLmq7tWmHV29U8Xv8UnoeCAOYNj9Q/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501242_1&quot; data-recommend-article-time=&quot;1634952613&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UWibGeSzVdcKHzDRdVHusb9CJicA5FdhDVPAiaicdTbibx5XoRkhKA3O7Q727cTSurBkJpciczjLrF2wkA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;强力推荐一个完善的物流（WMS）管理项目（附代码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501242&amp;amp;idx=1&amp;amp;sn=aa2297b69874de0993f62ea404376bab&amp;amp;chksm=c1ca338af6bdba9cf3e051ff3001e1f31f9fa97350f3851c797d6486eca360df537196dbe67b#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501242&amp;amp;idx=1&amp;amp;sn=aa2297b69874de0993f62ea404376bab&amp;amp;chksm=c1ca338af6bdba9cf3e051ff3001e1f31f9fa97350f3851c797d6486eca360df537196dbe67b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;强力推荐一个完善的物流（WMS）管理项目（附代码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-10-23&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.425&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UWibGeSzVdcKHzDRdVHusb9CJicA5FdhDVPAiaicdTbibx5XoRkhKA3O7Q727cTSurBkJpciczjLrF2wkA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501238_1&quot; data-recommend-article-time=&quot;1634606700&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VduLA9tc9dQkaw5HWIV6pqNrOiciaE17jeIeTtoLfgLbyu67dWkRj3tjKX7AFIMrV0rKD5ic6kwicyxg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一个 Spring Boot + MyBatis + Vue 音乐网站&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501238&amp;amp;idx=1&amp;amp;sn=d7e873d752a28b582d70bc9f7a981ddb&amp;amp;chksm=c1ca3386f6bdba9031ce115e734ce04c9b6728e8e027fbcf17d8d07f1e029ea5bea04f4a6273#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501238&amp;amp;idx=1&amp;amp;sn=d7e873d752a28b582d70bc9f7a981ddb&amp;amp;chksm=c1ca3386f6bdba9031ce115e734ce04c9b6728e8e027fbcf17d8d07f1e029ea5bea04f4a6273&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一个 Spring Boot + MyBatis + Vue 音乐网站&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-10-19&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42592592592592593&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VduLA9tc9dQkaw5HWIV6pqNrOiciaE17jeIeTtoLfgLbyu67dWkRj3tjKX7AFIMrV0rKD5ic6kwicyxg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501208_1&quot; data-recommend-article-time=&quot;1632101100&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VibcP3PNgQvXGZ7UJkVeu0JZsrldvF1urHlmNwhUP89IeKHz1PfJ12es2ArTwkYibAh3Y0soOib2rjA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;分享一套家庭理财系统（附源码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501208&amp;amp;idx=1&amp;amp;sn=44fcdfe2d7f81a26845faf33750ea9bb&amp;amp;chksm=c1ca33a8f6bdbabec8ff34719f438465adf745cbef30bfb92be53897c714d8c13bdd01989d17#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501208&amp;amp;idx=1&amp;amp;sn=44fcdfe2d7f81a26845faf33750ea9bb&amp;amp;chksm=c1ca33a8f6bdbabec8ff34719f438465adf745cbef30bfb92be53897c714d8c13bdd01989d17&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;分享一套家庭理财系统（附源码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-09-20&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42407407407407405&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VibcP3PNgQvXGZ7UJkVeu0JZsrldvF1urHlmNwhUP89IeKHz1PfJ12es2ArTwkYibAh3Y0soOib2rjA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501192_1&quot; data-recommend-article-time=&quot;1630718700&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UG0pYPldneUCCVsPia3Rtr9j3hlFHakhItFlOXuwLicUqQvP1PhkTM28CUU9BpRCWfWPfHYredCBiaA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一个互联网企业级别的开源支付系统&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501192&amp;amp;idx=1&amp;amp;sn=444404a565f02a8c532d291d99678a7b&amp;amp;chksm=c1ca33b8f6bdbaaeb7c65d9f6f0c399f609fb203f065b6e88a3ad5431473713dbb5ae3507b32#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501192&amp;amp;idx=1&amp;amp;sn=444404a565f02a8c532d291d99678a7b&amp;amp;chksm=c1ca33b8f6bdbaaeb7c65d9f6f0c399f609fb203f065b6e88a3ad5431473713dbb5ae3507b32&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一个互联网企业级别的开源支付系统&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-09-04&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.425&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UG0pYPldneUCCVsPia3Rtr9j3hlFHakhItFlOXuwLicUqQvP1PhkTM28CUU9BpRCWfWPfHYredCBiaA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501176_1&quot; data-recommend-article-time=&quot;1629509100&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VQRwetNLhDOB2Ej0fDZK4eRXsYlRNicgmsWwmuvlhibooic3N3su1lbMQPqWD186JiaOC5yJ9iaaic8bzw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;推荐一套开源通用后台管理系统（附源码）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501176&amp;amp;idx=1&amp;amp;sn=68e3ae7a9dc33fbbd379906ddcefdf5b&amp;amp;chksm=c1ca3348f6bdba5e1774625745f5ef40081c9b8eb0189073734b6808efb872720781d25b8dc0#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501176&amp;amp;idx=1&amp;amp;sn=68e3ae7a9dc33fbbd379906ddcefdf5b&amp;amp;chksm=c1ca3348f6bdba5e1774625745f5ef40081c9b8eb0189073734b6808efb872720781d25b8dc0&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;推荐一套开源通用后台管理系统（附源码）&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-08-21&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4265625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VQRwetNLhDOB2Ej0fDZK4eRXsYlRNicgmsWwmuvlhibooic3N3su1lbMQPqWD186JiaOC5yJ9iaaic8bzw/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501153_1&quot; data-recommend-article-time=&quot;1627704022&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UbyFoOMqOObokEYiahCar20LiaY8ZLGKzU7NYQQoGycgnhrmIzNJibPicGcNia3cbbXlYib6bcLJVV5aww/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;一款神仙接私活儿软件，吊到不行！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501153&amp;amp;idx=1&amp;amp;sn=bb29cffa56431b72a92709c0ae993af7&amp;amp;chksm=c1ca3351f6bdba4729c671cdcd0ee8b6af75c6ce8a7003e6c032942b849aab5bfedecd0f9d3b#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501153&amp;amp;idx=1&amp;amp;sn=bb29cffa56431b72a92709c0ae993af7&amp;amp;chksm=c1ca3351f6bdba4729c671cdcd0ee8b6af75c6ce8a7003e6c032942b849aab5bfedecd0f9d3b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;一款神仙接私活儿软件，吊到不行！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-07-31&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4265625&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7UbyFoOMqOObokEYiahCar20LiaY8ZLGKzU7NYQQoGycgnhrmIzNJibPicGcNia3cbbXlYib6bcLJVV5aww/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501139_1&quot; data-recommend-article-time=&quot;1626571500&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VGxZrbRFy96Sm9cXQzVEhiaLibUUYhYH1SJL4HUXenau3DCeq0KEOsguY4CWjaEd1BeAicJd24qFM2w/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;基于 SpringBoot 的仿豆瓣平台【源码分享】&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501139&amp;amp;idx=1&amp;amp;sn=f133e70bda8abae27459ccc4d3d6d8fd&amp;amp;chksm=c1ca3363f6bdba75b9a4145510d9b6108c56146a3146b2e2e6d660a08221618b01c815d55642#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501139&amp;amp;idx=1&amp;amp;sn=f133e70bda8abae27459ccc4d3d6d8fd&amp;amp;chksm=c1ca3363f6bdba75b9a4145510d9b6108c56146a3146b2e2e6d660a08221618b01c815d55642&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;基于 SpringBoot 的仿豆瓣平台【源码分享】&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-07-18&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42427884615384615&quot; data-type=&quot;jpeg&quot; data-w=&quot;832&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VGxZrbRFy96Sm9cXQzVEhiaLibUUYhYH1SJL4HUXenau3DCeq0KEOsguY4CWjaEd1BeAicJd24qFM2w/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501105_1&quot; data-recommend-article-time=&quot;1623979500&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7Xw68Ow8vZian4lanQFAu09f4JOZlXbC85jsByb8V6StkOpibAdgPamPWoPPY3G7S3nic50QvxxuGNrg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;干掉 Wordpress！这个开源建站神器有点吊！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501105&amp;amp;idx=1&amp;amp;sn=caf01186b6d2e4a38e940ce07d822238&amp;amp;chksm=c1ca3301f6bdba17ba7127da24e28963ae40f944e587f14b57405e2a9ee9d8cdbcb835c880c8#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501105&amp;amp;idx=1&amp;amp;sn=caf01186b6d2e4a38e940ce07d822238&amp;amp;chksm=c1ca3301f6bdba17ba7127da24e28963ae40f944e587f14b57405e2a9ee9d8cdbcb835c880c8&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;干掉 Wordpress！这个开源建站神器有点吊！&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;2021-06-18&lt;/p&gt;&lt;/section&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.42578125&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7Xw68Ow8vZian4lanQFAu09f4JOZlXbC85jsByb8V6StkOpibAdgPamPWoPPY3G7S3nic50QvxxuGNrg/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-normal&quot; data-recomment-template-id=&quot;2&quot; data-recommend-article-id=&quot;2247501098_2&quot; data-recommend-article-time=&quot;1623461160&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VzIP6xibP6U8htKa7YEad1iaTE02ZbsOfvDX1D8LoTiaNsMVgdjFOdm5LahpnNXFe3ibSp8S4FJ39KkA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;从朋友那里搞了 20 个实战项目，速领！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4#rd&quot;&gt;&lt;section data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;从朋友那里搞了 20 个实战项目，速领！&lt;/a&gt;&lt;/p&gt;&lt;p data-recommend-date=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;2021-06-12&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkyNTI5NTQ1NQ==&amp;amp;mid=2247501098&amp;amp;idx=2&amp;amp;sn=520b81839bb5b4f1c990278e03e1991d&amp;amp;chksm=c1ca331af6bdba0c0e3435da519fadda3be81744168e30c56a823180bd458a5ec8a6b499f2a4&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-type=&quot;jpeg&quot; data-w=&quot;200&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Baq5lYpIw7VzIP6xibP6U8htKa7YEad1iaTE02ZbsOfvDX1D8LoTiaNsMVgdjFOdm5LahpnNXFe3ibSp8S4FJ39KkA/640?wx_fmt=jpeg&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4703703703703704&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Baq5lYpIw7X6YPYGQITyP8Zdk96ab7CX0Ind5E05VokoepTP9Adic0xRwiaQrAvfTeC7iafngRibhBShpVqibqNcCCA/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如有收获，点个在看，诚挚感谢&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100018364&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;19&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fEsWkVrSk54JM0xl7WLNGnqqwbcXQBWIOCMuOgPHRoOjMamXzrCqMS2xgOo5ibic9icPk7u3zsVgic3s1ZUYJ4xHXg/640?wx_fmt=png&amp;amp;wxfrom=5&amp;amp;wx_lazy=1&amp;amp;wx_co=1&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>