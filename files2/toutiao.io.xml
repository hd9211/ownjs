<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>256d082ca913ddc6ec0e51227cb0660a</guid>
<title>选对圈子，一切都对了！</title>
<link>https://toutiao.io/k/y0e6fbd</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;开发者头条&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;kaifazhetoutiao&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;程序员分享平台 | 官方应用下载地址：http://toutiao.io/download&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>115aedf37e7038ea70c2acea5535576c</guid>
<title>Go 1.18 新特性多模块工作区教程-让多模块开发变得简单</title>
<link>https://toutiao.io/k/jl3frtf</link>
<content:encoded>&lt;div&gt;&lt;body id=&quot;readabilityBody&quot;&gt;
  &lt;noscript&gt;您需要允许该网站执行 JavaScript&lt;/noscript&gt;
  
  
  
  
  
&lt;/body&gt;
&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d7a58970b536ca688b5fc9267208974e</guid>
<title>如果你是一个Golang面试官，你会问哪些问题？</title>
<link>https://toutiao.io/k/yvw61mc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小土这两天本来想在公司发个面经，于是偶然搜到了这篇 &lt;span&gt;如果你是一个Golang面试官，你会问哪些问题？&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;,文章下面也有很多大佬的优秀回答，感兴趣的同学可以查看原文了解更多内容。下面小土主要收集了两个回答。另外小土在语雀也搜集了不少Gopher面经，&lt;span&gt;面试题库收集&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;回答 1:&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;作者：混血王子
链接：https://www.zhihu.com/question/67846139/answer/2105444792&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;没有假如，我就是一个Golang面试官，来自百度。同时我到百度之前也面过头条，腾讯，小米，高德的golang，基本都过了。我回答应该还是比较有说服力。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事实上，golang的问题只占我面试问题的20%左右。问东西的顺序不一定是下面的顺序，有的时候我会根据简历选择二分法难度来问，直接问一个难度适中的问题。说上来就继续二分法筛。下面是我问过的问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1，make和new差别，引用类型的意义&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2，逃逸分析&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3，channel的实现&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4，gmp与gc，重点问题（网络io等待队列，读写屏障）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5，map的实现，重点问题（sync.map的实现，map实现随机的方法）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;期间会根据实际情况，从这几个题发散问一些细节，但是难度不会太难了。因为我面的是p6级别的，问源码有点欺负人了。另外会问一个开发性问题，你写go遇到的坑点。从这里也可以发散问一些，但是不会问太多了。这几个问题在10分钟之内肯定要问完的。我的面试范围和我之前遇到过的面试基本都在&lt;span&gt;https://draveness.me/golang/&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt; 内，这个教程还是非常不错的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些问题不一定都要答上来，我是综合考察的，我写这几个题目也不是让大家去背这几个题的，只是想告诉大家面试的难度一般如何，顺便说几个经典题目。另外我主要关注的问题其实主要是mysql，redis，mq，算法，分布式。有人看的话，我就补充一下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;9.7 补充mysql&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先声明一下，我说的面试题都是个人向的，其实大家要面哪家公司的时候，搜那家公司的面试题用处其实不大，因为面试官并没有说题库，或者统一标准的说法。如果我去了其他家公司当面试官我一样也会这么问（注意是提问方式和难度，题目我会换的）。而你碰到百度其他面试官，也很可能不会按我这么问。另外，因为我面的校招到10年的都有，所以具体问法也会灵活调整。说到校招，这次大校招我也被安排当面试官了，校招的朋友也可以关注一下，如果能答出来，那就惊喜级别&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;补充一下我对mysql的考察方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;1，八股，为什么用b+树不用b树&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以第一题为分界线，答出来了问下面的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2，说说对mvcc的理解&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3，幻读是怎么解决的&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4，redo，undo的作用和实现&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;5，事务的实现&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;答不出第一题就问，下面就是纯八股了&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;2，索引怎么建&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;3，联合索引最左前缀&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;4，聚簇索引与回表&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果觉得前半部分回答得不行，就会转问后半部分的简单题。和上面一样，我问的问题和我遇见过的问题，基本都在《&lt;em&gt;MySQL技术内幕&lt;/em&gt;:InnoDB存储引擎》姜承尧老师的书里面。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;9.8 补充redis&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;redis的东西虽然不多，但是也是必问的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1，底层数据结构实现，重点问题如：压缩列表&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2，aof与rdb，重点问题如：aof重写机制&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3，为什么用跳表&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4，分布式锁与redlock&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5，三种分布式的结构&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;6，大KEY&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基本上说明白一半就行了，和上面一样，我问的问题和我遇见过的问题，大部分都在《Redis设计与实现》里面。因为redis的问题都不算难，如果全答上来了，我可能会问一个：在扩容rehash的时候scan扫集合，会不会扫到重复的数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;9.9 补充mq+es+分布式&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那就补一下剩下的常问问题吧，mq主要是kafka。下面基本上工作3年之内不怎么问，3年以上的说上1/3到1/2就通过。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1，kafka的零拷贝和顺序io 零拷贝最好说说细节，其实就是用户空间和内核空间mmap&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2，kafka的分片，分片的读一致性（水位和活跃组？忘了叫什么了）和写一致性怎么保证&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3，es的倒排索引，和分片的查询召回&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4，分布式锁，redis redlock etcd&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5，分布式事务 2pc 3pc tcc&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;6，分布式共识协议 raft和paxos&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;7，分布式数据库 CAP BASE的概念 etcd tidb的了解&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;额外的问题，只有简历写了我才会问&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;1，k8s的应用和架构（k8s其实我也没深入研究，随便）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;2，监控prometheus，比如里面时序数据库TSDB&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;3，微服务架构的内容，比如服务发现和链路追踪的工具&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;4，校招的话问问tcp&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;5，其他我感兴趣的东西&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;6，算法题必问，一般先选一个中等偏难的，难度参见周赛第三题。要是很顺畅就加一个第四题难度（困难），做不出来就换一个第二题难度（中等偏简单）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;7，架构设计，因为我只是一面，这种问题一般留给二面问。不过我给的建议是，mysql分表，redis缓存，kafka削峰这三板斧&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写在最后，其实我的标准只有一个，我的所有提问也是围绕这一标准来的，就是让我感受到你对技术的热情，对技术路线有清晰规划，并且正在进行系统性地有条理的学习持续一年以上，比如看书，事实上我也是这么要求自己的。我相信满足了这个条件，你面其他公司也很容易。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;回答2:&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;作者：HelloKaton
链接：https://www.zhihu.com/question/67846139/answer/257359743&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这篇文章翻译自一位外国友人的关于面试后端程序员的文章，我比较喜爱这篇文章。一是因为它极大的拓宽了我的视角，另一方面是其中的一些问题非常具有启发性。不仅对于面试者，对于面试官来说也是个不错的参考。于是迫不及待的翻译了一下，给各位看官做个参考。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原文参见 &lt;span&gt;@arialdomartini&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;的: &lt;span&gt;Back-End Developer Interview Questions&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以下是原文翻译。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;通用问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;开放式问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设计模式相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;代码设计相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;语言相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Web相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据库相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;非关系型数据库相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;代码版本管理相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;并发问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分布式系统相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;软件生命周期和团队管理相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;逻辑和算法相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;软件架构相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;面向服务架构(SOA)和微服务(Microservice)相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;安全相关问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;比尔盖茨式问题&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;代码示例问题&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;通用问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;语言设计中空引用(&lt;span&gt;null reference&lt;/span&gt;&lt;sup&gt;[6]&lt;/sup&gt;)的存在有什么问题？假设你想要将空引用的概念从你的首选语言中移除，可能导致什么结果？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么函数式编程重要？什么时候适用函数式语言？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设计(design)、架构(architecture)、功能(functionality)和美学(aesthetic)之间有什么区别？讨论一下。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;微软、谷歌、欧朋(opera)和火狐这类公司是如何从他们的浏览器中获利的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么打开TCP套接字有很大的开销？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;封装的重要性体现在哪儿？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是实时系统？它与普通系统有什么区别？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;实时语言(real-time language)和堆内存分配(heap memory allocation)之间的关系是什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不变性(Immutability)是指: (变量的)值只能在创建的时候被设置一次，之后就不能被改变。为什么不变性对写更加安全的代码有帮助？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可变值(mutable values)和不可变值(immutable values)有哪些优缺点？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是O/R阻抗失衡(Object-Relational impedence mismatch)？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果你需要使用缓存，你使用哪些原则来确定缓存的大小？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;TCP和HTTP有什么区别？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在客户端渲染(client-side rendering)和服务端渲染(server-side rendering)之间，你是如何权衡的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何在一个不可靠的协议之上构建一个可靠的通信协议？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;开放式问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;为什么人们会抵制变化？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何向你的祖母解释什么是线程？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;作为一个软件工程师，你想要既要有创新力，又要产出具有可预测性。采用什么策略才能使这两个目标可以共存呢？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是好的代码？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;解释什么是流(Streaming)和如何实现一个流？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;假设你的公司给你一周的时间，用来改善你和同事的生活: 你将如何使用这一周？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;本周你学了什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;所有的设计中都会有美学元素(aesthetic element)的存在。问题是，你认为美学元素是你的朋友还是敌人？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;列出最近你读过的5本书。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;假设目前有个大型公司（非常有钱），他们的开发流程是瀑布式流程（Waterfall），如果需要你在他们公司引入持续交付（&lt;span&gt;Continue Devivery&lt;/span&gt;&lt;sup&gt;[7]&lt;/sup&gt;），你会怎么做？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;我们来谈谈&quot;&lt;em&gt;重复造轮子&lt;/em&gt;&quot;,&quot;&lt;em&gt;非我发明症&lt;/em&gt;&quot;, &quot;&lt;em&gt;吃自己做出来的狗粮&lt;/em&gt;&quot;的这些做法吧。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(注: 重复造轮子: Reinventing the wheel; 非我发明症:Not Invented Here Syndrome; 吃自己做出来的狗粮: Eating Your Own Dog Food)&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在你当前的工作流中，什么事情是你计划下一步需要自动化的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么写软件是困难的？是什么使软件的维护变得困难？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你更喜欢在全新项目（Green Field Project）上工作还是在已有项目(Brown Field Project)基础上工作？为什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;当你在浏览器地址栏输入google.com回车之后都发生了什么?&lt;/span&gt;&lt;sup&gt;[8]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当操作系统CPU处于空闲的时候，它可能在处理哪些事情？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何向一个5岁的孩子解释什么是Unicode/数据库事务？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何维护单体架构(monolithic architecture)？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一个&quot;专业的开发者&quot;意味着什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;软件开发是艺术、是技艺还是工程？你的观点是什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&quot;喜欢这个的人也喜欢...&quot;，如何在一个电子商务商店里实现这种功能？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么在创新上，企业会比创业公司慢些？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么说，你不应该尝试应用自己发明或者设计的密码学？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;设计模式相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;请用一个例子表明，全局对象是邪恶的存在。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;假设你工作的系统不支持事务性，你会如何从头开始实现它？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是好莱坞原则（Hollywood Principles）？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;关于迪米特法则(最少知识原则): 写一段代码违反它, 然后修复它。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（注: 迪米特法则：the Law of Demeter, 最少知识原则：the Principle of Least Knowledge）&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Active-Record模式有什么限制和缺陷？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Data-Mapper模式和Active-Record模式有什么区别？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;空对象模式(Null Object Pattern)的目的是什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么组合(Composition)比继承(Inheritance)更好？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是反腐败层(Anti-corruption Layer)?&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你可以写一个线程安全的单例(Singleton)类吗？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据抽象(Data Abstraction)能力是指能改变实现而不影响客户端的这种能力。请构造一个一个例子，违反这个特性，并且尝试修复它。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你是如何处理依赖关系地狱(Dependency Hell)的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么说goto语句是恶魔般的存在？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;健壮性是进行软件设计时的一个通用原则，它建议 &lt;em&gt;“发送时要保守，接收时要开放”&lt;/em&gt;。这也经常被写成，“做一个有耐心的读者，做一个谨慎的作者”。你能解释一些这背后的逻辑吗？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;译者注：&quot;发送时要保守，接收时要开发&quot;的原文是：&quot;Be conservative in what you send, be liberal in what you accept&quot;，有点类似于“严于律己，宽于待人”的意味。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;代码设计相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;你在进行软件设计时会考虑软件测试吗？软件测试是如何影响软件设计的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;内聚和耦合的区别是什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;重构在哪些场景下有用？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;代码中的注释有用吗？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;设计和架构有什么区别？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么在测试驱动开发(TDD)中是先写测试，再写代码？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;C++支持多继承，Java允许类实现多个接口。这些特性对正交性有什么影响？使用多继承和使用多接口有区别吗？[这个问题来自Andrew .Hunt 和 David Thomas写的《程序员修炼之道》]&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在存储过程（Stored Procedures）中写业务逻辑有什么优缺点？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;语言相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;告诉我你的首选语言的三个最坏的缺陷。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么现在函数式编程这么越来越受关注？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;闭包是什么？它有什么用途？闭包和类有什么共同点？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;泛型有什么用途？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是高阶函数？有什么用途？用你的首选语言写个例子出来。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;讨论一下，如何写一个循环，然后把它转换成递归函数，要避免易变性。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;有些语言将函数视为第一公民，这是什么意思？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;用一个例子说明匿名函数是有用的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是动态方法调度(Dynamic Method Dispatch)？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;名字空间(Namespace)有什么用？有什么可以替代它的吗？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;谈谈Java和C#之间的互操作性(Interoperability) (任选其他两门语言都行)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么很多软件工程师不喜欢Java？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你认为好的语言好在哪里？差的语言差在哪里？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;写两个函数，一个是&quot;引用透明的(Referentially Transparent)&quot;，另一个是&quot;引用不透明的(Referentially Opaque)&quot;。讨论之。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是栈？什么是堆？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么一个语言中，&quot;函数是第一公民&quot;是很重要的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;模式匹配(Pattern Matching)和Switch语句(Switch clauses)的区别在哪儿？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么有些语言设计上没有异常机制？这有什么优缺点？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果&lt;code&gt;Cat&lt;/code&gt;是一个&lt;code&gt;Animal&lt;/code&gt;, 那么&lt;code&gt;TaskCare&amp;lt;Cat&amp;gt;&lt;/code&gt;是一个&lt;code&gt;TakeCare&amp;lt;Animal&amp;gt;&lt;/code&gt;吗？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;web相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;为什么&quot;第一方cookie(first-party cookie)&quot;和&quot;第三方cookie(third-party cookie)&quot;被如此不同的对待？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;数据库相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;如果要你将一个项目从MySQL迁移至PostgreSQL中，你会如何迁移？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么&lt;code&gt;SELECT * FROM table WHERE field = null&lt;/code&gt;不能匹配空的字段？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是ACID(原子性，一致性，隔离性，持久性)原则？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你是如何进行数据库模式(Database schema)迁移的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;延迟加载(lazy loading)是如何实现的？什么场景下有用？他有什么缺陷？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是N+1问题？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何找出应用中开销最大的查询？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;非关系型数据库相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;什么是最终一致性(Eventual Consistency)？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;关于CAP理论，举一些CP、AP、CA系统的例子。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;NoSQL是如何解决可伸缩性的挑战的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么情况下你会使用类似于MongoDB的文档数据库而不是关系型数据库（如Mysql或者PostgreSQL）？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;代码版本管理相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;为什么在Mercurial或者git中(管理)分支比SVN容易？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分散式版本控制系统（比如git），相比集中式版本控制系统（如svn）有哪些优势和劣势？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;(注:集中式版本控制系统: Centralized Version Control Systems；分散式版本控制系统: Distributed Version Control Systems)&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;能描述一下什么是GitHubFlow和GitFlow工作流吗？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是rebase？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么合并操作(merge)在Mercurial和git中比在SVN和CVS中容易？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;并发问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;为什么我们需要并发呢？解释一下。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么测试多线程/并发代码这么困难？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是竞争条件（Race Condition）？用任何一个语言写一个例子。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是死锁？用代码解释一下。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是饿死？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是Wait-Free算法？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;分布式系统相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;怎么测试一个分布式系统？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么场景下你会在两个系统中采用异步通信机制？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;远程过程调用的通用缺点是什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果你为了可扩展性和鲁棒性而构建一个分布式的系统，分别在封闭安全的网络环境情况下，和地理上的位置不同但是网络环境不是封闭和安全的情况下，你会考虑什么不同的事情？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在Web应用中如何管理容错性？在桌面端呢？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在分布式系统中，如何处理故障？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;让我们来谈谈网络分裂(network partitions)后有的几种恢复的手段吧。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你认为分布式计算中有哪些谬论？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你在什么时候会使用Request/Response模式，什么时候使用Publish/Subscribe模式？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;软件生命周期和团队管理相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;什么是敏捷（Agility）？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你是如何处理遗留代码（Legacy Code）的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;假设我是你们公司的CEO，请向我解释什么是看板，并且说服我在它上面投资。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;敏捷（Agility）和瀑布（Waterfall）之间的最大区别是什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;作为团队管理者，你对会议太多这个问题是如何处理的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你会如何处理延期很长时间了的项目？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&quot;&lt;em&gt;个体与交互重于过程和工具&lt;/em&gt;&quot;和&quot;&lt;em&gt;客户协作重于合同谈判&lt;/em&gt;&quot;占了敏捷宣言（Agile Manifesto）的一半，谈论一下这两个观念。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果你是你们公司的CTO，你会采取什么样的决策？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你觉得项目经理有用吗？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果要你组织一个弹性工作制的开发团队（即没有强制工作时间的要求），并且假期制度是&quot;按需休假&quot;，你会如何做？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你会如何管理一个人员流动非常高的团队？如何在不加薪的条件下说服团队成员不要离开？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;除了代码之外，你最关注你的同事的哪3项素质？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;关于代码，你最希望非技术人员能知道的的三件事是什么？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;逻辑和算法相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;只用LIFO栈如何构造一个FIFO队列？只用FIFO队列如何构造一个LIFO栈？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;写一段有栈溢出的代码。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;写一个尾递归版本的阶乘函数。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用任何一个语言，写一个REPL，功能是echo你输入的字符串。然后将它演化成一个逆波兰表达式的计算器。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果需要你设计一个文件系统磁盘碎片整理程序，你会如何设计？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;写一个生成随机迷宫的程序。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;写一段有内存泄漏的示例代码。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;随机生成一个的数字序列，里面每个数字都不同。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;写一个简单的垃圾回收系统。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用任何一门语言，写一个基本的消息代理。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;写一个基础的web服务器，然后画一张线路图，展示你将来还想要实现的功能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何对一个10GB的文件进行排序？如果是10TB的数据，你会采用什么方法？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;请实现&lt;code&gt;rnd()&lt;/code&gt;函数&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;软件架构相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;什么情况下缓存是没用的，甚至是危险的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么事件驱动的架构能提高可扩展性(scalability)？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么样的代码是可读性强的代码？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;紧急设计(Emergent Design)和演化架构(Evolutionary Architecture)之间的区别是什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;横向扩展(scale out) vs 纵向扩展(scale up): 有什么区别？分别在什么场景下使用？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分布式系统中如何处理&quot;故障切换(failover)&quot;和&quot;用户会话(user session)&quot;？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是CQRS(Command Query Responsibility Segregation)?他和最早的Command-Query Separation原则有什么区别？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么是三层架构？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何设计一个可扩展性高的系统？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;处理C10k问题的策略有哪些？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果让你来设计一个去中心化的P2P系统，你会如何设计？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么CGI的扩展性不好？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在设计系统时，你如何防止供应商依赖(&lt;span&gt;Vendor Lock-in&lt;/span&gt;&lt;sup&gt;[9]&lt;/sup&gt;)？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在可扩展性上，发布/订阅(Publish-Subscribe)模式有什么缺点？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;80年代以后，CPU有哪些变化？这些变化，对编程产生了什么影响？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;性能生命周期(performace lifecycle)中，你认为哪个部分是需要考虑进去的？如何管理？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;除了恶意攻击造成的拒绝服务现象以外，哪些设计或者架构上的问题会导致拒绝服务？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;性能和可扩展性之间有什么关系？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;什么时候紧耦合是OK的？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一个系统要有什么特征才能适配云计算环境(Cloud Ready)？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Does unity of design imply an aristocracy of architects?&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;面向服务架构(SOA)和微服务(Microservice)相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;在SOA中，为什么长期存活的事务(Long-lived transation)不被看好，而Saga却被看好？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;SOA和MicroService之间有什么区别？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;我们来谈谈Web服务的版本管理、版本兼容性、重大变更管理这些事情吧.&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;在saga中事务和补偿操作(compensation operation)之间的区别是什么？在SOA中呢？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;微服务不能做得太&quot;微&quot;，你认为什么时候微服务太&quot;微&quot;了？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;MicroService架构的优劣是什么？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;安全相关问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;什么是双因素认证(Two Factor Authentication)？在一个已有的Web应用中，你如何实现这种机制？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;比尔盖茨式问题:&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;如果你把一面镜子放在扫描仪上，会发生什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;假设有一个和你完全一样的克隆人，而他是你的上司，你愿意和他工作吗？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;现在请你面试一下我。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;为什么Quora上的回答会比Yahoo Answer上的回答好？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对手是现代语言，你的任务是要为Cobol辩护，你会如何进行？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;10年后的你是什么样子？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;假设你是我老板，我被解雇了。你会如何通知我？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;我想要重构一个系统，而你想要从头重写。我们来争论一下该怎么弄吧。然后我们反转角色，再争论一下。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;老板要你对公司撒谎，你的反应是什么？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果你可以穿越到以前，你会给年轻时候的你什么建议？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;代码示例问题:&lt;/strong&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;function &lt;span&gt;hookupevents&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;var&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; &lt;span&gt;3&lt;/span&gt;; i++) {&lt;br/&gt;    document.getElementById(&lt;span&gt;&quot;button&quot;&lt;/span&gt; + i)&lt;br/&gt;      .addEventListener(&lt;span&gt;&quot;click&quot;&lt;/span&gt;, function() { &lt;br/&gt;        alert(i); &lt;br/&gt;      });&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;关于类型擦除(Type Erasure)，这段Java代码的输出是什么？为什么？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;ArrayList&amp;lt;Integer&amp;gt; li = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;Integer&amp;gt;();&lt;br/&gt;ArrayList&amp;lt;Float&amp;gt; lf = &lt;span&gt;new&lt;/span&gt; ArrayList&amp;lt;Float&amp;gt;();&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; (li.getClass() == lf.getClass()) &lt;span&gt;// evaluates to true&lt;/span&gt;&lt;br/&gt;  System.out.println(&lt;span&gt;&quot;Equal&quot;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Stack&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Object[] elements;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; size = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;int&lt;/span&gt; DEFAULT_INITIAL_CAPACITY = &lt;span&gt;16&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;Stack&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        elements = &lt;span&gt;new&lt;/span&gt; Object[DEFAULT_INITIAL_CAPACITY];&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;push&lt;/span&gt;&lt;span&gt;(Object e)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        ensureCapacity();&lt;br/&gt;        elements[size++] = e;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Object &lt;span&gt;pop&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (size == &lt;span&gt;0&lt;/span&gt;)&lt;br/&gt;            &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; EmptyStackException();&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; elements[--size];&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;/**&lt;br/&gt;     * Ensure space for at least one more element, roughly&lt;br/&gt;     * doubling the capacity each time the array needs to grow.&lt;br/&gt;     */&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;ensureCapacity&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (elements.length == size)&lt;br/&gt;            elements = Arrays.copyOf(elements, &lt;span&gt;2&lt;/span&gt; * size + &lt;span&gt;1&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;if&lt;/code&gt;语句，或者更加通用点，条件表达式通常是过程式编程/命令式编程的形式。你能去掉这段代码中的&lt;code&gt;switch&lt;/code&gt;语句，用面向对象的方式来修改这段代码吗？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;Formatter&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; Service service;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;Formatter&lt;/span&gt;&lt;span&gt;(Service service)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.service = service;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; String &lt;span&gt;doTheJob&lt;/span&gt;&lt;span&gt;(String theInput)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        String response = service.askForPermission();&lt;br/&gt;        &lt;span&gt;switch&lt;/span&gt; (response) {&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;FAIL&quot;&lt;/span&gt;:&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;error&quot;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;case&lt;/span&gt; &lt;span&gt;&quot;OK&quot;&lt;/span&gt;:&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; String.format(&lt;span&gt;&quot;%s%s&quot;&lt;/span&gt;, theInput, theInput);&lt;br/&gt;        &lt;span&gt;default&lt;/span&gt;:&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;TheService&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; FileHandler fileHandler;&lt;br/&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; FooRepository fooRepository;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;TheService&lt;/span&gt;&lt;span&gt;(FileHandler fileHandler, FooRepository fooRepository)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.fileHandler = fileHandler;&lt;br/&gt;        &lt;span&gt;this&lt;/span&gt;.fooRepository = fooRepository;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; String &lt;span&gt;Execute&lt;/span&gt;&lt;span&gt;(&lt;span&gt;final&lt;/span&gt; String file)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;final&lt;/span&gt; String rewrittenUrl = fileHandler.getXmlFileFromFileName(file);&lt;br/&gt;        &lt;span&gt;final&lt;/span&gt; String executionId = fileHandler.getExecutionIdFromFileName(file);&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; ((executionId == &lt;span&gt;&quot;&quot;&lt;/span&gt;) || (rewrittenUrl == &lt;span&gt;&quot;&quot;&lt;/span&gt;)) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        Foo knownFoo = fooRepository.getFooByXmlFileName(rewrittenUrl);&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (knownFoo == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;&quot;&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; knownFoo.DoThat(file);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt;(&lt;span/&gt;)&lt;br/&gt;&lt;/span&gt;{&lt;br/&gt;    HRESULT error = S_OK;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt;(SUCCEEDED(Operation1()))&lt;br/&gt;    {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt;(SUCCEEDED(Operation2()))&lt;br/&gt;        {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt;(SUCCEEDED(Operation3()))&lt;br/&gt;            {&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt;(SUCCEEDED(Operation4()))&lt;br/&gt;                {&lt;br/&gt;                }&lt;br/&gt;                &lt;span&gt;else&lt;/span&gt;&lt;br/&gt;                {&lt;br/&gt;                    error = OPERATION4FAILED;&lt;br/&gt;                }&lt;br/&gt;            }&lt;br/&gt;            &lt;span&gt;else&lt;/span&gt;&lt;br/&gt;            {&lt;br/&gt;                error = OPERATION3FAILED;&lt;br/&gt;            }&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;else&lt;/span&gt;&lt;br/&gt;        {&lt;br/&gt;            error = OPERATION2FAILED;&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;else&lt;/span&gt;&lt;br/&gt;    {&lt;br/&gt;        error = OPERATION1FAILED;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; error;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你是一个Golang面试官，你会问哪些问题？欢迎留言讨论。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;如果你是一个Golang面试官，你会问哪些问题？: &lt;span&gt;https://www.zhihu.com/question/67846139&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;面试题库收集: &lt;span&gt;https://www.yuque.com/go-interview/set/interview-index&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;https://draveness.me/golang/: &lt;span&gt;https://link.zhihu.com/?target=https%3A//draveness.me/golang/&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;@arialdomartini: &lt;span&gt;https://link.zhihu.com/?target=https%3A//github.com/arialdomartini&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;p&gt;Back-End Developer Interview Questions: &lt;span&gt;https://link.zhihu.com/?target=https%3A//github.com/arialdomartini/Back-End-Developer-Interview-Questions&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[6]&lt;/span&gt;&lt;p&gt;null reference: &lt;span&gt;https://link.zhihu.com/?target=http%3A//programmers.stackexchange.com/questions/12777/are-null-references-really-a-bad-thing&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[7]&lt;/span&gt;&lt;p&gt;Continue Devivery: &lt;span&gt;https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Continuous_delivery&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[8]&lt;/span&gt;&lt;p&gt;当你在浏览器地址栏输入google.com回车之后都发生了什么?: &lt;span&gt;https://link.zhihu.com/?target=https%3A//github.com/alex/what-happens-when&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[9]&lt;/span&gt;&lt;p&gt;Vendor Lock-in: &lt;span&gt;https://link.zhihu.com/?target=https%3A//sourcemaking.com/antipatterns/vendor-lock-in&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9a669979f0e8454a939c4ef26e0a21e5</guid>
<title>基于Seatunnel连通Hive数仓和ClickHouse的实战</title>
<link>https://toutiao.io/k/iv3p4fa</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;背景&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前公司的分析数据基本存储在 Hive 数仓中，使用 Presto 完成 OLAP 分析，但是随着业务实时性增强，对查询性能的要求不断升高，同时许多数据应用产生，比如对接 BI 进行分析等，Presto不能满足需求，在这个阶段我们引入了ClickHouse，用来建设性能更强悍，响应时间更短的数据分析平台，以满足实时性要求，但如何连通 Hive 数仓和ClickHouse呢？没错，当然是 Seatunnel 啦！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;01 环境准备&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;官方推荐的&lt;br/&gt;seatunnel1.5.7+spark2.4.8+scala2.11&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;全部解压安装到&lt;code&gt;/u/module&lt;/code&gt;下即可&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[hadoop@hadoop101 module]$ unzip /u/software/19.Seatunnel/seatunnel-1.5.7.zip -d /u/module/&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[hadoop@hadoop101 module]$ tar -zxvf /u/software/19.Seatunnel/spark-2.4.8-bin-hadoop2.7.tgz -C /u/module&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[hadoop@hadoop101 module]$ tar -zxvf /u/software/19.Seatunnel/scala-2.11.8.tgz -C /u/module&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将 hive-site.xml 复制到 spark2/conf 目录下，这里取的是从 hive 复制到 Hadoop 配置目录下的&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[hadoop@hadoop101 module]$ cp $HADOOP_CONF/hive-site.xml /u/module/spark-2.4.8-bin-hadoop2.7/conf&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意：如果你跟我一样，原来 Hive 默认使用Spark3，那么需要设置一个 Spark2 的环境变量&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[hadoop@hadoop101 module]$ sudo vim /etc/profile&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# SPARK_HOME&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; SPARK_HOME=/u/module/spark&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; PATH=&lt;span&gt;$PATH&lt;/span&gt;:&lt;span&gt;$SPARK_HOME&lt;/span&gt;/bin&lt;br/&gt;&lt;span&gt;# SPARK_END&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 多版本共存Spark，for waterdrop and Hive&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; SPARK2_HOME=/u/module/spark-2.4.8-bin-hadoop2.7&lt;br/&gt;&lt;br/&gt;&lt;span&gt;#Scala Env&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; SCALA_HOME=/u/module/scala-2.11.8/&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; PATH=&lt;span&gt;$PATH&lt;/span&gt;:&lt;span&gt;$SCALA_HOME&lt;/span&gt;/bin&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[hadoop@hadoop101 module]$ source /etc/profile&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建jobs目录存放执行conf文件&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[hadoop@hadoop101 module]$ mkdir /u/module/seatunnel-1.5.7/&lt;span&gt;jobs&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;02 数据准备&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;Hive：&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;drop table &lt;span&gt;if&lt;/span&gt; exists prod_info;&lt;br/&gt;create table prod_info&lt;br/&gt;(&lt;br/&gt;    prod_sn    string comment &lt;span&gt;&#x27;sn&#x27;&lt;/span&gt;,&lt;br/&gt;    create_time string comment &lt;span&gt;&#x27;创建时间&#x27;&lt;/span&gt;&lt;br/&gt;)COMMENT &lt;span&gt;&#x27;产品信息表&#x27;&lt;/span&gt;&lt;br/&gt;PARTITIONED BY (`dt` string)&lt;br/&gt;STORED AS PARQUET&lt;br/&gt;TBLPROPERTIES (&lt;span&gt;&quot;parquet.compression&quot;&lt;/span&gt; = &lt;span&gt;&quot;lzo&quot;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;插入数据：&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;insert into prod_info values (&lt;span&gt;&#x27;F0001&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;2022-01-18 00:00:00.0&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;2022-01-18&#x27;&lt;/span&gt;);&lt;br/&gt;insert into prod_info values (&lt;span&gt;&#x27;F00012&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;2022-01-19 00:00:00.0&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;2022-01-19&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;ClickHouse:&lt;/h5&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;drop table &lt;span&gt;if&lt;/span&gt; exists prod_info;&lt;br/&gt;create table prod_info&lt;br/&gt;(&lt;br/&gt;    prod_sn    String,&lt;br/&gt;    create_time DateTime&lt;br/&gt;)engine =MergeTree&lt;br/&gt;    partition by toYYYYMMDD(create_time)&lt;br/&gt; primary key (prod_sn)&lt;br/&gt;    ORDER BY (prod_sn)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;03 多表全量or增量数据导入CK&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用cat &amp;lt;&amp;lt;!EOF把变量传进去，把脚本生成在jobs文件夹中，然后再使用 seatunnel 的命令执行&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关键点：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;将输入参数封装成一个方法，方便一个脚本操作多个数仓表;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;加入CK远程执行命令，插入前清除分区，以免导入双倍数据;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;加入批量执行条件;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[hadoop@hadoop101 module]$ touch ~/bin/mytest.sh &amp;amp;&amp;amp; chmod u+x ~/bin/mytest.sh &amp;amp;&amp;amp; vim ~/bin/mytest.sh&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;这边 hive 中表压缩格式是 parquet+lzo ，读取出来没问题，插入时报错，我直接将之前搭建 Hadoop集群时$HADOOP_HOME/share/hadoop/common/hadoop-lzo-0.4.20.jar放到/u/module/spark-2.4.8-bin-hadoop2.7/jars（spark 目录下的 jars ）下，即可解决&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;若 hive 表中有做分区，则需指定 spark.sql.hive.manageFilesourcePartitions=false&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;#!/bin/bash&lt;br/&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 环境变量&lt;/span&gt;&lt;br/&gt;&lt;span&gt;unset&lt;/span&gt; SPARK_HOME&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; SPARK_HOME=&lt;span&gt;$SPARK2_HOME&lt;/span&gt;&lt;br/&gt;SEATUNNEL_HOME=/u/module/seatunnel-1.5.7&lt;br/&gt;CLICKHOUSE_CLIENT=/usr/bin/clickhouse-client&lt;br/&gt;&lt;span&gt;# 接收两个参数，第一个为要抽取的表，第二个为抽取时间&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 若输入的第一个值为first，不输入第二参数则直接退出脚本&lt;/span&gt;&lt;br/&gt;&lt;span&gt;if&lt;/span&gt; [[ &lt;span&gt;$1&lt;/span&gt; = first ]]; &lt;span&gt;then&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; [ -n &lt;span&gt;&quot;&lt;span&gt;$2&lt;/span&gt;&quot;&lt;/span&gt; ] ;&lt;span&gt;then&lt;/span&gt;&lt;br/&gt;   do_date=&lt;span&gt;$2&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;else&lt;/span&gt; &lt;br/&gt;   &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;请传入日期参数&quot;&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;exit&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;fi&lt;/span&gt; &lt;br/&gt;&lt;span&gt;# 若输入的第一个值为all，不输入第二参数则取前一天&lt;/span&gt;&lt;br/&gt;&lt;span&gt;elif&lt;/span&gt; [[ &lt;span&gt;$1&lt;/span&gt; = all ]]; &lt;span&gt;then&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;# 判断非空，如果不传时间默认取前一天数据，传时间就取设定，主要是用于手动传参&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; [ -n &lt;span&gt;&quot;&lt;span&gt;$2&lt;/span&gt;&quot;&lt;/span&gt; ] ;&lt;span&gt;then&lt;/span&gt;&lt;br/&gt;    do_date=&lt;span&gt;$2&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;else&lt;/span&gt;&lt;br/&gt;    do_date=`date -d &lt;span&gt;&#x27;-1 day&#x27;&lt;/span&gt; +%F`&lt;br/&gt;  &lt;span&gt;fi&lt;/span&gt;&lt;br/&gt;&lt;span&gt;else&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; [ -n &lt;span&gt;&quot;&lt;span&gt;$2&lt;/span&gt;&quot;&lt;/span&gt; ] ;&lt;span&gt;then&lt;/span&gt;&lt;br/&gt;   do_date=&lt;span&gt;$2&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;else&lt;/span&gt; &lt;br/&gt;   &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;请传入日期参数&quot;&lt;/span&gt;&lt;br/&gt;   &lt;span&gt;exit&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;fi&lt;/span&gt; &lt;br/&gt;&lt;span&gt;fi&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&quot;日期：&lt;span&gt;$do_date&lt;/span&gt;&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import_conf&lt;/span&gt;(){&lt;br/&gt;  &lt;span&gt;# 打印数据传输脚本并赋值&lt;/span&gt;&lt;br/&gt;cat&amp;gt;&lt;span&gt;$SEATUNNEL_HOME&lt;/span&gt;/&lt;span&gt;jobs&lt;/span&gt;/hive2ck_test.conf&amp;lt;&amp;lt;!EOF&lt;br/&gt;spark {&lt;br/&gt;  spark.sql.catalogImplementation = &lt;span&gt;&quot;hive&quot;&lt;/span&gt;&lt;br/&gt;  spark.app.name = &lt;span&gt;&quot;hive2clickhouse&quot;&lt;/span&gt;&lt;br/&gt;  spark.executor.instances = 4&lt;br/&gt;  spark.executor.cores = 4&lt;br/&gt;  spark.executor.memory = &lt;span&gt;&quot;4g&quot;&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;# 此参数为调用Hive分区必带！&lt;/span&gt;&lt;br/&gt;  spark.sql.hive.manageFilesourcePartitions=&lt;span&gt;false&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;input {&lt;br/&gt;    hive {&lt;br/&gt;                pre_sql = &lt;span&gt;&quot;&lt;span&gt;$1&lt;/span&gt;&quot;&lt;/span&gt;&lt;br/&gt;                table_name = &lt;span&gt;&quot;&lt;span&gt;$2&lt;/span&gt;&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;filter {}&lt;br/&gt;&lt;br/&gt;output {&lt;br/&gt;    clickhouse {&lt;br/&gt;                host = &lt;span&gt;&quot;&lt;span&gt;$3&lt;/span&gt;&quot;&lt;/span&gt;&lt;br/&gt;                database = &lt;span&gt;&quot;&lt;span&gt;$4&lt;/span&gt;&quot;&lt;/span&gt;&lt;br/&gt;                table = &lt;span&gt;&quot;&lt;span&gt;$5&lt;/span&gt;&quot;&lt;/span&gt;&lt;br/&gt;                fields = &lt;span&gt;$6&lt;/span&gt;&lt;br/&gt;                username = &lt;span&gt;&quot;default&quot;&lt;/span&gt;&lt;br/&gt;                password = &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;!EOF&lt;br/&gt;&lt;span&gt;$SEATUNNEL_HOME&lt;/span&gt;/bin/start-seatunnel.sh  --config &lt;span&gt;$SEATUNNEL_HOME&lt;/span&gt;/&lt;span&gt;jobs&lt;/span&gt;/hive2ck_test.conf -e client -m &lt;span&gt;&#x27;local[4]&#x27;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;# 全量数据导入&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import_prod_info_first&lt;/span&gt;(){&lt;br/&gt;  &lt;span&gt;$CLICKHOUSE_CLIENT&lt;/span&gt; --host hadoop101 --database &lt;span&gt;test&lt;/span&gt; --query=&lt;span&gt;&quot;truncate table test.prod_info&quot;&lt;/span&gt;&lt;br/&gt;  import_conf &lt;span&gt;&quot;select prod_sn,substring(create_time,1,19) as create_time from default.prod_info&quot;&lt;/span&gt; &lt;span&gt;&quot;prod_info&quot;&lt;/span&gt; &lt;span&gt;&quot;hadoop101:8123&quot;&lt;/span&gt; &lt;span&gt;&quot;test&quot;&lt;/span&gt; &lt;span&gt;&quot;prod_info&quot;&lt;/span&gt; &lt;span&gt;&quot;[\&quot;prod_sn\&quot;,\&quot;create_time\&quot;]&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 增量数据导入&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import_prod_info&lt;/span&gt;(){&lt;br/&gt;  do_date_2=`&lt;span&gt;echo&lt;/span&gt; &lt;span&gt;$do_date&lt;/span&gt; |sed &lt;span&gt;&#x27;s/-//g&#x27;&lt;/span&gt;`&lt;br/&gt;  &lt;span&gt;# 为避免重复导入，导入前先清除分区，这是在建立表分区的前提下&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;$CLICKHOUSE_CLIENT&lt;/span&gt; --host hadoop101 --database &lt;span&gt;test&lt;/span&gt; --query=&lt;span&gt;&quot;alter table test.prod_info drop partition &#x27;&lt;span&gt;${do_date_2}&lt;/span&gt;&#x27;&quot;&lt;/span&gt;&lt;br/&gt;  import_conf &lt;span&gt;&quot;select prod_sn,substring(create_time,1,19) as create_time from default.prod_info where dt=&#x27;&lt;span&gt;${do_date}&lt;/span&gt;&#x27;&quot;&lt;/span&gt; &lt;span&gt;&quot;prod_info&quot;&lt;/span&gt; &lt;span&gt;&quot;hadoop101:8123&quot;&lt;/span&gt; &lt;span&gt;&quot;test&quot;&lt;/span&gt; &lt;span&gt;&quot;prod_info&quot;&lt;/span&gt; &lt;span&gt;&quot;[\&quot;prod_sn\&quot;,\&quot;create_time\&quot;]&quot;&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;case&lt;/span&gt; &lt;span&gt;$1&lt;/span&gt; &lt;span&gt;in&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&quot;prod_info_first&quot;&lt;/span&gt;){&lt;br/&gt;    import_prod_info_first&lt;br/&gt;};;&lt;br/&gt;&lt;span&gt;&quot;prod_info&quot;&lt;/span&gt;){&lt;br/&gt;    import_prod_info&lt;br/&gt;};;&lt;br/&gt;&lt;span&gt;&quot;first&quot;&lt;/span&gt;){&lt;br/&gt; import_prod_info_first&lt;br/&gt;};;&lt;br/&gt;&lt;span&gt;&quot;all&quot;&lt;/span&gt;){&lt;br/&gt; import_prod_info&lt;br/&gt;};;&lt;br/&gt; &lt;span&gt;&quot;tmp&quot;&lt;/span&gt;){&lt;br/&gt;  import_prod_info&lt;br/&gt;};;&lt;br/&gt;&lt;span&gt;esac&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;03.1首日全量导入&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行首日全量导入，后面的 2022-01-19 是为了配合数仓流程加入的&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[hadoop@hadoop101 bin]$ mytest.sh first 2022-01-19&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ClickHouse中查看是否导入：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2073170731707317&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UdK9ByfMT2M0u1iaoKd8LeP3sZwLYNAIqkEksSTGFSa4GPUk6U28FedycXbfqiaPQOSE0yp2glqq0Y7Ornsf7VUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;328&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看CK的当前分区:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;select * from system.parts p &lt;span&gt;where&lt;/span&gt; table = &lt;span&gt;&#x27;prod_info&#x27;&lt;/span&gt; order by partition desc ;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.14624505928853754&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UdK9ByfMT2M0u1iaoKd8LeP3sZwLYNAIq516OziacQE6afIshncGK6Z5YnqfsjqqfFWmKGZd0qCX1jFvffx1p9vA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;506&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可见数据导入无误～&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;03.2每日增量导入&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;hive中新增记录测试增量更新：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;hive&amp;gt; insert into prod_info values (&lt;span&gt;&#x27;F000123&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;2022-01-20 00:00:00.0&#x27;&lt;/span&gt;,&lt;span&gt;&#x27;2022-01-20&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;[hadoop@hadoop101 bin]$ mytest.sh all 2022-01-20&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.20785219399538107&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/UdK9ByfMT2M0u1iaoKd8LeP3sZwLYNAIqic2EIAKDnyry14tGTSDrPTnI2onc863cT9lf9icIUs9AMuSOXNPzSfbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;433&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可见增量更新脚本也无误！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;调试时可以修改 tmp 条件里的内容，然后使用调度工具如Dolphin Scheduler、Azkaban上监控多个脚本的分步执行情况，以便定位问题。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;04 总结&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文主要分享了一个基于 Seatunnel 的生产力脚本，介绍了如何连通 Hive 数仓与 ClickHouse ，将 ClickHouse 无缝加入离线数仓流程，并进行流程测试。实际生产使用时，数据传输速度飞快。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8a2765d4aa2d7523b902f7e3ead7bfc6</guid>
<title>Node.js 动态表格大文件下载实践</title>
<link>https://toutiao.io/k/i33za77</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
            &lt;section class=&quot;mp_profile_iframe_wrp&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxNzk1MjQ0Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/YBFV3Da0Nwvv72YkFO0qPibDKicOCsfltiaE9070DOu4iahXnicYwRIHcxe9VBicAy45MkPqy8nZzLTVibugOtV0ORFcg/0?wx_fmt=png&quot; data-nickname=&quot;程序员成长指北&quot; data-alias=&quot;coder_growth&quot; data-signature=&quot;专注 Node.js 技术栈分享，从 前端 到 Node.js 再到 后端数据库，祝您成为优秀的高级 Node.js 全栈工程师。一个有趣的且乐于分享的人。座右铭：今天未完成的，明天更不会完成。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大厂技术&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;高级前端&lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;Node进阶&lt;/span&gt;&lt;br/&gt;&lt;/h1&gt;&lt;p&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(136, 136, 136)&quot;&gt;点击上方 &lt;/span&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(0, 128, 255)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(0, 128, 255)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(0, 128, 255)&quot;&gt;程序员成长指北&lt;/span&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(136, 136, 136)&quot;&gt;，关注公众号&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;回复&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;，加入高级Node交流群&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;前言&lt;br/&gt;&lt;/h1&gt;&lt;p&gt;最近优化了几个新人写出的动态表格文件下载接口的性能瓶颈，感觉非常有必要总结一篇文章作为文档来抛砖引玉，以促进大家学习一起写出更专业的代码。&lt;/p&gt;&lt;h1&gt;HTTP 文件下载&lt;/h1&gt;&lt;p&gt;讲具体问题之前需要先了解一些 HTTP 基础，下面简单介绍一下用 Node.js&amp;amp;Koa 怎么实现文件下载。&lt;/p&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;p&gt;&lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fdatatracker.ietf.org%2Fdoc%2Fhtml%2Frfc2616%23section-19.5.1&amp;amp;title=rfc2616%2019.5.1%20Content-Disposition&quot; href=&quot;&quot;&gt;rfc2616 19.5.1 Content-Disposition&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fdatatracker.ietf.org%2Fdoc%2Fhtml%2Frfc1806&amp;amp;title=rfc1806&quot; href=&quot;&quot;&gt;rfc1806&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fnodejs.org%2Fdist%2Flatest-v16.x%2Fdocs%2Fapi%2Fstream.html&amp;amp;title=Nodejs%20Stream&quot; href=&quot;&quot;&gt;Node.js Stream&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;简单下载&lt;/h2&gt;&lt;p&gt;最简单的情况就是服务器上文件系统已经存在了某个文件，客户端请求下载直接把文件读了吐回去即可：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; Koa &lt;span&gt;from &lt;/span&gt;&lt;span&gt;&#x27;koa&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; Router &lt;span&gt;from &lt;/span&gt;&lt;span&gt;&#x27;koa-router&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; * &lt;span&gt;as&lt;/span&gt; fs &lt;span&gt;from &lt;/span&gt;&lt;span&gt;&#x27;fs/promises&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; app = &lt;span&gt;new&lt;/span&gt; Koa();&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; router = &lt;span&gt;new&lt;/span&gt; Router();&lt;br/&gt;&lt;br/&gt;router.get(&lt;span&gt;&#x27;/download/simple&#x27;&lt;/span&gt;, &lt;span&gt;async&lt;/span&gt; (ctx) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; file = &lt;span&gt;await&lt;/span&gt; fs.readFile(&lt;span&gt;`&lt;span&gt;${__dirname}&lt;/span&gt;/1.txt`&lt;/span&gt;, &lt;span&gt;&#x27;utf-8&#x27;&lt;/span&gt;);&lt;br/&gt;  ctx.set({&lt;br/&gt;    &lt;span&gt;&#x27;Content-Disposition&#x27;&lt;/span&gt;: &lt;span&gt;`attachment; filename=1.txt`&lt;/span&gt;,&lt;br/&gt;  });&lt;br/&gt;  ctx.body = file;&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;app.use(router.routes());&lt;br/&gt;app.listen(&lt;span&gt;80&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;设置 &lt;code&gt;Content-Disposition&lt;/code&gt; 头部为 &lt;code&gt;attachment&lt;/code&gt; 是关键，告诉浏览器应该下载这个文件。&lt;/p&gt;&lt;h2&gt;流式下载&lt;/h2&gt;&lt;p&gt;简单下载在碰到大文件的情景就不够用了，因为 Node 无法将大文件一次性读取到进程内存里。这时候用流来解决：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;router.get(&lt;span&gt;&#x27;/download/stream&#x27;&lt;/span&gt;, &lt;span&gt;async&lt;/span&gt; (ctx) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; file = fs.createReadStream(&lt;span&gt;`&lt;span&gt;${__dirname}&lt;/span&gt;/1.txt`&lt;/span&gt;);&lt;br/&gt;  ctx.set({&lt;br/&gt;    &lt;span&gt;&#x27;Content-Disposition&#x27;&lt;/span&gt;: &lt;span&gt;`attachment; filename=1.txt`&lt;/span&gt;,&lt;br/&gt;  });&lt;br/&gt;  ctx.body = file;&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;此例子不设置 &lt;code&gt;Content-Disposition&lt;/code&gt; 头部也是会下载的，因为 &lt;code&gt;Content-Type&lt;/code&gt; 被设置为了 &lt;code&gt;application/octet-stream&lt;/code&gt;，浏览器认为其是一个二进制流文件所以默认下载处理了。&lt;/p&gt;&lt;h2&gt;进度显示&lt;/h2&gt;&lt;p&gt;当下载的文件特别大时，上个例子 &lt;code&gt;Content-Length&lt;/code&gt; 正确设置时浏览器下载条里就能正常显示进度了，为了方便我们使用程序模拟一下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;router.get(&lt;span&gt;&#x27;/download/progress&#x27;&lt;/span&gt;, &lt;span&gt;async&lt;/span&gt; (ctx) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { enable } = ctx.query;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; buffer = &lt;span&gt;await&lt;/span&gt; fsp.readFile(&lt;span&gt;`&lt;span&gt;${__dirname}&lt;/span&gt;/1.txt`&lt;/span&gt;);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; stream = &lt;span&gt;new&lt;/span&gt; PassThrough();&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; l = buffer.length;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; count = &lt;span&gt;4&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; size = &lt;span&gt;Math&lt;/span&gt;.floor(l / count);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; writeQuarter = &lt;span&gt;(&lt;span&gt;i = &lt;span&gt;0&lt;/span&gt;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; start = i * size;&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; end = i === count - &lt;span&gt;1&lt;/span&gt; ? l : (i + &lt;span&gt;1&lt;/span&gt;) * size;&lt;br/&gt;    stream.write(buffer.slice(start, end));&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (end === l) {&lt;br/&gt;      stream.end();&lt;br/&gt;    } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;      &lt;span&gt;setTimeout&lt;/span&gt;(&lt;span&gt;() =&amp;gt;&lt;/span&gt; writeQuarter(i + &lt;span&gt;1&lt;/span&gt;), &lt;span&gt;3000&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;  };&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (!!enable) {&lt;br/&gt;    ctx.set({&lt;br/&gt;      &lt;span&gt;&#x27;Content-Length&#x27;&lt;/span&gt;: &lt;span&gt;`&lt;span&gt;${l}&lt;/span&gt;`&lt;/span&gt;,&lt;br/&gt;    });&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  ctx.set({&lt;br/&gt;    &lt;span&gt;&#x27;Content-Type&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;plain/txt&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&#x27;Content-Disposition&#x27;&lt;/span&gt;: &lt;span&gt;`attachment; filename=1.txt`&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;Connection&lt;/span&gt;: &lt;span&gt;&#x27;keep-alive&#x27;&lt;/span&gt;,&lt;br/&gt;  });&lt;br/&gt;  ctx.body = stream;&lt;br/&gt;  writeQuarter();&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里利用了 &lt;code&gt;PassThrough&lt;/code&gt; 流来替代 &lt;code&gt;fs.createReadStream&lt;/code&gt;，故 Koa 不再知道文件大小和类型，并将文件分为 4 份，每份间隔 3 秒发送来模拟大文件下载。&lt;/p&gt;&lt;p&gt;当参数 enable 为真时，设置了 &lt;code&gt;Content-Length&lt;/code&gt; 则会显示进度 (剩余时间），否则不显示：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6336633663366337&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCslHUM1k72kmnf9S3ZfUBjpJribib5oxZKrJlbnW9W6oiaaaaj694ZeibkoOdgTW4HpUpRa9ibmzKblX6g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;707&quot;/&gt;&lt;/p&gt;&lt;h2&gt;断点续传&lt;/h2&gt;&lt;p&gt;下载文件特别大时，常常也会因为网络不稳定导致下载中途断开而失败，这时候可以考虑支持断点续传：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;getStartPos&lt;/span&gt;(&lt;span&gt;range = &lt;span&gt;&#x27;&#x27;&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;var&lt;/span&gt; startPos = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (&lt;span&gt;typeof&lt;/span&gt; range === &lt;span&gt;&#x27;string&#x27;&lt;/span&gt;) {&lt;br/&gt;    &lt;span&gt;var&lt;/span&gt; matches = &lt;span&gt;/^bytes=([0-9]+)-$/&lt;/span&gt;.exec(range);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (matches) {&lt;br/&gt;      startPos = &lt;span&gt;Number&lt;/span&gt;(matches[&lt;span&gt;1&lt;/span&gt;]);&lt;br/&gt;    }&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; startPos;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;router.get(&lt;span&gt;&#x27;/download/partial&#x27;&lt;/span&gt;, &lt;span&gt;async&lt;/span&gt; (ctx) =&amp;gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; range = ctx.get(&lt;span&gt;&#x27;range&#x27;&lt;/span&gt;);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; start = getStartPos(range);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; stat = &lt;span&gt;await&lt;/span&gt; fsp.stat(&lt;span&gt;`&lt;span&gt;${__dirname}&lt;/span&gt;/1.txt`&lt;/span&gt;);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; stream = fs.createReadStream(&lt;span&gt;`&lt;span&gt;${__dirname}&lt;/span&gt;/1.txt`&lt;/span&gt;, {&lt;br/&gt;    start,&lt;br/&gt;    &lt;span&gt;highWaterMark&lt;/span&gt;: &lt;span&gt;Math&lt;/span&gt;.ceil((stat.size - start) / &lt;span&gt;4&lt;/span&gt;),&lt;br/&gt;  });&lt;br/&gt;&lt;br/&gt;  stream.on(&lt;span&gt;&#x27;data&#x27;&lt;/span&gt;, &lt;span&gt;(&lt;span&gt;chunk&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;`Readed &lt;span&gt;${chunk.length}&lt;/span&gt; bytes of data.`&lt;/span&gt;);&lt;br/&gt;    stream.pause();&lt;br/&gt;    &lt;span&gt;setTimeout&lt;/span&gt;(&lt;span&gt;() =&amp;gt;&lt;/span&gt; {&lt;br/&gt;      stream.resume();&lt;br/&gt;    }, &lt;span&gt;3000&lt;/span&gt;);&lt;br/&gt;  });&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(&lt;span&gt;`Start Pos: &lt;span&gt;${start}&lt;/span&gt;.`&lt;/span&gt;);&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (start === &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;    ctx.status = &lt;span&gt;200&lt;/span&gt;;&lt;br/&gt;    ctx.set({&lt;br/&gt;      &lt;span&gt;&#x27;Accept-Ranges&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;bytes&#x27;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&#x27;Content-Length&#x27;&lt;/span&gt;: &lt;span&gt;`&lt;span&gt;${stat.size}&lt;/span&gt;`&lt;/span&gt;,&lt;br/&gt;    });&lt;br/&gt;  } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;    ctx.status = &lt;span&gt;206&lt;/span&gt;;&lt;br/&gt;    ctx.set({&lt;br/&gt;      &lt;span&gt;&#x27;Content-Range&#x27;&lt;/span&gt;: &lt;span&gt;`bytes &lt;span&gt;${start}&lt;/span&gt;-&lt;span&gt;${stat.size - &lt;span&gt;1&lt;/span&gt;}&lt;/span&gt;/&lt;span&gt;${stat.size}&lt;/span&gt;`&lt;/span&gt;,&lt;br/&gt;    });&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  ctx.set({&lt;br/&gt;    &lt;span&gt;&#x27;Content-Type&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;application/octet-stream&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&#x27;Content-Disposition&#x27;&lt;/span&gt;: &lt;span&gt;`attachment; filename=1.txt`&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;Connection&lt;/span&gt;: &lt;span&gt;&#x27;keep-alive&#x27;&lt;/span&gt;,&lt;br/&gt;  });&lt;br/&gt;  ctx.body = stream;&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;让我们来试验一下（Chrome 默认下载工具不支持断点续传）：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;curl -v http://127.0.0.1/download/partial -o 1.txt&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;此时我们趁传输间隙，将服务进程停止，这时可以看到 &lt;code&gt;1.txt&lt;/code&gt; 文件仅仅只传了 18 bytes：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.43203125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCslHUM1k72kmnf9S3ZfUBjp4MfJicMMaBlh4DTGXfTvpicpOnu3B2yP7oKOJ2SDOM9J53zSr2Vb7BcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;我们将服务恢复，恢复下载：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;curl -v http://127.0.0.1/download/partial -o 1.txt -C -&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.56484375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xsw6Lt5pDCslHUM1k72kmnf9S3ZfUBjpQlA6iakCgcqA9lgt4Fzzia3GnUfRaWwtAnfqf6ErBMIHDbNHfJedSKGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;可以看到剩下的部分也分 4 次传完了。&lt;/p&gt;&lt;h1&gt;动态表格&lt;/h1&gt;&lt;p&gt;在了解完上述关于文件下载实现的基础后，我们来看一个实际问题：根据请求参数条件读取数据库的某张表的全部记录并导出为表格。&lt;/p&gt;&lt;p&gt;参考：&lt;/p&gt;&lt;p&gt;&lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fgithub.com%2Fexceljs%2Fexceljs%23streaming-io&amp;amp;title=exceljs&quot; href=&quot;&quot;&gt;exceljs&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;瓶颈&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;// Controller.js&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; sequelize = &lt;span&gt;new&lt;/span&gt; Sequelize(name, user, password, {&lt;br/&gt;  &lt;span&gt;dialect&lt;/span&gt;: &lt;span&gt;&#x27;mysql&#x27;&lt;/span&gt;,&lt;br/&gt;  host,&lt;br/&gt;  port,&lt;br/&gt;});&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; model = sequelize.import(&lt;span&gt;&#x27;/path/to/model&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; { rows } = &lt;span&gt;await&lt;/span&gt; model.findAndCountAll({&lt;br/&gt;  &lt;span&gt;where&lt;/span&gt;: conditions,&lt;br/&gt;  &lt;span&gt;attributes&lt;/span&gt;: [&lt;span&gt;&#x27;f_user_id&#x27;&lt;/span&gt;],&lt;br/&gt;  &lt;span&gt;group&lt;/span&gt;: &lt;span&gt;&#x27;f_user_id&#x27;&lt;/span&gt;,&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; list = &lt;span&gt;await&lt;/span&gt;&lt;span&gt;Promise&lt;/span&gt;.all(&lt;br/&gt;  rows.map(&lt;span&gt;(&lt;span&gt;item&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; { f_user_id } = item;&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; userRows = &lt;span&gt;await&lt;/span&gt; model.findAll({&lt;br/&gt;      &lt;span&gt;where&lt;/span&gt;: { ...conditions, f_user_id },&lt;br/&gt;      &lt;span&gt;// ordering, eager loading, ...&lt;/span&gt;&lt;br/&gt;    });&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// formating userRows -&amp;gt; userData&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; userData;&lt;br/&gt;  })&lt;br/&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; headers = [&lt;span&gt;&#x27;ID&#x27;&lt;/span&gt;, &lt;span&gt;/*...*/&lt;/span&gt;];&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; sheetData = [headers, ...list];&lt;br/&gt;&lt;br/&gt;ctx.attachment(&lt;span&gt;`&lt;span&gt;${sheetName}&lt;/span&gt;.xlsx`&lt;/span&gt;);&lt;br/&gt;ctx.body = &lt;span&gt;await&lt;/span&gt; exportXlsx(sheetName, sheetData);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;// xlsx&lt;/span&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; ExcelJS = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;exceljs&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; fs = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;fs&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;module&lt;/span&gt;.exports = {&lt;br/&gt;  &lt;span&gt;exportXlsx&lt;/span&gt;: &lt;span&gt;async&lt;/span&gt; (name = &lt;span&gt;&#x27;sheet&#x27;&lt;/span&gt;, data) =&amp;gt; {&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; tempFilePath = &lt;span&gt;`./xlsx/&lt;span&gt;${&lt;span&gt;Date&lt;/span&gt;.now()}&lt;/span&gt;.xlsx`&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; workbook = &lt;span&gt;new&lt;/span&gt; ExcelJS.stream.xlsx.WorkbookWriter({ &lt;br/&gt;      &lt;span&gt;filename&lt;/span&gt;: tempFilePath &lt;br/&gt;    }); &lt;span&gt;// 创建一个流式写入器&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; sheet = workbook.addWorksheet(&lt;span&gt;&#x27;My Sheet&#x27;&lt;/span&gt;); &lt;span&gt;// 添加工作表&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;const&lt;/span&gt; { length } = data;&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; (&lt;span&gt;let&lt;/span&gt; i = &lt;span&gt;0&lt;/span&gt;; i &amp;lt; length; i++) {&lt;br/&gt;      sheet.addRow(data[i]);&lt;br/&gt;    }&lt;br/&gt;    sheet.commit(); &lt;span&gt;// 提交工作表&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;await&lt;/span&gt; workbook.commit(); &lt;span&gt;// 交工作簿，即写入文件&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; fs.createReadStream(tempFilePath);&lt;br/&gt;  },&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;多数人业务初期做需求时，考虑到数据量还不是很多，排期紧任务重，都像上面这样实现：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;不考虑数据量，当数据库表记录数超过 2w 时，内存就已经承受不住导致 Node 进程退出了&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;没有考虑内存限制，找个成熟的 &lt;code&gt;exceljs&lt;/code&gt; 库，但却没有用其提供的流 API&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据查询逻辑实现完全不考虑性能，拿到 ORM 库就是调用查询，完全不考虑 SQL 查询并发数&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;优化&lt;/h2&gt;&lt;h3&gt;分段处理&lt;/h3&gt;&lt;p&gt;最简单的策略就是将几 w 条数据库数据按每组 1w 条分组，分批次处理，有很多优秀的开源库以供使用比如 &lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fwww.npmjs.com%2Fsearch%3Fq%3Dasync&amp;amp;title=async&quot; href=&quot;&quot;&gt;async&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;简单代码示意：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;let&lt;/span&gt; total = &lt;span&gt;await&lt;/span&gt; model.count(&lt;span&gt;/* ... */&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;let&lt;/span&gt; page = &lt;span&gt;0&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; tasks = [];&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; size = &lt;span&gt;10000&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;while&lt;/span&gt; (total &amp;gt; &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;  tasks.push(&lt;span&gt;() =&amp;gt;&lt;/span&gt; queryModel({&lt;br/&gt;    &lt;span&gt;limit&lt;/span&gt;: size,&lt;br/&gt;    &lt;span&gt;offset&lt;/span&gt;: size * page&lt;br/&gt;  }))&lt;br/&gt;  page++;&lt;br/&gt;  total -= size;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;await &lt;/span&gt;async.series(tasks)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;减少 SQL 查询数&lt;/h3&gt;&lt;p&gt;源码中出现先 &lt;code&gt;group by&lt;/code&gt; 查询出去重的 &lt;code&gt;f_user_id&lt;/code&gt; 后，再来并发查询某一用户的所有记录。&lt;/p&gt;&lt;p&gt;这里应该用 SQL 中的 &lt;code&gt;IN&lt;/code&gt; 先查完再匹配处理：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;model.findAll({&lt;br/&gt;  &lt;span&gt;where&lt;/span&gt;: {&lt;br/&gt;    ...conditions,&lt;br/&gt;    &lt;span&gt;f_user_id&lt;/span&gt;: rows.map(&lt;span&gt;&lt;span&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt;&lt;span&gt;`&lt;span&gt;${x.f_user_id}&lt;/span&gt;`&lt;/span&gt;)&lt;br/&gt;  }&lt;br/&gt;})&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;流处理&lt;/h3&gt;&lt;p&gt;在上面的 &lt;code&gt;xlsx.js&lt;/code&gt; 文件中，是先输出一个文件再使用 &lt;code&gt;fs.createReadStream&lt;/code&gt; 流输出&lt;/p&gt;&lt;p&gt;&lt;code&gt;exceljs&lt;/code&gt; 库提供了 &lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fgithub.com%2Fexceljs%2Fexceljs%23streaming-io&amp;amp;title=API&quot; href=&quot;&quot;&gt;API&lt;/a&gt; 来实现流写：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; workbook = &lt;span&gt;new&lt;/span&gt; Excel.stream.xlsx.WorkbookWriter(options);&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; sheet = workbook.addWorksheet(&lt;span&gt;&#x27;My Sheet&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;span&gt;// .,,&lt;/span&gt;&lt;br/&gt;ctx.body = workbook.stream;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;更多&lt;/h2&gt;&lt;p&gt;当然除了上述提到的优化手段，还有离线生成、缓存等等诸多优化手段可用，这里不再展开。&lt;/p&gt;&lt;h1&gt;总结&lt;/h1&gt;&lt;p&gt;文件导出是最常见的需求之一，把功能实现好是专业素质最好的体现。&lt;/p&gt;&lt;p&gt;此文篇幅有限，原理性的细节如 Exceljs 的依赖里对 xlsx 规范的 zip 流处理等等大家可以自行去了解一番。&lt;/p&gt;&lt;pre&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-darkmode-color-16057140139831=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(0,0,0)&quot; data-style=&quot;padding-right: 10px; padding-left: 10px; color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif; letter-spacing: 0px; text-align: left; white-space: normal; font-size: 16px; line-height: 1.6; word-break: break-word;&quot; data-darkmode-color-16072568501583=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(0, 0, 0)&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUxNzk1MjQ0Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/YBFV3Da0Nwvv72YkFO0qPibDKicOCsfltiaE9070DOu4iahXnicYwRIHcxe9VBicAy45MkPqy8nZzLTVibugOtV0ORFcg/0?wx_fmt=png&quot; data-nickname=&quot;程序员成长指北&quot; data-alias=&quot;coder_growth&quot; data-signature=&quot;专注 Node.js 技术栈分享，从 前端 到 Node.js 再到 后端数据库，祝您成为优秀的高级 Node.js 全栈工程师。一个有趣的且乐于分享的人。座右铭：今天未完成的，明天更不会完成。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section label=&quot;Copyright © 2016 playhudong All Rights Reserved.&quot; donone=&quot;shifuMouseDownPayStyle(&#x27;shifu_t_042&#x27;)&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;Node 社群&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;89226&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我组建了一个氛围特别好的 Node.js 社群，里面有很多 Node.js小伙伴，如果你对Node.js学习感兴趣的话（后续有计划也可以），我们可以一起进行Node.js相关的交流、学习、共建。下方加 考拉 好友回复「Node」即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YBFV3Da0NwsF7OKB4iaaXAzQPbNstk2LybA0Zz5I1hiaiazE9W7WH2Ojt2dibDODWMVUmHqgfXCefVwt7z5ibNMWLvg/0?wx_fmt=jpeg&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;578.2649006622516&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;700.2119205298013&quot; data-fileid=&quot;100016913&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.2093425605536332&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YBFV3Da0NwvFQgO67XibvUG5S2UMXwCghOuJvE8BFRzUXnCAfWXkU1qHld6Ly9xiarib3siaWicJWJ0U3lI8kSgD38w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-style=&quot;padding-top: 8px; padding-bottom: 8px; color: rgb(89, 89, 89); line-height: 26px;&quot; data-darkmode-color-16072568501583=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(89, 89, 89)&quot;&gt;&lt;span&gt;如果你觉得这篇内容对你有帮助，我想请你帮我2个小忙：&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16072568501583=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(89, 89, 89)&quot;&gt;1. 点个&lt;/span&gt;&lt;span&gt;「在看」&lt;/span&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16072568501583=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(89, 89, 89)&quot;&gt;，让更多人也能看到这篇文章&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16072568501583=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(89, 89, 89)&quot;&gt;2. 订阅官方博客 &lt;/span&gt;&lt;span&gt;www.inode.club &lt;/span&gt;&lt;span data-darkmode-color-16057140139831=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16057140139831=&quot;rgb(89, 89, 89)&quot; data-darkmode-color-16072568501583=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16072568501583=&quot;rgb(89, 89, 89)&quot;&gt;让我们一起成长&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;点赞和在看就是最大的支持&lt;/span&gt;&lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.006666666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/7QRTvkK2qC6D2OhibHUMz1XiaC7v0RcUA1thKEXck4AzcEnKnOXEHJibw1OEpzrL0n2O4FNrfgNaAZRcDyzDkKqiaw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; data-width=&quot;100%&quot;/&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>