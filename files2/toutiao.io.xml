<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>bbc0e6f39437c3937e721bf0a579ab81</guid>
<title>2021 年仅剩 2 个月啦！抓紧啦！</title>
<link>https://toutiao.io/k/f430jea</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;码农周刊是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;码农周刊是一份专为广大程序员、编程爱好者们打造的 IT 技术周刊。每周发送。&lt;br/&gt;2013 年 9 月 12 日创刊至今，已发送 300 多期，订阅用户超 20 万。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;专业、简单、有用&lt;/span&gt;&lt;span&gt;，是我们一直坚持的办刊宗旨。一路走来，我们见证了不少订阅用户从编程新手进阶成了高级程序员、架构师、CTO……&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2020 年 4 月，为了给用户提供更优质的服务，我们推出了「&lt;/span&gt;&lt;span&gt;码农周刊VIP会员&lt;/span&gt;&lt;span&gt;」服务。&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;你与 BAT 技术大牛，只差一份「码农周刊VIP会员」的距离！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;VIP会员特权&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. 52 期码农周刊VIP会员&lt;span&gt;专属邮件周报&lt;/span&gt;，让你及时掌握技术动向；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 只限VIP会员加入的&lt;span&gt;交流圈子&lt;/span&gt;，让你与技术大牛切磋学习；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3. VIP会员独享的&lt;span&gt;工作机会&lt;/span&gt;，为你介绍好公司的好机会；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4. 更多会员特权，持续更新……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何加入「码农周刊VIP会员」？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1. 微信扫描下方二维码，加入码农周刊VIP会员知识星球。&lt;/span&gt;&lt;strong&gt;&lt;span&gt;促销期间，一年仅需 108 元！平均一天花费不到 3 毛！&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;34&quot; data-cropselx2=&quot;356&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;425&quot; data-ratio=&quot;1.0857487922705313&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNav8Byw4xNoV6O2YGutfKmQLKuMZEIhBJF6MrQvoShfIAT6u3dXs6VZRzwSa2eT9jcekfaYuaOD6Hhw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;828&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 加入码农周刊VIP会员知识星球后，客服会联系您，请留意知识星球内的私信。&lt;br/&gt;3. 客服向您发送码农周刊VIP会员欢迎邮件，开启您的码农周刊VIP会员之旅。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;心动不如心动，赶快订阅吧！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>26d2baa6b48469ce4bb2c196632d3c4b</guid>
<title>Go 泛型系列：再简化，省略接口</title>
<link>https://toutiao.io/k/1yva3zl</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;article-entry&quot; itemprop=&quot;articleBody&quot;&gt;
      
      
      
      &lt;p&gt;这是Go泛型系列文章。&lt;/p&gt;
&lt;p&gt;其它Go泛型文章：&lt;/p&gt;

&lt;a id=&quot;more&quot;/&gt;
&lt;p&gt;如果你一直关注Go泛型的设计和实现，一定知道Go泛型代码实现是通过类型参数(type parameter)实现的，当运行泛型代码时，类型参数(type parameter)由类型参数（type argument）替代。(很遗憾parameter和argument都被翻译成了中文参数)&lt;/p&gt;
&lt;p&gt;类型参数(type parameter)也有类型，也就是描述这个参数类型行为的元数据，被成为约束(constraint)。最通用的约束就是内建的&lt;code&gt;any&lt;/code&gt;类型，它代表任意的类型：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; Print[T any](s []T) {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; _, v := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; s {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(v)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在Go泛型设计中， 约束是通过接口类型来实现的(&lt;code&gt;interface&lt;/code&gt;)。因为接口类型和约束的功能黑类似，就是限定type argument必须实现type parameter的约束(方法集)。当然，为了实现泛型的功能，除了方法集之外，Go还对用来当做约束的接口做了扩展，定义了类型集(&lt;code&gt;type set&lt;/code&gt;)的概念,比如下面是约束代表一个type argument可以是int、int8、int16、int32或int64的类型，是并(&lt;code&gt;union&lt;/code&gt;)的关系，所以使用&lt;code&gt;|&lt;/code&gt;符号。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Signed &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; | &lt;span class=&quot;typename&quot;&gt;int8&lt;/span&gt; | &lt;span class=&quot;typename&quot;&gt;int16&lt;/span&gt; | &lt;span class=&quot;typename&quot;&gt;int32&lt;/span&gt; | &lt;span class=&quot;typename&quot;&gt;int64&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;更进一步，Go还定义了&lt;code&gt;~&lt;/code&gt;的符号，代表只要底层类型都是某个特定类型就可以，所以上面的例子可以写的更通用一些:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Signed &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;~&lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;int8&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;int16&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;int32&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;int64&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这样&lt;code&gt;type MyInt int&lt;/code&gt;定义的&lt;code&gt;MyInt&lt;/code&gt;类型的实例也满足这个约束。&lt;/p&gt;
&lt;h2 id=&quot;constraints_包&quot;&gt;constraints 包&lt;/h2&gt;
&lt;p&gt;Go目前的实现新增加一个package,叫做&lt;code&gt;constraints&lt;/code&gt;,用来定义内建的约束,比如常见的:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;18&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;19&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;20&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;21&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;22&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;23&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Signed &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;~&lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;int8&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;int16&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;int32&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;int64&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Unsigned &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;~&lt;span class=&quot;typename&quot;&gt;uint&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;uint8&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;uint16&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;uint32&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;uint64&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;uintptr&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Integer &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;Signed | Unsigned&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Float &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;~&lt;span class=&quot;typename&quot;&gt;float32&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;float64&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Complex &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;~&lt;span class=&quot;typename&quot;&gt;complex64&lt;/span&gt; | ~&lt;span class=&quot;typename&quot;&gt;complex128&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Ordered &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;Integer | Float | ~&lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;甚至 Russ Cox、Ian Lance Taylor他们 提议和讨论为 slice、map、chan增加必要的约束，因为它们太常用了，标准库中都可以用到。(&lt;a href=&quot;https://github.com/golang/go/discussions/47203&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#47203&lt;/a&gt;、&lt;a href=&quot;https://github.com/golang/go/discussions/47319&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#47319&lt;/a&gt;、&lt;a href=&quot;https://github.com/golang/go/discussions/47330&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;47330#&lt;/a&gt;)。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Slice[Elem any] &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;~[]Elem&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Map[Key comparable, Val any] &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;~&lt;span class=&quot;keyword&quot;&gt;map&lt;/span&gt;[Key]Val&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Chan[Elem any] &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;~&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; Elem&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;Rob Pike 最近新提交了一个issue,建议在Go 1.18中不要对标准库增加泛型的支持&lt;a href=&quot;https://github.com/golang/go/issues/48918&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#48918&lt;/a&gt;。离Go 1.18发布就四个月了，很多实现还在摸索之中，这是大师给出的一个很中肯的建议，建议相关的哭的改动先增加到扩展库中(&lt;code&gt;x/exp&lt;/code&gt;),成熟后再加到标准库中，得到了很多Gopher的赞同。这是另外一个话题了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;包&lt;code&gt;constraints&lt;/code&gt;定义常用的约束可以很好的帮助我们开发，但是你有没有感觉有点异常？&lt;/p&gt;
&lt;h2 id=&quot;省略接口&quot;&gt;省略接口&lt;/h2&gt;
&lt;p&gt;是的，依照Go泛型规范，我们必须定义一个约束，然后才能在泛型类型和泛型方法中使用，和其它语言的泛型定义相比，你有没有觉得这一点有脱裤子放屁多此一举的味道？&lt;/p&gt;
&lt;p&gt;你看上面的Slice、Map、Chan的定义，是不是很冗余？为什么我们不能直接在泛型类型和方法的定义中直接使用&lt;code&gt;~[]Elem&lt;/code&gt;、&lt;code&gt;~map[Key]Val&lt;/code&gt;、&lt;code&gt;~chan Elem&lt;/code&gt;呢？&lt;/p&gt;
&lt;p&gt;因此fzipp提议，对于一个非接口的类型，默认等价为一个约束&lt;a href=&quot;https://github.com/golang/go/issues/48424&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;#48424&lt;/a&gt;，下面的公式很好的描述了这个功能：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;[T nonInterfaceType] ≡ [T &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;&lt;/span&gt;{~nonInterfaceType}]&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在泛型的定义中，非接口类型&lt;code&gt;nonInterfaceType&lt;/code&gt;等价于约束&lt;code&gt;interface{~nonInterfaceType}&lt;/code&gt;, 比如&lt;code&gt;~int&lt;/code&gt;等价于&lt;code&gt;interface{~int}&lt;/code&gt;。这样我们就可以省略&lt;code&gt;constraints&lt;/code&gt;包了。 这个提议北接收了，而且相关功能也加入到了go master分支中。&lt;/p&gt;
&lt;p&gt;mattn的Go泛型例子中，将一个整形数组转换成一个chan的&lt;a href=&quot;https://github.com/mattn/go-generics-example/blob/main/constraints-chan/main.go&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;例子&lt;/a&gt;(我稍微改动成更地道的Go的写法):&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;18&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;19&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;20&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;21&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;22&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;23&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;24&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;25&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;26&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;27&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;28&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;29&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;constraints&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;context&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; makeChan[T constraints.Chan[E], E any](ctx context.Context, arr []E) T {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;ch := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(T)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;(ch)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; _, v := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; arr {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-ctx.Done():&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ch &amp;lt;- v:&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}()&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ch&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; main() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; v := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; makeChan(context.Background(), []&lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;{1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt; 2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt; 3&lt;/span&gt;}) {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;fmt.Println(v)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里使用的是&lt;code&gt;constraints.Chan[E]&lt;/code&gt;代表一个泛型的channel，现在可以用更简便的方法了:&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;1&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;2&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;3&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;4&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;5&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;6&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;7&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;8&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;9&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;10&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;11&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;12&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;13&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;14&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;15&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;16&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;17&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;18&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;19&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;20&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;21&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;context&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;)&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; makeChan[T &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; E, E any](ctx context.Context, arr []E) T {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;ch := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(T)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;(ch)&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; _, v := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; arr {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; {&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-ctx.Done():&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ch &amp;lt;- v:&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;/&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}()&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ch&lt;/p&gt;&lt;p class=&quot;line&quot;&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;直接使用&lt;code&gt;chan E&lt;/code&gt;就可以了，方不方便？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chan E&lt;/code&gt; 隐式地代表&lt;code&gt;interface {chan E}&lt;/code&gt;,使用起来更简捷，不需要额外的接口(约束)定义。&lt;/p&gt;
&lt;p&gt;虽然Go 1.18的临近，感觉Go泛型的开发工作越来越重，甚至有一些还不明确的地方，祝福一下吧，希望它顺顺利利的推出。&lt;/p&gt;

      
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>35541b01f9c5a8fbd1528fd77ca9e1ef</guid>
<title>分位数算法总结</title>
<link>https://toutiao.io/k/w39cw6o</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section class=&quot;article-entry&quot;&gt;
    &lt;h1&gt;背景&lt;/h1&gt;
&lt;p&gt;首先说下，分位数(quantile)的概念，也就是我们监控中常见的p99， 这里举一个例子&lt;/p&gt;
&lt;p&gt;排序为rank=⌊ϕN⌋的元素，其中N为序列中元素的个数。考虑以下例子数据：&lt;/p&gt;
&lt;p&gt;11 , 21 , 24 , 61 , 81 , 39 , 89 , 56 , 12 , 51&lt;/p&gt;
&lt;p&gt;查询ϕ−quantile分位点所在数据前，需要对无序数据进行排序：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;input:  11   21   24   61   81   39   89   56   12   51&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;sort:   11   12   21   24   39   51   56   61   81   89&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;rank:   1    2    3    4    5    6    7    8    9    10&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;排序后，我想查这批数据的中位数 也就是：0.5−quantile 对应 rank=5，值为39&lt;/p&gt;
&lt;p&gt;现时场景下，我们一般用这个来统计比如一段时间的调用延迟的p99，而上述操作无论在时间还是空间上成本比较高，实际场景中肯定不是这么实现的。&lt;/p&gt;
&lt;p&gt;后文将阐述近年来实际工业中使用的各种分位数算法.&lt;/p&gt;
&lt;h1&gt;随机算法&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cs.umd.edu/~samir/498/vitter.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;论文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;实现案例:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dropwizard/metrics/blob/release/4.1.x/metrics-core/src/main/java/com/codahale/metrics/UniformReservoir.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dropwizard 的 metrics 库提供的随机算法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原理解释:&lt;/p&gt;
&lt;p&gt;维护一个固定长度的sample buffer数组，写sample时，随机确定是否插入到当前sample buffer 数组。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post_images/2020-08-03/dbd716f9faf745869bf7f73c4462fa1d.png&quot; alt=&quot;65d61ec2f71173d1b075f72d42019020.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当需要查询quantile时，则进行传统的排序，计算quantile&lt;/p&gt;
&lt;p&gt;时间复杂度&lt;/p&gt;

&lt;p&gt;空间占用&lt;/p&gt;
&lt;p&gt;固定大小，gc影响为0&lt;/p&gt;
&lt;p&gt;缺点： 数据失真严重&lt;/p&gt;
&lt;h1&gt;确定性算法&lt;/h1&gt;
&lt;h2&gt;静态分桶&lt;/h2&gt;
&lt;p&gt;实现案例&lt;br/&gt;
&lt;a href=&quot;https://github.com/HdrHistogram/HdrHistogram&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HdrHistogram&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;思路还是分桶，只不过不是一个数字一个桶，而是一个区间一个桶。&lt;/p&gt;
&lt;p&gt;该区间的范围可以是线性增长，可指数增长。&lt;/p&gt;
&lt;p&gt;通过牺牲一小部分精度，从而达到减小空间占用，并且数据大致准确的结果。&lt;/p&gt;
&lt;p&gt;下图中，采样范围在 [1-15]的有991个，在 [16-31]的有2个...&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post_images/2020-08-03/3b302243655e4a328d77f73d1b7d7859.png&quot; alt=&quot;cf27e5d45bd6340104f0ce89eff93225.png&quot;/&gt;&lt;/p&gt;

&lt;p&gt;空间占用&lt;br/&gt;
根据采样点的范围以及精度分桶，大小固定。gc影响为0&lt;/p&gt;
&lt;p&gt;缺点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;统计范围有限，需要预先确定&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;q-digest&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://graphics.stanford.edu/courses/cs468-05-winter/Papers/Information_Aggregation/Suri_sensys04.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;论文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;代码实现:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/addthis/stream-lib/blob/master/src/main/java/com/clearspring/analytics/stream/quantile/QDigest.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;addthis stream-lib的Qdigest实现&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本质上还是静态分桶，只是用完全二叉树存储数据。&lt;/p&gt;
&lt;p&gt;他的使用场景为为大数据分块计算 histogram 后，可对多个histogram 快速归并&lt;/p&gt;
&lt;p&gt;数据格式如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post_images/2020-08-03/b3e0edb8d5774c76ba5981225c7c987d.png&quot; alt=&quot;17222857e4caf351634916d183186cbd.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;上图中，这颗树总共能统计 1-8，8个数字。其中，有4个3，6个4，2个5-6, 2个 7-8 , 1个 1-8&lt;/p&gt;
&lt;p&gt;它将数据压缩的的目标就是将 σ 个采样点 变成 k 组数据输出。下面是将简述压缩树的过程&lt;/p&gt;
&lt;p&gt;是否可以进行压缩，以2个约束条件作为宗旨&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;count(v) &amp;lt;= n/k&lt;/li&gt;
&lt;li&gt;count(v) + count(vp1) + count(vp2) &amp;gt; n/k&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;vp1 vp2 就是下图框起来的3个点&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post_images/2020-08-03/114a15a1ea6f4cf4a6b5c7a83b4709ed.png&quot; alt=&quot;69864a4f9f52a7ca4710315432f1937e.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如何计算Quantile?&lt;/p&gt;
&lt;p&gt;用图1做例子&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post_images/2020-08-03/557a0813e24f4add97e4617e2aba8549.png&quot; alt=&quot;567edd2d71a366b59d500890a827f073.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;首先，我们把树上每个节点根据其数进行bfs，并进行编号，并根据其编号的值的个数做成一个二维组 &lt;code&gt;（编号，count）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可得到&lt;/p&gt;
&lt;p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{〈1,1〉,〈6,2〉,〈7,2〉,〈10,4〉,〈11,6〉}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;每个节点可表达的数据不同，比如 c可表达[5, 6], g 可表达[1,8]&lt;/p&gt;
&lt;p&gt;然后再根据每个二维组，可表达的最大范围进行正序排序&lt;/p&gt;
&lt;p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;{〈10,4〉 [3],〈11,6〉 [4],〈6,2〉 [5-6],〈7,2〉 [7-8], 〈1,1〉 [1-8]}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后就是 count x 请求的分位数，确定index的套路。&lt;/p&gt;
&lt;p&gt;对于 p50 = 0.5*15 = 7.5&lt;/p&gt;
&lt;p&gt;4 + 6 &amp;gt; 7.5&lt;/p&gt;
&lt;p&gt;所以p50 是 &amp;lt;11.6&amp;gt; 也就是4&lt;/p&gt;
&lt;p&gt;时间复杂度&lt;/p&gt;

&lt;p&gt;优点：树的特点决定了，对相同规格的树，merge操作成本很低，适合大数据map reduce 场景下的多颗树的合并作业&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要预分桶&lt;/li&gt;
&lt;li&gt;空间占用较多&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;动态分桶&lt;/h2&gt;
&lt;h3&gt;GK 算法&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cis.upenn.edu/~sanjeev/papers/sigmod01_quantiles.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;论文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;思路，还是分桶，只不过这个桶的大小是变化的，论文的话是根据一个区间段来划分的，这里简化下，本质还是根据现存的相邻sample之间的距离确定下个sample是不是放在一个新的独立的桶，具体如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post_images/2020-08-03/b1adf5e93ae6412099889b2b85ab4fad.png&quot; alt=&quot;228c5e892001b378e38922ae300ff07a.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不需要预设定统计范围&lt;/li&gt;
&lt;li&gt;根据sample的量的范围，大部分情况下较静态分桶节省空间&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;写成本比静态分桶高，比起静态分桶是一个确定的空间，他的空间会不定期扩大。&lt;/li&gt;
&lt;li&gt;精度不可控。
&lt;ol&gt;
&lt;li&gt;假设 sample数据很均匀的平铺在总的数据范围内，则会导致采样的节点数过多，甚至不如静态分桶。&lt;/li&gt;
&lt;li&gt;假设 部分节点的距离较大，则会导致精度降低。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;时间复杂度&lt;/p&gt;

&lt;p&gt;注： 实现时，需要维护一个buffer，当buffer满时需要做排序，所以写的成本按照最慢的来算，就是nlogn&lt;/p&gt;
&lt;p&gt;空间占用&lt;/p&gt;
&lt;p&gt;空间太可控，由于有merge成本，会有一定的gc成本&lt;/p&gt;
&lt;h3&gt;CKMS算法&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://dimacs.rutgers.edu/~graham/pubs/papers/bquant-icde.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;论文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GK算法的升级版本，&lt;a href=&quot;https://github.com/prometheus/client_java/blob/master/simpleclient/src/main/java/io/prometheus/client/CKMSQuantiles.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;prometheus 的summary&lt;/a&gt; 就用的该算法&lt;/p&gt;
&lt;p&gt;它引入了一个可配置的错误率的概念，从而解决了GK 精度不可控问题。&lt;/p&gt;
&lt;p&gt;GK 的桶的大小是根据 sample之间的距离delta 决定的，而 CKMS 在抉择是否开辟新桶，则是根据用户设置的&lt;strong&gt;错误率。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;delta = 错误率 x 总体sample个数，并以此决定分桶的大小。&lt;/p&gt;
&lt;p&gt;下图是一个数据合并的例子&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post_images/2020-08-03/33d036bdcfb44ed8a620fe2c742e09f1.png&quot; alt=&quot;667e99ae5f13a0a59fb967b13e30ae54.png&quot;/&gt;&lt;/p&gt;
&lt;p&gt;可见，当错误率为0.1时，当size &amp;gt; 10 时，会对range &amp;lt;=1 的进行合并&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不需要预设定统计范围&lt;/li&gt;
&lt;li&gt;根据sample的量的范围，大部分情况下较静态分桶节省空间&lt;/li&gt;
&lt;li&gt;空间上 完全靠用户参数 &lt;strong&gt;错误率&lt;/strong&gt; 决定，更可控。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;写成本比静态分桶高&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;时间复杂度&lt;/p&gt;

&lt;p&gt;注： 同上，需要维护一个buffer，写时，大部分情况下都是O(1), 触发merge 时由于需要做排序，所以O(nlogn)&lt;/p&gt;
&lt;p&gt;空间占用&lt;/p&gt;
&lt;p&gt;空间太可控，由于有merge，并且空间不可控，所以会有一定的gc成本&lt;/p&gt;
&lt;h2&gt;素描法 (sketch)&lt;/h2&gt;
&lt;h3&gt;t-digest&lt;/h3&gt;
&lt;p&gt;作者源码: &lt;a href=&quot;https://github.com/tdunning/t-digest&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/tdunning/t-digest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;t-digest算法，比动态分桶算法更准，但是资源又可控&lt;/p&gt;
&lt;p&gt;作者对他的简介&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mapr.com/blog/some-important-streaming-algorithms-you-should-know-about/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://mapr.com/blog/some-important-streaming-algorithms-you-should-know-about/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://arxiv.org/pdf/1902.04023&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;论文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单描述:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;本质上，还是动态分桶，但有以下几个特点
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;桶的大小在一开始就固定，ckms 并不固定，这样实现可以直接用数组，这对gc友好&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;桶划分函数也更适合于计算分位数场景，众所周知我们更关心 p9999, p999 的精度，对p90, p50 的精度并不太在意。&lt;/p&gt;
&lt;p&gt;所以在划分桶的函数上对2边分桶分的更细，对中间划分的更粗&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post_images/2020-08-03/ad09ec908a3347e9a6a687216beffaf9.png&quot; alt=&quot;51195aebc7022a4004a0e6931077b229.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;桶的大小随着采样个数的增加而增加。（不这样也就没法保证空间固定了）
桶大小 = f(n) x 当前采样个数&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;时间复杂度:&lt;/p&gt;

&lt;p&gt;注： 写时，大部分情况下都是O(1), 触发merge 时排序，导致 O(nlogn)&lt;/p&gt;
&lt;p&gt;空间复杂度:&lt;/p&gt;
&lt;p&gt;总空间占用较为固定，对gc影响较小。&lt;/p&gt;
&lt;h1&gt;压测&lt;/h1&gt;
&lt;p&gt;最终我们基于以下3种较为可靠的算法做压测，做一个横向比较。&lt;/p&gt;
&lt;p&gt;我们的场景，一般用于统计接口的 p99 的耗时。允许几十ms的误差。一般统计的范围为 &lt;code&gt;0 - 6000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于 CKMS 和 t-digest 的实现并非线程安全，所以对其读写操作时都加了把锁。&lt;a href=&quot;http://gitlab.ximalaya.com/mainstay/quantile-benchmark/blob/master/src/main/java/com/cr/MyBenchmark.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;测试代码在此&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里直接给结果:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th/&gt;
&lt;th&gt;w (ops/ms)&lt;/th&gt;
&lt;th&gt;r (ops/ms)&lt;/th&gt;
&lt;th&gt;gc影响&lt;/th&gt;
&lt;th&gt;空间(byte)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ckms&lt;/td&gt;
&lt;td&gt;0.182&lt;/td&gt;
&lt;td&gt;3670790&lt;/td&gt;
&lt;td&gt;4次&lt;/td&gt;
&lt;td&gt;32440&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hdrhistogram&lt;/td&gt;
&lt;td&gt;6.546&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;3352&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tdigest&lt;/td&gt;
&lt;td&gt;8.733&lt;/td&gt;
&lt;td&gt;177045&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;13600&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;从上述结果可见，tdigest 的读写性能相对来说是最好的，但是他的空间占用却很厉害。hdrhistogram 反倒是出乎意料的写性能比tdigest略逊一筹。&lt;/p&gt;
&lt;p&gt;仔细看源码会发现tdigest 为了减少gc影响，内部使用了多个固定长度的double数组来实现，&lt;/p&gt;
&lt;p&gt;也就是说，假如采样的范围足够大时，tdigest 才能凸显出优势，不然，内存占用有点多。&lt;/p&gt;
&lt;p&gt;所以，最终，在我们的场景下，还是选择 hdrhistogram&lt;/p&gt;
&lt;h1&gt;reference&lt;/h1&gt;
&lt;p&gt;qdigest&lt;br/&gt;
&lt;a href=&quot;http://www.mathcs.emory.edu/~cheung/Courses/584/Syllabus/08-Quantile/Greenwald2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.mathcs.emory.edu/~cheung/Courses/584/Syllabus/08-Quantile/Greenwald2.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GK&lt;br/&gt;
&lt;a href=&quot;https://blog.csdn.net/matrix_zzl/article/details/78641264&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://blog.csdn.net/matrix_zzl/article/details/78641264&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;t-digest&lt;br/&gt;
&lt;a href=&quot;https://blog.bcmeng.com/post/tdigest.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://blog.bcmeng.com/post/tdigest.html&lt;/a&gt;&lt;/p&gt;

  &lt;/section&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ac9e9fad053709ab32178fcd359cb025</guid>
<title>推广之时，少提术语</title>
<link>https://toutiao.io/k/xqu5g3n</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left&quot; aria-describedby=&quot;js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MTA0NTIwMw==&amp;amp;action=getalbum&amp;amp;album_id=1349832549346131969#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;1349832549346131969&quot; data-tag_source=&quot;0&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#过程改进&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;110个&lt;span class=&quot;weui-hidden_abs&quot;&gt;内容&lt;/span&gt;&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-source-line=&quot;1&quot;&gt;&lt;span&gt;作为一个GJB5000的推广者，我深深地理解在组织内推广GJB5000的不容易。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;3&quot;&gt;&lt;span&gt;GJB5000的推进，常常面临着进退维谷、上下两难的境地：领导对GJB5000让进展不闻不问，给予的支持力度非常小，开发人员对GJB5000给软件开发带来的好处不理解，仅把它当成组织必须获取的一个资质而已。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;5&quot;&gt;&lt;span&gt;GJB5000推进遇到这种状况，和我们推进者也有很大关系。一方面，我们对于国家推进GJB5000的意义没有讲清楚，另一方面，我们推进之时用了太多的术语，这些术语就像天然的沟壑，把领导和开发人员远远地隔在了解GJB5000的岸的另一边。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;7&quot;&gt;&lt;span&gt;&lt;strong&gt;太多的术语是人们接受新鲜事物的大敌！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;9&quot;&gt;&lt;span&gt;想想我们刚接触GJB5000的时候，什么过程域、实践、专用实践、共同实践、专用目标、共同目标、EPG、MSG、QA、CM……一堆堆的术语，让人云里雾里，听得晕晕乎乎。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;11&quot;&gt;&lt;span&gt;在这种情况下，大多数人难以理解，就打了退堂鼓，不求甚解，得过且过，你怎么说我就怎么做；只有少数人能够坚持学习，不断充实自己，最终对这些东西融会贯通。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;13&quot;&gt;&lt;span&gt;所以，一个组织在推进GJB5000的时候，寻求外部专家的帮助，找外部专家提供一些指导，是可以快速地度过这个困难时期的。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;15&quot;&gt;&lt;span&gt;但是，要想真正做好GJB5000，组织内部必须要培养出一个GJB5000的明白人——他要能够吃透GJB5000，完全理解这些术语的含义，理解GJB5000的要求，并能把这些要求本地化，不断地改进。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;17&quot;&gt;&lt;span&gt;组织的明白人在组织内推进GJB5000的时候，就要避免使用这些生僻的术语，而是用本地化的语言直接告诉相关方具体应如何去做。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;19&quot;&gt;&lt;span&gt;比如：&lt;/span&gt;&lt;/p&gt;&lt;ul data-source-line=&quot;21&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在标准和体系宣贯的时候，不要使用过程域、实践等这些术语，而是直接说每个人在项目中承担什么角色，完成什么任务；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;不说中高层验证，直接说领导听取软件过程体系运行情况汇报，并作出指示；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;尽可能地不要增加新的角色，套用组织中原有的角色（GJB9001C中的角色），在原有角色中增加软件开发相关的职责；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;注意与GJB9001C体系的融合。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-source-line=&quot;26&quot;&gt;&lt;span&gt;总之，除了少数的GJB5000的明白人之外，其他的人只要知道实施GJB5000增加了哪些具体的工作，这些工作对于软件质量的提高有帮助就行了。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;28&quot;&gt;&lt;span&gt;推广之时，少用术语，这样可以让GJB5000实施起来少了一些阻碍，会让具体实施者更容易接受。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;30&quot;&gt;&lt;strong&gt;&lt;span&gt;不唯推广GJB5000是这样，任何一个新技术或者新方法的推广也要尽量少用术语。&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;术语只要负责推广的人理解就行了，对于实施者没必要去理解术语，而是知道具体怎么去做就好了。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;32&quot;&gt;&lt;span&gt;这正是：&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;34&quot;&gt;&lt;strong&gt;&lt;span&gt;新鲜术语如天堑，推广起来难上难&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-source-line=&quot;36&quot;&gt;&lt;strong&gt;&lt;span&gt;实施起来少术语，减少阻碍和羁绊&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-source-line=&quot;40&quot;&gt;&lt;span&gt;参考书目：实例化需求：团队如何交付正确的软件，作者：（塞尔维亚）Gojko Adzic，出版社：人民邮电出版社&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;h6 data-source-line=&quot;46&quot;&gt;&lt;span&gt;作者简介：王小双，长期从事GJB5000推广、实施、评价、改进的工作，创建《软件工程之思》微信公众号，一直在《软件工程之思》分享GJB5000、CMMI、软件工程的知识和感悟。现致力于GJB5000咨询以及软件过程改进、软件工程能力提升的研究工作。&lt;/span&gt;&lt;/h6&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7cff58d8347fb119a5ed37e06258523c</guid>
<title>[推荐] 团队管理那点破事！OKR 绩效、核心人才、面试、技术分享、研发流程</title>
<link>https://toutiao.io/k/135ujiu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大家好，我是Tom哥~&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;今天来聊聊团队管理，可能你现在还是一线开发，没有带团队，感觉这个话题与你无关，其实不然。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;程序员的职业生涯曲折，技术更新迭代快，走技术深度，走架构师路线，势必要付出常人的时间和精力。而管理则可以更好的复用之前经验。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;知其然，知其所以然。现在，对管理拒绝的人总有一天，你会经历思想转变。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;作为管理者，我们平时都会遇到哪些问题？又是如何来解决这些问题？好的经验我们要学会借鉴，来看看今天要聊的问题概要&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003489&quot; data-ratio=&quot;0.7683923705722071&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshweUJQcqPoODQreibRwB2ibv73zhFsficibKWObzgoIgiah19mUicJuSSicPU11y6wOdr8GxvGtlyZkn4cricw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;734&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;br/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;做为团队负责人，你是如何带领团队的？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、角色认知、心态转变，“管人”和“理事”，借助团队拿结果&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、OKR、KPI考核&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、平衡好技术和业务发展矛盾&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、技术储备和未来的技术规划，为业务预留空间&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、知人善任，人才梯度培养&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;6、方向要对、格局要大，与公司战略保持一致&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;7、制定好团队目标&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;8、技术分享，培养团队的技术氛围&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;9、团建&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;10、以人为本，激发每个人的积极性&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更多内容，参考 &lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484897&amp;amp;idx=1&amp;amp;sn=69934454723b5c18b754d86d95d4a2ff&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;第一次带团队，感觉很慌怎么办？&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;开发规范流程，需要做哪些事情？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;严格约定团队的开发规范，如：IDE 代码模板、命名规范(mysql建表、redis key 前缀，以及application.properties中的各种配置项，可以参考阿里代码规约)，代码ci规范，API命名，统一日志规范，MySQL建表&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;严格的开发流程，如：需求评审、技术方案设计、方案评审、测试用例评审、编码、代码 Review、测试、发布，线上发布要注意灰度。回滚机制&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;对于一些通用的逻辑，要注意抽取公共模块&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;技术框架选型要有严格流程&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;团队未来规划，负责人要怎么做？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：这个分为两部分。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一个是了解系统状况，有哪些历史技术债务（如：架构优化、性能优化、高可用、可伸缩等）需要分阶段偿还，提前做好时间安排。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;提前了解业务规划，为了实现业务目标，我们要做哪些技术储备&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何让自己的团队高效且有战斗力？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、业务支撑。按优先级将业务分为重点项目、日常项目。优先保证核心项目所需的开发资源。另外，经常与业务同学互通业务想法，提前做好技术储备。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、骨干拉平。对团队经常组织技术培训，核心的技术骨干能轮动工作内容，每个系统都有人员互补。遇到紧急项目时，一个骨干+几个研发，就可以快速支撑一个项目。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、架构升级，为业务预留技术储备。如：分布式、服务化、中台、中心化、中间件、平台化等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、工程效率。包括动态化、配置化、工具化、自动化&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、系统稳定性。构建完善的报警监控系统、流控、熔断、降级、容灾、回滚、灰度，保障系统的稳定性。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更多内容，&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484862&amp;amp;idx=1&amp;amp;sn=70f083d3726cba543b5369e82ba90d8b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;如何打造一个高效的研发团队&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何定制高效的研发流程？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：流程可以帮助我们更规范的做事情，提高整体的工作效率，进而提高产出。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;产品层面，统一将业务需求收集到“需求池”中，每周定期 review 需求，将一些优先级较高的需求整合、立项、排期&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;RPD 方案编写，包括界面、功能、逻辑、交互等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;PRD 方案评审，包括业务准确性、技术可行性评估&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;编写技术方案，并组织评审&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;项目计划，开发任务分解，人力成本，时间评估&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;各角色（前端、后端、客户端等）进入开发阶段，组织每日站立晨会，跟进项目遇到的问题，并及时做出调整。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;代码 review，对不合理的地方及时调整&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;功能测试、性能测试、集成测试&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;预发环境检验&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;发布上线&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;项目经验总结&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何营造团队的技术氛围？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：物以类聚，人以群分。大到一个公司，小到一个团队，都有自己的味道。如果【味道】缺失，那团队的稳定性存在极大风险。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;技术分享，输出倒逼输入，锻炼分享人的演讲能力，同时还能提高团队的整体技术能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;代码CR，可以点对点审查，也可以团队成员一起审查。既能保证代码质量，还能让大家对系统进一步了解&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;代码好坏味道，组织一些活动，对于一些优秀的代码、坏代码，拿出来通晒&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;读书会。一个人的成长离不开持续的学习输入。招聘的候选人要有很强的学习热情，有较强的自律性。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;鼓励创新，紧跟市场前沿，对于一些新技术在充分验证可行性后，可以引入到工作中。当然，创新是有风险的，管理者要充分衡量利弊。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;推行自动化，工具化。管理者要鼓励工程师创造工具、引入工具，释放一些低效工作。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;建立和维护好团队的技术氛围，需要自上而下的技术导向，需要各级老板的鼎力支持，需要每位团队成员参与其中、融入其中&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何做团队的绩效管理？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：肯定要引入一些科学管理方法，比如：KPI、OKR。kpi全称 Key Performance Indicator，只看结果，不关心过程，只要结果拿到了即可，适合销售、运营等考核指标相对明确的岗位。研发岗推荐使用OKR，根据目标自己定义关键节点的Key Result，更加能激发个人的主动性。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;使用OKR工具，要关注几个点：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、如何制定OKR？目标一定要清晰明确，有很强的激励作用，振奋人心；有实际价值；通过自己的努力，短期内可以实现。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、持续跟踪OKR的落地执行，每周、每月、每季度都要定期回顾，不断优化对齐目标，做到信息透明、共享，让每位团队成员都能收获成长的快乐。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、OKR评估，分为自评、主管打分。OKR 评分 = 自我评分 x 20% + 同事评分 x 30% + 主管评分 x 50%&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、OKR复盘。考核不是最终目的，发现问题并最终解决问题才是我们的终极目标。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更多内容，参考之前文章  &lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484883&amp;amp;idx=1&amp;amp;sn=f92f9dcc0f644b20aaac385fe8bfe3ba&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;作为技术团队TL，如何运用OKR提高团队产出&lt;/span&gt;&lt;/a&gt;&lt;strong/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何做一个合格的面试官？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;首先，了解招聘岗位的工作职责，技能要求，岗位定级，清楚招聘的候选人要具备什么能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;简历筛选，对于一些不太确定的可以约现场聊聊，毕竟人才稀缺&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试前，提前浏览下候选人的简历，了解其过往项目经历，这样短期内更容易全面考察候选人&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试不应该只局限技术，关于沟通力、团队协作、职业规划、价值观等软性方面也要考察&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试尾声，可以问问候选人有什么想了解的？毕竟清楚彼此双方核心诉求，才能更长远合作&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试结束后，及时填写面试反馈，便于后续流程推进&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何招到核心人才？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：核心人才主要关注两点：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、价值观。如果员工的价值观与公司不符，即使能力再强，也很难融入集体，创造价值。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、技术能力。这个主要是通过两个方面来把控。一个是入职的技术面试，一般有2~4轮，甚至还有部门交叉面试，全方位了解候选人的技术实力。另一个是，由于候选人之前的工作经历和方向与新工作存在一定差异性，候选人能否快速适应新工作环境，所以，会有一个试用期，试用期会制定一个考核目标，直接主管和HRBP 会定期与候选人沟通，答疑解惑，帮助候选人快速投入新的工作中。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何留住核心人才？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：做产品是为了满足用户需求。内部员工也是一样，&lt;strong&gt;先成就员工，再成就团队，最后成就企业&lt;/strong&gt;。给每个员工足够的成长机会，让他对公司有归属感，找到自己的目标与追求。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对症下药，清楚了解每个员工的诉求点：提升自身技术水平、升职加薪、想带团队。。。等，工作中尽量照顾核心员工的需求，让他们工作中能保持愉悦心态，并获得成就感。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;人嘛，干什么事都要有新鲜感，也可以尝试技术轮岗，接触一些新的东西，既开阔了员工视野，也可能碰撞出一些新的火花。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当然，作为直接负责人，你就是团队成员的天花板，所以也要严格要求自己，不断提升自己的技术能力、视野和管理能力，承担更大的职责，给团队成员预留足够的上升空间。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;什么样的员工坚决开除？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;试用期制定了明确的考核目标，考核周期结束后不能很好的完成&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;踩到公司的红线，比如贪污受贿、数据泄密、威胁公司信息安全&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;态度傲慢，很难与其他同事协同工作，这种人即使能力再强，也坚决开除。因为我们是团队作战，不是搞个人英雄主义。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;不认同公司的价值观，个人的品质较差&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;什么样的员工，老板喜欢？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：有人可能说，“不要工资，干活卖力！”，严肃点，不要皮&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;做事细心，考虑问题全面，工作效率高。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;工作踏实，不挑活&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;有强烈的责任心，接手一件事情，有一杆到底的精神&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;除了做好本职工作外，还会考虑系统架构优化或产品生态建设的工作，有强烈的上进心&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;善于沟通，有很强的团队协同能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何做好团队的激励？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：人是一种复杂动物，而且每个人的诉求都不一样，如何统一激励框架就显得非常重要。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我们要找到激发员工的工作动机，用各种有效的方法来调动员工的积极性和创造性，使其完成任务。比如，现在流行的OKR 管理，自己设定目标以及关键 Key Result，并在团队中共享，做到公开透明，这样每个人都清楚了解团队的目标方向，自己在哪一个位置，起什么作用，让每个成员有强烈的参与感、掌控感，更容易激发员工的主观能动性。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;具体的激励一般有以下几种：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;精神激励。领导的信任表扬；对自身价值的认同。低成本、高效率。比如：每月之星、光荣榜、各种奖项&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;晋升激励。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;物质激励，股票、期权、项目奖、季度奖、年终奖等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;量身定做，团队成员的情况千差万别，可以结合马斯洛理论，充分了解员工的情况，为员工定制化。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;作为团队负责人，如何面对压力？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：岗位越高，承担的职责就越大，接受的挑战和压力就越大。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;分阶段、分里程碑的方式来制定计划，逐步完成事项来达成目标。给自己留一些缓冲时间，以便于应对计划的灵活性调整。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;时刻保持旺盛的精力，保持跟团队成员的沟通，了解他们的工作状态和感受&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;敢于面对上层传递下来的压力，做好缓冲，避免团队过于透支，保证有一个稳固的后方。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;做好项目时间计划表，分清项目的优先级、重要性，合理安排，统筹管理&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;学会委派工作。知人善任，合理分工，发挥团队的力量，而不是当一个超级英雄&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;放松心态，工作和生活尽量分开，保证充足的睡眠和锻炼，毕竟身体是革命的本钱。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;关于我：前阿里P7技术专家，出过专利，竞赛拿过奖，CSDN博客专家，负责过电商交易、社区生鲜、互联网金融等业务，多年团队管理经验。&lt;/span&gt;&lt;/section&gt;&lt;h1 accuse=&quot;qTitle&quot;&gt;&lt;span&gt;&lt;span&gt;关注公众号「微观技术」，后台回复 “算法” ，免费领取资料&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg2NzYyNjQzNg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPpzBoAoibbfQkhLdXfEpQgd8frHoDJDH503rv3FaMK6las2rCNQY7icr6w/0?wx_fmt=png&quot; data-nickname=&quot;微观技术&quot; data-alias=&quot;weiguanjishu&quot; data-signature=&quot;前阿里P7技术专家，研究生，出过专利。负责过电商交易、社区团购、流量营销等业务。分享后端架构技能、一线大厂面试经验、团队管理等话题。欢迎关注&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247486894&amp;amp;idx=1&amp;amp;sn=8cc0ae494a7624943665a8e9d47341e1&amp;amp;chksm=ceb9f105f9ce7813b3efa57bb0c655f47a37aab82579dda3da6d05003f97adc99d83f35b6ec7&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;JAVA那点破事！并发、IO模型、集合、线程池、死锁、非阻塞、AQS....&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247486515&amp;amp;idx=1&amp;amp;sn=62a75d90d76a7f0c4cb01a64db8f4e2e&amp;amp;chksm=ceb9f098f9ce798eafec5c1e01aaeaedc00163e5c4925931da7a1b6184365d474fb1562cb664&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Redis缓存那点破事 | 绝杀面试官 25 问！&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247486281&amp;amp;idx=1&amp;amp;sn=2c0fc614dd94c93aa1172413fb340c6d&amp;amp;chksm=ceb9f7e2f9ce7ef46b0832f69b2e6e6e66d1d10c6db94fedb381da886894a1a622086e64f68a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;MYSQL 那点破事！索引、SQL调优、事务、B+树、分表 ....&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247485888&amp;amp;idx=1&amp;amp;sn=60304679c226fb6b2ebaba5bb6ad5485&amp;amp;chksm=ceb9f56bf9ce7c7d7c87fa4aa7cb70aba7af6b4aefbf1f8b3e331d5a443ccc91b3ba2fb95b9e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;TCP网络那点破事！三次握手、四次挥手、TIME-WAIT ....&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>