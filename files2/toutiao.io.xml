<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>2d88685938aead45a33b30a0be1a9c13</guid>
<title>可能是最好用的 Taro 小程序路由库</title>
<link>https://toutiao.io/k/8gzyh5c</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;preview&quot;&gt;&lt;h2&gt;小程序的路由有什么问题&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;路由跳转的页面 url 没有类型提示容易输错&lt;/li&gt;
&lt;li&gt;路由传参需要手动拼接参数、无法携带任意类型、任意大小的数据&lt;/li&gt;
&lt;li&gt;路由方法是异步的，页面通过 &lt;code&gt;EventCannal&lt;/code&gt; 通信，事件的回调方法可读性差、耦合度高、只能在回调内部处理异常&lt;/li&gt;
&lt;li&gt;路由跳转的鉴权等实现起来比较麻烦&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;如何解决这些问题&lt;/h2&gt;

&lt;p&gt;允许我先向你介绍： &lt;a href=&quot;https://github.com/lblblong/tarojs-router-next&quot;&gt;tarojs-router-next&lt;/a&gt;，这是一个 Taro 的路由辅助库，他提供以下特性帮助你方便的解决上面的问题&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自动生成带参数类型提示的路由方法&lt;/li&gt;
&lt;li&gt;允许传递任意类型、任意大小的参数数据&lt;/li&gt;
&lt;li&gt;同步的路由方法调用&lt;/li&gt;
&lt;li&gt;koa体验一致的路由中间件&lt;/li&gt;
&lt;li&gt;详细的文档&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1. 路由跳转的页面 url 没有类型提示容易输错&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;tarojs-router-next 不需要使用者手写页面 url，它会监听项目 &lt;code&gt;src/pages&lt;/code&gt; 内容变化，自动为使用者生成对应的路由方法并附加到 &lt;a href=&quot;http://lblblib.gitee.io/tarojs-router-next/api/class/router&quot;&gt;Router&lt;/a&gt; 类上，比如以下列子：&lt;/p&gt;

&lt;p&gt;左边的页面结构会生成右边的 &lt;a href=&quot;http://lblblib.gitee.io/tarojs-router-next/api/class/router#to-options-&quot;&gt;Router.to**&lt;/a&gt; 系列方法，全都挂在 &lt;a href=&quot;http://lblblib.gitee.io/tarojs-router-next/api/class/router&quot;&gt;Router&lt;/a&gt; 类上&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://lblblib.gitee.io/tarojs-router-next/images/code1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 路由传参需要手动拼接参数、无法携带任意类型、任意大小的数据&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;tarojs-router-next 允许直接传递一个对象给 &lt;code&gt;params&lt;/code&gt;，它会把 &lt;code&gt;params&lt;/code&gt; 展开拼接到 &lt;code&gt;url&lt;/code&gt; 后面。并且还可以接收一个 &lt;code&gt;data&lt;/code&gt; 参数，&lt;code&gt;data&lt;/code&gt; 可以传递任意类型、任意大小的数据。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://lblblib.gitee.io/tarojs-router-next/images/code2.gif&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;

&lt;pre lang=&quot;typescript&quot;&gt;&lt;code&gt;Router.toDetail({ params: { id: 1 } })
Router.toDetail({ params: { id: 1, name: &#x27;lbl&#x27; } })

Router.toDetail({ data: { name: &#x27;taro&#x27;, role: [1, 2, 3] } })
Router.toDetail({ data: 123 })
Router.toDetail({ data: true })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;并且可以通过页面下的 &lt;code&gt;route.config.ts&lt;/code&gt; 导出 &lt;code&gt;params&lt;/code&gt; 和 &lt;code&gt;data&lt;/code&gt; 的类型定义，这样生成的 &lt;code&gt;Router.to**&lt;/code&gt; 相关方法会带有类型提示&lt;/p&gt;

&lt;pre lang=&quot;typescript&quot;&gt;&lt;code&gt;// 导出 params 的类型，名字必须是 Params
export type Params = {
  id: number
  name: string
}

// 导出 data 的类型，名字必须是 Data
export type Data = {
  name: string
  role: number[]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;3. 路由方法是异步的，页面通过 &lt;code&gt;EventCannal&lt;/code&gt; 通信，事件的回调方法可读性差、耦合度高、只能在回调内部处理异常&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;tarojs-router-next 的路由跳转会返回一个 &lt;code&gt;Promise&lt;/code&gt;，通过 &lt;code&gt;async/await&lt;/code&gt; 可以写出同步的写法，详细参考 &lt;a href=&quot;http://lblblib.gitee.io/tarojs-router-next/guide/quike/sync-router&quot;&gt;同步的路由方法&lt;/a&gt;&lt;/p&gt;

&lt;pre lang=&quot;typescript&quot;&gt;&lt;code&gt;// page/edit/index
try {
  // 跳转页面选择城市
  const cityData = await Router.toSelectCity()
  if( !cityData ) return
  // 赋值给表单项
  this.form.city = cityData
} catch ( err ) {
  console.log( err.message )
}

// page/select-city/index
Router.back() // 返回上一个页面，此时上一个页面拿到的是 null
Router.back( { id: 1, name: &#x27;深圳&#x27; } ) // 返回上一个页面并返回城市数据
Router.back( new Error(&#x27;用户取消选择&#x27;) ) // 返回上一个页面并抛出异常
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;4. 路由跳转的鉴权等实现起来比较麻烦&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;自己实现路由的鉴权是比较麻烦的事情，而 tarojs-router-next 提供与 koa 使用一致的路由中间件功能，详细参考 &lt;a href=&quot;http://lblblib.gitee.io/tarojs-router-next/guide/quike/middleware&quot;&gt;路由中间件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;注册一个路由中间件：&lt;/p&gt;

&lt;pre lang=&quot;typescript&quot;&gt;&lt;code&gt;import Taro from &#x27;@tarojs/taro&#x27;
import { Middleware, registerMiddleware } from &#x27;tarojs-router-next&#x27;

export const M1: Middleware = async (ctx, next) =&amp;gt; {
  console.log(&#x27;中间件执行：&#x27;, ctx.route.url)
  await next()
  console.log(&#x27;中间件执行结束&#x27;)
}

registerMiddleware(M1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注册多个路由中间件：&lt;/p&gt;

&lt;pre lang=&quot;typescript&quot;&gt;&lt;code&gt;registerMiddlewares([M1, M2])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有的时候我们希望某个中间件只为特定的页面工作，这个需求可以在中间件中增加判断条件来实现，但在中间件中做这些判断会使中间件的职能不够专一，并且这些判断逻辑无法在多个中间件中复用&lt;/p&gt;

&lt;p&gt;怎么解决呢，我们可以在注册中间件时传递一个方法，将本来要写到中间件中的判断逻辑抽取到该方法中。在路由进入时该方法会被调用并传入当前路由的上下文，若方法返回 true 则为当前路由执行这些中间件&lt;/p&gt;

&lt;pre lang=&quot;typescript&quot;&gt;&lt;code&gt;// 仅为 me 和 home 页面注册该路由中间件
registerMiddleware(Logger, (ctx) =&amp;gt; {
  return [&#x27;/pages/me/index&#x27;, &#x27;/pages/home/index&#x27;].indexOf(ctx.route.url) !== -1
})

// 注册多个中间件
registerMiddlewares([Logger, Auth], (ctx) =&amp;gt; {
  return [&#x27;/pages/me/index&#x27;, &#x27;/pages/home/index&#x27;].indexOf(ctx.route.url) !== -1
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一个检查用户是否登录的中间件示例：&lt;/p&gt;

&lt;pre lang=&quot;typescript&quot;&gt;&lt;code&gt;import Taro from &#x27;@tarojs/taro&#x27;
import { Middleware, Router } from &#x27;tarojs-router-next&#x27;

export const AuthCheck: Middleware&amp;lt;{ mustLogin: boolean }&amp;gt; = async (ctx, next) =&amp;gt; {
  if (ctx.route.ext?.mustLogin) {
    const token = Taro.getStorageSync(&#x27;token&#x27;)
    if (!token) {
      const { confirm } = await Taro.showModal({
        title: &#x27;提示&#x27;,
        content: &#x27;请先登录&#x27;,
      })

      if (confirm) Router.toLogin()

      // 打断路由执行
      throw Error(&#x27;该页面必须要登陆：&#x27; + ctx.route.url)
    }
  }

  await next()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;最后&lt;/h2&gt;

&lt;p&gt;完整的代码示例：&lt;a href=&quot;https://github.com/lblblong/tarojs-router-next/tree/master/examples/react&quot;&gt;React示例&lt;/a&gt;，&lt;a href=&quot;https://github.com/lblblong/tarojs-router-next/tree/master/examples/vue3&quot;&gt;Vue3示例&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;详细的文档：&lt;a href=&quot;http://lblblib.gitee.io/tarojs-router-next/guide/quike/start&quot;&gt;查看文档&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>bfa1ca45d5186a56d43067a91bba946e</guid>
<title>云上细粒度访问管理的参考架构</title>
<link>https://toutiao.io/k/eyk6ijj</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;本文由 Addo Zhang 翻译自 &lt;span&gt;A Reference Architecture for Fine-Grained Access Management on the Cloud&lt;sup&gt;[1]&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;什么是访问管理？&lt;/h1&gt;&lt;p&gt;访问管理是识别用户或一组用户是否应该能够访问给定资源（例如主机、服务或数据库）的过程。例如，对于开发人员来说是否可以使用 SSH 登录生产应用程序服务器，如果可以，那么可以登录多长时间？如果 SRE 在非支持时间尝试访问数据库，他们这样做？如果数据工程师已转移到其他团队，他们是否应该继续访问 ETL 管道的 S3 存储桶？&lt;/p&gt;&lt;h1&gt;现在如何进行访问管理？&lt;/h1&gt;&lt;p&gt;在云上各种基础设施和数据服务激增之前，访问管理是 DevOps 和 Security 团队要解决的相对简单的问题。VPN 和堡垒主机是（现在仍然是）在网络级别封锁所有关键资源的首选机制。用户必须先通过 VPN 服务器进行身份验证，或者登录到堡垒主机，然后才能访问专用网络上的所有资源。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5972696245733788&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/tMghG0NOfxdtJ2OCKT1wGtCS0hhfm2qrhvfu8zNRLTYJHMGUurAEicgTwb38GGAIzRz4XMfGP8pypJOc9Xd5RvQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1758&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;p&gt;当资源是静态的并且它们的数量相对较小时，此方法效果很好。但是，随着越来越多的资源动态地涌入专用网络的各处，VPN / 堡垒主机解决方案变得站不住脚。&lt;/p&gt;&lt;p&gt;具体来说，在三个方面，VPN 和堡垒主机不足以作为一种有效的访问管理机制。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;strong&gt;它们作用于网络层面&lt;/strong&gt;：用户通过 VPN 进行身份验证并获得对专用网络的访问权限后，他们实际上就可以访问其上运行的所有服务。无法根据用户的身份在基础架构或数据服务的粒度上管理访问。&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;strong&gt;凭据是攻击的媒介&lt;/strong&gt;：VPN 和堡垒主机都要求用户记住并存储凭据。过期和轮换凭证作为安全策略非常困难，尤其是在涉及大量用户的情况下，凭证因此成为潜在的攻击媒介。&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;strong&gt;不能管理第三方 SaaS 工具&lt;/strong&gt;：SaaS 工具（如 Looker、Tableau 和 Periscope Data）需要直接访问数据端点。因此，使用这些工具访问数据的任何人都无法通过使用了相同的机制和凭据的基础设施进行身份验证。&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;云上访问管理的新架构&lt;/h1&gt;&lt;p&gt;在本文中，我们将定义新的参考架构，为那些正在寻求简化访问管理云资源（从 SSH 主机、数据库、数据仓库到消息管道和云存储终结点）解决方案的云原生企业。&lt;/p&gt;&lt;p&gt;它解决了 VPN 和堡垒主机无法克服的以下特定挑战：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;在细粒度的服务级别上进行访问鉴权&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;消除共享凭据和个人帐户管理&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;通过第三方 SaaS 工具控制访问&lt;/span&gt;&lt;/p&gt;&lt;p&gt;此外，它为具有敏感数据的组织带来以下商业利益：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;通过跨所有服务的会话记录和活动监视来满足 FedRamp 和 SOC2 等合规性标准的可审核性&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;基于访问者的身份，通过细粒度的授权策略来限制或清除敏感数据，从而实现隐私和数据治理&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The architecture is built upon the following three core principles, whose implementation allows DevOps and Security teams to exercise full control over all of their environment while improving user productivity with a simple and consistent experience.&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Establishing a non-repudiable identity for users accessing resources&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Using short-lived ephemeral tokens and certificates in place of static credentials and keys&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Centralizing fine-grained access policies across all resources types in a single place&lt;/span&gt;&lt;/p&gt;&lt;p&gt;该架构建立在以下三个核心原则的基础上，这些原则的实现使 DevOps 和 Security 团队可以在对所有环境进行全面控制的同时，通过简单而一致的体验来提高用户的工作效率。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;为访问资源的用户建立不可否认的身份&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;使用短期的短暂令牌和证书代替静态凭证和密钥&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;在一处集中所有资源类型的细粒度访问策略&lt;/span&gt;&lt;/p&gt;&lt;p&gt;下图显示了参考架构及其组件。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.665911664779162&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/tMghG0NOfxdtJ2OCKT1wGtCS0hhfm2qradqXqDia0zltYpPqPd76alC9BkO2UPkpbvlEXLa6GwICzbrXjSlCYUw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1766&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;p&gt;上图中的 VPN / 堡垒主机已替换为接入网关（Access Gateway）。接入网关实际上是微服务的集合，负责验证单个用户、基于特定属性授权他们的请求，并最终授予他们访问专用网络中的基础结构和数据服务的权限。&lt;/p&gt;&lt;p&gt;接下来，让我们看一下各个组件，以了解之前概括的核心原理是如何实现的。&lt;/p&gt;&lt;h2&gt;访问控制器&lt;/h2&gt;&lt;p&gt;支持此体系结构的关键见解是将用户身份验证委派给单个服务（访问控制器），而不是将责任分配给用户可能需要访问的服务。这种联合在 SaaS 应用程序世界中很常见。由单一服务负责身份验证，可以简化应用程序所有者的用户配置和接触配置，并加快应用程序开发。&lt;/p&gt;&lt;p&gt;对于实际的身份验证序列，访问控制器本身通常会与身份提供商集成，例如 &lt;span&gt;Auth0&lt;sup&gt;[2]&lt;/sup&gt;&lt;/span&gt; 或 &lt;span&gt;Okta&lt;sup&gt;[3]&lt;/sup&gt;&lt;/span&gt;，因此，可以跨提供者和协议提供有用的抽象。最终，身份提供商以签名的 SAML 声明\JWT 令牌或临时证书的形式保证用户的身份不可否认。这样就无需依赖受信任的子网作为用户身份的代理。与 VPN 允许用户访问网络上的所有服务不同，它还允许将访问策略配置到服务的粒度。&lt;/p&gt;&lt;p&gt;将身份验证委派给身份提供者的另一个好处是，可以使用零信任原则对用户进行身份验证。具体来说，可以创建身份提供者策略以强制执行以下操作：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;禁止从信誉不佳的地理位置和 IP 地址访问&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;禁止从已知漏洞的设备（未修补的 OS、较旧的浏览器等）进行访问&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;成功进行 SAML 交换后立即触发 MFA&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;身份验证序列如何工作：&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;1.&lt;/span&gt;用户首先通过访问控制器进行身份验证，访问控制器又将身份验证委派给身份提供者。&lt;/span&gt;&lt;span&gt;&lt;span&gt;2.&lt;/span&gt;成功登录到身份提供者后，访问控制器将生成一个短暂的临时证书，进行签名并将其返回给用户。或者，它可以代替证书生成令牌。只要证书或令牌有效，就可以将其用于连接到 接入网关管理的任何授权基础设施或数据服务。到期后，必须获取新的证书或令牌。&lt;/span&gt;&lt;span&gt;&lt;span&gt;3.&lt;/span&gt;用户将在步骤（2）中获得的证书传递给他们选择的工具，然后连接到接入网关。根据用户请求访问的服务，基础设施网关或数据网关将首先允许访问控制器验证用户的证书，然后再允许他们访问该服务。因此，访问控制器充当用户与其访问的服务之间的 CA，因此为每个用户提供了不可否认的身份。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;策略引擎&lt;/h2&gt;&lt;p&gt;当访问控制器强制对用户进行身份验证时，策略引擎会对用户的请求强制进行细粒度的授权。它以易于使用的 YAML 语法接受授权规则（查看最后的示例），并根据用户请求和响应对它们进行评估。&lt;/p&gt;&lt;p&gt;开放策略代理（OPA）是一个开源的 CNCF 项目，是策略引擎的一个很好的例子。它可以自己作为微服务运行，也可以用作其他微服务进程空间中的库。OPA 中的策略以称为 Rego 的语言编写。另外，也可以在 Rego 之上轻松构建一个简单的 YAML 界面，以简化政策规范。&lt;/p&gt;&lt;p&gt;具有独立于基础结构和数据服务的安全模型的独立策略引擎的优点如下：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;可以以与服务和位置无关的方式指定安全策略&lt;span&gt;&lt;span&gt;•&lt;/span&gt;例如在所有 SSH 服务器上禁止特权命令&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;例如强制执行 MFA 检查所有服务（基础设施和数据）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;策略可以保存在一个地方并进行版本控制&lt;span&gt;&lt;span&gt;•&lt;/span&gt;策略可以作为代码签入 GitHub 存储库&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;每项变更在提交之前都要经过协作审核流程&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;存在版本历史记录，可以轻松地还原策略更改&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;基础设施网关和数据网关都依赖于策略引擎，以分别评估用户的基础设施和数据活动。&lt;/p&gt;&lt;h2&gt;基础设施网关&lt;/h2&gt;&lt;p&gt;基础设施网关管理和监控对基础设施服务的访问，例如 SSH 服务器和 Kubernetes 集群。它与策略引擎连接，以确定细化的授权规则，并在用户会话期间对所有基础设施活动强制执行这些规则。为了实现负载平衡，网关可以包含一组工作节点，可以在 AWS 上部署为自动扩展组，也可以在 Kubernetes 集群上作为副本集运行。&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hashicorp 边界&lt;sup&gt;[4]&lt;/sup&gt;&lt;/span&gt; 是基础设施网关的示例。这是一个开源项目，使开发人员、DevOps 和 SRE 可以使用细粒度的授权来安全地访问基础设施服务（SSH 服务器、Kubernetes 群集），而无需直接访问网络，同时又禁止使用 VPN 或堡垒主机。&lt;/p&gt;&lt;p&gt;基础设施网关支持 SSH 服务器和 Kubernetes 客户端使用的各种连接协议，并提供以下关键功能：&lt;/p&gt;&lt;h3&gt;会话记录&lt;/h3&gt;&lt;p&gt;这涉及复制用户在会话期间执行的每个命令。捕获的命令通常会附加其他信息，例如用户的身份、他们所属的各种身份提供者组、当天的时间、命令的持续时间以及响应的特征（是否成功、是否有错误、是否已读取或写入数据等）。&lt;/p&gt;&lt;h3&gt;活动监控&lt;/h3&gt;&lt;p&gt;监控使会话记录的概念更进一步。除了捕获所有命令和响应，基础设施网关还将安全策略应用于用户的活动。在发生违规的情况下，它可以选择触发警报、阻止有问题的命令及其响应或完全终止用户的会话。&lt;/p&gt;&lt;h2&gt;数据网关&lt;/h2&gt;&lt;p&gt;数据网关管理和监控对数据服务的访问，例如 MySQL、PostgreSQL 和 MongoDB 等托管数据库、AWS RDS 等 DBaaS 端点、Snowflake 和 Bigquery 等数据仓库、AWS S3 等云存储以及 Kafka 和 Kinesis。它与策略引擎连接，以确定细化的授权规则，并在用户会话期间对所有数据活动强制执行这些规则。&lt;/p&gt;&lt;p&gt;与基础设施网关类似，数据网关可以包含一组工作节点，可以在 AWS 上部署为自动扩展组，也可以在 Kubernetes 集群上作为副本集运行。&lt;/p&gt;&lt;p&gt;由于与基础设施服务相比，数据服务的种类更多，因此数据网关通常将支持大量的连接协议和语法。&lt;/p&gt;&lt;p&gt;此类数据网关的示例是 &lt;span&gt;Cyral&lt;sup&gt;[5]&lt;/sup&gt;&lt;/span&gt;，这是一种轻量级的拦截服务，以边车（sidecar）的方式部署来监控和管理对现代数据终端节点的访问，如 AWS RDS、Snowflake、Bigquery，、AWS S3、Apache Kafka 等。其功能包括：&lt;/p&gt;&lt;h3&gt;会话记录&lt;/h3&gt;&lt;p&gt;这类似于记录基础设施活动，并且涉及用户在会话期间执行的每个命令的副本，并使用丰富的审计信息进行注释。&lt;/p&gt;&lt;h3&gt;活动监控&lt;/h3&gt;&lt;p&gt;同样，这类似于监视基础设施活动。例如，以下策略阻止数据分析人员读取敏感的客户 PII。&lt;/p&gt;&lt;h3&gt;隐私权执行&lt;/h3&gt;&lt;p&gt;与基础设施服务不同，数据服务授予用户对通常位于数据库、数据仓库、云存储和消息管道中的与客户、合作伙伴和竞争对手有关的敏感数据的读写访问权限。出于隐私原因，对数据网关的一个非常普遍的要求是能够清理（也称为令牌化或屏蔽）PII，例如电子邮件、姓名、社会保险号、信用卡号和地址。&lt;/p&gt;&lt;h2&gt;那么这种体系结构如何简化访问管理？&lt;/h2&gt;&lt;p&gt;让我们看一些常见的访问管理方案，以了解与使用 VPN 和堡垒主机相比，接入网关架构如何提供细粒度的控制。&lt;/p&gt;&lt;h2&gt;特权活动监控（PAM）&lt;/h2&gt;&lt;p&gt;这是一个简单的策略，可以在一个地方监视所有基础设施和数据服务中的特权活动：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;仅允许属于 Admins 和 SRE 组的个人在 SSH 服务器、Kubernetes 集群和数据库上运行特权命令。&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;虽然可以运行特权命令，但是有一些例外形式的限制。具体来说，以下命令是不允许的：&lt;span&gt;&lt;span&gt;•&lt;/span&gt;“sudo” 和 “yum” 命令可能无法在任何 SSH 服务器上运行&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;“kubectl delete” 和 “kubectl taint” 命令可能无法在任何 Kubernetes 集群上运行&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;“drop table” 和 “create user” 命令可能无法在任何数据库上运行&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1.178743961352657&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/tMghG0NOfxdtJ2OCKT1wGtCS0hhfm2qrP98pxZPjrvhYy9tRAcBGicNHwcZJgtaDkRibdqiaz3rTID7t78HPYib5tQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;414&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;零特权（ZSP）执行&lt;/h2&gt;&lt;p&gt;The next policy shows an example of enforcing zero standing privileges -- a paradigm where no one has access to an infrastructure or data service by default. Access may be obtained only upon satisfying one or more qualifying criteria:&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Only individuals belonging to the Support group are allowed access&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;An individual must be on-call to gain access. On call status may be determined by checking their schedule in an incident response service such as PagerDuty&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;A multi-factor authentication (MFA) check is triggered upon successful authentication&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;They must use TLS to connect to the infrastructure or data service&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Lastly, if a data service is being accessed, full table scans (e.g. SQL requests lacking a WHERE or a LIMIT clause that end up reading an entire dataset) are disallowed.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;下一个策略显示了一个实施零特权的示例 -- 一种默认情况下没有人可以访问基础设施或数据服务的范例。只有满足一个或多个合格标准，才能获得访问权限：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;只允许属于支持组的个人访问&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;个人必须 on-call 才能获得访问权限。可以通过检查事件响应服务（例如 PagerDuty）中的时间表来确定通话状态&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;成功通过身份验证后会触发多因子身份验证（MFA）检查&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;他们必须使用 TLS 连接到基础设施或数据服务&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;最后，如果正在访问数据服务，则不允许进行全表扫描（例如，缺少 WHERE 或 LIMIT 子句的 SQL 请求最终将读取整个数据集）。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.6752136752136753&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/tMghG0NOfxdtJ2OCKT1wGtCS0hhfm2qrMBNicHaTnhqbJ9al42HvzUymzecu5Dy7StqGYJ6Ey4dZjOIWeIa7hgQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;468&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;隐私和数据保护&lt;/h2&gt;&lt;p&gt;The last policy shows an example of data governance involving data scrubbing:&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;If anyone from Marketing is accessing PII (social security number (SSN), credit card number (CCN), age), scrub the data before returning&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;If anyone is accessing PII using the Looker or Tableau services, also scrub the data&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;Scrubbing rules are defined by the specific type of the PII&lt;span&gt;&lt;span&gt;•&lt;/span&gt;For SSNs, scrub the first 5 digits&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;For CCNs, scrub the last  4 digits&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;For ages, scrub the last digit i.e., the requestor will know the age brackets but never the actual ages&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;最后一条策略显示了涉及数据清理的数据治理示例：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;如果市场营销人员正在访问 PII（社会保险号（SSN）、信用卡号（CCN）、年龄），先清洗数据然后再返回&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;如果有人正在使用 Looker 或 Tableau 服务访问 PII，同时清洗数据&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;清理规则由 PII 的特定类型定义&lt;span&gt;&lt;span&gt;•&lt;/span&gt;对于 SSN，清洗前 5 位数字&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;对于 CCN，清洗最后 4 位数字&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;对于年龄，请清洗最后一位数字，即请求者将知道年龄段，但从不知道实际年龄&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.6752136752136753&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/tMghG0NOfxdtJ2OCKT1wGtCS0hhfm2qrMBNicHaTnhqbJ9al42HvzUymzecu5Dy7StqGYJ6Ey4dZjOIWeIa7hgQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;468&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;概括&lt;/h2&gt;&lt;p&gt;我们看到，对于高度动态的云环境，VPN 和堡垒主机不足以作为高效云环境中的有效访问管理机制。一种新的访问管理体系结构，其重点是不可否认的用户身份，短暂的证书或令牌以及集中的细粒度授权引擎，可有效解决 VPN 和堡垒主机无法解决的难题。除了为访问关键基础设施和数据服务的用户提供全面的安全性之外，该体系结构还可以帮助组织实现其审核、合规性、隐私和保护目标。&lt;/p&gt;&lt;p&gt;我们还讨论了该架构的参考实现，其中使用了以开发人员为中心的著名开源解决方案，例如 Hashicorp Boundary 和 OPA 以及 Cyral（一种用于现代数据服务的快速且无状态的辅助工具）。他们一起可以在云上提供细粒度且易于使用的访问管理解决方案。&lt;/p&gt;&lt;h2&gt;关于作者&lt;/h2&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1.1764705882352942&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/tMghG0NOfxdtJ2OCKT1wGtCS0hhfm2qr6eUwaEjSpoBoLhJyxVXpoLKSAYcU7PE5cslya6YbJs058gzic3Hopicw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;85&quot; title=&quot;null&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Manav Mital&lt;/strong&gt;&lt;span&gt; 是 Cyral 的联合创始人兼首席执行官，Cyral 是首个为数据云提供可见性、访问控制和保护的云原生安全服务。Cyral 成立于 2018 年，与各种组织合作 - 从云原生初创企业到财富 500 强企业，因为它们采用 DevOps 文化和云技术来管理和分析数据。Manav 拥有 UCLA 的计算机科学硕士学位和坎普尔的印度理工学院的计算机科学学士学位。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;关于译者&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Addo Zhang&lt;/strong&gt; 云原生从业人员，爱好各种代码。更多翻译：&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5OTg2MTM0MQ==&amp;amp;mid=2247483953&amp;amp;idx=1&amp;amp;sn=db5e459165703864a5049f206c07ecaa&amp;amp;scene=21#wechat_redirect&quot; title=&quot;分布式系统在 Kubernetes 上的进化&quot; data-linktype=&quot;2&quot;&gt;分布式系统在 Kubernetes 上的进化&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5OTg2MTM0MQ==&amp;amp;mid=2247483991&amp;amp;idx=1&amp;amp;sn=7ba53e6f86d52c638792164aafe09e45&amp;amp;scene=21#wechat_redirect&quot; title=&quot;2021 年及未来的云原生预测&quot; data-linktype=&quot;2&quot;&gt;2021 年及未来的云原生预测&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5OTg2MTM0MQ==&amp;amp;mid=2247483791&amp;amp;idx=1&amp;amp;sn=9af4a9abc9ae9d6ac2c9156f821af153&amp;amp;scene=21#wechat_redirect&quot; title=&quot;应用架构：为什么要随着市场演进&quot; data-linktype=&quot;2&quot;&gt;应用架构：为什么要随着市场演进&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4&gt;引用链接&lt;/h4&gt;&lt;p&gt;&lt;code&gt;[1]&lt;/code&gt; A Reference Architecture for Fine-Grained Access Management on the Cloud: &lt;em&gt;https://www.infoq.com/articles/access-management-reference-architecture/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[2]&lt;/code&gt; Auth0: &lt;em&gt;https://auth0.com/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[3]&lt;/code&gt; Okta: &lt;em&gt;https://www.okta.com/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[4]&lt;/code&gt; Hashicorp 边界: &lt;em&gt;https://www.boundaryproject.io/&lt;/em&gt;&lt;br/&gt;&lt;code&gt;[5]&lt;/code&gt; Cyral: &lt;em&gt;https://cyral.com/&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MjM5OTg2MTM0MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/tMghG0NOfxdtJ2OCKT1wGtCS0hhfm2qr9mAUR2IdaDxWY7PcU4OuHGMztkvSKZ14hsO5F0gjMbAanvYdZa63Ew/0?wx_fmt=png&quot; data-nickname=&quot;云原生指北&quot; data-alias=&quot;sevenfeet&quot; data-signature=&quot;云原生爱好者，撸各种代码。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0f6dc339f56afbea98bf9a12bdfc93d9</guid>
<title>运行 3000 次都不出错的 MIT 6.824 Raft 实验</title>
<link>https://toutiao.io/k/5g18w9p</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;em data-darkmode-color-16136621561195=&quot;rgb(128, 157, 185)&quot; data-darkmode-original-color-16136621561195=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)&quot; data-style=&quot;max-width: 100%; color: rgb(52, 73, 94); font-family: &amp;quot;Source Sans Pro&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Arial, sans-serif; font-size: 16px; letter-spacing: 0.544px; text-align: start; white-space: normal; caret-color: rgb(52, 73, 94); background-color: rgb(255, 255, 255); text-size-adjust: auto; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__1&quot; data-darkmode-color-16165880998151=&quot;rgb(128, 157, 185)&quot; data-darkmode-original-color-16165880998151=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)&quot; data-darkmode-bgcolor-16165880998151=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16165880998151=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16178855864317=&quot;rgb(128, 157, 185)&quot; data-darkmode-original-color-16178855864317=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)&quot; data-darkmode-bgcolor-16178855864317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16178855864317=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16195315735269=&quot;rgb(128, 157, 185)&quot; data-darkmode-original-color-16195315735269=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)&quot; data-darkmode-bgcolor-16195315735269=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16195315735269=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;strong data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(0, 0, 0)&quot; data-style=&quot;max-width: 100%; font-size: medium; letter-spacing: 0.544px; color: rgb(0, 0, 0); font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__2&quot; data-darkmode-color-16094149065186=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(0, 0, 0)&quot; data-darkmode-color-16107273892940=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16107273892940=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-color-16121907968588=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16121907968588=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16121907968588=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16121907968588=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16136621561195=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16136621561195=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16136621561195=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16136621561195=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16165880998151=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16165880998151=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16165880998151=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16165880998151=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16178855864317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16178855864317=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16178855864317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16178855864317=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16195315735269=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16195315735269=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16195315735269=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16195315735269=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;span data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(136, 136, 136)&quot; data-darkmode-color-16094149065186=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(136, 136, 136)&quot; data-darkmode-color-16107273892940=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16107273892940=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-color-16121907968588=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16121907968588=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16121907968588=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16121907968588=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16136621561195=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16136621561195=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16136621561195=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16136621561195=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16165880998151=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16165880998151=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16165880998151=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16165880998151=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16178855864317=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16178855864317=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16178855864317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16178855864317=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16195315735269=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16195315735269=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16195315735269=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16195315735269=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;span data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(217, 33, 66)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(217, 33, 66)&quot; data-darkmode-color-16094149065186=&quot;rgb(217, 33, 66)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(217, 33, 66)&quot; data-darkmode-color-16107273892940=&quot;rgb(217, 33, 66)&quot; data-darkmode-original-color-16107273892940=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(217, 33, 66)&quot; data-darkmode-color-16121907968588=&quot;rgb(217, 33, 66)&quot; data-darkmode-original-color-16121907968588=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(217, 33, 66)&quot; data-darkmode-bgcolor-16121907968588=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16121907968588=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16136621561195=&quot;rgb(217, 33, 66)&quot; data-darkmode-original-color-16136621561195=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(217, 33, 66)&quot; data-darkmode-bgcolor-16136621561195=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16136621561195=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16165880998151=&quot;rgb(217, 33, 66)&quot; data-darkmode-original-color-16165880998151=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(217, 33, 66)&quot; data-darkmode-bgcolor-16165880998151=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16165880998151=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16178855864317=&quot;rgb(217, 33, 66)&quot; data-darkmode-original-color-16178855864317=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(217, 33, 66)&quot; data-darkmode-bgcolor-16178855864317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16178855864317=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16195315735269=&quot;rgb(217, 33, 66)&quot; data-darkmode-original-color-16195315735269=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(217, 33, 66)&quot; data-darkmode-bgcolor-16195315735269=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16195315735269=&quot;#fff|rgb(255, 255, 255)&quot;&gt;▲ &lt;/span&gt;&lt;span data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(2, 30, 170)&quot; data-style=&quot;max-width: 100%; color: rgb(2, 30, 170); text-align: center; font-size: 11px; letter-spacing: 1px; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__3&quot; data-darkmode-color-16094149065186=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(2, 30, 170)&quot; data-darkmode-color-16107273892940=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16107273892940=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(2, 30, 170)&quot; data-darkmode-color-16121907968588=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16121907968588=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(2, 30, 170)&quot; data-darkmode-bgcolor-16121907968588=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16121907968588=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16136621561195=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16136621561195=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(2, 30, 170)&quot; data-darkmode-bgcolor-16136621561195=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16136621561195=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16165880998151=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16165880998151=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(2, 30, 170)&quot; data-darkmode-bgcolor-16165880998151=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16165880998151=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16178855864317=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16178855864317=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(2, 30, 170)&quot; data-darkmode-bgcolor-16178855864317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16178855864317=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16195315735269=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16195315735269=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)|rgb(2, 30, 170)&quot; data-darkmode-bgcolor-16195315735269=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16195315735269=&quot;#fff|rgb(255, 255, 255)&quot;&gt;点击上方&quot;多颗糖&quot;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;em data-darkmode-color-16136621561195=&quot;rgb(128, 157, 185)&quot; data-darkmode-original-color-16136621561195=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)&quot; data-style=&quot;max-width: 100%; color: rgb(52, 73, 94); font-family: &amp;quot;Source Sans Pro&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Arial, sans-serif; font-size: 16px; letter-spacing: 0.544px; text-align: start; white-space: normal; caret-color: rgb(52, 73, 94); background-color: rgb(255, 255, 255); text-size-adjust: auto; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__4&quot; data-darkmode-color-16165880998151=&quot;rgb(128, 157, 185)&quot; data-darkmode-original-color-16165880998151=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)&quot; data-darkmode-bgcolor-16165880998151=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16165880998151=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16178855864317=&quot;rgb(128, 157, 185)&quot; data-darkmode-original-color-16178855864317=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)&quot; data-darkmode-bgcolor-16178855864317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16178855864317=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16195315735269=&quot;rgb(128, 157, 185)&quot; data-darkmode-original-color-16195315735269=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)&quot; data-darkmode-bgcolor-16195315735269=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16195315735269=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;strong data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(0, 0, 0)&quot; data-style=&quot;max-width: 100%; font-size: medium; letter-spacing: 0.544px; color: rgb(0, 0, 0); font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__5&quot; data-darkmode-color-16094149065186=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(0, 0, 0)&quot; data-darkmode-color-16107273892940=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16107273892940=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-color-16121907968588=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16121907968588=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16121907968588=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16121907968588=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16136621561195=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16136621561195=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16136621561195=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16136621561195=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16165880998151=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16165880998151=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16165880998151=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16165880998151=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16178855864317=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16178855864317=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16178855864317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16178855864317=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16195315735269=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16195315735269=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16195315735269=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16195315735269=&quot;#fff|rgb(255, 255, 255)&quot;&gt;&lt;span data-darkmode-bgcolor-16068282692859=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16068282692859=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16068282692859=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16068282692859=&quot;rgb(136, 136, 136)&quot; data-darkmode-color-16094149065186=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16094149065186=&quot;rgb(136, 136, 136)&quot; data-darkmode-color-16107273892940=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16107273892940=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-color-16121907968588=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16121907968588=&quot;#fff|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16121907968588=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16121907968588=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16136621561195=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16136621561195=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16136621561195=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16136621561195=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16165880998151=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16165880998151=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16165880998151=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16165880998151=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16178855864317=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16178855864317=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16178855864317=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16178855864317=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16195315735269=&quot;rgb(39, 84, 255)&quot; data-darkmode-original-color-16195315735269=&quot;#fff|rgb(52, 73, 94)|rgb(52, 73, 94)|rgb(0, 0, 0)|rgb(2, 30, 170)&quot; data-darkmode-bgcolor-16195315735269=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16195315735269=&quot;#fff|rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; color: rgb(2, 30, 170); text-align: center; font-size: 11px; letter-spacing: 1px; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__6&quot;&gt;关注公众号&lt;/span&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;大家好，最近忙着“大动作”（就快和大家见面了），更新频率低了一些，在此感谢没有取关的每个读者。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;前几天在分布式系统交流群里，小伙伴们都在讨论 6.824 的 raft 实验批量测试 2000 次以上总会出错，错误出在 &lt;code&gt;Figure8Unreliable&lt;/code&gt; 和 &lt;code&gt;UnreliableChurn2&lt;/code&gt; 这两个测试。我自己其实也遇到了这个问题，这里记录下我自己的解决思路。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;能到这步，首先默认你的程序已经没有大的问题，只是在上千次的测试中会有选举不出来（活锁问题）或提交的日志冲突问题。如果连单次测试都还过不去，请先移步《&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIwODA2NjIxOA==&amp;amp;mid=2247484255&amp;amp;idx=1&amp;amp;sn=bb01620f8e8dbb81d29b462604662972&amp;amp;chksm=9709809aa07e098c3dc0ebcc7b85cf3878cdee5571a018f95673bf204b5d6c7d54d44c478d88&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;【MIT 6.824】学习笔记 5: 2021 Raft 实验实现细节&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;【MIT 6.824】学习笔记 5: 2021 Raft 实验实现细节&lt;/a&gt;》&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;上面两个测试说白了，就是把网络搞得很乱，写一堆日志，然后给你 10 秒时间，没选出新的 Leader 就会出错。主要有两种错误：&lt;code&gt;failed to reach agreement&lt;/code&gt; 或者 &lt;code&gt;apply error&lt;/code&gt;&lt;/p&gt;&lt;p&gt;这两个问题分别用下面两种思路解决。&lt;/p&gt;&lt;h2&gt;选举超时不能随便重置&lt;/h2&gt;&lt;p&gt;如果仔细阅读过 Students&#x27; Guide to Raft，其实里面很清楚写着，选举超时时间只能在下面三种情况下重置：&lt;/p&gt;&lt;p&gt;原文：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;you should only restart your election timer if a) you get an AppendEntries RPC from the current leader (i.e., if the term in the AppendEntries arguments is outdated, you should not reset your timer); b) you are starting an election; or c) you grant a vote to another peer.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这个问题其实很容易理解，主要容易错在，代码改着改着，就会不小心搞错了选举时间重置的位置，然后给后面的排查埋下了坑。&lt;/p&gt;&lt;p&gt;检查一下你是否胡乱重置了这个时间，我和群里另一位小伙伴的问题就出现在第三种情况。&lt;/p&gt;&lt;h2&gt;正确处理 rpc 响应&lt;/h2&gt;&lt;p&gt;处理 rpc 响应的时候也要小心，收到 rpc 响应的时候，如果 &lt;code&gt;currentTerm != args.Term&lt;/code&gt; 了，这次 rpc 就要丢掉不能用了。&lt;/p&gt;&lt;p&gt;当然，如果节点角色已经变了，那也要忽略掉这次 rpc 响应。&lt;/p&gt;&lt;h2&gt;总结&lt;/h2&gt;&lt;p&gt;调试这个问题主要是要细心，关注细节，多读几遍：https://thesquareplanet.com/blog/students-guide-to-raft/&lt;/p&gt;&lt;p&gt;进行批量测试的脚本在这里：https://gist.github.com/jonhoo/f686cacb4b9fe716d5aa&lt;/p&gt;&lt;p&gt;使用方法是：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;./go-test-many.sh 测试次数 并行数&lt;span&gt;(&lt;/span&gt;默认是 CPU 个数&lt;span&gt;)&lt;/span&gt; 哪个测试&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如要测试 2C 这个测试 2000 次，并行 8 个测试。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;./go-test-many.sh 2000 8 2C&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;又比如单独测试 &lt;code&gt;TestFigure8Unreliable2C&lt;/code&gt; 2000 次。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;./go-test-many.sh 2000 8 TestFigure8Unreliable2C&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;相关阅读&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;欢迎关注我的公众号：&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIwODA2NjIxOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA0g3RQ9bRYaJib92ovwsSB9pPup1lt5cB24cJVJia1dc3Nr2kFSBHsJq5HL9DcLhoAGribSBvHU7ZzjA/0?wx_fmt=png&quot; data-nickname=&quot;多颗糖&quot; data-alias=&quot;duoketang&quot; data-signature=&quot;分布式系统和个人成长。我想要说的，前人们都说过了。&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a25178219961e14fba20107b31323d87</guid>
<title>排查 Dubbo 接口重复注销问题，我发现了一个巧妙的设计</title>
<link>https://toutiao.io/k/bllxzxj</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI5NjE2MDQwNg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/sz_mmbiz_png/xacdaKuBM0R19lB7JoT94iah3micefMU9jTG9ibib690ia5q2NC2vlTXzxtNAy9M1mLwysbyj6WI2RWLNEA3M99prJw/0?wx_fmt=png&quot; data-nickname=&quot;捉虫大师&quot; data-alias=&quot;&quot; data-signature=&quot;中间件开发，专注后端，偶尔跑题，不是标题党，文章朴素，欢迎关注。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;背景&lt;span/&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我在公司内负责&lt;code&gt;自研的dubbo注册中心&lt;/code&gt;相关工作，群里经常接到业务方反馈dubbo&lt;code&gt;接口注销&lt;/code&gt;报错。经排查，确定是同一个接口调用了两次注销接口导致，由于我们的注册中心注销接口不能重复调用，调用第二次会因为实例已经注销而报&lt;code&gt;实例找不到&lt;/code&gt;的错误。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然这个报错仅会打印一条错误日志，不影响业务，但本着 &lt;strong&gt;follow through&lt;/strong&gt;的精神，我决定还是一探究竟，更何况重复注销也增加了应用的结束时间，影响了发布回滚速度。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;问题复现&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;拿到业务方的dubbo版本，基于开源&lt;code&gt;2.7.3&lt;/code&gt;内部定制的一个版本，该版本修改主要涉及安全漏洞修复以及一些业务适配，写了个demo跑起来，然后&lt;code&gt;kill&lt;/code&gt;，发现果然报错了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了确定不是内部修改导致的问题，用&lt;strong&gt;开源的2.7.3&lt;/strong&gt;版本再次测试，发现还是报错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同时为了确定这是一个bug，我将dubbo版本修改为&lt;strong&gt;2.7.7&lt;/strong&gt;做测试，发现该版本不再报错。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说明了重复注销至少是开源dubbo 2.7.3的一个bug，在更高的2.7.7版本中已经被修复。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是有了解决方案：&lt;strong&gt;升级dubbo&lt;/strong&gt;，但如果这么简单就没有这篇文章了。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;内部的dubbo已经做了修改，想升级得把改动merge到新版本，比较费劲&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;就算升级了内部的dubbo版本，也不可能这么快速推动业务方升级&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以应该首先找到bug是哪里导致的，其次看注册中心的扩展是否可以修复这个问题，如果不能修复，就只能在内部的dubbo版本中修复该问题。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;问题排查&lt;span/&gt;&lt;/h3&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;怀疑ShutdownHook&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于这几天研究过ShutdownHook（点击查看原文跳转《ShutdownHook原理》），第一时间怀疑ShutdownHook可能有问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;dubbo 2.7.3代码有关ShutdownHook的实现在&lt;code&gt;DubboShutdownHook类&lt;/code&gt;，顺着代码梳理出如下关系&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.25390625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/xacdaKuBM0QHv2kEk22pGpwb9zwvSwiaKoEKBSQMZ9C105W66BuVb4OibbU3GE6icKsb613GibLxeiaCa6KnbTicuJow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;br/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到dubbo本身和spring都注册了ShutdownHook，更加怀疑这里是不是ShutdownHook注册重复了。于是debug看看是否是注册重复了，这里给一个小经验，&lt;code&gt;IntelliIDEA&lt;/code&gt;调试ShutdownHook执行时，要手动&lt;code&gt;kill&lt;/code&gt;进程才会触发debug，点IDE上的关闭按钮不会触发&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/xacdaKuBM0QHv2kEk22pGpwb9zwvSwiaKib3xicN3QII6YM9hkcjGhEjgb12TNo7L4GIQvicpqU9F3QlcFRnsKvERQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-ratio=&quot;0.2037037037037037&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在&lt;code&gt;DubboShutdownHook.doDestroy&lt;/code&gt;打上断点，debug发现只会执行一次，这说明spring和dubbo的ShutdownHook只会注册一次，这是怎么实现的呢？经过很多次测试，发现了dubbo一个很牛逼的设计。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;DubboShutdownHook中有&lt;code&gt;register&lt;/code&gt;和&lt;code&gt;unregister&lt;/code&gt;方法，分别是注册和注销ShutdownHook，在这两个方法上都打上断点，在程序启动时发现这样一个有趣的执行顺序：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4078125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/xacdaKuBM0QHv2kEk22pGpwb9zwvSwiaKTfaHqJmQM6bspv6TqIGJCS4w3f7WsEeIK1Iga0zafr1mIt5P9ImjhA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总结一下是dubbo本身注册了ShutdownHook，但如果用到了spring框架，spring框架在初始化时注销了dubbo注册的ShutdownHook，这样就只保留了spring的ShutdownHook，真是秒啊！实现的代码只有这短短几行&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;addApplicationContext&lt;/span&gt;&lt;span&gt;(ApplicationContext context)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    CONTEXTS.add(context);&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (context &lt;span&gt;instanceof&lt;/span&gt; ConfigurableApplicationContext) {&lt;br/&gt;        ((ConfigurableApplicationContext) context).registerShutdownHook();&lt;br/&gt;        DubboShutdownHook.getDubboShutdownHook().unregister();&lt;br/&gt;    }&lt;br/&gt;    BeanFactoryUtils.addApplicationListener(context, SHUTDOWN_HOOK_LISTENER);&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是怀疑的ShutdownHook问题被证明没有任何问题了。&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;从注销堆栈继续排查&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;能稳定复现的问题一定很好排查，借助IDE的debug来看两次注销的调用堆栈，在注册中心扩展的unregister方法处加断点，可以看到如下两次来源不同的堆栈信息&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.0644654088050314&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/xacdaKuBM0QHv2kEk22pGpwb9zwvSwiaK4wOphfvQ5zibUEdHMibiayARARMI6gFcOD9R1TPgSS6R8SblSuaAl3S1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1272&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.8078125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/xacdaKuBM0QHv2kEk22pGpwb9zwvSwiaKy5iaUib9kCGXBd0ZXBrrSDVVz7CDmXqP6LMjpALicVICSDWV7tlja40Pw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代码中体现是&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.54765625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/xacdaKuBM0QHv2kEk22pGpwb9zwvSwiaKticxrYicTxyiaH4csujuznnu9NK40XgIC9G4znsz7n46YdGwIJfahQO2A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是说一次ShutdownHook执行，触发了两次注销。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来就比较好排查了，一步一步debug，这里解释下&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;AbstractRegistryFactory.destroyAll()&lt;/code&gt;是销毁所有注册中心，销毁时会调研注册中心的注销接口&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;destroyProtocols&lt;/code&gt;是销毁所有的&lt;code&gt;protocol&lt;/code&gt;，注册中心的protocol在销毁时拿到registry，然后调用了registry的注销接口&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么dubbo 2.7.7是如何避免这个问题的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在dubbo 2.7.7的代码中，注册中心的protocol在销毁时获取注册中心稍微增加了点代码&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.73828125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/xacdaKuBM0QHv2kEk22pGpwb9zwvSwiaK7gH36LqpQOAmz54at4zZ7QQW9SpdicoIhbBNGNiayzv3qdLicvtbUsojg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原来在注册中心被销毁后，destroyed变量被置为true，从而在registry protocol再次获取注册中心时，已经拿不到了原先的注册中心了，拿到的是一个空的注册中心，调用注销，自然没有什么效果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;追溯了下github，这次PR是&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;https://github.com/apache/dubbo/pull/5450&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个修复在&lt;code&gt;2.7.5&lt;/code&gt;就已经修复了&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;dubbo重复注销问题存在于2.7.0 ~ 2.7.4版本，2.7.5修复，zk注册中心不会报错，可能无法感知，但它确实存在，也会拖慢应用的关闭速度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过追查发现，其实该问题可以在注册中心的扩展中解决，让registry的destroy只能被调用一次&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;遇到无论多小的问题，有空都去钻研下，你会收货一些新知识，比如这次dubbo中ShutdownHook如此巧妙的设计&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;专注后端的中间件开发，关注我，给你最纯粹的技术文章&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>34558107d35f3390e21ca3d9ba5424fd</guid>
<title>Prometheus + Grafana 快速上手</title>
<link>https://toutiao.io/k/09egmu8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Prometheus&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt; + &lt;span&gt;Grafana&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt; 快速上手，监控主机的 CPU, GPU, MEM, IO 等状态。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;前提&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;客户端&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Node Exporter&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用于采集 UNIX 内核主机的数据，&lt;span&gt;这里下载&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;并解压：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;wget https://github.com/prometheus/node_exporter/releases/download/v1.1.2/node_exporter-1.1.2.linux-amd64.tar.gz&lt;br/&gt;tar xvfz node_exporter-1.1.2.linux-amd64.tar.gz&lt;br/&gt;&lt;span&gt;cd&lt;/span&gt; node_exporter-1.1.2.linux-amd64&lt;br/&gt;nohup ./node_exporter &amp;amp;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看数据：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;$ curl http://localhost:9100/metrics&lt;br/&gt;&lt;span&gt;# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# TYPE go_gc_duration_seconds summary&lt;/span&gt;&lt;br/&gt;go_gc_duration_seconds{quantile=&lt;span&gt;&quot;0&quot;&lt;/span&gt;} 0&lt;br/&gt;go_gc_duration_seconds{quantile=&lt;span&gt;&quot;0.25&quot;&lt;/span&gt;} 0&lt;br/&gt;go_gc_duration_seconds{quantile=&lt;span&gt;&quot;0.5&quot;&lt;/span&gt;} 0&lt;br/&gt;...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;DCGM Exporter&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用于采集 NVIDIA GPU 的数据，以 &lt;span&gt;Docker 镜像&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;运行：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;docker run -d --restart=always --gpus all -p 9400:9400 nvidia/dcgm-exporter&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看数据：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;$ curl localhost:9400/metrics&lt;br/&gt;&lt;span&gt;# HELP DCGM_FI_DEV_SM_CLOCK SM clock frequency (in MHz).&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# TYPE DCGM_FI_DEV_SM_CLOCK gauge&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# HELP DCGM_FI_DEV_MEM_CLOCK Memory clock frequency (in MHz).&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# TYPE DCGM_FI_DEV_MEM_CLOCK gauge&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# HELP DCGM_FI_DEV_MEMORY_TEMP Memory temperature (in C).&lt;/span&gt;&lt;br/&gt;...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;服务器&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Prometheus&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置 &lt;code&gt;~/prometheus.yml&lt;/code&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;global:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;scrape_interval:&lt;/span&gt; &lt;span&gt;15s&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;scrape_configs:&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# Node Exporter&lt;/span&gt;&lt;br/&gt;&lt;span&gt;-&lt;/span&gt; &lt;span&gt;job_name:&lt;/span&gt; &lt;span&gt;node&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;static_configs:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;-&lt;/span&gt; &lt;span&gt;targets:&lt;/span&gt; &lt;span&gt;[&#x27;192.167.200.91:9100&#x27;]&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# DCGM Exporter&lt;/span&gt;&lt;br/&gt;&lt;span&gt;-&lt;/span&gt; &lt;span&gt;job_name:&lt;/span&gt; &lt;span&gt;dcgm&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;static_configs:&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;-&lt;/span&gt; &lt;span&gt;targets:&lt;/span&gt; &lt;span&gt;[&#x27;192.167.200.91:9400&#x27;]&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行 Docker 镜像：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;docker run -d --restart=always \&lt;br/&gt;-p 9090:9090 \&lt;br/&gt;-v ~/prometheus.yml:/etc/prometheus/prometheus.yml \&lt;br/&gt;prom/prometheus&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;访问 http://localhost:9090/ ：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.35&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJA0pPTCKMFlvFmbGCppwMiaqIHTkTdY3hCd1ru3y2FevI3wjnpMlbJYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;访问 http://localhost:9090/targets ：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.41833333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJUlAgRXe6ia3PicM0c1BXlFrxRLUTl0mtXUP6A4icNnWHtc3KHDYyvzISA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Grafana&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行 Docker 镜像：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;docker run -d --restart=always -p 3000:3000 grafana/grafana&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;访问 http://localhost:3000/ ：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJ5pkdW0MeN3vwicicQXDsGLETNVLJoz57Z6oVxcRR5ECNdX6zRiaGLqwyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以 &lt;code&gt;admin/admin&lt;/code&gt; 登录。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;新增数据源&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJVV7PxtaicQtG7YmMqyB9nOoCY6yiaDpmiaDCicbibTcQ4Cdkn5KoNZy1GYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;新增 &lt;code&gt;Prometheus&lt;/code&gt;：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJUTSczMTFQrrwVMYNlerqE4ia7ibbmzYdkhWEiaq2XJGvMiabyviboOVTL9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;点击 &lt;code&gt;Save &amp;amp; Test&lt;/code&gt;：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJxUmYdEvjhrAcobjlNzCjTOicd3w04BNicnib3hgEDQgQOC9diaibbo6DxJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;导入仪表盘&lt;span/&gt;&lt;/h4&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJYapMGVTvwI0UKia5QTmicfrzT7QV5m4YLSNhBGGCfVBAaKneQRnLRYyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;导入 &lt;code&gt;8919&lt;/code&gt; &lt;span&gt;Node Exporter for Prometheus Dashboard by StarsL.cn&lt;/span&gt;&lt;sup&gt;[6]&lt;/sup&gt;：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6166666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJHngJgicReDHX3rw8icbjz44pTScOiaMAWoURSETKK6ic4ia3ZLstyc66ICA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看仪表盘：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6675&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJqUHb2fY4Z7aUN97rdnjSYlDXETx00H6hUWVQhDC57LPMbRhNOLBIqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;导入 &lt;code&gt;12239&lt;/code&gt; &lt;span&gt;NVIDIA DCGM Exporter Dashboard by nvidia&lt;/span&gt;&lt;sup&gt;[7]&lt;/sup&gt;：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6166666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJUVbpzBicfLSCfzVLg58nIYrMGEuWI8DLGY2QV9tQxzEia0NoKTbIZcTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看仪表盘：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6675&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CsHokQw4jYf3iaAib8jDXnrdDOq4xASBfJaThtibpghFticVlggPJu28jju88vz4KCX67HlQHQZ289kvGicRsErNwkA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2400&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;参考&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Start Prometheus&lt;/span&gt;&lt;sup&gt;[8]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Prometheus Docs&lt;/span&gt;&lt;sup&gt;[9]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Configuration&lt;/span&gt;&lt;sup&gt;[10]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Node Exporter&lt;/span&gt;&lt;sup&gt;[11]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;DCGM Exporter&lt;/span&gt;&lt;sup&gt;[12]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Grafana Docs&lt;/span&gt;&lt;sup&gt;[13]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Dashboards&lt;/span&gt;&lt;sup&gt;[14]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Plugins&lt;/span&gt;&lt;sup&gt;[15]&lt;/sup&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;脚注&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;Prometheus: &lt;em&gt;https://github.com/prometheus/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;Grafana: &lt;em&gt;https://github.com/grafana/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;Docker: &lt;em&gt;https://docs.docker.com/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;这里下载: &lt;em&gt;https://prometheus.io/download/#node_exporter&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;p&gt;Docker 镜像: &lt;em&gt;https://hub.docker.com/r/nvidia/dcgm-exporter&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[6]&lt;/span&gt;&lt;p&gt;Node Exporter for Prometheus Dashboard by StarsL.cn: &lt;em&gt;https://grafana.com/grafana/dashboards/8919&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[7]&lt;/span&gt;&lt;p&gt;NVIDIA DCGM Exporter Dashboard by nvidia: &lt;em&gt;https://grafana.com/grafana/dashboards/12239&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[8]&lt;/span&gt;&lt;p&gt;Start Prometheus: &lt;em&gt;https://github.com/ikuokuo/start-prometheus&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[9]&lt;/span&gt;&lt;p&gt;Prometheus Docs: &lt;em&gt;https://prometheus.io/docs/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[10]&lt;/span&gt;&lt;p&gt;Configuration: &lt;em&gt;https://prometheus.io/docs/prometheus/latest/configuration/configuration/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[11]&lt;/span&gt;&lt;p&gt;Node Exporter: &lt;em&gt;https://github.com/prometheus/node_exporter&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[12]&lt;/span&gt;&lt;p&gt;DCGM Exporter: &lt;em&gt;https://github.com/NVIDIA/gpu-monitoring-tools#dcgm-exporter&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[13]&lt;/span&gt;&lt;p&gt;Grafana Docs: &lt;em&gt;https://grafana.com/docs/grafana/latest/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[14]&lt;/span&gt;&lt;p&gt;Dashboards: &lt;em&gt;https://grafana.com/grafana/dashboards&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[15]&lt;/span&gt;&lt;p&gt;Plugins: &lt;em&gt;https://grafana.com/grafana/plugins/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA4NTU1OTMwMQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytp9eiaO3zQL2A6S35JlOVfxuVHias08HZc7ciaCgxP08J8sk5LbUZuHOVRHTCz0mXI6mX5nicc9bJVa2w/0?wx_fmt=png&quot; data-nickname=&quot;太空编程&quot; data-alias=&quot;spacexcode&quot; data-signature=&quot;分享精彩，码上快乐，JavaScript已然上天，有朝一日实现太空编程！&quot; data-from=&quot;0&quot;/&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>