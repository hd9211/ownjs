<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>0357111b40fa7016f734ea0f7f02ff82</guid>
<title>珍爱生命，珍惜健康</title>
<link>https://toutiao.io/k/78bhd5y</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;h2&gt;引言&lt;/h2&gt;&lt;p&gt;原文链接：https://yunsonbai.top/2021/01/05/love-life/&lt;br/&gt;某多多事件的思考：不管你从事什么行业都希望你能珍爱生命，珍惜健康，爱惜自己的身体。&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;h2&gt;故事的起源&lt;/h2&gt;&lt;p&gt;最近这两天几乎被某多多的员工猝死事件刷了屏，各种感慨和惋惜，正是美好年华，未来有着无限的可能，然而却止住了前进的脚步，静静的去了别的世界。这值得我们思考，最近几年类似的事情层出不断，为什么一直会有？我们到底该怎么选择？&lt;/p&gt;&lt;h2&gt;该不该奋斗&lt;/h2&gt;&lt;p&gt;&lt;span&gt;这貌似是一句废话，怎么可能不奋斗呢？我们学习知识技能不就是为了更好的做事，创造更高的价值，收获更多的果实么？如果不奋斗何以实现我们的抱负和理想呢？在简单的说就是名和利，追逐这些是没有错的，它能激发人的创造力，能&lt;/span&gt;使&lt;span&gt;我们过上更好的生活，问题来了，怎么奋斗呢？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img data-backh=&quot;155&quot; data-backw=&quot;344&quot; data-ratio=&quot;0.45058139534883723&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_svg/C6nnRGnPbvxRdPm2DIiaic8mf2CRS2o2W3GbcslKwI2aUGB3phPqsCfFHGA94MticicpM4UzkrcGiaSvhu8ibXu8nyYn2SGdczb1iac/640?wx_fmt=svg&quot; data-type=&quot;svg&quot; data-w=&quot;344&quot;/&gt;先从自身谈起，公司很多，工作方式也很多，我们努力的工作到底为了什么？是为了更好的生活的话，那你需要思考你的&lt;/span&gt;&lt;span&gt;工作方式，如果工作占据了一天60%的时间，甚至频繁的占据了你的休息时间，那么请问，你的生活在哪？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那如果是为了获得更多&lt;/span&gt;&lt;span&gt;的钱，生不生活无所谓，那接下来是没日没夜的干，看起来没有毛病，你干的多可能你就拿的多，只是可能，你首先需要弄明白你到底是拿到的空头支票还是实打实的支票。&lt;/span&gt;&lt;span&gt;另外，自己的身体要弄清楚，能不能抗的住没日没夜的工作呢？&lt;/span&gt;&lt;span&gt;即便你抗住了，从健康的角度讲，你的身体却承受了巨大的伤害，晚上正是养内脏，蓄精神的时候，你却让身体一直重负荷的工作，久而久之身体就埋下了”定时炸弹”，即便你拿到了实打实的支票，恐怕最后也不见得跟了你的姓。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;当然还有为了更高的正义的理想，那个已经脱离了生活和身体的范畴，精神层面的高尚的收益是无价的，这些人是我们的榜样，但是这次这次只说普通打工者。&lt;/p&gt;&lt;p&gt;还是要找到适合自己的工作方式，还要折中合适的工作时间，钱与生命和健康比起来，还是要选择生命和健康，这两样都是不可逆的，钱也换不来的，我们要尽可能的在保证生命和健康的同时，更好的创造价值，不能以牺牲两者去获取收益，你即便拿到了收益，它也不一定属于你，快的话归了别人，慢的话归了医院。但是我们也不能不去奋斗，不努力，了解易经的人都知道这两句，否极泰来，乐极生悲，延伸出来就是什么事情都有到极点而向反向而变的道理，所以要适中，要热爱工作，还要热爱我们的生命和健康，身体是工作的本钱，是创造一切价值的根基。&lt;/p&gt;&lt;p&gt;&lt;span&gt;不管怎么说，我们人是活的，事物是死的如果活的人被死的事物羁绊住，那多可悲，毕竟很多条路能通罗马不是？我们的选择很重要，尽量让选择服务你的健康。&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;请善待员工&lt;/h2&gt;&lt;p&gt;一个公司要发展，人是决定性因素。&lt;/p&gt;&lt;p&gt;该不该加班呢？还是要用易经的角度去看问题，世上没有绝对的事物，不能绝不加班，有些项目也好，想法也好，不抓紧时间干出来，很可能被超越，甚至整个公司走向没落，大河没水自然小河就干了。那就要加班，多多的加班，那更不行，人不是机器，长时间崩的太紧就会出问题，强度太大也会出问题，比如最近的某多多。&lt;/p&gt;&lt;p&gt;还是要适量、适中，两个人的活非要一个人去做，那这个人就会很累。高强度加班偶尔一次是可以理解的，持续作战的话，这个需要思考，你的员工受的住这种强度的工作么？他们可是人诶不是机器。&lt;/p&gt;&lt;p&gt;低强度持续加班也是无情的伤害了员工的健康，它会占据员工的生活时间，脑子里只会有工作，身心健康得不到保障，进而会影响身体健康。一周工作6天甚至7天，绝大部分时间都要加班，这就是压榨，员工会很累，企业为了效益，而累坏了员工。小河榨干了，大河迟早也会干。&lt;/p&gt;&lt;p&gt;真的就有这么多工作让员工加班么？非要在某个节日的最后时间想出创意然后没日没夜的加紧干么？非要让一两个人持续加班作战么？是不是需要调整人员，合理安排人员呢？&lt;/p&gt;&lt;p&gt;请企业善待自己的员工，给员工多一点自己的时间，早点下班不见得会减少效益，也许能更好的增收效益，员工有自己的时间，身心更健康，头脑更清晰，心态更乐观，效率肯定会增加，一个人总是昏昏沉沉的别说效率，还可能会造就很多问题拉慢效率，怎么可能持续发展呢？&lt;/p&gt;&lt;h2&gt;社会重视&lt;/h2&gt;&lt;p&gt;还是请社会上更多的人都能重视起来，大家联手解决现在的问题，能让企业和员工双赢。我在IT圈工作了有几年了，也不知道这股加班文化是从什么时候兴起的，这个行业不但有35周岁的担忧，还有充斥着各种加班文化，我不认为这个能持续下去，也不应该持续下去，应该找到一个合适的平衡点来平衡双方。&lt;/p&gt;&lt;p&gt;如果这种加班文化不能得到有效的改进，今天一个某多多，也许明天还会再出另外一个某多多，我们到底还要看到多少生命因为过劳而逝去，才能改正现在的工作方式，只能寄希望于社会，大家联起手来缓解或者解决这个问题。&lt;/p&gt;&lt;h2&gt;结语&lt;/h2&gt;&lt;p&gt;最后还是希望广大的工作者，珍爱自己的生命，珍惜自己的健康，不管你选择什么样的工作方式，请都别忘记这两样最宝贵的东西，请能灵活的处理健康和工作的矛盾，让我们的生命更灿烂，健康更持久。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>8a5d51c98acd02ccdc66ada61d5809d2</guid>
<title>可能是说的最分明的 IaaS, PaaS, FaaS, SaaS, MicroService, Serverless 了</title>
<link>https://toutiao.io/k/p2q8xl8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;&amp;#10;                col-lg-8 col-lg-offset-2&amp;#10;                col-md-10 col-md-offset-1&amp;#10;                post-container&quot;&gt;

&lt;h2 id=&quot;絮语&quot;&gt;絮语&lt;/h2&gt;
&lt;p&gt;如果说哪个行业最会起名字，那么互联网和软件行业称第二的话，估计没人敢称第一，比如什么复盘，赋能，组合拳，引爆点，泛用型，强化认知….
等等这些让你听了是耳濡目旋的，高大上，我完全不知道啥意思。其实在我看来都是新瓶装旧酒，换个马甲，包装了下、或者说就是不说人话，强行装X了。
今天我们来说说同样也是几个高大上的名词，但是他们其实很好理解，但又相互联系，所以经常让人傻傻分不清。&lt;/p&gt;

&lt;h2 id=&quot;云服务&quot;&gt;云服务&lt;/h2&gt;
&lt;p&gt;从以前还望而却步的云计算到现在我们哪哪都是云服务，云的概念已经从概念落到地上，说到云其实也是个不说人话的装X词，说白了就是我们以前和现在
不停使用的服务器罢了，云计算、云服务就是一种更优化的服务器功能，从只是个服务器硬件本身，升级到在这个硬件中集成了很多方便使用，或者开箱即用的
服务，不需要你知道怎么安装，怎么配置，你只要花钱买了，就开箱即用。即有硬件使用，也有服务提供，这就是云服务。如果云服务还有分类的话，那么就是
下面要说的几个既有区别又有联系的分类了，但是不管这些分类怎么变，名字怎么起，怎么高大上，其实在我看来，就是作为客户的你（软件开发者）花钱享受不同
服务，统统都是简化了你要做的事情，把复杂的事情简单了，花钱就行了。看着很憷人，其实很简单。&lt;/p&gt;

&lt;h2 id=&quot;iaas&quot;&gt;IaaS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;基础设施服务，Infrastructure as a service&lt;/strong&gt;，如果把软件开发比作厨师做菜，那么IaaS就是他人提供了厨房，炉子，锅等基础东西，
你自己使用这些东西，自己根据不同需要做出不同的菜。&lt;/p&gt;

&lt;h2 id=&quot;paas&quot;&gt;PaaS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;平台服务，Platform as a service&lt;/strong&gt;，还是做菜比喻，比如我做一个黄焖鸡米饭，除了提供基础东西外，那么PaaS还给你提供了现成剁好的鸡肉，土豆，辣椒，
你只要把这些东西放在一起，加些调料，用个小锅子在炉子上焖个20分钟就好了。&lt;/p&gt;

&lt;h2 id=&quot;faas&quot;&gt;FaaS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;函数服务，Function as a Service&lt;/strong&gt;，同样是做黄焖鸡米饭，这次我只提供酱油，色拉油，盐，醋，味精这些调味料，其他我不提供，你自己根据不同口味是多放点盐，
还是多放点醋，你自己决定。&lt;/p&gt;

&lt;h2 id=&quot;saas&quot;&gt;SaaS&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;软件服务，Software as a service&lt;/strong&gt;，同样还是做黄焖鸡米饭，这次是直接现成搞好的一个一个小锅的鸡，什么调料都好了，已经是个成品了，你只要贴个牌，直接卖出
去就行了，做多是在炉子上焖个20分钟。&lt;/p&gt;

&lt;h2 id=&quot;microservice&quot;&gt;MicroService&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;微服务，Micro service&lt;/strong&gt;，微服务是服务整体的细化，如果还是做黄焖鸡米饭，就好比一家供应商提供好了所有调料，一家供应商提供好了所有的鸡块等食材，你只要把这两
家供应商提供的东西做成黄焖鸡米饭就行了。&lt;/p&gt;

&lt;h2 id=&quot;serverless&quot;&gt;Serverless&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;无服务，Server less&lt;/strong&gt;，说是无，其实有，无服务就是一种没有感知的服务，你不需要知道它怎么实现的。如果还是做黄焖鸡米饭，无服务在这里可以比喻为买一袋已经调味好的调料包，你直接往黄焖鸡里倒
就行了，至于怎么调出的口味你不需要知道。&lt;/p&gt;

&lt;p&gt;下面就没有黄焖鸡了😄，我下面需要重点说说几个架构的实体&lt;/p&gt;

&lt;h2 id=&quot;serverless的历史&quot;&gt;Serverless的历史&lt;/h2&gt;
&lt;p&gt;Serverless的概念并不清晰，乍见之下，很容易让人混淆硬件服务器及软件上的服务与其所谓的“服务器”差别，在这里强调的所谓“无服务器”指的是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;我们的代码不会明确地部署在某些特定的软件或者硬件的服务器上。
运行代码托管的环境是由例如阿里云或者腾讯云这样的云计算厂商所提供&lt;/code&gt;。其实这听上去又很像Paas,SaaS,FaaS,不错，所以他们之间也充满了联系。&lt;/p&gt;

&lt;h2 id=&quot;serverless-与-paas&quot;&gt;Serverless 与 PaaS&lt;/h2&gt;
&lt;p&gt;PaaS是平台即为服务，Serverless相当于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;平台&lt;/code&gt;提供了更加细粒度和碎片化的服务，从这个层次来说，Serverless=PaaS。&lt;/p&gt;

&lt;h2 id=&quot;serverless-与-saas&quot;&gt;Serverless 与 SaaS&lt;/h2&gt;
&lt;p&gt;SaaS是软件本身即为服务，Serverless相当于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;软件&lt;/code&gt;提供了更加细粒度和碎片化的服务，因为Serverless也是一种软件，从这个层次来说，Serverless=SaaS。&lt;/p&gt;

&lt;h2 id=&quot;serverless-与-faas&quot;&gt;Serverless 与 FaaS&lt;/h2&gt;
&lt;p&gt;FaaS是函数即为服务，Serverless相当于提供的更加细粒度和碎片化服务是一种&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;函数&lt;/code&gt;，从这个层次来说，Serverless=FaaS。&lt;/p&gt;

&lt;h2 id=&quot;serverless-与-microservice&quot;&gt;Serverless 与 MicroService&lt;/h2&gt;
&lt;p&gt;MicroService是微服务，是一种专注于单一责任与功能的小型服务，Serverless相当于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;更加细粒度和碎片化&lt;/code&gt;的单一责任与功能小型服务，他们都是一种特定的小型服务，
从这个层次来说，Serverless=MicroService。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;这几个之间有这么多联系，但是从架构的定义范围也有个包含关系，PaaS &amp;gt; SaaS &amp;gt; FaaS &amp;gt; MicroService &amp;gt; Serverless&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;最后还有个-servicemesh&quot;&gt;最后还有个 ServiceMesh&lt;/h2&gt;
&lt;p&gt;ServiceMesh叫做服务网格，他是依存于MicroService微服务架构存在的，因为微服务之间需要通信，需要数据交换同步等操作。在没有ServiceMesh之前微服务的
通信，数据交换同步也存在，也有比较好的解决方案，如Spring Clould，OSS，Double这些，但他们有个最大的特点就是需要你写入代码中，而且需要深度的写
很多逻辑操作代码，这就是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;侵入式&lt;/code&gt;。而ServiceMesh最大的特点是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;非侵入式&lt;/code&gt;，不需要你写特定代码，只是在云服务的层面即可享受微服务之间的通信，数据交换同步等操作，
这里的代表如，docker+K8s，istio，linkerd等。 &lt;br/&gt;
从这里你也可以看出，所有新出来的高大上的东西，都是在简化你的工作。以前可能需要你造轮子才可以，然后到用现成的轮子就可以，再到连轮子你都看不见花钱就可以了🙂。&lt;/p&gt;



                &lt;hr/&gt;

                


                
                
                
                
                
                &lt;p id=&quot;gitalk-container&quot;/&gt;
                
                
                
                
                
                

                

            &lt;/div&gt;  

    
        
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2481877ac2cff62af8595e54c1af3ece</guid>
<title>一个 Golang 版本 XSS 过滤模块</title>
<link>https://toutiao.io/k/dvqbquo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;article class=&quot;markdown-body entry-content container-lg&quot; itemprop=&quot;text&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://godoc.org/github.com/feiin/go-xss&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/5bb3441aa4a8749b7c48dff5c13111d8cbe9d48287e271daf903ba1aea68774e/68747470733a2f2f676f646f632e6f72672f6769746875622e636f6d2f666569696e2f676f2d7873733f7374617475732e737667&quot; alt=&quot;GoDoc&quot; data-canonical-src=&quot;https://godoc.org/github.com/feiin/go-xss?status.svg&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://travis-ci.org/feiin/go-xss&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/d9f09b6c5b5b400cce1292bd54b41d6f3a2cc24c3c31a8136fd229a08ef3722d/68747470733a2f2f7472617669732d63692e6f72672f666569696e2f676f2d7873732e7376673f6272616e63683d6d61696e&quot; alt=&quot;Build Status&quot; data-canonical-src=&quot;https://travis-ci.org/feiin/go-xss.svg?branch=main&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://goreportcard.com/report/github.com/feiin/go-xss&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/5a99ba2e6a459fad08c084351c013241ea0b4a1e0b6ecaed1a323a14d54e2357/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f666569696e2f676f2d787373&quot; alt=&quot;Go Report Card&quot; data-canonical-src=&quot;https://goreportcard.com/badge/github.com/feiin/go-xss&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://coveralls.io/github/feiin/go-xss?branch=main&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/0c70cbc425855c26a56d24d0f173db2f5073625220b9d6704ae2c5200ec0f3ef/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f666569696e2f676f2d7873732f62616467652e7376673f6272616e63683d6d61696e&quot; alt=&quot;Coverage Status&quot; data-canonical-src=&quot;https://coveralls.io/repos/github/feiin/go-xss/badge.svg?branch=main&quot;/&gt;&lt;/a&gt;
&lt;a href=&quot;https://github.com/feiin/go-xss/blob/main/LICENSE&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/1ac8ef5cc788f34924cd23002b2c5a759101a11390d796b0a8ba216284f4dd70/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f666569696e2f676f2d787373&quot; alt=&quot;GitHub license&quot; data-canonical-src=&quot;https://img.shields.io/github/license/feiin/go-xss&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id=&quot;user-content-go-xss-根据白名单过滤-html防止-xss-攻击&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#go-xss-根据白名单过滤-html防止-xss-攻击&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;go-xss 根据白名单过滤 HTML(防止 XSS 攻击)&lt;/h1&gt;
&lt;p&gt;go-xss is a module used to filter input from users to prevent XSS attacks&lt;/p&gt;
&lt;p&gt;go-xss是一个用于对用户输入的内容进行过滤，以避免遭受 XSS 攻击的模块（（&lt;a href=&quot;http://baike.baidu.com/view/2161269.htm&quot; rel=&quot;nofollow&quot;&gt;什么是 XSS 攻击？&lt;/a&gt;）。主要用于论坛、博客、网上商店等等一些可允许用户录入页面排版、格式控制相关的 HTML 的场景，xss模块通过白名单来控制允许的标签及相关的标签属性，另外还提供了一系列的接口以便用户扩展，比其他同类模块更为灵活。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/feiin/go-xss/blob/main/README.en.md&quot;&gt;English&lt;/a&gt; | 中文文档&lt;/p&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-特性&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#特性&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;白名单控制允许的 HTML 标签及各标签的属性&lt;/li&gt;
&lt;li&gt;通过自定义处理函数，可对任意标签及其属性进行处理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-性能&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#性能&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;性能&lt;/h2&gt;
&lt;p&gt;speed: 24MB/s&lt;/p&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-安装&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#安装&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;安装&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;go get -u github.com/feiin/go-xss

&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-使用&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#使用&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;使用&lt;/h2&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; (
    &lt;span class=&quot;pl-s&quot;&gt;&quot;github.com/feiin/go-xss&quot;&lt;/span&gt;
)


&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;&amp;lt;a href=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;javascript:alert(/xss/)&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt; title=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;hi&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&amp;gt;link&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;pl-s1&quot;&gt;safeHtml&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;xss&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;FilterXSS&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt;,xss.&lt;span class=&quot;pl-smi&quot;&gt;XssOption&lt;/span&gt;{})&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;import&lt;/span&gt; (
    &lt;span class=&quot;pl-s&quot;&gt;&quot;github.com/feiin/go-xss&quot;&lt;/span&gt;
)

&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;&amp;lt;a href=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;javascript:alert(/xss/)&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt; title=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;hi&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&amp;gt;link&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;xss&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;NewXSS&lt;/span&gt;(xss.&lt;span class=&quot;pl-smi&quot;&gt;XssOption&lt;/span&gt;{})
&lt;span class=&quot;pl-s1&quot;&gt;safeHtml&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;Process&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-自定义过滤规则options&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#自定义过滤规则options&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;自定义过滤规则（options)&lt;/h2&gt;
&lt;p&gt;在调用 &lt;code&gt;xss&lt;/code&gt; 进行过滤时，可通过options参数来设置自定义规则：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;&amp;lt;a href=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;javascript:alert(/xss/)&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt; title=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;hi&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&amp;gt;link&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;

&lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; xss.&lt;span class=&quot;pl-smi&quot;&gt;XssOption&lt;/span&gt;{}
&lt;span class=&quot;pl-s1&quot;&gt;safeHtml&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;xss&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;FilterXSS&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt;,&lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果不想每次都传入一个 options 参数，可以创建一个 XSS 实例：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;&amp;lt;a href=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;javascript:alert(/xss/)&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt; title=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;hi&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&amp;gt;link&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; xss.&lt;span class=&quot;pl-smi&quot;&gt;XssOption&lt;/span&gt;{}

&lt;span class=&quot;pl-s1&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;xss&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;NewXSS&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt;)
&lt;span class=&quot;pl-s1&quot;&gt;safeHtml&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;x&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;Process&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-白名单&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#白名单&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;白名单&lt;/h3&gt;
&lt;p&gt;通过 WhiteList 来指定，格式类型为：&lt;code&gt;map[string][]string&lt;/code&gt;。不在白名单上的标签将被过滤，不在白名单上的属性也会被过滤。以下是示例：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-c&quot;&gt;// 只允许a标签，该标签只允许href, title, target这三个属性&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt;.&lt;span class=&quot;pl-c1&quot;&gt;WhiteList&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;map&lt;/span&gt;[&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;][]&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; {
&lt;span class=&quot;pl-s&quot;&gt;&quot;a&quot;&lt;/span&gt;:{&lt;span class=&quot;pl-s&quot;&gt;&quot;href&quot;&lt;/span&gt;,&lt;span class=&quot;pl-s&quot;&gt;&quot;title&quot;&lt;/span&gt;,&lt;span class=&quot;pl-s&quot;&gt;&quot;target&quot;&lt;/span&gt;},
}
&lt;span class=&quot;pl-c&quot;&gt;// 使用以上配置后，下面的HTML&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;// &amp;lt;a href=&quot;#&quot; onclick=&quot;hello()&quot;&amp;gt;&amp;lt;i&amp;gt;大家好&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;// 将被过滤为&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;// &amp;lt;a href=&quot;#&quot;&amp;gt;大家好&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;默认白名单参考 &lt;code&gt;xss.GetDefaultWhiteList()&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-自定义匹配到标签时的处理方法&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#自定义匹配到标签时的处理方法&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;自定义匹配到标签时的处理方法&lt;/h3&gt;
&lt;p&gt;通过 &lt;code&gt;OnTag&lt;/code&gt; 来指定相应的处理函数。以下是详细说明：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;onTag&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;tag&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;TagOption&lt;/span&gt;) &lt;span class=&quot;pl-c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; {
&lt;span class=&quot;pl-c&quot;&gt;// tag是当前的标签名称，比如&amp;lt;a&amp;gt;标签，则tag的值是&#x27;a&#x27;&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// html是该标签的HTML，比如&amp;lt;a&amp;gt;标签，则html的值是&#x27;&amp;lt;a&amp;gt;&#x27;&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// options是一些附加的信息，具体如下：&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;//   isWhite    boolean类型，表示该标签是否在白名单上&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;//   isClosing  boolean类型，表示该标签是否为闭合标签，比如&amp;lt;/a&amp;gt;时为true&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;//   position        integer类型，表示当前标签在输出的结果中的起始位置&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;//   sourcePosition  integer类型，表示当前标签在原HTML中的起始位置&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// 如果返回一个字符串，则当前标签将被替换为该字符串&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// 如果返回nil，则使用默认的处理方法：&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;//   在白名单上：  通过onTagAttr来过滤属性，详见下文&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;//   不在白名单上：通过onIgnoreTag指定，详见下文&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-自定义匹配到标签的属性时的处理方法&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#自定义匹配到标签的属性时的处理方法&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;自定义匹配到标签的属性时的处理方法&lt;/h3&gt;
&lt;p&gt;通过 &lt;code&gt;OnTagAttr&lt;/code&gt; 来指定相应的处理函数。以下是详细说明：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;OnTagAttr&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;tag&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;,&lt;span class=&quot;pl-s1&quot;&gt;isWhiteAttr&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;bool&lt;/span&gt;) &lt;span class=&quot;pl-c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; {
&lt;span class=&quot;pl-c&quot;&gt;// tag是当前的标签名称，比如&amp;lt;a&amp;gt;标签，则tag的值是&#x27;a&#x27;&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// name是当前属性的名称，比如href=&quot;#&quot;，则name的值是&#x27;href&#x27;&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// value是当前属性的值，比如href=&quot;#&quot;，则value的值是&#x27;#&#x27;&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// isWhiteAttr是否为白名单上的属性&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// 如果返回一个字符串，则当前属性值将被替换为该字符串&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// 如果返回nil，则使用默认的处理方法&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;//   在白名单上：  调用safeAttrValue来过滤属性值，并输出该属性，详见下文&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;//   不在白名单上：通过onIgnoreTagAttr指定，详见下文&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-自定义匹配到不在白名单上的标签时的处理方法&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#自定义匹配到不在白名单上的标签时的处理方法&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;自定义匹配到不在白名单上的标签时的处理方法&lt;/h3&gt;
&lt;p&gt;通过 &lt;code&gt;OnIgnoreTag&lt;/code&gt; 来指定相应的处理函数。以下是详细说明：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;OnIgnoreTag&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;tag&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;TagOption&lt;/span&gt;) &lt;span class=&quot;pl-c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; {
&lt;span class=&quot;pl-c&quot;&gt;// 参数说明与onTag相同&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// 如果返回非nil，则当前标签将被替换为该字符串&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// 如果返回nil，则使用默认的处理方法（通过escape指定，详见下文）&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-自定义匹配到不在白名单上的属性时的处理方法&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#自定义匹配到不在白名单上的属性时的处理方法&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;自定义匹配到不在白名单上的属性时的处理方法&lt;/h3&gt;
&lt;p&gt;通过 &lt;code&gt;OnIgnoreTagAttr&lt;/code&gt; 来指定相应的处理函数。以下是详细说明：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;OnIgnoreTagAttr&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;tag&lt;/span&gt;,&lt;span class=&quot;pl-s1&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;,&lt;span class=&quot;pl-s1&quot;&gt;isWhiteAttr&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;bool&lt;/span&gt;) &lt;span class=&quot;pl-c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; {
  &lt;span class=&quot;pl-c&quot;&gt;// 参数说明与onTagAttr相同&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// 如果返回一个字符串，则当前属性值将被替换为该字符串&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// 如果返回nil，则使用默认的处理方法（删除该属）&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-自定义-html-转义函数&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#自定义-html-转义函数&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;自定义 HTML 转义函数&lt;/h3&gt;
&lt;p&gt;通过 &lt;code&gt;EscapeHtml&lt;/code&gt; 来指定相应的处理函数。以下是默认代码 （不建议修改） ：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;EscapeHTML&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;) &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; {
&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;regGT&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;ReplaceAllString&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;regLT&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;ReplaceAllString&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;html&lt;/span&gt;,&lt;span class=&quot;pl-s&quot;&gt;&quot;&amp;amp;lt;&quot;&lt;/span&gt;),&lt;span class=&quot;pl-s&quot;&gt;&quot;&amp;amp;gt;&quot;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-自定义标签属性值的转义函数&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#自定义标签属性值的转义函数&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;自定义标签属性值的转义函数&lt;/h3&gt;
&lt;p&gt;通过 &lt;code&gt;SafeAttrValue&lt;/code&gt; 来指定相应的处理函数。以下是详细说明：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;SafeAttrValue&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;tag&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;) &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; {
&lt;span class=&quot;pl-c&quot;&gt;// 参数说明与onTagAttr相同（没有options参数）&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;// 返回一个字符串表示该属性值&lt;/span&gt;

}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-自定义-css-过滤器&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#自定义-css-过滤器&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;自定义 CSS 过滤器&lt;/h3&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-快捷配置&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#快捷配置&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;快捷配置&lt;/h2&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-去掉不在白名单上的标签&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#去掉不在白名单上的标签&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;去掉不在白名单上的标签&lt;/h3&gt;
&lt;p&gt;通过 &lt;code&gt;StripIgnoreTag&lt;/code&gt; 来设置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;true：去掉不在白名单上的标签&lt;/li&gt;
&lt;li&gt;false：（默认），使用配置的escape函数对该标签进行转义
示例：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当设置 StripIgnoreTag = true时，以下代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;code:&amp;lt;script&amp;gt;alert(/xss/);&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;过滤后将输出&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;code:alert(/xss/);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-去掉不在白名单上的标签及标签体&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#去掉不在白名单上的标签及标签体&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;去掉不在白名单上的标签及标签体&lt;/h3&gt;
&lt;p&gt;通过 &lt;code&gt;StripIgnoreTagBody&lt;/code&gt; 来设置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt;时：（默认），不特殊处理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[]string{}&lt;/code&gt;：(空数组) 去掉所有不在白名单上的标签&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[]string{&quot;tag1&quot;, &quot;tag2&quot;}&lt;/code&gt;：仅去掉指定的不在白名单上的标签&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;当设置 &lt;code&gt;StripIgnoreTagBody = []string{&quot;script&quot;}时，以下代码&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;code:&amp;lt;script&amp;gt;alert(/xss/);&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;过滤后将输出&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;code:

&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-去掉-html-备注&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#去掉-html-备注&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;去掉 HTML 备注&lt;/h2&gt;
&lt;p&gt;通过 &lt;code&gt;AllowCommentTag&lt;/code&gt; 来设置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;true：不处理&lt;/li&gt;
&lt;li&gt;false：（默认），自动去掉 HTML 中的备注
示例：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当设置 &lt;code&gt;AllowCommentTag = false&lt;/code&gt; 时，以下代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;code:&amp;lt;!-- something --&amp;gt; END
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;过滤后将输出&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;code: END
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-应用实例&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#应用实例&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;应用实例&lt;/h2&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-允许标签以-data-开头的属性&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#允许标签以-data-开头的属性&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;允许标签以 data-开头的属性&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;&amp;lt;div a=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;1&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt; b=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;2&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt; data-a=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;3&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt; data-b=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;4&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&amp;gt;hello&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;;

&lt;span class=&quot;pl-s1&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;xss&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;FilterXSS&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt;,xss.&lt;span class=&quot;pl-smi&quot;&gt;XssOption&lt;/span&gt;{
&lt;span class=&quot;pl-c1&quot;&gt;OnIgnoreTagAttr&lt;/span&gt;: &lt;span class=&quot;pl-k&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;tag&lt;/span&gt;,&lt;span class=&quot;pl-s1&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;,&lt;span class=&quot;pl-s1&quot;&gt;isWhiteAttr&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;bool&lt;/span&gt;) &lt;span class=&quot;pl-c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; {
&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;len&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;name&lt;/span&gt;)&lt;span class=&quot;pl-c1&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;name&lt;/span&gt;[&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;pl-c1&quot;&gt;5&lt;/span&gt;] &lt;span class=&quot;pl-c1&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;data-&quot;&lt;/span&gt; {
&lt;span class=&quot;pl-s1&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;xss&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;EscapeAttrValue&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;value&lt;/span&gt;)&lt;span class=&quot;pl-c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&quot;&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pl-s1&quot;&gt;ret&lt;/span&gt;
}
&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;nil&lt;/span&gt;
},
})
&lt;span class=&quot;pl-s1&quot;&gt;fmt&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;Printf&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&quot;%s&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;convert to:&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;%s&quot;&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;html&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div a=&quot;1&quot; b=&quot;2&quot; data-a=&quot;3&quot; data-b=&quot;4&quot;&amp;gt;hello&amp;lt;/div&amp;gt;
convert to:
&amp;lt;div data-a=&quot;3&quot; data-b=&quot;4&quot;&amp;gt;hello&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;允许名称以 x-开头的标签&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source := &quot;&amp;lt;x&amp;gt;&amp;lt;x-1&amp;gt;he&amp;lt;x-2 checked&amp;gt;&amp;lt;/x-2&amp;gt;wwww&amp;lt;/x-1&amp;gt;&amp;lt;a&amp;gt;&quot;;

html := xss.FilterXSS(source,xss.XssOption{
OnIgnoreTag: func(tag, html string, options xss.TagOption) *string {
if len(tag)&amp;gt;=2 &amp;amp;&amp;amp; tag[0:2] == &quot;x-&quot; {
return &amp;amp;html;
}
return nil
},
})
fmt.Printf(&quot;%s\nconvert to:\n%s&quot;, source, html);

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;x&amp;gt;&amp;lt;x-1&amp;gt;he&amp;lt;x-2 checked&amp;gt;&amp;lt;/x-2&amp;gt;wwww&amp;lt;/x-1&amp;gt;&amp;lt;a&amp;gt;
convert to:
&amp;amp;lt;x&amp;amp;gt;&amp;lt;x-1&amp;gt;he&amp;lt;x-2 checked&amp;gt;&amp;lt;/x-2&amp;gt;wwww&amp;lt;/x-1&amp;gt;&amp;lt;a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-分析-html-代码中的图片列表&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#分析-html-代码中的图片列表&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;分析 HTML 代码中的图片列表&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;&amp;lt;img src=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;img1&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&amp;gt;a&amp;lt;img src=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;img2&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&amp;gt;b&amp;lt;img src=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;img3&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&amp;gt;c&amp;lt;img src=&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;img4&lt;span class=&quot;pl-cce&quot;&gt;\&quot;&lt;/span&gt;&amp;gt;d&quot;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;list&lt;/span&gt; []&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;xss&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;FilterXSS&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt;,xss.&lt;span class=&quot;pl-smi&quot;&gt;XssOption&lt;/span&gt;{
&lt;span class=&quot;pl-c1&quot;&gt;OnTagAttr&lt;/span&gt;: &lt;span class=&quot;pl-k&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;tag&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;name&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; ,&lt;span class=&quot;pl-s1&quot;&gt;isWhiteAttr&lt;/span&gt; &lt;span class=&quot;pl-smi&quot;&gt;bool&lt;/span&gt;) &lt;span class=&quot;pl-c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt; {
&lt;span class=&quot;pl-k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;img&quot;&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;src&quot;&lt;/span&gt; {
&lt;span class=&quot;pl-s1&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;list&lt;/span&gt;,&lt;span class=&quot;pl-s1&quot;&gt;value&lt;/span&gt;)
}
&lt;span class=&quot;pl-k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;nil&lt;/span&gt;
},
})
&lt;span class=&quot;pl-s1&quot;&gt;fmt&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;Printf&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&quot;image list:&lt;span class=&quot;pl-cce&quot;&gt;\n&lt;/span&gt;%s&quot;&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;strings&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;Join&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;list&lt;/span&gt;, &lt;span class=&quot;pl-s&quot;&gt;&quot;,&quot;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-s1&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;list&lt;/span&gt;:
&lt;span class=&quot;pl-s1&quot;&gt;img1&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;img2&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;img3&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;img4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-去除-html-标签只保留文本内容&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#去除-html-标签只保留文本内容&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;去除 HTML 标签（只保留文本内容）&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-go&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&quot;&amp;lt;strong&amp;gt;hello&amp;lt;/strong&amp;gt;&amp;lt;script&amp;gt;alert(/xss/);&amp;lt;/script&amp;gt;end&quot;&lt;/span&gt;
&lt;span class=&quot;pl-s1&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;xss&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;FilterXSS&lt;/span&gt;(&lt;span class=&quot;pl-s1&quot;&gt;source&lt;/span&gt;,xss.&lt;span class=&quot;pl-smi&quot;&gt;XssOption&lt;/span&gt;{
&lt;span class=&quot;pl-c1&quot;&gt;WhiteList&lt;/span&gt;:&lt;span class=&quot;pl-k&quot;&gt;map&lt;/span&gt;[&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;][]&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;{},  &lt;span class=&quot;pl-c&quot;&gt;// // empty, means filter out all tags&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;StripIgnoreTag&lt;/span&gt;:&lt;span class=&quot;pl-c1&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;pl-c&quot;&gt;// filter out all HTML not in the whitelist&lt;/span&gt;
&lt;span class=&quot;pl-c1&quot;&gt;StripIgnoreTagBody&lt;/span&gt;:[]&lt;span class=&quot;pl-smi&quot;&gt;string&lt;/span&gt;{&lt;span class=&quot;pl-s&quot;&gt;&quot;script&quot;&lt;/span&gt;}, &lt;span class=&quot;pl-c&quot;&gt;// the script tag is a special case, we need&lt;/span&gt;
})
&lt;span class=&quot;pl-s1&quot;&gt;fmt&lt;/span&gt;.&lt;span class=&quot;pl-en&quot;&gt;Printf&lt;/span&gt;(&lt;span class=&quot;pl-s&quot;&gt;&quot;text: %s&quot;&lt;/span&gt;, &lt;span class=&quot;pl-s1&quot;&gt;html&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;text: helloend

&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-inspirations&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#inspirations&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Inspirations&lt;/h2&gt;

&lt;h2&gt;&lt;a id=&quot;user-content-license&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#license&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT&lt;/p&gt;
&lt;/article&gt;
      &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f13a5c6c3f258b4c61999ca560e4516d</guid>
<title>Serverless 音视频转码：芒果 TV 落地实践（下）</title>
<link>https://toutiao.io/k/talunv3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;Markdown__Wrapper-sbgo4h-0 kKEhyL markdown-body&quot;&gt;&lt;p&gt;在 &lt;a href=&quot;https://serverlesscloud.cn/best-practice/2021-01-08-serverless-mangguo&quot;&gt;《Serverless 音视频转码——芒果 TV 落地实践（上）》&lt;/a&gt;中，我们回顾了芒果 TV 吴坚强老师在 techo 大会的精彩分享，芒果TV 音视频编解码业务团队通过使用腾讯云 Serverless 音视频转码服务，成本降低 45% 以上，引起大家的广泛关注，小伙伴们都跃跃欲试！&lt;/p&gt;
&lt;p&gt;本文我们将带领大家一起使用云函数 + COS + CLS + FFmpeg 构建高可用、并行处理、实时日志、高度自定义的视频转码服务。我们在此提供了两种方案，您可以直接用转码应用，一键部署，也可以通过
用函数的长运行方案来自己处理。&lt;/p&gt;
&lt;h2 id=&quot;实现方案&quot;&gt;&lt;a href=&quot;#%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88&quot; aria-label=&quot;实现方案 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;实现方案&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;方案一：&lt;/strong&gt; 使用官网的流式音视频转码，一键部署。查看&lt;a href=&quot;https://cloud.tencent.com/document/product/583/51451&quot;&gt;详情&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案二：&lt;/strong&gt; 利用云函数的异步执行机制，自主研发。查看&lt;a href=&quot;https://cloud.tencent.com/document/product/583/51519&quot;&gt;详情&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;流式音视频转码方案&quot;&gt;&lt;a href=&quot;#%E6%B5%81%E5%BC%8F%E9%9F%B3%E8%A7%86%E9%A2%91%E8%BD%AC%E7%A0%81%E6%96%B9%E6%A1%88&quot; aria-label=&quot;流式音视频转码方案 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;流式音视频转码方案&lt;/h2&gt;
&lt;p&gt;通过云函数创建 FFmpeg 任务进程，云函数进程与 FFmpeg 任务进程通过 pipe 和 FIFO 的方式进行数据传输。云函数进程中的两个任务线程分别接收 FFmpeg 任务进程向函数进程输出的 FFmpeg 日志流与转码后的文件流，从而实现流式读写 COS 和实时日志输出的转码应用场景。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://main.qcloudimg.com/raw/749ac11a39c98a1ffbf5bb6d4b758e5a.svg&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;方案优势&quot;&gt;&lt;a href=&quot;#%E6%96%B9%E6%A1%88%E4%BC%98%E5%8A%BF&quot; aria-label=&quot;方案优势 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;方案优势&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;流式转码&lt;/strong&gt;
采用流式拉取源视频文件，流式上传转码文件的工作方式，突破了本地存储的限制，且不需要额外部署 CFS 等产品。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实时日志&lt;/strong&gt;
视频转码过程中，可通过 CLS 日志实时查看转码进度。同时支持输出 FFmpeg 应用的完整日志。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;长时运行&lt;/strong&gt;
利用云函数的长时运行机制，支持 12h-24h 的运行时长，可覆盖大文件耗时较长的转码场景。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自定义参数&lt;/strong&gt;
支持用户自定义配置 FFmpeg 命令参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;前提条件&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装 &lt;a href=&quot;https://cloud.tencent.com/document/product/1154/42990&quot;&gt;Serverlesss Framework&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;函数长时运行 &lt;a href=&quot;https://cloud.tencent.com/apply/p/hz85krvp8s8&quot;&gt;白名单申请&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;配置部署账号权限。参考 &lt;a href=&quot;https://cloud.tencent.com/document/product/1154/43006&quot;&gt;账号和权限配置&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;配置 &lt;a href=&quot;https://cloud.tencent.com/document/product/583/51451#.E8.BF.90.E8.A1.8C.E8.A7.92.E8.89.B2.3Ca-id.3D.22role.22.3E.3C.2Fa.3E&quot;&gt;运行角色&lt;/a&gt; 权限。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;操作步骤&quot;&gt;&lt;a href=&quot;#%E6%93%8D%E4%BD%9C%E6%AD%A5%E9%AA%A4&quot; aria-label=&quot;操作步骤 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;操作步骤&lt;/h2&gt;
&lt;h3 id=&quot;1-下载转码应用&quot;&gt;&lt;a href=&quot;#1-%E4%B8%8B%E8%BD%BD%E8%BD%AC%E7%A0%81%E5%BA%94%E7%94%A8&quot; aria-label=&quot;1 下载转码应用 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;1. 下载转码应用&lt;/h3&gt;

&lt;p&gt;进入项目目录 &lt;code class=&quot;language-text&quot;&gt;transcode-app&lt;/code&gt;，将看到目录结构如下：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;transcode-app
|- .env  #环境配置
|- serverless.yml # 应用配置
|- log/ #log 日志配置
|  └── serverless.yml
└──transcode/  #转码函数配置
       |- src/
       |   |- ffmpeg   #转码 FFmpeg 工具
       |   └── index.py
       └── serverless.yml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;log/serverless.yml&lt;/code&gt; 定义一个 CLS 日志集和主题，用于转码过程输出的日志保存，目前采用腾讯云 CLS 日志存储。每个转码应用将会根据配置的 CLS 日志集和主题去创建相关资源，CLS 的使用会产生计费，具体参考 &lt;a href=&quot;https://cloud.tencent.com/document/product/614/47116&quot;&gt;CLS 计费规则&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;transcode/serverless.yml&lt;/code&gt; 定义函数的基础配置及转码参数配置。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;transcode/src/index.py&lt;/code&gt; 转码功能实现。&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;transcode/src/ffmpeg&lt;/code&gt; 转码工具 FFmpeg。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-配置环境变量和应用参数&quot;&gt;&lt;a href=&quot;#2-%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%92%8C%E5%BA%94%E7%94%A8%E5%8F%82%E6%95%B0&quot; aria-label=&quot;2 配置环境变量和应用参数 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;2. 配置环境变量和应用参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;应用参数，文件 &lt;code class=&quot;language-text&quot;&gt;transcode-app/serverless.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;#应用信息
app: transcodeApp # 您需要配置成您的应用名称
stage: dev # 环境名称，默认为 dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;环境变量，文件&lt;code class=&quot;language-text&quot;&gt;transcode-app/.env&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;REGION=ap-shanghai  # 应用创建所在区，目前只支持上海区
TENCENT_SECRET_ID=xxxxxxxxxxxx # 您的腾讯云sercretId
TENCENT_SECRET_KEY=xxxxxxxxxxxx # 您的腾讯云sercretKey&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;您可以登录腾讯云控制台，可以在 &lt;a href=&quot;https://console.cloud.tencent.com/cam/capi&quot;&gt;API 密钥管理&lt;/a&gt; 中获取 SecretId 和 SecretKey。&lt;/li&gt;
&lt;li&gt;如果您的账号为主账号，或者子账号具有扫码权限，也可以不配置 SercretId 与 SercretKey，直接扫码部署应用。更多详情参考 &lt;a href=&quot;https://cloud.tencent.com/document/product/1154/43006&quot;&gt;账号和权限配置&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;3-配置转码需要的参数信息&quot;&gt;&lt;a href=&quot;#3-%E9%85%8D%E7%BD%AE%E8%BD%AC%E7%A0%81%E9%9C%80%E8%A6%81%E7%9A%84%E5%8F%82%E6%95%B0%E4%BF%A1%E6%81%AF&quot; aria-label=&quot;3 配置转码需要的参数信息 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;3. 配置转码需要的参数信息&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;输出桶与函数建议配置在同一区域，跨区域配置应用稳定性及效率都会降低，并且会产生跨区流量费用。&lt;/li&gt;
&lt;li&gt;内存大小上限为3072MB，运行时长上限为43200s。如需调整，请 &lt;a href=&quot;https://console.cloud.tencent.com/workorder/category?level1_id=6&amp;amp;level2_id=668&amp;amp;source=0&amp;amp;data_title=%E6%97%A0%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BA%91%E5%87%BD%E6%95%B0%20SCF&amp;amp;step=1&quot;&gt;提交工单&lt;/a&gt; 申请配额调整。&lt;/li&gt;
&lt;li&gt;转码应用必须开启函数长时运行 asyncRunEnable: true。&lt;/li&gt;
&lt;li&gt;运行角色请根据 &lt;a href=&quot;https://cloud.tencent.com/document/product/583/51451#.E8.BF.90.E8.A1.8C.E8.A7.92.E8.89.B2.3Ca-id.3D.22role.22.3E.3C.2Fa.3E&quot;&gt;运行角色&lt;/a&gt; 创建并授权。&lt;/li&gt;
&lt;li&gt;示例配置的 FFmpeg 指令仅适用于 AVI 转码场景，详细介绍参考 &lt;a href=&quot;https://cloud.tencent.com/document/product/583/51451#ffmpeg-.E6.8C.87.E4.BB.A4.3Ca-id.3D.22ffmpeg.22.3E.3C.2Fa.3E&quot;&gt;FFmpeg 指令&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;4-部署项目&quot;&gt;&lt;a href=&quot;#4-%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE&quot; aria-label=&quot;4 部署项目 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;4. 部署项目&lt;/h3&gt;
&lt;p&gt;在 &lt;code class=&quot;language-text&quot;&gt;transcode-app&lt;/code&gt; 项目目录下，执行 &lt;code class=&quot;language-text&quot;&gt;sls deploy&lt;/code&gt; 部署项目。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;cd transcode-app &amp;amp;&amp;amp; sls deploy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;5-上传视频文件&quot;&gt;&lt;a href=&quot;#5-%E4%B8%8A%E4%BC%A0%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6&quot; aria-label=&quot;5 上传视频文件 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;5. 上传视频文件&lt;/h3&gt;
&lt;p&gt;上传视频文件到已经配置好的cos桶指定路径，则会自动转码。本示例中是cos桶&lt;code class=&quot;language-text&quot;&gt;test-123456789.cos.ap-shanghai.myqcloud.com&lt;/code&gt;下的&lt;code class=&quot;language-text&quot;&gt;/video/inputs/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;转码成功后，文件将保存在您配置的输出桶路径中。本示例中是cos桶&lt;code class=&quot;language-text&quot;&gt;test-123456789.cos.ap-shanghai.myqcloud.com&lt;/code&gt;下的&lt;code class=&quot;language-text&quot;&gt;/video/outputs/&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;6-重新部署&quot;&gt;&lt;a href=&quot;#6-%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2&quot; aria-label=&quot;6 重新部署 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;6. 重新部署&lt;/h3&gt;
&lt;p&gt;如果需要调整转码配置，修改文件 &lt;code class=&quot;language-text&quot;&gt;transcode/serverless.yml&lt;/code&gt; 后，重新部署云函数即可：&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;cd transcode &amp;amp;&amp;amp; sls deploy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;监控与日志服务&quot;&gt;&lt;a href=&quot;#%E7%9B%91%E6%8E%A7%E4%B8%8E%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1&quot; aria-label=&quot;监控与日志服务 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;监控与日志服务&lt;/h2&gt;
&lt;p&gt;批量文件上传到 COS 会并行触发转码执行。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登录 &lt;a href=&quot;https://console.cloud.tencent.com/scf/index?rid=1&quot;&gt;云函数控制台&lt;/a&gt; 的【函数服务】页面中，单击函数名进入函数管理页面。&lt;/li&gt;
&lt;li&gt;单击【日志查询】，即可查看日志监控。
&lt;img src=&quot;https://main.qcloudimg.com/raw/366b8d44b84205d580af18703a1cd511.png&quot;/&gt;&lt;/li&gt;
&lt;li&gt;单击【函数管理】&amp;gt;【函数配置】，单击日志主题的链接，跳转至日志服务控制台。
&lt;img src=&quot;https://main.qcloudimg.com/raw/a86502f7ecc77473501ce654a23435de.jpg&quot;/&gt;&lt;/li&gt;
&lt;li&gt;在日志服务控制台的【检索分析】页面中，选择日志集合日志主题，即可查看日志检索分析 。
&lt;img src=&quot;https://main.qcloudimg.com/raw/caca6a584b5abe864559379fac8f3346.png&quot;/&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;借助函数异步运行能力自主研发方案&quot;&gt;&lt;a href=&quot;#%E5%80%9F%E5%8A%A9%E5%87%BD%E6%95%B0%E5%BC%82%E6%AD%A5%E8%BF%90%E8%A1%8C%E8%83%BD%E5%8A%9B%E8%87%AA%E4%B8%BB%E7%A0%94%E5%8F%91%E6%96%B9%E6%A1%88&quot; aria-label=&quot;借助函数异步运行能力自主研发方案 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;借助函数异步运行能力自主研发方案&lt;/h2&gt;
&lt;p&gt;在音视频转码、ETL 大体量数据处理、AI 推理等单任务重计算的场景下，函数的单实例运行时需要更多算力及更长时间的稳定运行。若函数的调用端长时间阻塞等待执行结果，不仅会持续占用调用方资源，还会对调用链路的稳定性产生较高要求。
云函数 SCF 提供了一种全新的函数运行机制，您可通过 SCF 提供的函数异步执行模式，提升执行超时时间上限和解决现有运行机制的问题。&lt;/p&gt;
&lt;h2 id=&quot;操作步骤-1&quot;&gt;&lt;a href=&quot;#%E6%93%8D%E4%BD%9C%E6%AD%A5%E9%AA%A4-1&quot; aria-label=&quot;操作步骤 1 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;操作步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;登录 &lt;a href=&quot;https://console.cloud.tencent.com/scf/list?rid=16&amp;amp;ns=default&quot;&gt;云函数控制台&lt;/a&gt;，单击左侧导航栏的【函数服务】。&lt;/li&gt;
&lt;li&gt;在主界面上方选择期望创建函数的地域，并单击【新建】，进入函数创建流程。&lt;/li&gt;
&lt;li&gt;选择使用【空白函数】或选择使用【函数模板】来新建函数。&lt;/li&gt;
&lt;li&gt;在“函数配置”页面，展开【高级设置】，并勾选【异步执行】。&lt;/li&gt;
&lt;li&gt;单击【完成】即可创建函数。  &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;运行机制原理&quot;&gt;&lt;a href=&quot;#%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E5%8E%9F%E7%90%86&quot; aria-label=&quot;运行机制原理 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;运行机制原理&lt;/h2&gt;
&lt;p&gt;函数启用异步执行后，通过同步（例如 API 网关）或异步（例如 COS、CKafka、Timer 等）调用端进行事件调用，函数将以异步执行模式响应事件。
即完成事件调度后立即返回事件的调用标识 RequestId，并结束调用操作，调用端无需阻塞等待。返回 RequestId 的同时，调用引擎将并行下发事件到函数运行时，开启函数逻辑执行。进入异步执行状态后，执行日志将实时上报至日志服务，提供对异步执行事件运行情况的实时反馈。其原理如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://main.qcloudimg.com/raw/36557e028090175f79b879ac0ad6f66b.png&quot;/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意事项：&lt;/p&gt;

&lt;/blockquote&gt;
&lt;h2 id=&quot;状态追踪原理&quot;&gt;&lt;a href=&quot;#%E7%8A%B6%E6%80%81%E8%BF%BD%E8%B8%AA%E5%8E%9F%E7%90%86&quot; aria-label=&quot;状态追踪原理 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;状态追踪原理&lt;/h2&gt;
&lt;p&gt;函数高级配置启用状态追踪后，针对异步执行的事件，将开始记录并上报事件响应的实时状态，并提供事件状态的统计、查询及终止等事件管理相关服务。其原理如下图所示：
&lt;img src=&quot;https://main.qcloudimg.com/raw/d06476734d27d3308783e78af85897a2.png&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;相关接口&quot;&gt;&lt;a href=&quot;#%E7%9B%B8%E5%85%B3%E6%8E%A5%E5%8F%A3&quot; aria-label=&quot;相关接口 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;相关接口&lt;/h2&gt;
&lt;p&gt;事件管理相关服务 API 通过云 API 的方式提供，详情参考&lt;a href=&quot;https://cloud.tencent.com/document/product/583/51519&quot;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;温馨提示&quot;&gt;&lt;a href=&quot;#%E6%B8%A9%E9%A6%A8%E6%8F%90%E7%A4%BA&quot; aria-label=&quot;温馨提示 permalink&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;温馨提示&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;产生的事件状态数据仅保留3天，将以3天为时间窗口滑动清理。如需保留全部记录，则需要定期拉取并保存至自有存储。&lt;/li&gt;
&lt;li&gt;关闭状态追踪后，将停止提供异步执行事件相关记录、统计、查询、终止等事件管理相关服务，已产生的事件状态数据将在3天内清空。&lt;/li&gt;
&lt;li&gt;异步运行函数的事件调用 QPS 限制为并发数量的十分之一，超出部分将被限制，造成响应失败。&lt;/li&gt;
&lt;li&gt;由于请求 QPS 超限、账户欠费等原因，事件调用将由调度引擎直接返回对应异常，不会生成事件状态记录。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;p&gt;欢迎访问：&lt;a href=&quot;https://serverlesscloud.cn/&quot;&gt;Serverless 中文网&lt;/a&gt;，您可以在 &lt;a href=&quot;https://serverlesscloud.cn/best-practice&quot;&gt;最佳实践&lt;/a&gt; 里体验更多关于 Serverless 应用的开发！&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>37477bfe58e0509b0ccbc7a95a0187eb</guid>
<title>Seata 事务提交流程</title>
<link>https://toutiao.io/k/wqkoino</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;2&quot; data-cropselx2=&quot;576&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;383&quot; data-ratio=&quot;0.4333593141075604&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jOD3PUUxTibPP1JhhNxzaXJsPMxLKOVeLOiaAZS4nCdBQF5RpRo3GLmGpsIX5hfRclwN7Iiaz0wPOhic6gagYlcbXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2566&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;p&gt;Seata 是一款阿里开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。Seata 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式，为用户打造一站式的分布式解决方案，github地址：https://github.com/seata/seata。&lt;/p&gt;&lt;p&gt;在分析 seata 事务二阶段执行流程之前，首先来看下XA的2PC 流程：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6390625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jOD3PUUxTibPP1JhhNxzaXJsPMxLKOVeLXkcicHswxEu9D8db5wiaxPvzy6ibBphS88NfEMKY8ojUlslHbb0Upow5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;对于 XA 来说，无论 Phase2 的决议是 commit 还是 rollback，事务性资源的锁都要保持到 Phase2 完成才释放。一般对于一个正常运行的业务，大概率是 90% 以上的事务最终应该是可以成功提交的，我们是否可以在 Phase1 就将本地事务提交呢？这样 90% 以上的情况下，可以省去 Phase2 持锁的时间，降低锁粒度，整体提高效率。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果在Phase1就将本地事务提交，那么当第二阶段要求回滚时，只需要根据 xid 找到对应的原数据，进行恢复即可，这时事务的 commit 和 rollback 所属2个事务。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6265625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jOD3PUUxTibPP1JhhNxzaXJsPMxLKOVeLwr5305fliarKicWXE42S4coCyic6icKF9vDXLNhf8putLFqDV4wUxXrp4g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;这个设计，极大地减少了分支事务对资源（数据和连接）的锁定时间，给服务整体并发和吞吐的提升提供了基础。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;分支事务提交和回滚&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;首先，应用需要使用 Seata 的 JDBC 数据源代理，才能进行分布式事务操作。&lt;/p&gt;&lt;p&gt;Phase1：Seata 的 JDBC 数据源代理通过对业务 SQL 的解析，把业务数据在更新前后的数据镜像组织成回滚日志，利用 本地事务 的 ACID 特性，将业务数据的更新和回滚日志的写入在同一个 本地事务 中提交（也就是 undolog 功能）。这样，可以保证：任何提交的业务数据的更新一定有相应的回滚日志存在。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.49296875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jOD3PUUxTibPP1JhhNxzaXJsPMxLKOVeL5Hn67msF1VIGkbbcAyyJ3qqtYvwuLlCmlUfMniarXKjtc9MibQ2FENoQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;基于这样的机制，分支的本地事务便可以在全局事务的 Phase1 提交，马上释放本地事务锁定的资源。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Phase2&lt;/strong&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果决议是全局提交，此时分支事务此时已经完成提交，不需要同步协调处理（只需要异步清理回滚日志），Phase2 可以非常快速地完成。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.45546875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jOD3PUUxTibPP1JhhNxzaXJsPMxLKOVeLw4NGj4aqGL8EMIRd476IMRIf7EQV7yTKZII9QcfgsEg8GYXvSSYSMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果决议是全局回滚，RM 收到协调器发来的回滚请求，通过 XID 和 Branch ID 找到相应的回滚日志记录，通过回滚记录生成反向的更新 SQL 并执行，以完成分支的回滚。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.4890625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jOD3PUUxTibPP1JhhNxzaXJsPMxLKOVeLWPuEDROUR49JZ1mhTib2xP7vQ4zlOhsbJWQlu5IPkuKc6qFWaoLeLCw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;针对全局事务的所有分支事务发起回滚操作，如果某个分支事务回滚操作执行异常，那么在seata-server会由retryRollbacking定时任务始终驱动的，默认5s。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;retryRollbacking.scheduleAtFixedRate(() -&amp;gt; {&lt;br/&gt;    &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;        handleRetryRollbacking();&lt;br/&gt;    } &lt;span&gt;catch&lt;/span&gt; (Exception e) {&lt;br/&gt;        LOGGER.info(&lt;span&gt;&quot;Exception retry rollbacking ... &quot;&lt;/span&gt;, e);&lt;br/&gt;    }&lt;br/&gt;}, &lt;span&gt;0&lt;/span&gt;, rollbackingRetryDelay, TimeUnit.SECONDS);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意：seata 中有很多这样的线程池，比如心跳、commit 重试等场景就是线程池来完成对应操作。&lt;/p&gt;&lt;p&gt;最后来一张整体的seata 执行流程图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6130434782608696&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jOD3PUUxTibPP1JhhNxzaXJsPMxLKOVeLth66waqTeCUeNU0hjvxIW9AGVNchGPfCicwLau3swicfs0vulZzs7ib3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;920&quot;/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;注意：全局事务的开始是在 TM 的业务代码中开始的，比如&lt;code&gt;@GlobalTransactional&lt;/code&gt;处，而 RM 的注册是在数据层开始的，首先进行数据操作并记录 undolog 数据，然后进行 RM 分支注册，再进行本地事务提交，最后上报给 TC 事务状态。更详细流程如下：&lt;/p&gt;&lt;/blockquote&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;当需要发起一个分布式事务流程时，TM 向 TC 申请开启一个全局事务，全局事务创建成功并生成一个全局唯一的 XID。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;XID 在微服务调用链路的上下文中传播（这里需要适配 dubbo/spring cloud 分布式框架）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;当进行数据操作时，RM首先进行本地事务操作，但是先不 commit，然后向 TC 注册分支事务，将其纳入 XID 对应全局事务的管辖。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;RM提交本地事务，上报本地事务状态给 TC。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;TM 向 TC 发起针对 XID 的全局提交或回滚决议。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;TC 调度 XID 下管辖的全部分支事务完成提交或回滚请求。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-style-type=&quot;2&quot; data-tools=&quot;新媒体排版&quot; data-id=&quot;8633&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt; 推荐阅读 &lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;figure&gt;&lt;br/&gt;&lt;/figure&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>