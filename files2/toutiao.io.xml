<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>36eec1b472102626f9de2a1762b3843d</guid>
<title>优秀开源软件的类，都是怎么命名的？</title>
<link>https://toutiao.io/k/jz8ba3s</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;174&quot; data-backw=&quot;365&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4767123287671233&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/cvQbJDZsKLp6wejHtKTRbqqQyt0wMk9K1wNtuwRqQTJAPOJ1KiaqSeSRbIJRTicVicKpDKRndBodY2DBNN20tvWwA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;365&quot;/&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原创：小姐姐味道（微信公众号ID：xjjdog），欢迎分享，转载请保留出处。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;日常编码中，代码的命名是个大的学问。能快速的看懂开源软件的代码结构和意图，也是一项必备的能力。那它们有什么规律呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Java项目的代码结构，能够体现它的设计理念。Java采用长命名的方式来规范类的命名，能够自己表达它的主要意图。配合高级的IDE，可以减少编码人员的记忆负担，靠模糊的匹配就能找到自己所需要的资源。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了让大家更好的理解命名的套路，我借鉴了最流行的Java接开源软件（spring系列，netty，libgdx，guava，logback等等），总结了10类常见的类命名。大多数是以后缀形式存在的，也有不少可以组合使用，用来表达多重的意义。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6796714579055442&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/cvQbJDZsKLogDicUMe8OSdYKicHZ75ic7ic6eKRJTolB3HoTJOUp72diasMInloGZl9RXUgw1NmficC4Us86KmqV56aw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;974&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些单词很简单，但可以让你的类命名看起来更加清爽和专业。接下来，我将带大家游览一遍。为了方便理解，每种类型，我都配备了相应的 示例。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;管理类命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写代码，少不了对统一资源的管理，清晰的启动过程可以有效的组织代码。为了让程序运行起来，少不了各种资源的注册、调度，少不了公共集合资源的管理。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Bootstrap，Starter&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般作为程序启动器使用，或者作为启动器的基类。通俗来说，可以认为是main函数的入口。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;AbstractBootstrap&lt;br/&gt;ServerBootstrap&lt;br/&gt;MacosXApplicationStarter&lt;br/&gt;DNSTaskStarter&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Processor&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;某一类功能的处理器，用来表示某个处理过程，是一系列代码片段的集合。如果你不知道一些顺序类的代码怎么命名，就可以使用它，显得高大上一些。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;CompoundProcessor&lt;br/&gt;BinaryComparisonProcessor&lt;br/&gt;DefaultDefaultValueProcessor&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Manager&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对有生命状态的对象进行管理，通常作为某一类资源的管理入口。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;AccountManager&lt;br/&gt;DevicePolicyManager&lt;br/&gt;TransactionManager&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Holder&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示持有某个或者某类对象的引用，并可以对其进行统一管理。多见于不好回收的内存统一处理，或者一些全局集合容器的缓存。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;QueryHolder&lt;br/&gt;InstructionHolder&lt;br/&gt;ViewHolder&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Factory&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;毫无疑问，工厂模式的命名，耳熟能详。尤其是Spring中，多不胜数。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;SessionFactory&lt;br/&gt;ScriptEngineFactory&lt;br/&gt;LiveCaptureFactory&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Provider&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Provider = Strategy + Factory Method。它更高级一些，把策略模式和方法工厂揉在了一块，让人用起来很顺手。Provider一般是接口或者抽象类，以便能够完成子实现。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;AccountFeatureProvider&lt;br/&gt;ApplicationFeatureProviderImpl&lt;br/&gt;CollatorProvider&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Registrar&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注册并管理一系列资源。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ImportServiceRegistrar&lt;br/&gt;IKryoRegistrar&lt;br/&gt;PipelineOptionsRegistrar&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Engine&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般是核心模块，用来处理一类功能。引擎是个非常高级的名词，一般的类是没有资格用它的。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ScriptEngine&lt;br/&gt;DataQLScriptEngine&lt;br/&gt;C2DEngine&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Service&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;某个服务。太简单，不忍举例。范围太广，不要滥用哦。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;IntegratorServiceImpl&lt;br/&gt;ISelectionService&lt;br/&gt;PersistenceService&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Task&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;某个任务。通常是个runnable&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;WorkflowTask&lt;br/&gt;FutureTask&lt;br/&gt;ForkJoinTask&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;传播类命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了完成一些统计类或者全局类的功能，有些参数需要一传到底。传播类的对象就可以通过统一封装的方式进行传递，并在合适的地方进行拷贝或者更新。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Context&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你的程序执行，有一些变量，需要从函数执行的入口开始，一直传到大量子函数执行完毕之后。这些变量或者集合，如果以参数的形式传递，将会让代码变得冗长无比。这个时候，你就可以把变量统一塞到Context里面，以单个对象的形式进行传递。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在Java中，由于ThreadLocal的存在，Context甚至可以不用在参数之间进行传递。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;AppContext&lt;br/&gt;ServletContext&lt;br/&gt;ApplicationContext&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Propagator&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;传播，繁殖。用来将context中传递的值进行复制，添加，清除，重置，检索，恢复等动作。通常，它会提供一个叫做propagate的方法，实现真正的变量管理。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;TextMapPropagator&lt;br/&gt;FilePropagator&lt;br/&gt;TransactionPropagator&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;回调类命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用多核可以增加程序运行的效率，不可避免的引入异步化。我们需要有一定的手段，获取异步任务执行的结果，对任务执行过程中的关键点进行检查。回调类API可以通过监听、通知等形式，获取这些事件。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Handler，Callback，Trigger，Listener&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;callback通常是一个接口，用于响应某类消息，进行后续处理；Handler通常表示持有真正消息处理逻辑的对象，它是有状态的；tigger触发器代表某类事件的处理，属于Handler，通常不会出现在类的命名中；Listener的应用更加局限，通常在观察者模式中用来表示特定的含义。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ChannelHandler&lt;br/&gt;SuccessCallback&lt;br/&gt;CronTrigger&lt;br/&gt;EventListener&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Aware&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Aware就是感知的意思，一般以该单词结尾的类，都实现了Aware接口。拿spring来说，Aware 的目的是为了让bean获取spring容器的服务。具体回调方法由子类实现，比如ApplicationContextAware。它有点回调的意思。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ApplicationContextAware&lt;br/&gt;ApplicationStartupAware&lt;br/&gt;ApplicationEventPublisherAware&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;监控类命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在的程序都比较复杂，运行状态监控已经成为居家必备之良品。监控数据的收集往往需要侵入到程序的边边角角，如何有效的与正常业务进行区分，是非常有必要的。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Metric&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示监控数据。不要用Monitor了，比较丑。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;TimelineMetric&lt;br/&gt;HistogramMetric&lt;br/&gt;Metric&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Estimator&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;估计，统计。用于计算某一类统计数值的计算器。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ConditionalDensityEstimator&lt;br/&gt;FixedFrameRateEstimator&lt;br/&gt;NestableLoadProfileEstimator&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Accumulator&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;累加器的意思。用来缓存累加的中间计算结果，并提供读取通道。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;AbstractAccumulator&lt;br/&gt;StatsAccumulator&lt;br/&gt;TopFrequencyAccumulator&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Tracker&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般用于记录日志或者监控值，通常用于apm中。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;VelocityTracker&lt;br/&gt;RocketTracker&lt;br/&gt;MediaTracker&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;内存管理类命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你的应用用到了自定义的内存管理，那么下面这些名词是绕不开的。比如Netty，就实现了自己的内存管理机制。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Allocator&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;与存储相关，通常表示内存分配器或者管理器。如果你得程序需要申请有规律得大块内存，allocator是你得不二选择。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;AbstractByteBufAllocator&lt;br/&gt;ArrayAllocator&lt;br/&gt;RecyclingIntBlockAllocator&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Chunk&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示一块内存。如果你想要对一类存储资源进行抽象，并统一管理，可以采用它。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;EncryptedChunk&lt;br/&gt;ChunkFactory&lt;br/&gt;MultiChunk&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Arena&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;英文是舞台、竞技场的意思。由于Linux把它用在内存管理上发扬光大，它普遍用于各种存储资源的申请、释放与管理。为不同规格的存储chunk提供舞台，好像也是非常形象的表示。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关键是，这个词很美，作为后缀让类名显得很漂亮。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;BookingArena&lt;br/&gt;StandaloneArena&lt;br/&gt;PoolArena&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Pool&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示池子。内存池，线程池，连接池，池池可用。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ConnectionPool&lt;br/&gt;ObjectPool&lt;br/&gt;MemoryPool&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;过滤检测类命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;程序收到的事件和信息是非常多的，有些是合法的，有些需要过滤扔掉。根据不同的使用范围和功能性差别，过滤操作也有多种形式。你会在框架类代码中发现大量这样的名词。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Pipeline，Chain&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般用在责任链模式中。Netty，Spring MVC，Tomcat等都有大量应用。通过将某个处理过程加入到责任链的某个位置中，就可以接收前面处理过程的结果，强制添加或者改变某些功能。就像Linux的管道操作一样，最终构造出想要的结果。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Pipeline&lt;br/&gt;ChildPipeline&lt;br/&gt;DefaultResourceTransformerChain&lt;br/&gt;FilterChain&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Filter&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;过滤器，用来筛选某些满足条件的数据集，或者在满足某些条件的时候执行一部分逻辑。如果和责任链连接起来，则通常能够实现多级的过滤。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;FilenameFilter&lt;br/&gt;AfterFirstEventTimeFilter&lt;br/&gt;ScanFilter&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Interceptor&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;拦截器，其实和Filter差不多。不过在Tomcat中，Interceptor可以拿到controller对象，但filter不行。拦截器是被包裹在过滤器中。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;HttpRequestInterceptor&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Evaluator&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;英文里是评估器的意思。可用于判断某些条件是否成立，一般内部方法&lt;code&gt;evaluate&lt;/code&gt;会返回bool类型。比如你传递进去一个非常复杂的对象，或者字符串，进行正确与否的判断。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ScriptEvaluator&lt;br/&gt;SubtractionExpressionEvaluator&lt;br/&gt;StreamEvaluator&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Detector&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;探测器。用来管理一系列探测性事件，并在发生的时候能够进行捕获和响应。比如Android的手势检测，温度检测等。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;FileHandlerReloadingDetector&lt;br/&gt;TransformGestureDetector &lt;br/&gt;ScaleGestureDetector&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;结构类命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了基本的数据结构，如数组、链表、队列、栈等，其他更高一层的常见抽象类，能够大量减少大家的交流，并能封装常见的变化。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Cache&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个没啥好说的，就是缓存。大块的缓存。常见的缓存算法有LRU、LFU、FIFO等。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;LoadingCache&lt;br/&gt;EhCacheCache&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Buffer&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;buffer是缓冲，不同于缓存，它一般用在数据写入阶段。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ByteBuffer&lt;br/&gt;RingBuffer&lt;br/&gt;DirectByteBuffer&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Composite&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将相似的组件进行组合，并以相同的接口或者功能进行暴露，使用者不知道这到底是一个组合体还是其他个体。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;CompositeData&lt;br/&gt;CompositeMap&lt;br/&gt;ScrolledComposite&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Wrapper&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来包装某个对象，做一些额外的处理，以便增加或者去掉某些功能。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;IsoBufferWrapper&lt;br/&gt;ResponseWrapper&lt;br/&gt;MavenWrapperDownloader &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Option, Param,Attribute&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来表示配置信息。说实话，它和Properties的区别并不大，但由于Option通常是一个类，所以功能可以扩展的更强大一些。它通常比Config的级别更小，关注的也是单个属性的值。Param一般是作为参数存在，对象生成的速度要快一些。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;SpecificationOption&lt;br/&gt;SelectOption&lt;br/&gt;AlarmParam&lt;br/&gt;ModelParam&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Tuple&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;元组的概念。由于Java中缺乏元组结构，我们通常会自定义这样的类。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Tuple2&lt;br/&gt;Tuple3&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Aggregator&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;聚合器，可以做一些聚合计算。比如分库分表中的sum，max，min等聚合函数的汇集。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;BigDecimalMaxAggregator&lt;br/&gt;PipelineAggregator&lt;br/&gt;TotalAggregator&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Iterator&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;迭代器。可以实现Java的迭代器接口，也可以有自己的迭代方式。在数据集很大的时候，需要进行深度遍历，迭代器可以说是必备的。使用迭代器还可以在迭代过程中安全的删除某些元素。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;BreakIterator&lt;br/&gt;StringCharacterIterator&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Batch&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;某些可以批量执行的请求或者对象。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;SavedObjectBatch&lt;br/&gt;BatchRequest&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Limiter&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;限流器，使用漏桶算法或者令牌桶来完成平滑的限流。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;DefaultTimepointLimiter&lt;br/&gt;RateLimiter&lt;br/&gt;TimeBasedLimiter&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;常见设计模式命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设计模式是名词的重灾区，这里只列出最常使用的几个。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Strategy&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将抽象部分与它的实现部分分离，使它们都可以独立地变化。策略模式。相同接口，不同实现类，同一方法结果不同，实现策略不同。比如一个配置文件，是放在xml里，还是放在json文件里，都可以使用不同的provider去命名。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;RemoteAddressStrategy&lt;br/&gt;StrategyRegistration&lt;br/&gt;AppStrategy&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Adapter&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将一个类的接口转换为客户希望的另一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类一起工作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不过，相对于传统的适配器进行api转接，如果你的某个Handler里面方法特别的多，可以使用Adapter实现一些默认的方法进行0适配。那么其他类使用的时候，只需要继承Adapter，然后重写他想要重写的方法就可以了。这也是Adapter的常见用法。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ExtendedPropertiesAdapter&lt;br/&gt;ArrayObjectAdapter&lt;br/&gt;CardGridCursorAdapter&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Action，Command&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化，对请求排队或记录请求日志，以及支持可撤销的操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来表示一系列动作指令，用来实现命令模式，封装一系列动作或者功能。Action一般用在UI操作上，后端框架可以无差别的使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在DDD的概念中，CQRS的Command的C，既为Command。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;DeleteAction&lt;br/&gt;BoardCommand&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Event&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;表示一系列事件。一般的，在语义上，Action，Command等，来自于主动触发；Event来自于被动触发。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ObservesProtectedEvent&lt;br/&gt;KeyEvent&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Delegate&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代理或者委托模式。委托模式是将一件属于委托者做的事情，交给另外一个被委托者来处理。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;LayoutlibDelegate&lt;br/&gt;FragmentDelegate&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Builder&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;构建者模式的标准命名。比如StringBuilder。当然StringBuffer是个另类。这也说明了，规则是人定的，人也可以破坏。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;JsonBuilder&lt;br/&gt;RequestBuilder&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Template&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;模板方法类的命名。定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;JDBCTemplate&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Proxy&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代理模式。为其他对象提供一种代理以控制对这个对象的访问。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ProxyFactory &lt;br/&gt;SlowQueryProxy&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;解析类命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写代码要涉及到大量的字符串解析、日期解析、对象转换等。根据语义和使用场合的区别，它们也分为多种。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Converter，Resolver&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;转换和解析。一般用于不同对象之间的格式转换，把一类对象转换成另一类。注意它们语义上的区别，一般特别复杂的转换或者有加载过程的需求，可以使用Resolver。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;DataSetToListConverter&lt;br/&gt;LayoutCommandLineConverter&lt;br/&gt;InitRefResolver&lt;br/&gt;MustacheViewResolver&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Parser&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来表示非常复杂的解析器，比如解析DSL。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;SQLParser&lt;br/&gt;JSONParser&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Customizer&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来表示对某个对象进行特别的配置。由于这些配置过程特别的复杂，值得单独提取出来进行自定义设置。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ContextCustomizer&lt;br/&gt;DeviceFieldCustomizer&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Formatter&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;格式化类。主要用于字符串、数字或者日期的格式化处理工作。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;DateFormatter&lt;br/&gt;StringFormatter&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;网络类命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网络编程的同学，永远绕不过去的几个名词。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Packet&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常用于网络编程中的数据包。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;DhcpPacket&lt;br/&gt;PacketBuffer&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Protocol&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同样用户网络编程中，用来表示某个协议。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;RedisProtocol&lt;br/&gt;HttpProtocol&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Encoder、Decoder、Codec&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编码解码器&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;RedisEncoder&lt;br/&gt;RedisDecoder&lt;br/&gt;RedisCodec&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Request，Response&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般用于网络请求的进和出。如果你用在非网络请求的方法上，会显得很怪异。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;CRUD命名&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个就有意思多了，统一的Controller，Service，Repository，没什么好说的。但你一旦用了DDD，那就得按照DDD那一套的命名来。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于DDD不属于通用编程范畴，它的名词就不多做介绍了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;其他&lt;/h2&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Util，Helper&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;都表示工具类，Util一般是无状态的，Helper以便需要创建实例才能使用。但是一般没有使用Tool作为后缀的。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;HttpUtil&lt;br/&gt;TestKeyFieldHelper&lt;br/&gt;CreationHelper&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Mode，Type&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看到mode这个后缀，就能猜到这个类大概率是枚举。它通常把常见的可能性都列到枚举类里面，其他地方就可以引用这个Mode。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;OperationMode&lt;br/&gt;BridgeMode&lt;br/&gt;ActionType&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Invoker，Invocation&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;invoker是一类接口，通常会以反射或者触发的方式，执行一些具体的业务逻辑。通过抽象出invoke方法，可以在invoke执行之前对入参进行记录或者处理；在invoke执行之后对结果和异常进行处理，是AOP中常见的操作方式。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;MethodInvoker&lt;br/&gt;Invoker&lt;br/&gt;ConstructorInvocation&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Initializer&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你的应用程序，需要经过大量的初始化操作才能启动，那就需要把它独立出来，专门处理初始化动作。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;MultiBackgroundInitialize&lt;br/&gt;ApplicationContextInitializer&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Feture，Promise&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它们都是用在多线程之间的，进行数据传递。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Feture相当于一个占位符，代表一个操作将来的结果。一般通过get可以直接阻塞得到结果，或者让它异步执行然后通过callback回调结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但如果回调中嵌入了回调呢？如果层次很深，就是回调地狱。Java中的CompletableFuture其实就是Promise，用来解决回调地狱问题。Promise是为了让代码变得优美而存在的。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Selector&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据一系列条件，获得相应的同类资源。它比较像Factory，但只处理单项资源。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;X509CertSelector&lt;br/&gt;NodeSelector&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Reporter&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用来汇报某些执行结果。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ExtentHtmlReporter&lt;br/&gt;MetricReporter&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Constants&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般用于常量列表。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Accessor&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;封装了一系列get和set方法的类。像lombok就有Accessors注解，生成这些方法。但Accessor类一般是要通过计算来完成get和set，而不是直接操作变量。这适合比较复杂的对象存取服务。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;ComponentAccessor&lt;br/&gt;StompHeaderAccessor&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Generator&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生成器，一般用于生成代码，生成id等。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;CodeGenerator&lt;br/&gt;CipherKeyGenerator&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;End&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;写代码，看源码，怎么少得了意会和神通？代码要带感，命名也风骚。命名起的好，代码会看起来很爽，大家也都喜欢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说不清楚的事情，给一段代码，咱就能懂！就是这么神奇！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实，写专业牛b的代码，并不需要了解太多的英文单词，大多数时候用不着英文4级这么了不起的水平。只需要有限的单词，就能玩出代码界好莱坞的感觉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看完本文之后，翻一翻开源软件的代码们，看看是不是这个理？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面这些命名，高频率存在于各种框架中。你要是搞懂了这些名词，阅读大部分源代码可以说是一点障碍都没有了。在同一个场景下，优先使用这些名词，已经是大家心照不宣的规范。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有很多名词来自于设计模式，但又在特定场合使用了比较特殊的单词，比如Provider，大家仔细感受下其中的区别就可以了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;命名是编码中非常重要的一环，希望大家找到其中的规律，让你的代码功能上强大，颜值上好看；祝大家的薪资水涨船高，配得上你的这份专业和工匠精神。&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;作者简介：&lt;strong&gt;小姐姐味道&lt;/strong&gt;  (xjjdog)，一个不允许程序员走弯路的公众号。聚焦基础架构和Linux。十年架构，日百亿流量，与你探讨高并发世界，给你不一样的味道。我的个人微信xjjdog0，欢迎添加好友，进一步交流。&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;推荐阅读：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA4MTc4NTUxNQ==&amp;amp;action=getalbum&amp;amp;album_id=1551616798431690754#wechat_redirect&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;1. 玩转Linux&lt;/a&gt;&lt;br/&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA4MTc4NTUxNQ==&amp;amp;action=getalbum&amp;amp;album_id=1339444055490592770#wechat_redirect&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;2. 什么味道专辑&lt;/a&gt;&lt;/p&gt;&lt;p&gt;3. &lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzA4MTc4NTUxNQ==&amp;amp;mid=2650521059&amp;amp;idx=1&amp;amp;sn=d6742140c684f16cb4435508bdb5a418&amp;amp;scene=21#wechat_redirect&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;蓝牙如梦&lt;/a&gt;&lt;br/&gt;4. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MTc4NTUxNQ==&amp;amp;mid=2650520865&amp;amp;idx=1&amp;amp;sn=ff7a751a092000a9aec8e47df35ab25a&amp;amp;chksm=8780bae5b0f733f3bd75575ef9c14e548bd833bf2ba1289b6f77fd0bbcc5fbc264c19c8cb04a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;杀机！&lt;/a&gt;&lt;br/&gt;5. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MTc4NTUxNQ==&amp;amp;mid=2650521932&amp;amp;idx=1&amp;amp;sn=2a171aaaeb1e6124c86f39a46075363c&amp;amp;chksm=8780c688b0f74f9e25baf3495883dfe50541068dc4e4c1ae8d45ead7daee208a94563af74312&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;失联的架构师，只留下一段脚本&lt;/a&gt;&lt;br/&gt;6. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MTc4NTUxNQ==&amp;amp;mid=2650521617&amp;amp;idx=1&amp;amp;sn=86e4bee100fa78ccc94e24bb27f0e71a&amp;amp;chksm=8780c7d5b0f74ec36bd0a06167f5b84777ecb2d48b57f3d96e3ce3c4575e6b777dda0188376f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;架构师写的BUG，非比寻常&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2423218b35403fd88e21edee75c682ef</guid>
<title>Filebeat + ELK 配置及常用操作</title>
<link>https://toutiao.io/k/2op1r08</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;preview&quot;&gt;&lt;h2&gt;背景介绍&lt;/h2&gt;

&lt;p&gt;最近工作涉及几台新服务器的日志需要接入ELK系统，配置思路如下：&lt;/p&gt;

&lt;p&gt;使用Filebeat收集本地日志数据，Filebeat监视日志目录或特定的日志文件，再发送到消息队列到kafka，然后logstash去获取消费，利用filter功能过滤分析，最终存储到elasticsearch中。&lt;/p&gt;

&lt;p&gt;filebeat和flume都具有日志收集功能，不过filebeat更轻量，使用go语言编写占用资源更少，可以有很高的并发，带有内部模块（auditd，Apache，Nginx，System和MySQL），可通过一个指定命令来简化通用日志格式的收集，解析和可视化；flume使用java开发，需要安装java环境，相对会比较重。&lt;/p&gt;

&lt;p&gt;当然两者也存在区别：Filebeat收集数据的速度大于写入速度的时候可能出现数据丢失的现象，而flume会在收集数据和写入数据之间做出调整，保证能在两者之间提供一种平稳的数据状态。可以实时的将分析数据并将数据保存在数据库或者其他系统中，不会出现数据丢失的现象。&lt;/p&gt;

&lt;p&gt;以下仅记录配置过程及常见的几种排错命令，安装篇会独立一篇做详细介绍。&lt;/p&gt;

&lt;h2&gt;配置信息&lt;/h2&gt;

&lt;h3&gt;filebeat配置&lt;/h3&gt;

&lt;p&gt;我是直接&lt;code&gt;yum install filebeat&lt;/code&gt;一键安装的，这里不做具体讲解官网有详细介绍：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/beats/filebeat/current/index.html&quot;&gt;https://www.elastic.co/guide/en/beats/filebeat/current/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装完成后我们以配置采集/var/log/messages为例，配置如下&lt;/p&gt;

&lt;pre lang=&quot;shell&quot;&gt;&lt;code&gt;# egrep -v &#x27;#|^$&#x27; /etc/filebeat/filebeat.yml
filebeat.inputs:
- type: log
  enabled: true
  paths:
    - /var/log/messages
filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: false
setup.template.settings:
  index.number_of_shards: 1
setup.kibana:
output.kafka:
  hosts: [&quot;10.114.102.30:9092&quot;, &quot;10.114.102.31:9092&quot;, &quot;10.114.102.32:9092&quot;, &quot;10.114.102.33:9092&quot;, &quot;10.114.102.34:9092&quot;]
  topic: T621_messages
  partition.round_robin:
    reachable_only: false
  required_acks: 1
  compression: gzip
processors:
  - add_host_metadata:
      when.not.contains.tags: forwarded
  - add_cloud_metadata: ~
  - add_docker_metadata: ~
  - add_kubernetes_metadata: ~
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有几个参数需要注意的：&lt;/p&gt;

&lt;p&gt;paths表示需要提取的日志的路径，将日志输出到kafka中，创建topic&lt;/p&gt;



&lt;p&gt;0：这意味着生产者producer不等待来自broker同步完成的确认继续发送下一条（批）消息。此选项提供最低的延迟但最弱的耐久性保证（当服务器发生故障时某些数据会丢失，如leader已死，但producer并不知情，发出去的信息broker就收不到）。&lt;/p&gt;

&lt;p&gt;1：这意味着producer在leader已成功收到的数据并得到确认后发送下一条message。此选项提供了更好的耐久性为客户等待服务器确认请求成功（被写入死亡leader但尚未复制将失去了唯一的消息）。&lt;/p&gt;

&lt;p&gt;-1：这意味着producer在follower副本确认接收到数据后才算一次发送完成。 此选项提供最好的耐久性，我们保证没有信息将丢失，只要至少一个同步副本保持存活。 三种机制，性能依次递减 (producer吞吐量降低)，数据健壮性则依次递增。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;json.keys_under_root: true&lt;/li&gt;
&lt;li&gt;json.add_error_key: true&lt;/li&gt;
&lt;li&gt;json.message_key: log&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这三行是识别json格式日志的配置，若日志格式不为json格式，需要注释掉，否则收集到的日志为filebeat的错误日志。&lt;/p&gt;

&lt;h3&gt;kafka配置&lt;/h3&gt;

&lt;p&gt;kafka原来已经安装并配置好了，这里不再说明具体安装过程，后续会出一篇ELK完整搭建过程。&lt;/p&gt;

&lt;p&gt;这里不做重点讲解，可直接查官网：&lt;a href=&quot;https://kafka.apache.org/documentation/#quickstart&quot;&gt;https://kafka.apache.org/documentation/#quickstart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;因为有5台配合zookeeper做了集群，选其中一台配置如下：&lt;/p&gt;

&lt;pre lang=&quot;shell&quot;&gt;&lt;code&gt;# egrep -v &#x27;#|^$&#x27; /home/kafka/kafka/config/server.properties
broker.id=1     #按顺序写，不要乱
listeners=PLAINTEXT://0.0.0.0:9092       #自己的ip
advertised.listeners=PLAINTEXT://10.114.102.30:9092
num.network.threads=24
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
log.dirs=/data/kafka
num.partitions=8
num.recovery.threads.per.data.dir=1
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1
log.retention.hours=48
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000
zookeeper.connect=10.114.102.30:2181,10.114.102.31:2181,10.114.102.32:2181,10.114.102.33:2181,10.114.102.34:2181
zookeeper.connection.timeout.ms=6000
auto.create.topics.enable=false
group.initial.rebalance.delay.ms=0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意：每台服务器除broker.id需要修改之外，其他属性保持一致。&lt;/p&gt;

&lt;h3&gt;logstash配置&lt;/h3&gt;

&lt;p&gt;logstash安装也是直接参考官网就可以了&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/logstash/7.x/index.html&quot;&gt;https://www.elastic.co/guide/en/logstash/7.x/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;不过有个地方要注意，kafka和logstash的版本兼容问题，以下是kafka使用的版本：&lt;/p&gt;

&lt;pre lang=&quot;shell&quot;&gt;&lt;code&gt;find /home/kafka/kafka/libs/ -name \*kafka_\* | head -1 | grep -o &#x27;\kafka[^\n]*&#x27;   
kafka_2.11-1.1.0.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过查找rpm包可以看到logstash用的是7.8.0&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/home/cxhchusr/logstash-7.8.0.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在&lt;code&gt;conf.d&lt;/code&gt;目录下配置消费messages的文件如下&lt;/p&gt;

&lt;pre lang=&quot;shell&quot;&gt;&lt;code&gt;# egrep -v &#x27;#|^$&#x27; /etc/logstash/conf.d/T621_messages.conf 
input {
  kafka {
    bootstrap_servers =&amp;gt; &quot;10.114.102.30:9092,10.114.102.31:9092,10.114.102.32:9092,10.114.102.33:9092,10.114.102.34:9092&quot;
    client_id =&amp;gt; &quot;T621_messages&quot;
    group_id =&amp;gt; &quot;T621_messages&quot;
    auto_offset_reset =&amp;gt; &quot;latest&quot;
    consumer_threads =&amp;gt; 10
    decorate_events =&amp;gt; true
    topics =&amp;gt; [&quot;T621_messages&quot;]
    decorate_events =&amp;gt; true
    type =&amp;gt; syslog
    }
}
filter{
  grok {
    match =&amp;gt; { &quot;message&quot; =&amp;gt; &quot;%{SYSLOGLINE}&quot; }
  }
  date {
    match =&amp;gt; [ &quot;logdate&quot;, &quot;YYYY-MM-dd HH:mm:ss.SSS&quot; ]
    target =&amp;gt; &quot;@timestamp&quot;
    timezone =&amp;gt;&quot;+00:00&quot;
  }
  mutate{
    remove_field =&amp;gt; &quot;logdate&quot;
  }
}
output {
  elasticsearch {
    hosts =&amp;gt; [&quot;10.114.102.30:9200&quot;, &quot;10.114.102.31:9200&quot;, &quot;10.114.102.32:9200&quot;, &quot;10.114.102.33:9200&quot;, &quot;10.114.102.34:9200&quot;]
    index =&amp;gt; &quot;t621_messages-%{+YYYY.MM.dd}&quot;
    user =&amp;gt; caixun
    password =&amp;gt; &quot;******()90&quot;
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;注意：es索引需要全部为小写。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最后启动即可，并加入开机自启动&lt;code&gt;/etc/rc.local&lt;/code&gt;：&lt;/p&gt;

&lt;pre lang=&quot;shell&quot;&gt;&lt;code&gt;nohup /usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/ &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;kibana创建索引&lt;/h3&gt;

&lt;p&gt;logstash配置完成后即可在kibana创建索引&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/canhui/picture/raw/master/2021/images/image-20210818150900238.png&quot; alt=&quot;image-20210818150900238&quot;/&gt;&lt;/p&gt;

&lt;p&gt;创建完成效果如下，表示接入成功：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://gitee.com/canhui/picture/raw/master/2021/images/image-20210818150651938.png&quot; alt=&quot;image-20210818150651938&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;常用排查命令&lt;/h2&gt;

&lt;p&gt;配置过程中除了在kafka上创建topic，还需查询topic是否创建成功、消费情况、以及消息处理情况。&lt;/p&gt;

&lt;p&gt;以及es是否正常入库并创建了索引。下面列出几个ELK运维常用命令。&lt;/p&gt;

&lt;h3&gt;kafka常用运维指令&lt;/h3&gt;



&lt;p&gt;/home/kafka/kafka/bin/kafka-topics.sh --zookeeper 127.0.0.1:2181 --list&lt;/p&gt;



&lt;p&gt;/home/kafka/kafka/bin/kafka-topics.sh --zookeeper 127.0.0.1:2181 --create --partitions 10 --replication-factor 1 --topic T621_messages&lt;/p&gt;



&lt;p&gt;/home/kafka/kafka/bin/kafka-topics.sh --zookeeper 127.0.0.1:2181 --describe --topic T621_messages&lt;/p&gt;



&lt;p&gt;发送：/home/kafka/kafka/bin/kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic T621_messages&lt;/p&gt;

&lt;p&gt;接收：/home/kafka/kafka/bin/kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic T621_messages --from-beginning&lt;/p&gt;



&lt;p&gt;/home/kafka/kafka/bin/kafka-consumer-groups.sh --bootstrap-server 127.0.0.1:9092 --list ##查看组列表&lt;/p&gt;

&lt;p&gt;/home/kafka/kafka/bin/kafka-consumer-groups.sh --bootstrap-server 127.0.0.1:9092 --describe --group T621_messages  ##偏移量&lt;/p&gt;

&lt;p&gt;/data/kafka/kafka/bin/kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic T621_messages --from-beginning&lt;/p&gt;

&lt;h3&gt;ES常用运维指令&lt;/h3&gt;



&lt;p&gt;curl -u caixxx:&quot;CAIxxx()90&quot; &#x27;10.114.102.30:9200/_cluster/health&#x27;&lt;/p&gt;



&lt;p&gt;curl -u caixxx:&quot;CAIxxx()90&quot; &#x27;10.114.102.30:9200/_cat/indices?v&#x27;&lt;/p&gt;



&lt;pre lang=&quot;shell&quot;&gt;&lt;code&gt;# curl -u caixun:&quot;CAIXUN()90&quot; &#x27;10.114.102.30:9200/_cat&#x27;
=^.^=
/_cat/allocation
/_cat/shards
/_cat/shards/{index}
/_cat/master
/_cat/nodes
/_cat/tasks
/_cat/indices
/_cat/indices/{index}
/_cat/segments
/_cat/segments/{index}
/_cat/count
/_cat/count/{index}
/_cat/recovery
/_cat/recovery/{index}
/_cat/health
/_cat/pending_tasks
/_cat/aliases
/_cat/aliases/{alias}
/_cat/thread_pool
/_cat/thread_pool/{thread_pools}
/_cat/plugins
/_cat/fielddata
/_cat/fielddata/{fields}
/_cat/nodeattrs
/_cat/repositories
/_cat/snapshots/{repository}
/_cat/templates
/_cat/transforms
/_cat/transforms/{transform_id}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;过滤索引查看消息是否成功存储在es，有的话代表配置成功。&lt;/p&gt;

&lt;p&gt;---- 钢铁 &lt;a href=&quot;mailto:648403020@qq.com&quot;&gt;648403020@qq.com&lt;/a&gt; 2021.08.20&lt;/p&gt;

&lt;h2&gt;参考鸣谢&lt;/h2&gt;

&lt;p&gt;官方kafka：&lt;a href=&quot;http://kafka.apache.org/&quot;&gt;http://kafka.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>db9ace8f31fcb06f759213290bbf7f61</guid>
<title>对 DDD 的常见误区</title>
<link>https://toutiao.io/k/ai9the0</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;strong&gt;&lt;span&gt;这里是Z哥的个人公众号&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;每周五11：45 按时送达&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;当然了，也会时不时加个餐～&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;我的第「205」篇原创敬上&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;大家好，我是Z哥。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我从 2014 年开始接触 DDD 到现在也有 7 年多时间了，在这个期间踩过很多坑，也是自己慢慢从充满疑问，然后一步一步摸索着到如今可以轻松落地 DDD 的地步。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在 2014 年那会，DDD 的社区远不如现在那么繁荣，甚至还有很多鄙视它的声音。因此网上的资料也很少，大部分的知识获取源自两本书《领域驱动设计 软件核心复杂性应对之道》和《实现领域驱动设计》。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;所以，我的 DDD 之路和现在的很多人可能不太一样，我是沿着一个书本上浓缩后的核心思想，然后自下而上地通过自己的摸滚打爬慢慢构建的知识体系，而现在很多人是照着一些课程中教的偏实践型的知识，自上而下的模仿，然后再根据自己的理解和场景做出调整优化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;最近几年 DDD 一直很火，网上的课程也有很多。但是说实话，DDD 里面的大多数概念还是很晦涩的，没有那种特别清晰规则，可以像代码规范那样明确指导我们如何 coding，什么是好代码，什么是坏代码。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;很多小伙伴从我之前在博客园写的 DDD 系列找过来，和我交流 DDD 相关的问题，发现大家对其中的不少概念还存在一些疑惑。或者说，有些概念自己觉得清楚了，但是落地的时候好像又不知道从何下手。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;今天我们就来聊聊我收集到的一些大家的困惑，来和大家交流一下我的观点。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;/01  DDD 必须要配合微服务一起用？/&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这个问题还有另一种问法，“单体应用能用 DDD 吗？”。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;先说结论，必须可以，不是微服务也可以用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我觉得大家之所以形成这个误区背后的逻辑是这样的。因为 DDD 提倡构建领域模型，划定限界上下文，而限界上下文在微服务中恰好能体现为一个单独的Service，看上去是如此的天衣无缝，它们俩是一组黄金搭档，就该一起使用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其实，在我看来这两者之间的关系并不是搭档关系，而是一种“道”和“术”的关系。DDD 是一种架构设计方法论，而微服务是一种具体的架构设计实践方案。前者是“道”，后者是“术”，符合某一个“道”的“术”从来都不只有一个。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;可能你要问了，单体应用怎么用 DDD ？建议你可以尝试用模块的概念来划定限界上下文，并且将不同的模块分别独立一个包，以此达到类似 Service 的隔离效果。剩下的建模工作就没什么不同了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;/02  限界上下文只能通过拆分成独立的 Service 体现？/&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这个问题其实在第一点里已经解答了，不用拆分成独立的 Service 也可以体现限界上下文。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果你存在这个问题的困惑，大概率是你在平时的开发中没有带着「上下文」这个概念去 coding。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因为我们设计的每一个模型，其实都是对现实世界的抽象，而现实世界中的每一个概念都有它所对应的上下文，脱离上下文任何一个词都有歧义。哪怕是相同的一个词在不同的上下文里表达的含义可能不同，比如，售票系统的中的“座位”与&lt;span&gt;设计&lt;/span&gt;电影院的规划系统里的“座位”并不是同一个东西。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;/03  业务简单的项目不适合 DDD ？/&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这个问题其实就类似于，面积小的房子做装修是不是不需要精心设计？只有那些高大上的别墅、甚至是大型场馆才需要精心设计？&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我想答案是显而易见的。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;不管是简单的项目还是复杂的项目，他们都不影响良好的抽象设计给项目带来的好处。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;不过有些人可能纠结的点在于与 DDD 配套的技术框架、基础设施太复杂。我觉得这个想法就有点本末倒置了。不管是什么技术框架、组件，本身只是一种工具。你拿微服务的那套放到一个简单的单体应用里自然会觉得复杂。但是我们相比回到使用传统的三层架构，更应该是要找到，甚至是自己打造更合适的工具。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;/04  Entity 的属性字段需要对应数据表吗？/&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我认为这个问题的答案首先有一点是确定的，就是：不像三层架构那样，完全一一对应。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因为 Entity 里面可能会嵌套其它的 Entity，以及 ValueObject。所以里面的属性数量大多会比数据表的字段更多。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另外，我觉得这里最关键的问题是，Entity 的唯一标识该如何体现。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我自己在实践的时候的标准是，尽量只用业务标识，如果必须要用 Guid，确保它是不可修改，甚至是不可见的。因为 Guid 并不是领域知识的一部分，它只是为了解决技术层面问题而引入的一个东西。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;/05  Application、DomainService 的区别？/&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;很多人不重视 DomainService 的设计，其实它非常重要。因为在领域知识中必然存在很多「行为」不属于任何一个 Entity。比如电商领域中的付款这个动作，到底是放在订单的 Entity 上？还是账户的 Entity 上？其实你会发现都不太适合。此时就是 DomainService 出场的时候了，它避免了某些 Entity 承担过多与其无关的业务，导致过于臃肿。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Application 的职责类似于一个调度器，用来调度各个业务。但是它不应该体现具体的细节，业务的细节应该被封装在 Entity、ValueObject 以及 DomainService 中。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;有几个小技巧可以判断是否体现了业务。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;概括的来说，Application层只做一件事：将输入的CQE（Command、Query、Event），通过调用领域对象进行业务处理，然后将结果组装成 DTO 返回。&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;/06  防腐层在那一层做？Application层？/&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我觉得防腐层应该放在 Infrastructure 层，与 IRepository 的实现 Repository 同层，为了便于区分，你也可以将它单独一个包。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;防腐层中的各种 Facade 应该与 Repository 有共同的 IRepository 。因为防腐层背后具体要做的事情就是从其它系统获取数据，这个职责和 Repository 是一致的。Repository 屏蔽了操作数据库的细节，而防腐层屏蔽了对接其它系统的细节。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;我们这次就聊这么多。以上 6 个问题都是有多个人同时提到过的问题，我想它们也更具普遍性。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;最后我们总结一下。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;DDD 必须要配合微服务一起用？不是，微服务只是 DDD 思想的一种实现方式。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;限界上下文只能通过拆分成独立的 Service 体现？不是，单体应用中通过「模块」也可以。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务简单的项目不适合 DDD ？不是，DDD 这个方法论对任何项目都有帮助。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Entity 的属性字段需要对应数据表吗？无法做到一一对应，因为 Entity 可能存在嵌套。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Application、DomainService 的区别？&lt;span&gt;Application&lt;/span&gt;不包含业务，仅对业务进行调度。DomainService 实现&lt;span&gt;不属于任何一个 Entity&lt;/span&gt; 的方法。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;防腐层在那一层做？Application 层？Infrastructure 层，与 IRepository 的实现 Repository 同层。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;好了，希望对你有所帮助。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;最后再讲个题外话，「六边形架构」和「洋葱架构」在这些年伴随着 DDD 的概念被普及。其实所谓的六边形架构，他们的边就是由 DDD 概念中的防腐层构建的。所谓的洋葱架构，就是在六边形架构的基础上，针对内部业务对象进行建模，而 DDD 就是一种建模思想。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐阅读：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;原创不易，如果你觉得这篇文章还不错，就「&lt;/span&gt;&lt;span&gt;&lt;strong&gt;点赞&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;」或者「&lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;」一下吧，鼓励我的创作 ：）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;也可以分享我的公众号名片给有需要的朋友们。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU2NzEwMDc4OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/oB5bd6W6hI1ENbrFbGjEucl1Az92hEuwmUSdaNXxibiaWuO9sLTPHokw00p8ZxAYdIJJJ7FXj77Ts0YoV5KwEKCA/0?wx_fmt=png&quot; data-nickname=&quot;跨界架构师&quot; data-alias=&quot;Zachary_ZF&quot; data-signature=&quot;坚持原创。专注大型互联网技术，涉猎产品、运营。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;如果你有关于软件架构、分布式系统、产品、运营的困惑&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以试试点击「&lt;strong&gt;阅读原文&lt;/strong&gt;」&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a92f5a3ad871535febea26a6adbd5571</guid>
<title>参加培训 VS 自学编程</title>
<link>https://toutiao.io/k/1bu529g</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;h3&gt;&lt;strong&gt;我为什么要学习编程&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;有的人觉得编程很酷，就像电影里拍出来的那样，手不停的在键盘上飞舞，世界就是你们的了；有的人觉得编程很有成就，解决一个现实问题带来的自豪感只有自己知道；有的人觉得编程工资高，事实也是这样，相比较其他一般的行业，程序员的工资已经很高了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;而我认为编程这个技能，给我们带来的是命运的转折，TA打开了一个新世界的大门，现如今这个世界离开软件已经无法运转了，而你只有掌握了这个技能，才有参与到世界运转的机会。有一句话话糙理不糙：编程还是被编程！&lt;/p&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;初学者遇到的问题&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;编写代码，一开始会遇到很多困难，从概念的理解（很多是比较抽象的），到工具的使用，再到Bug的解决思路，现实世界问题的理解和抽象，每个方面都需要进行专门的训练和大量的练习才能熟练。对于初学者，事情会变得混乱和复杂，但如果遵循正确的路线图和不断的练习，你可能会做到这一点。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;下面是编程的一般步骤：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;制定一个项目目标&lt;/p&gt;&lt;p&gt;首先，明确一个项目，比如做一个APP，或者一个Blog，在明确一个时间点，有目标和时间点，才有动力和压力去完成，才会有计划产生。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;选择你的职业&lt;/p&gt;&lt;p&gt;在一个项目中，会涉及到各个工种，有设计，产品，需求人员，前端工程师，后端工程师，测试工程师，数据分析师，大数据工程师等等，编码是不同领域的一部分，因此选择你未来想从事的职业是至关重要的。最好考虑一下你能投入多少时间和金钱来提高你的编码技能。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;选择一种编程语言&lt;/p&gt;&lt;p&gt;这将取决于你选择的职业，不同职位使用的语言是不一样的。以下是各个领域所需的一些语言的列表（只是部分，还有很多需要根据公司技术路线来确定）：&lt;/p&gt;&lt;p&gt;&lt;code/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;HTML、CSS、Javascript、PHP、Java、Python&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;寻找有效的资源&lt;/p&gt;&lt;p&gt;互联网上堆积如山的各种课程和资料，能够从中找到有效的，而且对你目前阶段有用的资料，实在是很难。为了避免困惑，我们必须努力朝着正确的方向前进，正确评估你自身目前的水平，建议找一位业内人士，向他请教和咨询，并希望得到建议。然后去互联网上有目标的寻找资源，开始学习。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;选择一款IDE&lt;/p&gt;&lt;p&gt;现在还使用记事本进行编码，已经不现实了。有很多智能的代码集成开发工具使我们可以事半功倍，根据你使用的开发语言选择一款IDE，不用想太多，目前流行的就行。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;开始编程练习&lt;/p&gt;&lt;p&gt;最好的实践方法是用特定的语言构建一个项目，有了目标就会有动力，你可以从小任务开始，然后把自己推向现实世界的大项目。或者加入任何的开发社区，提出问题或者帮助解答问题，这将帮助你与各种开发者进行互动，并讨论您的问题，获得正反馈，这将建立你的信心，并激励你继续学习下去。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;对于初学者来说，这个过程是漫长和枯燥的，没有强大的自驱力是很难完成到最后的，因为学习本身就是逆人性的。而且，由于初学者经验不足，容易浪费大量的时间去解决已经被无数人解决过的问题，比如某个IDE的用法，比如某个语法知识问题，又比如某个框架的问题等等，这些问题都会导致初学者丧失信心斗志。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;如何选择学习方式&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;是自学编程还是参加培训，最终答案还是看个人。编程这项技能其实还是有套路的，前人有了大量的经验积累之后，而对于初学者来说只要吃透这些经验，那么对于一般的编程工作问题是不大的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果你是一个自驱力特别强的一个人，再加上会使用搜索引擎，明白最终就业需要哪些技能，那么你会从互联网上找到大量的有效的学习资料，完全可以自学成才，当然这个过程可能比较漫长，一年或者数年都有可能。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果你的自驱力不够，信息收集整理能力不够，那么还是去参加培训比较合适，培训机构会根据目前就业市场需要的编程技能，成体系的输出，采取灌输结合大量练习的方式将技能传授给你，这样可以保证在短时间内你会获得行业需要的编程技能，从而实现就业。而且，培训机构的学习氛围也是解决自驱力不够的一个有效的方法。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;另外，培训机构的经验可以缩短你解决问题的时间，以及缩短你获得经验的时间，换句话就是以金钱换时间，是实现就业为唯一目标，这个也是培训机构的终极目标。好的培训机构，可以让你不仅仅学习到实际的开发套路经验，还会教你学习方法和解决实际问题的思路，学习方法面向的是未来新出现的各种技术，而解决问题思路才是最宝贵的。&lt;/p&gt;&lt;h3&gt;&lt;br/&gt;&lt;/h3&gt;&lt;h3&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们从为什么学习编程开始，接着介绍了初学者可能会遇到的问题。编程并不难，最重要的是如何开始。最后一起讨论了是自学还是参加培训，这个最终还是要看个人。好了，如果你是一个初学者，并且想在这个行业深入下去，那么请加我微信，拉你入群，我们一起聊聊。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/3SkyOMFuaN0nql8fRzEnu8WtuYFb5Q9aDsggD8tia6zcGzBfrPmFJqAeEJJwWufjKw276FQicUV7oLkhuaWKNiarQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA5NjcxMjc4OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/3SkyOMFuaN3HMDKgGdbyc4DGKBTlLCHsicBcoHynQojSmA69oNZmWiamxZQpjpRMvHrv0Cba3RXWjdRsU5iaZSHQg/0?wx_fmt=png&quot; data-nickname=&quot;昌明说&quot; data-alias=&quot;changmingTalk&quot; data-signature=&quot;躲在IT行业里的师范生&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>060cc07e8a4f76965700f51f806242c6</guid>
<title>你不知道的 LeetCode 技巧（第二篇）</title>
<link>https://toutiao.io/k/9782d9z</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI4MzUxNjI3OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/liaT5dytkaTemW9Fpf8y5Cez0KhBtoEU6jfSorN0N12SMnc3AkGkLoFcY9HNl2hRK3gIYyZ7g42wk5nXvSUq0Tg/0?wx_fmt=png&quot; data-nickname=&quot;力扣加加&quot; data-alias=&quot;leetcode-pp&quot; data-signature=&quot;力求用清晰直白的方式还原解题的过程，努力做西湖区最好的算法题解。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上一篇 &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&amp;amp;mid=2247489335&amp;amp;idx=1&amp;amp;sn=2a660c8784d85a234ed9ad2db166a8da&amp;amp;chksm=eb88db2edcff5238e58396a68f9bc79b8a274b3573188928db284f980434faf8268023e7c80b&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;你不知道的 LeetCode 技巧（第一篇）&lt;/a&gt; 讲述了三个 JS 刷题的小技巧。今天来分享几个 leetcode 通用小技巧，不管你是用什么语言刷题都可以使用。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;tip1 - 中英文切换&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;力扣中国部分题目描述由于翻译的原因，会变得难以理解，甚至出现&lt;strong&gt;「翻译错误导致题意发生变化的情况」&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个时候推荐大家使用&lt;strong&gt;「切换语言」&lt;/strong&gt;功能，将其转化为英文。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下是中文题目描述：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8490566037735849&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8M9CWtf9H4DMxCSIK59BsINZIGuyibPQ7z9l8Nibsib7Iz8uUvCEr3ibEYGA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1272&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来，可以点击下面的图标切换语言。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8391608391608392&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8M8DwhZyCXbW5Nuicqib20jokAh2O2ib0DpYa24VxP0NFh3ABM9es2cgdhg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1287&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这只是切换单个题目的语言，如果你想切换整个网站的语言，可以点击力扣中国顶部右侧的这个按钮。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8MYuJxwhyvdiccHjQKfWGraOs5oJTwFXs3wKSR3TQuAmqwcoibqjHibAtKA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;848&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;tip2 - 快捷键&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用快捷键可以显著提高效率，刷力扣也是一样。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下是我常用的两个快捷键，强烈推荐使用。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;提交代码：cmd + enter&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;执行代码（测试）：cmd + `&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前力扣编辑器提供八个快捷键绑定，更多快捷键可以参考力扣的提示。如下所示：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.677115987460815&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8MXjBjGsnbZR6zQZgjOGBe0s3CAG7PGjz7ic2VCz1nF7ibp3nWvJ8BZpnw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1595&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外如果你是 windows 那么上述快捷键肯定不生效，那么你可以按照如上方式查看文档了解具体的快捷键绑定。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;tip3 - 限定时间刷题&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;之前我提到过：&lt;strong&gt;「推荐大家给自己做题设定一个时间限制」&lt;/strong&gt;。可以采用如下方式：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家可以做题时点击这个给自己限定时间。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.21602513747054203&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8MQGgdXtFLbTVnHXic2k2U8QZE5C28JdjT3X8AYKuGCKETcfJIYU4Q4ug/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2546&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;值得注意的是，默认限制时间是 30 分钟。&lt;strong&gt;「建议大家逐步缩短时间，做到 15 分钟以内」&lt;/strong&gt;，有条件的话挑战一下&lt;strong&gt;「五分钟」&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;tip4 - 在线面试&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你是面试官，也可直接使用力扣来出题。力扣中的很多功能都可以使用。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.17024793388429751&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8MtkoVME5RN0KkO7B7C37t1icwlbBu5XibTdUcfQzImpmKvYdSIvxpaAxg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2420&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;你可以自由添加力扣原题，当然也可以自己出题。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.23464373464373464&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8M9beZBFdvtaJQlwE53G1aNzHlia13ExFXhkZib2hq9VdHOBYYl5MpBicVw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1628&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更有意思的的是，竟然可以出前端题 😹。其实前端题就是一个类似于 stackblitz 的东西。不得不说，如果你是前端面试官，这个在线面试功能可以说很全面了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6936416184971098&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8MDaJZLHs5XohwoNP3nSDXIqpSwTV1sSF8LJ0lzWAn4Sf39ngDXl1sgQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1557&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外也支持文字聊天，语音，视频，在线评价等常见的面试功能。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5101558809636277&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8MkJD85O8noicMHfWzOw0LIicz6qlic3bFsfL8yeXBuqMictsMYyjic9eQzQA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2117&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单适用了一下，一个月可以免费创建 10 次面试，每次面试不能超过三个小时，总体来说还蛮方便的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;tip5 - 刷题插件&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我自己做了一个刷题插件 leetcode-cheatsheet，它扩展了力扣平台的功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7831762146482959&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8MoCybSLUrgIBMoZZVUibdOLjjT9e5sNmhhDKc3pjznwLzrFkqyXdZIZg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1379&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.20785219399538107&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8M0dsudiaibe6BMZc0Bo0NsAZZubcewVC4WsUCWYyqRovx5cPxNeWE0HZQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;2598&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6290040768782761&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8Mj1QWUzUarzzwjqWbn3MSDpHCHhHAF19TO8YT6aFdwLzPJEuss8wEbQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1717&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;复杂度对照表， 直接根据数据规模反猜答案的算法复杂度&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9769850402761795&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/liaT5dytkaTeKCPMiaspRH1DDcwMDmXib8Mma9TS2LGTf7OiaOjFeXWBk0KWibkbEUAjg4hQInAwwYqBxIZjpxCZWibQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;869&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;功能太多了，不一一介绍了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更多功能以及&lt;strong&gt;「如果获取插件」&lt;/strong&gt;可以参考之前我写的文章： &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&amp;amp;mid=2247487135&amp;amp;idx=1&amp;amp;sn=798689993858906b7b305348a98a0f2d&amp;amp;chksm=eb88c286dcff4b909e794c2240886db3cc8b0580dc9cf3ded8a70e6b0580e1545a5a2fa9ac27&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;刷题插件新功能 - 「数据结构可视化」上线啦&lt;/a&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;文章写于 2021-08-17。如果后续力扣改版，那么相应功能可能会发生变化。如果后续力扣推出新的功能，力扣加加也会第一时间同步大家。比如力扣刚刚发布 APP 的时候，我就参与了内测第一时间给大家带来了这篇文章 &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&amp;amp;mid=2247486498&amp;amp;idx=1&amp;amp;sn=b5d05dd7960e6378cecc5b3cdeaf2be0&amp;amp;chksm=eb88c03bdcff492d50c1f90fea12e0317e264b1309081058741a5be6733ce236521da148e903&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;/&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI4MzUxNjI3OA==&amp;amp;mid=2247486498&amp;amp;idx=1&amp;amp;sn=b5d05dd7960e6378cecc5b3cdeaf2be0&amp;amp;chksm=eb88c03bdcff492d50c1f90fea12e0317e264b1309081058741a5be6733ce236521da148e903&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;力扣 APP 全新改版，史诗级增强！&lt;/a&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文给大家介绍了五个在力扣中国刷题的技巧：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;使用中英文切换功能，防止因为翻译问题使自己看不懂题目描述。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用快捷键提供自己的效率，尤其是执行和提交这两个功能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;限定时间刷题，创造面试的紧张感。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果你是面试官，不妨试试力扣的在线面试功能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果你刷力扣，强烈推荐我开发的力扣刷题插件。更多功能，等你来提。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;h3 data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(0, 0, 0)&quot; data-style=&quot;margin-top: 20px; margin-bottom: 20px; font-weight: bold; font-size: 17px; max-width: 100%; box-sizing: border-box; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; letter-spacing: 2px; text-align: center; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__113&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(0, 0, 0)&quot;&gt;&lt;span data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-style=&quot;padding-bottom: 2px; max-width: 100%; box-sizing: border-box; border-bottom: 2px solid rgba(79, 177, 249, 0.65); color: rgb(43, 43, 43); overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__114&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot;&gt;爱心三连击&lt;/span&gt;&lt;/h3&gt;&lt;p data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)&quot; data-style=&quot;margin-top: 10px; margin-bottom: 10px; padding-top: 8px; padding-bottom: 8px; max-width: 100%; box-sizing: border-box; min-height: 1em; text-align: left; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(43, 43, 43); font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; letter-spacing: 2px; font-size: 14px; line-height: 26px; word-spacing: 2px; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__115&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)&quot;&gt;1.看到这里了就点个在看支持下吧，你的&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot;&gt;在看&lt;/strong&gt;是我创作的动力。&lt;/p&gt;&lt;p data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(0, 0, 0)&quot; data-style=&quot;margin-top: 10px; margin-bottom: 10px; padding-top: 8px; padding-bottom: 8px; max-width: 100%; box-sizing: border-box; min-height: 1em; text-align: left; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; letter-spacing: 2px; font-size: 14px; line-height: 26px; word-spacing: 2px; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__116&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(0, 0, 0)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(0, 0, 0)&quot;&gt;&lt;span data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-style=&quot;max-width: 100%; color: rgb(43, 43, 43); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__117&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot;&gt;2.关注公众号&lt;/span&gt;&lt;span data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(0, 0, 0)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(0, 0, 0)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(0, 0, 0)|rgb(53, 148, 247)&quot;&gt;&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(0, 0, 0)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(0, 0, 0)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(0, 0, 0)|rgb(53, 148, 247)&quot;&gt;力扣加加&lt;/strong&gt;&lt;/span&gt;&lt;span data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-style=&quot;max-width: 100%; color: rgb(43, 43, 43); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__118&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot;&gt;，获取更多算法硬核文章！&lt;/span&gt;&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(0, 0, 0)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(0, 0, 0)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(0, 0, 0)|rgb(53, 148, 247)&quot;&gt;加个星标&lt;/strong&gt;&lt;span data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-style=&quot;max-width: 100%; color: rgb(43, 43, 43); box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__119&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(0, 0, 0)|rgb(43, 43, 43)&quot;&gt;，不错过每一条成长的机会。&lt;/span&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)&quot; data-style=&quot;margin-top: 10px; margin-bottom: 10px; padding-top: 8px; padding-bottom: 8px; max-width: 100%; box-sizing: border-box; min-height: 1em; text-align: left; white-space: normal; background-color: rgb(255, 255, 255); color: rgb(43, 43, 43); font-family: Optima-Regular, Optima, PingFangTC-Light, PingFangSC-light, PingFangTC-light; letter-spacing: 2px; font-size: 14px; line-height: 26px; word-spacing: 2px; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__120&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)&quot;&gt;3.如果你觉得本文的内容对你有帮助，就帮我&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16285235084826=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16285235084826=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(255, 255, 255)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot;&gt;转发&lt;/strong&gt;一下吧。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;js_darkmode__121 list-paddingleft-2&quot; data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(89, 89, 89)&quot; data-style=&quot;margin-top: 8px; margin-bottom: 8px; padding-left: 25px; font-size: 16px; color: rgb(89, 89, 89); list-style-type: circle;&quot; data-darkmode-color-16285235084826=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(89, 89, 89)&quot; data-darkmode-color-16289491479906=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(89, 89, 89)&quot;&gt;&lt;li&gt;&lt;section data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(89, 89, 89)|rgb(89, 89, 89)&quot; data-style=&quot;margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: rgb(89, 89, 89);&quot; class=&quot;js_darkmode__122&quot; data-darkmode-color-16285235084826=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)&quot; data-darkmode-color-16289491479906=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)&quot;&gt;后台回复：&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot;&gt;「电子书」&lt;/strong&gt;，获取我精心制作的算法刷题电子书（20+万字）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(89, 89, 89)|rgb(89, 89, 89)&quot; data-style=&quot;margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: rgb(89, 89, 89);&quot; class=&quot;js_darkmode__123&quot; data-darkmode-color-16285235084826=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)&quot; data-darkmode-color-16289491479906=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)&quot;&gt;后台回复：&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot;&gt;「背包」&lt;/strong&gt;，自动获取《背包九讲》pdf&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(89, 89, 89)|rgb(89, 89, 89)&quot; data-style=&quot;margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: rgb(89, 89, 89);&quot; class=&quot;js_darkmode__124&quot; data-darkmode-color-16285235084826=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)&quot; data-darkmode-color-16289491479906=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)&quot;&gt;后台回复：&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot;&gt;「脑图」&lt;/strong&gt;，自动获取我制作的算法脑图总结&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(89, 89, 89)|rgb(89, 89, 89)&quot; data-style=&quot;margin-top: 5px; margin-bottom: 5px; line-height: 26px; text-align: left; font-size: 14px; font-weight: normal; color: rgb(89, 89, 89);&quot; class=&quot;js_darkmode__125&quot; data-darkmode-color-16285235084826=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)&quot; data-darkmode-color-16289491479906=&quot;rgb(141, 141, 141)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)&quot;&gt;后台回复：&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(89, 89, 89)|rgb(89, 89, 89)|rgb(53, 148, 247)&quot;&gt;「刷题插件」&lt;/strong&gt;，自动获取上万人都在用的力扣刷题插件&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI4MzUxNjI3OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/liaT5dytkaTemW9Fpf8y5Cez0KhBtoEU6jfSorN0N12SMnc3AkGkLoFcY9HNl2hRK3gIYyZ7g42wk5nXvSUq0Tg/0?wx_fmt=png&quot; data-nickname=&quot;力扣加加&quot; data-alias=&quot;leetcode-pp&quot; data-signature=&quot;力求用清晰直白的方式还原解题的过程，努力做西湖区最好的算法题解。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(43, 43, 43)&quot; data-style=&quot;padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: rgb(43, 43, 43); margin: 10px 0px; letter-spacing: 2px; font-size: 16px; word-spacing: 2px;&quot; class=&quot;js_darkmode__126&quot; data-darkmode-color-16285235084826=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(43, 43, 43)&quot; data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)&quot;&gt;另外你还可以回复具体的算法专题获取相应的文章，比如 &lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot;&gt;「二分」&lt;/strong&gt;，&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot;&gt;「堆」&lt;/strong&gt;，&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot;&gt;「树」&lt;/strong&gt;，&lt;strong data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-color-16285235084826=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot; data-darkmode-color-16289491479906=&quot;rgb(53, 148, 247)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)|rgb(53, 148, 247)&quot;&gt;「链表」&lt;/strong&gt;等等&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)|rgb(43, 43, 43)&quot; data-style=&quot;padding-top: 8px; padding-bottom: 8px; line-height: 26px; color: rgb(43, 43, 43); margin: 10px 0px; letter-spacing: 2px; font-size: 16px; word-spacing: 2px;&quot; class=&quot;js_darkmode__127&quot; data-darkmode-color-16285235084826=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16285235084826=&quot;#fff|rgb(43, 43, 43)&quot; data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)&quot;&gt;&lt;span data-darkmode-color-16289491479906=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16289491479906=&quot;#fff|rgb(43, 43, 43)&quot; data-darkmode-bgcolor-16289491479906=&quot;rgb(192, 226, 0)&quot; data-darkmode-original-bgcolor-16289491479906=&quot;#fff|rgb(212, 250, 0)&quot; data-style=&quot;background-color: rgb(212, 250, 0);&quot; class=&quot;js_darkmode__128&quot;&gt;微信更新了推送规则，优先推送有互动的公众号，为了不错过更多优质文章，大家不妨点个赞！&lt;/span&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-16274931119832=&quot;rgba(112, 0, 0, 0.039999999999999994)&quot; data-darkmode-original-bgcolor-16274931119832=&quot;#fff|rgba(50, 0, 0, 0.039999999999999994)&quot; data-darkmode-color-16274931119832=&quot;rgb(163, 163, 163)&quot; data-darkmode-original-color-16274931119832=&quot;#fff|rgb(43, 43, 43)&quot;&gt;&lt;img class=&quot;rich_pages __bg_gif&quot; data-ratio=&quot;0.2777777777777778&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/liaT5dytkaTcXHpJwh2vvpuRwNGHM7rHRohpSILHhgrrSVn06ttBkMWeO23LZ4BDbRpfeksFLrCvtpeWALicjI8w/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>