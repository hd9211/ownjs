<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>63cd46124676d11264c5688eaec8dd68</guid>
<title>[推荐] Kafka 为什么要放弃 Zookeeper</title>
<link>https://toutiao.io/k/98g49tv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近，&lt;code&gt;confluent&lt;/code&gt;社区发表了一篇文章，主要讲述了&lt;code&gt;Kafka&lt;/code&gt;未来的&lt;code&gt;2.8&lt;/code&gt;版本将要放弃&lt;code&gt;Zookeeper&lt;/code&gt;，这对于&lt;code&gt;Kafka&lt;/code&gt;用户来说，是一个重要的改进。之前部署&lt;code&gt;Kafka&lt;/code&gt;就必须得部署&lt;code&gt;Zookeeper&lt;/code&gt;，而之后就只要单独部署&lt;code&gt;Kafka&lt;/code&gt;就行了。&lt;span/&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;1.Kafka简介&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Apache Kafka&lt;/code&gt;最早是由&lt;code&gt;Linkedin&lt;/code&gt;公司开发，后来捐献给了&lt;code&gt;Apack&lt;/code&gt;基金会。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Kafka&lt;/code&gt;被官方定义为分布式流式处理平台，因为具备高吞吐、可持久化、可水平扩展等特性而被广泛使用。目前&lt;code&gt;Kafka&lt;/code&gt;具体如下功能：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;消息队列,&lt;code&gt;Kafka&lt;/code&gt;具有系统解耦、流量削峰、缓冲、异步通信等消息队列的功能。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;分布式存储系统，&lt;code&gt;Kafka&lt;/code&gt;可以把消息持久化，同时用多副本来实现故障转移，可以作为数据存储系统来使用。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;实时数据处理，&lt;code&gt;Kafka&lt;/code&gt;提供了一些和数据处理相关的组件，比如&lt;code&gt;Kafka Streams&lt;/code&gt;、&lt;code&gt;Kafka Connect&lt;/code&gt;，具备了实时数据的处理功能。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面这张图是&lt;code&gt;Kafka&lt;/code&gt;的消息模型：&lt;span/&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.44819819819819817&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0DYO5Ln2ASVW1XuQU4X4P5Mhm7dI1sWPGd1MnSpGGolZ5XDxfc5JKfQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;888&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过上面这张图，介绍一下&lt;code&gt;Kafka&lt;/code&gt;中的几个主要概念：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;producer&lt;/code&gt;和&lt;code&gt;consumer&lt;/code&gt;: 消息队列中的生产者和消费者，生产者将消息推送到队列，消费者从队列中拉取消息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;consumer group&lt;/code&gt;:消费者集合，这些消费者可以并行消费同一个&lt;code&gt;topic&lt;/code&gt;下不同&lt;code&gt;partition&lt;/code&gt;中的消息。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;broker&lt;/code&gt;：&lt;code&gt;Kafka&lt;/code&gt;集群中的服务器。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;topic&lt;/code&gt;：消息的分类。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;partition&lt;/code&gt;：&lt;code&gt;topic&lt;/code&gt;物理上的分组，一个&lt;code&gt;topic&lt;/code&gt;可以有&lt;code&gt;partition&lt;/code&gt;，每个&lt;code&gt;partition&lt;/code&gt;中的消息会被分配一个有序的&lt;code&gt;id&lt;/code&gt;作为&lt;code&gt;offset&lt;/code&gt;。每个&lt;code&gt;consumer group&lt;/code&gt;只能有一个消费者来消费一个&lt;code&gt;partition&lt;/code&gt;。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;2.Kafka和Zookeeper关系&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Kafka架构如下图：&lt;img data-ratio=&quot;0.5727554179566563&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0Ebx6ta9P0zRGZO5vSbuJBQWiczib1VlHrTBuvFFrFP7J1H4gZfmrJZibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;646&quot;/&gt;从图中可以看到，&lt;code&gt;Kafka&lt;/code&gt;的工作需要&lt;code&gt;Zookeeper&lt;/code&gt;的配合。那他们到底是怎么配合工作呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看下面这张图：&lt;img data-ratio=&quot;0.5760095011876485&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ025Qu7ImfmseZVho9ibAHEJnYXyTj4iciaMDHnervzFTEWVbBLWLKBBQnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;842&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;2.1 注册中心&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;2.1.1 broker注册&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上面的图中可以看到，&lt;code&gt;broker&lt;/code&gt;分布式部署，就需要一个注册中心来进行统一管理。&lt;code&gt;Zookeeper&lt;/code&gt;用一个专门节点保存&lt;code&gt;Broker&lt;/code&gt;服务列表，也就是 &lt;code&gt;/brokers/ids&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;broker&lt;/code&gt;在启动时，向&lt;code&gt;Zookeeper&lt;/code&gt;发送注册请求，&lt;code&gt;Zookeeper&lt;/code&gt;会在&lt;code&gt;/brokers/ids&lt;/code&gt;下创建这个&lt;code&gt;broker&lt;/code&gt;节点，如&lt;code&gt;/brokers/ids/[0...N]&lt;/code&gt;，并保存&lt;code&gt;broker&lt;/code&gt;的&lt;code&gt;IP&lt;/code&gt;地址和端口。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;这个节点临时节点，一旦&lt;code&gt;broker&lt;/code&gt;宕机，这个临时节点会被自动删除。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;2.1.2 topic注册&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Zookeeper&lt;/code&gt;也会为&lt;code&gt;topic&lt;/code&gt;分配一个单独节点，每个&lt;code&gt;topic&lt;/code&gt;都会以&lt;code&gt;/brokers/topics/[topic_name]&lt;/code&gt;的形式记录在&lt;code&gt;Zookeeper&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个&lt;code&gt;topic&lt;/code&gt;的消息会被保存到多个&lt;code&gt;partition&lt;/code&gt;，这些&lt;code&gt;partition&lt;/code&gt;跟&lt;code&gt;broker&lt;/code&gt;的对应关系也需要保存到&lt;code&gt;Zookeeper&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;partition&lt;/code&gt;是多副本保存的，上图中红色&lt;code&gt;partition&lt;/code&gt;是&lt;code&gt;leader&lt;/code&gt;副本。当&lt;code&gt;leader&lt;/code&gt;副本所在的broker发生故障时，&lt;code&gt;partition&lt;/code&gt;需要重新选举&lt;code&gt;leader&lt;/code&gt;，这个需要由&lt;code&gt;Zookeeper&lt;/code&gt;主导完成。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;broker&lt;/code&gt;启动后，会把自己的&lt;code&gt;Broker ID&lt;/code&gt;注册到到对应&lt;code&gt;topic&lt;/code&gt;节点的分区列表中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们查看一个&lt;code&gt;topic&lt;/code&gt;是&lt;code&gt;xxx&lt;/code&gt;，分区编号是&lt;code&gt;1&lt;/code&gt;的信息，命令如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;[root@master] get /brokers/topics/xxx/partitions/1/state&lt;br/&gt;{&lt;span&gt;&quot;controller_epoch&quot;&lt;/span&gt;:15,&lt;span&gt;&quot;leader&quot;&lt;/span&gt;:11,&lt;span&gt;&quot;version&quot;&lt;/span&gt;:1,&lt;span&gt;&quot;leader_epoch&quot;&lt;/span&gt;:2,&lt;span&gt;&quot;isr&quot;&lt;/span&gt;:[11,12,13]}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;当&lt;code&gt;broker&lt;/code&gt;退出后，&lt;code&gt;Zookeeper&lt;/code&gt;会更新其对应&lt;code&gt;topic&lt;/code&gt;的分区列表。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;2.1.3 consumer注册&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消费者组也会向&lt;code&gt;Zookeeper&lt;/code&gt;进行注册，&lt;code&gt;Zookeeper&lt;/code&gt;会为其分配节点来保存相关数据，节点路径为&lt;code&gt;/consumers/{group_id}&lt;/code&gt;，有&lt;code&gt;3&lt;/code&gt;个子节点，如下图:&lt;img data-ratio=&quot;0.24280701754385964&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0JZNlfibAnWsLGeDVeoUa53I9r51YgicBp4UO3VVweoJaaB5kUb5XoAiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1425&quot;/&gt;这样&lt;code&gt;Zookeeper&lt;/code&gt;可以记录分区跟消费者的关系，以及分区的&lt;code&gt;offset&lt;/code&gt;。&lt;span&gt;[3]&lt;/span&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;&lt;span/&gt;2.2 负载均衡&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;broker&lt;/code&gt;向&lt;code&gt;Zookeeper&lt;/code&gt;进行注册后，生产者根据&lt;code&gt;broker&lt;/code&gt;节点来感知&lt;code&gt;broker&lt;/code&gt;服务列表变化，这样可以实现动态负载均衡。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;consumer group&lt;/code&gt;中的消费者，可以根据&lt;code&gt;topic&lt;/code&gt;节点信息来拉取特定分区的消息,实现负载均衡。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;实际上，&lt;code&gt;Kafka&lt;/code&gt;在&lt;code&gt;Zookeeper&lt;/code&gt;中保存的元数据非常多，看下面这张图：&lt;img data-ratio=&quot;0.3340184994861254&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ020I0WTKudqm8Y20XnqrjShadfkM8jhdmAE3WMYOnNkicz6OlFkiaX6og/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;973&quot;/&gt;随着broker、topic和partition增多，保存的数据量会越来越大。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;3.Controller介绍&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过上一节的讲述，我们看到了&lt;code&gt;Kafka&lt;/code&gt;对&lt;code&gt;Zookeeper&lt;/code&gt;的依赖非常大，&lt;code&gt;Kafka&lt;/code&gt;离开&lt;code&gt;Zookeeper&lt;/code&gt;是没有办法独立运行的。那&lt;code&gt;Kafka&lt;/code&gt;是怎么跟&lt;code&gt;Zookeeper&lt;/code&gt;进行交互的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如下图：&lt;span/&gt;&lt;sup&gt;[4]&lt;/sup&gt;&lt;img data-ratio=&quot;0.47101449275362317&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0Get1O7LNMia7h6KUR1vtSGL9WVcoJy7JeobdkkC0TpQYCyKeOIhzKjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;690&quot;/&gt;&lt;code&gt;Kafka&lt;/code&gt;集群中会有一个&lt;code&gt;broker&lt;/code&gt;被选举为&lt;code&gt;Controller&lt;/code&gt;负责跟&lt;code&gt;Zookeeper&lt;/code&gt;进行交互，它负责管理整个&lt;code&gt;Kafka&lt;/code&gt;集群中所有分区和副本的状态。其他&lt;code&gt;broker&lt;/code&gt;监听&lt;code&gt;Controller&lt;/code&gt;节点的数据变化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Controller&lt;/code&gt;的选举工作依赖于&lt;code&gt;Zookeeper&lt;/code&gt;，选举成功后，&lt;code&gt;Zookeeper&lt;/code&gt;会创建一个&lt;code&gt;/controller&lt;/code&gt;临时节点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Controller&lt;/code&gt;具体职责如下：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;比如当某个分区的leader出现故障时，Controller会为该分区选举新的leader。当检测到分区的ISR集合发生变化时，Controller会通知所有broker更新元数据。当某个topic增加分区时，Controller会负责重新分配分区。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;监听&lt;code&gt;topic&lt;/code&gt;相关的变化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;监听&lt;code&gt;broker&lt;/code&gt;相关的变化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;集群元数据管理&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面这张图展示了Controller、Zookeeper和broker的交互细节：&lt;img data-ratio=&quot;0.720558882235529&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ00al8icc8fR5ibV5o0vkoH5Dicy1G9COiaibxLyWJsfaM6tr5aqmOIu35LEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1002&quot;/&gt;&lt;code&gt;Controller&lt;/code&gt;选举成功后，会从&lt;code&gt;Zookeeper&lt;/code&gt;集群中拉取一份完整的元数据初始化&lt;code&gt;ControllerContext&lt;/code&gt;，这些元数据缓存在&lt;code&gt;Controller&lt;/code&gt;节点。当集群发生变化时，比如增加&lt;code&gt;topic&lt;/code&gt;分区，&lt;code&gt;Controller&lt;/code&gt;不仅需要变更本地的缓存数据，还需要将这些变更信息同步到其他&lt;code&gt;Broker&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Controller&lt;/code&gt;监听到&lt;code&gt;Zookeeper&lt;/code&gt;事件、定时任务事件和其他事件后，将这些事件按照先后顺序暂存到&lt;code&gt;LinkedBlockingQueue&lt;/code&gt;中，由事件处理线程按顺序处理，这些处理多数需要跟&lt;code&gt;Zookeeper&lt;/code&gt;交互，&lt;code&gt;Controller&lt;/code&gt;则需要更新自己的元数据。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.Zookeeper带来的问题&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Kafka&lt;/code&gt;本身就是一个分布式系统，但是需要另一个分布式系统来管理，复杂性无疑增加了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.1 运维复杂度&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用了&lt;code&gt;Zookeeper&lt;/code&gt;，部署&lt;code&gt;Kafka&lt;/code&gt;的时候必须要部署两套系统，&lt;code&gt;Kafka&lt;/code&gt;的运维人员必须要具备&lt;code&gt;Zookeeper&lt;/code&gt;的运维能力。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.2 Controller故障处理&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Kafaka&lt;/code&gt;依赖一个单一&lt;code&gt;Controller&lt;/code&gt;节点跟&lt;code&gt;Zookeeper&lt;/code&gt;进行交互，如果这个&lt;code&gt;Controller&lt;/code&gt;节点发生了故障，就需要从&lt;code&gt;broker&lt;/code&gt;中选择新的&lt;code&gt;Controller&lt;/code&gt;。如下图,新的&lt;code&gt;Controller&lt;/code&gt;变成了&lt;code&gt;broker3&lt;/code&gt;。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4723076923076923&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0qic3b3bfvqD4BfZeiaPBibDBPk2JZMIEk5KApPYxV5AP8gKux2KoozBYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;650&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;新的&lt;code&gt;Controller&lt;/code&gt;选举成功后，会重新从&lt;code&gt;Zookeeper&lt;/code&gt;拉取元数据进行初始化，并且需要通知其他所有的&lt;code&gt;broker&lt;/code&gt;更新&lt;code&gt;ActiveControllerId&lt;/code&gt;。老的&lt;code&gt;Controller&lt;/code&gt;需要关闭监听、事件处理线程和定时任务。分区数非常多时，这个过程非常耗时，而且这个过程中&lt;code&gt;Kafka&lt;/code&gt;集群是不能工作的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;4.3 分区瓶颈&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当分区数增加时，&lt;code&gt;Zookeeper&lt;/code&gt;保存的元数据变多，&lt;code&gt;Zookeeper&lt;/code&gt;集群压力变大，达到一定级别后，监听延迟增加，给&lt;code&gt;Kafaka&lt;/code&gt;的工作带来了影响。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，&lt;code&gt;Kafka&lt;/code&gt;单集群承载的分区数量是一个瓶颈。而这又恰恰是一些业务场景需要的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;5.升级&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;升级前后的架构图对比如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9238578680203046&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/a1gicTYmvicdibP9zVMt4EJuWHtOGM2hVJ0pibFmEEYyNSeh9wDibbmdFBVWToVJziaFyLicFqaEITWMKib61yekVsXs9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;591&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;KIP-500&lt;/code&gt;用&lt;code&gt;Quorum Controller&lt;/code&gt;代替之前的&lt;code&gt;Controller&lt;/code&gt;，&lt;code&gt;Quorum&lt;/code&gt;中每个&lt;code&gt;Controller&lt;/code&gt;节点都会保存所有元数据，通过&lt;code&gt;KRaft&lt;/code&gt;协议保证副本的一致性。这样即使&lt;code&gt;Quorum Controller&lt;/code&gt;节点出故障了，新的&lt;code&gt;Controller&lt;/code&gt;迁移也会非常快。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;官方介绍，升级之后，&lt;code&gt;Kafka&lt;/code&gt;可以轻松支持百万级别的分区。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;Kafak团队把通过Raft协议同步数据的方式Kafka Raft Metadata mode,简称KRaft&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Kafka&lt;/code&gt;的用户体量非常大，在不停服的情况下升级是必要的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前去除&lt;code&gt;Zookeeper&lt;/code&gt;的&lt;code&gt;Kafka&lt;/code&gt;代码&lt;code&gt;KIP-500&lt;/code&gt;已经提交到&lt;code&gt;trunk&lt;/code&gt;分支，并且已经在的&lt;code&gt;2.8&lt;/code&gt;版本发布。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Kafaka&lt;/code&gt;计划在&lt;code&gt;3.0&lt;/code&gt;版本会兼容&lt;code&gt;Zookeeper Controller&lt;/code&gt;和&lt;code&gt;Quorum Controller&lt;/code&gt;，这样用户可以进行灰度测试。&lt;span/&gt;&lt;sup&gt;[5]&lt;/sup&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;6.总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在大规模集群和云原生的背景下，使用&lt;code&gt;Zookeeper&lt;/code&gt;给&lt;code&gt;Kafka&lt;/code&gt;的运维和集群性能造成了很大的压力。去除&lt;code&gt;Zookeeper&lt;/code&gt;是必然趋势，这也符合大道至简的架构思想。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Reference&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;参考1: &lt;span&gt;https://www.confluent.io/blog/kafka-without-zookeeper-a-sneak-peek/&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;参考2: &lt;span&gt;https://blog.csdn.net/Zidingyi_367/article/details/110490910&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;参考3: &lt;span&gt;https://www.jianshu.com/p/a036405f989c&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;参考4: &lt;span&gt;https://honeypps.com/mq/kafka-controller-analysis/&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;p&gt;参考5: &lt;span&gt;https://mp.weixin.qq.com/s/ev6NM6hptltQBuTaCHJCQQ&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>cc813e8cd2bd0c112f78feda7c52ff3e</guid>
<title>[推荐] 开源｜5 秒内克隆您的声音并生成任意语音内容</title>
<link>https://toutiao.io/k/87ehz9q</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;开发者头条&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;kaifazhetoutiao&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;程序员分享平台 | 官方应用下载地址：http://toutiao.io/download&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>74b14750810ef889a0d7be802d3f1c7f</guid>
<title>[推荐] 亿级流量架构演进实战：从零构建亿级流量 API 网关（一）</title>
<link>https://toutiao.io/k/gez059v</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left&quot; aria-describedby=&quot;js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI3MDU5OTU0MA==&amp;amp;action=getalbum&amp;amp;album_id=2087433865563832322#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;2087433865563832322&quot; data-tag_source=&quot;0&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#亿级流量架构演进实战&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;2个&lt;span class=&quot;weui-hidden_abs&quot;&gt;内容&lt;/span&gt;&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;span&gt;这不是一个讲概念的专栏，而且我也不擅长讲概念，每一篇文章都是一个故事，我希望你可以通过这些故事了解我当时在实际工作中遇到问题和背后的思考，架构设计是种经验，我有幸参与到多个亿级系统的架构设计中，有所收获的同时也希望把这些收获分享与大家。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;2013年，我在做 APP 服务端的平台化转型，故事就从这里开始。&lt;/p&gt;&lt;p&gt;在最开始做网关时，我并没有一开始就明确说要做个 API 网关，而是做着做着发现这是个网关。因为当时我是在做服务端的平台化转型，最开始时只是提供了客户端登录、获取插件列表、插件启动授权几个简单的 API，其中客户端登录是通过 RSA 和 AES 非对称加密算法来实现，登录之后平台颁发 token 给客户端，有了 token 之后，客户端就通过 OAuth 2.0 协议来调用获取插件列表、插件启动授权等 API，不过由于最开始没想清楚，提供出去的 API 接口定义和格式不统一，虽然都是 json 格式，但几乎每个 API 都有自己的的格式定义，即每个 method 在服务端都实现了一个 Servlet 服务，客户端天天是要这接口要那接口，搞了上百个接口还是被客户端碾着走，更糟糕的是代码越来越臃肿还老出问题。&lt;/p&gt;&lt;p&gt;后来就想为何不把接口定义和格式统一了，就只提供一个 Serlvet 服务，通过解析 API 接口参数在后端进行服务的分发，这样至少可以减少每个 API 都写一遍 Servlet 的工作，当时的这个架构是 C/S 的架构，客户端通过公网访问弹内的服务器，这个功能上线其实是上线了一个新的 API，之后客户端的新功能都必须使用新的 API，老的 API 在客户端线上的版本逐步下线后，服务端再对老的 API 进行清理，当整个架构逐渐形成之后，服务端的开发效率得到了显著的提升，也是这时，我觉得这其实是个网关的雏形，所以整个平台演进的过程，在这一阶段我总结为：统一服务接口。&lt;/p&gt;&lt;h1&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.440625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FAeR52xeN391DpyUN48jy9BsjXmbZ31icnwibraJ4bhdZ5xRp76lvx4B8SZiax3zjOwcAT3RANbL9MAPF5cibcJUrg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;1。什么是网关？&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;现在来谈谈 API 网关，关于 API 网关的定义，有很多的说法，其字面意思就是系统的统一 API 入口。说白了，&lt;strong&gt;就是将客户端的所有请求统一通过 API 网关接入服务端，并完成认证、授权、安全、流控、熔断、调度、转发、监&lt;/strong&gt;控等处理过程。API 网关的价值，就是为实现更加安全、高效和稳定的 API 调用提供服务保障。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;就我当时负责的平台而言，统一了服务接口还不能说是做了一个网关，因为这仅仅是实现了网关统一接入组件的一个点，那网关的统一接入组件又是什么？下面我们先聊下网关的每一个组件，以及每一个组件的职责。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;API 网关的核心组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从 API 调用的过程来看，我把 API 网关划分为四个组件：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;统一接入组件，管理所有的请求接入，负责认证鉴权、安全、校验、限流、降级和熔断等，它就像 API 网关的护城河；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务调度组件，管理请求的路由和调度，负责协议解析、路由、转换、映射和服务编排等，它是外部请求调度后端服务的中间枢纽，也是 API 网关的大脑（只有大脑才知道哪个 API 应去哪里调度）；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务发布组件，管理 API 的注册和订阅，负责服务发现、服务订阅和服务更新等，它是 API 网关的心脏（心脏会不断的把 API 信息同步给网关）；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务监控组件，是对所有 API 请求的统一监控，负责日志、监控、告警和统计分析等，它是 API 网关的守卫。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;这里我画了一张 API 网关的架构示意图。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.39296875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FAeR52xeN391DpyUN48jy9BsjXmbZ31icqiaYUn6A9SXSxweIicnOOeHqztpF5ascdgVaDqjMFIJYqgMLQ2tuF20Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;统一接入组件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当时，统一了服务接口的确实现了 API 的统一接入点，但很快也暴露出了新的问题 —— 这个接入点很快就过热了，之前的登录 API 和插件 API 都是分开的，现在统一后，有些 API 出故障后影响面很大，印象非常深刻的一次是客户端上线了一个定时查询待出库订单数的功能，结果整个服务端全面打爆，服务重启很快又被打爆，这其实是统一之后服务端没有及时跟上必要的限流、熔断等防御手段。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，那次之后，服务端进行了第一次的系统拆分 —— 网关和服务中心。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;2。分层架构&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.45625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FAeR52xeN391DpyUN48jy9BsjXmbZ31icTDMvv3ibqTDSklwjOBCokKOdibvHOXCQr94hsNTECWYb4s7I9vH9CxoQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;平台提供的所有端能力进行服务下沉，搭建服务中心新系统，原系统作为网关将重点负责 API 接入、安全、流控、熔断、路由、分发、调度、监控等功能。除了垂直拆分，还做了水平拆分，即对平台 API 和业务 API 进行了隔离，简单说，就是提供了两个 Servlet。当时，还没有微服务化的概念，只是想着隔离平台调用与业务调用的相互影响，能解决当时的问题。后来，在认识了微服务之后，有一种后知后觉的感觉，这次系统的拆分使得平台整体的稳定性得到很大的提升，不过后来玩微服务有点玩坏了，而这就是后话了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;重构之后的网关架构比较整洁，在实现上，统一接入组件采用的是类似于责任链的方式，由于这时期的 API 调用主要是 HTTP 请求，所以网关是基于 Servlet 来提供 API 服务的，通过拦截器进行安全、流控、熔断等功能的实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4796875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FAeR52xeN391DpyUN48jy9BsjXmbZ31icm7NsoSSotia6dnAVGz6EibIC0t91gYzWPy21EP1RO22DcYP0OIBj8QIw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中 FrequencyPipe 是负责流控和熔断的拦截器，这里必须得说一下，毕竟是这里栽了跟头。常见的限流算法有漏斗算法和令牌桶算法，我的理解，令牌桶常用于控制并发，无论何时，令牌的总数是固定的，每次调用开始都需要申请，调用结束都需要释放；漏桶适用于控制 QPS，漏桶可以在每秒生成 m 个令牌，每次调用开始都需要申请，但调用结束不需要释放，不过问题就是如果上一秒的调用没有结束，实际调用会大于当前生成的 m 个令牌控制的调用量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在实现上，当时了解 Guava 的 RateLimiter 与 Semaphore 都可以实现，通过对比，网关使用的是 Guava 的 Semaphore 令牌桶策略来控制并发数，不过，遇到的问题就是每次重启都会有瞬时的流量超过并发数。而在后来随着微服务与网关越来越火，又有 Hystrix 或 Sentinel 提供了更强大的功能，比如 Hystrix 的线程熔断和 Sentinel 的异常熔断等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;3。高可用架构&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;日志的作用不言而言，网关的调用日志是必不可少的。而且下定决心要做全链路的日志，是已经被各种查问题逼的不胜其烦的情况下了，你能想象到的，尤其是莫名被拉到一个群里，被@有个问题要查网关一次调用的一个参数对不对或有没有，没有个日志服务平台，不仅要亲自操刀上阵，更悲催的是还只能去每台服务器上去找日志。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;服务端在拆分了网关和服务中心之后，系统都开始往微服务架构的方向演进，一次 API 调用就需要有全局唯一的标识进行串联，网关采用的是 UUID，在 API 每次调用时都会生成一个 UUID 传递给上游并返回给客户端，这样当有问题需要查询时，就可以通过 UID 准确查找相关日志了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;怎么进行日志的采集、查询、统计，以及如何基于日志实现监控告警？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通常来讲，大多数系统打印日志采用的是 Log4j，网关也是，再通过集团提供的日志服务系统，比如 Scribe、Flume 等进行日志采集，然后就可以在日志系统或监控系统里看到数据了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不过，日志采集看着简单，做起来还是个技术活，网关的调用量本身是很大的，先不看记录网关日志会有多大的存储量，关键点是看打印日志会对网关性能有多大的影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;首先谈一下 Log4j，我们知道 Log4j 1.x 会引发线程 BLOCKED，所以 Log4j 1.x 不适合高并发的场景，解决方法一种是升级到 log4j2 或者更换为 logback，另一种是通过设置 BufferedIO 或者使用 AsyncAppender 来缓解出现 BLOCKED 的概率。遗憾的是，网关采用的是后者，这主要是依赖冲突导致的，不过这只是做日志采集里的一个小点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;基于 MMap、Kafka、Storm、ElasticSearch 实现日志服务平台&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;除此之外，网关自己还实现了一套日志服务系统，这主要是开放给平台用户的，当时集团的日志系统还不对外开发，所以自己就又搞了一套。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当时技术选型没有选择 Scribe、Flume，而是自己基于 MMap 技术来实现，这也受限于服务器 agent 权限，所以，基本思路是通过 Kafka 进行日志收集，然后 Storm 接收后写到 ElasticSearch 提供服务查询，这里有个技术点，最开始写日志是直接发 Kafka，不过线上发现网络的抖动会影响写 Kafka 的 RT，后来，我们尝试了2种方案，第一种是采用线程池异步写，另一种是基于 MMap 技术将日志先落盘，然后再异步的读文件发 Kafka，相比之下，第二种方案更不会丢数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;日志打不好，找问题不仅抓瞎，弄不好系统还要扑街？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;说到最后，也谈谈打日志出的问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一，throw Exception，这点尤其注意，微服务架构里，如果服务提供方服务异常，一定不要将异常堆栈也传给服务调用方，虽然通过异常信息可以快速定位问题，但异常信息会占用大量的网络资源，严重的就变成服务不可用了，这里，我是有血的教训的，所以，我推荐的方式是定义返回结果对象里的返回值和错误码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;基于多维度的限流熔断策略，构建实时 API 成功率监控能力&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上文说了全链路日志和实时监控，本文就说下限流降级，这里都是故事。网关系统，需要对调用 API 进行实时的性能监控和错误码监控，由于是实时计算，所以采用了 NoSQL 来缓存数据，因为是对 API 进行监控，所以将 API 接口名作为缓存 Key，可当 API 调用异常猛增时，缓存热定问题就出现了，很快就出现了 failover，然后服务不可用。所以，在处理数据时一定要考虑好数据热点问题，无论是 NoSQL 还是 MySQL。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;4。总结&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;言而总之，本篇文章重点讲述了API网关的统一接入、分层架构、高可用架构。下篇文章，我将继续介绍流量调度的配置中心、泛化调用。如果你觉得有收获，欢迎你把今天的内容分享给更多的朋友。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;5。扩展阅读&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事1：从零构建亿级流量API网关&lt;/strong&gt;&lt;br/&gt;01 | API网关：统一接入、分层架构、高可用架构&lt;br/&gt;02 | 流量调度：配置中心、泛化调用&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事2：架构演进构建TCP长连接网关&lt;/strong&gt;&lt;br/&gt;03 | TCP网关：Netty框架、Protobuf格式、业务线程池&lt;br/&gt;04 | TCP长连接：心跳、Session管理、断线重连&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事3：架构演进重构消息PUSH系统&lt;/strong&gt;&lt;br/&gt;05 | 消息PUSH：消息推送、消息送达率、APNs&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事4：从焦油坑爬出来的交易系统&lt;/strong&gt;&lt;br/&gt;06 | 交易平台：订单管道、订单状态机、服务编排、任务引擎&lt;br/&gt;07 | 微服务化：服务治理、领域设计&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事5：烦人的焦油开始到处都是&lt;/strong&gt;&lt;br/&gt;08 | 新老系统：业务整合、数据融合、系统迁移&lt;br/&gt;09 | 高可用架构：隔离部署、系统监控与日志、可灰度、可降级&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;故事6：稳定性架构与大促保障&lt;/strong&gt;&lt;br/&gt;10 | 大道至简：系统复杂度、三明治架构&lt;br/&gt;11 | 大促保障：自动化测试、故障演练、性能压测&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7cff58d8347fb119a5ed37e06258523c</guid>
<title>[推荐] 团队管理那点破事！OKR 绩效、核心人才、面试、技术分享、研发流程</title>
<link>https://toutiao.io/k/135ujiu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;大家好，我是Tom哥~&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;今天来聊聊团队管理，可能你现在还是一线开发，没有带团队，感觉这个话题与你无关，其实不然。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;程序员的职业生涯曲折，技术更新迭代快，走技术深度，走架构师路线，势必要付出常人的时间和精力。而管理则可以更好的复用之前经验。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;知其然，知其所以然。现在，对管理拒绝的人总有一天，你会经历思想转变。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;作为管理者，我们平时都会遇到哪些问题？又是如何来解决这些问题？好的经验我们要学会借鉴，来看看今天要聊的问题概要&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-fileid=&quot;100003489&quot; data-ratio=&quot;0.7683923705722071&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2KTof9YshweUJQcqPoODQreibRwB2ibv73zhFsficibKWObzgoIgiah19mUicJuSSicPU11y6wOdr8GxvGtlyZkn4cricw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;734&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;br/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;做为团队负责人，你是如何带领团队的？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、角色认知、心态转变，“管人”和“理事”，借助团队拿结果&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、OKR、KPI考核&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、平衡好技术和业务发展矛盾&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、技术储备和未来的技术规划，为业务预留空间&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、知人善任，人才梯度培养&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;6、方向要对、格局要大，与公司战略保持一致&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;7、制定好团队目标&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;8、技术分享，培养团队的技术氛围&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;9、团建&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;10、以人为本，激发每个人的积极性&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更多内容，参考 &lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484897&amp;amp;idx=1&amp;amp;sn=69934454723b5c18b754d86d95d4a2ff&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;第一次带团队，感觉很慌怎么办？&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;开发规范流程，需要做哪些事情？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;严格约定团队的开发规范，如：IDE 代码模板、命名规范(mysql建表、redis key 前缀，以及application.properties中的各种配置项，可以参考阿里代码规约)，代码ci规范，API命名，统一日志规范，MySQL建表&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;严格的开发流程，如：需求评审、技术方案设计、方案评审、测试用例评审、编码、代码 Review、测试、发布，线上发布要注意灰度。回滚机制&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;对于一些通用的逻辑，要注意抽取公共模块&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;技术框架选型要有严格流程&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;团队未来规划，负责人要怎么做？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：这个分为两部分。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;一个是了解系统状况，有哪些历史技术债务（如：架构优化、性能优化、高可用、可伸缩等）需要分阶段偿还，提前做好时间安排。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;提前了解业务规划，为了实现业务目标，我们要做哪些技术储备&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何让自己的团队高效且有战斗力？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、业务支撑。按优先级将业务分为重点项目、日常项目。优先保证核心项目所需的开发资源。另外，经常与业务同学互通业务想法，提前做好技术储备。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、骨干拉平。对团队经常组织技术培训，核心的技术骨干能轮动工作内容，每个系统都有人员互补。遇到紧急项目时，一个骨干+几个研发，就可以快速支撑一个项目。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、架构升级，为业务预留技术储备。如：分布式、服务化、中台、中心化、中间件、平台化等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、工程效率。包括动态化、配置化、工具化、自动化&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;5、系统稳定性。构建完善的报警监控系统、流控、熔断、降级、容灾、回滚、灰度，保障系统的稳定性。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更多内容，&lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484862&amp;amp;idx=1&amp;amp;sn=70f083d3726cba543b5369e82ba90d8b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;如何打造一个高效的研发团队&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何定制高效的研发流程？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：流程可以帮助我们更规范的做事情，提高整体的工作效率，进而提高产出。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;产品层面，统一将业务需求收集到“需求池”中，每周定期 review 需求，将一些优先级较高的需求整合、立项、排期&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;RPD 方案编写，包括界面、功能、逻辑、交互等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;PRD 方案评审，包括业务准确性、技术可行性评估&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;编写技术方案，并组织评审&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;项目计划，开发任务分解，人力成本，时间评估&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;各角色（前端、后端、客户端等）进入开发阶段，组织每日站立晨会，跟进项目遇到的问题，并及时做出调整。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;代码 review，对不合理的地方及时调整&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;功能测试、性能测试、集成测试&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;预发环境检验&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;发布上线&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;项目经验总结&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何营造团队的技术氛围？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：物以类聚，人以群分。大到一个公司，小到一个团队，都有自己的味道。如果【味道】缺失，那团队的稳定性存在极大风险。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;技术分享，输出倒逼输入，锻炼分享人的演讲能力，同时还能提高团队的整体技术能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;代码CR，可以点对点审查，也可以团队成员一起审查。既能保证代码质量，还能让大家对系统进一步了解&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;代码好坏味道，组织一些活动，对于一些优秀的代码、坏代码，拿出来通晒&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;读书会。一个人的成长离不开持续的学习输入。招聘的候选人要有很强的学习热情，有较强的自律性。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;鼓励创新，紧跟市场前沿，对于一些新技术在充分验证可行性后，可以引入到工作中。当然，创新是有风险的，管理者要充分衡量利弊。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;推行自动化，工具化。管理者要鼓励工程师创造工具、引入工具，释放一些低效工作。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;建立和维护好团队的技术氛围，需要自上而下的技术导向，需要各级老板的鼎力支持，需要每位团队成员参与其中、融入其中&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何做团队的绩效管理？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：肯定要引入一些科学管理方法，比如：KPI、OKR。kpi全称 Key Performance Indicator，只看结果，不关心过程，只要结果拿到了即可，适合销售、运营等考核指标相对明确的岗位。研发岗推荐使用OKR，根据目标自己定义关键节点的Key Result，更加能激发个人的主动性。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;使用OKR工具，要关注几个点：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、如何制定OKR？目标一定要清晰明确，有很强的激励作用，振奋人心；有实际价值；通过自己的努力，短期内可以实现。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、持续跟踪OKR的落地执行，每周、每月、每季度都要定期回顾，不断优化对齐目标，做到信息透明、共享，让每位团队成员都能收获成长的快乐。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;3、OKR评估，分为自评、主管打分。OKR 评分 = 自我评分 x 20% + 同事评分 x 30% + 主管评分 x 50%&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;4、OKR复盘。考核不是最终目的，发现问题并最终解决问题才是我们的终极目标。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;更多内容，参考之前文章  &lt;/span&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247484883&amp;amp;idx=1&amp;amp;sn=f92f9dcc0f644b20aaac385fe8bfe3ba&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;作为技术团队TL，如何运用OKR提高团队产出&lt;/span&gt;&lt;/a&gt;&lt;strong/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何做一个合格的面试官？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;首先，了解招聘岗位的工作职责，技能要求，岗位定级，清楚招聘的候选人要具备什么能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;简历筛选，对于一些不太确定的可以约现场聊聊，毕竟人才稀缺&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试前，提前浏览下候选人的简历，了解其过往项目经历，这样短期内更容易全面考察候选人&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试不应该只局限技术，关于沟通力、团队协作、职业规划、价值观等软性方面也要考察&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试尾声，可以问问候选人有什么想了解的？毕竟清楚彼此双方核心诉求，才能更长远合作&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;面试结束后，及时填写面试反馈，便于后续流程推进&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何招到核心人才？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：核心人才主要关注两点：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;1、价值观。如果员工的价值观与公司不符，即使能力再强，也很难融入集体，创造价值。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;2、技术能力。这个主要是通过两个方面来把控。一个是入职的技术面试，一般有2~4轮，甚至还有部门交叉面试，全方位了解候选人的技术实力。另一个是，由于候选人之前的工作经历和方向与新工作存在一定差异性，候选人能否快速适应新工作环境，所以，会有一个试用期，试用期会制定一个考核目标，直接主管和HRBP 会定期与候选人沟通，答疑解惑，帮助候选人快速投入新的工作中。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何留住核心人才？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：做产品是为了满足用户需求。内部员工也是一样，&lt;strong&gt;先成就员工，再成就团队，最后成就企业&lt;/strong&gt;。给每个员工足够的成长机会，让他对公司有归属感，找到自己的目标与追求。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;对症下药，清楚了解每个员工的诉求点：提升自身技术水平、升职加薪、想带团队。。。等，工作中尽量照顾核心员工的需求，让他们工作中能保持愉悦心态，并获得成就感。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;人嘛，干什么事都要有新鲜感，也可以尝试技术轮岗，接触一些新的东西，既开阔了员工视野，也可能碰撞出一些新的火花。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当然，作为直接负责人，你就是团队成员的天花板，所以也要严格要求自己，不断提升自己的技术能力、视野和管理能力，承担更大的职责，给团队成员预留足够的上升空间。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;什么样的员工坚决开除？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;试用期制定了明确的考核目标，考核周期结束后不能很好的完成&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;踩到公司的红线，比如贪污受贿、数据泄密、威胁公司信息安全&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;态度傲慢，很难与其他同事协同工作，这种人即使能力再强，也坚决开除。因为我们是团队作战，不是搞个人英雄主义。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;不认同公司的价值观，个人的品质较差&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;什么样的员工，老板喜欢？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：有人可能说，“不要工资，干活卖力！”，严肃点，不要皮&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;做事细心，考虑问题全面，工作效率高。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;工作踏实，不挑活&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;有强烈的责任心，接手一件事情，有一杆到底的精神&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;除了做好本职工作外，还会考虑系统架构优化或产品生态建设的工作，有强烈的上进心&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;善于沟通，有很强的团队协同能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;如何做好团队的激励？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：人是一种复杂动物，而且每个人的诉求都不一样，如何统一激励框架就显得非常重要。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;我们要找到激发员工的工作动机，用各种有效的方法来调动员工的积极性和创造性，使其完成任务。比如，现在流行的OKR 管理，自己设定目标以及关键 Key Result，并在团队中共享，做到公开透明，这样每个人都清楚了解团队的目标方向，自己在哪一个位置，起什么作用，让每个成员有强烈的参与感、掌控感，更容易激发员工的主观能动性。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;具体的激励一般有以下几种：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;精神激励。领导的信任表扬；对自身价值的认同。低成本、高效率。比如：每月之星、光荣榜、各种奖项&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;晋升激励。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;物质激励，股票、期权、项目奖、季度奖、年终奖等&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;量身定做，团队成员的情况千差万别，可以结合马斯洛理论，充分了解员工的情况，为员工定制化。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;作为团队负责人，如何面对压力？&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;答案：岗位越高，承担的职责就越大，接受的挑战和压力就越大。&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;分阶段、分里程碑的方式来制定计划，逐步完成事项来达成目标。给自己留一些缓冲时间，以便于应对计划的灵活性调整。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;时刻保持旺盛的精力，保持跟团队成员的沟通，了解他们的工作状态和感受&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;敢于面对上层传递下来的压力，做好缓冲，避免团队过于透支，保证有一个稳固的后方。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;做好项目时间计划表，分清项目的优先级、重要性，合理安排，统筹管理&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;学会委派工作。知人善任，合理分工，发挥团队的力量，而不是当一个超级英雄&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;放松心态，工作和生活尽量分开，保证充足的睡眠和锻炼，毕竟身体是革命的本钱。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;关于我：前阿里P7技术专家，出过专利，竞赛拿过奖，CSDN博客专家，负责过电商交易、社区生鲜、互联网金融等业务，多年团队管理经验。&lt;/span&gt;&lt;/section&gt;&lt;h1 accuse=&quot;qTitle&quot;&gt;&lt;span&gt;&lt;span&gt;关注公众号「微观技术」，后台回复 “算法” ，免费领取资料&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg2NzYyNjQzNg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/2KTof9YshwdmOC0H6kaQlnh3rvWF2hPpzBoAoibbfQkhLdXfEpQgd8frHoDJDH503rv3FaMK6las2rCNQY7icr6w/0?wx_fmt=png&quot; data-nickname=&quot;微观技术&quot; data-alias=&quot;weiguanjishu&quot; data-signature=&quot;前阿里P7技术专家，研究生，出过专利。负责过电商交易、社区团购、流量营销等业务。分享后端架构技能、一线大厂面试经验、团队管理等话题。欢迎关注&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247486894&amp;amp;idx=1&amp;amp;sn=8cc0ae494a7624943665a8e9d47341e1&amp;amp;chksm=ceb9f105f9ce7813b3efa57bb0c655f47a37aab82579dda3da6d05003f97adc99d83f35b6ec7&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;JAVA那点破事！并发、IO模型、集合、线程池、死锁、非阻塞、AQS....&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247486515&amp;amp;idx=1&amp;amp;sn=62a75d90d76a7f0c4cb01a64db8f4e2e&amp;amp;chksm=ceb9f098f9ce798eafec5c1e01aaeaedc00163e5c4925931da7a1b6184365d474fb1562cb664&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Redis缓存那点破事 | 绝杀面试官 25 问！&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247486281&amp;amp;idx=1&amp;amp;sn=2c0fc614dd94c93aa1172413fb340c6d&amp;amp;chksm=ceb9f7e2f9ce7ef46b0832f69b2e6e6e66d1d10c6db94fedb381da886894a1a622086e64f68a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;MYSQL 那点破事！索引、SQL调优、事务、B+树、分表 ....&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&amp;amp;mid=2247485888&amp;amp;idx=1&amp;amp;sn=60304679c226fb6b2ebaba5bb6ad5485&amp;amp;chksm=ceb9f56bf9ce7c7d7c87fa4aa7cb70aba7af6b4aefbf1f8b3e331d5a443ccc91b3ba2fb95b9e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;TCP网络那点破事！三次握手、四次挥手、TIME-WAIT ....&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>51beb20245df83c3fa5387f11dfceaa1</guid>
<title>[推荐] ElasticSearch 存储成本省 60%，稿定科技干货分享</title>
<link>https://toutiao.io/k/oy304tv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;post_content markdown&quot;&gt;&lt;h1 id=&quot;背景&quot;&gt;背景&lt;/h1&gt;&lt;p&gt;稿定科技旗下稿定设计产品是一个聚焦商业设计的多场景在线设计平台，打破了软硬件间的技术限制，汇集创意内容与设计工具于一体，为不同场景下的设计需求提供优质的解决方案，满足图片、视频等全类型媒介的设计需求，让设计更简单。&lt;/p&gt;&lt;p&gt;我们使用 Elasticsearch（下文中简称为 ES） 作为日志检索组件，随着业务量的增长，每天有 2T 左右的新增数据，需要保存 15~30 天，给磁盘和系统带来了不小的压力。在 ES 中为了保证日志的写入和查询的性能，大多使用单位存储成本更高的高性能云盘。但是，在实际的业务场景中，超过 7 天的数据仅作低频使用，全部存储在高性能云盘必然会导致过高的成本和空间的浪费。&lt;/p&gt;&lt;h1 id=&quot;方案&quot;&gt;方案&lt;/h1&gt;&lt;p&gt;ElasticSearch 7.10 版本推出了索引生命周期概念，开始支持数据分层存储，可以指定不同节点使用不同的磁盘介质来区分冷热数据，比如使用 HDD 磁盘来存储温冷数据，能获得更大的使用空间和更低的成本。这个特性非常适合日志索引场景。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;在温冷数据的存储介质上，使用 JuiceFS 替代 HDD 磁盘，相当于获得了无限容量的存储空间。通过 ES 的索引生命周期管理，可以自动完成索引的创建 - 迁移 - 销毁整个生命周期管理，无需手工干预。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;在实践中，首先将 ES 集群升级到目前最新的 7.13 版本。然后拆分冷热节点，热节点优先考虑性能，冷节点优先考虑存储的容量和成本。同时，调整索引和模板方式，配置数据生命周期、索引模板和数据流，完成索引数据写入。&lt;/p&gt;&lt;p&gt;调整后整个索引的流转如下图所示：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;在索引创建时，配置 &lt;code&gt;index.routing.allocation.require.box_type:hot&lt;/code&gt; 进行节点筛选；&lt;/li&gt;&lt;li&gt;等待索引进入 warm 周期时，调整 &lt;code&gt;index.routing.allocation.require.box_type:warm&lt;/code&gt;，并迁移到 warm 节点后，数据进入冷节点存储，实际存储于 JuiceFS 中；&lt;/li&gt;&lt;li&gt;等待索引进入 delete 周期时，ES 会自动把索引数据删除。&lt;/li&gt;&lt;/ol&gt;&lt;h1 id=&quot;客户收益&quot;&gt;客户收益&lt;/h1&gt;&lt;p&gt;方案中使用的 JuiceFS 是什么呢？&lt;/p&gt;&lt;p&gt;JuiceFS 是一款面向云环境设计的企业级分布式文件系统。提供完备的 POSIX 兼容性，为应用提供一个低成本、空间无限的共享文件系统。使用 JuiceFS 存储数据，数据本身会被持久化在对象存储（例如，Amazon S3、阿里云 OSS 等)，结合 JuiceFS 的元数据服务来提供高性能文件存储。JuiceFS 在全球公有云服务中都提供有全托管服务，只需点点鼠标，十分钟配置好。同时 JuiceFS 在 2021年初在 GitHub 开源，受到全球开发者的关注和参与，目前已经获得 3700+ stars。&lt;/p&gt;&lt;p&gt;在本方案中 ES 集群 warm 节点使用 JuiceFS 做存储之后，我们不用再对这些节点做容量规划和扩容工作，也省去了节点故障时的数据迁移，降成本的同时还为运维带来很大的便利。&lt;/p&gt;&lt;p&gt;JuiceFS 的持久层使用对象存储，弹性计费，TCO 比使用普通云盘还要低。在本方案的 ES 集群中，Hot 节点使用的云盘价格为 1000元/TB/月，使用全托管的 JuiceFS 服务加上对象存储的开销，价格约为 250元/TB/月。ES 集群总容量 60TB+，通过冷热分层处理，&lt;strong&gt;75% 的数据存在 JuiceFS 中，仅存储成本已经节省近 60%。如果再加上运维团队介绍的时间精力，这个方案为客户的数据存储带来的 TCO 下降至少有 70%。&lt;/strong&gt;&lt;/p&gt;&lt;h1 id=&quot;实践&quot;&gt;实践&lt;/h1&gt;&lt;h2 id=&quot;集群配置&quot;&gt;集群配置&lt;/h2&gt;&lt;p&gt;集群共 9 个节点，⼀个独⽴的 master 节点（elastic_001），另外 8 个数据节点，其中有 5 个热数据节点（elastic_002 ~ elastic_006），3 个冷数据节点（elastic_007 ~ elastic_009）。&lt;/p&gt;&lt;h2 id=&quot;目录挂载与配置&quot;&gt;目录挂载与配置&lt;/h2&gt;&lt;p&gt;JuiceFS 挂载在 ES 冷数据节点，提供 ES 的数据⽬录。&lt;/p&gt;&lt;p&gt;节点配置有⼀块 2T 的数据盘，挂载在 /data ⽬录，ES 进程以容器的⽅式启动，数据盘挂载的是系统的 &lt;code&gt;/data/elastic&lt;/code&gt; ⽬录，由于使⽤的容器挂载系统⽬录的⽅式，不能通过 &lt;strong&gt;&lt;em&gt;*软链*&lt;/em&gt;&lt;/strong&gt; 的⽅式将 ES 数据⽬录 ( &lt;code&gt;/data/elastic&lt;/code&gt; ) 指向 JuiceFS 挂载的某个⼦⽬录，使⽤了 Linux 系统的 bind mount 将 JuiceFS 的⼦⽬录挂载到 &lt;code&gt;/data/elastic&lt;/code&gt; 这个路径上。⽐如在 007 节点上：&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;# ./juicefs mount gd-elasticsearch-jfs --attrcacheto=1 --entrycacheto=1 \ 
--cache-dir=/data/jfsCache --cache-size=307200 \
--upload-limit=800 --writeback /jfs
# mount -o bind /jfs/data-elastic-pro-007 /data/elastic
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样在 &lt;code&gt;/data/elastic&lt;/code&gt; ⽬录看到 &lt;code&gt;/jfs/data-elastic-pro-007&lt;/code&gt; 的内容。&lt;/p&gt;&lt;p&gt;在 008 和 009 节点上也做类似挂载操作。&lt;/p&gt;&lt;p&gt;如果您还不熟悉 JuiceFS 的初始化、挂载等基本操作，请参考 &lt;a href=&quot;https://github.com/juicedata/juicefs/blob/main/docs/zh_cn/README.md&quot;&gt;JuiceFS 官方文档&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;本地磁盘⽬录使⽤的是 &lt;code&gt;/data/jfsCache/gd-elasticsearch-jfs/rawstaging/&lt;/code&gt; ，请注意不要删除这个⽬录中的任何⽂件，否则可能出现数据丢失。
&lt;code&gt;cache-size&lt;/code&gt; 和 &lt;code&gt;upload-limit&lt;/code&gt; 分别⽤来限制本地的读缓存使⽤空间为 300GiB，写对象存储的带宽不超过 800Mbps。&lt;code&gt;attrcacheto&lt;/code&gt; 和 &lt;code&gt;entrycacheto&lt;/code&gt; 分别表示内核的 attr cache 和 entry cache 的缓存超时时间，单位是秒。&lt;/p&gt;&lt;h1 id=&quot;性能优化&quot;&gt;性能优化&lt;/h1&gt;&lt;h2 id=&quot;降低节点负载&quot;&gt;降低节点负载&lt;/h2&gt;&lt;p&gt;在采用 JuiceFS 之前，ES 集群生命周期中配置了 Force Merge，具体配置项为 warm.actions.forcemerge.max_num_segments: 1，它会导致数据在 Rollover 时重新 Merge，给 CPU 带来极大的压力。而这步动作是完全没必要的，关闭 Force Merge 配置即可避免不必要的性能开销，降低节点负载。&lt;/p&gt;&lt;h2 id=&quot;rollover-参数配置优化&quot;&gt;Rollover 参数配置优化&lt;/h2&gt;&lt;p&gt;由于 warm 阶段数据写入 JuiceFS，最终会持久化到对象存储上，应用层不用再存储多副本，可以在索引 Rollover 过程中，设置 replicas 为 0，即 &lt;code&gt;warm.actions.number_of_replicas: 0&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;另外，考虑当索引数据迁移到 warm 阶段后，数据并不再写入，可以设置 warm 阶段索引只读，即 &lt;code&gt;warm.actions.readonly: {}&lt;/code&gt;，关闭索引的数据写入可以减少内存占用量。&lt;/p&gt;&lt;h1 id=&quot;总结&quot;&gt;总结&lt;/h1&gt;&lt;p&gt;随着时间的推移和业务量的增长，企业势必面临更大规模的数据存储和管理上的双重挑战。在本案中，稿定科技充分发挥 ElasticSearch 的生命周期管理能力，根据业务需要将日志数据进行分层存储。将需要频繁使用的热数据保存在 SSD，而超过 7 天的低频使用数据则存储在性价比更高的 JuiceFS，为客户节省存储成本 60%。同时，JuiceFS 还为应用提供近乎无限的弹性空间，省去了容量规划、扩容、数据迁移等一系列的运维工作，提升了企业 IT 架构的效率。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>