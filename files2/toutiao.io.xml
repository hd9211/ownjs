<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>f9c14c8b1030d7499ee68a8e043f8f44</guid>
<title>做业务系统研发如何做到认真负责？</title>
<link>https://toutiao.io/k/6iusrlx</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;相信大家都有这样的问题，天天写业务代码的程序员，怎么成为技术大牛？下面给大家分享下我对这个问题的看法，仅代表个人看法，比较粗浅，希望大家不要介意。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;程序员大部分在做这两种事情，一是通过技术支持业务部门，二是通过技术支持技术部门，我们大部分做的是前者，因为前者的岗位比较多，例如几百人的技术部门，基础平台组也就 20 人左右，还有大部分公司的盈利还是靠业务，所以支持业务部门的程序员非常重要。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务代码整天做的并不全是对数据库的 CRUD ，它是搭建在各种业务基础框架代码之上的，其实业务的基础框架并没有足够完美到让我们纯粹只做 CRUD 之类的工作，还是有很多需要完善的地方，这都是写业务代码需要考虑的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来基于研发流程角度，分享程序员在业务系统开发中如何做到认真负责。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;开发前做好需求评估&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需求评估会上，一定要弄清楚这 3 个问题：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需求评估后再进行开发内部技术评审，涉及到 数据库设计、接口设计、第三方接口交互等，同时还要考虑代码的封装性、可维护性、可扩展性等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开发人员也尽量提供一份功能改动点的文档出来，说清楚改动了哪些点，哪些重要的点被改动了，让测试人员做好评估。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;提测前做好冒烟测试&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;与测试人员过冒烟测试用例时一定要拉上产品经理，主要是为了保证新功能完整性，旧功能回归场景是否全，有无漏掉的场景等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开发人员需积极主动地推动联调工作，同时对涉及到的主流程进行自测，保证主流程没问题，便于测试人员的工作顺利开展。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果涉及到 C 端用户的接口，需要对接口进行压测，通过压测发现瓶颈所在，提早优化。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;上线前做好回滚预案&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;提前做好上线准备：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;考虑代码合并是否有冲突，如果有冲突提前做好合并工作。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果涉及到 SQL，提前整理出涉及到的 SQL 语句，不要临时上线出现漏掉的情况，同时还要考虑历史数据是否需要修复。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果涉及到后台管理系统，提前配置好 RBAC 的权限。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果涉及到定时脚本，提前配置好 Job 的执行任务。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果涉及到配置，提前做好准备。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;提前做好回滚预案：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;根据各自的发布系统，提前做好回滚方案，涉及到多端的提前沟通好。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果涉及到改动比较大，必须使用灰度发布，先用小部分流量测试，慢慢再开放全量。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;上线后密切观察指标&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;日志监控：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;容器性能监控，查看内存、CPU 曲线是否正常；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;调用次数、响应时长及 HTTP 状态码监控；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;异常业务状态码告警时，需要输出堆栈信息；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对外提供的接口，记录响应时间、入参、出参，需考虑敏感数据脱敏；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;调用第三方服务，记录响应时间、入参、出参；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;数据监控：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;新增用户数监控；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;发送短信数监控；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用优惠券订单数监控；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;退款订单数监控；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;未支付订单数监控；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;... 等等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上线后需要密切关注以上指标，查看有无超预期情况、接口超时情况、接口错误日志等。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;业务群反馈&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果上线后，产品/业务在群里反馈一些异常数据，需要排查的，不要每次都通过代码去定位，要考虑做成小工具让产品/业务自己使用，不要每次都反馈到研发处理。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;加分项&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;需求的分析能力，对产品的了解和掌握；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;行业知识背景，对行业市场的技术方案把握；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;技术框架的熟悉、设计能力；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;努力抽象出跨项目可用的代码库。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;及时汇报；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;小结&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;业务是饭碗，业务做不好，其他什么都别谈，业务才是解决用户问题的核心。&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3649122807017544&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/go9jpG3BuhSgPWaHKyJBicNNsuF8w3M8icxO4FapeT1fHQIicegugNFQeaXIn78Sld4zmbvbWHCK0DmqXj1rS5LibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1710&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;/&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6967e6810b4f03ecf6314479ad829662</guid>
<title>教你如何使用 Node + Express + Typescript 开发一个应用</title>
<link>https://toutiao.io/k/6yxdar1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;Express是nodejs开发中普遍使用的一个框架，下面要谈的是如何结合Typescript去使用。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;目标&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;我们的目标是能够使用Typescript快速开发我们的应用程序，而最终我们的应用程序却是编译为原始的JavaScript代码，以由nodejs运行时来执行。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;初始化设置&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;首要的是我们要创建一个目录名为&lt;code&gt;express-typescript-app&lt;/code&gt;来存放我们的项目代码：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mkdir express-typescript-app&lt;br/&gt;&lt;span&gt;cd&lt;/span&gt; express-typescript-app&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为了实现我们的目标，首先我们需要区分哪些是线上程序依赖项，哪些是开发依赖项，这样可以确保最终编译的代码都是有用的。&lt;/p&gt;&lt;p&gt;在这个教程中，将使用yarn命令作为程序包管理器，当然npm也是一样可以的。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;生产环境依赖&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;express&lt;/code&gt;作为程序的主体框架，在生产环境中是必不可少的，需要安装&lt;/p&gt;&lt;pre&gt;&lt;code&gt;yarn &lt;span&gt;add&lt;/span&gt; express&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样当前目录下就生成了一个package.json 文件，里面暂时只有一个依赖&lt;/p&gt;&lt;h2&gt;&lt;span&gt;开发环境依赖项&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;在开发环境中我们将要使用Typescript编写代码。所以我们需要安装&lt;code&gt;typescript&lt;/code&gt;。另外也需要安装node和express的类型声明。安装的时候带上&lt;code&gt;- D&lt;/code&gt;参数来确保它是开发依赖。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;yarn&lt;/span&gt; add -D typescript &lt;span&gt;@types&lt;/span&gt;/express &lt;span&gt;@types&lt;/span&gt;/node&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装好之后，还有一点值得注意，我们并不想每次代码更改之后还需要手动去执行编译才生效。这样体验太不好了！所以我们需要额外添加几个依赖：&lt;/p&gt;&lt;p&gt;因此这两个依赖都是在开发的时候需要的，而不需编译进生产环境的。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;yarn &lt;span&gt;add&lt;/span&gt; -D ts-node nodemon&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;配置我们的程序运行起来&lt;/span&gt;&lt;/h2&gt;&lt;h4&gt;&lt;span&gt;配置Typescript文件&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;为我们将要用的typescript设置配置文件，创建&lt;code&gt;tsconfig.json&lt;/code&gt;文件&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;touch&lt;/span&gt; &lt;span&gt;tsconfig&lt;/span&gt;&lt;span&gt;.json&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在让我们给配置文件添加编译相关的配置参数：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;module: &quot;commonjs&quot;&lt;/code&gt; — 如果使用过node的都知道，这个作为编译代码时将被编译到最终代码是必不可少的。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;esModuleInterop: true&lt;/code&gt; — 这个选项允许我们默认导出的时候使用*代替导出的内容。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;target: &quot;es6&quot;&lt;/code&gt; — 不同于前端代码，我们需要控制运行环境，得确保使用的node版本能正确识别ES6语法。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;rootDir: &quot;./&quot;&lt;/code&gt; — 设置代码的根目录为当前目录。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;outDir: &quot;./build&quot;&lt;/code&gt; — 最终将Typescript代码编译成执行的Javascript代码目录。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;strict: true&lt;/code&gt; — 允许严格类型检查。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;最终&lt;code&gt;tsconfig.json&lt;/code&gt;文件内容如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;{&lt;br/&gt;  &lt;span&gt;&quot;compilerOptions&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;module&quot;&lt;/span&gt;: &lt;span&gt;&quot;commonjs&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;esModuleInterop&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;target&quot;&lt;/span&gt;: &lt;span&gt;&quot;es6&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;rootDir&quot;&lt;/span&gt;: &lt;span&gt;&quot;./&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;outDir&quot;&lt;/span&gt;: &lt;span&gt;&quot;./build&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;strict&quot;&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;配置package.json脚本&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;目前还没有 &lt;code&gt;package.json&lt;/code&gt;文件的scripts项，我们需要添加几个脚本：第一个是&lt;code&gt;start&lt;/code&gt;启动开发模式，另一个是 &lt;code&gt;build&lt;/code&gt;打包线上环境代码的命令。&lt;/p&gt;&lt;p&gt;启动开发模式我们需要执行&lt;code&gt;nodemon index.ts&lt;/code&gt;，而打包生产代码，我们已经在&lt;code&gt;tsconfig.json&lt;/code&gt;中给出了所有需要的信息，所以我们只需要执行&lt;code&gt;tsc&lt;/code&gt;命令。&lt;/p&gt;&lt;p&gt;此刻下面是你package.json文件中所有的内容，也可能由于我们创建项目的时间不一样，导致依赖的版本号不一样。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;{&lt;br/&gt;  &lt;span&gt;&quot;dependencies&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;express&quot;&lt;/span&gt;: &lt;span&gt;&quot;^4.17.1&quot;&lt;/span&gt;&lt;br/&gt;  },&lt;br/&gt;  &lt;span&gt;&quot;devDependencies&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;@types/express&quot;&lt;/span&gt;: &lt;span&gt;&quot;^4.17.11&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;@types/node&quot;&lt;/span&gt;: &lt;span&gt;&quot;^14.14.22&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;nodemon&quot;&lt;/span&gt;: &lt;span&gt;&quot;^2.0.7&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;ts-node&quot;&lt;/span&gt;: &lt;span&gt;&quot;^9.1.1&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;typescript&quot;&lt;/span&gt;: &lt;span&gt;&quot;^4.1.3&quot;&lt;/span&gt;&lt;br/&gt;  }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;Git配置&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;如果使用git来管理代码，还需要添加&lt;code&gt;.gitignore&lt;/code&gt;文件来忽视&lt;code&gt;node_modules&lt;/code&gt;目录和&lt;code&gt;build&lt;/code&gt;目录&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;touch&lt;/span&gt; &lt;span&gt;.gitignore&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;添加忽视的内容&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;node_modules&lt;/span&gt;&lt;br/&gt;build&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;至此，所有的安装过程已经结束，比单纯的无Typescript版本可能稍微复杂点。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;创建我们的Express应用&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;让我们来正式开始创建express应用。首先创建主文件&lt;code&gt;index.ts&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;touch&lt;/span&gt; &lt;span&gt;index&lt;/span&gt;&lt;span&gt;.ts&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后添加案例代码，在网页中输出“hello world”&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; express &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;express&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;const app = express();&lt;br/&gt;const PORT = &lt;span&gt;3000&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;app.get(&lt;span&gt;&#x27;/&#x27;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;(req, res)&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  res.send(&lt;span&gt;&#x27;Hello world&#x27;&lt;/span&gt;);&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;app.listen(PORT, &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(`&lt;span&gt;Express &lt;span&gt;with&lt;/span&gt; Typescript! http:&lt;span&gt;//localhost:${PORT}&lt;/span&gt;&lt;/span&gt;`);&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在终端命令行执行启动命令 &lt;code&gt;yarn run start&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;yarn&lt;/span&gt; run start&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下来会输出以下内容：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;span&gt;nodemon&lt;/span&gt;] &lt;span&gt;2.0&lt;/span&gt;&lt;span&gt;.7&lt;/span&gt;&lt;br/&gt;[&lt;span&gt;nodemon&lt;/span&gt;] to restart at any time, enter `rs`&lt;br/&gt;[&lt;span&gt;nodemon&lt;/span&gt;] &lt;span&gt;watching &lt;span&gt;path&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;): *.*&lt;br/&gt;[nodemon] watching extensions: ts,json&lt;br/&gt;[nodemon] starting `ts-node index.ts`&lt;br/&gt;Express with Typescript! http:&lt;span&gt;//localhost:3000&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们可以看到nodemon模块已经监听到所有文件的变更后使用&lt;code&gt;ts-node index.ts&lt;/code&gt;命令启动了我们的应用。我们现在可以在浏览器打开网址&lt;code&gt;http://localhost:3000&lt;/code&gt;，将会看到网页中输出我们想要的“hello world”。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5932203389830508&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/wokNJRf0ytqYNndvZIwgJ8ibicC5HOS8DZ34QOemHk2yx47prztdG8IF2s1Z9bWicDtKkhYPAh0ZpLGSuhYUVWUAg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;472&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;span&gt;“Hello World”以外的功能&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;我们的 “Hello World”应用算是创建好了，但是我们不仅于此，还要添加一些稍微复杂点的功能，来丰富一下应用。大致功能包括：&lt;/p&gt;&lt;p&gt;让我们一个个去实现以上功能！&lt;/p&gt;&lt;h4&gt;&lt;span&gt;保存用户&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;首先，我们创建一个&lt;code&gt;types.ts&lt;/code&gt;文件来定义我们用到的&lt;code&gt;User&lt;/code&gt;类型。后面所有类型定义都写在这个文件中。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;touch&lt;/span&gt; &lt;span&gt;types&lt;/span&gt;&lt;span&gt;.ts&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后导出定义的&lt;code&gt;User&lt;/code&gt;类型&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;export&lt;/span&gt; type User = { username: &lt;span&gt;string&lt;/span&gt;; password: &lt;span&gt;string&lt;/span&gt; };&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;好了。我们将使用内存来保存所有的用户，而不是数据库或者其它方式。根目录下创建一个&lt;code&gt;data&lt;/code&gt;目录，然后在里面新建&lt;code&gt;users.ts&lt;/code&gt;文件&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mkdir &lt;span&gt;data&lt;/span&gt;&lt;br/&gt;touch &lt;span&gt;data&lt;/span&gt;/users.ts&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在在users.ts文件里创建一个User类型的空数组&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { User } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&quot;../types&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; users: User[] = [];&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;提交新用户&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;接下来我们希望向应用提交一个新用户。我们在这里将要用到处理请求参数的中间件&lt;code&gt;body-parse&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;yarn &lt;span&gt;add&lt;/span&gt; body-parser&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后在主文件里导入并使用它&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; express &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;express&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; bodyParser &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;body-parser&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;const app = express();&lt;br/&gt;const PORT = &lt;span&gt;3000&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;app.use(bodyParser.urlencoded({ extended: &lt;span&gt;false&lt;/span&gt; }));&lt;br/&gt;&lt;br/&gt;app.get(&lt;span&gt;&#x27;/&#x27;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;(req, res)&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  res.send(&lt;span&gt;&#x27;Hello world&#x27;&lt;/span&gt;);&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;app.listen(PORT, &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(`&lt;span&gt;Express &lt;span&gt;with&lt;/span&gt; Typescript! http:&lt;span&gt;//localhost:${PORT}&lt;/span&gt;&lt;/span&gt;`);&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后，我们可以在users文件里创建POST请求处理程序。 该处理程序将执行以下操作：&lt;/p&gt;&lt;p&gt;让我们开始，首先，在&lt;code&gt;data/users.ts&lt;/code&gt;文件中创建一个&lt;code&gt;addUser&lt;/code&gt;的方法&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { User } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;../types&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; users: User[] = [];&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; addUser = &lt;span&gt;(&lt;span&gt;newUser: User&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  users.push(newUser);&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后回到&lt;code&gt;index.ts&lt;/code&gt;文件中添加一条&lt;code&gt;&quot;/users&quot;&lt;/code&gt;的路由&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; express &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;express&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; bodyParser &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;body-parser&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { addUser } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./data/users&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;const app = express();&lt;br/&gt;const PORT = &lt;span&gt;3000&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;app.use(bodyParser.urlencoded({ extended: &lt;span&gt;false&lt;/span&gt; }));&lt;br/&gt;&lt;br/&gt;app.get(&lt;span&gt;&#x27;/&#x27;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;(req, res)&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  res.send(&lt;span&gt;&#x27;Hello world&#x27;&lt;/span&gt;);&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;app.post(&lt;span&gt;&#x27;/users&#x27;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;(req, res)&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  const { username, password } = req.body;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (!username?.trim() || !password?.trim()) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; res.status(&lt;span&gt;400&lt;/span&gt;).send(&lt;span&gt;&#x27;Bad username or password&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  addUser({ username, password });&lt;br/&gt;  res.status(&lt;span&gt;201&lt;/span&gt;).send(&lt;span&gt;&#x27;User created&#x27;&lt;/span&gt;);&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;app.listen(PORT, &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(`&lt;span&gt;Express &lt;span&gt;with&lt;/span&gt; Typescript! http:&lt;span&gt;//localhost:${PORT}&lt;/span&gt;&lt;/span&gt;`);&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里的逻辑不复杂，我们简单解释一下，首先请求体中要包含&lt;code&gt;username&lt;/code&gt;和&lt;code&gt;password&lt;/code&gt;两个变量，而且使用&lt;code&gt;trim()&lt;/code&gt;函数去除收尾的空字符，保证它的长度大于0。如果不满足，返回&lt;code&gt;400&lt;/code&gt;状态和自定义错误信息。如果验证通过，则将用户信息添加到&lt;code&gt;users&lt;/code&gt;数组并且返回&lt;code&gt;201&lt;/code&gt;状态回来。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;注意：你有没有发现users数组是没有办法知道有没有同一个用户被添加两次的，我们暂且不考虑这种情况。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;让我们重新打开一个终端（不要关掉运行程序的终端），在终端里通过&lt;code&gt;curl&lt;/code&gt;命令来发出一个POST请求注册接口&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;curl&lt;/span&gt; -d &lt;span&gt;&quot;username=foo&amp;amp;password=bar&quot;&lt;/span&gt; -X POST http://localhost:3000/users&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你将会在终端的命令行中发现输出了下面的信息&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;User&lt;/span&gt; created&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后再请求一次接口，这次password仅仅为空字符串，测试一下请求失败的情况&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;curl&lt;/span&gt; -d &lt;span&gt;&quot;username=foo&amp;amp;password= &quot;&lt;/span&gt; -X POST http://localhost:3000/users&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;没有让我们失望，成功返回了一下错误信息&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Bad username &lt;span&gt;or&lt;/span&gt; password&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;登录功能&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;登录有点类似，我们从请求体中拿到&lt;code&gt;username&lt;/code&gt;和&lt;code&gt;password&lt;/code&gt;的值然后通过&lt;code&gt;Array.find&lt;/code&gt;方法去&lt;code&gt;users&lt;/code&gt;数组中查找相同的用户名和密码组合，返回&lt;code&gt;200&lt;/code&gt;状态码说明用户登录成功，而&lt;code&gt;401&lt;/code&gt;状态码表示用户不被授权，登录失败。&lt;/p&gt;&lt;p&gt;首先我们在&lt;code&gt;data/users.ts&lt;/code&gt;文件中添加getUser方法：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { User } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;../types&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;const users: User[] = [];&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; const addUser = &lt;span&gt;&lt;span&gt;(newUser: User)&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  users.push(newUser);&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; const getUser = &lt;span&gt;&lt;span&gt;(user: User)&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; users.find(&lt;br/&gt;    &lt;span&gt;&lt;span&gt;(u)&lt;/span&gt; =&amp;gt;&lt;/span&gt; u.username === user.username &amp;amp;&amp;amp; u.password === user.password&lt;br/&gt;  );&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里&lt;code&gt;getUser&lt;/code&gt;方法将会从&lt;code&gt;users&lt;/code&gt;数组里返回与之匹配用户或者&lt;code&gt;undefined&lt;/code&gt;。&lt;/p&gt;&lt;p&gt;接下来我们将在&lt;code&gt;index.ts&lt;/code&gt;里调用&lt;code&gt;getUser&lt;/code&gt;方法&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; express &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;express&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; bodyParser &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;body-parser&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { addUser, getUser } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&quot;./data/users&#x27;;&lt;br/&gt;&lt;br/&gt;const app = express();&lt;br/&gt;const PORT = 3000;&lt;br/&gt;&lt;br/&gt;app.use(bodyParser.urlencoded({ extended: false }));&lt;br/&gt;&lt;br/&gt;app.get(&#x27;/&#x27;, (req, res) =&amp;gt; {&lt;br/&gt;  res.send(&#x27;Hello word&#x27;);&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;app.post(&#x27;/users&#x27;, (req, res) =&amp;gt; {&lt;br/&gt;  const { username, password } = req.body;&lt;br/&gt;  if (!username?.trim() || !password?.trim()) {&lt;br/&gt;    return res.status(400).send(&#x27;Bad username or password&#x27;);&lt;br/&gt;  }&lt;br/&gt;  addUser({ username, password });&lt;br/&gt;  res.status(201).send(&#x27;User created&#x27;);&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;app.post(&#x27;/login&#x27;, (req, res) =&amp;gt; {&lt;br/&gt;  const { username, password } = req.body;&lt;br/&gt;  const found = getUser({username, password})&lt;br/&gt;  if (!found) {&lt;br/&gt;    return res.status(401).send(&#x27;Login failed&#x27;);&lt;br/&gt;  }&lt;br/&gt;  res.status(200).send(&#x27;Success&#x27;);&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;app.listen(PORT, () =&amp;gt; {&lt;br/&gt;  console.log(`Express with Typescript! http://localhost:${PORT}`);&lt;br/&gt;});&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在我们还是用curl命令去请求注册接口和登录接口，登录接口请求两次，一次成功一次失败&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;curl&lt;/span&gt; -d &lt;span&gt;&quot;username=joe&amp;amp;password=hard2guess&quot;&lt;/span&gt; -X POST http://localhost:3000/users&lt;br/&gt;&lt;span&gt;# User created&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;curl -d &lt;span&gt;&quot;username=joe&amp;amp;password=hard2guess&quot;&lt;/span&gt; -X POST http://localhost:3000/login&lt;br/&gt;&lt;span&gt;# Success&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;curl -d &lt;span&gt;&quot;username=joe&amp;amp;password=wrong&quot;&lt;/span&gt; -X POST http://localhost:3000/login&lt;br/&gt;&lt;span&gt;# Login failed&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;没问题，结果都按我们预想的顺利返回了&lt;/p&gt;&lt;h2&gt;&lt;span&gt;探索Express类型&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;您可能已经发现，讲到现在，好像都是一些基础的东西，Express里面比较深的概念没有涉及到，比如自定义路由，中间件和句柄等功能，我们现在就来重构它。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;自定义路由类型&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;或许我们希望的是创建这样一个标准的路由结构像下面这样&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;const&lt;/span&gt; route = {&lt;br/&gt;  method: &lt;span&gt;&#x27;post&#x27;&lt;/span&gt;,&lt;br/&gt;  path: &lt;span&gt;&#x27;/users&#x27;&lt;/span&gt;,&lt;br/&gt;  middleware: [middleware1, middleware2],&lt;br/&gt;  handler: userSignup,&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们需要在&lt;code&gt;types.ts&lt;/code&gt;文件中定义一个&lt;code&gt;Route&lt;/code&gt;类型。同时也需要从Express库中导出相关的类型：&lt;code&gt;Request&lt;/code&gt;，&lt;code&gt;Response&lt;/code&gt;和&lt;code&gt;NextFunction&lt;/code&gt;。&lt;code&gt;Request&lt;/code&gt;表示客户端的请求数据类型，&lt;code&gt;Response&lt;/code&gt;是从服务器返回值类型，&lt;code&gt;NextFunction&lt;/code&gt;则是next()方法的签名，如果使用过express的中间件应该很熟悉。&lt;/p&gt;&lt;p&gt;在&lt;code&gt;types.ts&lt;/code&gt;文件中，重新定义Route类型&lt;/p&gt;&lt;pre&gt;&lt;code&gt;export &lt;span&gt;type&lt;/span&gt; User = { username: &lt;span&gt;string&lt;/span&gt;; password: &lt;span&gt;string&lt;/span&gt; };&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; Method =&lt;br/&gt;  | &lt;span&gt;&#x27;get&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;head&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;post&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;put&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;delete&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;connect&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;options&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;trace&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;patch&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;export &lt;span&gt;type&lt;/span&gt; Route = {&lt;br/&gt;  method: Method;&lt;br/&gt;  &lt;span&gt;path&lt;/span&gt;: &lt;span&gt;string&lt;/span&gt;;&lt;br/&gt;  middleware: any[];&lt;br/&gt;  handler: any;&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你熟悉express中间件的话，你应该知道一个典型的中间件长这样：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;function&lt;/span&gt; &lt;span&gt;middleware&lt;/span&gt;(&lt;span&gt;request, response, next&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;// Do some logic with the request&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (request.body.something === &lt;span&gt;&#x27;foo&#x27;&lt;/span&gt;) {&lt;br/&gt;    &lt;span&gt;// Failed criteria, send forbidden resposne&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; response.status(&lt;span&gt;403&lt;/span&gt;).send(&lt;span&gt;&#x27;Forbidden&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;// Succeeded, go to the next middleware&lt;/span&gt;&lt;br/&gt;  next();&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由此可知，一个中间件需要传入三个参数，分别是&lt;code&gt;Request&lt;/code&gt;，&lt;code&gt;Response&lt;/code&gt;和&lt;code&gt;NextFunction&lt;/code&gt;类型。因此如果需要我们创建一个&lt;code&gt;Middleware&lt;/code&gt;类型：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { Request, Response, NextFunction } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;express&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;type Middleware = &lt;span&gt;&lt;span&gt;(req: Request, res: Response, next: NextFunction)&lt;/span&gt; =&amp;gt;&lt;/span&gt; any;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后express已经有了一个叫&lt;code&gt;RequestHandler&lt;/code&gt;类型，所以在这里我们只需要从express导出就好了，如果取个别名可以采用类型断言。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;import { RequestHandler as Middleware } from &lt;span&gt;&#x27;express&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;export &lt;span&gt;type&lt;/span&gt; User = { username: &lt;span&gt;string&lt;/span&gt;; password: &lt;span&gt;string&lt;/span&gt; };&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; Method =&lt;br/&gt;  | &lt;span&gt;&#x27;get&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;head&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;post&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;put&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;delete&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;connect&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;options&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;trace&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;patch&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;export &lt;span&gt;type&lt;/span&gt; Route = {&lt;br/&gt;  method: Method;&lt;br/&gt;  &lt;span&gt;path&lt;/span&gt;: &lt;span&gt;string&lt;/span&gt;;&lt;br/&gt;  middleware: Middleware[];&lt;br/&gt;  handler: any;&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后我们只需要为&lt;code&gt;handler&lt;/code&gt;指定类型。这里的&lt;code&gt;handler&lt;/code&gt;应该是程序执行的最后一步，因此我们在设计的时候就不需要传入&lt;code&gt;next&lt;/code&gt;参数了，类型也就是&lt;code&gt;RequestHandler&lt;/code&gt;去掉第三个参数。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { Request, Response, RequestHandler &lt;span&gt;as&lt;/span&gt; Middleware } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;express&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; type User = { username: string; password: string };&lt;br/&gt;&lt;br/&gt;type Method =&lt;br/&gt;  | &lt;span&gt;&#x27;get&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;head&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;post&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;put&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;delete&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;connect&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;options&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;trace&#x27;&lt;/span&gt;&lt;br/&gt;  | &lt;span&gt;&#x27;patch&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; type Handler = &lt;span&gt;&lt;span&gt;(req: Request, res: Response)&lt;/span&gt; =&amp;gt;&lt;/span&gt; any;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; type Route = {&lt;br/&gt;  method: Method;&lt;br/&gt;  path: string;&lt;br/&gt;  middleware: Middleware[];&lt;br/&gt;  handler: Handler;&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;添加一些项目结构&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;我们需要通过增加一些结构来把中间件和处理程序从index.ts文件中移除&lt;/p&gt;&lt;h4&gt;&lt;span&gt;创建处理器&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;我们把一些处理方法移到handlers目录中&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;mkdir&lt;/span&gt; handlers&lt;br/&gt;touch handlers/user.ts&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那么在&lt;code&gt;handlers/user.ts&lt;/code&gt;文件中，我们添加如下代码。和用户注册相关的处理代码已经被我们从&lt;code&gt;index.ts&lt;/code&gt;文件中重构到这里。重要的是我们可以确定&lt;code&gt;signup&lt;/code&gt;方法满足我们定义的&lt;code&gt;Handlers&lt;/code&gt;类型&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { addUser } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;../data/users&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { Handler } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;../types&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; signup: Handler = &lt;span&gt;(&lt;span&gt;req, res&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { username, password } = req.body;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (!username?.trim() || !password?.trim()) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; res.status(&lt;span&gt;400&lt;/span&gt;).send(&lt;span&gt;&#x27;Bad username or password&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  addUser({ username, password });&lt;br/&gt;  res.status(&lt;span&gt;201&lt;/span&gt;).send(&lt;span&gt;&#x27;User created&#x27;&lt;/span&gt;);&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;同样，我们把创建auth处理器添加login方法&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;touch&lt;/span&gt; handlers/auth.ts&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;添加以下代码&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { getUser } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;../data/users&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { Handler } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;../types&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; login: Handler = &lt;span&gt;(&lt;span&gt;req, res&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; { username, password } = req.body;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; found = getUser({ username, password });&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (!found) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; res.status(&lt;span&gt;401&lt;/span&gt;).send(&lt;span&gt;&#x27;Login failed&#x27;&lt;/span&gt;);&lt;br/&gt;  }&lt;br/&gt;  res.status(&lt;span&gt;200&lt;/span&gt;).send(&lt;span&gt;&#x27;Success&#x27;&lt;/span&gt;);&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后也给我们的首页增加一个处理器&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;touch&lt;/span&gt; handlers/home.ts&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;功能很简单，只要输出文本&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { Handler } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;../types&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; const home: Handler = &lt;span&gt;&lt;span&gt;(req, res)&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  res.send(&lt;span&gt;&#x27;Hello world&#x27;&lt;/span&gt;);&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;中间件&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;现在还没有任何的自定义中间件，首先创建一个middleware目录&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;mkdir&lt;/span&gt; middleware&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们将添加一个打印客户端请求路径的中间件，取名&lt;code&gt;requestLogger.ts&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;touch&lt;/span&gt; middleware/requestLogger.ts&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;从express库中导出需要定义的中间件类型的&lt;code&gt;RequestHandler&lt;/code&gt;类型&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { RequestHandler &lt;span&gt;as&lt;/span&gt; Middleware } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;express&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; const requestLogger: Middleware = &lt;span&gt;&lt;span&gt;(req, res, next)&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(req.path);&lt;br/&gt;  next();&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;创建路由&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;既然我们已经定义了一个新的Route类型和自己的一些处理器，就可以把路由定义独立出来一个文件，在根目录创建&lt;code&gt;routes.ts&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;touch&lt;/span&gt; &lt;span&gt;routes&lt;/span&gt;&lt;span&gt;.ts&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以下是该文件的所有代码，为了演示就只给&lt;code&gt;/login&lt;/code&gt;添加了&lt;code&gt;requestLogger&lt;/code&gt;中间件&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { login } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./handlers/auth&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { home } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./handlers/home&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { signup } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./handlers/user&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { requestLogger } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./middleware/requestLogger&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { Route } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./types&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; &lt;span&gt;const&lt;/span&gt; routes: Route[] = [&lt;br/&gt;  {&lt;br/&gt;    &lt;span&gt;method&lt;/span&gt;: &lt;span&gt;&#x27;get&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;path&lt;/span&gt;: &lt;span&gt;&#x27;/&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;middleware&lt;/span&gt;: [],&lt;br/&gt;    &lt;span&gt;handler&lt;/span&gt;: home,&lt;br/&gt;  },&lt;br/&gt;  {&lt;br/&gt;    &lt;span&gt;method&lt;/span&gt;: &lt;span&gt;&#x27;post&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;path&lt;/span&gt;: &lt;span&gt;&#x27;/users&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;middleware&lt;/span&gt;: [],&lt;br/&gt;    &lt;span&gt;handler&lt;/span&gt;: signup,&lt;br/&gt;  },&lt;br/&gt;  {&lt;br/&gt;    &lt;span&gt;method&lt;/span&gt;: &lt;span&gt;&#x27;post&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;path&lt;/span&gt;: &lt;span&gt;&#x27;/login&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;middleware&lt;/span&gt;: [requestLogger],&lt;br/&gt;    &lt;span&gt;handler&lt;/span&gt;: login,&lt;br/&gt;  },&lt;br/&gt;];&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;&lt;span&gt;重构index.ts文件&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;最后也是最重要的一步就是简化&lt;code&gt;index.ts&lt;/code&gt;文件。我们通过一个forEach循环routes文件中声明的路由信息来代替所有的route相关的代码。这样做最大的好处是为所有的路由定义了类型。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; express &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;express&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; bodyParser &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;body-parser&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; { routes } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./routes&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;const app = express();&lt;br/&gt;const PORT = &lt;span&gt;3000&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;app.use(bodyParser.urlencoded({ extended: &lt;span&gt;false&lt;/span&gt; }));&lt;br/&gt;&lt;br/&gt;routes.forEach(&lt;span&gt;&lt;span&gt;(route)&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  const { method, path, middleware, handler } = route;&lt;br/&gt;  app[method](path, ...middleware, handler);&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;app.listen(PORT, &lt;span&gt;&lt;span&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;br/&gt;  &lt;span&gt;console&lt;/span&gt;.log(`&lt;span&gt;Express &lt;span&gt;with&lt;/span&gt; Typescript! http:&lt;span&gt;//localhost:${PORT}&lt;/span&gt;&lt;/span&gt;`);&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样看起来代码结构清晰多了，架构的好处就是如此。另外有了Typescript强类型的支持，保证了程序的稳定性。&lt;/p&gt;&lt;h4&gt;&lt;span&gt;完整代码&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt;: &lt;br/&gt;https://github.com/fantingsheng/express-typescript-app&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f363a3a8f8b32b0ea642349b24311898</guid>
<title>什么是 TMD 的 MVP（最小可行性产品）?</title>
<link>https://toutiao.io/k/t4xmyfk</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry&quot;&gt;
      
        &lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;No, 今天我们说的不是詹姆斯。&lt;/p&gt;
&lt;p&gt;而是&lt;/p&gt;
&lt;p&gt;Minimum Viable Product(MVP) – 最小可实行产品&lt;/p&gt;
&lt;a id=&quot;more&quot;/&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%201.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这张图很流行，在很多地方都能看到。很多人也是看完之后会心一笑，但却很少人真的能遵循这样的MVP原则来开发自己的产品。下面我们就来解释下图片背后到底是在说什么？&lt;/p&gt;
&lt;h1 id=&quot;第一种示例：错误的方式&quot;&gt;&lt;a href=&quot;#第一种示例：错误的方式&quot; class=&quot;headerlink&quot; title=&quot;第一种示例：错误的方式&quot;/&gt;第一种示例：错误的方式&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%202.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;第一排的图片是错误的方式开发产品&lt;/p&gt;
&lt;p&gt;很多的项目的失败是因为直到产品100%完成之后才发布。然而，人们普遍会产生疑问-谁会花钱买个半成品？&lt;/p&gt;
&lt;p&gt;“先生，这是我们的第一个版本的产品，一个轮子，你觉得怎么样？”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%203.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;用户肯定会说“你为什么给我的是一个车轮子？我要的是一辆汽车！你让我那个车轮子当独轮车吗？”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%204.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当每次的产品接近完成的时候，用户会很生气的使用你的产品。因为这些只是车零件的一部分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%205.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在这个例子里，用户最终很高兴得到了他的汽车。但现实情况却往往不是这样的。过程中，大部分时间里是没有经过用户的使用测试的，最终做出来的产品很可能不是用户需要的。所以，这个笑脸只是理想中的情况。&lt;/p&gt;
&lt;p&gt;不管怎样，第一排的过程是错误的。理论上是渐进迭代式的，但是由于缺少实际的反馈，因此风险很大-而且并不灵活。&lt;/p&gt;
&lt;h1 id=&quot;第二种示例-应该是这样&quot;&gt;&lt;a href=&quot;#第二种示例-应该是这样&quot; class=&quot;headerlink&quot; title=&quot;第二种示例 - 应该是这样&quot;/&gt;第二种示例 - 应该是这样&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%206.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;现在我们来用不同的方式。我们还是同样的需求 - 用户订购了一辆车。但是这次我们不仅仅是造一辆车。取而代之的是我们以满足用户潜在需求为出发点。事实证明，他的基本需求是“我需要更快地从A到达B”，而汽车只是解决这一问题的一种可能。汽车只是一个隐喻，你可以认为是任何一种定制产品的开发情况。&lt;/p&gt;
&lt;p&gt;因此，团队应该提供他们能想到的最小的东西，从而使客户进行测试并得到反馈。有人可能将其称为MVP（最小可行性产品），但将其称为最早可测试产品更贴切。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%207.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;随便你叫它什么（根据这个隐喻……有人称他们的第一个版本为产品的“滑板版本”）。&lt;/p&gt;
&lt;p&gt;客户不太可能对此感到满意。这离他订购的汽车很远。没关系！这是关键-目前我们不希望使客户满意。我们可能会让一些早期使用者感到高兴，但目前我们的主要目标只是学习。理想情况下，会事先向客户明确说明这一点，因此用户也不会太失望。&lt;/p&gt;
&lt;p&gt;但是，与第一种情况中的车轮不一样，滑板实际上是一种可用的产品，可以帮助客户从A转到B。虽然不是很好，但总比没有好。因此，我们告诉客户“不用担心，项目尚未完成，这只是许多迭代中的第一个。我们仍然打算制造一辆汽车，但与此同时，请尝试一下并希望给我们反馈。”大胆思考，但以实用可行性的产品迭代交付。&lt;/p&gt;
&lt;p&gt;我们可能会学到一些真正令人惊讶的东西。 假设客户说他讨厌滑板，我们问为什么，然后他说“我讨厌颜色”。 我们就像“呃…。 颜色？ 就这样？”。 客户说：“是的，把它变蓝！ 除此之外，还可以！”。 &lt;/p&gt;
&lt;p&gt;关键问题是“我们开始思考最便宜，最快捷的方式是什么？” 我们能比滑板早交付一些东西吗？ 汽车票可以吗？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%208.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;这会帮助解决客户的问题吗？ 也许（也许不是），但是我们一定会通过将其交到实际用户手中来学习一些东西。 精益创业提供了一个很好的模型，该模型基于列出有关用户的实际假设，然后系统地进行验证。&lt;/p&gt;
&lt;p&gt;你不需要在所有用户上测试产品，也不需要构建产品来测试某些产品。 即使在单个用户上测试原型，也将教给你更多的知识。&lt;/p&gt;
&lt;p&gt;但是，回到滑板示例。&lt;/p&gt;
&lt;p&gt;在办公室里玩了一会滑板之后，客户说：“好吧，很有趣，它的确使我更快的去到咖啡机旁边。但这很不稳定。 我太容易掉下来了。”&lt;/p&gt;
&lt;p&gt;因此，下一次迭代我们将尝试解决该问题，或者至少了解更多有关它的信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%209.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;客户现在可以在办公室附近闲逛而不会掉下来！&lt;/p&gt;
&lt;p&gt;用户快乐吗？并非如此，他仍然有点想要那辆车。但与此同时，他实际上正在使用该产品，并向我们提供了反馈。他最大的抱怨是，由于车轮小且没有间断，很难在建筑物之间走更长的距离。因此，下一次发布时，产品变成了自行车。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%2010.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;现在，客户可以在建筑物之间进行活动。 Yiihaaa！&lt;/p&gt;
&lt;p&gt;我们在这个过程中了解到了一些东西：客户喜欢新鲜空气的感觉。客户主要是在建筑物之间四处走动。&lt;/p&gt;
&lt;p&gt;自行车可能比最初设想的汽车是更好的产品。实际上，在测试该产品时，我们可能会发现对于汽车而言，路径太窄了。我们只是节省了客户大量的时间和金钱，并在更少的时间内为他提供了更好的产品！&lt;/p&gt;
&lt;p&gt;现在你可能在想：“我们可以通过对客户背景和需求的前期分析？”想法不错，但是在我所见过的大多数实际产品开发场景中，无论你进行了多少前期分析，当将第一个实际发行版交到真实用户手中时，你仍然会感到惊讶，而且跟你想象的甚至完全相反。&lt;/p&gt;
&lt;p&gt;是的，进行一些前期分析，在开始开发之前尽可能多地发现问。但是，不要花太多时间在上面，也不要过于相信分析 - 开始进行原型设计和发布，这是真正的有价值的东西。&lt;/p&gt;
&lt;p&gt;无论如何，回到故事。也许客户想要更多。有时他需要去另一个城市，而自行车骑行太慢且出汗。因此，在下一次迭代中，我们添加了一个引擎。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%2011.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;该模型特别适用于软件产品，因为软件很“软”。可以随时随地“变形”产品，而不是每次都必须重建硬件。但是，即使在硬件项目中，提供原型来观察和学习客户如何使用你的产品也有巨大的好处。只是迭代趋向于更长一些（几个月而不是几周）。甚至像丰田和特斯拉这样的实际汽车公司在开发新汽车模型之前也进行了大量原型设计（草图，3D模型，全尺寸粘土模型等）。&lt;/p&gt;
&lt;p&gt;那么现在怎么办？同样，也许顾客对摩托车感到满意。我们可以比计划提前结束项目。大多数产品到处都是没人使用的复杂性和功能。迭代方法实际上是一种更少交付，并用最简单的、便宜的方法解决用户问题。从而不断的趋向于完美。&lt;/p&gt;
&lt;p&gt;再一次，客户可以选择是否继续修改需求而继续。实际上，我们最终可能会得到与最初设想的完全相同的汽车。但是，在此过程中，我们会获得重要的见识，而最终得到一些稍有不同的东西。像这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%2012.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;顾客喜出望外！ 为什么？ 因为我们过程中了解到他喜欢新鲜空气，所以最终得到了一辆敞篷车。 毕竟他确实得到了一辆车，但是比原先计划的要好！&lt;/p&gt;
&lt;p&gt;因此，让我们思考一下。&lt;/p&gt;
&lt;p&gt;”你的滑板是什么？“&lt;br/&gt;最上面的情景（轮胎的交付方式）很糟糕，因为我们一直在交付客户根本无法使用的东西。除非你知道自己在做什么-你的产品几乎没有什么复杂性和风险，也许你已经完成了数百次此类工作-然后从头再来，在一切准备就绪之后交付。&lt;/p&gt;
&lt;p&gt;但是，我见过的大多数产品开发工作都过于复杂且冒险，”完美的产品”方法经常导致巨大的昂贵失败。所以关键的问题是你的“滑板”是什么？&lt;/p&gt;
&lt;p&gt;在产品开发中，应该做的第一件事（在描述了您要为谁解决的问题之后）是确定你的滑板对应的产出对象。可以将滑板视为比喻为最小的东西，你可以将其交给实际用户并获得真实的反馈。&lt;/p&gt;
&lt;p&gt;这将为你提供急需的反馈循环，并为你和客户提供对项目的控制权-你可以过程中不断学习和进行更改，而不仅仅是遵循计划并希望最终会有一个好结果。&lt;/p&gt;
&lt;p&gt;让我们来看一些真实的例子。&lt;/p&gt;
&lt;h1 id=&quot;例子1：Spotify音乐播放器&quot;&gt;&lt;a href=&quot;#例子1：Spotify音乐播放器&quot; class=&quot;headerlink&quot; title=&quot;例子1：Spotify音乐播放器&quot;/&gt;例子1：Spotify音乐播放器&lt;/h1&gt;&lt;p&gt;Spotify现在是一款非常漂亮的产品。 但开始不是这样的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%2013.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;作为2006年的一家初创公司，Spotify的建立基于一些关键假设：人们喜欢流媒体音乐，唱片公司和艺术家希望人们合法地使用音乐，并且从技术上来说，快速稳定的流媒体是可行的。记住，这是在2006年，当时播放器（如Real Player）是一种非常糟糕的体验，而盗版音乐随处可见。 挑战的技术部分是：“当按下‘播放’按钮时，是否有可能使客户立即播放音乐？ 是否有可能摆脱令人讨厌的‘缓冲’进度条？”&lt;/p&gt;
&lt;p&gt;从小处开始并不意味着你不能从大处着想。 这是他们构想的早期草图之一：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%2014.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;Spotify没有花非常多时间在打造一个完整的产品，从假设是否成立出发，坐下来来并Hack了一个技术原型，放入笔记本电脑上的任何翻录音乐，然后开始进行疯狂的实验以寻找方法来使播放快速稳定。交付指标是“从按下播放到听到音乐需要多少毫秒？”。效果是它应该立即播放，并继续流畅播放而不会出现卡顿现象！&lt;/p&gt;
&lt;p&gt;“我们无聊地花了很多时间来关注延迟，因为没人关心，因为我们一心想让你感觉硬盘上拥有世界上所有音乐。对小细节的痴迷有时会使一切变得不同。我认为这是对最小可行产品概念的最大误解。这就是MVP中的V。” -Daniel Ek，Spotify联合创始人兼首席执行官&lt;/p&gt;
&lt;p&gt;一旦他们有了能看的过去的东西，他们就开始对自己，家人和朋友进行测试。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%2015.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;最初的版本无法发布给更多的听众，它完全没有打磨，除了能够找到和播放一些硬编码的歌曲外，基本上没有其他功能，也没有法律协议或商业模式。 那是他们的“滑板”。&lt;/p&gt;
&lt;p&gt;但是他们无耻地将滑板交到了真正的用户（朋友和家人）手中，他们很快就得到了所需的答案。是的，这在技术上是可能的。是的，人们绝对喜欢这个产品（或更喜欢这个产品将来的样子）！ 假设得到验证！ 这个运行中的原型帮助说服了音乐唱片公司和投资者。&lt;/p&gt;
&lt;h1 id=&quot;例子2：LinkedIn&quot;&gt;&lt;a href=&quot;#例子2：LinkedIn&quot; class=&quot;headerlink&quot; title=&quot;例子2：LinkedIn&quot;/&gt;例子2：LinkedIn&lt;/h1&gt;&lt;p&gt;LinkedIn于2003年5月5日成立，创建于联合创始人Reid Hoffman的客厅。 在一个月内，有4,500位用户注册。 现在，它已经被微软收购，在全球拥有5亿名用户。 而这是他们的第一个版本。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%2016.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h1 id=&quot;例子3：Facebook&quot;&gt;&lt;a href=&quot;#例子3：Facebook&quot; class=&quot;headerlink&quot; title=&quot;例子3：Facebook&quot;/&gt;例子3：Facebook&lt;/h1&gt;&lt;p&gt;Facebook在全球拥有19.4亿用户，这是地球上最受欢迎的社交网络，另外还有两个主要平台Instagram和WhatsApp。 创始人马克·扎克伯格（Mark Zuckerberg）于2004年在哈佛大学的宿舍里和几个朋友一起创立了Facebook。早期的版本看起来并不像每天使用的Facebook一样多，但足以吸引纽约广告公司和硅谷投资者的注意力。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%2017.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%2018.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h1 id=&quot;例子4：Airbnb&quot;&gt;&lt;a href=&quot;#例子4：Airbnb&quot; class=&quot;headerlink&quot; title=&quot;例子4：Airbnb&quot;/&gt;例子4：Airbnb&lt;/h1&gt;&lt;p&gt;成立于2008年，Airbnb希望提供一种替代酒店住宿的方式，并为房主在其房屋空置时赚钱提供一种途径。 现在，Airbnb在65,000个城镇和城市中拥有超过300万个房源，迄今已有1.6亿客人次，并以310亿美元的估值筹集了34亿美元的资金。 这就是Airbnb早期的样子。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://qiniu.gafata.com/2021-01-25-Untitled%2019.png?imageView2/2/w/600&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;好了，以上就是全部内容，我们来总结下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MVP只是一个术语，有各种各样的说法，明白其背后的意思，怎么说并不重要。&lt;/li&gt;
&lt;li&gt;避免使用“完美”的交付，进行复杂，创新的产品开发。而要迭代地和增量地进行。&lt;/li&gt;
&lt;li&gt;首先确定你的“滑板”-最早的可测试产品。志存高远，但要收起你的骄傲，做好你的“滑板”。&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;br/&gt;&lt;img src=&quot;http://qiniu.gafata.com/2020-11-20-indiemaker.jpeg?imageView2/2/w/800&quot;/&gt;&lt;br/&gt;&lt;span&gt;和我一起做独立变现产品吧&lt;/span&gt;&lt;br/&gt;&lt;/center&gt;
      
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7bca199bb4621dc06fc9b674ac0eb223</guid>
<title>Spring Boot 集成 ActiveMQ (Artemis)</title>
<link>https://toutiao.io/k/vplubh1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content&quot;&gt;&amp;#13;

&lt;p&gt;Apache ActiveMQ 是一款基于 Java 的消息服务器，它使用行业标准协议，支持我们把各种语言和平台开发的系统连接在一起。目前 ActiveMQ 分为两个版本：ActiveMQ 5 和 ActiveMQ Artemis (下一代ActiveMQ)。当 ActiveMQ Artemis 达到 ActiveMQ 功能时会变为 ActiveMQ 6 。&lt;/p&gt;



&lt;figure class=&quot;wp-block-image size-large&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;https://engr-z.com/wp-content/uploads/2021/01/activemq-5-activemq-artermis-1024x368.png&quot; alt=&quot;&quot; class=&quot;wp-image-138&quot; title=&quot;&quot; srcset=&quot;https://engr-z.com/wp-content/uploads/2021/01/activemq-5-activemq-artermis-1024x368.png 1024w, https://engr-z.com/wp-content/uploads/2021/01/activemq-5-activemq-artermis-300x108.png 300w, https://engr-z.com/wp-content/uploads/2021/01/activemq-5-activemq-artermis-768x276.png 768w, https://engr-z.com/wp-content/uploads/2021/01/activemq-5-activemq-artermis.png 1121w&quot; sizes=&quot;(max-width: 1024px) 100vw, 1024px&quot;/&gt;&lt;/figure&gt;



&lt;p&gt;Spring JMS 是专门用来处理 Spring 消息的模块。它支持主流的消息中间键，能完美结合 ActiveMQ 。Spring Boot 应用通过集成 Spring JMS 模块整合 ActiveMQ ，本文涉及 ActiveMQ 5 和 ActiveMQ Artemis 两种配置方法，根据项目实际使用 ActiveMQ 的版本，采取一种配置即可。&lt;/p&gt;



&lt;span id=&quot;more-137&quot;/&gt;



&lt;h3 class=&quot;has-text-align-center has-black-color has-red-background-color has-text-color has-background&quot; id=&quot;引入依赖&quot;&gt;&lt;strong&gt;引入依赖&lt;/strong&gt;&lt;/h3&gt;







&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-boot-starter-activemq&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;



&lt;ul&gt;&lt;li&gt;引入activemq artemis (与 activemq 二选一)&lt;/li&gt;&lt;/ul&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-boot-starter-artemis&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;



&lt;h3 class=&quot;has-text-align-center has-black-color has-red-background-color has-text-color has-background&quot; id=&quot;配置&quot;&gt;&lt;strong&gt;配置&lt;/strong&gt;&lt;/h3&gt;



&lt;p&gt;在 application.yml 中增加：&lt;/p&gt;







&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;spring:
  activemq:
    broker-url: tcp://${ACTIVEMQ_HOST, localhost}:61616 &lt;em&gt;# activemq连接地址&lt;/em&gt;
    user: ${ACTIVEMQ_USER, admin} &lt;em&gt;# 用户名&lt;/em&gt;
    password: ${ACTIVEMQ_PASSWORD, admin} &lt;em&gt;# 密码&lt;/em&gt;
    send-timeout: &lt;em&gt;# 发送超时时间&lt;/em&gt;
    pool:
      enabled: false &lt;em&gt;# 是否创建 JmsPoolConnectionFactory 连接池&lt;/em&gt;
      idle-timeout: 30s &lt;em&gt;# 空闲连接超时时间&lt;/em&gt;
      max-connections: 50 &lt;em&gt;# 连接池中最大连接数&lt;/em&gt;
      max-sessions-per-connection: 100 &lt;em&gt;# 每个连接最大会话&lt;/em&gt;&lt;/code&gt;&lt;/pre&gt;







&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;spring:
  artemis:
    mode: native
    host: ${ARTEMIS_HOST, localhost} &lt;em&gt;# artermis连接地址&lt;/em&gt;
    port: ${ARTEMIS_PORT, 9876} &lt;em&gt;# artermis连接端口&lt;/em&gt;
    user: ${ARTEMIS_USER, admin} &lt;em&gt;# 用户名&lt;/em&gt;
    password: ${ARTEMIS_PASSWORD, admin} &lt;em&gt;# 密码&lt;/em&gt;
    send-timeout: &lt;em&gt;# 发送超时时间&lt;/em&gt;
    pool:
      enabled: false &lt;em&gt;# 是否创建 JmsPoolConnectionFactory 连接池&lt;/em&gt;
      idle-timeout: 30s &lt;em&gt;# 空闲连接超时时间&lt;/em&gt;
      max-connections: 50 &lt;em&gt;# 连接池中最大连接数&lt;/em&gt;
      max-sessions-per-connection: 100 &lt;em&gt;# 每个连接最大会话&lt;/em&gt;&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;Spring JMS 中默使用 CachingConnectionFactory 创建连接池，如果指定 JmsPoolConnectionFactory 连接池，则在 spring.jms.* 中配置连接池属性。&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;spring:
  jms:
    session-cache-size: 5&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;关于 Activemq (Artemis) 和 Apring Jms 更多配置，可参考：&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#common-application-properties-integration&quot; target=&quot;_blank&quot; rel=&quot;noreferrer noopener&quot;&gt;Spring Boot Integration Properties&lt;/a&gt;&lt;/p&gt;



&lt;h3 class=&quot;has-text-align-center has-black-color has-red-background-color has-text-color has-background&quot; id=&quot;使用&quot;&gt;&lt;strong&gt;使用&lt;/strong&gt;&lt;/h3&gt;



&lt;p&gt;JmsTemplate 是 Spring JMS 中用来发送消息的类。做完以上配置，在 Spring Boot 启动入口加上 &lt;code&gt;@EnableJms&lt;/code&gt; 注解，项目在启动时会自动装配，在项目中直接注入 JmsTemplate 对象。&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;@SpringBootApplication
@EnableJms
public class Application {

    @Autowired
    private JmsTemplate jmsTemplate;
    
   public static void main(String[] args) {
        SpringApplication.run(Application.class);
    }

}&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;发送文本消息示例：&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;public void send(String msg) {

    log.info(&quot;发送消息：{}&quot;, msg);

    jmsTemplate.send(DEST_NAME, new MessageCreator() {
        @Override
        public Message createMessage(Session session) throws JMSException {
            &lt;em&gt;// 也可以创建对象 session.createObjectMessage()&lt;/em&gt;
            TextMessage textMessage = session.createTextMessage();
            textMessage.setText(msg);
            return textMessage;
        }
    });
}&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;接收使用 &lt;code&gt;@JmsListener&lt;/code&gt; 注解：&lt;/p&gt;



&lt;pre class=&quot;wp-block-code&quot;&gt;&lt;code&gt;&lt;em&gt;/**
 * 监听消息
 * @param content
 */&lt;/em&gt;
@JmsListener(destination = DEST_NAME, concurrency = &quot;消费线程数&quot;)
public void recive(String content) {
    log.info(&quot;收到消息：{}&quot;, content);
}&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;发送消息和接收消息的 DEST_NAME 要保持一至。 concurrency 属性非必须，用来设置消费消息的程序数。关于 ActiveMQ 的详细介绍会在专门的章节讲解。&lt;/p&gt;
&lt;hr/&gt;&lt;/div&gt;&amp;#13;
&amp;#13;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6ca63858d565518a1615af664d8eaf10</guid>
<title>PULSE：一种基于隐式空间的图像超分辨率算法</title>
<link>https://toutiao.io/k/bjaeu6n</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;center data-tool=&quot;mdnice编辑器&quot;&gt;&lt;h1&gt;&lt;img class=&quot;rich_pages __bg_gif&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;572&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;130&quot; data-ratio=&quot;0.2778649921507064&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/BJbRvwibeSTupqdIM3DRZAB2zjLPcNGCfo0RVqKxGglFNHxCrQloO7WET5ESx1DLQhf67Tph4hkKPiboP1kCLMlA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;637&quot;/&gt;&lt;/h1&gt;&lt;h1&gt;&lt;br/&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;分享一篇 CVPR 2020 录用论文：PULSE: Self-Supervised Photo Upsampling via Latent Space Exploration of Generative Models，作者提出了一种新的图像超分辨率方法，区别于有监督的PSNR-based和GANs-based方法，该方法是一种无监督的方法，即只需要低分辨率的图片就可以恢复高质量、高分辨率的图片。&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;目前代码已经开源：&lt;br/&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h1&gt;&lt;span&gt;https://github.com/adamian98/pulse&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/center&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;论文信息：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.33359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/BJbRvwibeSTvCYFCekNMwxE8bzG2sAWTEcpWgoWCgU3SCuM6N8bDcDIibYRC92GKfbsHVhicf87bz6FxZBLxsRQew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作者均来自于杜克大学。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. Motivation&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图像超分辨率任务的基本目标就是把一张低分辨率的图像超分成其对应的高分辨率图像。无论是基于PNSR还是GAN的监督学习方法，或多或少都会用到pixel-wise误差损失函数，而这往往会导致生成的图像比较平滑，一些细节效果不是很好。于是作者换了一个思路：**以往的方法都是从LR，逐渐恢复和生成HR；如果能找到一个高分辨率图像HR的Manifold，并从该Manifold中搜寻到一张高分辨率的图像使其下采样能恢复到LR，那么搜寻到的那张图像就是LR超分辨率后的结果。**所以本篇文章主要解决了以下的两个问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如何找到一个高分辨率图像的Manifold？&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如何在高分辨率图像的Manifold上搜寻到一张图片使其下采样能恢复LR？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. Method&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假设高分辨率图像的Manifold是&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\mathcal{M} \in R^{M \times N}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -846 5153.8 896&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M28 9Q28 37 43 63T73 90Q77 90 83 84T103 70T141 57H146Q162 57 178 79T222 167Q266 279 295 371T334 513T349 598T358 651T371 677Q397 705 432 705Q442 705 445 699T452 666Q453 661 453 659Q475 538 509 405T568 207L574 192Q581 178 587 164T594 150Q596 150 635 189T693 248Q765 324 863 438T1024 626T1089 701Q1093 705 1100 705Q1111 705 1111 682Q1111 675 1108 660T1099 611T1086 540Q1041 277 1041 144Q1041 98 1044 75T1050 48T1059 42Q1064 41 1075 46Q1102 61 1121 61Q1137 61 1137 50Q1137 28 1087 0T1000 -29Q983 -29 972 -23T955 -9T945 16T942 45T941 83V96Q941 158 952 256T974 422L985 489Q984 489 939 436T821 300T698 164Q665 128 620 85T568 37Q564 34 558 34Q550 34 546 37T535 54Q512 91 496 127T450 259T389 498L384 518Q349 367 294 223T198 15Q155 -50 117 -50Q87 -50 61 -35T30 -6Q28 2 28 9Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1478.8, 0)&quot;&gt;&lt;path data-c=&quot;2208&quot; d=&quot;M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(2423.6, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(759, 363) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1051, 0)&quot;&gt;&lt;path data-c=&quot;D7&quot; d=&quot;M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1829, 0)&quot;&gt;&lt;path data-c=&quot;4E&quot; d=&quot;M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;I_{SR} \in \mathcal{M}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 3906.3 870.6&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;49&quot; d=&quot;M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(440, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;53&quot; d=&quot;M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(645, 0)&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1760.6, 0)&quot;&gt;&lt;path data-c=&quot;2208&quot; d=&quot;M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot; transform=&quot;translate(2705.3, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M28 9Q28 37 43 63T73 90Q77 90 83 84T103 70T141 57H146Q162 57 178 79T222 167Q266 279 295 371T334 513T349 598T358 651T371 677Q397 705 432 705Q442 705 445 699T452 666Q453 661 453 659Q475 538 509 405T568 207L574 192Q581 178 587 164T594 150Q596 150 635 189T693 248Q765 324 863 438T1024 626T1089 701Q1093 705 1100 705Q1111 705 1111 682Q1111 675 1108 660T1099 611T1086 540Q1041 277 1041 144Q1041 98 1044 75T1050 48T1059 42Q1064 41 1075 46Q1102 61 1121 61Q1137 61 1137 50Q1137 28 1087 0T1000 -29Q983 -29 972 -23T955 -9T945 16T942 45T941 83V96Q941 158 952 256T974 422L985 489Q984 489 939 436T821 300T698 164Q665 128 620 85T568 37Q564 34 558 34Q550 34 546 37T535 54Q512 91 496 127T450 259T389 498L384 518Q349 367 294 223T198 15Q155 -50 117 -50Q87 -50 61 -35T30 -6Q28 2 28 9Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;是M上的一个高分辨率图片，给定一个低分辨率图像&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;I_{LR} \in R^{m \times n}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -710.2 5135 875&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;49&quot; d=&quot;M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(440, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4C&quot; d=&quot;M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(681, 0)&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1786, 0)&quot;&gt;&lt;path data-c=&quot;2208&quot; d=&quot;M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(2730.8, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(759, 363) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;6D&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(878, 0)&quot;&gt;&lt;path data-c=&quot;D7&quot; d=&quot;M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1656, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，如果&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;I_{SR}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 1482.8 848.6&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;49&quot; d=&quot;M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(440, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;53&quot; d=&quot;M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(645, 0)&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;可以通过下采样操作DS恢复LR，那么&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;I_{SR}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -683 1482.8 848.6&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;49&quot; d=&quot;M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(440, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;53&quot; d=&quot;M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(645, 0)&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;就可以认为是LR的超分辨率结果，该问题定义如下：&lt;/p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\left\|D S\left(I_{S R}\right)-I_{L R}\right\|_{p} \leq \epsilon&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 9609.7 1172.5&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mrow&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;2225&quot; d=&quot;M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(500, 0)&quot;&gt;&lt;path data-c=&quot;44&quot; d=&quot;M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1328, 0)&quot;&gt;&lt;path data-c=&quot;53&quot; d=&quot;M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mrow&quot; transform=&quot;translate(1973, 0)&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(389, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;49&quot; d=&quot;M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(440, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;53&quot; d=&quot;M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(645, 0)&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1871.8, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4456, 0)&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(5456.2, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;49&quot; d=&quot;M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(440, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4C&quot; d=&quot;M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(681, 0)&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(6964.5, 0)&quot;&gt;&lt;path data-c=&quot;2225&quot; d=&quot;M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(7464.5, -285.4) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(8147.9, 0)&quot;&gt;&lt;path data-c=&quot;2264&quot; d=&quot;M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(9203.7, 0)&quot;&gt;&lt;path data-c=&quot;3F5&quot; d=&quot;M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;/span&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即当两者的差值小于某个阈值&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\epsilon&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -431 406 442&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;3F5&quot; d=&quot;M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;时。令&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\mathcal{R}_{\epsilon}=\left\{I \in {R}^{N \times M}:\left\|D S(I)-I_{L R}\right\|_{p}^{p} \leq \epsilon\right\}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/I1OPdTuWhEibyTNhY6zbPXyDdxWz8IPaNHtFvvoZWQC945mlXHGg3sKHBD4DcYONC6MXV9MhYoV2PatXIbdDBY8ZHHYzaSibfN/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/span&gt;&lt;/span&gt;,那么本文任务其实就是找到一个&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;I_{S R} \in \mathcal{M} \cap \mathcal{R}_{\epsilon}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 6202.9 870.6&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msub&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;49&quot; d=&quot;M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(440, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;53&quot; d=&quot;M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(645, 0)&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1760.6, 0)&quot;&gt;&lt;path data-c=&quot;2208&quot; d=&quot;M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot; transform=&quot;translate(2705.3, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M28 9Q28 37 43 63T73 90Q77 90 83 84T103 70T141 57H146Q162 57 178 79T222 167Q266 279 295 371T334 513T349 598T358 651T371 677Q397 705 432 705Q442 705 445 699T452 666Q453 661 453 659Q475 538 509 405T568 207L574 192Q581 178 587 164T594 150Q596 150 635 189T693 248Q765 324 863 438T1024 626T1089 701Q1093 705 1100 705Q1111 705 1111 682Q1111 675 1108 660T1099 611T1086 540Q1041 277 1041 144Q1041 98 1044 75T1050 48T1059 42Q1064 41 1075 46Q1102 61 1121 61Q1137 61 1137 50Q1137 28 1087 0T1000 -29Q983 -29 972 -23T955 -9T945 16T942 45T941 83V96Q941 158 952 256T974 422L985 489Q984 489 939 436T821 300T698 164Q665 128 620 85T568 37Q564 34 558 34Q550 34 546 37T535 54Q512 91 496 127T450 259T389 498L384 518Q349 367 294 223T198 15Q155 -50 117 -50Q87 -50 61 -35T30 -6Q28 2 28 9Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4128.6, 0)&quot;&gt;&lt;path data-c=&quot;2229&quot; d=&quot;M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(5017.8, 0)&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M37 475Q19 475 19 487Q19 503 35 530T83 589T180 647T327 682H374Q387 682 417 682T464 683Q519 683 559 679T642 663T708 625T731 557Q731 481 668 411T504 300Q506 296 512 286T528 257T553 202Q594 105 611 82Q635 47 665 47Q708 47 742 93Q758 113 786 128Q804 136 819 137Q837 137 837 125Q837 115 818 92T767 43T687 -2T589 -22Q549 -22 517 22T467 120T422 221T362 273Q346 273 346 287Q348 301 373 320T436 342Q437 342 446 343T462 345T481 348T504 353T527 362T553 375T577 393Q598 412 614 443T630 511Q630 545 613 566T541 600T393 614Q370 614 370 613L366 584Q349 446 311 307T243 96L213 25Q205 8 179 -7T132 -22Q125 -22 120 -18T117 -8Q117 -5 130 26T163 113T205 239T246 408T274 606V614Q273 614 259 613T231 609T198 602T163 588Q131 572 113 518Q102 502 80 490T37 475Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(848, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;3F5&quot; d=&quot;M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;如下图所示：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.693012600229095&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/BJbRvwibeSTvCYFCekNMwxE8bzG2sAWTEvNeL8PribXPuUJsN1xicDso2r1hLjCgAiaGU8BEafPkcHMdkVlWxVMgNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;873&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以本文一个重要的损失就是下采样损失&lt;em&gt;Downscaling loss(p=2)&lt;/em&gt;：&lt;/p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;L_{D S}\left(I_{S R}, I_{L R}\right):=\left\|D S\left(I_{S R}\right)-I_{L R}\right\|_{p}^{p}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/I1OPdTuWhEibyTNhY6zbPXyDdxWz8IPaNARDfDFP9dxPy1GtVR5QJuJxQej2KMyHHEbiaFMhyUr1klNw1WvjeYvicgYznSd8H8u/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;于是，如何构建这样一个高分辨率图像的Manifold(&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\mathcal{M}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 1201 755&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M28 9Q28 37 43 63T73 90Q77 90 83 84T103 70T141 57H146Q162 57 178 79T222 167Q266 279 295 371T334 513T349 598T358 651T371 677Q397 705 432 705Q442 705 445 699T452 666Q453 661 453 659Q475 538 509 405T568 207L574 192Q581 178 587 164T594 150Q596 150 635 189T693 248Q765 324 863 438T1024 626T1089 701Q1093 705 1100 705Q1111 705 1111 682Q1111 675 1108 660T1099 611T1086 540Q1041 277 1041 144Q1041 98 1044 75T1050 48T1059 42Q1064 41 1075 46Q1102 61 1121 61Q1137 61 1137 50Q1137 28 1087 0T1000 -29Q983 -29 972 -23T955 -9T945 16T942 45T941 83V96Q941 158 952 256T974 422L985 489Q984 489 939 436T821 300T698 164Q665 128 620 85T568 37Q564 34 558 34Q550 34 546 37T535 54Q512 91 496 127T450 259T389 498L384 518Q349 367 294 223T198 15Q155 -50 117 -50Q87 -50 61 -35T30 -6Q28 2 28 9Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;)成为了问题的关键。假如我们有一个参数可微的Manifold(&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\mathcal{M}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 1201 755&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M28 9Q28 37 43 63T73 90Q77 90 83 84T103 70T141 57H146Q162 57 178 79T222 167Q266 279 295 371T334 513T349 598T358 651T371 677Q397 705 432 705Q442 705 445 699T452 666Q453 661 453 659Q475 538 509 405T568 207L574 192Q581 178 587 164T594 150Q596 150 635 189T693 248Q765 324 863 438T1024 626T1089 701Q1093 705 1100 705Q1111 705 1111 682Q1111 675 1108 660T1099 611T1086 540Q1041 277 1041 144Q1041 98 1044 75T1050 48T1059 42Q1064 41 1075 46Q1102 61 1121 61Q1137 61 1137 50Q1137 28 1087 0T1000 -29Q983 -29 972 -23T955 -9T945 16T942 45T941 83V96Q941 158 952 256T974 422L985 489Q984 489 939 436T821 300T698 164Q665 128 620 85T568 37Q564 34 558 34Q550 34 546 37T535 54Q512 91 496 127T450 259T389 498L384 518Q349 367 294 223T198 15Q155 -50 117 -50Q87 -50 61 -35T30 -6Q28 2 28 9Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;)，那么我们就可以利用Downscapling loss去指导这个搜寻过程。而且得到的结果也是在Manifold(&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\mathcal{M}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 1201 755&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M28 9Q28 37 43 63T73 90Q77 90 83 84T103 70T141 57H146Q162 57 178 79T222 167Q266 279 295 371T334 513T349 598T358 651T371 677Q397 705 432 705Q442 705 445 699T452 666Q453 661 453 659Q475 538 509 405T568 207L574 192Q581 178 587 164T594 150Q596 150 635 189T693 248Q765 324 863 438T1024 626T1089 701Q1093 705 1100 705Q1111 705 1111 682Q1111 675 1108 660T1099 611T1086 540Q1041 277 1041 144Q1041 98 1044 75T1050 48T1059 42Q1064 41 1075 46Q1102 61 1121 61Q1137 61 1137 50Q1137 28 1087 0T1000 -29Q983 -29 972 -23T955 -9T945 16T942 45T941 83V96Q941 158 952 256T974 422L985 489Q984 489 939 436T821 300T698 164Q665 128 620 85T568 37Q564 34 558 34Q550 34 546 37T535 54Q512 91 496 127T450 259T389 498L384 518Q349 367 294 223T198 15Q155 -50 117 -50Q87 -50 61 -35T30 -6Q28 2 28 9Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;)上的，结果肯定是高分辨率的，且通过下采样之后也能恢复LR图片。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以作者想到了用一个带latent space的生成模型(e.g. VAE, GANs)来近似这个Manifold(&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\mathcal{M}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 1201 755&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M28 9Q28 37 43 63T73 90Q77 90 83 84T103 70T141 57H146Q162 57 178 79T222 167Q266 279 295 371T334 513T349 598T358 651T371 677Q397 705 432 705Q442 705 445 699T452 666Q453 661 453 659Q475 538 509 405T568 207L574 192Q581 178 587 164T594 150Q596 150 635 189T693 248Q765 324 863 438T1024 626T1089 701Q1093 705 1100 705Q1111 705 1111 682Q1111 675 1108 660T1099 611T1086 540Q1041 277 1041 144Q1041 98 1044 75T1050 48T1059 42Q1064 41 1075 46Q1102 61 1121 61Q1137 61 1137 50Q1137 28 1087 0T1000 -29Q983 -29 972 -23T955 -9T945 16T942 45T941 83V96Q941 158 952 256T974 422L985 489Q984 489 939 436T821 300T698 164Q665 128 620 85T568 37Q564 34 558 34Q550 34 546 37T535 54Q512 91 496 127T450 259T389 498L384 518Q349 367 294 223T198 15Q155 -50 117 -50Q87 -50 61 -35T30 -6Q28 2 28 9Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;)。这些方法可以通过latent code去生成一张图片，通过引入一个pre-trained的生成模型来近似Manifold(&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\mathcal{M}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 1201 755&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M28 9Q28 37 43 63T73 90Q77 90 83 84T103 70T141 57H146Q162 57 178 79T222 167Q266 279 295 371T334 513T349 598T358 651T371 677Q397 705 432 705Q442 705 445 699T452 666Q453 661 453 659Q475 538 509 405T568 207L574 192Q581 178 587 164T594 150Q596 150 635 189T693 248Q765 324 863 438T1024 626T1089 701Q1093 705 1100 705Q1111 705 1111 682Q1111 675 1108 660T1099 611T1086 540Q1041 277 1041 144Q1041 98 1044 75T1050 48T1059 42Q1064 41 1075 46Q1102 61 1121 61Q1137 61 1137 50Q1137 28 1087 0T1000 -29Q983 -29 972 -23T955 -9T945 16T942 45T941 83V96Q941 158 952 256T974 422L985 489Q984 489 939 436T821 300T698 164Q665 128 620 85T568 37Q564 34 558 34Q550 34 546 37T535 54Q512 91 496 127T450 259T389 498L384 518Q349 367 294 223T198 15Q155 -50 117 -50Q87 -50 61 -35T30 -6Q28 2 28 9Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;)，且latent code是可微分的，可以利用Downscapling loss去指导搜寻。所以问题又转化为找到一个生成模型G，令latent space为&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\mathcal{L}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 690 727&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4C&quot; d=&quot;M62 -22T47 -22T32 -11Q32 -1 56 24T83 55Q113 96 138 172T180 320T234 473T323 609Q364 649 419 677T531 705Q559 705 578 696T604 671T615 645T618 623V611Q618 582 615 571T598 548Q581 531 558 520T518 509Q503 509 503 520Q503 523 505 536T507 560Q507 590 494 610T452 630Q423 630 410 617Q367 578 333 492T271 301T233 170Q211 123 204 112L198 103L224 102Q281 102 369 79T509 52H523Q535 64 544 87T579 128Q616 152 641 152Q656 152 656 142Q656 101 588 40T433 -22Q381 -22 289 1T156 28L141 29L131 20Q111 0 87 -11Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，那么对于一个latent code &lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;z \in \mathcal{L}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 2377.6 745&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;7A&quot; d=&quot;M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(742.8, 0)&quot;&gt;&lt;path data-c=&quot;2208&quot; d=&quot;M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot; transform=&quot;translate(1687.6, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4C&quot; d=&quot;M62 -22T47 -22T32 -11Q32 -1 56 24T83 55Q113 96 138 172T180 320T234 473T323 609Q364 649 419 677T531 705Q559 705 578 696T604 671T615 645T618 623V611Q618 582 615 571T598 548Q581 531 558 520T518 509Q503 509 503 520Q503 523 505 536T507 560Q507 590 494 610T452 630Q423 630 410 617Q367 578 333 492T271 301T233 170Q211 123 204 112L198 103L224 102Q281 102 369 79T509 52H523Q535 64 544 87T579 128Q616 152 641 152Q656 152 656 142Q656 101 588 40T433 -22Q381 -22 289 1T156 28L141 29L131 20Q111 0 87 -11Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;有：&lt;/p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\left\|D S(G(z))-I_{L R}\right\|_{p}^{p} \leq \epsilon&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -789.6 10155.9 1212.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msubsup&quot;&gt;&lt;g data-mml-node=&quot;mrow&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;2225&quot; d=&quot;M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(500, 0)&quot;&gt;&lt;path data-c=&quot;44&quot; d=&quot;M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1328, 0)&quot;&gt;&lt;path data-c=&quot;53&quot; d=&quot;M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1973, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2362, 0)&quot;&gt;&lt;path data-c=&quot;47&quot; d=&quot;M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(3148, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(3537, 0)&quot;&gt;&lt;path data-c=&quot;7A&quot; d=&quot;M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4002, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(4391, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(5002.2, 0)&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msub&quot; transform=&quot;translate(6002.4, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;49&quot; d=&quot;M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(440, -150) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4C&quot; d=&quot;M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(681, 0)&quot;&gt;&lt;path data-c=&quot;52&quot; d=&quot;M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(7510.7, 0)&quot;&gt;&lt;path data-c=&quot;2225&quot; d=&quot;M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(8010.7, 477.1) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; transform=&quot;translate(8010.7, -285.4) scale(0.707)&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;70&quot; d=&quot;M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(8694.1, 0)&quot;&gt;&lt;path data-c=&quot;2264&quot; d=&quot;M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(9749.9, 0)&quot;&gt;&lt;path data-c=&quot;3F5&quot; d=&quot;M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;/span&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，简单的要求&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;z \in \mathcal{L}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 2377.6 745&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;7A&quot; d=&quot;M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(742.8, 0)&quot;&gt;&lt;path data-c=&quot;2208&quot; d=&quot;M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot; transform=&quot;translate(1687.6, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4C&quot; d=&quot;M62 -22T47 -22T32 -11Q32 -1 56 24T83 55Q113 96 138 172T180 320T234 473T323 609Q364 649 419 677T531 705Q559 705 578 696T604 671T615 645T618 623V611Q618 582 615 571T598 548Q581 531 558 520T518 509Q503 509 503 520Q503 523 505 536T507 560Q507 590 494 610T452 630Q423 630 410 617Q367 578 333 492T271 301T233 170Q211 123 204 112L198 103L224 102Q281 102 369 79T509 52H523Q535 64 544 87T579 128Q616 152 641 152Q656 152 656 142Q656 101 588 40T433 -22Q381 -22 289 1T156 28L141 29L131 20Q111 0 87 -11Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;并不能保证&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;G(z) \in \mathcal{M}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -750 4452.6 1000&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;47&quot; d=&quot;M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(786, 0)&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1175, 0)&quot;&gt;&lt;path data-c=&quot;7A&quot; d=&quot;M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1640, 0)&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2306.8, 0)&quot;&gt;&lt;path data-c=&quot;2208&quot; d=&quot;M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot; transform=&quot;translate(3251.6, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M28 9Q28 37 43 63T73 90Q77 90 83 84T103 70T141 57H146Q162 57 178 79T222 167Q266 279 295 371T334 513T349 598T358 651T371 677Q397 705 432 705Q442 705 445 699T452 666Q453 661 453 659Q475 538 509 405T568 207L574 192Q581 178 587 164T594 150Q596 150 635 189T693 248Q765 324 863 438T1024 626T1089 701Q1093 705 1100 705Q1111 705 1111 682Q1111 675 1108 660T1099 611T1086 540Q1041 277 1041 144Q1041 98 1044 75T1050 48T1059 42Q1064 41 1075 46Q1102 61 1121 61Q1137 61 1137 50Q1137 28 1087 0T1000 -29Q983 -29 972 -23T955 -9T945 16T942 45T941 83V96Q941 158 952 256T974 422L985 489Q984 489 939 436T821 300T698 164Q665 128 620 85T568 37Q564 34 558 34Q550 34 546 37T535 54Q512 91 496 127T450 259T389 498L384 518Q349 367 294 223T198 15Q155 -50 117 -50Q87 -50 61 -35T30 -6Q28 2 28 9Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;，所以大多数的生成模型需要对&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\mathcal{L}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 690 727&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4C&quot; d=&quot;M62 -22T47 -22T32 -11Q32 -1 56 24T83 55Q113 96 138 172T180 320T234 473T323 609Q364 649 419 677T531 705Q559 705 578 696T604 671T615 645T618 623V611Q618 582 615 571T598 548Q581 531 558 520T518 509Q503 509 503 520Q503 523 505 536T507 560Q507 590 494 610T452 630Q423 630 410 617Q367 578 333 492T271 301T233 170Q211 123 204 112L198 103L224 102Q281 102 369 79T509 52H523Q535 64 544 87T579 128Q616 152 641 152Q656 152 656 142Q656 101 588 40T433 -22Q381 -22 289 1T156 28L141 29L131 20Q111 0 87 -11Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;施加先验，让在&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\mathcal{L}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -705 690 727&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4C&quot; d=&quot;M62 -22T47 -22T32 -11Q32 -1 56 24T83 55Q113 96 138 172T180 320T234 473T323 609Q364 649 419 677T531 705Q559 705 578 696T604 671T615 645T618 623V611Q618 582 615 571T598 548Q581 531 558 520T518 509Q503 509 503 520Q503 523 505 536T507 560Q507 590 494 610T452 630Q423 630 410 617Q367 578 333 492T271 301T233 170Q211 123 204 112L198 103L224 102Q281 102 369 79T509 52H523Q535 64 544 87T579 128Q616 152 641 152Q656 152 656 142Q656 101 588 40T433 -22Q381 -22 289 1T156 28L141 29L131 20Q111 0 87 -11Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;基于此先验信息的区域有更大的概率被取到。一个简单的方法就是基于此先验添加一个负对数似然损失项。假如使用的Gaussian先验，那么就可以采用L2正则项，但是L2正则会使latent code vector趋近于0，这显然不能满足要求。但是高维高斯分布有个性质是大部分质量都分布在半径为&lt;span&gt;&lt;span role=&quot;presentation&quot; data-formula=&quot;\sqrt{d}&quot; data-formula-type=&quot;inline-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -969.5 1373 1060&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msqrt&quot;&gt;&lt;g transform=&quot;translate(853, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;64&quot; d=&quot;M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(0, 109.5)&quot;&gt;&lt;path data-c=&quot;221A&quot; d=&quot;M95 178Q89 178 81 186T72 200T103 230T169 280T207 309Q209 311 212 311H213Q219 311 227 294T281 177Q300 134 312 108L397 -77Q398 -77 501 136T707 565T814 786Q820 800 834 800Q841 800 846 794T853 782V776L620 293L385 -193Q381 -200 366 -200Q357 -200 354 -197Q352 -195 256 15L160 225L144 214Q129 202 113 190T95 178Z&quot;/&gt;&lt;/g&gt;&lt;rect x=&quot;853&quot; y=&quot;849.5&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;的球面上，d是高斯先验的维度。于是就可以将高维高斯分布转化为球面均匀分布。于是问题就简化为在一个球面空间中执行梯度下降，而不是在整个latent space。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是本篇文章的核心内容，下面我们结合代码来看一下具体是怎么实现的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先我们需要一个生成模型来近似高分辨率的Manifold，在本文中，作者采用的是StyleGAN的预训练模型：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.129113924050633&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/BJbRvwibeSTvCYFCekNMwxE8bzG2sAWTElBzU7NiciaaL86A5DIIS3AKd0arqnvCibD3NHmxX8h8JHHejp8XMKV18Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;790&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;StyleGAN的生成器网络中有两个部分，一个是Mapping Network用于将latent code映射为style code，一个Synthesis Network用于将映射后得到的style code用于指导图像的生成。这里需要注意的是，本篇文章只是使用了StyleGAN的预训练模型，并不训练更新其参数。加载两个部分的参数之后，随机构造100000个随机latent code，经过Mapping Network，用得到新的latent code计算均值与方差:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;latent = torch.randn((&lt;span&gt;1000000&lt;/span&gt;,&lt;span&gt;512&lt;/span&gt;),dtype=torch.float32, device=&lt;span&gt;&quot;cuda&quot;&lt;/span&gt;)&lt;br/&gt;latent_out = torch.nn.LeakyReLU(&lt;span&gt;5&lt;/span&gt;)(mapping(latent))&lt;br/&gt;self.gaussian_fit = {&lt;span&gt;&quot;mean&quot;&lt;/span&gt;: latent_out.mean(&lt;span&gt;0&lt;/span&gt;), &lt;span&gt;&quot;std&quot;&lt;/span&gt;: latent_out.std(&lt;span&gt;0&lt;/span&gt;)}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个均值与方差就可以用来映射新的latent code。接下就是随机初始化latent code和noise(StyleGAN需要)：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 初始化latent code&lt;/span&gt;&lt;br/&gt;latent = torch.randn((batch_size, &lt;span&gt;18&lt;/span&gt;, &lt;span&gt;512&lt;/span&gt;), dtype=torch.float, requires_grad=&lt;span&gt;True&lt;/span&gt;, device=&lt;span&gt;&#x27;cuda&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;# 初始化noise&lt;/span&gt;&lt;br/&gt;&lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range(&lt;span&gt;18&lt;/span&gt;): &lt;span&gt;# [?, 1, 4, 4] -&amp;gt; [?, 1, 1024, 1024]&lt;/span&gt;&lt;br/&gt;    res = (batch_size, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;2&lt;/span&gt;**(i//&lt;span&gt;2&lt;/span&gt;+&lt;span&gt;2&lt;/span&gt;), &lt;span&gt;2&lt;/span&gt;**(i//&lt;span&gt;2&lt;/span&gt;+&lt;span&gt;2&lt;/span&gt;))&lt;br/&gt;    new_noise = torch.randn(res, dtype=torch.float, device=&lt;span&gt;&#x27;cuda&#x27;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (i &amp;lt; num_trainable_noise_layers):  &lt;span&gt;# num_trainable_noise_layers&lt;/span&gt;&lt;br/&gt;        new_noise.requires_grad = &lt;span&gt;True&lt;/span&gt;&lt;br/&gt;    noise_vars.append(new_noise)&lt;br/&gt;                   &lt;br/&gt;noise.append(new_noise)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;**从这里我们可以看出，模型优化的其实是latent code与noise的前5层，而不是模型参数。**初始化完成了之后就可以执行前向了：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 根据之前的求得的均值和方差，映射latent code&lt;/span&gt;&lt;br/&gt;latent_in = self.lrelu(latent_in*self.gaussian_fit[&lt;span&gt;&quot;std&quot;&lt;/span&gt;] + self.gaussian_fit[&lt;span&gt;&quot;mean&quot;&lt;/span&gt;])&lt;br/&gt;&lt;span&gt;# 加载Synthesis Network用于生产图像&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 把图像结果从[-1, 1]修改到[0, 1]&lt;/span&gt;&lt;br/&gt;gen_im = (self.synthesis(latent_in, noise)+&lt;span&gt;1&lt;/span&gt;)/&lt;span&gt;2&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据原始的低分辨率图像和生成的高分辨率图像计算loss。在代码中，loss由两个部分组成:&lt;/p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;loss = 100 \times L_2 + 0.05 \times GEOCROSS&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;embed src=&quot;https://mmbiz.qlogo.cn/mmbiz_svg/I1OPdTuWhEibyTNhY6zbPXyDdxWz8IPaNQicXmTzu4whd5jwnc5Bib4Avsepq6XKsPk2DicKvEAELCZqOTvcxpknuICy1Hmh1icrE/0?wx_fmt=svg&quot; data-type=&quot;svg+xml&quot;/&gt;&lt;/section&gt;&lt;/span&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中L2损失是将生成的高分辨率图像gen_im通过bicubic下采样恢复LR，并与输入的LR计算pixel-wise误差，GEOCROSS是测地线距离。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后优化器选择的是球面优化器：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# opt = SphericalOptimizer(torch.optim.Adam, [x], lr=0.01)&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;SphericalOptimizer&lt;/span&gt;&lt;span&gt;(Optimizer)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;__init__&lt;/span&gt;&lt;span&gt;(self, optimizer, params, **kwargs)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        self.opt = optimizer(params, **kwargs)&lt;br/&gt;        self.params = params&lt;br/&gt;        &lt;span&gt;with&lt;/span&gt; torch.no_grad():&lt;br/&gt;            self.radii = {param: (param.pow(&lt;span&gt;2&lt;/span&gt;).sum(tuple(range(&lt;span&gt;2&lt;/span&gt;,param.ndim)),keepdim=&lt;span&gt;True&lt;/span&gt;)+&lt;span&gt;1e-9&lt;/span&gt;).sqrt() &lt;span&gt;for&lt;/span&gt; param &lt;span&gt;in&lt;/span&gt; params}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;    @torch.no_grad()&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;step&lt;/span&gt;&lt;span&gt;(self, closure=None)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt;        loss = self.opt.step(closure)&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; param &lt;span&gt;in&lt;/span&gt; self.params:&lt;br/&gt;            param.data.div_((param.pow(&lt;span&gt;2&lt;/span&gt;).sum(tuple(range(&lt;span&gt;2&lt;/span&gt;,param.ndim)),keepdim=&lt;span&gt;True&lt;/span&gt;)+&lt;span&gt;1e-9&lt;/span&gt;).sqrt())&lt;br/&gt;            param.mul_(self.radii[param])&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; loss&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. Result&lt;span/&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.693858845096242&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/BJbRvwibeSTvCYFCekNMwxE8bzG2sAWTEHe2vufETk0j6X6xeQaF4GiaFH30gRQB2IFxZCh4aakJOPCCic39vJcJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1091&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;从结果可以看出，PULSE生成的图像细节更丰富，包括头发丝、眼睛和牙齿这些比较细微的地方都能生成的很好。&lt;/span&gt;&lt;span&gt;而且对于有噪声的LR，也能生成的很好，说明该算法有很强的鲁棒性：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.7544097693351425&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/BJbRvwibeSTvCYFCekNMwxE8bzG2sAWTEOicCZ4ACs42A6AZMCW4tPoLs934MF3s7tOT9BoNKugC4zFC9UCxiaFlg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;737&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终的比较指标采用的是MOS：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.25040650406504067&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/BJbRvwibeSTvCYFCekNMwxE8bzG2sAWTEmR4v4VcZW4AsrulCpC4VicJPerVEEa02NMEOiaTh7prgDzD6OENjz08g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;615&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. Questions&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;PULSE是一个无监督的图像超分辨率模型，其图像的质量其实很大程度上取决于所选取的生成模型的好坏。另一方面，由于PULSE的基础原理就是找到一个高分辨率的图像，使其下采样之后能恢复LR，那么意味着结果不唯一，可能生成的图像很清楚，但是已经失去了身份信息：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.9575856443719413&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/BJbRvwibeSTvCYFCekNMwxE8bzG2sAWTEicqjQxnhJib76icqtw7eoVKcUa1eTScc51RibahXvMMmDauiabybUabAtHA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;613&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. Resource&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Paper&lt;/p&gt;&lt;p&gt;PULSE：https://arxiv.org/pdf/2003.03808.pdf&lt;/p&gt;&lt;p&gt;StyleGAN: https://arxiv.org/abs/1812.04948&lt;/p&gt;&lt;p&gt;Random Vectors in High Dimen- sions: https://www.sci-hub.ren/10.1017/9781108231596.006&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Github: https://github.com/adamian98/pulse.git&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>