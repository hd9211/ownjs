<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>439d191b0f2b207cf79e985d5458f4ce</guid>
<title>什么是真正的程序员？| 码农周刊第 323 期</title>
<link>https://toutiao.io/k/v08ikpz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;什么是真正的程序员？| 码农周刊第 323 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第323期（2020-10-28）&lt;/h2&gt;
        &lt;p&gt;☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=323&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3230&quot; target=&quot;_blank&quot;&gt;薪资翻番如何实现？程序员的涨薪秘诀&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;a href=&quot;https://weekly.manong.io/bounce?nid=323&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3230&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_321.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=323&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;业界实战&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;工作地点：成都 | 薪资：15-30K | 简历投递邮箱：xiexiaofang@huobi.com&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;适合入门&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;该框架由阿里云机器学习 PAI 团队研发，让自然语言处理场景的模型预训练和迁移学习开发与部署更加简单和高效。&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;硬核&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;论文笔记&lt;/p&gt;
        
        &lt;p&gt;系列文章&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;因子分解机算法&lt;/p&gt;
        
        &lt;p&gt;深入讲解&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;Yahoo 开源的 Kafka 集群管理平台&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;更多可能&lt;/p&gt;
        
        &lt;p&gt;实战经验&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;源码分析&lt;/p&gt;
        
        &lt;p&gt;一个 Android Jetpack 扩展库&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;一步步教你&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;倾向于使用 Less 或 Stylus&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;这里有最接地气的架构师一线实战经验、核心技能的分享。运营和产品的总结。以及一些个人的深度思考。&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 268968 即可&lt;/p&gt;
        
        &lt;p&gt;GO PHP JS 一网打尽&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 146415 即可&lt;/p&gt;
        
        &lt;p&gt;分享技术，专注程序员成长&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 137785 即可&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;Coding虽易，debug不易....&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 98777 即可&lt;/p&gt;
        
        &lt;p&gt;专注分享Java实战技术、Java基础原理、微服务实战技术、分布式系统架构&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 22887 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;本书为对基本概率论感兴趣的读者以及之前未接触过此方向的人提供了一个坚实的基础。通过对话的方式和详细的数学推导，在迷人的风格和信息丰富的讨论上取得了平衡。欢迎到&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;兑换阅读。&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;真实&lt;/p&gt;
        
        &lt;p&gt;值得思考&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5ca5f35f6888ea57f7d041efbc59b4a9</guid>
<title>工具 | 字节跳动开源的，超高速、多特性的高性能序列推理引擎</title>
<link>https://toutiao.io/k/s6o3btm</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;开发者头条&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;kaifazhetoutiao&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;程序员分享平台 | 官方应用下载地址：http://toutiao.io/download&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f29f63e2d832530a061aa1458836f241</guid>
<title>网易云音乐基于 Flink + Kafka 的实时数仓建设实践</title>
<link>https://toutiao.io/k/rtixudv</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b581901f6eed47e94485ebe8abd30c73</guid>
<title>面试官：说说你知道的几种负载均衡分类</title>
<link>https://toutiao.io/k/ypwk0no</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/azicia1hOY6Qib8bdg1gFib46Ensr3Jtgm9uG3EDSFMjSIRAmuk7icL66kCiaLV8UiczRGyI2QAg1aBVsniccDJ2VXH3Ug/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;负载均衡其实就是任务的分发，使得任务能按照你的&lt;/span&gt;&lt;span&gt;预想&lt;/span&gt;&lt;span&gt;分配到各个计算单元上，它能提高服务对外的性能，避免单点失效场景。这里要注意的一点是虽说叫负载均衡，但是有时候我们的分配算法就是不是均衡的。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如配个nginx，做两台服务器的负载均衡，一台机子比较老是以前的配置比较低，一台是新机子配置高，那我们的分配权重可能就是3-7分,而不是&lt;/span&gt;&lt;code&gt;&lt;span&gt;五五开&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。所以是&lt;span&gt;预想分配&lt;/span&gt;。但是业界还是习惯按照负载均衡来表达这个任务分配机制。&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;负载分类&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;负载均衡常见的有:软件负载均衡、硬件负载均衡、DNS负载均衡。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;软件负载均衡&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;软件负载均衡是最常见的，大小公司都需要用到它。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;软件负载均衡是通过负载均衡功能的软件来实现负载均衡，常见的软件有&lt;span&gt;LVS、Nginx、HAProxy&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;软件负载负载均衡又分四层和七层负载均衡，四层负载均衡就是在网络层利用IP地址端口进行请求的转发，基本上就是起个转发分配作用。而七层负载均衡就是可以根据访问用户的HTTP请求头、URL信息将请求转发到特定的主机。 LVS为四层负载均衡。Nginx、HAProxy可四可七。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5925324675324676&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/azicia1hOY6Qib8bdg1gFib46Ensr3Jtgm9uwPKJtjYw9UAaggCss1B5yuIIkKzHHj1BNClv0okuswxosx2KsLluuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;616&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Nginx是万级别的，通常只用它来做七层负载，LVS来做四层负载。LVS是十万级别的，所以如果顶不住常见的也有这样的搭配。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5718120805369128&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/azicia1hOY6Qib8bdg1gFib46Ensr3Jtgm9ujcnR5rdnvIdh8KDKbSJp8NuiawEZzPg5gv9eLiaxhkgB3YRxk8zhErFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;745&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;软件负载均衡的&lt;/span&gt;&lt;span&gt;优点在于便宜而且简单灵活&lt;/span&gt;&lt;span&gt;，就买个主机，装下软件，配置一下就能用了，配置也很简单对于一般小型企业，或者并发量不高的企业来说就够用了。而且在高峰期时容易扩容。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;缺点在于(和硬件负载均衡比)性能一般，流量很大的企业就用软件负载均衡顶不住，没防火墙或者防DDos攻击等安全性功能&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;硬件负载均衡&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;硬件负载均衡就是用一个硬件一个基础网络设备，类似我们的交换机啊这样的硬件，来实现负载均衡。 常见的硬件有F5、A10。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;优点就是：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.功能强大，支持全局负载均衡提供全面的复杂均衡算法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.性能强悍，支持百万以上的并发。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.提供安全功能，例如防火墙，防DDos攻击等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这么一听我靠这么吊谁不用啊赶紧买个。别急我们下面个图片。 这网上找的，价格升序了最低也得15万，高的我看到有90万的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.7599118942731278&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/azicia1hOY6Qib8bdg1gFib46Ensr3Jtgm9u9nluHSzK8JXnibks9d4yZlrOIM1t87egJqEOicm3Un4o72pjWwxjRkUA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;908&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;缺点:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.贵！这算是它最大的缺点了。为了安全通常还得一主一备，啧啧。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.扩展能力差，当访问量突增的时候超过限度不能动态扩容。&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;DNS负载均衡&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;这个负载均衡时通过DNS来的，因为DNS解析同一个域名可以返回不同的ip。所以例如哈尔滨的人访问百度就返回距离他近的那个机房的IP，海南的人访问百度就返回距离他近的那个机房的IP。所以主要是用来实现地理级别的负载均衡。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;优点就是:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.简单，交给DNS服务器处理咱们都不用干活&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.因为是就近访问可以减少响应的时间，提升访问速度&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;缺点：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.DNS有缓存而且缓存时间较长，所以当机房迁移等需要修改DNS配置的时候，用户可能还会访问之前的IP，导致访问失败。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.扩展能力差，因为运营商管理控制的，由不得我们定制或者扩展。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.比较笨，不能区分服务器之间的差异，也不能反映服务器的当前运行状态&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;使用套路&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;DNS负载均衡是地理级别的，硬件负载均衡对应的是集群级别的，软件负载均衡对应的是机器级别的。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8680465717981889&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/azicia1hOY6Qib8bdg1gFib46Ensr3Jtgm9uodUu0dybibbhDiab94hKsUAibJ5XBHWsTwZloWDWrx5o9iaTrIMzI727jw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;773&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;不过一般而言像小公司或者流量不大的公司都是只需要软件负载均衡，也可能LVS都不需要上所以是按实际情况删减上图的一些东西。真正公司发展起来用户量激增才会考虑多机房和上硬件，毕竟是需求的驱使和不差钱了。&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如有错误欢迎指正！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;个人公众号：yes的练级攻略&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d0177912e08e24d8ac2ec777e06512f6</guid>
<title>Native 地图与 Web 融合技术的应用与实践</title>
<link>https://toutiao.io/k/wvu7g7j</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1. 背景&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;美团打车业务很早就在美团App与点评App中提供了服务入口，并在技术上采用了H5与Native的混合开发技术。随着业务上线，有用户反馈我们的地图性能有一些问题，原因是我们打车地图使用的是Web版的地图（&lt;/span&gt;&lt;span&gt;通过腾讯地图JavaScript API&lt;/span&gt;&lt;span&gt;)，业内同类产品使用的是Native版的地图SDK，Native地图相比Web地图具有天然的性能优势，所以美团打车地图从首屏地图加载到后续的地图操作体验都有一定差距。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.1 问题与挑战&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了改善打车业务的地图体验，我们想到的方案是在展示地图的部分使用Native地图，而非地图部分使用H5页面来显示，这样既能追平与竞品的地图性能差距，又能充分发挥H5的开发效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这种方案乍一看似乎是传统的Hybrid开发，没什么难度与新奇。比如地图使用预先内置到App中的地图SDK实现，H5与Native的交互使用业界成熟的JSBridge技术。但从打车业务角度来看，因为打车业务有很多功能入口需要漂浮在地图之上，如起终点卡片、用户中心入口等，这种漂浮功能在技术上并不容易实现，而且还要保证用户触摸动作在漂浮元素与地图上发生时，分别派发给各自的事件系统，Hybrid技术在这方面没有经验可以借鉴。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;带着这些挑战，我们进行一系列的尝试与试验，最终将问题解决并封装出我们打车业务的地图调用框架，我们称之为Native地图与Web融合框架（&lt;/span&gt;&lt;span&gt;下文简称融合框架&lt;/span&gt;&lt;span&gt;）。在这个过程中，我们总结出了一些经验，希望能给从事相关研究的同学带来一些帮助。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;1.2 融合框架上线前后的对比&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其实，融合框架已经在大众点评App中上线了几个月的时间了，我们可以先看看上线前后的效果对比。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;优化前，未使用融合框架时：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p/&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;优化后，使用了融合框架：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p/&gt;&lt;p&gt;&lt;span&gt;可以清晰地观察到，使用融合框架扫码后，地图瞬间展示出来，相比Web地图减少了漫长的白屏时间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2. 调研&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于混合技术开发体系，我们研究了市面上大部分H5页面与Native地图的应用场景，主要分为如下两类：&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5676625659050967&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZqibnEeFaeZ3XE8ickT9hSOgIPGcAOBolicMa3ujA5OUA5icvmUaG2gEVfQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1138&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1.4112554112554112&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZ45p7dE2Ecvpf0CPpneYM31qRUT3RQurUqia6P9OhJgMK3yFKare8ySA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;462&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;经过分析后，我们发现这两种形式都无法满足打车业务场景的需求，因为目前市面上主流的打车业务场景由4部分构成，如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;起终点选择面板&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：占据页面下半部分，可以上下滑动露出更多内容。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;地图部分&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：页面上半部分，显示起终点、线路等地图要素信息。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;更多菜单&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：左上角图标，点击后跳转到H5功能菜单页面。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;广告入口&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：右上角图标，点击后跳转到H5运营页面。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img data-cropselx1=&quot;0&quot; data-cropselx2=&quot;388&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;220&quot; data-ratio=&quot;1.4533333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZh05wRn2SScbuVBL2hxe4PHlTbicZdmXmh6oZ9upY1vTxAhSBk7NhOiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;375&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;上文第一类，H5页面与Native地图分别位于两个独立页面中，只能满足部分地图场景的需求，无法布局为上图H5与地图同框显示的效果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上文第二类，实现这样的布局需要多个WebView才能实现，存在如下缺点：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;调研结论是：市面上现存技术都无法满足打车场景的需求。&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;全新方案的提出&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;基于打车场景的特殊性，我们做了一个大胆的假设：把页面分为2层，下层是Native地图层，布满屏幕；上层是WebView层，完全覆盖到Native地图层之上，如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.888268156424581&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZAwAl9t7Kzez9d7GFZ2tJDJLYquDrtPooQpz8nn0YibNIFzYLFGkyI0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;537&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;我们期望的效果是：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;具体实现思路有如下几点，参照下图：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;Native地图位于下层，WebView置于Native地图之上，WebView背景透明，透过WebView可以看到下边的地图。红框区域是上层WebView打开的H5页面元素。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;增加一个手势消息分发层，该层会智能判断手势事件落在H5元素还是地图元素中。举例：点击红框区域，消息会传递到WebView层的H5逻辑处理，点击红框之外的区域，消息会传递到Native地图层处理（&lt;/span&gt;&lt;span&gt;地图移动、缩放等操作&lt;/span&gt;&lt;span&gt;）。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;H5与Native地图交互使用JSBridge完成。比如在地图中添加一个Marker，H5层业务逻辑发出添加Marker的消息，H5层通过JSBridge技术将消息发送到Native地图层，Native地图收到消息后在地图中添加Marker元素。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1.4641744548286604&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZRHibOTkRXmpKH13MG7ibORwEyzHXsohbRSZoO1jQ4HPxl0m3IicB89Mow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;321&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;为了验证想法是否正确，我们首先通过Android平台开发出Demo，验证这种分层智能传递消息的做法是可行的，该方案最大优点是兼顾了H5的开发效率与Native地图的高性能特性，非常符合美团业务地图场景的需求。为了让想法落地时更规范、更系统，我们进行了如下的框架设计。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3. 框架设计&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.1 热区数据介绍&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1.0649350649350648&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZyg2Od3OibO8OO4E5a5tNXoGvQxIwad5C3qpAxe1uZNMl9SkGkZMDZKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;462&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;先介绍一个“热区数据”的概念，下图（&lt;/span&gt;&lt;span&gt;3.2节&lt;/span&gt;&lt;span&gt;）在手势分发层存在着消息分发热区数据部分，下文简称热区数据。热区数据是针对上层WebView的一个概念，只对WebView层有效，对下层Native地图层无效。如果用户点击屏幕事件想让H5来捕获处理，可以在屏幕区域内设置一个逻辑上的矩形区域，如：[0, 0,  50, 50]（&lt;/span&gt;&lt;span&gt;上图左上角区域&lt;/span&gt;&lt;span&gt;），这个数据被称为热区数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们通过编写代码逻辑，控制手势消息分发的策略，如果手势消息发生在热区数据矩形范围内，我们把消息发送给WebView处理，否则发送给Native地图处理。如上图所示，可以在同一屏幕内设定多个热区，[0, 0,  50, 50]、[430, 0,  50, 50]、[0, 200,  480, 200]，热区的格式可以自己定义，我们这里采用的基于WebView组件左上角为原点的像素坐标格式：[left, top, width, height]。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;3.2 框架图介绍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5323741007194245&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZwW8zV41PJrALFia2hlaHE6uSAvWPMfAvLe7VJDtDdia947kWOoc8Pfxw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;695&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;手势消息分发给WebView层流程&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;主要为上图1--&amp;gt;2--&amp;gt;3--&amp;gt;4过程，如下：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;用户触摸动作首先被手势分发层捕获，手势分发层判断用户点击到热区数据范围内，将消息分发到WebView H5层处理。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;WebView H5层收到消息，对消息进行处理（&lt;/span&gt;&lt;span&gt;比如：在地图中添加一个终点Marker&lt;/span&gt;&lt;span&gt;），通过通讯桥将消息传递到Native地图层。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Native地图层收到消息，并执行添加Marker操作，完成后返回成功信息。上述总体流程为：手势分发层--&amp;gt;1--&amp;gt;2--&amp;gt;3--&amp;gt;6--&amp;gt;7。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;手势消息分发给Native地图层流程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;主要为上图5--&amp;gt;6--&amp;gt;7过程，如下：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;手势分发层捕获到消息，发现用户手势与当前热区数据矩形没有交集，于是将获取的消息分发到Native地图层。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;如果消息是拖动操作，则Native地图自动识别拖动地图消息，实现移动地图的效果，涉及流程为：手势分发层--&amp;gt;5。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果消息是点击操作，比如我们想实现点击地图中的Marker，将消息传递给H5处理的功能。实现步骤为我们事先在添加Marker时增加一个点击事件（&lt;/span&gt;&lt;span&gt;Native地图层实现&lt;/span&gt;&lt;span&gt;），Marker被点击时Native地图层会派发此事件，事件消息会通过JSBridge技术从Native地图层传到H5层，最后H5层获取到点击消息。整个操作流程为：手势分发层--&amp;gt;5--&amp;gt;6--&amp;gt;7。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;热区数据的动态更新策略&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;因为打车业务底部的面板高度是可伸缩的，所以底部的热区数据并不是静止不动的，需要考虑热区数据也要随着DOM元素的拉伸做同步调整。可以通过在WebView H5层监控DOM的变化，DOM元素发生变化时，获取变化后的DOM元素位置、大小，格式化为热区数据，并更新到消息分发热区数据部分。因为拉伸动作是一个连续的动画效果，为了高效，我们只在动画结束的那一刻更新热区数据，中间过渡期不做处理。此整体流程为：2--&amp;gt;3--&amp;gt;4。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4. 点评App中的落地实践&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.1 手势分发层关键代码&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这部分功能需要Native端同学实现，包括iOS与Android。两端分别在启动App时设置三层内容，最上层是手势触摸事件接收层，中间是WebView层（&lt;/span&gt;&lt;span&gt;背景设置透明&lt;/span&gt;&lt;span&gt;），最下层是Native地图层（&lt;/span&gt;&lt;span&gt;如腾讯地图SDK&lt;/span&gt;&lt;span&gt;）。用数组记录当前热区数据，当手势分发层有事件发生时，通过Touch事件获取手指位置信息，遍历热区数组判断手指位置是否与热区的矩形相交，如相交则将消息分发给WebView层，否则分发给Native层。下边是Android与iOS消息分发关键代码：&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;Android分发层关键代码&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;dispatchTouchEvent&lt;/span&gt;&lt;span&gt;(MotionEvent event)&lt;/span&gt;&lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt;(event.getAction() == MotionEvent.ACTION_DOWN) {&lt;br/&gt;    &lt;span&gt;// 分发层接收到手势触摸消息，通过dispatchService类判断手势是否落在热区内，从而确定消息分发的对象&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;this&lt;/span&gt;.touchHandler = dispatchService.inRegion(event) ? TouchHandler.WebView : TouchHandler.MapView;&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;// 分发给Native地图层&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt;(&lt;span&gt;this&lt;/span&gt;.touchHandler == TouchHandler.MapView) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;this&lt;/span&gt;.mapView.dispatchTouchEvent(event);&lt;br/&gt;  }&lt;br/&gt;  &lt;span&gt;// 分发给WebView H5层&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; &lt;span&gt;super&lt;/span&gt;.dispatchTouchEvent(event);&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;iOS分发层关键代码&lt;/span&gt;&lt;/section&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;- (UIView *)hitTest:(CGPoint)point withEvent:(UIEvent *)event {&lt;br/&gt;   UIView *hitTestView = nil;&lt;br/&gt;   // 分发层接收到手势触摸消息，通过pointInHotspot判断手势是否落在热区内，从而确定消息分发的对象&lt;br/&gt;   if ([self pointInHotspot:point]) {&lt;br/&gt;     // 分发给WebView H5层&lt;br/&gt;     hitTestView = [self.WebView hitTest:point withEvent:event];&lt;br/&gt;   }else{&lt;br/&gt;     // 分发给Native地图层&lt;br/&gt;     hitTestView = [self.mapView hitTest:point withEvent:event];&lt;br/&gt;   }&lt;br/&gt;   return hitTestView;&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.2 WebView H5层&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该层有2个功能：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;提供设置热区的JS接口setHotRegion，业务可通过此接口设置屏幕中的热区。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;封装一层JS形式的地图接口，为上层业务提供地图服务，该层借助JSBridge通讯桥实现H5与Native层的异步通讯。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;img data-ratio=&quot;0.4278481012658228&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZ85IqmJAx0TohIfKlogI8NqiapnYbl1icY3LoaerqucKjzSwxMmT01Z1Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;790&quot; title=&quot;&quot;/&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;4.3 通讯桥简介&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通讯桥即JSBridge技术，主要实现H5与Native的信息交互，这方面的技术都已比较成熟，业界有非常多的JSBridge实现，原理也都类似，常见的有：原生对象注入到H5层、URL拦截技术，Native调用JS常用的内置函数stringByEvaluatingJavaScriptFromString等。美团内部有比较成熟的KNB框架，所以项目中直接使用了KNB框架。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.4 Native地图层&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;该层在地图SDK（&lt;/span&gt;&lt;span&gt;如腾讯地图SDK&lt;/span&gt;&lt;span&gt;）基础上进行了封装，提供一些打车业务友好的接口，如地图基本操作、打车起终点Marker添加、接送驾司机小车动画、地图事件、各种Marker的信息弹窗等。&lt;/span&gt;&lt;/section&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.42947103274559195&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZw8j2RYXNqJwQK61Qmiclia3OTp5gD0pAPGWMhFGgIw3VRUzxj8XY9rIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;794&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.5 Dom元素热区数据的自动维护技术&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;打车业务前端的技术栈是: Vue + VueX + Vue-Router构建的单页系统。如下图所示，页面中存在很多H5元素需要添加热区，逐个元素编写代码添加的话会很繁琐，而且页面元素的位置、大小变化时还需要同步更新热区数据，这里我们使用了Vue中的directive（&lt;/span&gt;&lt;span&gt;指令&lt;/span&gt;&lt;span&gt;）来解决了此问题。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.49843260188087773&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZ4eicDXBOMmUPWe2dVDgQDCI53AynGGHTGicbqXTfIOcbaRnUkJw9QuKg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;638&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;span&gt;以上左右2图是用户操作时页面展示的不同状态，很明显右图底部卡片变高了，卡片变化同时需要同步更新对应的热区数据，directive技术可以很方便解决此问题，原理如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;4.6 调试工具及测试&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;调试工具使用模拟器、真机都可以，开发期间我们使用的模拟器开发，测试期间QA使用真机验证。调试过程中主要验证2部分功能，分别是热区的验证与地图接口验证。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;热区验证&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;主要验证主页面设置的热区是否正确，包括是否可以点击、底部卡片是否能正常拖拉、业务功能是否正常等。因为热区数据是一串数字，形如：[0, 0,  50, 50]，无法直观判断出该数据是否有误，于是我们开发了一个可视化工具，将设置热区的元素都用红色矩形高亮显示，如下图所示，这样就能快速诊断出热区数据是否有异常。工具是使用Canvas画布实现的，画布大小与屏幕大小完全重合，借助画布就可以将矩形热区数据在屏幕中实时绘制出来。&lt;/span&gt;&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;1.7786666666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZBNYww8sxrZibyw9kH6W50RlGcW79dq8Zmn0SeTHk9E2JNI9pZZzhYMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;地图接口验证&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;主要是编写单元测试完成的，本项目封装了50多个地图接口，每个接口都编写单测用例，观察入参、出参、控制台输出结果，地图展示效果是否正确等。测试主要在iOS模拟器中完成，这样方便在控制台打印一些调试信息进行诊断。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;5. 上线效果&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;该框架在大众点评App中上线后地图体验明显提升，主要有体现在以下几个方面：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;地图的操作体验，如地图移动、缩放明显好于H5地图，用户利用Native地图选择起终点、下单叫车、接送驾小车动画效果更加流畅。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;首屏地图数据指标也有显著提升，如下表所示：&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;img data-ratio=&quot;0.21176470588235294&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/hEx03cFgUsWUKibWp8tibGXNna9GFYVjJZiaHpwqXma4NyUKpicjKnicTa1IdkWhYwic8faqrKT5nEH2waESn1faQm6g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1530&quot; title=&quot;&quot;/&gt;&lt;p&gt;&lt;span&gt;Native地图层代码接口稳定、功能丰富，基本满足地图场景的业务需求。只需首次跟版发布，后续只需要迭代H5的业务逻辑即可。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;6. 本文小结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文将WebView与Native地图组件叠加到一起，实现了用户手势事件智能分发的机制，解决了WebView与Native地图在同一页面内布局困难的问题。这种融合机制为打车业务提升迭代效率同时保障地图体验提供了一种有效的途径，日常业务功能上线采用H5技术迭代，Native地图作为不常更新的基础能力首次发版时安装到用户手机上，实现业务需求随时发版的能力，不再受各大应用商店的限制，用户操作地图的体验也更加流畅。该融合框架适合以下业务场景：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务中使用了地图功能，并对地图的加载、操作体验等有较高要求的业务。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;业务属于Hybrid业务，并且H5页面与地图在同一页面内布局的功能。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;如果你的业务是基于多个WebView与Native地图构建的系统，非常建议你了解下此文章。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;7. 作者简介&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;美团打车技术部终端研发中心，加鹏、张斌、杨睿、邱博、海峰等。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>