<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>9e55ec730b0617e39853cabcb9cca875</guid>
<title>超全面的前端新一代构建工具对比</title>
<link>https://toutiao.io/k/el5mggz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;blockquote data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;70&quot; data-source-title=&quot;&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;section mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;section mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;来源：https://css-tricks.com/comparing-the-new-generation-of-build-tools/&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;在过去的一年里，出现了一批新的开发者工具，它们正在紧跟过去几年主导前端开发的工具，包括 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;webpack、Babel、Rollup、Parcel、create-react-app&lt;/code&gt;。&lt;br mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;这些新的工具并不是为了完成完全相同的功能而设计的，每个工具都有不同的目标和功能。尽管存在差异，但这些工具有一个共同的目标：&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;改善开发者体验&lt;/code&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;概览&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Feature comparison&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Wrapping up&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;具体来说，我想对每一个进行评估，概述它们的作用，为什么我们需要它们，以及它们的使用案例。比较并不总是公平的，我们在这篇文章中看到的东西也不是直接的竞争对手。事实上，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 在某些任务中都使用了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt;。我们的目标更多的是为了更好地了解运行任务的开发者工具的格局，让我们的工作更轻松。通过这种方式，我们就能看到有哪些选择，以及它们是如何配合的，这样我们就能在需要的时候做出最好的选择。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;当然，我分析的所有的这些都会受到我使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 的经验的影响。我对这些框架库比较熟悉，但我也会关注它们对其他前端框架的支持。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;为啥这些工具现在都出现了？&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;在某种程度上，我认为这些工具的到来是对 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 工具疲劳的一种反应。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4577161968466316&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7dmrFpwqOojDMJSCVjJKcnwaQojG5zmRED1LcuhVqvCibVibMayjBFzlg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2093&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack、Vite&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 都用到了浏览器中的原生 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块。早在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;2018&lt;/code&gt; 年，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Firefox 60&lt;/code&gt; 发布时默认启用了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;ECMAScript 2015&lt;/code&gt; 的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Module&lt;/code&gt; 。此后，各大浏览器引擎都支持原生 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Node.js&lt;/code&gt; 也在2019年11月推出了原生 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块。在2021年的今天，我们还在寻找原生 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块能够带来哪些新的可能性。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;这些工具和现有的工具有什么不同？&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;无论我们在开发服务器上使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;webpack、Rollup&lt;/code&gt; 还是 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Parcel&lt;/code&gt;，工具都会从我们的源代码和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;node_modules&lt;/code&gt; 文件夹中把我们的整个代码库打包在一起，通过构建过程运行这些代码，比如 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Babel、TypeScript&lt;/code&gt; 或 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;PostCSS&lt;/code&gt;，然后将打包的代码推送到我们的浏览器上。这一切都需要花费大量的工作，并且会使开发服务器在更大的代码库中慢慢爬行，甚至在所有的工作都用于缓存和优化之后也是如此。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack、Vite&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 开发服务器则不采用这种模式。相反，它们会等到浏览器找到一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;import&lt;/code&gt; 语句，并为模块发出 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;HTTP&lt;/code&gt; 请求。只有在这个请求发出后，该工具才会对请求的模块和模块导入树中的任何叶节点应用转换，然后将这些转换提供给浏览器。这大大加快了速度，因为在推送到开发服务器的过程中减少了工作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;你会注意到描述中缺少了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 。它首先是一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundler&lt;/code&gt; 程序。它并不像其他工具那样绕开 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundler&lt;/code&gt;。相反，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 通过避免昂贵的转换、利用并行化和使用Go语言来快速处理代码。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.19950433705080545&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd78O3SjVZOJvFxrVtKAnLdyL7fuIU6y8m1iayFpf0Xm3PQic3Ym4Muu7fg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1614&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;实验&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;我从 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 文档中选取了一个示例应用，并使用文中所提到的每个工具重新构建了它。我选择的项目是 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Yogita Verma&lt;/code&gt; 的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snap Shot&lt;/code&gt;。这里有一个原始 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;repo&lt;/code&gt; 的链接，还有一个我的&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;repo&lt;/code&gt;链接，里面有四个版本的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snap Shot&lt;/code&gt;，每个版本都使用不同的构建工具。我们稍后会比较每个构建步骤的输出。重新构建这个应用程序，让我可以测试开发人员将一些相当标准的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 依赖项添加到工具(包括 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React Router&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;axios&lt;/code&gt;)中的体验。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;原始 repo：https://github.com/Yog9/SnapShot&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Demo：https://github.com/Elliotclyde/build-tool-test&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;可以比较的功能&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;在我们深入了解每个工具的具体内容之前，它们都支持以下功能（在不同程度上）。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;对原生 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块的一流支持&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;TypeScript&lt;/code&gt; 编译(但不进行类型检查)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JSX&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;用于扩展性的插件 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;API&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;内置开发服务器&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;CSS bundling&lt;/code&gt; 和对 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;CSS-in-JS&lt;/code&gt; 的支持。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;所有这些工具都可以将 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;TypeScript&lt;/code&gt; 编译成 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt;，但即使有类型错误也会这样做。为了进行正确的类型检查，你需要安装T &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;ypeScript&lt;/code&gt;，并在你的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 根文件上运行 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;tsc --noEmit&lt;/code&gt; ，或者使用编辑器插件来观察类型错误。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;好了，下面我们来具体看看每个工具。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;esbuild&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7rRKxmPfltH32ut9huhS89yMRqpRZVcbIPlVhK7j8kskVKxiaoYNwqyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1600&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 是由 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Evan Wallace&lt;/code&gt;（Figma的CTO）创建的。它的主要特点是，它提供的构建步骤比基于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Node&lt;/code&gt; 的打包器快 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;10×-100×&lt;/code&gt;（根据他们自己的基准）。它没有提供许多你可能会在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;create-react-app&lt;/code&gt; 这样的工具中找到的开发者便利。但是有越来越多的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild starter&lt;/code&gt; 启动器出现来填补这些空白，包括 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;create-react-app-esbuild，estrella&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt;，它们的构建步骤使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 是非常新的。它还没有达到 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;1.0&lt;/code&gt; 版本，还没有完全准备好用于生产使用 — 但它已经不远了。它为你提供了直观的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 和带有智能默认值的命令行 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;API&lt;/code&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;用例&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 完全改变了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundler&lt;/code&gt; 的游戏规则。它将在大型代码库中发挥最大的作用，因为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;node&lt;/code&gt; 打包器之间的速度差异会成倍增加。当 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 达到 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;1.0&lt;/code&gt; 的时候，它在大型生产站点中会非常有用，将为团队节省大量等待构建完成的时间。不幸的是，大型生产站点必须要等到 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 变得稳定。在此期间，它只是很好地增加了一些速度，让你在项目中的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundling&lt;/code&gt; 变得更快。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 快如闪电的速度对于你正在做的任何工作来说都是一种奖励。减少等待构建运行的时间，对开发者的体验总是有好处的! 考虑到这一点，如果你是在做快速应用的原型，你可能会想要从比 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 更高级的东西开始--否则，在获得我们期望的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 中的便利之前，你需要花一些时间引入依赖项并配置你的环境生态系统。另外，如果你想尽可能地减小 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundle&lt;/code&gt; 包的大小，你可能会想使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rollup&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;terser&lt;/code&gt; ，它们会产生略小的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundle&lt;/code&gt; 大小。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;设置&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;我决定以一种幼稚的方式在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 中启动一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 项目：npm安装 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild、React&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;ReactDOM&lt;/code&gt;。我创建了一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;src/code秘密花园.jsx&lt;/code&gt; 文件和一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;dist/index.html&lt;/code&gt; 文件。然后，我使用下面的命令将app编译成一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;dist/bundle.js&lt;/code&gt; 文件。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;./node_modules/.bin/esbuild src/code秘密花园.jsx --bundle --platform=browser --outfile=dist/bundle.js&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;当我在浏览器中打开 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;index.html&lt;/code&gt; 时，我遇到了 &quot;白屏 &quot;和 &quot;Uncaught ReferenceError: process is not defined &quot; 的控制台错误。文档和CLI都准确地解释了你需要做什么来避免这种情况，但对于初学者来说，这可能有点 &quot;捉襟见肘&quot;，因为在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundling React&lt;/code&gt; 时，它需要一个额外的参数。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;--define:process.env.NODE_ENV=&quot;production&quot;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;或者，如果你在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;npm&lt;/code&gt; 脚本中包含了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; ，就像这样写来转义引号。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;--define:process.env.NODE_ENV=\&quot;production\&quot;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;任何绑定到浏览器的需要 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;node&lt;/code&gt; 环境变量的库都需要这个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;define&lt;/code&gt; 参数。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vue 2.0&lt;/code&gt; 也需要这些参数。你在使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 时不会有同样的问题，因为它不需要任何环境变量，而且默认情况下已经为浏览器准备好了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;在运行了带有定义参数的命令后，我的 &quot;Hello world ConardLi &quot; React 应用完美地运行了。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JSX&lt;/code&gt; 可以使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;.jsx&lt;/code&gt; 文件开箱即用。也就是说，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 需要手动导入，然后将JSX转换为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React.createElement&lt;/code&gt;。然而，有一些方法可以在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JSX&lt;/code&gt; 中添加自动导入，或为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 配置JSX。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;用法&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 为开发服务器提供了一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;-serve&lt;/code&gt; 的选项。它绕过了文件系统，直接从内存中为模块提供服务，确保浏览器不会提取旧版本的模块。然而，它不包括实时/热重载，所以你会发现自己在保存后要刷新浏览器，这不是一个良好的体验。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;我决定使用新发布的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;watch&lt;/code&gt; 功能.这告诉 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 在每次保存源文件时重新编译代码。但是我们仍然需要一个服务器来查看我们保存的变化。我们可以拉入一个开发服务器包，比如 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Luke Jackson&lt;/code&gt; 的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;servor&lt;/code&gt;。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;npm install servor --save-dev&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;然后我们就可以使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Javascript API&lt;/code&gt; 作为服务器启动，同时运行 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;watch&lt;/code&gt;模式。让我们在项目的根目录创建一个名为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;watch.js&lt;/code&gt; 的文件。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;// watch.js&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; esbuild = &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;require&lt;/span&gt;(&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;esbuild&quot;&lt;/span&gt;);&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; servor = &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;require&lt;/span&gt;(&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;servor&quot;&lt;/span&gt;);&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;esbuild.build({&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;// pass any options to esbuild here...&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;entryPoints&lt;/span&gt;: [&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;src/app.jsx&quot;&lt;/span&gt;],&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;outdir&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;dist&quot;&lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;define&lt;/span&gt;: { &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;process.env.NODE_ENV&quot;&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; &quot;production&quot; &lt;/span&gt; },&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;watch&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;true&lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;});&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;async&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;serve&lt;/span&gt;(&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;/&gt;)&lt;/span&gt;{&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;console&lt;/span&gt;.log(&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;running server from: http://localhost:8080/&quot;&lt;/span&gt;);&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;await&lt;/span&gt; servor({&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;    &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;// pass any options to servor here...&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;    &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;browser&lt;/span&gt;:&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;true&lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;    &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;root&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;dist&quot;&lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;    &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;port&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;8080&lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  });&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;}&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;serve();&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;现在在命令行中运行 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;node watch.js&lt;/code&gt; 。这为我们提供了一个很好的开发服务器，但是同样，它也不能给我们提供热更新或者快速刷新（也就是说，你的客户端状态不会被保存）。但这已经足够满足我的测试需求了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;即使我们每次保存文件时都要对整个应用程序进行重新编译，但在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 变慢之前，我们需要有一个相当庞大的应用程序。在我设置了这个工具之后，我从更改中得到了即时的反馈。我的电脑使用的是2012年的英特尔i7，所以它肯定不是一台顶级的机器。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;如果你需要一个带有实时重载和一些 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 默认值的预配置 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 版本，你可以克隆这个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;repo&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;https://github.com/Elliotclyde/esbuild-react-starter&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;支持的文件&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;如果这是你的风格，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 可以在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 中导入 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;CSS&lt;/code&gt; 。它将会把CSS编译成一个输出文件，名字和你的主输出 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 文件一样。它还可以默认打包 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;CSS @import&lt;/code&gt; 语句。目前还没有对CSS模块的支持，但有计划。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;用于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 的插件社区正在不断壮大。例如，Vue&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;/&gt;单文件组件和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Svelte&lt;/code&gt; 组件都有可用的插件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 可以使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JSON&lt;/code&gt; 文件，并且可以将它们 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundle&lt;/code&gt; 到 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块中，无需任何配置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;它还可以用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 导入图片，可以选择将图片转换为数据URL或复制到输出文件夹中。这种行为在默认情况下并没有启用，但你可以在你的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 配置对象中添加以下内容来启用这两个选项。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;loader: { &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; .png &lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; dataurl &lt;/span&gt; } &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;// Converts to data url in JS bundle&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;loader&lt;/span&gt;: { &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; .png &lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; file &lt;/span&gt; } &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;// Copies to output folder&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;代码拆分似乎是一项正在进行中的工作，但大多数情况下是以ESM输出格式进行的，而且看起来确实是项目的优先级。另外值得一提的是，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;tree-shaking&lt;/code&gt; 是 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 默认内置的，无法关闭。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;生产构建&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;在 esbuild 命令中使用 &quot;minify &quot;和 &quot;bundle &quot; 选项不会创建一个像 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rollup/Terser&lt;/code&gt; 流水线一样小的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundle&lt;/code&gt; 。这是因为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 牺牲了一些&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundle&lt;/code&gt;大小的优化来尽可能少的通过你的代码。然而，根据你的项目，这种差异可能是微不足道的，但对于&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundle&lt;/code&gt;速度的提高来说是值得的。在我的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snap Shot&lt;/code&gt; 应用程序的克隆中，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 创建了一个177KB的包，这比使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;rollup&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;terser&lt;/code&gt; 的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 产生的165KB多不了多少。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;总结&lt;/span&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.4565217391304348&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7NAQkv13IqcupVesQTmCpgdPvUyfdnuYR1VqnicvTf279pCF03gliaIGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;828&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild是一个非常强大的工具。但如果你习惯于零配置的设置，那可能会很困难。如果你需要更多，那么你可能想看看下一个工具，基于esbuild的Snowpack。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;Snowpack&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5546875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd71Qa322xuMXib8lcQ2Qs39YianOvyKIiaRibsdWEYFfTkzW1XuP7ClMs3GQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 是由 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Skypack&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Pika&lt;/code&gt; 的创造者开发的一款构建工具。它提供了一个很棒的开发服务器，并且是以 &quot;非打包式开发 &quot;的理念创建的。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14.399999618530273&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;p mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;引用文档中的一句话 &quot;你应该能够使用一个打包程序，因为你想要，而不是因为你需要。&quot;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;默认情况下， &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 的构建步骤并没有将文件打包到一个单一的包中，而是提供了在浏览器中运行的非打包&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esmodules&lt;/code&gt;。实际上 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 是作为一个依赖关系包含在其中的，但我们的想法是使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块，只有在需要时才与 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 打包。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 有一些非常精巧的文档，包括一个与J &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;avaScript&lt;/code&gt; 框架一起使用的指南列表，以及一堆模板。有些指南还在不断完善中，但其他的指南，比如针对 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 的指南，就很不错，很清晰。看起来 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 也把 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Svelte&lt;/code&gt; 当做一等公民来对待。实际上，我第一次听说 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 是在2020年Svelte峰会上 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rich Harris&lt;/code&gt;的 &quot;未来主义Web开发 &quot;演讲中。也就是说，即将推出的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Svelte&lt;/code&gt; 元框架 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;SvelteKit&lt;/code&gt; 本来应该由 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 提供支持，但后来改用了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt;（我们接下来会对其进行评测）。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;使用案例&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;如果你想在非打包部署上加倍努力，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 是个不错的选择。你可能会用少量的模块来编写源代码，这就意味着你不会用非捆绑构建来创建一个大的请求瀑布。如果你不需要额外的复杂性和技术债务，那么 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 是一个很好的选择。一个很好的用例是，如果你正在增量地将前端框架采用到服务器渲染或静态的应用程序中。你可以从node生态系统中获得尽可能少的工具，但你仍然会得到声明式前端框架的好处。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;其次，我认为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 是 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 的一个很好的封装器。如果你想尝试 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt;，但同时又想拥有一个开发服务器和预先编写的前端框架模板，那么选择 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 是不会错的。在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 配置的构建步骤中启用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt;，你就可以了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;就目前的情况来看，我认为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 不会是像 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;create-react-app&lt;/code&gt; 这样的零配置工具的最佳替代品，因为如果你有一个大的应用，需要一个超级花哨的优化生产就绪的构建步骤，你就需要自己导入插件并配置它们。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;设置&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;让我们通过命令行来启动Snowpack的项目。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;mkdir snowpackproject&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;cd&lt;/span&gt; snowpackproject&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;npm init &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;#fill with defaults &lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;npm install snowpack&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;现在，让我们在package.json中添加以下内容。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;// package.json&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;scripts&quot;&lt;/span&gt;: {&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;start&quot;&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;snowpack dev&quot;&lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;build&quot;&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;snowpack build&quot;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;},&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;接下来，我们将创建一个配置文件。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;// Mac or Linux&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;touch snowpack.config.js&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;// Windows&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;new&lt;/span&gt;-item snowpack.config.js&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;我认为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 最神奇的地方在于在配置文件中设置一个看似无害的键值对。例如，把这个粘贴到配置文件中。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;// snowpack.config.js&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;module.exports = {&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  packageOptions: {&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;    &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;source&quot;&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;remote&quot;&lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  }&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;};&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;source: remote&lt;/code&gt; 启用了一种叫做流式导入的东西。通过流式导入使 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 能够绕过npm安装，将裸导入（例如，从&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;import React from‘ React’&lt;/code&gt;）转换为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Skypack&lt;/code&gt; 的CDN导入。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;继续前进，让我们创建一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;index.html&lt;/code&gt; 文件。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;!--index.html--&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;!DOCTYPE &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;html&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;lang&lt;/span&gt;=&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;meta&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;charset&lt;/span&gt;=&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Snowpack streaming imports&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;div&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;id&lt;/span&gt;=&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;root&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;!-- Note the type=&quot;module&quot;. This is important for JavaScript module imports. --&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;script&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;type&lt;/span&gt;=&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;module&quot;&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;src&lt;/span&gt;=&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;app.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;最后，我们将添加一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;code秘密花园.jsx&lt;/code&gt; 文件。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;// code秘密花园.jsx &lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;import&lt;/span&gt; React &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;from&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; react &lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;import&lt;/span&gt; ReactDOM &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;from&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; react-dom &lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;const&lt;/span&gt; App = &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;()&lt;/span&gt;=&amp;gt;&lt;/span&gt;{&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Welcome to Snowpack streaming imports!&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;}&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;ReactDOM.render(&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;App&lt;/span&gt; /&amp;gt;&lt;/span&gt;,&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; root &lt;/span&gt;)); &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;0&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;注意，我们在任何阶段都没有安装 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 或 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;ReactDOM&lt;/code&gt; 的npm。但如果我们像这样启动 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 开发者服务器。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;./node_modules/.bin/snowpack dev&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;我们的应用程序还能用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 不是从 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;nodemodules&lt;/code&gt; 文件夹中提取，而是从 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Skypack&lt;/code&gt; 中提取npm包，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Skypack&lt;/code&gt;  是一个托管 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;npm&lt;/code&gt; 注册表的CDN，它是预先优化的，可以在浏览器中工作。然后，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 将它放在一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;./snowpack/pkg&lt;/code&gt; URL中。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;用法&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;这离基于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Node/npm&lt;/code&gt; 的工作流还有很大的差距。我们实际上看到的是一个新的基于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;CDN/JavaScript&lt;/code&gt; 模块的工作流。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;然而，如果我们的应用按原样运行生产构建，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 会抛出一个错误。这是因为它需要知道在构建时要使用哪个版本的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;ReactDOM&lt;/code&gt; 。你可以通过一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;snowpack.deps.json&lt;/code&gt; 来解决这个问题，它可以通过运行下面的程序自动创建。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;./node_modules/.bin/snowpack add react&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;./node_modules/.bin/snowpack add react-dom&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;这不会从 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;npm&lt;/code&gt; 下载包，但它会记录用于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 构建所使用包的版本。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;一个需要注意的是，我们会错过开发者的错误信息，因为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Skypack&lt;/code&gt; 会发布生产版本的包。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;即使我们没有使用流式导入，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 开发服务器也会将 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;node_modules&lt;/code&gt; 中的每个依赖关系打包成一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 文件，将这些文件转换为本地 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块，然后将其提供给浏览器。这意味着浏览器可以缓存这些脚本，只有在它们发生变化时才会重新请求它们。开发服务器会在保存时自动刷新，但不会保留客户端的状态。所有来自 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;node&lt;/code&gt; 的依赖关系似乎都能正常工作，不管它们是使用传统的模块格式还是 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;node API&lt;/code&gt;（比如我们在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 中遇到的臭名昭著的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;process.env&lt;/code&gt;）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 中保存客户端状态需要 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;react-refresh&lt;/code&gt;，它需要一些自己的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Babel&lt;/code&gt; 包作为依赖。这些包不是默认包含的，但可以使用更最大化的React模板。该模板拉入了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;react-refresh、Prettier、Chai&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React Testing Library&lt;/code&gt;，总体的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Node&lt;/code&gt; 依赖包重达 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;80MB&lt;/code&gt;。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;npx create-snowpack-app my-react-project --template @snowpack/app-template-react&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;支持的文件&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;支持JSX，但同样，默认情况下只支持 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;.jsx&lt;/code&gt; 文件。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 会自动检测是使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 还是 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; ，并据此决定使用哪种渲染函数来进行JSX转换。但是，如果我们想进一步定制JSX，就需要通过他们的插件引入 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Babel&lt;/code&gt;。还有一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 插件可以用于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vue&lt;/code&gt; 单文件组件，当然也可以用于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Svelte&lt;/code&gt; 组件。此外，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 还可以编译 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;TypeScript&lt;/code&gt; ，但对于类型检查，我们需要 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;TypeScript&lt;/code&gt; 插件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;CSS可以导入到 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 中，并在运行时被扔到文档 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;中。只要CSS模块的扩展名为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;.module.css&lt;/code&gt; ，也支持开箱即用的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;scoping&lt;/code&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;导入的JSON文件将被强制转换为一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt;模块中，并以对象作为默认导出。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 支持图片，并将其复制到生产文件夹中。为了配合它的非打包理念，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt;不将图像作为数据URL纳入捆绑中。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;生产构建&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;默认的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;snowpack&lt;/code&gt; 构建命令基本上是将源文件结构复制到一个输出文件夹中。对于编译成 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 的文件(例如&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;TypeScript, JSX, JSON, .vue, .svelte&lt;/code&gt;)，它将每个单独的文件转换成一个独立的浏览器友好的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;这很好用，但对于生产来说并不是很好，因为如果源码被分割成很多文件，可能会引起大量的请求。在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snap Shot&lt;/code&gt;应用中，我最终得到了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;184KB&lt;/code&gt; 的源文件，然后又从 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Skypack&lt;/code&gt; 中请求了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;105KB&lt;/code&gt; 的依赖关系，这就造成了一个非常大的请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;然而，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 将 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 作为一个依赖项，我们可以通过在Snowpack配置中添加一个 &quot;optimization &quot;对象，使 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 能够打包、最小化和编译我们的代码。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;// snowpack.config.js&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;module&lt;/span&gt;.exports = {&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;optimize&lt;/span&gt;: {&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;    &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;bundle&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;true&lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;    &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;minify&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;true&lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;    &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;target&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; es2018 &lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  },&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;这样就可以使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 提供的优化功能来运行代码，所以只要加入这些选项，我们就可以得到和之前使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 一样的构建。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;总结&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 通过功能齐全的开发服务器、详细的文档和易于安装的模板提供轻量级的开发人员体验。你可以决定是否要打包你的应用程序以及如何打包。如果你想要一个既能提供开发服务器又能提供更有意见的构建步骤的工具，你可能会想看看我们列表中的下一个工具 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt;。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8392857142857143&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7wPqYnDQMpp4FUmPL9yNv0tNO0cwcNylpRWoYMCp5TokpWttSN5EfuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1456&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzk0MDMwMzQyOA==&amp;amp;mid=2247491123&amp;amp;idx=1&amp;amp;sn=7bc726d75a1fddb7451b56bdfad512b9&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;查看更多文章分类，戳这里👇&lt;/a&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;Vite&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.49083333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7VSjwX1rGKtRrgaXiby8EiciaGvJgVTBiapg64xr7ZaT1FLBxXIPNzKgR9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1200&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 是由 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vue&lt;/code&gt; 的创始人尤雨溪开发的。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 专注于构建步骤，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 专注于开发服务器，而 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 则同时提供了这两点：一个完整的开发服务器和一个使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rollup&lt;/code&gt; 的优化构建命令。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;用例&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;如果你想要一个严肃的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;create-react-app&lt;/code&gt; 或 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vue CLI&lt;/code&gt; 的竞争对手，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 是最接近的一个，因为它带有 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;batteries-included&lt;/code&gt; 的功能。快如闪电的开发服务器和零配置优化的生产构建意味着你可以在没有任何配置的情况下从零到生产。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 可用于小型项目或大型生产应用程序，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 的一个很好的用例是任何可观的单页应用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;你为什么不使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt;？&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 是一个有成见的工具，你可能不同意它的意见。你可能不想使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rollup&lt;/code&gt; 来构建（我们一直在讨论 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 有多快），或者你可能希望你的工具能够给你提供 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Babel、eslint&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;webpack&lt;/code&gt; 加载器生态系统的全部功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;另外，你想要零配置的服务器端渲染框架，你最好还是继续使用基于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;webpack&lt;/code&gt; 的框架，比如 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Nuxt.js&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Next.js&lt;/code&gt; ，直到 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 服务器端渲染更加完善。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;设置&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 比 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 有更多的默认值。它的文档清晰而详细。我们得到了对 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vue&lt;/code&gt; 的全面支持，尤雨溪是创建者，所以 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 是 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vue&lt;/code&gt; 开发者来说无疑是一条必经之路。也就是说，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 可以和任何前端框架一起使用，甚至还提供了一个模板列表来帮助你入门。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;用法&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 的开发服务器非常强大。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 通过 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 将一个项目的所有依赖关系预先打包到一个单一的本地 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块中，然后用一个大量缓存的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;HTTP&lt;/code&gt; 头来提供服务。这意味着在第一次页面加载后，不会在编译、服务或请求导入的依赖项上浪费时间。Vite还提供了清晰的错误信息，打印出准确的代码块和行号，以排除故障。同样使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; ，我在引入使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;node API&lt;/code&gt; 或传统格式的依赖项时没有任何问题。它们似乎都被塞进了一个浏览器可接受的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esmodule&lt;/code&gt; 中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vue&lt;/code&gt; 模板都引入了支持热模块替换的插件。Vue模板为一个用于单文件组件引入了Vue插件，以及一个用于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JSX&lt;/code&gt; 的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vue&lt;/code&gt; 插件。React模板引入了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;react-refresh&lt;/code&gt; 插件。无论哪种方式，都会给你提供热模块替换和客户端状态保存。当然，它们增加了一些依赖性，包括Babel包，但是，在Vite中使用JSX时，Babel其实并不是必须的。默认情况下，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JSX&lt;/code&gt; 的工作方式和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esbuild&lt;/code&gt; 一样--它转换为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React.createElement&lt;/code&gt;。它不会自动导入 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt;，但它的行为可以被配置。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;同时，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 并不像 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 那样支持流式导入。这意味着要像往常一样安装npm的依赖关系。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;一个很酷的事情是，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 包含了对服务器端渲染的实验性支持。挑选你所选择的框架，并生成直接运到客户端的静态HTML。目前，看起来我们需要自己构建这个架构，但这看起来还是一个很好的机会，元框架可以建立在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 之上。尤雨溪已经有一个名为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;VitePress&lt;/code&gt; 的作品正在进行中，它是 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;VuePress&lt;/code&gt; 的替代品，具有使用Vite的优点。而 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Sveltekit&lt;/code&gt; 也已经将Vite加入了依赖列表。看来CSS代码拆分收录也是 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Sveltekit&lt;/code&gt; 改用Vite的原因之一。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;支持的文件&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;对于 CSS，Vite 提供的功能是我们所看到的所有工具中最多的。它支持打包CSS导入以及CSS模块。但我们也可以npm安装PostCSS插件，并创建一个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;postcss.config.js&lt;/code&gt; 文件，Vite会自动开始将这些转换应用到CSS中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;我们可以安装和使用CSS预处理器--只需npm安装预处理器，并将文件重命名为正确的扩展名（如 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;.filename.scss&lt;/code&gt; ），Vite就会开始应用相应的预处理器。而且正如我们在概述中所说，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 支持CSS代码分割。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;图片导入默认为一个公共URL，但我们也可以通过使用URL字符串末尾的?raw参数将其作为字符串加载到捆绑中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JSON&lt;/code&gt; 文件可以在源代码中导入，并转换为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;esmodule&lt;/code&gt; 导出单个对象。我们也可以提供一个命名的导入， &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 将在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JSON&lt;/code&gt; 文件的根字段中查找导入，并查找其余的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;treeshake&lt;/code&gt;。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;生产构建&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rollup&lt;/code&gt; 进行预配置的生产构建，并进行了大量的优化。它有意提供了一个零配置的构建，这对大多数用例来说应该是足够的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;该构建包含了我们所期望的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rollup&lt;/code&gt; 特性：打包、最小化和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;tree shaking&lt;/code&gt; 。但我们也得到了一些额外的功能，比如代码分割动态导入和所谓的 &quot;异步分块加载&quot;，这是一种花哨的说法，即如果我们请求导入另一个模块的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块，构建将被预先优化，以同时加载这两个模块（异步）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snap Shot&lt;/code&gt; 应用运行Vite的默认构建，最终得到了一个5KB的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 文件和一个160KB的JavaScript文件（总共165KB），项目中的所有CSS都被自动最小化为一个2.71KB的小文件。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;总结&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vite&lt;/code&gt; 的性质使其成为我们当前工具的严重竞争对手。许多工作已经完成，使开发人员的体验真正无缝，并使生产就绪的构建开箱即用。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.3783783783783783&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd70Jq6o8OWUEsCvJP4N97Edmibo6cbHaohsIT9O1AptpJewK0aNG2rIbA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;888&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;wmr&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/meG6Vo0MevhwYWD3GyeQ0wVuJJDR9SpGCFhSBkQ4pMMCT9N5maGBY1pYgiaD2S9NsqM96LRqk89h758Im0eRq5A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;150&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;和 Vite 一样，wmr 也是另一个成见的构建工具，它同时提供了开发服务器和构建步骤。它是由 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 的创建者 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Jason Miller&lt;/code&gt; 打造的，所以对于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 开发者来说，这绝对是一条幸福的道路。Jason Miller 在做客 JS Party 播客时解释了wmr背后的思路。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14.399999618530273&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;p mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 很小，如果你想做一个轻量级的项目，它真的很好。我们的工具在哪里呢？我们有一个基于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;webpack&lt;/code&gt; 的工具，在生产中被一堆高大上的网站所使用，但那是重量级的工具。原型开发工具在哪里？那是一方面。另一只手是我和一群碰巧在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 团队里的人；我们已经在打包器生态系统的边缘徘徊了一段时间，鞭策人们，试图在一个方向上达成共识，我们可以朝着这个方向前进，以进一步推进这个编写现代代码和发布现代代码的想法。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;这告诉我们，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 就是要编写和发布现代化的代码，在项目中实现更轻的工具。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;你可能想知道 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 代表什么？什么也不知道！wmr是什么意思？&quot;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Web Modules Runtime&lt;/code&gt; &quot;和 &quot;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Wet Module Replacement&lt;/code&gt; &quot;这两个名字被浮出水面，但这是一个假的缩写，类似于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;npm&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 一样采用了无情的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;bundle size purging&lt;/code&gt;，所以它的体积很小--重量只有 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;2.6 MB&lt;/code&gt;--而且完全不包含任何 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;npm&lt;/code&gt; 依赖。不过，它还是设法打包了一大堆非常棒的功能，包括一个热模块替换开发服务器和一个优化的生产构建。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;用例&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;如果我想用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 尽快创建一个原型，我会用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 。没有任何配置，下载只需要几秒钟。感觉就像在使用一个超强的静态文件服务器。通过TypeScript、优化的构建步骤和静态HTML渲染，wmr提供了发布中小型应用程序所需的一切。它的小尺寸也非常适合快速试用一个库或演示一个想法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;如果你不使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact、React&lt;/code&gt; 或 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;vanilla JavaScript&lt;/code&gt;，wmr可能不是你的工具。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 团队还没有为其他框架提供模板。文档也没有我们看过的其他工具那么详细。这意味着你离开快乐的道路越远，你就会越深入地挖掘源头。所以，如果需要大量的定制，我不能推荐它。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;设置&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;如果你使用的是Preact，除了快速安装npm之外，完全不需要任何设置。使用 React with wmr 而不是 Preact，目前有两个步骤。首先，在你的package.json中把htm/preact别名为htm/react，把react别名为es-react。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;alias&quot;&lt;/span&gt;: {&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;htm/preact&quot;&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;htm/react&quot;&lt;/span&gt;,&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;react&quot;&lt;/span&gt;: &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;es-react&quot;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;},&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;然后将引入es-react到你的组件中。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;// ReactDOM only needed on root render（from code秘密花园）&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;import { React, ReactDOM,} from &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; es-react &lt;/span&gt;;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;这意味着我们实际上并没有使用你可能习惯的普通React包，而是从 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;es-react&lt;/code&gt; 中引入 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt;。这是因为wmr依赖于与本地 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 模块兼容的包。React默认不使用本地模块，而是使用一种称为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;UMD&lt;/code&gt; 较老的模块样式。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;es-react&lt;/code&gt; 是一个包，它可以拉入 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; ，但提供与web平台兼容的导出。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;这说明了 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 的理念，即使用web平台的原生基元，而不是使用工具来绕开和抽象掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;另一种选择可以是在我们的应用中使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Skypack&lt;/code&gt; 导入，这也是为了在浏览器中工作而预先优化的。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;import&lt;/span&gt; React &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;from&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; https://cdn.skypack.dev/react &lt;/span&gt;;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;import&lt;/span&gt; ReactDOM &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;from&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; https://cdn.skypack.dev/react-dom &lt;/span&gt;;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 希望你写的是在浏览器中运行的现代代码，这可能意味着如果你引入使用node API或传统模块系统的依赖项，你需要做一些配置。为了让 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snap Shot&lt;/code&gt; 应用正常运行，我需要深入研究node模块，并将一两个库转换为使用本地JavaScript模块语法。如果你使用的是旧库，这可能会拖慢你的速度。Preact生态系统都经过优化，可以在浏览器中运行，应该不需要任何修改。这是在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 中坚持 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 快乐之路的另一个原因。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 有插件，它公开了一个插件API，支持 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rollup&lt;/code&gt; 插件的构建步骤。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;docs&lt;/code&gt; 上有越来越多的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 专用例子，包括一个对HTML进行最小化的插件，还有一个基于文件系统的路由功能。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 支持不同的框架，但没有任何预先构建的模板。而且一开始我发现配置 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JSX&lt;/code&gt; 变换相当困难。说到这里，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Jason&lt;/code&gt; 已经确认有计划让JJSX变得更可配置，而且 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 的目的是框架无关。JSX计划在普通 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 文件中开箱即用。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;使用方法&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;要开始，你可以在命令行中运行这个命令。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;npm init wmr your-project-name&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;或者，你也可以运行这些命令来手动构建你的应用程序。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;npm init -y&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;npm install wmr&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;mkdir public&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;touch public/index.html&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;touch public/index.js&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;然后在index.html的正文中添加一个脚本导入（再次确保使用type=&quot;module&quot;）。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&amp;lt;script type=&quot;module&quot; src=&quot;./index.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;现在你可以在你的index.js文件中写一个Preact hello world。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;import { render } from &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; preact &lt;/span&gt;;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;render(&amp;lt;h1&amp;gt;Hello World ConardLi!&amp;lt;/h1&amp;gt;, document.body);&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;最后启动你的开发服务器。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;node_modules/.bin/wmr&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;现在我们有了一个完整的热模块替换开发服务器，它会立即响应我们源代码的任何变化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 在转换 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JSX&lt;/code&gt; 时使用了一个叫 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;htm&lt;/code&gt; 的工具，它提供了一些很棒的好处。比方说，我们在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 中使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 写一个计数器，却犯了一个错误。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;import { render } from &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; preact &lt;/span&gt;;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;import { useState } from &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt; preact/hooks &lt;/span&gt;;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;App&lt;/span&gt;&lt;/span&gt;() {&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  const [count,setCount] = useState(0)&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; &amp;lt;&amp;gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &amp;lt;button onClick={()=&amp;gt;{setCount(cout+5)}}&amp;gt;Click to add 5 to count&amp;lt;/button&amp;gt; // HIGHLIGHT&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &amp;lt;p&amp;gt;count: {count}&amp;lt;/p&amp;gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &amp;lt;/&amp;gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;}&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;render(&amp;lt;App /&amp;gt;, document.body);&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;count&lt;/code&gt; 在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;onClick&lt;/code&gt; 处理函数中拼写错误，所以运行这个函数会出现错误。通常情况下，我们必须依靠我们的工具和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;source map&lt;/code&gt; 来收集关于错误所在的信息，但wmr采取了不同的解决方案。对于htm，通过使用标记的模板文本，这可以尽可能地接近浏览器中的原生JSX。所以，在哪里写React或Preact代码通常是这样的。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;MyComponent&lt;/span&gt;&amp;gt;&lt;/span&gt;I am JSX. I am not actually valid Javascript&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;MyComponent&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;...htm看起来更像这样。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;html`&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;${MyComponent}&lt;/span&gt;&amp;gt;&lt;/span&gt;I am about as close as it gets to JSX as you can get while being able to run in the browser&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;MyComponent&lt;/span&gt;&amp;gt;&lt;/span&gt;`&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;现在，如果我们正在调试我们的代码，打开 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;DevTools&lt;/code&gt; 中的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;Sources &quot;&lt;/code&gt; 面板，我们应该会看到一个脚本，它与源代码在编辑器中的样子几乎相同。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3465648854961832&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7JcPkHEECnjzsVXv7p7UXWLJElq4EyzH7vRbJdKNayy9ob5dMYKukuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;655&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;通过这种方式，我们就可以正确地调查错误在浏览器中的位置，而不必使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;source map&lt;/code&gt;。当然，这个具体的例子是很造作的，但你可以看到这可能是非常有用的，因为这意味着wmr在你的开发环境中不需要 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;source map&lt;/code&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 默认支持流式导入，所以裸露的导入将从npm注册表中拉下来。这是通过一个复杂的过程来完成的，这个过程会检查 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;npm&lt;/code&gt; 包中的所有源码，删除所有的测试和元数据，并将其转换为一个单一的本地 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 导入。与 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snowpack&lt;/code&gt; 类似，可以在不使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;npm&lt;/code&gt; 安装任何东西的情况下构建一个复杂的应用程序。事实上，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 是第一个支持这种想法的工具。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;支持的文件&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;至于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 支持的其他类型的文件，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;CSS&lt;/code&gt; 文件可以用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 导入，CSS模块也支持。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vue单文件组件和Svelte组件都没有内置支持。不过，&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 的构建步骤可以和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rollup&lt;/code&gt; 插件一起使用，开发服务器也可以配置Polka/Express中间件，所以可以用这些来将导入的文件转换成 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Vue&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Svelte&lt;/code&gt; 组件。事实上，我为Vue单文件组件写了一个小插件来展示如何做到这一点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;在没有插件的情况下，我们不能在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 中把图片作为数据URL导入到 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 中。相反，我们需要使用一个语法正确的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 方法来导入它们。所以，如果我们在公共文件夹中有一张狗的图片，我们可能会把它包含在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 组件中，比如这样。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;/&gt;&lt;code mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;function&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;Dog&lt;/span&gt;(&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;/&gt;) &lt;/span&gt;{&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;  &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;return&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;img&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;src&lt;/span&gt;=&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;{new&lt;/span&gt; &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;URL&lt;/span&gt;( &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;.&lt;/span&gt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;dog.jpg&lt;/span&gt; , &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;import.meta.url&lt;/span&gt;)} &lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;alt&lt;/span&gt;=&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&quot;dog hanging out&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;&amp;lt;/&lt;span mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;26&quot;&gt;img&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;}&lt;br mp-original-font-size=&quot;12&quot; mp-original-line-height=&quot;15&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;而一旦构建步骤运行，图片就会被复制，并从分发文件夹中访问。开发服务器中的图片有热模块替换，所以有图片的变化会立即反映在浏览器中。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;再来说说文件支持。JSON可以导入，并转换成 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 对象使用。但实际构建应用时，我们就需要 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rollup JSON&lt;/code&gt; 插件了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;生产构建&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 提供了一个生产构建步骤，包括打包、小型化和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;tree-shaking&lt;/code&gt;，而不需要任何额外的依赖。看了一下 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 的源码，似乎在引擎盖下使用了rollup和terser，wmr包中包含了这些的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;minified&lt;/code&gt; 版本。&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Snap Shot&lt;/code&gt; 应用的wmr捆绑包是164KB，所以它创建的捆绑包只比Vite创建的两个 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 文件的总大小小一点点。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;还有一种方法可以将wmr配置为这样一种方式，它使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;preact-iso&lt;/code&gt; 在浏览器上将一个应用程序渲染为静态 HTML 并加工。这意味着wmr可以作为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 的元框架使用，类似于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Next.js&lt;/code&gt; 。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;总结&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;我喜欢使用 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;wmr&lt;/code&gt; 来为 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;React&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Preact&lt;/code&gt; 应用做原型的体验。使用一个小得离谱但却能提供开发者便利的工具，接近于匹配重量级打包器，感觉很棒。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.5905511811023623&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7icsfejTfoWsoNSjMKib6YhNNjL6mtqegPiaCibwP4YBfiatlJkNsdQ5cPNQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;762&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;特征比较&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;我们刚刚分析了很多地方! 与其在这篇文章中上下滚动比较结果，我已经将所有内容汇编在这里，以查看这些工具并排时的堆叠情况。我甚至为我们没有明确提到的特性添加了额外的比较。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;用例&lt;/span&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3694390715667311&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7r0ibPK8EwWwf5LTic7ZEpCbxLOQT0MS1Z73xQGPvdMS23qtjrbLaPPnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2068&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;设置&lt;/span&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6715927750410509&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7Du45FypLRQIzpaQ1LIMs63lhoNxTkppoyox1RfDfa1o0mbTiaJ01QsQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1218&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;开发服务器&lt;/span&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8178137651821862&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7rDiaQFhkibrwdZ0RT4PsYW5ppItbjb1zZvSnAEQx0MGADJfPhpsKFo4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;988&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;生产构建&lt;/span&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4214079074252652&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd79FaBr9EPCxyse9KXGicoE8H4PbWEYaQtc9ZyJGlMibUF5VVa19DbjibAg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2074&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;span mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;其他特性&lt;/span&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5384615384615384&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e5Dzv8p9XdS2t2YwdNvS2Fce1zDAkrd7WjHWIq7fUmJAY0txPo9zqwEk4UFnKbEGMetqBia1KzjTKqSIK3fxHzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1274&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;最后&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;我很高兴能够用我们刚刚看到的所有工具来构建 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 应用程序。无论我们是在编写一个小型的辅助项目还是一个大型的网站，所有这些工具都能加快反馈循环，提高生产力。它们已经打开了大门，问我们在 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt;生态系统中需要什么，以及我们是否可以开始失去传统模块和浏览器带来的麻烦。这些工具将通过提供一个更精简、更快速的开发者环境，在编写的代码和运行在浏览器中的代码之抽象更少，从而降低了新开发人员的进入门槛。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;如果你已经厌倦了等待下载依赖和运行构建步骤，我建议你尝试一下这种新一代的工具。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot; mp-original-font-size=&quot;22&quot; mp-original-line-height=&quot;27&quot;&gt;&lt;span mp-original-font-size=&quot;18&quot; mp-original-line-height=&quot;22&quot;&gt;其他的 JavaScript 新工具&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot; mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;18&quot;&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rome&lt;/code&gt; – 一个完整的工具链，包括 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;linting&lt;/code&gt;、编译、捆绑、测试运行和格式化&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;SWC&lt;/code&gt; – 基于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Rust&lt;/code&gt; 的 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript/TypeScript&lt;/code&gt; 编译器&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;&lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Deno&lt;/code&gt; – &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;JavaScript&lt;/code&gt; 和 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;TypeScript&lt;/code&gt; 的运行时（类似于 &lt;code mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;&gt;Node.js&lt;/code&gt;）&lt;br mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;26&quot;/&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section data-role=&quot;list&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;p mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;24&quot;&gt;&lt;span mp-original-font-size=&quot;14&quot; mp-original-line-height=&quot;24&quot;&gt;&lt;span mp-original-font-size=&quot;15&quot; mp-original-line-height=&quot;24&quot;&gt;- END -&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;list&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;us-3913677&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;section mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;section data-width=&quot;100%&quot; mp-original-font-size=&quot;16&quot; mp-original-line-height=&quot;20&quot;&gt;&lt;img class=&quot;__bg_gif rich_pages wxw-img&quot; data-ratio=&quot;0.006666666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xsw6Lt5pDCu1rRLicXibOB6jq4wpe7W4Ioibu7XTJR1ABzARKoLxyWEWeIV6HJRII2GK1ntnCkVIqjY852gntBd5Q/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;600&quot; data-width=&quot;100%&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e9387066a6acfdaf5c6b60f68a792fb5</guid>
<title>用 go 实现类似 rz / sz 的功能，兼容 tmux，支持在 windows 的 cmd、powershell，以及 ubuntu、mac 的原生终端使用。</title>
<link>https://toutiao.io/k/bcg05rc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;article class=&quot;markdown-body entry-content container-lg&quot; itemprop=&quot;text&quot;&gt;&lt;h1 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-trzsz-go&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#trzsz-go&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;trzsz-go&lt;/h1&gt;
&lt;p dir=&quot;auto&quot;&gt;&lt;a href=&quot;https://github.com/trzsz/trzsz&quot;&gt;trzsz&lt;/a&gt; ( trz / tsz ) is a simple file transfer tools, similar to lrzsz ( rz / sz ), and compatible with tmux.&lt;/p&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-installation&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#installation&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-on-ubuntu&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#on-ubuntu&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;on Ubuntu&lt;/h3&gt;
&lt;p dir=&quot;auto&quot;&gt;&lt;em&gt;Not released yet, please download the latest &lt;a href=&quot;https://github.com/trzsz/trzsz-go/releases&quot;&gt;release&lt;/a&gt; from GitHub.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell notranslate position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;sudo add-apt-repository ppa:trzsz/ppa&amp;#10;sudo apt update&amp;#10;sudo apt install trzsz&quot;&gt;&lt;pre&gt;sudo add-apt-repository ppa:trzsz/ppa
sudo apt update
sudo apt install trzsz&lt;/pre&gt;&lt;/div&gt;
&lt;h3 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-on-windows--macos--other&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#on-windows--macos--other&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;on Windows / macOS / Other&lt;/h3&gt;
&lt;p dir=&quot;auto&quot;&gt;Please download the latest &lt;a href=&quot;https://github.com/trzsz/trzsz-go/releases&quot;&gt;release&lt;/a&gt; from GitHub.&lt;/p&gt;
&lt;h3 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-install-from-source-code&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#install-from-source-code&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;install from Source Code&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell notranslate position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;git clone https://github.com/trzsz/trzsz-go.git&amp;#10;cd trzsz-go&amp;#10;make&amp;#10;sudo make install&quot;&gt;&lt;pre&gt;git clone https://github.com/trzsz/trzsz-go.git
&lt;span class=&quot;pl-c1&quot;&gt;cd&lt;/span&gt; trzsz-go
make
sudo make install&lt;/pre&gt;&lt;/div&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-usage&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#usage&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-on-local&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#on-local&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;on Local&lt;/h3&gt;
&lt;p dir=&quot;auto&quot;&gt;Add &lt;code&gt;trzsz&lt;/code&gt; before the shell, e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell notranslate position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;trzsz tmux&amp;#10;trzsz /bin/bash&amp;#10;trzsz ssh x.x.x.x&amp;#10;trzsz.exe cmd&amp;#10;trzsz.exe ssh x.x.x.x&quot;&gt;&lt;pre&gt;trzsz tmux
trzsz /bin/bash
trzsz ssh x.x.x.x
trzsz.exe cmd
trzsz.exe ssh x.x.x.x&lt;/pre&gt;&lt;/div&gt;
&lt;h3 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-on-server&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#on-server&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;on Server&lt;/h3&gt;
&lt;p dir=&quot;auto&quot;&gt;&lt;em&gt;The &lt;code&gt;Go&lt;/code&gt; version is under development. Please use the &lt;code&gt;Python&lt;/code&gt; version instead. GitHub: &lt;a href=&quot;https://github.com/trzsz/trzsz&quot;&gt;https://github.com/trzsz/trzsz&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;Similar to lrzsz ( rz / sz ), command &lt;code&gt;trz&lt;/code&gt; to upload files, command &lt;code&gt;tsz /path/to/file&lt;/code&gt; to download files.&lt;/p&gt;
&lt;p dir=&quot;auto&quot;&gt;For more information, see the website of trzsz: &lt;a href=&quot;https://trzsz.github.io/&quot; rel=&quot;nofollow&quot;&gt;https://trzsz.github.io&lt;/a&gt;.&lt;/p&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-suggestion&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#suggestion&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Suggestion&lt;/h2&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;
&lt;p dir=&quot;auto&quot;&gt;It is recommended to set alias &lt;code&gt;alias ssh=&quot;trzsz ssh&quot;&lt;/code&gt; for convenience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;auto&quot;&gt;If using &lt;code&gt;tmux&lt;/code&gt; on the local computer, run &lt;code&gt;tmux&lt;/code&gt; ( without &lt;code&gt;trzsz&lt;/code&gt; ) first, then &lt;code&gt;trzsz ssh&lt;/code&gt; to login.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-configuration&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#configuration&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p dir=&quot;auto&quot;&gt;&lt;code&gt;trzsz&lt;/code&gt; looks for configuration at &lt;code&gt;~/.trzsz.conf&lt;/code&gt;. e.g.:&lt;/p&gt;
&lt;div class=&quot;snippet-clipboard-content notranslate position-relative overflow-auto&quot; data-snippet-clipboard-copy-content=&quot;DefaultUploadPath =&amp;#10;DefaultDownloadPath = /Users/username/Downloads/&quot;&gt;&lt;pre class=&quot;notranslate&quot;&gt;&lt;code&gt;DefaultUploadPath =
DefaultDownloadPath = /Users/username/Downloads/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;
&lt;p dir=&quot;auto&quot;&gt;If the &lt;code&gt;DefaultUploadPath&lt;/code&gt; is not empty, the path will be opened by default while choosing upload files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;auto&quot;&gt;If the &lt;code&gt;DefaultDownloadPath&lt;/code&gt; is not empty, downloading files will be saved to the path automatically instead of asking each time.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-trouble-shooting&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#trouble-shooting&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Trouble shooting&lt;/h2&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;
&lt;p dir=&quot;auto&quot;&gt;If using &lt;a href=&quot;https://www.msys2.org/&quot; rel=&quot;nofollow&quot;&gt;MSYS2&lt;/a&gt; or &lt;a href=&quot;https://www.atlassian.com/git/tutorials/git-bash&quot; rel=&quot;nofollow&quot;&gt;Git Bash&lt;/a&gt; on windows, and getting an error &lt;code&gt;The handle is invalid&lt;/code&gt;.&lt;/p&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;Install &lt;a href=&quot;https://github.com/rprichard/winpty&quot;&gt;winpty&lt;/a&gt; by &lt;code&gt;pacman -S winpty&lt;/code&gt; in &lt;code&gt;MSYS2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Git Bash&lt;/code&gt; should have winpty installed, no need to install it manually.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;winpty&lt;/code&gt; before &lt;code&gt;trzsz&lt;/code&gt;, e.g.: &lt;code&gt;winpty trzsz ssh x.x.x.x&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;auto&quot;&gt;&lt;code&gt;/usr/bin/ssh&lt;/code&gt; in &lt;a href=&quot;https://www.msys2.org/&quot; rel=&quot;nofollow&quot;&gt;MSYS2&lt;/a&gt; or &lt;a href=&quot;https://www.cygwin.com/&quot; rel=&quot;nofollow&quot;&gt;Cygwin&lt;/a&gt; is not supported yet.&lt;/p&gt;
&lt;ul dir=&quot;auto&quot;&gt;
&lt;li&gt;Use the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse&quot; rel=&quot;nofollow&quot;&gt;OpenSSH&lt;/a&gt; instead, e.g.: &lt;code&gt;winpty trzsz /c/Windows/System32/OpenSSH/ssh.exe x.x.x.x&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-screenshot&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#screenshot&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Screenshot&lt;/h2&gt;
&lt;h4 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-windows&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#windows&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h4&gt;
&lt;p dir=&quot;auto&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/23c9848fc34b544943f23e47f8c8a1a4c8892216e10436be9a15e242deceaa01/68747470733a2f2f74727a737a2e6769746875622e696f2f696d616765732f636d645f74727a737a2e676966&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/23c9848fc34b544943f23e47f8c8a1a4c8892216e10436be9a15e242deceaa01/68747470733a2f2f74727a737a2e6769746875622e696f2f696d616765732f636d645f74727a737a2e676966&quot; alt=&quot;windows trzsz ssh&quot; data-animated-image=&quot;&quot; data-canonical-src=&quot;https://trzsz.github.io/images/cmd_trzsz.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-ubuntu&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#ubuntu&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu&lt;/h4&gt;
&lt;p dir=&quot;auto&quot;&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/6b96ee950ae18847b87268fb13b2948735f7b3585fd15edbe0f8efe2216c187a/68747470733a2f2f74727a737a2e6769746875622e696f2f696d616765732f7562756e74755f74727a737a2e676966&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/6b96ee950ae18847b87268fb13b2948735f7b3585fd15edbe0f8efe2216c187a/68747470733a2f2f74727a737a2e6769746875622e696f2f696d616765732f7562756e74755f74727a737a2e676966&quot; alt=&quot;ubuntu trzsz ssh&quot; data-animated-image=&quot;&quot; data-canonical-src=&quot;https://trzsz.github.io/images/ubuntu_trzsz.gif&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 dir=&quot;auto&quot;&gt;&lt;a id=&quot;user-content-contact&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#contact&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p dir=&quot;auto&quot;&gt;Feel free to email me &lt;a href=&quot;mailto:lonnywong@qq.com&quot;&gt;lonnywong@qq.com&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7dc44c730d56673ece5d4109b1a5ae75</guid>
<title>2022年，你的网站还不支持HTTP2吗？</title>
<link>https://toutiao.io/k/o7hgy6i</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大人，都 2022 年了，你的网站还不支持 HTTP2 吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;什么？你甚至还没有开启 SSL/TLS 模式？!&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;SSL/HTTP2&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;SSL(Secure Sockets Layer, 安全套接字层)，是用于建立计算机之间授权与加密连接的一种协议。事实上，SSL 协议已经在 1999 年 TLS(Transport Layer Security，传输层安全) 1.0 版本发布时已经被废弃了，但通常仍以 SSL 或者 SSL/TLS 指代这类技术。本文中，SSL 特指对于 HTTPS 的支持。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;SSL/TLS 协议本身是很复杂的，我们这里不去细究其原理，感兴趣的可以去找一下相关资料学习。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;HTTPS(SSL/TLS) 支持，需要为域名配置安全证书，通常这类证书对于个人而言都是比较昂贵的，好在开源社区早有实现方案。任何拥有域名的人，都可以使用 Let&#x27;s Encrypt 免费获取受信的证书。本文选用的是基于 letsencrypt 的另一个开源实现 acme.sh!&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;HTTP2 是区别于 HTTP1.1 的网络请求协议，它通过多路复用等机制，大幅度提高 HTTP 协议的性能，关于其协议详情，可以查看 RFC 7540 文档&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;实操配置&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过 yum 或者 rpm 安装 nginx，假定其配置目录在 /etc/nginx&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;查看 nginx 配置根本目录&lt;/strong&gt;:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 tree 命令查看 /etc/nginx 的文件结构&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;.&lt;br/&gt;├── conf.d&lt;br/&gt;│   └── default.conf&lt;br/&gt;├── default.d&lt;br/&gt;├── fastcgi.conf&lt;br/&gt;├── fastcgi.conf.default&lt;br/&gt;├── fastcgi_params&lt;br/&gt;├── fastcgi_params.default&lt;br/&gt;├── koi-utf&lt;br/&gt;├── koi-win&lt;br/&gt;├── mime.types&lt;br/&gt;├── mime.types.default&lt;br/&gt;├── nginx.conf&lt;br/&gt;├── nginx.conf.default&lt;br/&gt;├── nginx.conf.rpmnew&lt;br/&gt;├── scgi_params&lt;br/&gt;├── scgi_params.default&lt;br/&gt;├── uwsgi_params&lt;br/&gt;├── uwsgi_params.default&lt;br/&gt;└── win-utf&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;创建 ssl 目录&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 nginx 配置根目录下，创建 ssl 目录&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;$ mkdir /etc/nginx/ssl&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;创建 SSL/TSL 通用配置&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在上一步的 ssl 目录中，创建 SSL/TLS 通用配置 ssl.conf
内容如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# Optimize ssl session&lt;/span&gt;&lt;br/&gt;ssl_session_timeout 1d;&lt;br/&gt;ssl_session_cache shared:SSL:50m;&lt;br/&gt;ssl_session_tickets off;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits&lt;/span&gt;&lt;br/&gt;ssl_dhparam ssl/dhparam.pem;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# intermediate configuration. tweak to your needs.&lt;/span&gt;&lt;br/&gt;ssl_protocols TLSv1.1 TLSv1.2;&lt;br/&gt;ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;&lt;br/&gt;ssl_prefer_server_ciphers on;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# OCSP Stapling ---&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# fetch OCSP records from URL in ssl_certificate and cache them&lt;/span&gt;&lt;br/&gt;ssl_stapling on;&lt;br/&gt;ssl_stapling_verify on;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;## verify chain of trust of OCSP response using Root CA and Intermediate certs&lt;/span&gt;&lt;br/&gt;ssl_trusted_certificate ssl/trusted_primary.pem;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# add_header Strict-Transport-Security max-age=15768000;&lt;/span&gt;&lt;br/&gt;add_header Strict-Transport-Security &lt;span&gt;&quot;max-age=31536000; includeSubDomains; preload&quot;&lt;/span&gt; always;&lt;br/&gt;&lt;span&gt;# HPKP&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# add_header Public-Key-Pins &#x27;pin-sha256=&quot;trusted_primary_base64_key&quot;; pin-sha256=&quot;trusted_backup_base64_key&quot;; max-age=2592000; includeSubDomains&#x27; always;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# CSP&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# add_header Content-Security-Policy &quot;upgrade-insecure-requests; default-src &#x27;none&#x27;; script-src &#x27;self&#x27; data: &#x27;unsafe-inline&#x27; &#x27;unsafe-eval&#x27; https:; object-src &#x27;self&#x27; https:; style-src &#x27;self&#x27; data: &#x27;unsafe-inline&#x27; https:; img-src &#x27;self&#x27; data: https:; media-src &#x27;self&#x27; data: https; frame-src &#x27;self&#x27; https:; font-src &#x27;self&#x27; data: https:; connect-src &#x27;self&#x27; https:&quot; always;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 告诉 IE8 使用最新的浏览器渲染&lt;/span&gt;&lt;br/&gt;add_header X-UA-Compatible &lt;span&gt;&quot;IE=Edge&quot;&lt;/span&gt; always;&lt;br/&gt;&lt;span&gt;# 控制 Referrer 信息显示，同源完整显示，跨域仅显示 host 部分&lt;/span&gt;&lt;br/&gt;add_header Referrer-Policy &lt;span&gt;&quot;origin-when-cross-origin&quot;&lt;/span&gt; always;&lt;br/&gt;&lt;span&gt;# 网页只在同源情况允许被 iframe 嵌套&lt;/span&gt;&lt;br/&gt;add_header X-Frame-Options &lt;span&gt;&quot;SAMEORIGIN&quot;&lt;/span&gt; always;&lt;br/&gt;&lt;span&gt;# 让浏览器对 Content-Type 不要瞎猜测&lt;/span&gt;&lt;br/&gt;add_header X-Content-Type-Options &lt;span&gt;&quot;nosniff&quot;&lt;/span&gt; always;&lt;br/&gt;&lt;span&gt;# 开启浏览器 XSS 过滤，一旦发现自动 block 掉&lt;/span&gt;&lt;br/&gt;add_header X-XSS-Protection &lt;span&gt;&quot;1; mode=block&quot;&lt;/span&gt; always;&lt;br/&gt;&lt;br/&gt;resolver 223.5.5.5 114.114.114.114 8.8.8.8 valid=60s;&lt;br/&gt;resolver_timeout 5s;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;创建中间证书和受信密钥&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 ssl 目录中，创建 certs.sh 脚本。内容如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;#!/bin/bash&lt;br/&gt;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;###### DH Params&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 使用openssh dhparam 生成 DH Params&lt;/span&gt;&lt;br/&gt;openssl dhparam 2048 -out /etc/nginx/ssl/dhparam.pem&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;##### HPKP&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 下载 Let&#x27;s Encrypt 中间证书&lt;/span&gt;&lt;br/&gt;wget https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem.txt -O trusted_primary.pem&lt;br/&gt;wget https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.pem.txt -O trusted_backup.pem&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 验证证书是否有效&lt;/span&gt;&lt;br/&gt;openssl x509 -&lt;span&gt;in&lt;/span&gt; trusted_primary.pem -noout -subject&lt;br/&gt;openssl x509 -&lt;span&gt;in&lt;/span&gt; trusted_backup.pem -noout -subject&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 生成 trusted_primary 公钥&lt;/span&gt;&lt;br/&gt;openssl x509 -&lt;span&gt;in&lt;/span&gt; trusted_primary.pem -noout -pubkey | openssl asn1parse -noout -inform pem -out public.key&lt;br/&gt;openssl dgst -sha256 -binary public.key | openssl enc -base64&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 生成 trusted_backup 公钥&lt;/span&gt;&lt;br/&gt;openssl x509 -&lt;span&gt;in&lt;/span&gt; trusted_backup.pem -noout -pubkey | openssl asn1parse -noout -inform pem -out public.key&lt;br/&gt;openssl dgst -sha256 -binary public.key | openssl enc -base64&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;执行 /etc/nginx/ssl/certs.sh 生成中间证书和受信密钥：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;dhparam.pem&lt;br/&gt;public.key&lt;br/&gt;trusted_backup.pem&lt;br/&gt;trusted_primary.pem&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意这一步执行比较消耗性能，会略微有点慢。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终，在 /etc/nginx/ssl 目录中，包含三个 PEM 文件和一个 key 文件，此外还有 ssl.conf 和 certs.sh，总共六个文件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;生成 SSL/TSL 证书&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过 acme.sh 为自己的域名颁发证书。假定你已经安装了 acme.sh 证书颁发工具，在任意地方执行颁发证书命令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;acme.sh --issue -d example.com -d *.example.com --dns dns_ali&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;第一个为 example.com 主域名，生成的证书会以这个主域名在 .acme.sh 目录中创建子目录，存放证书文件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意我这里是是阿里云域名，已经预先在.bashrc 中导出了阿里云域名相关的 key 配置&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;## 用于acme.sh根据DNS颁发通配符证书&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; Ali_Key=&lt;span&gt;&quot;LTAI*****vgZC&quot;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;export&lt;/span&gt; Ali_Secret=&lt;span&gt;&quot;tmCh*****R3j5q&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;默认情况下，acme.sh 会安装在用户目录下的 .acme.sh 中，生成的域名也在此目录下&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;配置站点&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 /etc/nginx/conf.d 下面创建一个站点配置文件 example.com.conf&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;server {&lt;br/&gt;    listen 80;&lt;br/&gt;    &lt;span&gt;# listen [::]:80;&lt;/span&gt;&lt;br/&gt;    listen 443 ssl http2;&lt;br/&gt;    &lt;span&gt;# listen [::]:443 ssl http2;&lt;/span&gt;&lt;br/&gt;    server_name example.com www.example.com;&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;# force https-redirects&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; ( &lt;span&gt;$scheme&lt;/span&gt; = http ){&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; 301 https://&lt;span&gt;$server_name&lt;/span&gt;&lt;span&gt;$request_uri&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;# SSL 证书配置&lt;/span&gt;&lt;br/&gt;    ssl_certificate      /root/.acme.sh/example.com/fullchain.cer;&lt;br/&gt;    ssl_certificate_key  /root/.acme.sh/example.com/example.com.key;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;# SSL 通用配置&lt;/span&gt;&lt;br/&gt;    include  ssl/ssl.conf;&lt;br/&gt;&lt;br/&gt;    error_page  404              /404.html;&lt;br/&gt;&lt;br/&gt;    client_max_body_size 20m;&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;# 反向代理&lt;/span&gt;&lt;br/&gt;    location /api {&lt;br/&gt;        &lt;span&gt;# Use IPv4 upstream address instead of DNS name to avoid attempts by nginx to use IPv6 DNS lookup&lt;/span&gt;&lt;br/&gt;        proxy_pass http://127.0.0.1:8080/api;&lt;br/&gt;        proxy_set_header Host &lt;span&gt;$host&lt;/span&gt;;&lt;br/&gt;        proxy_set_header X-Real-IP &lt;span&gt;$remote_addr&lt;/span&gt;;&lt;br/&gt;        proxy_set_header X-Forwarded-For &lt;span&gt;$proxy_add_x_forwarded_for&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;# 静态资源&lt;/span&gt;&lt;br/&gt;    location / {&lt;br/&gt;        root  /opt/www/example.com/;&lt;br/&gt;        index  index.html index.htm;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;查看目录结构&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再次用 tree 命令查看 /etc/nginx 目录结构&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;.&lt;br/&gt;├── conf.d&lt;br/&gt;│   ├── default.conf&lt;br/&gt;│   └── example.com.conf&lt;br/&gt;├── default.d&lt;br/&gt;├── fastcgi.conf&lt;br/&gt;├── fastcgi.conf.default&lt;br/&gt;├── fastcgi_params&lt;br/&gt;├── fastcgi_params.default&lt;br/&gt;├── koi-utf&lt;br/&gt;├── koi-win&lt;br/&gt;├── mime.types&lt;br/&gt;├── mime.types.default&lt;br/&gt;├── nginx.conf&lt;br/&gt;├── nginx.conf.default&lt;br/&gt;├── nginx.conf.rpmnew&lt;br/&gt;├── scgi_params&lt;br/&gt;├── scgi_params.default&lt;br/&gt;├── ssl&lt;br/&gt;│   ├── certs.sh&lt;br/&gt;│   ├── dhparam.pem&lt;br/&gt;│   ├── public.key&lt;br/&gt;│   ├── ssl.conf&lt;br/&gt;│   ├── trusted_backup.pem&lt;br/&gt;│   └── trusted_primary.pem&lt;br/&gt;├── uwsgi_params&lt;br/&gt;├── uwsgi_params.default&lt;br/&gt;└── win-utf&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重新加载 nginx 配置或者重启服务，打开&lt;span&gt; Chrome 浏览器访问 https://example.com ，看到&lt;/span&gt;&lt;span&gt;站点已经带上了健康锁，大功告成！&lt;/span&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;参考&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Let&#x27;s Encrypt&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;acme.sh&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;SSL/TLS 安全评估报告&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;SSL Server Test&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Mozilla SSL Configuration Generator&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/HmXWpTc2vib2JxfwiaIumicuCMibynrtZZkXGGibuEhZLJ7u1cicry0NuLoxeYicmrxfOWtVRqsL0txfmlC4LyANmS5Iw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;figcaption&gt;欢迎关注逻魔代码&lt;/figcaption&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>447612f9266b8407788671ea469ea616</guid>
<title>多模态技术在淘宝主搜召回场景的探索</title>
<link>https://toutiao.io/k/ify9kl2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;img class=&quot;rich_pages __bg_gif wxw-img&quot; data-backh=&quot;96&quot; data-backw=&quot;578&quot; data-fileid=&quot;502954066&quot; data-ratio=&quot;0.16666666666666666&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/33P2FdAnju95xNQaJWFlU3fWicicxBac5nuOMtveZ6lxCCnoZU1Xd6ITUVhoibJib5eyx6d2hePhGFNbQ4nT3Gicgpg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;900&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;88287&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;搜索召回作为搜索系统的基础，决定了效果提升的上限。如何在现有的海量召回结果中，继续带来有差异化的增量价值，是我们面临的主要挑战。而多模态预训练与召回的结合，为我们打开了新的视野，带来线上效果的显著提升。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多模态预训练是学术界与工业界研究的重点，通过在大规模数据上进行预训练，得到不同模态之间的语义对应关系，在多种下游任务如视觉问答、视觉推理、图文检索上能够提升效果。&lt;/span&gt;&lt;span&gt;在集团内部，多模态预训练也有一些研究与应用。&lt;/span&gt;&lt;span&gt;在淘宝主搜场景中，用户输入的Query与待召回商品之间存在天然的跨模态检索需求，只是以往对于商品更多地使用标题和统计特征，忽略了图像这样更加直观的信息。&lt;/span&gt;&lt;span&gt;但对于某些有视觉元素的Query（如白色连衣裙、碎花连衣裙），相信大家在搜索结果页都会先被图像所吸引。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;1251&quot; data-backw=&quot;578&quot; data-ratio=&quot;2.163551401869159&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbVMYrowEtqZYJ17nmLfomcuqqjv1GjXjsfT0RANpns9CnrfGx9egAFg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1284&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;1251&quot; data-backw=&quot;578&quot; data-ratio=&quot;2.163551401869159&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbSibiaCCsAxRzacuBRkhicPctrqriaJMichVw6k5wvias1YpTRvUSV4XjVYQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1284&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;淘宝主搜场景&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一方面是图像占据着更显著的位置，另一方面则是图像可能包含着标题所没有的信息，如白色、碎花这样的视觉元素。对于后者，需要区分两种情况：一种是标题中有信息、但由于显示限制无法完全展示，这种情况不影响商品在系统链路里的召回；另一种是标题中没有信息但图像中有，也就是图像相对于文本可以带来增量。后者是我们需要重点关注的对象。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;技术问题与解决思路&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在主搜召回场景中应用多模态技术，有两个主要问题需要解决：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;多模态图文预训练模型一般融合图像、文本两种模态，主搜由于有Query的存在，在原本商品图像、标题的图文模态基础上，需要考虑额外的文本模态。同时，Query与商品标题之间存在语义Gap，Query相对短且宽泛，而商品标题由于卖家会做SEO，往往长且关键词堆砌。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通常预训练任务与下游任务的关系是，预训练采用大规模无标注数据，下游采用少量有标注数据。但对于主搜召回来说，下游向量召回任务的规模巨大，数据在数十亿量级，而受限于有限的GPU资源，预训练只能采用其中相对少量的数据。在这种情况下，预训练是否还能对下游任务带来增益。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;我们的解决思路如下：&lt;/span&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;文本-图文预训练&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：将Query和商品Item分别过Encoder，作为双塔输入到跨模态Encoder。如果从Query和Item双塔来看，它们在后期才进行交互，类似于双流模型，不过具体看Item塔，图像和标题两个模态在早期就进行了交互，这部分是单流模型。所以，我们的模型结构是区别于常见的单流或双流结构的。这种设计的出发点是：更有效地提取Query向量和Item向量，为下游的双塔向量召回模型提供输入，并且能够在预训练阶段引入双塔内积的建模方式。为了建模Query与标题之间存在的语义联系与Gap，我们将Query和Item双塔的Encoder共享，再分别学习语言模型。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;预训练与召回任务联动&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：针对下游向量召回任务的样本构造方式与Loss，设计了预训练阶段的任务及建模方式。区别于常见的图文匹配任务，我们采用Query-Item和Query-Image匹配任务，并将Query下点击最多的Item作为正样本，将Batch内的其他样本作为负样本，增加采用Query和Item双塔内积方式建模的多分类任务。这种设计的出发点是：使预训练更靠近向量召回任务，在有限的资源下，尽可能为下游任务提供有效的输入。另外，对向量召回任务来说，如果预训练输入的向量在训练过程中是固定不变的，就无法有效地针对大规模数据做调整，为此，我们还在向量召回任务里建模了预训练向量的更新。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;预训练模型&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;建模方法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;多模态预训练模型需要从图像中提取特征，再与文本特征融合。从图像中提取特征的方式主要有三种：使用CV领域训练好的模型提取图像的RoI特征、Grid特征和Patch特征。从模型结构来看，根据图像特征和文本特征融合方式的不同，主要有两类：单流模型或双流模型。在单流模型中，图像特征与文本特征在早期就拼接在一起输入Encoder，而在双流模型中，图像特征和文本特征分别输入到两个独立的Encoder，然后再输入到跨模态Encoder中进行融合。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  初步探索&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们提取图像特征的方式是：将图像划分为Patch序列，使用ResNet提取每个Patch的图像特征。在模型结构上，尝试过单流结构，也就是将Query、标题、图像拼接在一起输入Encoder。经过多组实验，我们发现在这种结构下，很难提取出纯粹的Query向量和Item向量作为下游双塔向量召回任务的输入。如果提取某一向量时，Mask掉不需要的模态，会使得预测与训练不一致。这个问题类似于，在一个交互型的模型里直接提取出双塔模型，根据我们的经验，这种模型的效果不如经过训练的双塔模型。基于此，我们提出了一种新的模型结构。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  模型结构&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;551&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.9539594843462247&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbco7V7CP6iatHtOLJDGCu4A3mVlgAC5EZpD8EGcVaGqh8j2BgCVvXNrA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1086&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;类似双流结构，模型下方由双塔构成，上方通过跨模态Encoder融合双塔。与双流结构不同的是，双塔不是分别由单一模态构成，其中的Item塔中包含了Title和Image图文双模态，Title和Image拼接在一起输入Encoder，这部分类似单流模型。为了建模Query与Title之间存在的语义联系与Gap，我们将Query和Item双塔的Encoder共享，再分别学习语言模型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于预训练来说，设计合适的任务也是比较关键的。我们尝试过常用的Title和Image的图文匹配任务，虽然能达到比较高的匹配度，但对于下游向量召回任务带来的增益很少，这是因为用Query去召回Item时，Item的Title和Image是否匹配不是关键因素。所以，我们在设计任务时，更多地考虑了Query与Item之间的关系。目前，一共采用5种预训练任务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  预训练任务&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Masked Language Modeling (MLM)：&lt;/strong&gt;在文本Token中，随机Mask掉15%，用剩下的文本和图像预测出被Mask的文本Token。对于Query和Title，有各自的MLM任务。MLM最小化交叉熵Loss：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.14912280701754385&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbFDIwvHlMM352yjdicLECbMZn9eSibfKicoIHOJUiazk62Cz6c1vCdqoaUg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;342&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.35&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkblmRia7BAfg9FwdYCX7mKYy3u3aDOyzMKZe8dlibr0oSNcWgbBnHP2MuA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;20&quot;/&gt;&lt;span&gt;表示剩下的文本token&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Masked Patch Modeling (MPM)：&lt;/strong&gt;在图像的Patch Token中，随机Mask掉25%，用剩下的图像和文本预测出被Mask的图像Token。MPM最小化KL散度Loss：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.14166666666666666&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbX5WoEn1nrUsibtUDH5IRr90z1AZicPf3N8PnyQZSgj3LHCialkdIkGqSg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;360&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.7647058823529411&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbF3c0fGAY9NGRnMsDvFINeiaqgv2xDQKdmOwQ8AtTNW76e4wbvNaoDMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;17&quot;/&gt;&lt;span&gt;表示剩下的图像token&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Query Item Classification (QIC)：&lt;/strong&gt;一个Query下点击最多的Item作为正样本，Batch内其他样本作为负样本。QIC将Query塔和Item塔的[CLS] token通过线性层降维到256维，再做相似度计算得到预测概率，最小化交叉熵Loss：&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.13968253968253969&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkb4Mto1qfjr1ab6Do8LA7zq4xK6ljQJbboOGalrads44fsfNF9l4zntg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;315&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3977272727272727&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbYze9yQxPI2ib6vyxz4Lm8TqMOTtEABFCwDwUg55vI72RwlAdoicJTLAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;88&quot;/&gt;&lt;span&gt;的计算可以采取多种方式：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4068554396423249&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbS2hOxa2akovOibxmficf7UykKpd5DjQHS1bzyAD2XonDrKwDBafZ2u9A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;671&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;其中&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5370370370370371&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkb8rqAm0bhIzp4YH6mjD3Erd4GZpA5hufTC6bVvQzAFRzFAD5gkpDnDQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;54&quot;/&gt;&lt;span&gt;表示相似度计算，&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.1176470588235294&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbPbzKlC9qxXp6zqsibygv6rp3JDtEQgrNYkZwKYSqXddLiacibiaFicSbicFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;17&quot;/&gt;&lt;span&gt;表示温度超参数，&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbgsjThfIbL6HclzhwicRhWsaXpnZRibEKNlpWS7HBxmh6ByFVYwibWCnHg/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;19&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;19&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/33P2FdAnju8PefBY9libVTibc4QQxoxibkbmw2Mhl7fY7pScuOX32mK2uZbr0DB7oLZ5h2zuA3lA3gpFpcNOFg5ibw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;19&quot;/&gt;&lt;span&gt;和m分别表示缩放因子和松弛因子&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Query Item Matching (QIM)：&lt;/strong&gt;一个Query下点击最多的Item作为正样本，Batch内与当前Query相似度最高的其他Item作为负样本。QIM使用跨模态Encoder的[CLS] token计算预测概率，最小化交叉熵Loss：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3230769230769231&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbJGoP2uKzYHISpDwNqOBdEickpG2OiaLM54AJty1tHZkVzfqaCicqBRLgw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;325&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Query Image Matching (QIM2)：&lt;/strong&gt;在QIM的样本中，Mask掉Title，强化Query与Image之间的匹配。QIM2最小化交叉熵Loss：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2959770114942529&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbic7ZoAUQB6EvYsVicIfcNvYUxdRNH6VeMKMqWYicUfmMzVkO4VZq1jLqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;348&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;模型的训练目标为，最小化整体Loss：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.09018567639257294&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbCfMOWd5nEDARic8rup95xgafhV9eVt8IjxIkz8ZPDx4ooNqzThaxncA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;377&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在这5种预训练任务中，MLM任务和MPM任务位于Item塔的上方，建模Title或Image的部分Token被Mask后，使用跨模态信息相互恢复的能力。Query塔上方有独立的MLM任务，通过共享Query塔和Item塔的Encoder，建模Query与Title之间的语义联系与Gap。QIC任务使用双塔内积的方式，将预训练和下游向量召回任务做一定程度的对齐，并用AM-Softmax拉近Query的表示与Query下点击最多Item的表示之间的距离，推开Query与其他Item的距离。QIM任务位于跨模态Encoder的上方，使用跨模态信息建模Query和Item的匹配。出于计算量的考虑，采用通常NSP任务的正负样本比1:1，为了进一步推开正负样本之间的距离，基于QIC任务的相似度计算结果构造了难负样本。QIM2任务与QIM任务位于同样的位置，显式建模图像相对于文本带来的增量信息。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;向量召回模型&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;建模方法&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;在大规模信息检索系统中，召回模型位于最底层，需要在海量的候选集中打分。出于性能的考虑，往往采用User和Item双塔计算向量内积的结构。向量召回模型的一个核心问题是：如何构造正负样本以及负样本采样的规模。我们的解决方法是：将用户在一个页面内的点击Item作为正样本，在全量商品池中根据点击分布采样出万级别的负样本，用Sampled Softmax Loss在采样样本中推导出Item在全量商品池中的点击概率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3470031545741325&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkb3fM4zdy4V8YD2trHuib5ElZ6iafpk9S3v1tcYGjicicicmXOu6uGkAVZ6Gw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;317&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span data-cangjie-key=&quot;294:0&quot; data-cangjie-leaf=&quot;true&quot; data-cangjie-mark=&quot;true&quot; data-testid=&quot;294:0&quot;&gt;其中&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5471698113207547&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbnwg18Tv50ubObzL5sgewMqdytXwLeic4uXaqRsLCummO7qGND2nUNgw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;53&quot;/&gt;&lt;span data-cangjie-key=&quot;298:0&quot; data-cangjie-leaf=&quot;true&quot; data-cangjie-mark=&quot;true&quot; data-testid=&quot;298:0&quot;&gt;表示相似度计算，&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbD2TCkuh7PQglElEWJ7UXe8hkNn2xoZXE0oSYSUVuzCl747d0Lo8sLQ/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;14&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;21&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.5&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/33P2FdAnju8PefBY9libVTibc4QQxoxibkb9VpGib8cUNjHibNic1XnFxUiagWBvCq4TStrMqke0EV0wt7sNeUysjsRPQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;14&quot;/&gt;&lt;span&gt;表示温度超参数&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;初步探索&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;遵循常见的FineTune范式，我们尝试过将预训练的向量直接输入到双塔MLP，结合大规模负采样和Sampled Softmax来训练多模态向量召回模型。不过，与通常的小规模下游任务相反，向量召回任务的训练样本量巨大，在数十亿量级。我们观察到MLP的参数量无法支撑模型的训练，很快就会达到自身的收敛状态，但效果并不好。同时，预训练向量在向量召回模型中作为输入而不是参数，无法随着训练的进行得到更新。这样一来，在相对小规模数据上进行的预训练，与大规模数据上的下游任务有一定的冲突。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;解决的思路有几种，一种方法是将预训练模型融合到向量召回模型中，但预训练模型的参数量过大，再加上向量召回模型的样本量，无法在有限的资源约束下，以合理的时间进行常态化训练。另一种方法是在向量召回模型中构造参数矩阵，将预训练向量载入到矩阵中，随着训练的进行更新矩阵的参数。经过调研，这种方式在工程实现上成本比较高。基于此，我们提出了简单可行地建模预训练向量更新的模型结构。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;模型结构&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;482&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.8345454545454546&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbPiaMib0uB0sUFcm1cqDqqAh1IrYpFh6VCpy5CD2Ry4PR4VPG7XiaMcYVA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1100&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;我们先将预训练向量通过FC降维，之所以在这里而不是在预训练中降维，是因为目前的高维向量对于负样本采样来说还在可接受的性能范围内，这种情况下，在向量召回任务中降维是与训练目标更一致的。同时，我们引入Query和Item的ID Embedding矩阵，Embedding维度与降维后的预训练向量的维度保持一致，再将ID与预训练向量融合在一起。这个设计的出发点是：引入足以支撑大规模训练数据的参数量，同时使预训练向量随着训练的进行得到适应性地更新。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在只用ID和预训练向量融合的情况下，模型的效果不仅超过了只用预训练向量的双塔MLP的效果，也超过了包含更多特征的Baseline模型MGDSPR。更进一步，在这个基础上引入更多的特征，可以继续提升效果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;实验分析&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;评测指标&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;对于预训练模型的效果，通常是用下游任务的指标来评测，而很少用单独的评测指标。但这样一来，预训练模型的迭代成本会比较高，因为每迭代一个版本的模型都需要训练对应的向量召回任务，再评测向量召回任务的指标，整个流程会很长。有没有单独评测预训练模型的有效指标？我们首先尝试了一些论文中的Rank@K，这个指标主要是用来评测图文匹配任务：先用预训练模型在人工构造的候选集中打分，再计算根据分数排序后的Top K结果命中图文匹配正样本的比例。我们直接将Rank@K套用在Query-item匹配任务上，发现结果不符合预期，一个Rank@K更好的预训练模型，在下游的向量召回模型中可能会获得更差的效果，无法指导预训练模型的迭代。基于此，我们将预训练模型的评测与向量召回模型的评测统一起来，采用相同的评测指标及流程，可以相对有效地指导预训练模型的迭代。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;span&gt;Recall@K&lt;/span&gt;&lt;span&gt;：评测数据集由训练集的下一天数据构成，先将同一个Query下不同用户的点击、成交结果聚合成&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2857142857142857&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbVDiaiaVej5O1EkzAgCwNBPxEyCia4RCFk5qLiag9H3YXWFAMf7aY6hvXsw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;112&quot;/&gt;&lt;span&gt;，再计算模型预测的Top K结果&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.4285714285714286&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbcZnwicibGkPDunXhwfpFmGamRAWQn5STib1SIibyK6FxV0CfLzBFzkI2ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;21&quot;/&gt;&lt;span&gt;命中&lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.35&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbsXsr4Dr0O7yjrp3B9weQ1XOK10cbibYGLjoEyrOB4t4RYMvRGia8EH3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;20&quot;/&gt;&lt;span&gt;的比例：&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.27459016393442626&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbiajc6CKFJryyAic5B9D7y9O68QFun13e9SKPNolQRDbUu6MNaD4V91Xw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;244&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在模型预测Top K结果的过程中，需要从预训练/向量召回模型中提取Query和Item向量，使用近邻检索得到一个Query下的Top K个Item。通过这个流程模拟线上引擎中的向量召回，来保持离线与在线的一致性。对于预训练模型来说，这个指标与Rank@K的区别是：在模型中提取Query和Item向量进行向量内积检索，而不是直接用模态融合后的模型来打分；另外，一个Query下不仅要召回与之匹配的Item，还要召回这个Query下不同用户的点击、成交Item。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于向量召回模型，在Recall@K提高到一定程度后，也需要关注Query和Item之间的相关性。一个相关性差的模型，即使能提高搜索效率，也会面临Bad Case增加导致的用户体验变差和投诉舆情增多。&lt;/span&gt;&lt;span&gt;我们采用与线上相关性模型一致的离线模型，评测Query和Item之间以及Query和Item类目之间的相关性。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;预训练实验&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;我们选取部分类目下1亿量级的商品池，构造了预训练数据集。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们的Baseline模型是经过优化的FashionBert，加入了QIM和QIM2任务，提取Query和Item向量时采用只对非Padding Token做Mean Pooling的方式。以下实验探索了以双塔方式建模，相对于单塔带来的增益，并通过消融实验给出关键部分的作用。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;189&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.326605504587156&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbjF4Sib1icwJYQwmIXuiaIqesg9EkI4ibOSVLccAeb2BVdMJIqcUhlKCVGg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1090&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;从这些实验中，我们能得出如下结论：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实验8 vs 实验3：经过调优后的双塔模型，在Recall@1000上显著高于单塔Baseline。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实验3 vs 实验1/2：对单塔模型来说，如何提取Query和Item向量是重要的。我们尝试过Query和Item都用[CLS] token，得到比较差的结果。实验1对Query和Item分别用对应的Token做Mean Pooling，效果要好一些，但进一步去掉Padding Token再做Mean Pooling，会带来更大的提升。实验2验证了显式建模Query-Image匹配来突出图像信息的作用，会带来提升。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实验6 vs 实验4/5：实验4将Item塔的MLM/MPM任务上移到跨模态Encoder，效果会差一些，因为将这两个任务放在Item塔能够增强Item表示的学习；另外，在Item塔做基于Title和Image的跨模态恢复会有更强的对应关系。实验5验证了对Query和Item向量在训练和预测时增加L2 Norm，会带来提升。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实验6/7/8：改变QIC任务的Loss会带来提升，Softmax相比于Sigmoid更接近下游的向量召回任务，AM-Softmax则更进一步推开了正样本与负样本之间的距离。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;br/&gt;&lt;/h4&gt;&lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;向量召回实验&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;我们选取10亿量级有点击的页面，构造了向量召回数据集。在每个页面中包含3个点击Item作为正样本，从商品池中根据点击分布采样出1万量级的负样本。在此基础上，进一步扩大训练数据量或负样本采样量，没有观察到效果的明显提升。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们的Baseline模型是主搜的MGDSPR模型。以下实验探索了将多模态预训练与向量召回结合，相对于Baseline带来的增益，并通过消融实验给出关键部分的作用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;169&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.2922824302134647&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbGeoLdLyTL7q50VM1qyjmnCiaRqwYdcewHVMBk0lZ0uzkK5D3icwB2MvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1218&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;从这些实验中，我们能得出如下结论：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实验7/8 vs 实验6：多模态特征与ID通过FC融合后，在3个指标上都超过了Baseline，在提升Recall@1000的同时，对商品相关性提升更多。在此基础上，加入与Baseline相同的特征，能进一步提升3个指标，并在Recall@1000上提升得更多。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实验1 vs 实验2：只有多模态特征相比于只有ID，Recall@1000更低，但相关性更高，且相关性接近线上可用的程度。说明这时的多模态召回模型，从召回结果来看有更少的Bad Case，但对点击、成交的效率考虑得不够。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实验3/4/5 vs 实验1/2：将多模态特征与ID融合后，能够在3个指标上都带来提升，其中将ID过FC再与降维后的多模态特征相加，效果更好。不过，与Baseline相比，在Recall@1000上仍有差距。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;实验7 vs 实验5：叠加预训练模型的优化后，在Recall@1000、商品相关性上都有提升，类目相关性基本持平。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们在向量召回模型的Top 1000结果中，过滤掉线上系统已经能召回的Item，发现其余增量结果的相关性基本不变。在大量Query下，我们看到这些增量结果捕捉&lt;/span&gt;&lt;span&gt;到了商品Title之外的图像信息，并对Query和Title之间存在的语义Gap起到了一定的作用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query: 痞帅西装&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;537&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.9294605809128631&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkbo62T59yFckSs5eLEmz9ZXqUZ4EECrib4G5fdUdh9HrIlicia1hIic6lf7A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;964&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;query: 女掐收腰小衫&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;482&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.8346972176759411&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8PefBY9libVTibc4QQxoxibkb1ATRC0EuGkdcNnC0QiatG7ibePDkGia0wGIgxcjcIvEjFoHcgGNvGdiaTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1222&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;总结和展望&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;针对主搜场景的应用需求，我们提出了文本-图文预训练模型，采用了Query和Item双塔输入跨模态Encoder的结构，其中Item塔是包含图文多模态的单流模型。通过Query-Item和Query-Image匹配任务，以及Query和Item双塔内积方式建模的Query-Item多分类任务，使预训练更接近下游的向量召回任务。同时，在向量召回中建模了预训练向量的更新。在资源有限的情况下，使用相对少量数据的预训练，对使用海量数据的下游任务仍然带来了效果的提升。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在主搜的其他场景中，如商品理解、相关性、排序，也存在应用多模态技术的需求。我们也参与到了这些场景的探索中，相信多模态技术在未来会给越来越多的场景带来增益。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section data-role=&quot;paragraph&quot; data-id=&quot;86516&quot; data-tools=&quot;135编辑器&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86516&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;团队介绍&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;淘宝主搜召回团队：团队负责主搜链路中的召回、粗排环节，目前的主要技术方向为基于全空间样本的多目标个性化向量召回、基于大规模预训练的多模态召回、基于对比学习的相似Query语义改写以及粗排模型等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;✿ &lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;拓展阅读&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt; &lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAxNDEwNjk5OQ==&amp;amp;mid=2650445139&amp;amp;idx=1&amp;amp;sn=c43febc0a43bf5b4165d06cceffd873c&amp;amp;chksm=83965d4bb4e1d45d50fd46a3776bf9ebfe78477c45a872aba220ff37aa331fda2fe07874c803&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;你已选中了添加链接的内容&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;1&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;103&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.17844202898550723&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/33P2FdAnju8PefBY9libVTibc4QQxoxibkbmGD0hPO9CcGwZ1ATzvyX8IAic5Picxja1TXgNcib90yEt1xwiaYJFrWQTQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1104&quot;/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;作者&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;|&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;幻士&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;编辑|&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;橙子君&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;331&quot; data-backw=&quot;578&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/33P2FdAnju9qJSYLusYZ20IeW1JcwLxOiboFmk6AE4WC0UFUU2MfXQS9E9ibVUdVZoMpic6wE97ylUl6r4olNpDow/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;720&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;412.318339100346&quot; data-fileid=&quot;502955184&quot; data-ratio=&quot;0.5722222222222222&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/33P2FdAnju9qJSYLusYZ20IeW1JcwLxOmYpQKzz1XI7PlgmOA3cPARTxwZuKFw6osZsksibeH7HrS9oiaVooQSZQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;96&quot; data-backw=&quot;578&quot; data-fileid=&quot;502955183&quot; data-ratio=&quot;0.16666666666666666&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju9I3TY9EP8M3D7oDuMfTuEh37yxribyjc3viaicCKBT9nJhqBcib36SSRaib3vIobcZbx93RYyf9QvgzOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>23db103077d23db6e3d7bbcb90f287b1</guid>
<title>降低代码复杂度的一种方法</title>
<link>https://toutiao.io/k/39ueac4</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-source-line=&quot;1&quot;&gt;&lt;span&gt;代码之所以复杂，有以下两种原因：&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;3&quot;&gt;&lt;span&gt;一是耦合度高。如果一个代码单元是由多个小的代码单元耦合而成，那么它的复杂度就是其中各个小代码单元的复杂度的总和；二是使用了非常长的链式(连续的)if-then-elase语句或者switch语句，代码单元包含很多个分支。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;5&quot;&gt;&lt;span&gt;降低代码的复杂度，要根据代码复杂的原因采取相应的方法。对于第一种情况，由于代码单元中含有了许多几乎互不相关的代码块，这时候就适合采用“提取方法”的技巧来进行重构，以降低复杂度。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;7&quot;&gt;&lt;span&gt;对于第二种情况，代码单元有太多的分支，而一般能够接受的分支数量是不多于4个。下面以一个会返回正确的国旗颜色的GetFlagColors方法重构为例来演示下降低其复杂度的方法。&lt;/span&gt;&lt;/p&gt;&lt;pre data-source-line=&quot;10&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; IList&amp;lt;Color&amp;gt; GetFlagColors(Nationality nationality)&lt;br/&gt;{&lt;br/&gt;    &lt;span&gt;List&lt;/span&gt;&amp;lt;Color&amp;gt; result;&lt;br/&gt;    &lt;span&gt;switch&lt;/span&gt; (nationality)&lt;br/&gt;    {&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; Nationality,DUTCH:&lt;br/&gt;        result = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;Color&amp;gt; { Color.Red, Color.White, Color.Blue}; &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; Nationality.GERMAN:&lt;br/&gt;        result = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;Color&amp;gt; { Color.Black, Color.Red, Color.Yellow};&lt;br/&gt;        &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; Nationality.BELGIAN:&lt;br/&gt;        result = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;Color&amp;gt; {Color.Black, Color.Yellow, Color.Red };&lt;br/&gt;        &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; Nationality.FRENCH:&lt;br/&gt;        result = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;Color&amp;gt; {Color. Blue, Color.White, Color.Red};&lt;br/&gt;        &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; Nationality.ITALIAN:&lt;br/&gt;        result = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;Color&amp;gt; { Color.Green, Color.White, Color.Red };&lt;br/&gt;        &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;    &lt;span&gt;case&lt;/span&gt; Nationality,UNCLASSIFIED:&lt;br/&gt;    &lt;span&gt;default&lt;/span&gt;:&lt;br/&gt;        result = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;List&lt;/span&gt;&amp;lt;Color&amp;gt; { Color,Gray };&lt;br/&gt;        &lt;span&gt;break&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; result;&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-source-line=&quot;39&quot;&gt;&lt;span&gt;方法体中的switch语句需要处理所有的国家枚举类型，并返回每个国家对应的正确国旗颜色。这个方法中需要测试的分支为6。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;41&quot;&gt;&lt;span&gt;要减少这个方法的分支数量，可以使用“使用多态来代替条件判断”的重构技巧，让每个国旗都拥有一个自己的类型，并实现同一个接口。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;43&quot;&gt;&lt;span&gt;为此，我们首先定义一个公用的Flag接口：&lt;/span&gt;&lt;/p&gt;&lt;pre data-source-line=&quot;46&quot;&gt;&lt;code&gt;&lt;span&gt;public&lt;span&gt; interface &lt;/span&gt;IFlag&lt;br/&gt;{&lt;br/&gt;    IList&amp;lt;Color&amp;gt; Colors&lt;br/&gt;    {&lt;br/&gt;        get;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-source-line=&quot;56&quot;&gt;&lt;span&gt;然后再为不同的国家定义不同的国旗类型，例如荷兰：&lt;/span&gt;&lt;/p&gt;&lt;pre data-source-line=&quot;59&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;DutchFlag: &lt;span&gt;IFlag&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;{&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; IList&amp;lt;Color&amp;gt; Colors&lt;br/&gt;    {&lt;br/&gt;        &lt;span&gt;get&lt;/span&gt;&lt;br/&gt;        {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; new List&amp;lt;Color { Color.Red, Color.White, Color.Blue };&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-source-line=&quot;72&quot;&gt;&lt;span&gt;最终重构后代码如下：&lt;/span&gt;&lt;/p&gt;&lt;pre data-source-line=&quot;75&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; readonly Dictionary&amp;lt;Nationality, IFlag&amp;gt;FLAGS = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Dictionary&lt;/span&gt;&amp;lt;Nationality, IFlag&amp;gt;();&lt;br/&gt;&lt;br/&gt;&lt;span&gt;static&lt;/span&gt; FlagFactory()&lt;br/&gt;{&lt;br/&gt;    FLAGS[Nationality.DUTCH]= &lt;span&gt;new&lt;/span&gt; &lt;span&gt;DutchFlag&lt;/span&gt;();&lt;br/&gt;    FLAGS[Nationality.GERMAN] = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;GermanFlag&lt;/span&gt;();&lt;br/&gt;    FLAGS[Nationality.BELGIAN] = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;BelgianFlag&lt;/span&gt;();&lt;br/&gt;    FLAGS [Nationality.FRENCH]= &lt;span&gt;new&lt;/span&gt; &lt;span&gt;FrenchFlag&lt;/span&gt;();&lt;br/&gt;    FLAGS[Nationality.ITALIAN] = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;ItalianFlag&lt;/span&gt;();&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;public&lt;/span&gt; IList&amp;lt;Color&amp;gt; GetFlagColors(Nationality nationality)&lt;br/&gt;{&lt;br/&gt;    IFlag flag = FLAGS[nationality];&lt;br/&gt;    flag = flag ?? &lt;span&gt;new&lt;/span&gt; &lt;span&gt;DefaultFlag&lt;/span&gt;();&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; flag.Colors;&lt;br/&gt;}&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-source-line=&quot;96&quot;&gt;&lt;span&gt;这种重构技巧去掉了switch语句，极大地降低了代码的复杂度，而且可以根据需要不断增加所支持的国旗种类。不过，这种方式的不好之处是引入了更多的类和代码。&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;98&quot;&gt;&lt;span&gt;这正是：&lt;/span&gt;&lt;/p&gt;&lt;p data-source-line=&quot;100&quot;&gt;&lt;strong&gt;&lt;span&gt;若要降低复杂度，复杂原因搞清楚&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p data-source-line=&quot;102&quot;&gt;&lt;strong&gt;&lt;span&gt;提取方法去耦合，减少分支用类库&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-source-line=&quot;105&quot;&gt;&lt;span&gt;参考书目：代码不朽：编写可维护软件的十大要则，作者：（荷兰）约斯特·维瑟，译者：张若飞，出版社：电子工业出版社&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;h6 data-source-line=&quot;112&quot;&gt;&lt;span&gt;作者简介：王小双，长期从事GJB5000推广、实施、评价、改进的工作，创建《软件工程之思》微信公众号，一直在《软件工程之思》分享GJB5000、CMMI、软件工程的知识和感悟。现致力于GJB5000咨询以及软件过程改进、软件工程能力提升的研究工作。&lt;/span&gt;&lt;/h6&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                          
              &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>