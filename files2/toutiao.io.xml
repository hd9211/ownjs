<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>6da516fae7465adace861f0d1f853646</guid>
<title>越是不确定性的时代，你越需要这份确定！</title>
<link>https://toutiao.io/k/uy0frh6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                  &lt;strong class=&quot;profile_nickname&quot;&gt;我爱程序员&lt;/strong&gt;
                  &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;developerWorks&lt;/span&gt;
                  &lt;/p&gt;

                  &lt;p class=&quot;profile_meta&quot;&gt;
                  &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                  &lt;span class=&quot;profile_meta_value&quot;&gt;我们的产品：《码农周刊》 http://manong.io/ 、《开发者头条》 http://toutiao.io/&lt;/span&gt;
                  &lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>118f57ecec7256cccb847915ee06b5ce</guid>
<title>[译] 我做基础架构学到的 42 件事</title>
<link>https://toutiao.io/k/jcvd7u5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;section data-tools=&quot;新媒体管家&quot; data-label=&quot;powered by xmt.cn&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;↓&lt;/span&gt;&lt;span&gt;推荐关注↓&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzAxMDM0MzQ4Mg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/DSU8cv1j3ibStMRcibJLd4TkNlt53KNZj0A2IicORH4REC4ics87icsx703M5giby2wuofz3dicMsHVcXDMXTM6t6VBQw/0?wx_fmt=png&quot; data-nickname=&quot;开源前哨&quot; data-alias=&quot;osfront&quot; data-signature=&quot;点击获取10万+ star的开发资源库。 日常分享热门、有趣和实用的开源项目～&quot; data-from=&quot;0&quot;/&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;译者序&lt;/span&gt;&lt;/p&gt;&lt;p data-sourcepos=&quot;5:1-5:411&quot;&gt;最近读到了分布式系统研究者 Mahesh Balakrishnan 的一篇博客《42 things I learned from building a production database》。同样做基础架构，看完大佬总结的经验后拍案叫绝，其中有几条简直是真知灼见，故翻译了全文。&lt;/p&gt;&lt;blockquote data-sourcepos=&quot;7:1-7:193&quot;&gt;&lt;p data-sourcepos=&quot;7:3-7:193&quot;&gt;Mahesh Balakrishnan 是 Facebook Delos 项目的负责人。Delos 对标 ZooKeeper，关于 Delos 更多详细细节其团队已经发了两篇 paper，感兴趣的同学可以自行搜索。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-sourcepos=&quot;10:1-10:230&quot;&gt;&lt;strong&gt;译注&lt;/strong&gt;：IC = Individual Contributor，即独立贡献者，Facebook 开发团队的一个术语，&lt;strong&gt;指那些不是经理、不是 team leader、不是任何领导职位的编码人员&lt;/strong&gt;，可以理解为一线开发人员。&lt;/p&gt;&lt;p data-sourcepos=&quot;10:1-10:230&quot;&gt;&lt;span&gt;&lt;strong&gt;以下为正文：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-sourcepos=&quot;13:1-13:24&quot;&gt;对客户（用户）&lt;/h2&gt;&lt;p data-sourcepos=&quot;15:1-15:86&quot;&gt;（1）&lt;strong&gt;让你的客户开心；否则这篇文章的其余部分都无关紧要&lt;/strong&gt;。&lt;/p&gt;&lt;p data-sourcepos=&quot;17:1-17:163&quot;&gt;（2）要注意拥有正确数量的客户（刚开始时，就一个）和合适的客户（他允许你构建关键技术）；并小心地增加这个数字。&lt;/p&gt;&lt;p data-sourcepos=&quot;19:1-19:232&quot;&gt;（3）直接与客户对接。很多团队内部冲突可以通过一句“我刚才和客户谈过，他们说......”来解决。在做基础架构时，我们往往不需要猜测客户的需求，我们可以直接问他们。&lt;/p&gt;&lt;p data-sourcepos=&quot;21:1-21:187&quot;&gt;（4）但要意识到客户可能无法表达他们真正需要的东西；不要只看到需求的表面价值，而要花时间详细地理解他们的用例。阅读他们的代码。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;23:1-23:15&quot;&gt;项目管理&lt;/h2&gt;&lt;p data-sourcepos=&quot;25:1-25:140&quot;&gt;（5）要有一个简单明了的使命宣言来表达你存在的理由。Delos 的宣言是：我们将成为 FB infra 的可靠基础。&lt;/p&gt;&lt;p data-sourcepos=&quot;27:1-27:181&quot;&gt;（6）反复进行任务难度的评估；决策者可能没有时间、倾向、上下文或培训来进行评估，而且可能会把它们弄错（简直是）几个数量级。&lt;/p&gt;&lt;p data-sourcepos=&quot;29:1-29:252&quot;&gt;（7）对 IC 的任务分配很关键; 要求自己处于任何决策的关键路径上，因为你通常比经理更了解问题、代码库和 IC 们的优势。如果你和其他 IC 自己解决任务分配问题，大多数经理都会很高兴。&lt;/p&gt;&lt;p data-sourcepos=&quot;31:1-31:52&quot;&gt;（8）Road-map 是一种手段，而不是目的。&lt;/p&gt;&lt;p data-sourcepos=&quot;33:1-33:215&quot;&gt;（9）如果你有好的和/或一致的经理，要尽可能地理解、支持和包容。如果你没有这样的经理人......好吧，我还没有想明白这个问题，如果你想明白了，请告诉我。&lt;/p&gt;&lt;p data-sourcepos=&quot;35:1-35:325&quot;&gt;（10）使你的项目对组织架构调整有足够的鲁棒性，一个公司的管理层级本质上是脆弱的（毕竟，树是一个单连接的图）；不断地与未来可能接手这个项目的经理进行交流。&lt;strong&gt;不惜一切代价，确保经理人的变动不会给 IC 们带来不公平的职业结果&lt;/strong&gt;。&lt;/p&gt;&lt;blockquote data-sourcepos=&quot;37:1-37:215&quot;&gt;&lt;p data-sourcepos=&quot;37:3-37:215&quot;&gt;通常来说，公司组织架构调整是非常频繁的，经常一年就会调整一次，确保经理人的变动不会带来不公平的职业结果，这点其实很难（我也很想知道怎么做到）。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-sourcepos=&quot;39:1-39:232&quot;&gt;（11）追踪类似的功能在你所在领域的其他项目中花费了多长时间，并以此作为任务难度评估的依据(例如，“功能 X 在系统 Y 中花了 3 年时间；这不是一个 IC 的一半工作”）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;41:1-41:9&quot;&gt;设计&lt;/h2&gt;&lt;p data-sourcepos=&quot;43:1-43:107&quot;&gt;（12）对 API 要保守，对实现要宽松(Be conservative on APIs and liberal with implementations)。&lt;/p&gt;&lt;p data-sourcepos=&quot;45:1-45:80&quot;&gt;（13）但要坚持谨慎地推出新的实现（灰度、分阶段推出）。&lt;/p&gt;&lt;p data-sourcepos=&quot;47:1-47:335&quot;&gt;（14）设计 API 时，写代码完成第一个实现(implementation)；积极计划第二个实现；并希望/祈祷事情将在第三个实现中发挥作用。（When designing APIs, write code for one implementation; plan actively for the second implementation; and hope/pray that things will work for a third implementation.）&lt;/p&gt;&lt;p data-sourcepos=&quot;49:1-49:206&quot;&gt;（15）设计 API 时，首要考虑向新实现的迁移；自定义迁移会造成巨大的时间消耗且不可靠。每个主要的 API 都应该有一个单一的 CLI 驱动的调用来切换实现。&lt;/p&gt;&lt;p data-sourcepos=&quot;51:1-51:187&quot;&gt;（16）作为一个团队去设计；作为个人实现(Design as a team; implement as individuals)。这将使设计成为瓶颈，但这是值得的：抵制并行化设计的冲动。&lt;/p&gt;&lt;p data-sourcepos=&quot;53:1-53:276&quot;&gt;（17）对于存储系统，&lt;strong&gt;在开始时就要重点关注一致性和持久性，而不是可用性；一致性和持久性更难衡量，如果出问题也更难修复&lt;/strong&gt;。由于可用性更容易衡量，所以会有外部压力要求优先考虑它；推到后面去。&lt;/p&gt;&lt;p data-sourcepos=&quot;55:1-55:181&quot;&gt;（18）在测试中维护 API 的多个实现；比较它们之间的结果。这样做的代价是值得的（这将有助于正确性，也可以防止实现细节的泄露）。&lt;/p&gt;&lt;p data-sourcepos=&quot;57:1-57:306&quot;&gt;（19）对设计进行后期绑定（Late-bind）：鼓励团队思考整个设计空间，而不是承诺使用某个特定的解决方案。与一群高智商、有主见的 IC 们一起开头脑风暴会议是一门值得掌握的艺术。鼓励在设计的关键路径上进行粗略的原型设计。&lt;/p&gt;&lt;p data-sourcepos=&quot;59:1-59:102&quot;&gt;（20）对实现者进行后期绑定：一旦设计完成，任何 IC 都应该能够编写代码。&lt;/p&gt;&lt;p data-sourcepos=&quot;61:1-61:179&quot;&gt;（21）拥有适当数量的抽象（这很难）。太少了，你会得到一个混乱的单体；太多了，团队会被理解每个抽象的语义的认知开销所淹没。&lt;/p&gt;&lt;p data-sourcepos=&quot;63:1-63:132&quot;&gt;（22）&lt;strong&gt;避免使用实时性来保证正确性或在机器间比较时钟，除非你有（并理解）时钟的错误界限&lt;/strong&gt;。&lt;/p&gt;&lt;p data-sourcepos=&quot;65:1-65:98&quot;&gt;（23）有一个单一的真理来源。在各种类型的状态之间建立简单的不变量。&lt;/p&gt;&lt;p data-sourcepos=&quot;67:1-67:144&quot;&gt;（24）创造一种文化，让 IC 不断地思考完全不同的设计；不要停止关于假设性替代设计的对话。鼓励好奇心。&lt;/p&gt;&lt;p data-sourcepos=&quot;69:1-69:141&quot;&gt;（25）了解你的 SKU。云计算使人们很容易忽视硬件；但对硬件（和硬件趋势）的理解对设计来说至关重要。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;71:1-71:14&quot;&gt;Code Review&lt;/h2&gt;&lt;p data-sourcepos=&quot;73:1-73:118&quot;&gt;（26）在一个具有快速评审周期的透明代码库中，除非你把关，否则 API 会泄露实现细节。&lt;/p&gt;&lt;p data-sourcepos=&quot;75:1-75:204&quot;&gt;（27）鼓励 IC 对 diffs 进行批判性的思考，并创造一个人们可以自由表达的环境。作为 diffs 作者，你对指出 diffs 问题的人的反应应该是感激，而不是沮丧。&lt;/p&gt;&lt;p data-sourcepos=&quot;77:1-77:149&quot;&gt;（28）对于关键组件，考虑非正式的规则，例如要求两个接受（即两个 LGTM）或甚至是某个子集的 IC 的一致接受。&lt;/p&gt;&lt;p data-sourcepos=&quot;79:1-79:356&quot;&gt;（29）对于关键组件，落地时间不是衡量其重要性的标准：抵制衡量这一标准和优化它的冲动。创造一种让 IC 可以接受 diffs 不能快速落地的文化（创造性的工作——书籍、论文等等——由于高质量 review 的成本，通常需要漫长的 review 周期；为什么代码应该有所不同？）&lt;/p&gt;&lt;p data-sourcepos=&quot;81:1-81:368&quot;&gt;（30）有时候，你只有在一个 IC 写出了一个候选的设计方案后才意识到这个设计是正确的。要抵制说“哦，好吧，让我们先落地，然后再修复它”的冲动；你这样做对 IC 和项目都没有帮助。创造一种文化，让 IC 感觉到如果这不是正确的解决方案，就可以丢弃代码（以身作则）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;83:1-83:9&quot;&gt;策略&lt;/h2&gt;&lt;p data-sourcepos=&quot;85:1-85:253&quot;&gt;（31）以某种节奏问自己：为什么这个团队/项目会存在？如果它不存在，会发生什么（哪个其他团队/系统会填补这个空白）？该团队是如何为公司增加价值的，以及它如何在未来继续这样做？&lt;/p&gt;&lt;p data-sourcepos=&quot;87:1-87:427&quot;&gt;（32）跟踪公司内你所在领域的每个其他主要项目：你应该能够比他们自己的 IC 更好地解释他们的技术设计。抓住任何机会去与其他类似项目的负责人辩论项目范围：你应该能够阐明你的项目如何适合更大的生态系统。团队间的竞争是健康和必要的。与这些项目中的 IC 交朋友：他们比公司里的其他人更了解你的技术挑战。&lt;/p&gt;&lt;p data-sourcepos=&quot;89:1-89:251&quot;&gt;（33）不要在原始性能或效率上与其他团队竞争；这将升级为一场军备竞赛，两个团队都会浪费时间为工作负载优化他们的系统，产生苹果与橘子的比较，等等。在基本设计特性上进行竞争。&lt;/p&gt;&lt;p data-sourcepos=&quot;91:1-91:119&quot;&gt;（34）如果客观上有人在你的使用场景有更好的系统，并想接手它，那就去找别的事做吧。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;93:1-93:15&quot;&gt;可观测性&lt;/h2&gt;&lt;p data-sourcepos=&quot;95:1-95:50&quot;&gt;（35）测量是一种手段，而不是目的。&lt;/p&gt;&lt;p data-sourcepos=&quot;97:1-97:77&quot;&gt;（36）你应该能够在你的客户之前发现你的服务中的问题。&lt;/p&gt;&lt;p data-sourcepos=&quot;99:1-99:261&quot;&gt;（37）在尽可能的情况下，可观察性应该在 API 之上，并在实现(implementations)之外。这可以确保你可以切换实现并比较性能，而不会在测量代码中引入错误。它还可以简化实现；并降低新实现的门槛。&lt;/p&gt;&lt;p data-sourcepos=&quot;101:1-101:125&quot;&gt;（38）任何不容易测量的东西（例如，一致性）往往被遗忘；要特别注意那些难以测量的属性。&lt;/p&gt;&lt;p data-sourcepos=&quot;103:1-103:176&quot;&gt;（39）尽可能将关键的检查（例如一致性）推到部署本身；尽量减少对外部服务的检查（否则你现在有两件事要跟踪，而不是一件）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;105:1-105:9&quot;&gt;研究&lt;/h2&gt;&lt;p data-sourcepos=&quot;107:1-107:224&quot;&gt;（40）追踪你所在领域的研究成果。很快你就会和你的 IC 有一个速记，可以实现超快的沟通。&quot;如果我们尝试项目 X 中的那个东西呢？并将其与项目 Y 中的技术相结合？&quot;。&lt;/p&gt;&lt;p data-sourcepos=&quot;109:1-109:221&quot;&gt;（41）尝试新事物。在可行的解决方案内，偏向于新的东西。抵制逐字逐句地复制设计的冲动。每一个重要的系统在某些时候都只是某人头脑中的一个半生不熟的想法。&lt;/p&gt;&lt;p data-sourcepos=&quot;111:1-111:380&quot;&gt;（42）写论文。为那些对你正在做的事情没有任何背景的听众写作，将迫使你检查和澄清你的假设。论文可以使你更容易雇用到优秀的人才，也更容易让他们上岗。研究生应该能够向你解释你的设计（并发现错误！）。当被要求做讲座时，尽量答应。它们很有趣，而且你可以认识新的人。&lt;/p&gt;&lt;hr/&gt;&lt;p data-sourcepos=&quot;113:1-113:74&quot;&gt;&lt;/p&gt;&lt;p data-sourcepos=&quot;113:1-113:74&quot;&gt;&lt;em&gt;原文：&lt;/em&gt;&lt;em&gt;https://maheshba.bitbucket.io/blog/2021/10/19/42Things.html&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;译者：多颗糖&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;- EOF -&lt;/span&gt;&lt;/p&gt;&lt;section donone=&quot;shifuMouseDownCard(&#x27;shifu_c_030&#x27;)&quot; label=&quot;Copyright Reserved by PLAYHUDONG.&quot;&gt;&lt;section&gt;&lt;span&gt;推荐阅读&lt;/span&gt;  &lt;span&gt;点击标题可跳转&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;1、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5OTA1MDUyMA==&amp;amp;mid=2655471736&amp;amp;idx=1&amp;amp;sn=65f54ec900a1ff715d94e79fdb3a6de3&amp;amp;chksm=bd72840f8a050d19568169fc3a9e895d2b9c1c33b22f0839446ebbc3a61f14798f8aba600aa9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;从前，有两个卖水果的公司……&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;从前，有两个卖水果的公司……&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5OTA1MDUyMA==&amp;amp;mid=2655471906&amp;amp;idx=1&amp;amp;sn=8a2b94f3de92d7bc2f40b6b1ae06d3ad&amp;amp;chksm=bd7285558a050c437b36213879246d2a65802d5eb8c2a25b97c80a79ad1ed3a17badf946f45e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;因为爬虫失控，CTO 和程序员双双被判刑&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;因为爬虫失控，CTO 和程序员双双被判刑&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5OTA1MDUyMA==&amp;amp;mid=2655472100&amp;amp;idx=1&amp;amp;sn=e0385c88f3e5a547bd2e8bac59e2b56c&amp;amp;chksm=bd7285938a050c85ab99d383f4ca15d7021645889f0911ad4c05fe5669aee4c5940a3493cd09&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;如果美国把根域名服务器封了，中国会从网络上消失吗？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;如果美国把根域名服务器封了，中国会从网络上消失吗？&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;关注「程序员的那些事」加星标，不错过圈内事&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MjM5OTA1MDUyMA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylMenv4jgq9Zhowmw7PRMicScRC0gcEH6goyGGljlOf2d5xp8Wib3dIHVdGJkB6droT1ZJyialstPq8g/0?wx_fmt=png&quot; data-nickname=&quot;程序员的那些事&quot; data-alias=&quot;iProgrammer&quot; data-signature=&quot;日常分享程序员相关的精选文章和热点资讯；外加每天一张程序员减压的IT趣图，笑的有高度；还有难得一见的程序员相亲，一不小心就脱单了 :)&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;点赞和在看就是最大的支持&lt;/span&gt;&lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f7c8889c6b806bdd185e8322a56287bf</guid>
<title>博文推荐｜深入解析 BookKeeper 多副本协议（一）</title>
<link>https://toutiao.io/k/8vk008d</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;blockquote&gt;&lt;p&gt;本文翻译自《A Guide to the BookKeeper Replication Protocol (TLA+ Series Part 2)》，作者 Jack Vanlightly。原文链接：https://medium.com/splunk-maas/a-guide-to-the-bookkeeper-replication-protocol-tla-series-part-2-29f3371fe395。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;h1&gt;译者简介&lt;/h1&gt;&lt;p&gt;王嘉凌@中国移动云能力中心，移动云Pulsar产品负责人，Apache Pulsar Contributor，活跃于 Apache Pulsar 等开源项目和社区&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;我们知道关系型数据库中的数据是按表结构来存储，客户端可以将数据存储到表中以及从表中读取数据。Apache BookKeeper 中的数据是按日志结构来存储，客户端以日志的形式读写数据。日志结构是一种只支持数据追加操作的简单数据结构，支持多个客户端同时读取，以及非破坏性读取。&lt;/p&gt;&lt;p&gt;作为数据结构，日志和队列的功能非常相似，区别在于日志支持多个客户端同时独立地从不同位置读取完整的数据。因此，日志必须支持非破坏性读取。而队列则是破坏性读取， 队列的头部元素被读取后会被删除。这意味着队列中的每个元素只会被一个客户端读取到。&lt;/p&gt;&lt;p&gt;作为 Apache Pulsar 数据存储层的 Apache BookKeeper，本身也是一个复杂的分布式系统。BookKeeper 利用多副本机制来实现数据的安全和高可用。多副本指的是每一份 entry 数据都会被复制到多个节点保存，以便在发生部分节点故障时仍然可以提供读写服务，并且保证已保存的数据不会丢失。BookKeeper 使用一套独有的多副本协议，这个协议规定了多个服务节点之间如何协同来实现服务的高可用以及保证数据的安全。&lt;/p&gt;&lt;h1&gt;基于分片的日志数据结构&lt;/h1&gt;&lt;p&gt;诸如 Apache Kafka 和 RabbitMQ 这样使用基于队列和日志的消息队列，都是将每个队列或分区的数据视为一个整体来存储，这样一来整个数据必须全部存储在同一个存储节点。BookKeeper 使用了一套基于分片的日志数据结构，每个日志数据由一系列的分片数据（Segment）串联组成。Pulsar 的一个 Topic 分区 数据实际上是分为多个数据分片来保存。&lt;/p&gt;&lt;p&gt;我们知道每个 Pulsar Topic 都有一个唯一的 Pulsar broker 作为 owner，这个 broker 负责给所属的 Topic 创建数据分片，并将这些数据分片进行串联以便在逻辑上组成一个完整的日志数据。 &lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;80&quot; data-backw=&quot;562&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.1425925925925926&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0ZYnib9AbuqDwN7abdiaXOOWPlQseAkmjic5zfNFy3lTtex1xMzaltbNkj8cV9DT5xArkkWmFamk9mEQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图1：Pulsar Topic 的数据由一组数据分片串联组成&lt;/span&gt;&lt;/p&gt;&lt;p&gt;BookKeeper 将这些数据分片称为 Ledger，并将它们保存在 BookKeeper server 节点（称为 bookie 节点）。&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;412&quot; data-backw=&quot;562&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7320837927232635&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0ZYnib9AbuqDwN7abdiaXOOWPDysaXNr1wmic17ZQbeOoibYlmF86zdpJ3KOmUttRrRaV7QTXl9QBh3CQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;907&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2：Pulsar broker 将 topic 数据存储到多个 Bookie 节点&lt;/span&gt;&lt;/p&gt;&lt;p&gt;BookKeeper 多副本协议和每个 ledger 的生命周期息息相关。多副本协议本身的实现封装在 BookKeeper 客户端类库中， 每个 Pulsar broker 通过调用BookKeeper 客户端类库中的接口来和 BookKeeper 进行交互，如创建 ledger，关闭 ledger，以及读写 entry。这些接口背后包含了非常复杂的协议逻辑，在本篇博客中我们会逐层分析并展示协议的实现细节。&lt;/p&gt;&lt;p&gt;首先，创建 ledger 的客户端即为这个 ledger 的唯一owner，只有 owner 可以往 ledger 里写数据。对于 Pulsar 来说，这个客户端就是作为分区 Topic owner 的 broker，Broker 负责创建 ledger 来组成这个 Topic 的数据段。当这个客户端由于某些原因发生故障时，另一个客户端（对于 Pulsar 来说就是另一个 broker）会介入并接管这个 Topic，这个时候需要修复之前的 ledger 中处于正在复制（under-replicated ）状态的 entry 数据（即 recovery 操作）并将 ledger 关闭。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;220&quot; data-backw=&quot;562&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.39166666666666666&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0ZYnib9AbuqDwN7abdiaXOOWP0XCURyDexdFbeMX70zrZ0uiaAeM8CQeCoVBwNcuazwzicdSKOhOAEEyQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图3: Ledger 的生命周期&lt;/span&gt;&lt;/p&gt;&lt;p&gt;每个 Pulsar topic 仅包含一个 open 状态的 ledger 和多个 close 状态的 ledger。所有的写操作都会写入到 open 状态的 ledger，而读操作则可以从任何 ledger 中读取数据。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;108&quot; data-backw=&quot;562&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.1925925925925926&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0ZYnib9AbuqDwN7abdiaXOOWPricxEhy8kACQA3Ev4G8B9o0NialRDAGXsvwO3Bd5K4X1TbTicDyNZiaibjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图4: 写操作只会写入到 open 状态的 ledger&lt;/span&gt;&lt;/p&gt;&lt;p&gt;每个 ledger 都会保存到多个 bookie 节点上，每个 ledger 和存有这个 ledger 的 bookie 池（称为 ensemble）的对应关系保存在 ZooKeeper。当 open 状态的 ledger 大小达到了阈值，或者这个 ledger 的 owner 发生了故障，就会关闭这个 ledger 并重新创建一个新的 ledger。根据配置的多副本参数，新创建的 ledger 可能会被保存到另一组 bookie 池上。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;346&quot; data-backw=&quot;562&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6153846153846154&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0ZYnib9AbuqDwN7abdiaXOOWPCSZ4g5p2t85WwYBFTM4MjmNA8e8FibutqrwBTldGRbUhkdBU5Qjl0Sg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;767&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图5：Ledger 数据的多个副本保存在多个 bookie 节点，每个 Ledger 的元数据以及一个 Topic 包含的 ledger 信息保存在 ZooKeeper&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;数据写入 ledger 的过程&lt;/h1&gt;&lt;p&gt;BookKeeper 包含以下 ledger 多副本配置相关的参数：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• Write quorum (每份 entry 数据需要写入多少个 bookie 节点), 简称 WQ。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• Ack Quorum (需要从多少个 bookie 节点收到写入成功的响应后可以确认这份 entry 写入成功 ), 简称 AQ。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• Ensemble size (用于存储 ledger 数据的 bookie 池的节点数量), 简称 E。当 E &amp;gt; WQ 时，entry 数据会交错地写入到不同的 bookie 节点。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;一条 entry 数据实际写入的 bookie 节点的集合成为写入集合。当 E &amp;gt; WQ 时，相邻的 entry 的写入集合可能会不一样。&lt;/p&gt;&lt;p&gt;Pulsar 为每个 Topic 暴露了设置 AQ、WQ、E 参数的 API 来自定义副本设置。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;596&quot; data-backw=&quot;562&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.0612855007473843&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0ZYnib9AbuqDwN7abdiaXOOWPs7UXQFJrDP5NLQgdLXKAmhbF5QCOzdLZsVzb80xicbFyevAOU3x16vw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;669&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图6：WQ=3，AQ=2 时的消息写入和确认&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;最后添加确认 (Last Add Confirmed, LAC)&lt;/h1&gt;&lt;p&gt;BookKeeper 客户端会持续更新已确认写入的 entry 中连续且最高的 entry ID，我们称之为 Last Add Confirmed (LAC)。这是一条水位线，高于这个 entry ID 的 entry 都还没有被确认写入，而低于和等于这个 entry ID 的 entry 都已经被确认写入。每一条发往 bookie 的 entry 数据中包含了当前最新的 LAC，这样每个 bookie 都可以知道当前 LAC 的值，尽管有一些延迟存在。我们还会在下文看到 LAC 除了作为已提交 entry 的水位线，还发挥着其他作用。&lt;/p&gt;&lt;h1&gt;Ledger 数据段&lt;/h1&gt;&lt;p&gt;Ledger 本身也可以分成一个或多个数据段（fragment）。当 Ledger 创建时，包含了一个数据段，分配了一个 bookie 池用于存储这个 Ledger 的数据。当发生某个 bookie 写入失败时，客户端会用一个新的 bookie 来替代。这个时候会创建一个新的数据段，并重新发送未确认的 entry 数据和之后的 entry 数据到新的 bookie 上。当 bookie 再次写入失败时，又会再次创建一个新的数据段，以此类推。Bookie 写入失败并不意味着这个 bookie 节点不可用，网络波动等其他情况也会造成单次的写入失败。不同数据段的数据存储在不同的 bookie 池上。数据段也通常被认为是写入集合（Ensemble）。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;572&quot; data-backw=&quot;562&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.0170261066969353&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0ZYnib9AbuqDwN7abdiaXOOWPc9bg9MyP91X3hicQAjibKibfuTUK3bjibGq3HYdbwkghKDeqNhYdcjoeicA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;881&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图7：第二个数据段的创建过程&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Ledger 数据段可以看作是告诉 BookKeeper 客户端去哪里找到某个 ledger 中的 entry 数据的元数据。Bookie 节点自身是不知道这些元数据信息的，它们只负责存储接收到的 entry 数据并创建基于 ledger ID 和 entry ID 的索引。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.8425324675324676&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0ZYnib9AbuqDwN7abdiaXOOWPwkSc2zTo1MVXllhmB7YiaDRMkTHwYZyYfwmX7XR2nKLGUoAibA29r97g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;616&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图8：往 B3 bookie 节点写入 entry 1000 失败并导致 ledger 创建第二个数据段 &lt;/span&gt;&lt;/p&gt;&lt;h1&gt;从 ledger 读取数据的过程&lt;/h1&gt;&lt;p&gt;从 ledger 中读取数据的操作分为以下几种情况：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;p&gt;• 正常读取 entry 数据&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 长轮询读取 LAC 数据&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• Quorum LAC 机制下的读取数据 &lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;• 恢复性读取数据&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;和写数据不一样的是，我们只需要读取一个存有数据的 bookie 节点就可以得到想要的数据。如果这次读取失败了，也只需要从存有这个数据其他副本的 bookie 节点上重新读取数据即可。&lt;/p&gt;&lt;p&gt;客户端通常只希望读取到已确认的数据，所以只会读取到 LAC 值标识的位置。在读取历史数据时，bookie 节点会依据当前的 LAC 值来通知客户端何时停止读取。当客户端读取到 LAC 值并停止读取时，可以发起长轮询读取 LAC 数据。这个请求会先被 bookie 挂起，直到有新的 entry 数据被确认时才响应并返回新的 entry 数据。&lt;/p&gt;&lt;p&gt;另外两种读取数据的情况主要发生在数据修复时，我们稍后再介绍。&lt;/p&gt;&lt;h1&gt;完成不同的操作需要不同的响应数量&lt;/h1&gt;&lt;p&gt;完成不同的操作需要从 bookie 节点接收到的成功响应的数量不一样。比如，对于正常读数据的操作，只需要从一个 bookie 节点成功收到响应即可完成。而有些操作则需要从多个 bookie 节点（quorum）收到成功的响应才可完成。&lt;/p&gt;&lt;p&gt;这些操作根据需要收到响应数量的不同，可以分为以下几种类型：&lt;/p&gt;&lt;p&gt;Quorum Coverage (QC) 和 Ensemble Coverage (EC) 都满足于以下定义（以下两种定义本质上相同，只是说法不同），QC 和 EC 的区别仅在于“集合”的范围 ：&lt;/p&gt;&lt;p&gt;对于 Quorum Coverage (QC) 来说，这个集合是指某个 entry 的写入集合。QC 主要用于保证单个 entry 数据一致性的场景，如校验单个 entry 写入操作是否已被客户端确认。对于Ensemble Coverage (EC) 来说，这个集合是指存储当前 ledger 数据段对应的 bookie 池，EC 主要用于保证 ledger 数据段一致性的场景，如设置 ledger 的 fence 状态。&lt;/p&gt;&lt;p&gt;WQ 和 AQ 主要用于写数据，而 QC 和 EC 主要用于 ledger 修复过程。&lt;/p&gt;&lt;h1&gt;Ledger 修复的过程&lt;/h1&gt;&lt;p&gt;前面我们讲到每个 ledger 只有一个客户端作为 owner，当这个客户端不可用时，另一个客户端就会介入并触发 ledger 修复过程然后关闭这个 ledger。对于 Pulsar 来说就相当于作为一个 Topic owner 的 broker 变得不可用，然后这个 Topic 的所有权转移到另一个 broker 上。 &lt;/p&gt;&lt;p&gt;Ledger 修复过程包括找到最高的已被 bookie 确认的 entry ID，保证在这之前的每个 entry 都已复制了足够多的副本数量。之后将这个 ledger 关闭，此时会将这个 ledger 的状态设置为 CLOSED，并将最新的 entry ID 设置为最后被确认的 entry ID。&lt;/p&gt;&lt;h2&gt;如何防止脑裂&lt;/h2&gt;&lt;p&gt;BookKeeper 是一个分布式系统，这意味着网络波动可能会导致集群被分隔成两个或者更多的区块。我们设想如果一个客户端和 ZooKeeper 断开连接，那么这个客户端就被认为已不可用，另一个客户端会接管这个客户端负责的 ledger 并开始 ledger 修复流程。但这个客户端可能仍在正常运行，它可以正常的连接到 BookKeeper 集群，于是就会出现两个客户端试图同时操作同一个 ledger，这种情况就属于脑裂。脑裂是指一个分布式系统由于网络波动分裂为多个独立的系统，在一定时间后网络恢复导致的数据不一致的情况。&lt;/p&gt;&lt;p&gt;BookKeeper 引入了 fence 这个概念来防止脑裂的发生。当第二个客户端 （例如另一个 Pulsar broker）试图开始 ledger 修复流程时，会先将 ledger 设置为 fence 状态，在这个状态下 ledger 会拒接所有新的写入请求。当足够多的 bookie 节点将这个 ledger 状态设置为 fence 时，就算第一个客户端仍然处于正常运行状态，它也不能再进行任何新的写入操作。然后第二个客户端就可以在没有其他客户端会继续写入数据或者试图修复同一个 ledger 的安全状态下开始 ledger 修复流程。 &lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;455&quot; data-backw=&quot;562&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.8106382978723404&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0ZYnib9AbuqDwN7abdiaXOOWPzjg5MZ5QM46UdU9wPEZTj680ecHg98zXia3E749u4D6yR0PiacGYWFsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;940&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图9：一个新的 Topic owner 开始将 ledger 设置为 fence，原先的 owner 写入新数据时无法写入 Ack Quorum 设定的副本数，则无法完成写入&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;修复流程第一步 — 设置 fence 状态&lt;/h2&gt;&lt;p&gt;将 ledger 设为 fence 状态，并确认 LAC 的值。&lt;/p&gt;&lt;p&gt;Fence 请求实际上是一次 Ensemble Coverage 类型的读请求，获取 LAC 的值并带有 fencing 标识。每个 bookie 节点收到这个请求时会将这个 ledger 的状态设为 fence，并返回这个节点上对应 ledger 的 LAC 值。当客户端从足够多的 bookie 节点收到响应时，就表示请求成功可以进行下一步操作。那么从多少个 bookie 节点收到响应才算足够呢？&lt;/p&gt;&lt;p&gt;我们将 ledger 设置为 fence 状态是为了防止之前的客户端继续往 ledger 里写入数据。所以我们只要保证还没有将这个 ledger 设置为 fence 状态的 bookie 节点的数量小于设置的 Ack Quorum 值，那么之前的客户端因为无法收到足够多的写入确认而无法写入新数据。新的客户端发起的 fence 操作不需要等到所有的 bookie 节点都将这个 ledger 设置为 fence，只需要满足还没有设置为 fence 状态的 bookie 节点数小于设置的 Ack Quorum 就可确认 fence 操作完成。满足这个条件所需要收到的响应数量就是 Ensemble Coverage。&lt;/p&gt;&lt;h2&gt;修复流程第二步 — 修复 entry 数据&lt;/h2&gt;&lt;p&gt;接下来，客户端从 LAC + 1 的 entry ID 开始发送恢复性读取数据的请求，并将这些 entry 数据重新写到新的 bookie 池中。写操作属于幂等操作，也就是说如果这个 entry 已经写入到了某个 bookie 节点，再次向这个节点写入同样的 entry 不会造成数据重复写入。客户端会持续进行读和写的操作直到读完所有数据。确保在关闭 ledger 之前，这个 entry 的写入集合中的所有 bookie 节点都写入了该 entry 的副本。&lt;/p&gt;&lt;p&gt;正常的读操作只需要从一个 bookie 节点接收到响应。与之不同的是，Recovery读操作需要根据从这个 entry 的所有写入集合的 bookie 节点上收到的响应内容来明确这个 entry 是否已确认。具体来说有以下两种情况：&lt;/p&gt;&lt;p&gt;如果所有响应都已收到，但两个阈值都未达到，那就无法判断这个 entry 是否已确认，修复流程就会终止（可能存在收到其他错误类型响应的情况，如网络波动，这种情况无法判断 entry 是否已成功写入对应 bookie 节点）。修复流程可以重复执行直到可以明确每个 entry 最终的确认状态。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;600&quot; data-backw=&quot;562&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.0669781931464175&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0ZYnib9AbuqDwN7abdiaXOOWPz7zAaYiaVicAwe4sHtQWdW6OxYeHsV6oglAspjue9o7SuYwCIW19M9gw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;642&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图10：新的客户端在读取 entry 3 时收到了足够多的数据不存在请求，可以判断 entry 3 的状态为未确认。然后保证到 entry 2 为止的数据都复制到足够多的副本数&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;修复流程第三步 — 关闭 Ledger&lt;/h2&gt;&lt;p&gt;一旦明确了所有已确认的 entry ，且这些 entry 复制了足够多的副本数，客户端就会关闭 ledger。关闭 ledger 的操作主要是对 ZooKeeper 上 ledger 元数据的更新，将状态设置为 CLOSED，并将 Last Entry Id 设置为最新的已确认的 entry ID。这些操作和 bookie 本身不相关，bookie 也不会感知 ledger 是否被关闭，bookie 自身没有 open 或 closed 的概念。&lt;/p&gt;&lt;p&gt;ZooKeeper 上元数据的更新是一个基于版本控制的 CAS 操作。如果有另一个客户端同时在修复这个 ledger 并且已经将 ledger 关闭，那么这次 CAS 操作就会失败。通过这种方式可以防止多个客户端同时对同一个 ledger 进行修复操作。 &lt;/p&gt;&lt;h1&gt;总结&lt;/h1&gt;&lt;p&gt;本篇博客介绍了 BookKeeper 多副本协议的大部分实现内容。需要记住的重点是，bookie 节点只是单纯用来存储和读取 entry 数据的存储节点，在 BookKeeper 客户端中包含了创建 ledger、选择存储 ledger 的 bookie 池、创建 ledger 数据段的操作，通过 Write Quorum 和 Ack Quorum 来保证多副本的机制，以及在发生故障时对 ledger 进行修复和关闭等一系列逻辑。&lt;/p&gt;&lt;h1&gt;相关阅读&lt;/h1&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMjkzMjA1Ng==&amp;amp;mid=2247489945&amp;amp;idx=1&amp;amp;sn=a9dcb508a14eaa96052e783ef79f0e75&amp;amp;chksm=f9c503aeceb28ab8463c1149dd5a6a3c88b6d631d82621813f009bdc676619fb17511faf065d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;博文推荐｜深入解析Apache BookKeeper 系列：第一篇 — 架构原理&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;•&lt;/span&gt; &lt;span&gt;博文推荐｜深入解析Apache BookKeeper 系列：第一篇 — 架构原理&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;• &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMjkzMjA1Ng==&amp;amp;mid=2247488980&amp;amp;idx=2&amp;amp;sn=7ab01fd746384dbcd934ae0d3c3f3e7b&amp;amp;chksm=f9c50fe3ceb286f57035082aeac2d407aded4f013c9e10a029fcadce179a49dd4aca984813c0&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;博文干货｜5张图带你快速入门 Pulsar 的存储引擎 BookKeeper&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;博文干货｜5 张图带你快速入门 Pulsar 的存储引擎 BookKeeper&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;📣 Pulsar Storage 特别兴趣小组（SIG）已成立！&lt;span&gt;扫描下方&lt;/span&gt;&lt;span&gt;🤖️ &lt;/span&gt;&lt;span&gt;Pulsar Bot 二维码，&lt;/span&gt;回复 &lt;span&gt;BookKeeper&lt;/span&gt; 加入 Pulsar Storage 讨论群。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/4ibRRsibIGr0ZSe03QyMcdYDoPThku7hjSJibg8nI1vtB8bde5jr1XSdz5iaPJDp7y1aOHupWAIQT1Qr3c1iafE5HXw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;扫/码/加/入&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;▼ 关注「Apache Pulsar」，获取更多技术干货 ▼&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUyMjkzMjA1Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/4ibRRsibIGr0Y7icPiahxgXFRw8a0xAIxOhPqYtRDr0IRNpGRl2oSfGHuvkG9VtahW9thH3btBGXJu9y2dZgb3oOuQ/0?wx_fmt=png&quot; data-nickname=&quot;ApachePulsar&quot; data-alias=&quot;ApachePulsar&quot; data-signature=&quot;Apache 软件基金会顶级项目，下一代云原生分布式消息流平台，集消息、存储、轻量化函数式计算为一体，采用计算与存储分离架构设计，支持多租户、持久化存储、多机房跨区域数据复制，具有强一致性、高吞吐、低延时及高可扩展性等流数据存储特性。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>0e801f88e879bb9a638e676ac8f47056</guid>
<title>闲鱼互动玩法标准化建设</title>
<link>https://toutiao.io/k/6e2ba5q</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;h2 data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;现在大家对互动玩法应该已经司空见惯，很多APP或多或少都会在业务场景中采用各式各样的互动玩法来吸引用户，让用户在参与互动的同时，得到平台权益，进而提升平台心智，达到促活拉新目的。随着闲鱼规模变大，平台权益扩展，基于任务+抽奖的互动玩法在日常以及大型营销活动中应用越来越多。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;痛点分析&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;263&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.4547738693467337&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1Fdm5cdKVpe8qGib9XXKKHJPB98gwSFHc0xwMMf6avz059Pm3rpf8DM5ZKvhs0gkKeYHnichCKchibnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1592&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对于活动中的互动玩法，从设计到研发再到验收上线的流程大致如上，在具体实践过程中，我们经常会遇到以下问题：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;底层能力抽象不够：业务开发同学需要关注玩法底层交互逻辑，不同活动需重复开发，开发成本高；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;问题难排查：互动玩法的配置包含抽奖、任务、积分等多个平台，链路复杂涉及数据交互多，其中一个环节配置错误，都有可能出现任务完成不了、抽奖次数不增加、抽奖不成功等问题，链路复杂无疑给排查问题增加了不少困难；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;配置问题后知后觉：抽奖、任务、积分等配置问题运营无法自助排查，往往需要在测试过程中由测试或者技术同学介入排查，占用开发时间，严重影响活动上线效率。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;span/&gt;&lt;br/&gt;&lt;/section&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;技术方案&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;针对上面的痛点，对问题进行抽象，我们期望建设互动玩法标准化，当前阶段关键解法主要是以下三点：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;抽象互动能力：实现互动玩法标准化交互，沉淀面向开发者的互动玩法SDK，提高开发效率；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;建设自助排查能力：在实现玩法在互动配置平台自测环节中，提供问题调试排查能力，引导运营自助解决配置问题，只有自测通过后才能提测，从而降低测试成本；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;3&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;统一互动配置平台：通过统一的闲鱼互动配置平台串联抽奖、任务、积分配置，建立标准流程，校验关键配置的准确性，让运营在提测前保证玩法整个流程顺畅。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;434&quot; data-backw=&quot;524&quot; data-ratio=&quot;0.8275862068965517&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1Fdm5cdKVpe8qGib9XXKKHJPPuqnYMs5V3NGLw5g3clicatEQz2fKtq28l1TfDa7oBwUS40SIwxs86g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1276&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;互动任务标准化&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;大多数情况下，抽奖活动中都会有任务玩法，用户需要通过完成任务来增加抽奖次数。闲鱼的任务体系是使用淘系任务中心进行搭建的。任务与抽奖的链路如下图所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;109&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.1882793017456359&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1Fdm5cdKVpe8qGib9XXKKHJPNX4GMGzCcIE1iccUlvOttAO82AyVHtxMzXlBuLViaIu6R8msYgEf41UA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1604&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;闲鱼的互动任务有以下几种类型：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;仅跳转：点击任务按钮，进行页面跳转，并将任务参数以url参数形式带到后链路，后链路在特定操作后进行任务上报；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;完成并跳转：点击任务按钮，在页面跳转同时进行任务上报；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;浏览任务：浏览任务与仅跳转任务类似，除了可以在后链路进行任务上报之外，也可以在当前页面进行任务上报。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;关于任务上报，目前闲鱼主要有两种方案：前端上报、事件采集上报。&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;前端上报：当用户领取任务后，在定制场景下请求任务中心上报服务，完成任务；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;事件采集上报：闲鱼通用事件采集系统对用户特定行为进行采集，采集到行为信息后请求任务中心上报服务，完成任务。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;下面以两个典型的任务来介绍任务上报链路，分别是会场浏览任务和关注闲鱼号任务，前者是前端进行任务上报，后者是事件采集进行上报。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;217&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.3762575452716298&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1Fdm5cdKVpe8qGib9XXKKHJPtmzxeYdy6RC2RUH1ZIo4ic4n8IianptHosu6v4ZXxRu7mUO7JXKic9muQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1988&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在互动任务标准化建设过程中，前端在淘系任务中心的列表组件基础上，进行二次封装，简化组件配置，并且加一些闲鱼的定制能力，最终形成闲鱼通用的任务列表组件。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;332&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5747549019607843&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1Fdm5cdKVpe8qGib9XXKKHJPjyQAMnicExhkDnPfAhtNTxJ55icPQVEgtDk4pdyNZHlCIbDrck7I7JPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1632&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;互动抽奖标准化&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;前端在实现抽奖标准化中，主要是抽象抽奖能力，将抽奖通用逻辑封装成SDK，提高业务开发效率。&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;在进行抽奖之前，先初始化活动数据，获取用户在当前活动中的状态以及活动本身的相关数据；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持登录状态校验，允许用户未登录时访问页面，当用户进行抽奖时，执行登录逻辑，并且登录返回活动后重新进行活动初始化；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;3&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持页面聚焦后，自动刷新活动数据，重新初始化活动；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;抽奖之后，在展示当前抽奖结果的同时，支持自动更新中奖纪录，并且刷新活动数据；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;5&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;测试过程中，当抽奖出现异常时，可以及时排查出问题，提供解决问题方法。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; Oliver &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;@ali/pcom-fin-oliversdk&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; oliverSdk = &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; Oliver({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  activityId: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;544&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  options: {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    oliverParams: {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      needBenefits: &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      needDetails: &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      needHadWin: &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      extend: {}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    autoUpdate: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    checkLogin: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  dataWatcher: &lt;span class=&quot;code-snippet__function&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;data&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;oliverSdk.draw(params: { &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  extend?: PlainObject;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  idleOliverBenefitCode?: &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}).then(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;res&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;oliverSdk.getLogs(params: {pageSize: &lt;span class=&quot;code-snippet__built_in&quot;&gt;number&lt;/span&gt;; curPage: &lt;span class=&quot;code-snippet__built_in&quot;&gt;number&lt;/span&gt;}).then(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;res&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;oliverSdk&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.update&lt;/span&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;为了降低业务上层开发同学对SDK的使用成本，考虑提供基于集团Rax方案的Hook能力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4297385620915033&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1Fdm5cdKVpe8qGib9XXKKHJPFaX3GxoJw0AFplZOWU3kyAQ6aJpiappVoOwCIefLI8ZZbgLVoWFP1TA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1224&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;业务层开发只需在调用方法时，依据数据变化来进行交互展示。这样既减少了上层代码量，同时降低开发成本。下面是Hook的使用代码示例：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; useOliver &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;@ali/pcom-fin-oliver-raxhook&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; { oliverData, drawResultData, draw } = useOliver({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;activityId&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;544&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;useEffect(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; availableTimes = oliverData?.availableTimes || &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}, [oliverData]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;useEffect(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}, [drawResultData]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;draw();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;以往在抽奖活动测试验收过程中，服务端返回的异常code对于运营和测试同学来说非常不友好，没有直接展示异常原因，每次都需要技术同学介入来排查问题。为了快速定位问题解决问题，我们考虑提供问题调试能力，让运营和测试同学可以自助排查问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;抽奖SDK中有一个日志存储功能，在测试环境中将用户操作记录和服务端返回的数据存储在本地，另外提供一个日志列表页面，在页面中对日志进行解析，提供异常code的具体原因并提供解决方法，展示给运营和测试同学。自助排查功能使用流程如下图所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31425091352009743&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1Fdm5cdKVpe8qGib9XXKKHJPiazhXFZldU1ibg6oJ1bicJFmZIBtvqKCVx9gtIUKOvzLs9KF7pQ79Lw5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1642&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;&lt;span&gt;互动配置标准化&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;互动玩法配置链路复杂，为了降低配置成本，减少配置错误，我们提出配置标准化方案。标准化配置主要解决以下三个问题：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;标准流程配置：引导运营一步一步进行配置，将复杂的配置链路流程化，避免有所遗漏；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;配置校验：在配置过程中，会拉取当前步骤中对应的配置进行校验，提示错误配置；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;完整链路测试：在活动提测之前，需要运营自测活动配置，在通用测试页面中，完成做任务增加抽奖机会到抽取奖励减少抽奖机会这一完整链路，只有自测通过后才能提测。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;目前建设的抽奖标准化配置流程如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3650485436893204&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1Fdm5cdKVpe8qGib9XXKKHJPy9ibOSJXLzHHbooNUBBABnaicuicGHGt0BWVo3yiaK8TrROGJhdQiaXSJSQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1030&quot;/&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;选择投放计划：拉取当前运营同学在抽奖配置平台中配置的投放计划列表，选择投放计划后展示投放计划中的权益配置；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;权益确定：选择投放计划中的权益，并进行限制规则配置；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;3&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;选择兜底投放计划：支持选择当前投放计划的兜底计划；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;高级配置：确定权益发放安全码配置以及抽奖后扣减的积分配置。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;效果&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5106666666666667&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1Fdm5cdKVpe8qGib9XXKKHJPCcHsqweDQqy7LspY4QIicORGia06UYmdp0HKtq6ibVvBOuLo3ic6xzNFaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;互动玩法的标准化实现在闲鱼内多个互动场景中落地，如双11的节后鱼生活动、五福主题的鱼生有福活动、闲鱼币狂欢日、天天赚钱等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;前端对互动逻辑的封装抽象，互动模块开发效率有显著提升，开发工时相对减少50%；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;运营和测试同学使用SDK调试能力，实现了快速定位问题，开发零成本介入问题排查；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;运营按照标准流程对互动活动进行配置，在配置过程中，提前检验配置的正确性，降低了后续活动测试成本。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;h1&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;互动玩法已然成为一种常用的运营手段，在玩法落地过程中，我们分析痛点，不断探索，以技术手段降低互动玩法上线成本，并且取得了显著效果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在实现互动玩法标准化后，我们会继续抽象基础互动玩法，搭建一个玩法模块化的互动玩法平台，抽象基础玩法，如抽奖、签到、抽签、投票等。在互动玩法平台上，运营同学可以自助配置玩法，无需开发和测试同学高成本投入，活动上线效率与质量也可以得到有效保障。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;2390&quot; data-backw=&quot;578&quot; data-ratio=&quot;4.13570487483531&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DUwiayJ0Mj1GLZDqvPfwuIUEJjtdPx4lYwPx0p9E4T3D1f164CCr18n4ms26HtWsUVrsLf8Szwb4Us8MuhOCe3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;759&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>88dabb3b5d06d6718dff9fe8e3941dc9</guid>
<title>比社交更有趣、比游戏更长线，这款手游怎么做到的？</title>
<link>https://toutiao.io/k/shj50wm</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p&gt;&lt;span&gt;「 点击上方&quot;&lt;/span&gt;&lt;span&gt;GameLook&lt;/span&gt;&lt;span&gt;&quot;↑↑↑，订阅微信 」&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;遍观行业，失败的产品各有各的不同，而成功的原因却总是相似。&lt;/p&gt;&lt;p&gt;无论是MOBA领域的一霸《王者荣耀》，还是去年新晋的爆款黑马《哈利波特：魔法觉醒》，它们都拥有着相同的特性——比起游戏，它们更像是一个社交平台。&lt;/p&gt;&lt;p&gt;由雷霆代理、百奥旗下拥有13年IP历史的手游《奥比岛：梦想国度》（以下简称奥比岛）近期正在测试当中，这个拥有3亿用户的IP新作，在Z世代中拥有不俗的号召力，相关长留数据也优于同类产品。&lt;/p&gt;&lt;p&gt;究其原因，官方曾透露，制作组没有把《奥比岛》当作一个单纯的游戏在做，而是希望打造成一个社交产品、一个具有可视化和互动性的虚拟社区。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;326&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5646687697160884&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/NNWOPOYyLDib4bbrPib9XicO0mFWCnpiciaAK0AEIreps7eT7fiaZka7NnRMyhzxA6YyVKmFgTfJOFmXJcgxOdlQNbzQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1268&quot;/&gt;&lt;/p&gt;&lt;p&gt;社交是一个筐，但并非什么都能往里装。作为2022年又一支潜在爆款，《奥比岛》有何独到之处，能帮助其在用户审美标准拉高、市场竞争环境激烈的今天脱颖而出？&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;  &lt;/span&gt;联手玩家共同创造，让丰富内容兼容休闲&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;网络发明以前，人们之间互动方式十分有限，没有电气的时代，更需要鸿雁传书向关心的人倾诉衷肠。从马车到电报再到电话和互联网，社交手段在短短百年间迅速膨胀并超载，我们迎来了信息爆炸的时代，但同时又困在无数信息构筑的茧房之中。&lt;/p&gt;&lt;p&gt;有学者认为，网络社交本质是一种中介化交流。今天，比起面对面交流，人们更倾向于透过社交媒体互动，因而中介的质量、即沟通的质量十分重要，才能确保交流中信息的有效性、正确性和价值。&lt;/p&gt;&lt;p&gt;《奥比岛》制作组抱有相同的看法。在官方视角中，以同类竞品为鉴，《奥比岛》应当着重解决内容质量问题。作为一款定位“爱上奥比岛，快乐没烦恼”的IP手游，《奥比岛》主张给予玩家轻松休闲的游戏体验。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5630914826498423&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/NNWOPOYyLDib4bbrPib9XicO0mFWCnpiciaAKgY5v7mac5PzSm0ibay6ZiagO78VQhic7n57oD0Bsq2VT5iaPS9CibUjlnNA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1268&quot;/&gt;&lt;/p&gt;&lt;p&gt;通常而言，丰富的内容和“不肝”二者相互对立。缺少内容，即便玩家慕名而来也很快会因为内容消耗过快而无所事事，进而退坑。内容量极为丰富，又容易使玩家无所适从，被进度推着前进，导致休闲变上班，影响产品风评与玩家积极性。&lt;/p&gt;&lt;p&gt;《奥比岛》的做法是，一方面巧妙地通过休闲化核心玩法，降低游戏的“肝度”为玩家减负，让玩家体验到真正的休闲乐趣，另一方面则是增加内容的广度与深度，而非单纯设计重复性任务或在数值上挖坑。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5623028391167192&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/NNWOPOYyLDib4bbrPib9XicO0mFWCnpiciaAKaDNwvm4hibOZVwQNl8icfEjwKFzfTQsaYHh5Q3HvoTSIz373pQbkibnRQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1268&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如去年10月星光测试结束后，制作组基于玩家反馈新增了疲劳系统，并增加了经验获取、降低了升级难度，减少了玩法与等级的挂钩，以“减负”为目标，最终达到减少重复劳动、增加有趣高质量互动的结果。&lt;/p&gt;&lt;p&gt;此外，《奥比岛》还添加了编辑器功能，不仅仅是官方可以创作优质内容，更鼓励每一名玩家添砖加瓦。在进一步丰富游戏内容的同时，也能起到唤醒社群意识，营造共创氛围，提升玩家归属感的作用，为将来长线运营打好基础。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;  &lt;/span&gt;开放自由的社区，为每一名玩家提供港湾&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;为了确保《奥比岛》内容品质，《奥比岛》组建了一支庞大且经验丰富的研发团队，同时背后还有中台予以支持，保障优质内容供应的产能能跟上玩家消耗。&lt;/p&gt;&lt;p&gt;这也是《奥比岛》选用2D美术画面的原因之一，一方面在于带给粉丝熟悉感、亲切感，另一方面也能较好地控制内容输出产能。&lt;/p&gt;&lt;p&gt;实际为了公测，《奥比岛》计划储备2-3个月以上的版本内容，以应对玩家涌入数量超过预期情况的发生。&lt;/p&gt;&lt;p&gt;在基础框架上，《奥比岛》为不同需求的玩家都提供了不同的舞台，无论是喜欢单机、还是喜欢热闹、或者是热衷装扮、偏好经营，都能在《奥比岛》中找到属于自己的归属。&lt;/p&gt;&lt;p&gt;丰富的个人任务、悠闲的种田时光、丰富的装扮系统、热闹的派对活动、精彩的海岛小屋、趣味不失硬核的庄园经营……丰富多彩的可能性，给每一种个性留有发挥空间的自由度，在GameLook看来其实正是《奥比岛》不只是一款游戏，也是一个社交产品的底气。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5101708706265257&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/NNWOPOYyLD9JzTMz01obIicIMWIttDlh9Wiafs7R8hBnoXnmmsbEb8zHClDvAr58pXuFLKib7giastPcOfYrC90icVA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1229&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;与寻常游戏相比，诸如家族等多元完善的社交体系，为《奥比岛》增添了多维度的吸引力。不肝且丰富有趣的体验，确保《奥比岛》热度能比一般游戏更为长久。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;289&quot; data-backw=&quot;578&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/NNWOPOYyLDib4bbrPib9XicO0mFWCnpiciaAK1w3v2MKMH8ul4MwicvySdvIqahAnRmK2d9hbpNGnSFfSS3h8icick4BVA/640?wx_fmt=jpeg&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;720&quot; data-cropy1=&quot;2.491349480968858&quot; data-cropy2=&quot;355.01730103806227&quot; data-ratio=&quot;0.49027777777777776&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/NNWOPOYyLD9JzTMz01obIicIMWIttDlh93ibKoMFSwyAQGKX12xMkmIoJHpa3Ug7cqfMhDF1zLviafO3CcmMFY4tA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot;/&gt;&lt;/p&gt;&lt;p&gt;而随着《奥比岛》在粉丝中热度与认可度的升温，以及影响力逐渐出圈，它不再是一款游戏，而有望成为人与人之间无形的连接。&lt;/p&gt;&lt;p&gt;通过社交，《奥比岛》将自身属性与玩家最珍视的东西捆绑——不单单是游戏本身，而是在游戏中，与他人、与自我相处、对话的美好时光。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5623028391167192&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/NNWOPOYyLDib4bbrPib9XicO0mFWCnpiciaAKnutxJEkKuZMCDOrZrQMvbticuEhHvvMA63T06DyU5mw95hqWhKwjCng/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1268&quot;/&gt;&lt;/p&gt;&lt;p&gt;而作为一款社交产品，《奥比岛》丰富的游戏性，又超脱于一般社交产品，大量可互动的玩法，相较纯社区能产生更强烈的用户粘性。因此不难预判，无论是作为一款游戏，抑或是作为一款社交产品，《奥比岛》都拥有极强的长线运营潜质。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt;  &lt;/span&gt;不只唤起旧的情怀，更创造新的回忆&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;即便看似准备完全，但《奥比岛》制作组完全没有丝毫懈怠。官方还设置有完整且经验丰富的测试团队，为产品上线保驾护航。在制作组看来，许多游戏BUG如卡住、穿模等问题，很容易消耗玩家耐心，造成用户心情暴躁然后流失，但这类问题其实可以避免。&lt;/p&gt;&lt;p&gt;在TapTap、微博等各大社交媒体中，官方也积极与玩家沟通，并招募核心玩家担任社区管理成员，以求聆听来自一线玩家最真实的声音，建立起了一个具有信任感的沟通桥梁。&lt;/p&gt;&lt;p&gt;制作组如此说过：“无论微博官号下的评论、超话里的帖子、TapTap上的评价、B站的弹幕和讨论、Q群里N百万条的聊天，还是奥比们发出的来自其他各种渠道的信息，每一条我们都在关注。”&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;313&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5422297297297297&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/NNWOPOYyLDib4bbrPib9XicO0mFWCnpiciaAKoh6hU1uAwmFmJ4micDheAjeWKHbsgAxUZvDicwFFclrHAzsWnWiazD8vw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;592&quot;/&gt;&lt;/p&gt;&lt;p&gt;认真的态度与良好的人设，不仅仅是有利于产品后续调优，更有助于帮助玩家与开发者之间的相互理解，减少内耗，实现双方与产品共同成长的理想状态。&lt;/p&gt;&lt;p&gt;《奥比岛》还原了奥比广场、淘宝街等经典场景，也再现了冰雪庆典、哈皮大作战等情怀活动，更不用提早被刻在玩家DNA里的服装、家具、BGM，以及曾经的老朋友们如“大胡子叔叔”，也以全新的形态与玩家见面。&lt;/p&gt;&lt;p&gt;但《奥比岛》并非页游的完全复刻，手游与页游共享一个世界观，相互之间的关系更多是平行世界而非单纯继承。游戏还设置了旅行者功能，进一步丰富已有角色的故事线，在还原的同时又赋予令玩家意想不到的新意。&lt;/p&gt;&lt;p&gt;为了真正成为具有现实投射的社区，《奥比岛》也在逐步推进与KFC、名创优品、欧莱雅等品牌的合作，增进奥比岛虚拟社区的代入感、沉浸感。制作组希望，通过引进年轻人喜爱的品牌的方式，在《奥比岛》建立起“一种新的生活方式”。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;267&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.4613564668769716&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/NNWOPOYyLDib4bbrPib9XicO0mFWCnpiciaAKDCJhFrJTJ1zkvRwn5PtdVQ3ia4n83OtTLIt3JW11ibKkB6XJk5pcfUTg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1268&quot;/&gt;&lt;/p&gt;&lt;p&gt;这是一个可能需要很长时间、很多精力才能实现的目标。但相信假以时日，在制作组与玩家的共同努力下，不仅仅是情怀，《奥比岛》也能生长成一个更具温度、更富人情，不只是唤起回忆，也是一个创造回忆的精神家园。&lt;/p&gt;&lt;p&gt;&lt;span&gt;····· &lt;/span&gt;&lt;span&gt;End &lt;/span&gt;&lt;span&gt;·····&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;GameLook&lt;/span&gt;每日游戏产业报道&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;全球视野 / 深度有料&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MjM5NzQwMjI4MA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/LnV8UVj5ORUkG7JTNvCgqjq95kfNBqdLN6ibCYnESlw3x4tDcZImEfAzNLXZJY6WRM2Yf3GdEWu56qIeBBycL5A/0?wx_fmt=png&quot; data-nickname=&quot;GameLook&quot; data-alias=&quot;GameLook_News&quot; data-signature=&quot;揭秘游戏圈：聚焦爆款，热点，趋势。GameLook是中国领先的游戏产业研究媒体，为游戏开发者、投资者、玩家提供高价值的全球游戏业资讯、原创评论与分析、行业数据与技术前瞻。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;爆料 / 交流 / 合作：&lt;/span&gt;&lt;span&gt;请加主编微信&lt;/span&gt;&lt;/span&gt;&lt;span&gt; igamelook&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;广告投放 : &lt;/span&gt;&lt;span&gt;请加 QQ：1772295880&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;  &lt;/span&gt;  长按下方图片，&quot;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;识别二维码&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&quot; 订阅微信公众号&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;509686439&quot; data-ratio=&quot;0.6053370786516854&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;712&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/LnV8UVj5ORUPX234c2zON3A2LClUXWf9WnjDib7bAYMVM7v9MzVhR33Nq5fDZddKeiaO4ic4Ya9gQnCgoDcZml0VQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;·····&lt;/span&gt; 更多内容请访问 &lt;/span&gt;&lt;span&gt;www.gamelook.com.cn&lt;/span&gt;&lt;span&gt; &lt;span&gt;·····&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&lt;span&gt;Copyright &lt;/span&gt;&lt;span&gt;©&lt;/span&gt;&lt;span&gt; GameLook&lt;span&gt;® &lt;span&gt;2009-2022&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;  &lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;   觉得好&lt;/span&gt;&lt;/span&gt;&lt;span&gt;看，请点这里 ↓↓↓ &lt;/span&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>