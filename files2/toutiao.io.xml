<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>7e3596fc118fd39ccde9547d32add221</guid>
<title>BookKeeper 简介</title>
<link>https://toutiao.io/k/8lznjxp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single js_wx_tap_highlight wx_tap_card&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left js_a11y_comma js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI0OTYwNTQ4Ng==&amp;amp;action=getalbum&amp;amp;album_id=2252823407572795396#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;2252823407572795396&quot; data-tag_source=&quot;1&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#BookKeeper&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;1个&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5621951219512196&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/nKovjAe6Lros5vgmrlcorGHoxEVAFRnsKyuIjSfgTnR3NdzxDLMUicXqkwdIGfcVd87EYC0zehicDacIm1RB8jwQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;820&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI0OTYwNTQ4Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/nKovjAe6LrpVR0GEQn2UGOvBUCta35aF6ibVFvTR0fFPE83DrdKGl8v2sCTVbYNJPnun6Yftg1OAlMJ94kxzgyg/0?wx_fmt=png&quot; data-nickname=&quot;大数据生态&quot; data-alias=&quot;big_data_ecosphere&quot; data-signature=&quot;火爆数年的大数据圈，让很多人还没弄懂大数据是什么，就已然身处其中。该订阅号对大数据行业中的各个领域进行梳理，有助于业内人士了解大数据生态圈。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;Apache BookKeeper 是企业级存储系统，旨在提供强大的持久性保证、一致性和低延迟。最初是由雅虎研究院（Yahoo! Research）开发，作为 Hadoop 分布式文件系统（HDFS）NameNode 的高可用（HA）解决方案，以解决严重的单点故障问题。&lt;/p&gt;&lt;p&gt;BookKeeper 在 2011 年作为 Apache ZooKeeper 下的子项目孵化，并在 2015 年 1 月毕业成为顶级项目。这 4 年多来，BookKeeper 已被 Twitter、Yahoo 和 Salesforce 等企业广泛使用，用于存储和服务关键任务数据，并支撑了不同的场景。在这篇博文中，我们将简要介绍 BookKeeper 的概念以及相关术语。&lt;/p&gt;&lt;h2&gt;1. 背景介绍&lt;/h2&gt;&lt;p&gt;BookKeeper 的作者 Benjamin Reed、Flavio Junqueira 和 Ivan Kelly 利用他们构建 ZooKeeper 的经验设计了一个灵活的系统来支持各种工作负载。除了主要用作分布式系统的预写日志 (WAL) 机制外。BookKeeper 目前发展超出了最初的规划，并已成为多个企业级系统的基本组件，这包括 Twitter 的 EventBus 和雅虎的 Apache Pulsar（孵化中）。&lt;/p&gt;&lt;h2&gt;2. BookKeeper 是什么？&lt;/h2&gt;&lt;p&gt;BookKeeper 是一种可扩展的、具有容错能力和低延迟的存储服务，主要用来优化实时工作负载。根据我们多年的经验，一个企业级的实时存储平台应该具备如下几项要求：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;以非常低的延迟（&amp;lt; 5 ms）写读流数据&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;能够持久的、一致的和容错的存储数据&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在写数据时能够进行流式传输或追尾传输&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;有效地存储并提供对历史和实时数据的访问&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;BookKeeper 的设计完全符合上述要求，并被广泛部署来服务多个用例，例如为分布式系统提供高可用或多副本（例如 HDFS NameNode、Twitter 的 Manhattan KV 存储），在单个集群中或多个集群间（多个数据中心）提供跨机器复制，为发布/订阅消息系统(例如，Twitter 的 EventBus、Apache Pulsar）提供存储服务，还为流式作业存储不可变对象，例如检查点数据的快照。&lt;/p&gt;&lt;h2&gt;3. BookKeeper 概念和术语&lt;/h2&gt;&lt;p&gt;BookKeeper 提供复制的、持久的日志流存储，形成具有明确定义顺序序列的记录流。&lt;/p&gt;&lt;h3&gt;3.1 记录(Records)&lt;/h3&gt;&lt;p&gt;在 Apache BookKeeper 中，数据作为一系列不可分割的记录而不是单个字节写入日志。记录是 BookKeeper 中最小的 I/O 单元，也被称作地址单元。每条记录都包含与其相关或者分配给它的序列号（例如单调递增的长整数）。客户端总是从指定记录读取数据，或者追尾序列。这意味着客户端要监听要追加到日志的下一条记录的序列。客户端可以一次接收一条记录，也可以接收包含多条记录的数据块。序列号也可以用于随机检索记录。&lt;/p&gt;&lt;h3&gt;3.2 日志(Log)&lt;/h3&gt;&lt;p&gt;BookKeeper 提供了两种存储原语来表示日志：一个是 Ledger（又称日志段），另一个是 Stream（又称日志流）。&lt;/p&gt;&lt;p&gt;Ledger 是一系列数据记录，当客户端显式关闭它或者写入器（将记录写入其中的客户端）崩溃时，Ledger 就会关闭。一旦 Ledger 被关闭，就不能再写入任何记录了。Ledger 是 BookKeeper 中最低级别的存储原语。Ledger 可用于存储有限数据序列或者无限流。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5058411214953271&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6Lrp3wEI0w3YQnmjsgVl126LJneJ4UwE76RwmJuibxF0gXSTx3TLJd8xlCQbFLUAxZ8alXZ5iaiaib6on4w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;856&quot;/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;BookKeeper Ledger：有限数据 entries 序列&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Stream（又称日志流）是无限数据记录序列，默认情况下永远不会终止。与只能打开一次来追加记录的 Ledger 不同，Stream 可以多次打开来追加记录。Stream 在物理上由多个 Ledger 组成；Ledger 根据基于时间或空间滚动策略滚动生成。Stream 在被删除之前会存储相对较长的时间，几天、几个月甚至几年。Stream 的主要数据保留机制是截断，包括根据基于时间或空间的保留策略删除最早的 Ledger。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.29550827423167847&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6Lrp3wEI0w3YQnmjsgVl126LJQRJhMGLkocQbOTEKSK2pGB8gJhwzh05AlUOfvkxY0Lzpy5nxyRhxfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;846&quot;/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;BookKeeper Stream：无限数据记录流&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ledger 和 Stream 为历史数据和实时数据提供统一的存储抽象。在写入数据时，日志流提供了流式传输或追尾传输实时数据记录的能力。存储为 Ledger 的实时数据会变为历史数据。流中积累的数据不受任何一台机器的容量限制。&lt;/p&gt;&lt;h3&gt;3.3 命名空间&lt;/h3&gt;&lt;p&gt;日志流通常在命名空间下进行分类和管理。命名空间是租户用来创建流的一种机制。命名空间也是一个部署或管理单元，可以让你配置命名空间级别的数据放置策略。同一命名空间的所有流都拥有相同的命名空间配置，并将记录存放在数据放置策略配置的存储节点中。这为同时管理多个流提供了强有力的支持。&lt;/p&gt;&lt;h3&gt;3.4 Bookies&lt;/h3&gt;&lt;p&gt;Bookies 即存储服务器。BookKeeper 跨多个 Bookies 复制和存储数据 Entries。一个 Bookie 就是一个单独的存储数据记录的 BookKeeper 存储服务器。出于性能考虑，单个 Bookie 上不是存储整个 Ledger，而是存储 Ledger 的片段。因此，Bookies 作为整体的一部分发挥作用。对于任意给定 Ledger L，集成指存储 Entries 到 L 上的一组 Bookies。写入 Ledger 时，Entries 就会跨集成分段（写入到一组 Bookies 中而不是所有的 Bookies）。&lt;/p&gt;&lt;h3&gt;3.5 元数据&lt;/h3&gt;&lt;p&gt;BookKeeper 需要元数据存储服务来存储与 Ledger 以及可用 Bookie 相关的信息。目前使用 ZooKeeper 来完成这项任务（还包括其他一些协调和配置管理任务）。&lt;/p&gt;&lt;h2&gt;4. 与 BookKeeper 交互&lt;/h2&gt;&lt;p&gt;在与 Bookie 交互时，BookKeeper 应用程序有两个主要角色。首先，他们创建 Ledger 或打开 Stream 来写入数据；其次，打开 Ledger 或 Stream 来读取数据。BookKeeper 提供了两个 API 来与 BookKeeper 中这两个不同的存储原语进行交互：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;API&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Ledger API&lt;/td&gt;&lt;td&gt;一个低层次 API，可以让你能够直接与 Ledger 交互，根据需要灵活地与 Bookie 交互。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Stream API&lt;/td&gt;&lt;td&gt;通过 Apache DistributedLog 提供的更高层次、面向流的 API。可以让你与 Stream 交互，而无需管理与 Ledger 交互的复杂性。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;选择使用哪个 API 取决于用户对 Ledger 语义的控制精细程度。用户也可以在单个应用程序中同时使用这两个 API。&lt;/p&gt;&lt;h2&gt;5. 放在一起看&lt;/h2&gt;&lt;p&gt;下图展示了典型的 BookKeeper 安装示例。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7620164126611958&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/nKovjAe6Lrp3wEI0w3YQnmjsgVl126LJyoib5PhPk4KunOOUZpdtKtbvvyE4NWBMKcpMBcPuojA3mWm9mlMA2qQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;853&quot;/&gt;&lt;/p&gt;&lt;p&gt;此图中需要注意的几点：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;一个典型的 BookKeeper 安装包括一个元数据存储（例如 ZooKeeper）、一个 Bookie 集群以及使用提供的客户端库与 Bookies 交互的多个客户端&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Bookies 将自己发布到元数据存储中，以便客户端可以发现&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Bookies 与元数据存储交互以执行诸如垃圾回收删除数据之类的操作&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;应用程序使用提供的客户端库与 BookKeeper 交互（使用 Ledger API 或 DistributedLog Stream API）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;应用程序 1 对 Ledger 精细控制，直接使用 Ledger API。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;应用程序 2 不需要低层次 Ledger 控制，使用更加简化的日志流 API。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;6. 结论&lt;/h2&gt;&lt;p&gt;这篇文章提供了 BookKeeper 的高级概述，并介绍了 Entries, Ledgers, Streams, 命名空间以及 Bookies 概念。最后，我们看到了 BookKeeper 的经典部署，以及数据如何流转。&lt;/p&gt;&lt;p&gt;如果您对 BookKeeper 或 DistributedLog 感兴趣，你可能希望通过以下方式参与 BookKeeper 社区：&lt;/p&gt;&lt;p&gt;有关 Apache BookKeeper 项目的更多信息，请访问官方网站 https://bookkeeper.apache.org。&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI0OTYwNTQ4Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/nKovjAe6LrpVR0GEQn2UGOvBUCta35aF6ibVFvTR0fFPE83DrdKGl8v2sCTVbYNJPnun6Yftg1OAlMJ94kxzgyg/0?wx_fmt=png&quot; data-nickname=&quot;大数据生态&quot; data-alias=&quot;big_data_ecosphere&quot; data-signature=&quot;火爆数年的大数据圈，让很多人还没弄懂大数据是什么，就已然身处其中。该订阅号对大数据行业中的各个领域进行梳理，有助于业内人士了解大数据生态圈。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>98d39193efd593052238218ee8d275dc</guid>
<title>浏览器中的音视频知识总结（工作中需要和视频打交道必看！)</title>
<link>https://toutiao.io/k/7ayveb7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section class=&quot;mp_profile_iframe_wrp&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUzNjk5MTE1OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/pfCCZhlbMQT49XgH4IwJDH7MrbFPo2UFN7g3pCM2D8ZfREoXlmFHnpNs9YsdglyF8ekm3OFz2X4oW9I2JLHvhw/0?wx_fmt=png&quot; data-nickname=&quot;前端瓶子君&quot; data-alias=&quot;pinzi_com&quot; data-signature=&quot;瓶子君，2021致力于帮助前端开启技术专项+算法之路！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(0, 128, 255)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(0, 128, 255)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(0, 128, 255)&quot;&gt;前端瓶子君&lt;/span&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(136, 136, 136)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(136, 136, 136)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(136, 136, 136)&quot;&gt;，关注公众号&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;回复&lt;/span&gt;&lt;span data-darkmode-bgcolor-16021670869911=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16021670869911=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16021670869911=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16021670869911=&quot;rgb(0, 128, 255)&quot; data-darkmode-bgcolor-16030289161394=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030289161394=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030289161394=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16030289161394=&quot;rgb(0, 128, 255)&quot; data-darkmode-bgcolor-16030315732716=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16030315732716=&quot;rgb(255, 255, 255)&quot; data-darkmode-color-16030315732716=&quot;rgb(0, 128, 255)&quot; data-darkmode-original-color-16030315732716=&quot;rgb(0, 128, 255)&quot;&gt;算法&lt;/span&gt;&lt;span&gt;，加入前端编程面试算法每日一题群&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;视频是什么&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;视频，其实就是一系列连续播放的图片，如果1s钟播放24张图片，那么人眼看到的就不再是一张张独立的图片，而是动起来的画面。其中一张图片称为一帧，1s播放的图片数称为帧率。常见的帧率有24帧/s，30帧/s,32帧/s。&lt;/p&gt;&lt;p&gt;视频是由图片构成的，图片是由像素构成的，假设尺寸为 1024*768。每个像素由RGB构成，每个8位，共24位。&lt;/p&gt;&lt;p&gt;这里补充一点2进制的知识&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt;位&lt;span&gt;10&lt;/span&gt;进制数，能够表示&lt;span&gt;0-9&lt;/span&gt;，共&lt;span&gt;10&lt;/span&gt;种可能&lt;br/&gt;类比一下，&lt;span&gt;1&lt;/span&gt;位&lt;span&gt;2&lt;/span&gt;进制，能够表示&lt;span&gt;0&lt;/span&gt;，&lt;span&gt;1&lt;/span&gt;，共表示&lt;span&gt;2&lt;/span&gt;种可能性。&lt;br/&gt;一位&lt;span&gt;2&lt;/span&gt;进制称为&lt;span&gt;1&lt;/span&gt;比特，即&lt;span&gt;1&lt;/span&gt; bit。&lt;br/&gt;byte 字节是计算机计量的基本单位，&lt;span&gt;1&lt;/span&gt; byte= &lt;span&gt;8&lt;/span&gt;bit&lt;br/&gt;&lt;span&gt;1&lt;/span&gt;位&lt;span&gt;16&lt;/span&gt;进制能够表示&lt;span&gt;0-15&lt;/span&gt;，共&lt;span&gt;16&lt;/span&gt;种可能性，如果换算成&lt;span&gt;2&lt;/span&gt;进制，&lt;span&gt;2&lt;/span&gt;^&lt;span&gt;4&lt;/span&gt;=&lt;span&gt;16&lt;/span&gt;,需要&lt;span&gt;4&lt;/span&gt;位二进制才能表示&lt;span&gt;1&lt;/span&gt;位&lt;span&gt;16&lt;/span&gt;进制数。&lt;br/&gt;&lt;span&gt;1&lt;/span&gt;byte=&lt;span&gt;8&lt;/span&gt;bit=&lt;span&gt;2&lt;/span&gt;个&lt;span&gt;16&lt;/span&gt;进制数&lt;br/&gt;像素用&lt;span&gt;16&lt;/span&gt;进制表示为 #ffffff,需要&lt;span&gt;6&lt;/span&gt;个&lt;span&gt;16&lt;/span&gt;进制，也就是&lt;span&gt;3&lt;/span&gt;byte&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;假设帧率是30，那么每秒钟的视频的尺寸如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;30&lt;/span&gt;帧x1024x768x24=&lt;span&gt;566231040&lt;/span&gt;Bits=&lt;span&gt;70778880&lt;/span&gt;Bytes&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一分钟视频的尺寸就是 4246732800Bytes已经是4个G了。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt;Byte=&lt;span&gt;8&lt;/span&gt;bit&lt;br/&gt;&lt;span&gt;1&lt;/span&gt;MB=&lt;span&gt;1024&lt;/span&gt;Byte(&lt;span&gt;2&lt;/span&gt;^&lt;span&gt;10&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;1&lt;/span&gt;GB=&lt;span&gt;1024&lt;/span&gt;MB(&lt;span&gt;2&lt;/span&gt;^&lt;span&gt;20&lt;/span&gt;Byte)&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到，这个数据量是很大的，不好进行网络传输以及存储，所以需要对视频进行压缩，也就是编码。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;编码过程&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;之所以能够对视频的中图片进行压缩，是因为视频和图片具有以下特点:&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;空间冗余：图像的相邻像素之间有较强的相关性，一张图片相邻像素往往是渐变的，不是突变的，没必要每个像素都完整地保存，可以隔几个保存一个，中间的用算法计算出来。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;时间冗余：视频序列的相邻图像之间内容相似。一个视频中连续出现的图片也不是突变的，可以根据已有的图片进行预测和推断。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视觉冗余：人的视觉系统对某些细节不敏感，因此不会每一个细节都注意到，可以允许丢失一些数据。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;编码冗余：不同像素值出现的概率不同，概率高的用的字节少，概率低的用的字节多，类似霍夫曼编码（Huffman Coding）的思路。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;编码的流程如下：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.8132530120481927&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/pfCCZhlbMQSTSHcomv8XkFfaEKlq2Tgf7d35pT5jSIYojR3uadsNCOxQebEtia5s2X4xX54orKhrYky6umzJqTg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;664&quot;/&gt;&lt;figcaption&gt;image-20210828223514420&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;经过编码之后，视频由一帧帧的图片，变成了一串串让人看不懂的二进制代码，因为编码的方式(算法)的不同，所以就有了编码格式的区分。常见的编码格式有 H.264,MPEG-4,VP8等。&lt;/p&gt;&lt;p&gt;这里需要注意的一点是，因为编码格式是有版权问题的，所以不同的浏览器支持的编码格式不同，所以就会出现有些编码格式的视频在某些浏览器播放不了，或者只有声音没有画面的情况。&lt;/p&gt;&lt;p&gt;我们前端开发只需要记住一点，&lt;strong&gt;主流浏览器支持的视频编码格式是h264&lt;/strong&gt;。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;总结并补充一些概念&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;分辨率&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;屏幕是由一个个像素点组成的，我们常见的1080p，是指屏幕竖直方向有1080个像素，共有1920列，一共207万像素。2K，2560x1440，共369万像素。&lt;/p&gt;&lt;p&gt;放一个百度百科的解释&lt;/p&gt;&lt;pre&gt;&lt;code&gt;显示分辨率（屏幕分辨率）是屏幕图像的精密度，是指显示器所能显示的像素有多少。由于屏幕上的点、线和面都是由像素组成的，显示器可显示的像素越多，画面就越精细，同样的屏幕区域内能显示的信息也越多，所以分辨率是个非常重要的性能指标之一。可以把整个图像想象成是一个大型的棋盘，而分辨率的表示方式就是所有经线和纬线交叉点的数目。显示分辨率一定的情况下，显示屏越小图像越清晰，反之，显示屏大小固定时，显示分辨率越高图像越清晰。&lt;br/&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;分辨率对视频体积有一定影响，但是不是分辨率越大，视频越清晰，还要看码率。&lt;/p&gt;&lt;p&gt;###帧率FPS&lt;/p&gt;&lt;p&gt;每秒显示的帧数，就是1s播放的图片数量(Frames per Second)。&lt;/p&gt;&lt;p&gt;百度百科解释：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;由于人类眼睛的特殊生理结构，如果所看画面之帧率高于&lt;span&gt;24&lt;/span&gt;的时候，就会认为是连贯的，此现象称之为视觉暂留。这也就是为什么电影胶片是一格一格拍摄出来，然后快速播放的。&lt;br/&gt;而对游戏，一般来说，第一人称射击游戏比较注重FPS的高低，如果FPS&amp;lt;&lt;span&gt;30&lt;/span&gt;的话，游戏会显得不连贯。所以有一句有趣的话：“FPS（指FPS游戏）重在FPS（指帧率）。&lt;br/&gt;每秒的帧数(fps)或者说帧率表示图形处理器处理场时每秒钟能够更新的次数。高的帧率可以得到更流畅、更逼真的动画。一般来说&lt;span&gt;30&lt;/span&gt;fps就是可以接受的，但是将性能提升至&lt;span&gt;60&lt;/span&gt;fps则可以明显提升交互感和逼真感，但是一般来说超过&lt;span&gt;75&lt;/span&gt;fps一般就不容易察觉到有明显的流畅度提升了。如果帧率超过屏幕刷新率只会浪费图形处理的能力，因为监视器不能以这么快的速度更新，这样超过刷新率的帧率就浪费掉了。&lt;br/&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;码率（比特率）&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;码率，也叫比特率，帧率是1S播放多少帧，类比一下，比特率就是1s的视频有多少bit。&lt;/p&gt;&lt;p&gt;这个参数决定了视频是否清晰。&lt;/p&gt;&lt;p&gt;一个1080P的视频，大小可以为1G，也可以为4G，视频越大，说明1S存放的数据越多，比特率越高，压缩比越小，视频越清晰。&lt;/p&gt;&lt;p&gt;1080P，长度为100分钟，大小为1GB的视频的比特率是多少？&lt;/p&gt;&lt;pre&gt;&lt;code&gt;总时间为&lt;br/&gt;&lt;span&gt;100&lt;/span&gt;分钟=&lt;span&gt;100&lt;/span&gt;X60S=&lt;span&gt;6000&lt;/span&gt;s&lt;br/&gt;总数据量为&lt;br/&gt;&lt;span&gt;1&lt;/span&gt;GB=&lt;span&gt;1024&lt;/span&gt;MB= &lt;span&gt;1024&lt;/span&gt;X1024KB=&lt;span&gt;1024&lt;/span&gt;X1024X1024Byte=&lt;span&gt;1024&lt;/span&gt;X1024X1024X8bit=&lt;span&gt;8589934592&lt;/span&gt;bit&lt;br/&gt;帧率为 (数据量/时间)&lt;br/&gt;&lt;span&gt;8589934592&lt;/span&gt;/&lt;span&gt;6000&lt;/span&gt; = &lt;span&gt;1.4&lt;/span&gt;Mbit/s&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;帧率和分辨率都可以影响视频体积，但是帧率是主要因素，在工作中如果看到一个很短的视频非常大，很大可能性是因为帧率很大，为了便于网络传输，需要降低帧率。一般来说主流视频平台的帧率在1Mbit/s左右。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;音频是什么&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;音频这里的概念有点多，我也不太会，如果一次有看不懂的地方，请发在评论区。我改。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;声音是由物体振动产生的，振动的快慢(频率)决定了声音的音调(男高音，男低音)，振动的幅度决定了声音的大小（音量|响度），振动的物体的特性决定了声音的音色。音调、音量和音色称为声音的三要素。&lt;/p&gt;&lt;p&gt;声音可以用模拟信号来表示的,模拟信号的概念如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;模拟信号是指用连续变化的物理量表示的信息，其信号的幅度，或频率，或相位随时间作连续变化，或在一段连续的时间间隔内，其代表信息的特征量可以在任意瞬间呈现为任意数值的信号。&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.9003831417624522&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/pfCCZhlbMQSTSHcomv8XkFfaEKlq2TgfBsEoKZZCMfm9DzcicicsUxMgS6Cxh3IDsFbvTajEAhSrIMEsXF0NVYAw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;522&quot;/&gt;&lt;figcaption&gt;image-20210828232715224&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;横轴是时间&lt;/p&gt;&lt;p&gt;模拟信号是连续的，在传输时特别容易受干扰，所以在模拟信号在传输时经常要转化成不连续的数字信号。转化的过程主要包括：采样、量化、编码等过程。&lt;/p&gt;&lt;p&gt;你可以把采样理解为打点，在0-1s内打48000个点，就采样了48000次，采样率就是48000。&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.7434119278779473&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/pfCCZhlbMQSTSHcomv8XkFfaEKlq2TgfFrtgMmTqiaxPFvlpHiahJoJ2m5y2Ndz6icCbhPA3v9bg44AoibTLgDhXPA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1442&quot;/&gt;&lt;figcaption&gt;image-20210828233551630&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;量化是指在纵轴(y轴)上对声音进行数字化，决定了y轴的范围。比如用16bit的数据表示声音的一个采样，16bit表示的范围是[-32768,32767]，供65536个可能的取值。&lt;/p&gt;&lt;p&gt;编码就是按照一定的格式记录采样和量化之后的数据。音频的原始数据是&lt;code&gt;PCM&lt;/code&gt;数据，Pulse Code Modulation，包含以下内容：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;采样大小&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;一个采样用多少bit存放，常用的16bit,采样大小越大&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;采样率&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;声道数&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;音频的比特率（1s种音频的大小）计算方式为&lt;/p&gt;&lt;pre&gt;&lt;code&gt;音频码率=采样大小*采样率*声道&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以 CD 的音质为例：量化格式为 16 bit （2 byte）,采样率 44100 ，声道数为 2,，存放1s钟音频数据需要的大小为&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;44100&lt;/span&gt; * &lt;span&gt;16&lt;/span&gt; * &lt;span&gt;2&lt;/span&gt; = &lt;span&gt;1378.125&lt;/span&gt; kbps&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果是1分钟，需要的大小为&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;1378.125&lt;/span&gt; * &lt;span&gt;60&lt;/span&gt; / &lt;span&gt;8&lt;/span&gt; / &lt;span&gt;1024&lt;/span&gt; = &lt;span&gt;10.09&lt;/span&gt; MB&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本段参考内容：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;百度百科-模拟信号及模数转换&lt;/span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;百度百科-数字信号&lt;/span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;音视频学习-掌握音频基础知识&lt;/span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;音频编码&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;CD音质的音频，存放一分钟数据需要的大小为10M，太大了，也需要压缩（编码）。编码的过程大概如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.25&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/pfCCZhlbMQSTSHcomv8XkFfaEKlq2TgfQLAqicU5oDvNYPHjHlDViaV4WLV3mJWZT4mwIibHo9KiaNxToX9qfcKOqA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1584&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;常见的编码方式有：WAV、MP3和AAC格式。&lt;/p&gt;&lt;p&gt;音频的编码方式不像视频那样那么多，而且音频在各个浏览器基本上都可以播放。&lt;/p&gt;&lt;p&gt;具体的每种编码格式包含的音频是怎么构成的，这里就不讲了。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;封装格式&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;我们把视频数据、音频数据打包到一起，然后再添加一些基本信息，例如分辨率、时长、标题等，构成一个文件，这个文件称为封装格式。常见的封装格式有MP4,MOV,MPEG,WEBM等。&lt;/p&gt;&lt;p&gt;主要封装格式如下：&lt;/p&gt;&lt;section&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;推出机构&lt;/th&gt;&lt;th&gt;流媒体（边下边播）&lt;/th&gt;&lt;th&gt;支持的视频编码&lt;/th&gt;&lt;th&gt;支持的音频编码&lt;/th&gt;&lt;th&gt;目前使用领域&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;MP4&lt;/td&gt;&lt;td&gt;MPEG&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;MPEG-2,MPEG-44,H.264等&lt;/td&gt;&lt;td&gt;AAC,MPEG-1等&lt;/td&gt;&lt;td&gt;互联网视频网站&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;TS&lt;/td&gt;&lt;td&gt;MPEG&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;MPEG-4,H.264等&lt;/td&gt;&lt;td&gt;MPEG-1 Layers I, II, III, AAC,&lt;/td&gt;&lt;td&gt;IPTV，数字电视&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;FLV&lt;/td&gt;&lt;td&gt;Adobe Inc.&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;Sorenson, VP6, H.264&lt;/td&gt;&lt;td&gt;MP3, ADPCM, Linear PCM, AAC等&lt;/td&gt;&lt;td&gt;互联网视频网站&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MKV&lt;/td&gt;&lt;td&gt;CoreCodec Inc.&lt;/td&gt;&lt;td&gt;支持&lt;/td&gt;&lt;td&gt;几乎所有格式&lt;/td&gt;&lt;td&gt;几乎所有格式&lt;/td&gt;&lt;td&gt;互联网视频网站&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AVI&lt;/td&gt;&lt;td&gt;Microsoft Inc.&lt;/td&gt;&lt;td&gt;不支持&lt;/td&gt;&lt;td&gt;几乎所有格式&lt;/td&gt;&lt;td&gt;几乎所有格式&lt;/td&gt;&lt;td&gt;BT下载影视&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;td&gt;&lt;br/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p&gt;从上表中可以看到，封装格式往往是与视频编码无关的，一个mp4文件，里面的视频流编码可以是h264，也可以是mpeg-4，所以就会出现，同样都是mp4文件，有的浏览器可以放，有的浏览器就放不了的问题，因为能不能放是由视频码流的编码格式决定的。&lt;/p&gt;&lt;p&gt;上表参考自:&lt;/p&gt;&lt;p&gt;说完了一些理论知识，下面开始实践一下。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;操作音视频必备工具-FFMPEG&lt;/span&gt;&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;A complete, cross-platform solution to record, convert and stream audio and video.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;FFMPE是音视频处理最常用的开源软件，本文主要介绍它的命令行工具。&lt;/p&gt;&lt;p&gt;首先，安装FFMPEG,&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;MAC安装FFMPEG&lt;/span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;WINDOS安装FFMPEG&lt;/span&gt;&lt;span&gt;[6]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;LINUX安装FFMPEG&lt;/span&gt;&lt;span&gt;[7]&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;装不上请自行百度。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;一些概念&lt;/span&gt;&lt;/h3&gt;&lt;h4&gt;支持的封装格式&lt;/h4&gt;&lt;p&gt;复习一下，我们常见的视频文件，其实是一个容器，里面包含的视频数据、音频数据、字幕（非必须）及一些元数据（视频标题，时长，分辨率信息）等。常见的封装格式有(通过后缀名反映封装格式)&lt;/p&gt;&lt;pre&gt;&lt;code&gt;MP4&lt;br/&gt;MKV&lt;br/&gt;WebM&lt;br/&gt;AVI&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看ffmpeg支持的封装格式（container）&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -formats&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上输入会很多，可以使用grep过滤，例如我们想查看是否支持FLV格式，可以使用以下命令：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -codecs | grep FLV&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;支持的编码格式&lt;/h4&gt;&lt;p&gt;上面说过，音视频文件需要经过编码压缩，才能保存为文件。不同的编码格式有不同的压缩率，导致不同的清晰度和文件大小。&lt;/p&gt;&lt;p&gt;常见的视频编码格式如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;H&lt;span&gt;.262&lt;/span&gt;&lt;br/&gt;H&lt;span&gt;.264&lt;/span&gt;&lt;br/&gt;H&lt;span&gt;.265&lt;/span&gt;&lt;br/&gt;MPEG&lt;span&gt;-4&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;常见的音频编码格式如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;MP3&lt;br/&gt;AAC&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看ffmpeg支持的编码格式,视频编码和音频编码都在内&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -codecs&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;编码器&lt;/h4&gt;&lt;p&gt;编码器(encoders)是实现某种编码格式的库文件，只有安装了某种格式的编码器，才能实现对应格式视频/音频的编解码。&lt;/p&gt;&lt;p&gt;FFMPEG内置的视频编码器&lt;/p&gt;&lt;pre&gt;&lt;code&gt;libx264：最流行的开源 H&lt;span&gt;.264&lt;/span&gt; 编码器&lt;br/&gt;NVENC：基于 NVIDIA GPU 的 H&lt;span&gt;.264&lt;/span&gt; 编码器&lt;br/&gt;libx265：开源的 HEVC 编码器&lt;br/&gt;libvpx：谷歌的 VP8 和 VP9 编码器&lt;br/&gt;libaom：AV1 编码器&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;音频编码器&lt;/p&gt;&lt;pre&gt;&lt;code&gt;libfdk-aac&lt;br/&gt;aac&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以下命令查看已安装的编码器&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -encoders&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;ffprobe查看视频信息&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;ffprobe是ffmpeg提供的一个命令行工具，用来查看视频元数据以及音视频码流的编码信息等，使用很简单&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffprobe &lt;span&gt;1.&lt;/span&gt;mp4&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出如下：&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.3991507430997877&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/pfCCZhlbMQSTSHcomv8XkFfaEKlq2Tgf1rYJibhnS3vYAtcMiasHgLicxIMpaymgwOibO9y5BkCgvfBydCcRDtr0ZA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1413&quot;/&gt;&lt;figcaption&gt;image-20210829113745898&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;ffmpeg命令行使用格式&lt;/span&gt;&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;ffmpeg {&lt;span&gt;1&lt;/span&gt;} {&lt;span&gt;2&lt;/span&gt;} -i {&lt;span&gt;3&lt;/span&gt;} {&lt;span&gt;4&lt;/span&gt;} {&lt;span&gt;5&lt;/span&gt;}&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;五个部分的参数依次如下：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;全局参数&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;ol start=&quot;2&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;输入文件参数&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;ol start=&quot;3&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;输入文件，必需&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;ol start=&quot;4&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;输出文件参数&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;ol start=&quot;5&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;输出文件，必需&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;举个简单的栗子：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -i &lt;span&gt;1.&lt;/span&gt;mp4 output.webm&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的代码是把封装格式为mp4的文件转成封装格式为webm格式的文件，只输入了输入文件和输出文件。&lt;/p&gt;&lt;p&gt;以上代码没有指定视频码流的编码格式的音频码流的编码格式，ffmpeg会自动选择编码格式具体选择的是什么编码格式，可以等转换完成之后自己使用ffprobe查看一下。&lt;code&gt;ffprobe output.webm&lt;/code&gt;&lt;/p&gt;&lt;p&gt;如果只想转换封装格式，编码格式不变，可以在输出文件参数那里添加&lt;code&gt;-c copy&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -i &lt;span&gt;1.&lt;/span&gt;mp4 -c copy output.avi&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;常见参数&lt;/span&gt;&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-c&lt;/code&gt;：指定编码器&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-c copy&lt;/code&gt;：直接复制，不经过重新编码（这样比较快）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-c:v&lt;/code&gt;：指定视频编码器&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-c:a&lt;/code&gt;：指定音频编码器&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-i&lt;/code&gt;：指定输入文件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-an&lt;/code&gt;：去除音频流&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-vn&lt;/code&gt;：去除视频流&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-preset&lt;/code&gt;：指定输出的视频质量，会影响文件的生成速度，有以下几个可用的值 ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-y&lt;/code&gt;：不经过确认，输出时直接覆盖同名文件。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;常见用法&lt;/span&gt;&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;建议新建个文件夹，把所有的命令都试验一遍吧&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;查看视频信息&lt;/h4&gt;&lt;p&gt;使用ffprobe查看视频信息&lt;/p&gt;&lt;p&gt;参数格式：&lt;code&gt;ffprobe [options] [input_file]&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 最简单用法&lt;br/&gt;ffprobe &lt;span&gt;1.&lt;/span&gt;mp4&lt;br/&gt;# 不显示欢迎信息，只显示流相关信息&lt;br/&gt;ffprobe -hide_banner &lt;span&gt;1.&lt;/span&gt;mp4&lt;br/&gt;# 以json形式显示每个流信息&lt;br/&gt;ffprobe -print_format json -show_streams &lt;span&gt;1.&lt;/span&gt;mp4&lt;br/&gt;# 显示容器格式相关信息&lt;br/&gt;ffprobe -show_format &lt;span&gt;1.&lt;/span&gt;mp4&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参数说明：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;hide_banner 不显示欢迎信息和配置信息，只显示视频元数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;show_format 显示容器格式相关信息&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;转换编码格式&lt;/h4&gt;&lt;p&gt;转换容器格式和编码格式。&lt;/p&gt;&lt;p&gt;如果没有手动指定封装格式中视频流和音频流的编码格式，ffmpeg会根据输出的封装格式自行决定使用什么编码。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -i input.mp4 output.mpeg&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;指定视频码流编码格式。&lt;/p&gt;&lt;p&gt;转化为H.264编码，一般使用编码器&lt;code&gt;libx264&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 转化为 H&lt;span&gt;.264&lt;/span&gt;格式&lt;br/&gt;ffmpeg -i &lt;span&gt;1.&lt;/span&gt;mp4 -c:v libx264 output.mp4&lt;br/&gt;# 转化为 H&lt;span&gt;.265&lt;/span&gt;格式&lt;br/&gt;ffmpeg -i &lt;span&gt;1.&lt;/span&gt;mp4 -c:v libx265 output&lt;span&gt;-265.&lt;/span&gt;mp4&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参数说明：&lt;/p&gt;&lt;h4&gt;转换容器格式&lt;/h4&gt;&lt;p&gt;mp4转为avi&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -i input.mp4 -c copy output.avi&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面例子中，只是转一下容器，内部的编码格式不变，所以使用-c copy指定直接拷贝，不经过转码，这样比较快&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 不使用 -c copy参数，ffmpeg会自己判断输入文件的编码&lt;br/&gt;ffmpeg -i input.mp4 output.webm&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;转换时可以手动指定编码格式&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 转换时可以手动指定编码格式&lt;br/&gt;ffmpeg \\&lt;br/&gt;-y \\ # 全局参数&lt;br/&gt;-c:a libfdk_aac -c:v libx264 \\ # 输入文件参数&lt;br/&gt;-i input.mp4 \\ # 输入文件&lt;br/&gt;-c:v libvpx-vp9 -c:a libvorbis \\ # 输出文件参数&lt;br/&gt;output.webm # 输出文件&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;调整码率(比特率)&lt;/h4&gt;&lt;p&gt;调整码率指的是，改变编码的比特率，一般用来将视频文件的体积变小。&lt;/p&gt;&lt;p&gt;比特率计算：视频多少比特(bit)/视频时长(s)&lt;/p&gt;&lt;p&gt;例如一个视频是2.6M 换算成比特 2.6x1024x1024x8=21810380.8 bit&lt;/p&gt;&lt;p&gt;视频是22s&lt;/p&gt;&lt;p&gt;比特率：21810380.8/22=991 Kb/s&lt;/p&gt;&lt;p&gt;设置码率：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 设置输出的码率为&lt;span&gt;1.5&lt;/span&gt;M,&lt;span&gt;ps&lt;/span&gt;:最后的输出视频码率会有一些小的偏差&lt;br/&gt;ffmpeg -i input.mp4 -b &lt;span&gt;1.5&lt;/span&gt;M output.mp4&lt;br/&gt;# 默认情况下，ffmpeg使用可变比特率(VBR)进行设置，静态的画面使用较少的码率，动态的画面使用较多的码率&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参数说明&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;-b 指定视频流和音频流总体的比特率&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可以使用-b:v -b:a 分别指定视频流和音频流的比特率&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;也可以手动指定 最小比特率，最大比特率，以及缓冲区的大小：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -i input.mp4 -minrate &lt;span&gt;964&lt;/span&gt;k -maxrate &lt;span&gt;3856&lt;/span&gt;k -bufsize &lt;span&gt;2000&lt;/span&gt;k output.mp4&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果是视频会议之类的实时视频流，可以使用固定码率(CBR)：&lt;/p&gt;&lt;p&gt;固定码率是指所有的画面使用相同的码率&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# -b -minrate -maxrate 需要指定固定的值，maxrate需要指令一个bufsize(缓冲区大小)&lt;br/&gt;ffmpeg -i input.mp4 -b &lt;span&gt;0.5&lt;/span&gt;M -minrate &lt;span&gt;0.5&lt;/span&gt;M -maxrate &lt;span&gt;0.5&lt;/span&gt;M -bufsize &lt;span&gt;1&lt;/span&gt;M output.mp4&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;改变分辨率&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;# 将分辨率调整为&lt;span&gt;640&lt;/span&gt;*&lt;span&gt;480&lt;/span&gt; &lt;br/&gt;ffmpeg -i input.mp4  -vf scale=&lt;span&gt;640&lt;/span&gt;:&lt;span&gt;480&lt;/span&gt; output.mp4&lt;br/&gt;&lt;br/&gt;# 按照原比率进行调整&lt;br/&gt;ffmpeg -i input.mp4 -vf scale=&lt;span&gt;480&lt;/span&gt;:&lt;span&gt;-1&lt;/span&gt; output.mp4&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参数说明&lt;/p&gt;&lt;h4&gt;分离视频（去除视频中的音频）&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;# &lt;br/&gt;ffmpeg -i input.mp4 -c:v copy -an output.mp4&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参数说明&lt;/p&gt;&lt;h4&gt;分离音频&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -i input.mp4 -vn -c:a copy output.aac&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参数说明&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;vn 表示去掉视频&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;c:a copy表示不改变音频编码&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;添加音轨&lt;/h4&gt;&lt;p&gt;将外部音频加入视频，比如添加背景音乐或者旁白&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 如果视频原来有声音，不会添加成功，所以需要先去除视频中原来的音频&lt;br/&gt;# 输入有两个文件，ffmpeg会将它们合成为一个文件&lt;br/&gt;ffmpeg -i input.aac -i input.mp4 output.mp4&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;截图&lt;/h4&gt;&lt;p&gt;从指定时间开始，连续对1秒钟的视频进行截图&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 从&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;05&lt;/span&gt;s开始，连续对&lt;span&gt;1&lt;/span&gt;秒钟的视频进行截图&lt;br/&gt;ffmpeg -y -i input.mp4 -ss &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;05&lt;/span&gt; -t &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt; output_%&lt;span&gt;3&lt;/span&gt;d.jpg&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果只需要截取一帧&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 从&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;10&lt;/span&gt;s开始截取一帧&lt;br/&gt;ffmpeg -ss &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;10&lt;/span&gt; -i input -vframes &lt;span&gt;1&lt;/span&gt; -q:v &lt;span&gt;2&lt;/span&gt; output.jpg&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参数说明&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;vframes 1 指定只截取一帧&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;q:v 2表示输出图片的质量 一般是1至5之间&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;分割一个mp4文件到多个小的mp4文件&lt;/h4&gt;&lt;p&gt;可以指定开始时间和持续时间，也可以指定结束时间&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ffmpeg -ss &amp;lt;start&amp;gt; -i &amp;lt;input&amp;gt; -t &amp;lt;duration&amp;gt; -c copy &amp;lt;output&amp;gt;&lt;br/&gt;ffmpeg -ss &amp;lt;start&amp;gt; -i &amp;lt;input&amp;gt; -to &amp;lt;end&amp;gt; -c copy &amp;lt;output&amp;gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;示例：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# 将视频从&lt;span&gt;0&lt;/span&gt;s分割到&lt;span&gt;5&lt;/span&gt;s的位置 &lt;br/&gt;ffmpeg -ss &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt; -i &lt;span&gt;1.&lt;/span&gt;mp4 -c copy -t &lt;span&gt;5&lt;/span&gt; aqgy&lt;span&gt;-1.&lt;/span&gt;mp4&lt;br/&gt;# 示例：将一个&lt;span&gt;1&lt;/span&gt;分&lt;span&gt;30&lt;/span&gt;s的视频分成&lt;span&gt;4&lt;/span&gt;段&lt;br/&gt;ffmpeg -ss &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt; -i &lt;span&gt;1.&lt;/span&gt;mp4 -c copy -t &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; aqgy&lt;span&gt;-1.&lt;/span&gt;mp4&lt;br/&gt;ffmpeg -ss &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; -i &lt;span&gt;1.&lt;/span&gt;mp4 -c copy -t &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; aqgy&lt;span&gt;-2.&lt;/span&gt;mp4&lt;br/&gt;ffmpeg -ss &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;44&lt;/span&gt; -i &lt;span&gt;1.&lt;/span&gt;mp4 -c copy -t &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; aqgy&lt;span&gt;-3.&lt;/span&gt;mp4&lt;br/&gt;ffmpeg -ss &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;01&lt;/span&gt;:&lt;span&gt;06&lt;/span&gt; -i &lt;span&gt;1.&lt;/span&gt;mp4 -c copy -t &lt;span&gt;00&lt;/span&gt;:&lt;span&gt;00&lt;/span&gt;:&lt;span&gt;22&lt;/span&gt; aqgy&lt;span&gt;-4.&lt;/span&gt;mp4&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;视频播放器的原理&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;先说一下播放器是如何播放视频的，这里的播放器可以是本地的播放器，也可以是浏览器中的播放器。&lt;/p&gt;&lt;p&gt;大概流程如下：&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.2185185185185186&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/pfCCZhlbMQSTSHcomv8XkFfaEKlq2TgfMHK1H5wRkVHaWw5UULbMNhicJWcYoBFjcnWUW9dicclkYgUJqnEGnTXQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1080&quot;/&gt;&lt;figcaption&gt;image-20210830163507844&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;解协议&lt;/strong&gt;的作用，就是将流媒体协议的数据，解析为标准的相应的封装格式数据。流媒体协议主要包括RTMP,HLS以及HTTP等。比如一个HTTP的视频链接,&lt;span&gt;http://111.229.14.189/file/1.mp4，经过解协议之后，会得到1.mp4封装格式的视频&lt;/span&gt;&lt;span&gt;[8]&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;解封装&lt;/strong&gt;：解封装就是将音频码流和视频码流从1.mp4文件中分离出来。1.MP4文件经过解封装后，会得到编码格式为h264的视频压缩数据和编码格式为aac的音频压缩数据。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;音视频解码&lt;/strong&gt;：将压缩的音视频数据转化原始的数据，视频的原始数据就是一帧帧的图像，音频的原始数据就是YUM数据。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;视音频同步&lt;/strong&gt;的作用，就是根据解封装模块处理过程中获取到的参数信息，同步解码出来的视频和音频数据，并将视频音频数据送至系统的显卡和声卡播放出来。&lt;/p&gt;&lt;p&gt;我们在浏览器中打开&lt;span&gt;http://111.229.14.189/file/1.mp4，流程大概就是上面的那些。&lt;/span&gt;&lt;span&gt;[9]&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;浏览器中音视频知识&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span&gt;为什么有些视频播放不了&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;浏览器播放一个视频的流程上面刚讲过，在&lt;code&gt;音视频解码阶段&lt;/code&gt;，因为浏览器支持的解码器有限，所有有些编码的视频码流浏览器无法解码，流程中断，所以也就无法播放。&lt;/p&gt;&lt;p&gt;前端开发的需要记住，视频编码为&lt;code&gt;h264&lt;/code&gt;，音频编码为&lt;code&gt;aac&lt;/code&gt;的MP4文件在各大浏览器都能播放，因为h264编码格式虽然有版权，但是可以免费使用。&lt;/p&gt;&lt;h3&gt;&lt;span&gt;音视频标签&lt;/span&gt;&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;video controls poster=&lt;span&gt;&quot;1.jpg&quot;&lt;/span&gt; src=&lt;span&gt;&quot;1.mp4&quot;&lt;/span&gt; loop muted&amp;gt;&amp;lt;&lt;span&gt;/video&amp;gt;&lt;br/&gt;&amp;lt;audio controls src=&quot;1.mp3&quot;&amp;gt;&amp;lt;/&lt;/span&gt;audio&amp;gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;src指定资源地址，poster为视频指定一张封面图，controls表示浏览器应该显示UI控件（每个浏览器样式不同）&lt;/p&gt;&lt;h3&gt;&lt;span&gt;常用属性&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;下面是video和audio的通用属性&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.5937834941050375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/pfCCZhlbMQSTSHcomv8XkFfaEKlq2Tgfo3E5suNrfvnZoKoqCOeqw7sCedicO9R0caPtExVQBYKvbokydQNUgqw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1866&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;常用事件&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;video和audio通用事件&lt;/p&gt;&lt;figure&gt;&lt;img data-ratio=&quot;0.31861575178997614&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/pfCCZhlbMQSTSHcomv8XkFfaEKlq2TgfwX9k3lWo3KFTG36KqPsfnmYy10GYvT6IUp9Hm4XgHAicUHHG7Kic51Tg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1676&quot;/&gt;&lt;figcaption&gt;image.png&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;&lt;span&gt;常用方法&lt;/span&gt;&lt;/h3&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;play() 控制视频开始播放&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;pause() 控制视频暂停播放&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;有了上述的属性、事件及方法，我们就可以做很多事了，比如自定义播放器，使用播放器本地预览视频等。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;浏览器中实现视频播放器的基本思路&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;整体思路如下：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;监听&lt;code&gt;loadedmetadata&lt;/code&gt;事件，获取视频时长(duration)，真实宽高(videoWidth,videoHeight)&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;点击播放/暂停时，调用视频元素的play/pause方法&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;播放时，监听&lt;code&gt;timeupdate&lt;/code&gt;，获取当前播放时间(currentTime)，计算出进度条的进度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;拖动进度条，设置视频当前播放时间,与步骤3相反&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频初始加载时，显示loading。即组件初次渲染时，loading属性默认为true,即显示加载效果，当视频元数据加载时，取消loading&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频卡顿时，显示loading。该功能的实现是监听的&lt;code&gt;waiting&lt;/code&gt;事件，不卡顿时，取消loading，监听的是&lt;code&gt;canplay&lt;/code&gt;事件&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;更详细的内容参考下我写的这篇文章吧&lt;/span&gt;&lt;span&gt;[10]&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;音视频领域的一些学习资源推荐&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;国内学习音视频相关的开发，绕不过的一个大神是 &lt;span&gt;雷霄骅&lt;/span&gt;&lt;span&gt;[11]&lt;/span&gt;，大佬已经去世了，但是留下的文章永垂不朽。&lt;/p&gt;&lt;p&gt;推荐从这篇文章开始阅读&lt;span&gt;\[总结\]视音频编解码技术零基础学习方法&lt;/span&gt;&lt;span&gt;[12]&lt;/span&gt;，从这个点开始，遇到跳转的链接感兴趣的就点过去，由点及面。&lt;/p&gt;&lt;p&gt;国内李超的课程还不错，如果对直播webrtc有需求的，可以查看这个专栏&lt;span&gt;从零打造音视频直播系统&lt;/span&gt;&lt;span&gt;[13]&lt;/span&gt; 这个是放在我的服务器上的，带宽很低，人多会卡，谨慎访问。&lt;/p&gt;&lt;p&gt;如果你是小白，可以看下李超的&lt;span&gt;编程必备基础-音视频小白系统入门课&lt;/span&gt;&lt;span&gt;[14]&lt;/span&gt;课程的5、7、8、9、10章，讲的是一些必备的理论知识。&lt;/p&gt;&lt;p&gt;如果对ffmpeg感兴趣的话，可以看下这个教程，英文的，github点赞6千8，&lt;span&gt;github.com/leandromore…&lt;/span&gt;&lt;span&gt;[15]&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;周末写了一晚上，写了这些内容，感觉还是不太满意。一方面是因为还有很多内容没有写，比如流媒体协议相关的内容，常见的音视频编码码流分析，前端方面还有webrtc，canvas处理视频，canvas视频特效的实现。另一方面是因为自己写完就有些忐忑，担心写不好，毕竟自己会的还太少。&lt;/p&gt;&lt;p&gt;这篇文章会继续完善的，请在评论区留言吧。&lt;/p&gt;&lt;p&gt;&lt;span&gt;来自：哈哈哈&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://juejin.cn/post/7002288264413446157&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id=&quot;heading-13&quot;&gt;最后&lt;/h2&gt;&lt;section&gt;欢迎关注【前端瓶子君】✿✿ヽ(°▽°)ノ✿&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;回复「&lt;/span&gt;&lt;span&gt;算法&lt;/span&gt;&lt;span&gt;」，加入前端编程源码算法群，每日一道面试题（工作日），&lt;span&gt;第二天瓶子君都会很认真的解答哟！&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;回复「&lt;/span&gt;&lt;span&gt;交流&lt;/span&gt;&lt;span&gt;」，吹吹水、聊聊技术、吐吐槽！&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;回复「&lt;/span&gt;&lt;span&gt;阅读&lt;/span&gt;&lt;span&gt;」，每日刷刷高质量好文！&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果这篇文章对你有帮助，&lt;span&gt;「&lt;/span&gt;&lt;span&gt;在看&lt;/span&gt;&lt;span&gt;」是最大的支持&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUzNjk5MTE1OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/pfCCZhlbMQT49XgH4IwJDH7MrbFPo2UFN7g3pCM2D8ZfREoXlmFHnpNs9YsdglyF8ekm3OFz2X4oW9I2JLHvhw/0?wx_fmt=png&quot; data-nickname=&quot;前端瓶子君&quot; data-alias=&quot;pinzi_com&quot; data-signature=&quot;瓶子君，2021致力于帮助前端开启技术专项+算法之路！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;a class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wx27c980b913cbfb08&quot; data-miniprogram-path=&quot;pages/index/index&quot; data-miniprogram-nickname=&quot;高级前端面试&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-servicetype=&quot;0&quot; wah-hotarea=&quot;click&quot; href=&quot;&quot;&gt; 》》面试官也在看的算法资料《《&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;“在看和转发”&lt;/span&gt;&lt;span&gt;就是最大的支持&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7d13f46332023a78bb5ecca777d60976</guid>
<title>为什么现在的年轻人不会用电脑了？</title>
<link>https://toutiao.io/k/qminvrc</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;“微机室前穿鞋套，鼠标底下扣弹珠”，可能是千禧一代对于互联网和信息时代最早的记忆。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;但时过境迁，随着鞋套、滚轮鼠标乃至拨号上网已经成为历史的尘埃，手机变成大多数人最重要的智能终端，一个陌生的现象出现了：在过去认知中“不会用电脑的中老年人”才会出现的问题，现在反而在年轻人身上复现了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;你显然能猜到“问题”指的是什么。它是从无数页游的快捷方式、电脑管家加速球，还有“P2P下崽器”等流氓软件爬上桌面的那一刻开始的：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5391084945332212&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbUKHjUj75PfWLuRxKgy6Fxibds45Q0gWia71MMLXVJQZAw08HVzBeQL2Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1189&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;所谓“道高一尺，魔高一丈”，老网民肯定早就熟悉了流氓软件那一套“勾选后下载软件”的常用策略，但现在更厉害的设计者们早就换上了新套路，开始用绕口令式的安装文案扰乱你的思维：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7081545064377682&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbBKOzTKNQiaWyaW9AxgQb0dg0uhhYpzLPh15bOfWVAQo1nUfvZMMmYUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;233&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;即便是曾经被视为“时代弄潮儿”的千禧一代，在卸载软件时，面对花样百出的界面和绕口令一样的文字游戏，也只能揣着自己的学历证书默默流泪：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.16943521594684385&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbbTE2ibCVn8rMdCrGP8WnPia0zY2BhNV8mMCQicl7X6Zib73Ggjb29OmA2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;602&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;而如何规避这些花样百出的流氓软件，无外乎会成为当代年轻人握起鼠标后不得不思考的难题。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;不过，现实中更常遇见的另一种情况是：还没等这些流氓软件出手，数字新生代们就自己迷失在了这台复杂机器中。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;可能你会认为都已经2022年了，电脑已经不能称之为“复杂机器”，但正在抱怨电脑机箱上的茶杯托盘质量太差的人可能并不是这么想的：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2572944297082228&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbfPge6wbR5J1rIMtaFM0ubgfHevnnyqicc9mX1m4ErfEibCbc1VHEZvAQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;754&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;随着时代的变迁，善于接受新事物的年轻人同样也会迅速接受Office的保存图标也能推出手办这回事：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.9779527559055118&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpb78aO3WUzst4VrtFFwZhpfwTXtdicgSezq1Zc57nYZnrJsJ7TMtRiaxIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;635&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;当电脑已经不再上网冲浪的唯一设备，再加上新一代网民相关训练的匮乏，让一些只存在于上世纪的笑话再次变成了现实——比如，怎么改掉“二指禅”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3941018766756032&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbmvO40UiaX1cfxBvsYLeKy1nia5jgxqH6OH1ZOribUjMC5jm0rEI7XVezA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;746&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.562874251497006&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbZwfziaiaU5F4UWdtPYd5bF2hePiaIS1QO3F8gPEcIAusMrTHibvslvKYtQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;668&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;类似上图这种两根手指按键的模式，曾作为一种“经典”的打字法流行于20年前刚刚接触键盘的初学者中，在当时也被戏称为“二指禅”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;你已经到了不再纠结全拼和五笔哪种输入法效率更高的年纪，但互联网上还有许多上大学后迫不得已接触电脑的年轻人们，正在研究“正确的打字姿势”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.13557594291539246&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpb5XKJVE9t4mWicXaDELYWl7YHrzyFYkWRoXbrascgRUoib9Td8wAO2vmg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;981&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;而“打字速度”，也只是当代年轻人疏于电脑知识的写照之一而已。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;那些曾经被我们反复使用、口耳相传，以致于形成肌肉记忆的快捷键组合，对于现在的年轻人来说，可能约等于最深奥难懂的咒语。这一点，还得从“Alt+F4”这个万年老梗又焕发了第二春开始说起：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7081604426002767&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpb3vFiat1fZlus4r4ibsTEEF0SP56PJPUFwILOnMDaSTTtcUpY6NxwPJ0Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;723&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;还有一些你认为非常直白、毫无歧义的快捷键名称，他们也能给出一个最朴实的输入方案：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.1162361623616237&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbKIB3eGbBsjZP3KYWic7ALknE7yQCp4HOasScrPxEypTKpLNUKynuBWg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;542&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我相信这应该是艺术夸张吧&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;至于一些更复杂的知识，比如“如何向甲方解释Excel是什么？”，更是成为信息时代的哲学论题之一：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.1693227091633467&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbulQqBNG5rgtbh2ibrMOLoZyZPZ6ia16HziaQCvFC1HiabaV32OREtK5mOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;502&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在“老一辈年轻人”的认知中，会上网=会用电脑，这个等式就像“一天=24小时”一样理所应当，无需赘述；然而在移动互联网愈发普及的当下，当代年轻人仿佛需要学习如何再次“踏上信息高速公路”，一如二十年前的我们。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.5900621118012421&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbicfQEbNyNQ9kicgobkyo5dpg1stwibTxFpLavAe4RJ8xMJOogHDB79N4Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;322&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;二十多年前，当计算机刚进入中国普通人的视野中时，一台内存256M、CPU是奔腾Ⅲ-700的主流型号电脑，售价就已经接近上万元：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.0351390922401171&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbWpe3uECVR0CbrkpXTaQE9q88eDWOQ39leL2VKxVNIHUPBR0xWXD1icw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;683&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;与之相对的是当时北京中心地段的房价，每平米的价格还维持在四位数，这也说明了在那个年代，电脑除了“高科技”外，还是昂贵的代名词，普通人很难有机会上手操作，更不要说掌握相关的电脑知识。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;但微机课的出现，让众多千禧一代的孩子们有了第一次触碰这台设备的机会，也由此诞生了全国学生的共同记忆——“进微机室前必须穿鞋套”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.8&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbrY1iaUnztGopMETbCq8avs8ENwYic9c2cZAlP3SZdazcSxdvkictO51sw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;500&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在当时的老师口中，“电脑”是一个昂贵又神秘的设备，而在接触电脑前给自己的脚套上鞋套，则可以有效保护它的性能，至于为什么明明是用手操作却要在脚上做文章，则成了信息时代的早期玄学。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;靠谱点的老师会告诉学生这些机器非常脆弱，穿鞋套是为了防止静电，毕竟在那个微机室比房价还贵的年代里，任何一台设备的故障都会造成很大的损失。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;而那些可能自己也一知半解的老师们，则会拿出各种奇怪理由来让学生们套上鞋套，比如“防止将鞋底的病毒传染给电脑”就是其中最著名的一个。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;但当年这堂颇具仪式感的必修课，真的就是造成之后电脑水平差异的根本原因吗？可能未必，想必大家也清楚，在微机课堂上，多数学生最希望搞懂的问题应该是：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2579750346740638&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbibhh0lib1kPPOQkpp5js2pnia0MLCYVchyIzbsSmMP7h2URDgUFI8icshw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;721&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;无论是从任务管理器中关闭教学进程，还是在开机时创建新账户，那时的学生们总能从学长们代代相传的秘籍中找到合适的方法摆脱控制，然后便是愉快的游戏时间。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;到现在的中小学课堂中，“信息技术”依旧是一门必修的课程。在2015年出版，面向江苏省中小学的信息技术教材中，“输入文字”、“操作WPS”、“收发电子邮件”依旧是学生们必须要学习的技术：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.2159887798036466&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbXJSpeDUt1vnqBAv0GZUWtdOIbic2D8mKoo7Coun9JWxibIzWx6GzQrBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;713&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在更高年级的教材中，甚至已经出现了Scratch这样的图形化编程软件介绍：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.166158536585366&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbXGJXbfCPQAHZMbQb92k6OPD4kpxumq0jAbqxhqSu96HlqYa7WmgRMA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;656&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果单从教材内容上看，新生代所接受的计算机教育，其实是远比20年前更为丰富的，那么还有什么原因导致了现在年轻人的“电脑盲”现象？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;最后的答案似乎只能留给“智能手机”了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;智能手机的普及确实是最直观，同时也具备统计数据支撑的原因。根据国家统计局去年年初发布的信息显示，我国互联网网民约为9.89亿，而其中使用手机上网的人数已达9.86亿。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;相比电脑，一部能够随身携带的智能手机已经成了更多人上网冲浪的新途径，在手机成为年轻人的智能终端第一课后，把操作手机的逻辑放到电脑上当然就不意外了：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.43630573248407645&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbz9r4G8lQ75HYqhD85yCWewtQ3Kx4pdsNGbicsP7E2JpbaaicUKNKxarw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;628&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;类似的情况不光只在我国出现，在日本，人们使用“若者のPC離れ”这个固定短语来描述年轻人远离电脑，热衷于使用智能手机的现象。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;日本媒体曾在2019年做过一项关于“智能手机普及率”的调查，最后的统计数据显示：20岁左右的年轻人当中，拥有智能手机的比例为83.3%；而同年龄段拥有台式电脑的比例仅为17.1%。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7573415765069552&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbQvDoY3BWspjHicEEIWXJTic9aPO9KglvdAEGr0NO6tnQJe6SLFYq3wag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;647&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这些使用手机的年轻人无论是在校园还是职场中，同样也都面临着对电脑操作系统缺乏基本概念、不擅长使用办公软件的窘境。许多人直到撰写自己的大学毕业论文时，都还没有“文件夹”和“文件保存目录”的概念。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.45724907063197023&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbp3picgGruSDwCMmwQ9VgMaGKFV3afJwoO3h1KYcZ8xZ8G8XBviapibg4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;807&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.502495840266223&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbPpXBY8NiaYDsnc8ULgYWicONXr2MWiaIia1cEibaRJEfhqO2MRdY30gBF2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;601&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;前段时间，知乎用户@卡戎 将大学生使用电脑时闹出的种种笑话收录到了一起，设计了史上最严厉的酷刑之—— “观看当代大学生操作电脑”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.6260330578512396&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbr3lEuTbcaYian2vrR7t7ia8Xz9qD2OtNUWtPMKxnVmxRjRcx4RZ0t62A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;484&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;相较于电脑，手机这样的“科技黑箱”显然在操作层面上更直观化，而这种直观自然而然就潜移默化地塑造了使用者对另一种电子设备的使用逻辑。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;上世纪末，我国多家媒体曾联合举办过一场名为&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNzM3NzE2MA==&amp;amp;mid=2247536702&amp;amp;idx=1&amp;amp;sn=65dfc11b4fd6a5af2d21694b1ffb9619&amp;amp;chksm=e8cb93d9dfbc1acf2271edd5c51a88ec9a262d5387c4a1f35c7c908bb32f303cd0a4fdf385cd&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;“72小时网络生存测试”的挑战活动&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;“72小时网络生存测试”的挑战活动&lt;/a&gt;，需要参与者依靠电脑，在封闭的房间中独自生活72小时，当时人们的感受是：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.17943548387096775&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbnczhVou2xmxYoIV5TzSacstQhwolfW8g6J3yTkiaS4w62YlD5StGaoA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;496&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;而在这项活动结束的20年后，国外曾举办过另一个“反向挑战”——不使用智能手机，生活一年（No Phone For Year）：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.18503937007874&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/D94vEUvV9FwCsX9aM66hSKXiaDwrugjpbvSFGib8UJIaJRZhBwWFwdY1z52P20WHFlP0Tjw4ia4uKoVicT5zrmSDIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;508&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这项活动直接跳过了电脑，转而限制参与者使用智能手机，甚至在整个活动过程中，都允许参与者自由使用PC设备。谁能预料到仅仅过了20年，人们的认知就从“只有电脑活得下去吗”，变成了“没有手机活得下去吗”。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;大概再过20年，类似的挑战就会变成“摘下VR头显能否生存一个月”了。这么想想，或许当代年轻人的电脑盲区也不一定是多么严重的问题吧。&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ef687e7fbdb438e10d46aabad389ce62</guid>
<title>喜迎虎年｜开源正当时！</title>
<link>https://toutiao.io/k/oya5qqf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>58ecbeaa588fa487aa4fb408e4979ff5</guid>
<title>【机器学习基础】一文带你用sklearn做特征工程</title>
<link>https://toutiao.io/k/7w3yd9n</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;使用sklearn做特征工程&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5470588235294118&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jupejmznDCic4qUX3qTtEwsvCvIe7XPPWicyod5vxbGZadhkiaInwn69ld30RRkuicHjPthOCmnnUkbu8LoPEtqEJA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2720&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;特征工程是什么？&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有这么一句话在业界广泛流传：数据和特征决定了机器学习的上限，而模型和算法只是逼近这个上限而已。那特征工程到底是什么呢？顾名思义，其本质是一项工程活动，目的是最大限度地从原始数据中提取特征以供算法和模型使用。通过总结和归纳，人们认为特征工程包括以下方面：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.1051428571428572&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jupejmznDCic4qUX3qTtEwsvCvIe7XPPWbMFWjnrKcictibuKIOKSI2r1GVPTddKPv6NB3nsicBNopbE5355yHFBibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;875&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;特征处理是特征工程的核心部分，sklearn提供了较为完整的特征处理方法，包括数据预处理，特征选择，降维等。首次接触到sklearn，通常会被其丰富且方便的算法模型库吸引，但是这里介绍的特征处理库也十分强大！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文中使用sklearn中的&lt;span&gt;IRIS（鸢尾花）数据集&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;来对特征处理功能进行说明。IRIS数据集由Fisher在1936年整理，包含4个特征（Sepal.Length（花萼长度）、Sepal.Width（花萼宽度）、Petal.Length（花瓣长度）、Petal.Width（花瓣宽度）），特征值都为正浮点数，单位为厘米。目标值为鸢尾花的分类（Iris Setosa（山鸢尾）、Iris Versicolour（杂色鸢尾），Iris Virginica（维吉尼亚鸢尾））。导入IRIS数据集的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.datasets &lt;span&gt;import&lt;/span&gt; load\_iris &lt;br/&gt; &lt;span&gt;2&lt;/span&gt; &lt;br/&gt; &lt;span&gt;3&lt;/span&gt; &lt;span&gt;#导入IRIS数据集&lt;/span&gt;&lt;br/&gt; &lt;span&gt;4&lt;/span&gt; iris = load\_iris\(\) &lt;br/&gt; &lt;span&gt;5&lt;/span&gt; &lt;br/&gt; &lt;span&gt;6&lt;/span&gt; &lt;span&gt;#特征矩阵&lt;/span&gt;&lt;br/&gt; &lt;span&gt;7&lt;/span&gt; iris.data&lt;br/&gt; &lt;span&gt;8&lt;/span&gt; &lt;br/&gt; &lt;span&gt;9&lt;/span&gt; &lt;span&gt;#目标向量&lt;/span&gt;&lt;br/&gt;&lt;span&gt;10&lt;/span&gt; iris.target&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;数据预处理&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过特征提取，我们能得到未经处理的特征，这时的特征可能有以下问题：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;即特征的规格不一样，不能够放在一起比较。无量纲化可以解决这一问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于某些定量特征，其包含的有效信息为区间划分，例如学习成绩，假若只关心“及格”或不“及格”，那么需要将定量的考分，转换成“1”和“0”表示及格和未及格。二值化可以解决这一问题。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;某些机器学习算法和模型只能接受定量特征的输入，那么需要将定性特征转换为定量特征。最简单的方式是为每一种定性值指定一个定量值，但是这种方式过于灵活，增加了调参的工作。&lt;span&gt;通常使用哑编码的方式将定性特征转换为定量特征&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;：假设有N种定性值，则将这一个特征扩展为N种特征，当原始特征值为第i种定性值时，第i个扩展特征赋值为1，其他扩展特征赋值为0。哑编码的方式相比直接指定的方式，不用增加调参的工作，对于线性模型来说，使用哑编码后的特征可达到非线性的效果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;缺失值需要补充。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;不同的机器学习算法和模型对数据中信息的利用是不同的，之前提到在线性模型中，使用对定性特征哑编码可以达到非线性的效果。类似地，对定量变量多项式化，或者进行其他的转换，都能达到非线性的效果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们使用sklearn中的preproccessing库来进行数据预处理，可以覆盖以上问题的解决方案。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.1 无量纲化&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;无量纲化使不同规格的数据转换到同一规格。常见的无量纲化方法有标准化和区间缩放法。标准化的前提是特征值服从正态分布，标准化后，其转换成标准正态分布。区间缩放法利用了边界值信息，将特征的取值区间缩放到某个特点的范围，例如[0, 1]等。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.1.1 标准化&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;标准化需要计算特征的均值和标准差，公式表达为：&lt;/p&gt;&lt;p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;x&#x27; = \frac{x-\bar{X}}{S}&amp;#10;&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -1565 5236.5 2273&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msup&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(572, 413) scale(0.707)&quot;&gt;&lt;path data-c=&quot;2032&quot; d=&quot;M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1094.2, 0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mfrac&quot; transform=&quot;translate(2150, 0)&quot;&gt;&lt;g data-mml-node=&quot;mrow&quot; transform=&quot;translate(220, 676)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(794.2, 0)&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;TeXAtom&quot; data-mjx-texclass=&quot;ORD&quot; transform=&quot;translate(1794.4, 0)&quot;&gt;&lt;g data-mml-node=&quot;mover&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;58&quot; d=&quot;M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(277.3, 199)&quot;&gt;&lt;path data-c=&quot;AF&quot; d=&quot;M69 544V590H430V544H69Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1220.7, -686)&quot;&gt;&lt;path data-c=&quot;53&quot; d=&quot;M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z&quot;/&gt;&lt;/g&gt;&lt;rect x=&quot;120&quot; y=&quot;220&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用preproccessing库的StandardScaler类对数据进行标准化的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span&gt;import&lt;/span&gt; StandardScaler &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#标准化，返回值为标准化后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4&lt;/span&gt; StandardScaler\(\).fit\_transform\(iris.data\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.1.2 区间缩放法&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;区间缩放法的思路有多种，常见的一种为利用两个最值进行缩放，公式表达为：&lt;/p&gt;&lt;p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;x&#x27;=\frac{s-Min}{Max-Min}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -1359 7960.5 2127&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msup&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(572, 413) scale(0.707)&quot;&gt;&lt;path data-c=&quot;2032&quot; d=&quot;M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1094.2, 0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mfrac&quot; transform=&quot;translate(2150, 0)&quot;&gt;&lt;g data-mml-node=&quot;mrow&quot; transform=&quot;translate(1061.5, 676)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;73&quot; d=&quot;M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(691.2, 0)&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1691.4, 0)&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2742.4, 0)&quot;&gt;&lt;path data-c=&quot;69&quot; d=&quot;M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(3087.4, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mrow&quot; transform=&quot;translate(220, -686)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1051, 0)&quot;&gt;&lt;path data-c=&quot;61&quot; d=&quot;M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1580, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2374.2, 0)&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(3374.4, 0)&quot;&gt;&lt;path data-c=&quot;4D&quot; d=&quot;M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(4425.4, 0)&quot;&gt;&lt;path data-c=&quot;69&quot; d=&quot;M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(4770.4, 0)&quot;&gt;&lt;path data-c=&quot;6E&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;rect x=&quot;120&quot; y=&quot;220&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用preproccessing库的MinMaxScaler类对数据进行区间缩放的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span&gt;import&lt;/span&gt; MinMaxScaler &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#区间缩放，返回值为缩放到\[0, 1\]区间的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4&lt;/span&gt; MinMaxScaler\(\).fit\_transform\(iris.data\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.1.3 标准化与归一化的区别&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单来说，标准化是依照特征矩阵的列处理数据，其通过求z-score的方法，将样本的特征值转换到同一量纲下。归一化是依照特征矩阵的行处理数据，其目的在于样本向量在点乘运算或其他核函数计算相似性时，拥有统一的标准，也就是说都转化为“单位向量”。规则为l2的归一化公式如下：&lt;/p&gt;&lt;p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;x&#x27;=\frac{x}{\sqrt{\sum_j^m x[j]^2}}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -1118 7447.1 2938&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msup&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(572, 413) scale(0.707)&quot;&gt;&lt;path data-c=&quot;2032&quot; d=&quot;M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1094.2, 0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mfrac&quot; transform=&quot;translate(2150, 0)&quot;&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2362.5, 676)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msqrt&quot; transform=&quot;translate(220, -1189.7)&quot;&gt;&lt;g transform=&quot;translate(1020, 0)&quot;&gt;&lt;g data-mml-node=&quot;munderover&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;2211&quot; d=&quot;M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1056, 477.1) scale(0.707)&quot;&gt;&lt;path data-c=&quot;6D&quot; d=&quot;M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1056, -285.4) scale(0.707)&quot;&gt;&lt;path data-c=&quot;6A&quot; d=&quot;M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1893.5, 0)&quot;&gt;&lt;path data-c=&quot;78&quot; d=&quot;M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2465.5, 0)&quot;&gt;&lt;path data-c=&quot;5B&quot; d=&quot;M118 -250V750H255V710H158V-210H255V-250H118Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2743.5, 0)&quot;&gt;&lt;path data-c=&quot;6A&quot; d=&quot;M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(3155.5, 0)&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;5D&quot; d=&quot;M22 710V750H159V-250H22V-210H119V710H22Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(278, 363) scale(0.707)&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(0, 19.7)&quot;&gt;&lt;path data-c=&quot;221A&quot; d=&quot;M1001 1150Q1017 1150 1020 1132Q1020 1127 741 244L460 -643Q453 -650 436 -650H424Q423 -647 423 -645T421 -640T419 -631T415 -617T408 -594T399 -560T385 -512T367 -448T343 -364T312 -259L203 119L138 41L111 67L212 188L264 248L472 -474L983 1140Q988 1150 1001 1150Z&quot;/&gt;&lt;/g&gt;&lt;rect x=&quot;1020&quot; y=&quot;1109.7&quot;/&gt;&lt;/g&gt;&lt;rect x=&quot;120&quot; y=&quot;220&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用preproccessing库的Normalizer类对数据进行归一化的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span&gt;import&lt;/span&gt; Normalizer &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#归一化，返回值为归一化后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4&lt;/span&gt; Normalizer\(\).fit\_transform\(iris.data\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.2 对定量特征二值化&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;定量特征二值化的核心在于设定一个阈值，大于阈值的赋值为1，小于等于阈值的赋值为0，公式表达如下：&lt;/p&gt;&lt;p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;x&#x27; = &amp;#10;\begin{cases}&amp;#10;1, &amp;amp; x&amp;gt;threshold \\&amp;#10;0, &amp;amp; x\leq threshold&amp;#10;\end{cases}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用preproccessing库的Binarizer类对数据进行二值化的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span&gt;import&lt;/span&gt; Binarizer &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#二值化，阈值设置为3，返回值为二值化后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4&lt;/span&gt; Binarizer\(threshold=&lt;span&gt;3&lt;/span&gt;\).fit\_transform\(iris.data\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.3 对定性特征哑编码&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于IRIS数据集的特征皆为定量特征，故使用其目标值进行哑编码（实际上是不需要的）。使用preproccessing库的OneHotEncoder类对数据进行哑编码的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span&gt;import&lt;/span&gt; OneHotEncoder &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#哑编码，对IRIS数据集的目标值，返回值为哑编码后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4&lt;/span&gt; OneHotEncoder\(\).fit\_transform\(iris.target.reshape\(\(&lt;span&gt;-1&lt;/span&gt;,&lt;span&gt;1&lt;/span&gt;\)\)\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.4 缺失值计算&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于IRIS数据集没有缺失值，故对数据集新增一个样本，4个特征均赋值为NaN，表示数据缺失。使用preproccessing库的Imputer类对数据进行缺失值计算的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; numpy &lt;span&gt;import&lt;/span&gt; vstack, array, nan &lt;span&gt;2&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span&gt;import&lt;/span&gt; Imputer &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#缺失值计算，返回值为计算缺失值后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;#参数missing\_value为缺失值的表示形式，默认为NaN&lt;/span&gt;&lt;br/&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;#参数strategy为缺失值填充方式，默认为mean（均值）&lt;/span&gt;&lt;br/&gt;&lt;span&gt;7&lt;/span&gt; Imputer\(\).fit\_transform\(vstack\(\(array\(\[nan, nan, nan, nan\]\), iris.data\)\)\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.5 数据变换&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常见的数据变换有基于多项式的、基于指数函数的、基于对数函数的。4个特征，度为2的多项式转换公式如下：&lt;/p&gt;&lt;p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;&amp;#10;(x&#x27;_1,x&#x27;_2,x&#x27;_3,x&#x27;_4,x&#x27;_5,x&#x27;_6,x&#x27;_7,x&#x27;_8,x&#x27;_9,x&#x27;_10,x&#x27;_11,x&#x27;_12,x&#x27;_13,x&#x27;_14,x&#x27;_15,x&#x27;_16,x&#x27;_17,x&#x27;_18 )&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;= (1,x_1,x_2,x_3,x_4,x^2_1,x_1*x_2,x_1*x_3,x_1*x_4,x^2_2*x^2_2, x_2*x_2,x_2*x_4,x^2_3,x_3*x_4,x^4_2)&amp;#10;&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用preproccessing库的PolynomialFeatures类对数据进行多项式转换的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span&gt;import&lt;/span&gt; PolynomialFeatures &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#多项式转换&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#参数degree为度，默认值为2&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; PolynomialFeatures\(\).fit\_transform\(iris.data\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于单变元函数的数据变换可以使用一个统一的方式完成，使用preproccessing库的FunctionTransformer对数据进行对数函数转换的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; numpy &lt;span&gt;import&lt;/span&gt; log1p &lt;span&gt;2&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.preprocessing &lt;span&gt;import&lt;/span&gt; FunctionTransformer &lt;span&gt;3&lt;/span&gt; &lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#自定义转换函数为对数函数的数据变换&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;#第一个参数是单变元函数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;6&lt;/span&gt; FunctionTransformer\(log1p\).fit\_transform\(iris.data\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2.6 回顾&lt;/span&gt;&lt;/h3&gt;&lt;table align=&quot;center&quot; data-tool=&quot;mdnice编辑器&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;类&lt;/td&gt;&lt;td&gt;功能&lt;/td&gt;&lt;td&gt;说明&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;StandardScaler&lt;/td&gt;&lt;td&gt;无量纲化&lt;/td&gt;&lt;td&gt;标准化，基于特征矩阵的列，将特征值转换至服从标准正态分布&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MinMaxScaler&lt;/td&gt;&lt;td&gt;无量纲化&lt;/td&gt;&lt;td&gt;区间缩放，基于最大最小值，将特征值转换到[0, 1]区间上&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Normalizer&lt;/td&gt;&lt;td&gt;归一化&lt;/td&gt;&lt;td&gt;基于特征矩阵的行，将样本向量转换为“单位向量”&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Binarizer&lt;/td&gt;&lt;td&gt;二值化&lt;/td&gt;&lt;td&gt;基于给定阈值，将定量特征按阈值划分&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;OneHotEncoder&lt;/td&gt;&lt;td&gt;哑编码&lt;/td&gt;&lt;td&gt;将定性数据编码为定量数据&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Imputer&lt;/td&gt;&lt;td&gt;缺失值计算&lt;/td&gt;&lt;td&gt;计算缺失值，缺失值可填充为均值等&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PolynomialFeatures&lt;/td&gt;&lt;td&gt;多项式数据转换&lt;/td&gt;&lt;td&gt;多项式数据转换&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;FunctionTransformer&lt;/td&gt;&lt;td&gt;自定义单元数据转换&lt;/td&gt;&lt;td&gt;使用单变元的函数来转换数据&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt; &lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;特征选择&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当数据预处理完成后，我们需要选择有意义的特征输入机器学习的算法和模型进行训练。通常来说，从两个方面考虑来选择特征：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;特征是否发散：&lt;br/&gt;如果一个特征不发散，例如方差接近于0，也就是说样本在这个特征上基本上没有差异，这个特征对于样本的区分并没有什么用。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;特征与目标的相关性：&lt;br/&gt;这点比较显见，与目标相关性高的特征，应当优选选择。除方差法外，本文介绍的其他方法均从相关性考虑。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据特征选择的形式又可以将特征选择方法分为3种：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Filter：过滤法，按照发散性或者相关性对各个特征进行评分，设定阈值或者待选择阈值的个数，选择特征。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Wrapper：包装法，根据目标函数（通常是预测效果评分），每次选择若干特征，或者排除若干特征。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Embedded：嵌入法，先使用某些机器学习的算法和模型进行训练，得到各个特征的权值系数，根据系数从大到小选择特征。类似于Filter方法，但是是通过训练来确定特征的优劣。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们使用sklearn中的feature_selection库来进行特征选择。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1 Filter&lt;/span&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1.1 方差选择法&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用方差选择法，先要计算各个特征的方差，然后根据阈值，选择方差大于阈值的特征。使用feature_selection库的VarianceThreshold类来选择特征的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature\_selection &lt;span&gt;import&lt;/span&gt; VarianceThreshold &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#方差选择法，返回值为特征选择后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#参数threshold为方差的阈值&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; VarianceThreshold\(threshold=&lt;span&gt;3&lt;/span&gt;\).fit\_transform\(iris.data\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1.2 相关系数法&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用相关系数法，先要计算各个特征对目标值的相关系数以及相关系数的P值。用feature_selection库的SelectKBest类结合相关系数来选择特征的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature\_selection &lt;span&gt;import&lt;/span&gt; SelectKBest &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; scipy.stats &lt;span&gt;import&lt;/span&gt; pearsonr &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#选择K个最好的特征，返回选择特征后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;#第一个参数为计算评估特征是否好的函数，该函数输入特征矩阵和目标向量，输出二元组（评分，P值）的数组，数组第i项为第i个特征的评分和P值。在此定义为计算相关系数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;#参数k为选择的特征个数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;7&lt;/span&gt; SelectKBest\(&lt;span&gt;lambda&lt;/span&gt; X, Y: array\(map\(&lt;span&gt;lambda&lt;/span&gt; x:pearsonr\(x, Y\), X.T\)\).T, k=&lt;span&gt;2&lt;/span&gt;\).fit\_transform\(iris.data, iris.target\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1.3 卡方检验&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经典的卡方检验是检验定性自变量对定性因变量的相关性。假设自变量有N种取值，因变量有M种取值，考虑自变量等于i且因变量等于j的样本频数的观察值与期望的差距，构建统计量：&lt;/p&gt;&lt;p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;\chi^2 = \sum\frac{(A-E)^2}{E}&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewbox=&quot;0 -1543.9 8331.8 2229.9&quot; aria-hidden=&quot;true&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;msup&quot;&gt;&lt;g data-mml-node=&quot;mi&quot;&gt;&lt;path data-c=&quot;3C7&quot; d=&quot;M576 -125Q576 -147 547 -175T487 -204H476Q394 -204 363 -157Q334 -114 293 26L284 59Q283 58 248 19T170 -66T92 -151T53 -191Q49 -194 43 -194Q36 -194 31 -189T25 -177T38 -154T151 -30L272 102L265 131Q189 405 135 405Q104 405 87 358Q86 351 68 351Q48 351 48 361Q48 369 56 386T89 423T148 442Q224 442 258 400Q276 375 297 320T330 222L341 180Q344 180 455 303T573 429Q579 431 582 431Q600 431 600 414Q600 407 587 392T477 270Q356 138 353 134L362 102Q392 -10 428 -89T490 -168Q504 -168 517 -156T536 -126Q539 -116 543 -115T557 -114T571 -115Q576 -118 576 -125Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(626, 413) scale(0.707)&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1307.3, 0)&quot;&gt;&lt;path data-c=&quot;3D&quot; d=&quot;M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(2363.1, 0)&quot;&gt;&lt;path data-c=&quot;2211&quot; d=&quot;M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mfrac&quot; transform=&quot;translate(3973.8, 0)&quot;&gt;&lt;g data-mml-node=&quot;mrow&quot; transform=&quot;translate(220, 710)&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(389, 0)&quot;&gt;&lt;path data-c=&quot;41&quot; d=&quot;M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mo&quot; transform=&quot;translate(1361.2, 0)&quot;&gt;&lt;path data-c=&quot;2212&quot; d=&quot;M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(2361.4, 0)&quot;&gt;&lt;path data-c=&quot;45&quot; d=&quot;M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;msup&quot; transform=&quot;translate(3125.4, 0)&quot;&gt;&lt;g data-mml-node=&quot;mo&quot;&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot;/&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(389, 363) scale(0.707)&quot;&gt;&lt;path data-c=&quot;32&quot; d=&quot;M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mi&quot; transform=&quot;translate(1797, -686)&quot;&gt;&lt;path data-c=&quot;45&quot; d=&quot;M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z&quot;/&gt;&lt;/g&gt;&lt;rect x=&quot;120&quot; y=&quot;220&quot;/&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个统计量的含义简而言之就是自变量对因变量的相关性。用feature_selection库的SelectKBest类结合卡方检验来选择特征的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature\_selection &lt;span&gt;import&lt;/span&gt; SelectKBest &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature\_selection &lt;span&gt;import&lt;/span&gt; chi2 &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#选择K个最好的特征，返回选择特征后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; SelectKBest\(chi2, k=&lt;span&gt;2&lt;/span&gt;\).fit\_transform\(iris.data, iris.target\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.1.4 互信息法&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经典的互信息也是评价定性自变量对定性因变量的相关性的，互信息计算公式如下：&lt;/p&gt;&lt;p&gt;&lt;span data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;/p&gt;&lt;section role=&quot;presentation&quot; data-formula=&quot;I(X;Y) = \sum_{x \in X} \sum_{y \in Y} \rho(x,y)log\frac{\rho(x,y)}{\rho{(x)}\rho{(y)}}&amp;#10;&amp;#10;&quot; data-formula-type=&quot;block-equation&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为了处理定量数据，最大信息系数法被提出，使用feature_selection库的SelectKBest类结合最大信息系数法来选择特征的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature\_selection &lt;span&gt;import&lt;/span&gt; SelectKBest &lt;br/&gt; &lt;span&gt;2&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; minepy &lt;span&gt;import&lt;/span&gt; MINE &lt;br/&gt; &lt;span&gt;3&lt;/span&gt; &lt;br/&gt; &lt;span&gt;4&lt;/span&gt; &lt;span&gt;#由于MINE的设计不是函数式的，定义mic方法将其为函数式的，返回一个二元组，二元组的第2项设置成固定的P值0.5&lt;/span&gt;&lt;br/&gt; &lt;span&gt;5&lt;/span&gt; &lt;span&gt;&lt;span&gt;def&lt;/span&gt; &lt;span&gt;mic&lt;/span&gt;\&lt;span&gt;(x, y\)&lt;/span&gt;:&lt;/span&gt; &lt;br/&gt; &lt;span&gt;6&lt;/span&gt;     m = MINE\(\) &lt;br/&gt; &lt;span&gt;7&lt;/span&gt;     m.compute\_score\(x, y\)&lt;br/&gt; &lt;span&gt;8&lt;/span&gt;     &lt;span&gt;return&lt;/span&gt; \(m.mic\(\), &lt;span&gt;0.5&lt;/span&gt;\)&lt;br/&gt; &lt;span&gt;9&lt;/span&gt; &lt;br/&gt;&lt;span&gt;10&lt;/span&gt; &lt;span&gt;#选择K个最好的特征，返回特征选择后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;11&lt;/span&gt; SelectKBest\(&lt;span&gt;lambda&lt;/span&gt; X, Y: array\(map\(&lt;span&gt;lambda&lt;/span&gt; x:mic\(x, Y\), X.T\)\).T, k=&lt;span&gt;2&lt;/span&gt;\).fit\_transform\(iris.data, iris.target\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.2 Wrapper&lt;/span&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.2.1 递归特征消除法&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;递归消除特征法使用一个基模型来进行多轮训练，每轮训练后，消除若干权值系数的特征，再基于新的特征集进行下一轮训练。使用feature_selection库的RFE类来选择特征的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature\_selection &lt;span&gt;import&lt;/span&gt; RFE &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.linear\_model &lt;span&gt;import&lt;/span&gt; LogisticRegression &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#递归特征消除法，返回特征选择后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; &lt;span&gt;#参数estimator为基模型&lt;/span&gt;&lt;br/&gt;&lt;span&gt;6&lt;/span&gt; &lt;span&gt;#参数n\_features\_to\_select为选择的特征个数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;7&lt;/span&gt; RFE\(estimator=LogisticRegression\(\), n\_features\_to\_select=&lt;span&gt;2&lt;/span&gt;\).fit\_transform\(iris.data, iris.target\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.3 Embedded&lt;/span&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.3.1 基于惩罚项的特征选择法&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用带惩罚项的基模型，除了筛选出特征外，同时也进行了降维。使用feature_selection库的SelectFromModel类结合带L1惩罚项的逻辑回归模型，来选择特征的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature\_selection &lt;span&gt;import&lt;/span&gt; SelectFromModel &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.linear\_model &lt;span&gt;import&lt;/span&gt; LogisticRegression &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#带L1惩罚项的逻辑回归作为基模型的特征选择&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; SelectFromModel\(LogisticRegression\(penalty=&lt;span&gt;&quot;l1&quot;&lt;/span&gt;, C=&lt;span&gt;0.1&lt;/span&gt;\)\).fit\_transform\(iris.data, iris.target\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;L1惩罚项降维的原理在于保留多个对目标值具有同等相关性的特征中的一个&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;，所以没选到的特征不代表不重要。故，可结合L2惩罚项来优化。具体操作为：若一个特征在L1中的权值为1，选择在L2中权值差别不大且在L1中权值为0的特征构成同类集合，将这一集合中的特征平分L1中的权值，故需要构建一个新的逻辑回归模型：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt; &lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.linear\_model &lt;span&gt;import&lt;/span&gt; LogisticRegression &lt;br/&gt; &lt;span&gt;2&lt;/span&gt; &lt;br/&gt; &lt;span&gt;3&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;LR&lt;/span&gt;\&lt;span&gt;(LogisticRegression\)&lt;/span&gt;:&lt;/span&gt; &lt;br/&gt; &lt;span&gt;4&lt;/span&gt;     &lt;span&gt;&lt;span&gt;def&lt;/span&gt; \&lt;span&gt;_&lt;/span&gt;\&lt;span&gt;_init&lt;/span&gt;\&lt;span&gt;_&lt;/span&gt;\&lt;span&gt;_&lt;/span&gt;\&lt;span&gt;(self, threshold=&lt;span&gt;0.01&lt;/span&gt;, dual=False, tol=&lt;span&gt;1e-4&lt;/span&gt;, C=&lt;span&gt;1.0&lt;/span&gt;,&lt;br/&gt; &lt;span&gt;5&lt;/span&gt;                  fit\_intercept=True, intercept\_scaling=&lt;span&gt;1&lt;/span&gt;, class\_weight=None,&lt;br/&gt; &lt;span&gt;6&lt;/span&gt;                  random\_state=None, solver=&lt;span&gt;&#x27;liblinear&#x27;&lt;/span&gt;, max\_iter=&lt;span&gt;100&lt;/span&gt;,&lt;br/&gt; &lt;span&gt;7&lt;/span&gt;                  multi\_class=&lt;span&gt;&#x27;ovr&#x27;&lt;/span&gt;, verbose=&lt;span&gt;0&lt;/span&gt;, warm\_start=False, n\_jobs=&lt;span&gt;1&lt;/span&gt;\)&lt;/span&gt;:&lt;/span&gt;&lt;br/&gt; &lt;span&gt;8&lt;/span&gt; &lt;br/&gt; &lt;span&gt;9&lt;/span&gt;         &lt;span&gt;#权值相近的阈值&lt;/span&gt;&lt;br/&gt;&lt;span&gt;10&lt;/span&gt;         self.threshold = threshold &lt;br/&gt;&lt;span&gt;11&lt;/span&gt;         LogisticRegression.\_\_init\_\_\(self, penalty=&lt;span&gt;&#x27;l1&#x27;&lt;/span&gt;, dual=dual, tol=tol, C=C, &lt;br/&gt;&lt;span&gt;12&lt;/span&gt;                  fit\_intercept=fit\_intercept, intercept\_scaling=intercept\_scaling, &lt;span&gt;&lt;span&gt;class&lt;/span&gt;\&lt;span&gt;_weight&lt;/span&gt;=&lt;span&gt;class&lt;/span&gt;\&lt;span&gt;_weight&lt;/span&gt;, &lt;br/&gt;13                  &lt;span&gt;random&lt;/span&gt;\&lt;span&gt;_state&lt;/span&gt;=&lt;span&gt;random&lt;/span&gt;\&lt;span&gt;_state&lt;/span&gt;, &lt;span&gt;solver&lt;/span&gt;=&lt;span&gt;solver&lt;/span&gt;, &lt;span&gt;max&lt;/span&gt;\&lt;span&gt;_iter&lt;/span&gt;=&lt;span&gt;max&lt;/span&gt;\&lt;span&gt;_iter&lt;/span&gt;, &lt;br/&gt;14                  &lt;span&gt;multi&lt;/span&gt;\&lt;span&gt;_class&lt;/span&gt;=&lt;span&gt;multi&lt;/span&gt;\&lt;span&gt;_class&lt;/span&gt;, &lt;span&gt;verbose&lt;/span&gt;=&lt;span&gt;verbose&lt;/span&gt;, &lt;span&gt;warm&lt;/span&gt;\&lt;span&gt;_start&lt;/span&gt;=&lt;span&gt;warm&lt;/span&gt;\&lt;span&gt;_start&lt;/span&gt;, &lt;span&gt;n&lt;/span&gt;\&lt;span&gt;_jobs&lt;/span&gt;=&lt;span&gt;n&lt;/span&gt;\&lt;span&gt;_jobs&lt;/span&gt;\) &lt;br/&gt;15         #使用同样的参数创建&lt;span&gt;L2&lt;/span&gt;逻辑回归&lt;br/&gt;16         &lt;span&gt;self&lt;/span&gt;.&lt;span&gt;l2&lt;/span&gt; = &lt;span&gt;LogisticRegression&lt;/span&gt;\&lt;span&gt;(penalty=&lt;span&gt;&#x27;l2&#x27;&lt;/span&gt;, dual=dual, tol=tol, C=C, fit\_intercept=fit\_intercept, intercept\_scaling=intercept\_scaling, class\_weight = class\_weight, random\_state=random\_state, solver=solver, max\_iter=max\_iter, multi\_class=multi\_class, verbose=verbose, warm\_start=warm\_start, n\_jobs=n\_jobs\)&lt;/span&gt; &lt;br/&gt;17 &lt;br/&gt;18     &lt;span&gt;def&lt;/span&gt; &lt;span&gt;fit&lt;/span&gt;\&lt;span&gt;(self, X, y, sample\_weight=None\)&lt;/span&gt;:&lt;/span&gt; &lt;br/&gt;&lt;span&gt;19&lt;/span&gt;         &lt;span&gt;#训练L1逻辑回归&lt;/span&gt;&lt;br/&gt;&lt;span&gt;20&lt;/span&gt;         super\(LR, self\).fit\(X, y, sample\_weight=sample\_weight\) &lt;span&gt;21&lt;/span&gt;         self.coef\_old\_ = self.coef\_.copy\(\) &lt;br/&gt;&lt;span&gt;22&lt;/span&gt;         &lt;span&gt;#训练L2逻辑回归&lt;/span&gt;&lt;br/&gt;&lt;span&gt;23&lt;/span&gt;         self.l2.fit\(X, y, sample\_weight=sample\_weight\) &lt;br/&gt;&lt;span&gt;24&lt;/span&gt; &lt;br/&gt;&lt;span&gt;25&lt;/span&gt;         cntOfRow, cntOfCol = self.coef\_.shape &lt;br/&gt;&lt;span&gt;26&lt;/span&gt;         &lt;span&gt;#权值系数矩阵的行数对应目标值的种类数目&lt;/span&gt;&lt;br/&gt;&lt;span&gt;27&lt;/span&gt;         &lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; range\(cntOfRow\): &lt;span&gt;28&lt;/span&gt;             &lt;span&gt;for&lt;/span&gt; j &lt;span&gt;in&lt;/span&gt; range\(cntOfCol\): &lt;br/&gt;&lt;span&gt;29&lt;/span&gt;                 coef = self.coef\_\[i\]\[j\] &lt;br/&gt;&lt;span&gt;30&lt;/span&gt;                 &lt;span&gt;#L1逻辑回归的权值系数不为0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;31&lt;/span&gt;                 &lt;span&gt;if&lt;/span&gt; coef \!= &lt;span&gt;0&lt;/span&gt;: &lt;br/&gt;&lt;span&gt;32&lt;/span&gt;                     idx = \[j\] &lt;br/&gt;&lt;span&gt;33&lt;/span&gt;                     &lt;span&gt;#对应在L2逻辑回归中的权值系数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;34&lt;/span&gt;                     coef1 = self.l2.coef\_\[i\]\[j\] &lt;br/&gt;&lt;span&gt;35&lt;/span&gt;                     &lt;span&gt;for&lt;/span&gt; k &lt;span&gt;in&lt;/span&gt; range\(cntOfCol\): &lt;br/&gt;&lt;span&gt;36&lt;/span&gt;                         coef2 = self.l2.coef\_\[i\]\[k\] &lt;br/&gt;&lt;span&gt;37&lt;/span&gt;                         &lt;span&gt;#在L2逻辑回归中，权值系数之差小于设定的阈值，且在L1中对应的权值为0&lt;/span&gt;&lt;br/&gt;&lt;span&gt;38&lt;/span&gt;                         &lt;span&gt;if&lt;/span&gt; abs\(coef1-coef2\) \&amp;lt; self.threshold &lt;span&gt;and&lt;/span&gt; j \!= k &lt;span&gt;and&lt;/span&gt; self.coef\_\[i\]\[k\] == &lt;span&gt;0&lt;/span&gt;: &lt;br/&gt;&lt;span&gt;39&lt;/span&gt; idx.append\(k\) &lt;br/&gt;&lt;span&gt;40&lt;/span&gt;                     &lt;span&gt;#计算这一类特征的权值系数均值&lt;/span&gt;&lt;br/&gt;&lt;span&gt;41&lt;/span&gt;                     mean = coef / len\(idx\) &lt;br/&gt;&lt;span&gt;42&lt;/span&gt;                     self.coef\_\[i\]\[idx\] = mean &lt;br/&gt;&lt;span&gt;43&lt;/span&gt;         &lt;span&gt;return&lt;/span&gt; self&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用feature_selection库的SelectFromModel类结合带L1以及L2惩罚项的逻辑回归模型，来选择特征的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature\_selection &lt;span&gt;import&lt;/span&gt; SelectFromModel &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#带L1和L2惩罚项的逻辑回归作为基模型的特征选择&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#参数threshold为权值系数之差的阈值&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; SelectFromModel\(LR\(threshold=&lt;span&gt;0.5&lt;/span&gt;, C=&lt;span&gt;0.1&lt;/span&gt;\)\).fit\_transform\(iris.data, iris.target\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.3.2 基于树模型的特征选择法&lt;/span&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;树模型中GBDT也可用来作为基模型进行特征选择，使用feature_selection库的SelectFromModel类结合GBDT模型，来选择特征的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.feature\_selection &lt;span&gt;import&lt;/span&gt; SelectFromModel &lt;span&gt;2&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.ensemble &lt;span&gt;import&lt;/span&gt; GradientBoostingClassifier &lt;span&gt;3&lt;/span&gt; &lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#GBDT作为基模型的特征选择&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; SelectFromModel\(GradientBoostingClassifier\(\)\).fit\_transform\(iris.data, iris.target\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3.4 回顾&lt;/span&gt;&lt;/h3&gt;&lt;table align=&quot;center&quot; data-tool=&quot;mdnice编辑器&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;类&lt;/td&gt;&lt;td&gt;所属方式&lt;/td&gt;&lt;td&gt;说明&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;VarianceThreshold&lt;/td&gt;&lt;td&gt;Filter&lt;/td&gt;&lt;td&gt;方差选择法&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SelectKBest&lt;/td&gt;&lt;td&gt;Filter&lt;/td&gt;&lt;td&gt;可选关联系数、卡方校验、最大信息系数作为得分计算的方法&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;RFE&lt;/td&gt;&lt;td&gt;Wrapper&lt;/td&gt;&lt;td&gt;递归地训练基模型，将权值系数较小的特征从特征集合中消除&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SelectFromModel&lt;/td&gt;&lt;td&gt;Embedded&lt;/td&gt;&lt;td&gt;训练基模型，选择权值系数较高的特征&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt; &lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;降维&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当特征选择完成后，可以直接训练模型了，但是可能由于特征矩阵过大，导致计算量大，训练时间长的问题，因此降低特征矩阵维度也是必不可少的。常见的降维方法除了以上提到的基于L1惩罚项的模型以外，另外还有主成分分析法（PCA）和线性判别分析（LDA），线性判别分析本身也是一个分类模型。PCA和LDA有很多的相似点，其本质是要将原始的样本映射到维度更低的样本空间中，但是PCA和LDA的映射目标不一样：&lt;span&gt;PCA是为了让映射后的样本具有最大的发散性；而LDA是为了让映射后的样本有最好的分类性能&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;。所以说PCA是一种无监督的降维方法，而LDA是一种有监督的降维方法。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.1 主成分分析法（PCA）&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用decomposition库的PCA类选择特征的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.decomposition &lt;span&gt;import&lt;/span&gt; PCA &lt;span&gt;2&lt;/span&gt; &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#主成分分析法，返回降维后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#参数n\_components为主成分数目&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; PCA\(n\_components=&lt;span&gt;2&lt;/span&gt;\).fit\_transform\(iris.data\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.2 线性判别分析法（LDA）&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用lda库的LDA类选择特征的代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;1&lt;/span&gt; &lt;span&gt;from&lt;/span&gt; sklearn.lda &lt;span&gt;import&lt;/span&gt; LDA &lt;br/&gt;&lt;span&gt;2&lt;/span&gt; &lt;br/&gt;&lt;span&gt;3&lt;/span&gt; &lt;span&gt;#线性判别分析法，返回降维后的数据&lt;/span&gt;&lt;br/&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;#参数n\_components为降维后的维数&lt;/span&gt;&lt;br/&gt;&lt;span&gt;5&lt;/span&gt; LDA\(n\_components=&lt;span&gt;2&lt;/span&gt;\).fit\_transform\(iris.data, iris.target\)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4.3 回顾&lt;/span&gt;&lt;/h3&gt;&lt;table align=&quot;center&quot; data-tool=&quot;mdnice编辑器&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;库&lt;/td&gt;&lt;td&gt;类&lt;/td&gt;&lt;td&gt;说明&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;decomposition&lt;/td&gt;&lt;td&gt;PCA&lt;/td&gt;&lt;td&gt;主成分分析法&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;lda&lt;/td&gt;&lt;td&gt;LDA&lt;/td&gt;&lt;td&gt;线性判别分析法&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt; &lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;总结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;再让我们回归一下本文开始的特征工程的思维导图，我们可以使用sklearn完成几乎所有特征处理的工作，而且不管是数据预处理，还是特征选择，抑或降维，它们都是通过某个类的方法fit_transform完成的，fit_transform要不只带一个参数：特征矩阵，要不带两个参数：特征矩阵加目标向量。这些难道都是巧合吗？还是故意设计成这样？方法fit_transform中有fit这一单词，它和训练模型的fit方法有关联吗？接下来，我将在&lt;span&gt;《使用sklearn优雅地进行数据挖掘》&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;中阐述其中的奥妙！&lt;/p&gt;&lt;section&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1] &lt;/span&gt;&lt;p&gt;IRIS（鸢尾花）数据集: &lt;em&gt;http://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_iris.html#sklearn.datasets.load_iris&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2] &lt;/span&gt;&lt;p&gt;通常使用哑编码的方式将定性特征转换为定量特征: &lt;em&gt;http://www.ats.ucla.edu/stat/mult_pkg/faq/general/dummy.htm&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3] &lt;/span&gt;&lt;p&gt;L1惩罚项降维的原理在于保留多个对目标值具有同等相关性的特征中的一个: &lt;em&gt;http://www.zhihu.com/question/28641663/answer/41653367&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4] &lt;/span&gt;&lt;p&gt;PCA是为了让映射后的样本具有最大的发散性；而LDA是为了让映射后的样本有最好的分类性能: &lt;em&gt;http://www.cnblogs.com/LeftNotEasy/archive/2011/01/08/lda-and-pca-machine-learning.html&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5] &lt;/span&gt;&lt;p&gt;《使用sklearn优雅地进行数据挖掘》: &lt;em&gt;http://www.cnblogs.com/jasonfreak/p/5448462.html&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[6] &lt;/span&gt;&lt;p&gt;FAQ: What is dummy coding?: &lt;em&gt;http://www.ats.ucla.edu/stat/mult_pkg/faq/general/dummy.htm&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[7] &lt;/span&gt;&lt;p&gt;IRIS（鸢尾花）数据集: &lt;em&gt;http://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_iris.html#sklearn.datasets.load_iris&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[8] &lt;/span&gt;&lt;p&gt;卡方检验: &lt;em&gt;http://wiki.mbalib.com/wiki/%E5%8D%A1%E6%96%B9%E6%A3%80%E9%AA%8C&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[9] &lt;/span&gt;&lt;p&gt;干货：结合Scikit-learn介绍几种常用的特征选择方法: &lt;em&gt;http://dataunion.org/14072.html&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[10] &lt;/span&gt;&lt;p&gt;机器学习中，有哪些特征选择的工程方法？: &lt;em&gt;http://www.zhihu.com/question/28641663/answer/41653367&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[11] &lt;/span&gt;&lt;p&gt;机器学习中的数学(4)-线性判别分析（LDA）, 主成分分析(PCA): &lt;em&gt;http://www.cnblogs.com/LeftNotEasy/archive/2011/01/08/lda-and-pca-machine-learning.html&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;65&quot; data-source-title=&quot;&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;作者：jasonfreak&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;链接：https://www.cnblogs.com/jasonfreak/p/5448385.html&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;↓↓↓&lt;/span&gt;&lt;span&gt;点击关注，回复&lt;/span&gt;&lt;span&gt;&lt;strong&gt;资料&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，10个G的惊喜&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jupejmznDCicCEDfm4Q5koCraSm45XoTnY8A5RQMIFlLNVKlC8bo97y7Pibp6VwDZmUGebhLN3akM0R19icNU6tCw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>