<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>7ef8a7e1419a14a81b8878b22d99ce81</guid>
<title>云原生初体验：在 k8s 上部署 Spring Boot 应用</title>
<link>https://toutiao.io/k/d0wf19f</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5984375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag92ZyTJsQdbSKxuaOZNVUompgqaSKURia3wicyklqEkGZOS1BdaEvF1B5xnp1Cea94MicWzTicPvjZ9zQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n139&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n139&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;你会不会对“云原生”很有兴趣，却不知道从何入手？&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n195&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;本文会在window环境下，构建一套基于k8s的istio环境，并且通过skaffold完成镜像的构建和项目部署到集群环境。其实对于实验环境有限的朋友们，完全可以在某里云上，按量付费搞3台”突发性能实例“，玩一晚，也就是杯咖啡钱。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n195&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;好吧，让我开始吧！&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n143&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;h1 cid=&quot;n192&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;执行流程&lt;/span&gt;&lt;/h1&gt;&lt;p cid=&quot;n193&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;整体流程的话，如下图所示，通过 Skaffold+jib 将开发的应用打包成镜像，提交到本地仓库，并且将应用部署到集群中。k8s中部署2个pod，模拟应用不同的版本，并且配置访问权重20%：80%。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5971867007672634&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag92ZyTJsQdbSKxuaOZNVUomYHPMuxzuaAHk2OMFnLr1dgZicNUuI2Jld7fAnHY2ibX2bk01VAQ9ry6g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;782&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n197&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;h1 cid=&quot;n145&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;环境选择&lt;/span&gt;&lt;/h1&gt;&lt;p cid=&quot;n182&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;我之前有文章详细介绍过minikube。本次实验，开始的时候，我就一直沉溺在使用kind的便捷上，而且直接可以在docker上部署集群，可以说非常方便。但是由于我对K8S的理解并不足够，导致后面遇到了很多问题，所以，在这里建议新上手的小伙伴，还是使用minikube吧。k3s和RKE都需要多台虚拟机，碍于机器性能，这种方案暂时不考虑了。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n182&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;下面表格，对比了minikube、kind、k3s 部署环境，以及支持情况，方便大家选择。&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n65&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n66&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;br/&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n68&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;minikube&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n69&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;kind&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n115&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;k3s&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n70&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n71&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;runtime&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n72&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;VM&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n73&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;container&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n74&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;native&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n75&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n76&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;supported architectures&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n77&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;AMD64&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n78&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;AMD64&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n79&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;AMD64, ARMv7, ARM64&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n80&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n81&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;supported container runtimes&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n82&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;Docker,CRI-O,containerd,gvisor&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n83&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;Docker&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n84&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;Docker, containerd&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n85&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n86&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;startup time initial/following&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n87&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;5:19 / 3:15&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n88&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2:48 / 1:06&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n89&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;0:15 / 0:15&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n90&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n91&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;memory requirements&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n92&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2GB&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n93&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;8GB (Windows, MacOS)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n94&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;512 MB&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n95&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n96&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;requires root?&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n97&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;no&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n98&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;no&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n99&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;yes (rootless is experimental)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n100&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n101&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;multi-cluster support&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n102&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;yes&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n103&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;yes&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n104&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;no (can be achieved using containers)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n105&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n106&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;multi-node support&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n107&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;no&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n108&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;yes&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n109&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;yes&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n110&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n111&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;project page&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n112&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://minikube.sigs.k8s.io/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n113&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://kind.sigs.k8s.io/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n114&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://k3s.io/&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;[&lt;span&gt;1&lt;/span&gt;]   &lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;span md-inline=&quot;plain&quot;&gt;表格引用自：&lt;/span&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;http://jiagoushi.pro/minikube-vs-kind-vs-k3s-what-should-i-use&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n173&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n241&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;docker desktop 没有特殊要求。其他的自己用的顺手就好，还是需要特别说一下minikube，别用最新的coredns一直都拉不下来，除非你的魔法，可以完全搞定，否则，还是用阿里编译的minikube版本吧，别跟自己较劲，别问我为什么...  &lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n239&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;我用的版本罗列在下面了：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;bash&quot; cid=&quot;n205&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;➜  ~ istioctl version&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;client version: &lt;span&gt;1&lt;/span&gt;.10.2&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;control plane version: &lt;span&gt;1&lt;/span&gt;.10.2&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;data plane version: &lt;span&gt;1&lt;/span&gt;.10.2 (10 proxies)&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;➜  ~ minikube version&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;minikube version: v1.18.1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;commit: 511aca80987826051cf1c6527c3da706925f7909&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;➜  ~ skaffold version&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;v1.29.0&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;/pre&gt;&lt;p cid=&quot;n207&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n209&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;h1 cid=&quot;n152&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;环境搭建&lt;/span&gt;&lt;/h1&gt;&lt;p cid=&quot;n154&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;h2 cid=&quot;n55&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;使用minikube创建集群&lt;/span&gt;&lt;/h2&gt;&lt;p cid=&quot;n288&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt; 使用 hyperv 作为引擎 ， 内存 8192M cup 4核，不能再少了，否则拉不起来 istio  &lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;bash&quot; cid=&quot;n51&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;➜  ~ minikube &lt;span&gt;start&lt;/span&gt;  &lt;span&gt;--image-mirror-country&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&#x27;cn&#x27;&lt;/span&gt; &lt;span&gt;--registry-mirror&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;https://hq0igpc0.mirror.aliyuncs.com &lt;span&gt;--vm-driver&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;hyperv&quot;&lt;/span&gt; &lt;span&gt;--memory&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;8192&lt;/span&gt; &lt;span&gt;--cpus&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;4&lt;/span&gt; &lt;span&gt;--hyperv-virtual-switch&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;minikubeSwitch&quot;&lt;/span&gt; &lt;span&gt;--image-repository&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;registry.cn-hangzhou.aliyuncs.com/google_containers&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n258&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;还要在 hyperv里创建一个虚拟路由，这里我构建了一个内部网络，这样可以通过设置网卡的ip，将内部网络的网段固定下来，否则，每次重启都会变化ip&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.58828125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag92ZyTJsQdbSKxuaOZNVUomdic5G6UQSStmWGtKNBnhxvdkpSpZfAC4ge4XgtCYtgOURVZgoia5oicuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n47&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;配置让内部网络，共享访问互联网&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6866438356164384&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag92ZyTJsQdbSKxuaOZNVUomLWT5BiceJRH8UZ6iaPgYLw4cHlf9ZHwv7fY7FlcR5iaQqsMDBoqMtib4Wg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1168&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n277&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;启动成功&lt;/span&gt;&lt;/p&gt;&lt;pre mdtype=&quot;fences&quot; cid=&quot;n271&quot; lang=&quot;bash&quot; spellcheck=&quot;false&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;➜  istio-1.10.2 minikube &lt;span&gt;start&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;😄  Microsoft Windows &lt;span&gt;10&lt;/span&gt; Pro &lt;span&gt;10&lt;/span&gt;.0.19042 Build &lt;span&gt;19042&lt;/span&gt; 上的 minikube v1.18.1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;🎉  minikube &lt;span&gt;1&lt;/span&gt;.20.0 is available! Download it: https://github.com/kubernetes/minikube/releases/tag/v1.20.0&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;✨  根据现有的配置文件使用 hyperv 驱动程序&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;👍  Starting control plane &lt;span&gt;node&lt;/span&gt; minikube &lt;span&gt;in&lt;/span&gt; cluster minikube&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;🔄  Restarting existing hyperv VM &lt;span&gt;for&lt;/span&gt; &lt;span&gt;&quot;minikube&quot;&lt;/span&gt; ...&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;🐳  正在 Docker &lt;span&gt;20&lt;/span&gt;.10.3 中准备 Kubernetes v1.20.2…&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;🔎  Verifying Kubernetes components...&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;    ▪ Using image registry.cn-hangzhou.aliyuncs.com/google_containers/storage-provisioner:v4 (global image repository)&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;    ▪ Using image registry.hub.docker.com/kubernetesui/dashboard:v2.1.0&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;    ▪ Using image registry.hub.docker.com/kubernetesui/metrics-scraper:v1.0.4&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;    ▪ Using image registry.cn-hangzhou.aliyuncs.com/google_containers/metrics-server-amd64:v0.2.1 (global image repository)&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;🌟  Enabled addons: metrics-server, storage-provisioner, dashboard, default-storageclass&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;🏄  Done! kubectl is now configured to use &lt;span&gt;&quot;minikube&quot;&lt;/span&gt; cluster and &lt;span&gt;&quot;default&quot;&lt;/span&gt; namespace by default&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n275&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;h2 cid=&quot;n292&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;部署 istio&lt;/span&gt;&lt;/h2&gt;&lt;p cid=&quot;n273&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建 istio-system 的命名空间&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n9&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;kubectl create namespace istio-system&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n10&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;安装 istio&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n281&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;istioctl manifest apply --set profile=demo&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n15&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n286&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;安装完成后，执行命令 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;kubectl get svc -n istio-system&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre mdtype=&quot;fences&quot; cid=&quot;n16&quot; lang=&quot;bash&quot; spellcheck=&quot;false&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;➜  ~ kubectl &lt;span&gt;get&lt;/span&gt; svc &lt;span&gt;-n&lt;/span&gt; istio-system&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;NAME                   TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)                                                                      AGE&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;istio-egressgateway    ClusterIP      &lt;span&gt;10&lt;/span&gt;.105.31.73     &amp;lt;none&amp;gt;        &lt;span&gt;80&lt;/span&gt;/TCP,443/TCP                                                               8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;istio-ingressgateway   LoadBalancer   &lt;span&gt;10&lt;/span&gt;.103.61.73     &amp;lt;pending&amp;gt;     &lt;span&gt;15021&lt;/span&gt;:31031/TCP,80:31769/TCP,443:30373/TCP,31400:31833/TCP,15443:32411/TCP   8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;istiod                 ClusterIP      &lt;span&gt;10&lt;/span&gt;.110.109.205   &amp;lt;none&amp;gt;        &lt;span&gt;15010&lt;/span&gt;/TCP,15012/TCP,443/TCP,15014/TCP                                        8d&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n284&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;h2 cid=&quot;n295&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;部署 bookinfo&lt;/span&gt;&lt;/h2&gt;&lt;p cid=&quot;n22&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;部署 bookinfo demo 验证环境&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n299&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;执行命令&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;bash&quot; cid=&quot;n301&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl label namespace default &lt;span&gt;istio-injection&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;enabled&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;kubectl apply &lt;span&gt;-f&lt;/span&gt; samples/bookinfo/platform/kube/bookinfo.yaml&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n315&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n32&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;等待pod都启动起来以后，添加bookinfo网络配置，用于访问 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;kubectl apply -f .\samples\bookinfo\networking\bookinfo-gateway.yaml&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;bash&quot; cid=&quot;n313&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;➜ istio-1.10.2 kubectl apply &lt;span&gt;-f&lt;/span&gt; .\samples\bookinfo\networking\bookinfo-gateway.yaml&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;gateway.networking.istio.io/bookinfo-gateway created&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;virtualservice.networking.istio.io/bookinfo created&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n35&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n335&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;使用命令查看service :  &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;kubectl get services&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre mdtype=&quot;fences&quot; cid=&quot;n336&quot; lang=&quot;bash&quot; spellcheck=&quot;false&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;➜  ~ kubectl &lt;span&gt;get&lt;/span&gt; services&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;NAME             TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;callme-service   NodePort    &lt;span&gt;10&lt;/span&gt;.106.26.24     &amp;lt;none&amp;gt;        &lt;span&gt;8080&lt;/span&gt;:30101/TCP   8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;details          ClusterIP   &lt;span&gt;10&lt;/span&gt;.110.253.19    &amp;lt;none&amp;gt;        &lt;span&gt;9080&lt;/span&gt;/TCP         8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;kubernetes       ClusterIP   &lt;span&gt;10&lt;/span&gt;.96.0.1        &amp;lt;none&amp;gt;        &lt;span&gt;443&lt;/span&gt;/TCP          8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;productpage      ClusterIP   &lt;span&gt;10&lt;/span&gt;.96.246.175    &amp;lt;none&amp;gt;        &lt;span&gt;9080&lt;/span&gt;/TCP         8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;ratings          ClusterIP   &lt;span&gt;10&lt;/span&gt;.99.234.109    &amp;lt;none&amp;gt;        &lt;span&gt;9080&lt;/span&gt;/TCP         8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;reviews          ClusterIP   &lt;span&gt;10&lt;/span&gt;.103.177.123   &amp;lt;none&amp;gt;        &lt;span&gt;9080&lt;/span&gt;/TCP         8d&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n349&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n347&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n337&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看pods状态 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;kubectl get pods&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;bash&quot; cid=&quot;n339&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;➜  ~ kubectl &lt;span&gt;get&lt;/span&gt; pods&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;NAME                                 READY   STATUS    RESTARTS   AGE&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;callme-service-v1-76dd76ddcc-znb62   &lt;span&gt;2&lt;/span&gt;/2     Running   &lt;span&gt;0&lt;/span&gt;          4h59m&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;callme-service-v2-679db76bbc-m4svm   &lt;span&gt;2&lt;/span&gt;/2     Running   &lt;span&gt;0&lt;/span&gt;          4h59m&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;details-v1-79f774bdb9-qk9q8          &lt;span&gt;2&lt;/span&gt;/2     Running   &lt;span&gt;8&lt;/span&gt;          8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;productpage-v1-6b746f74dc-p4xcb      &lt;span&gt;2&lt;/span&gt;/2     Running   &lt;span&gt;8&lt;/span&gt;          8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;ratings-v1-b6994bb9-dlvjm            &lt;span&gt;2&lt;/span&gt;/2     Running   &lt;span&gt;8&lt;/span&gt;          8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;reviews-v1-545db77b95-sgdzq          &lt;span&gt;2&lt;/span&gt;/2     Running   &lt;span&gt;8&lt;/span&gt;          8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;reviews-v2-7bf8c9648f-t6s8z          &lt;span&gt;2&lt;/span&gt;/2     Running   &lt;span&gt;8&lt;/span&gt;          8d&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;reviews-v3-84779c7bbc-4p8hv          &lt;span&gt;2&lt;/span&gt;/2     Running   &lt;span&gt;8&lt;/span&gt;          8d&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n355&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n37&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n38&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查看集群ip 以及 端口&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;bash&quot; cid=&quot;n359&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;➜  ~ kubectl &lt;span&gt;get&lt;/span&gt; po &lt;span&gt;-l&lt;/span&gt; &lt;span&gt;istio&lt;/span&gt;&lt;span&gt;=&lt;/span&gt;ingressgateway &lt;span&gt;-n&lt;/span&gt; istio-system &lt;span&gt;-o&lt;/span&gt; &lt;span&gt;&#x27;jsonpath={.items[0].status.hostIP}&#x27;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;192&lt;/span&gt;.168.137.115&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;➜ istio-1.10.2 kubectl &lt;span&gt;get&lt;/span&gt; svc istio-ingressgateway &lt;span&gt;-n&lt;/span&gt; istio-system&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;NAME          TYPE      CLUSTER-IP   EXTERNAL-IP  PORT(S)                                   AGE&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;istio-ingressgateway  LoadBalancer  &lt;span&gt;10&lt;/span&gt;.110.228.32  &amp;lt;pending&amp;gt;   &lt;span&gt;15021&lt;/span&gt;:32343/TCP,80:30088/TCP,443:31869/TCP,31400:32308/TCP,15443:32213/TCP  3m17s&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;/pre&gt;&lt;p cid=&quot;n157&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;于是访问地址： &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;http://192.168.137.115:31769/productpage&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.35703125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag92ZyTJsQdbSKxuaOZNVUom0SUUibfL0usicfgDib93Z5PFNh4IUlKMbRMlfpV0k7vbCJme3BapMX6VQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n378&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;bookinfo.png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n374&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;我们 bookinfo 就部署成功了。接下来我们创建应用&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n382&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;h2 cid=&quot;n384&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;构建应用&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.03768115942029&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag92ZyTJsQdbSKxuaOZNVUomxVsLcvxQXib8UUEOibhKUbUZFOsgoJVvFDXhVv1Gg7QTeAZ6iabH4ztow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;345&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n387&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;构建一个普通的springboot工程,添加编译插件，这里我们使用了本地的docker仓库存储镜像&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n409&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;        &amp;lt;plugins&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;            &amp;lt;plugin&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                &amp;lt;executions&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                    &amp;lt;execution&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                        &amp;lt;goals&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                            &amp;lt;goal&amp;gt;build-info&amp;lt;/goal&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                            &amp;lt;goal&amp;gt;repackage&amp;lt;/goal&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                        &amp;lt;/goals&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                    &amp;lt;/execution&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                &amp;lt;/executions&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;            &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;            &amp;lt;plugin&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                &amp;lt;groupId&amp;gt;com.google.cloud.tools&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                &amp;lt;artifactId&amp;gt;jib-maven-plugin&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                &amp;lt;version&amp;gt;3.1.1&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                &amp;lt;configuration&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                    &amp;lt;to&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                        &amp;lt;image&amp;gt;127.0.0.1:9001/${project.artifactId}:${project.version}&amp;lt;/image&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                        &amp;lt;auth&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                            &amp;lt;username&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                                xxx&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                            &amp;lt;/username&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                            &amp;lt;password&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                                xxx&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                            &amp;lt;/password&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                        &amp;lt;/auth&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                    &amp;lt;/to&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                    &amp;lt;allowInsecureRegistries&amp;gt;true&amp;lt;/allowInsecureRegistries&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;                &amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;            &amp;lt;/plugin&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;        &amp;lt;/plugins&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;    &amp;lt;/build&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n405&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n411&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;构建一个简单的rest，现实一个构建名称，以及配置的一个版本号&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;java&quot; cid=&quot;n397&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;BuildProperties&lt;/span&gt; &lt;span&gt;buildProperties&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;@Value&lt;/span&gt;(&lt;span&gt;&quot;${VERSION}&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; &lt;span&gt;version&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;@GetMapping&lt;/span&gt;(&lt;span&gt;&quot;/ping&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; &lt;span&gt;ping&lt;/span&gt;() {&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;    &lt;span&gt;LOGGER&lt;/span&gt;.&lt;span&gt;info&lt;/span&gt;(&lt;span&gt;&quot;Ping: name={}, version={}&quot;&lt;/span&gt;, &lt;span&gt;buildProperties&lt;/span&gt;.&lt;span&gt;getName&lt;/span&gt;(), &lt;span&gt;version&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;    &lt;span&gt;return&lt;/span&gt; &lt;span&gt;&quot;I&#x27;m callme-service &quot;&lt;/span&gt; &lt;span&gt;+&lt;/span&gt; &lt;span&gt;version&lt;/span&gt;;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n376&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;   创建 skaffold.xml 用于给 skafflod 编译镜像，提交集群使用&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;yaml&quot; cid=&quot;n419&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;apiVersion&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;skaffold/v2alpha1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;kind&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;Config&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;build&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  artifacts&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    - &lt;/span&gt;&lt;span&gt;image&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;127.0.0.1&lt;span&gt;:&lt;/span&gt;9001/callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      jib&lt;/span&gt;&lt;span&gt;: {}&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  tagPolicy&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    gitCommit&lt;/span&gt;&lt;span&gt;: {}&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n422&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n423&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n425&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建k8s的部署描述&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;k8s/deployment.yml&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，以及service用于访问&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;yaml&quot; cid=&quot;n429&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;apiVersion&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;apps/v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;kind&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;Deployment&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;metadata&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service-v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;spec&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  replicas&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  selector&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    matchLabels&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      app&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      version&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  template&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    metadata&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      labels&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        app&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        version&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    spec&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      containers&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        - &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          image&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;127.0.0.1&lt;span&gt;:&lt;/span&gt;9001/callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          imagePullPolicy&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;IfNotPresent&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          ports&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;            - &lt;/span&gt;&lt;span&gt;containerPort&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          env&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;            - &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;VERSION&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;              value&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;&quot;v1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;apiVersion&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;apps/v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;kind&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;Deployment&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;metadata&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service-v2&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;spec&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  replicas&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  selector&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    matchLabels&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      app&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      version&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v2&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  template&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    metadata&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      labels&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        app&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        version&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v2&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    spec&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      containers&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        - &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          image&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;127.0.0.1&lt;span&gt;:&lt;/span&gt;9001/callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          imagePullPolicy&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;IfNotPresent&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          ports&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;            - &lt;/span&gt;&lt;span&gt;containerPort&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          env&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;            - &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;VERSION&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;              value&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;&quot;v2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;apiVersion&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;kind&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;Service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;metadata&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  labels&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    app&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;spec&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  type&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;NodePort&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  ports&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  - &lt;/span&gt;&lt;span&gt;port&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;8080&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;http&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    nodePort&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;30101&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  selector&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    app&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n431&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n432&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n434&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;创建 istio描述文件 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;k8s\istio-rules.yaml&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;yaml&quot; cid=&quot;n440&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;apiVersion&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;networking.istio.io/v1beta1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;kind&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;DestinationRule&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;metadata&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service-destination&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;spec&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  host&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  subsets&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    - &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      labels&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        version&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    - &lt;/span&gt;&lt;span&gt;name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v2&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      labels&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        version&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v2&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#  trafficPolicy: # --- enable for adding circuit breaker into DestinationRule&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#    connectionPool:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#      http:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#        http1MaxPendingRequests: 1&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#        maxRequestsPerConnection: 1&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#        maxRetries: 0&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#    outlierDetection:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#      consecutive5xxErrors: 3&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#      interval: 30s&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#      baseEjectionTime: 1m&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#      maxEjectionPercent: 100&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;apiVersion&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;networking.istio.io/v1beta1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;kind&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;VirtualService&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;metadata&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  name&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service-route&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;spec&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  hosts&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    - &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;  http&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;    - &lt;/span&gt;&lt;span&gt;route&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      - &lt;/span&gt;&lt;span&gt;destination&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          host&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          subset&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v2&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        weight&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      - &lt;/span&gt;&lt;span&gt;destination&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          host&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;callme-service&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;          subset&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;v1&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        weight&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      retries&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        attempts&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;        retryOn&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;gateway-error,connect-failure,refused-stream&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;      timeout&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;0.5s&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#      fault: # --- enable for inject fault into the route&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#        delay:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#          percentage:&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#            value: 33&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;#          fixedDelay: 3s&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n438&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n446&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;运行 skaffold 进行编译，提交镜像，并部署应用 &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;skaffold run --tail&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre mdtype=&quot;fences&quot; cid=&quot;n516&quot; lang=&quot;&quot; spellcheck=&quot;false&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;➜  callme-service git:(master) ✗ skaffold run --tail&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;Generating tags...&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;/&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - 127.0.0.1:9001/callme-service -&amp;gt; 127.0.0.1:9001/callme-service:e9c731f-dirty&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;   Checking cache...&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - 127.0.0.1:9001/callme-service: Found Locally&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;   Starting test...&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;   Tags used in deployment:&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - 127.0.0.1:9001/callme-service -&amp;gt; 127.0.0.1:9001/callme-service:60f1bf39367673fd0d30ec1305d8a02cb5a1ed43cf6603e767a98dc0523c65f3&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;   Starting deploy...&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - deployment.apps/callme-service-v1 configured&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - deployment.apps/callme-service-v2 configured&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - service/callme-service configured&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - destinationrule.networking.istio.io/callme-service-destination configured&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - virtualservice.networking.istio.io/callme-service-route configured&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;   Waiting for deployments to stabilize...&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - deployment/callme-service-v1: waiting for init container istio-init to start&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;   - pod/callme-service-v1-76dd76ddcc-znb62: waiting for init container istio-init to start&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - deployment/callme-service-v2: waiting for init container istio-init to start&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;   - pod/callme-service-v2-679db76bbc-m4svm: waiting for init container istio-init to start&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - deployment/callme-service-v2 is ready. [1/2 deployment(s) still pending]&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt; - deployment/callme-service-v1 is ready.&lt;/span&gt;&lt;br/&gt;&lt;span role=&quot;presentation&quot;&gt;   Deployments stabilized in 45.671 seconds&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n519&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n481&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;访问查看结果&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3232189973614776&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8uJ0ic6nAag92ZyTJsQdbSKxuaOZNVUomf0sZ6jtVQH1bZGibXaWQ2HX0dN1gOloPDUEpfqw63tQ9lw7GEl2R8ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;758&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n590&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;致此，我们初级的环境搭建基本完成了，对应云原生，感觉懂了一点，好像又没有懂，需要理解的东西还有很多，这个系列也会持续下去，希望大家和我交流，也欢迎关注，转发。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n602&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n600&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;参考链接;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n592&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://piotrminkowski.com/2020/02/14/local-java-development-on-kubernetes/&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n594&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://pklinker.medium.com/integrating-a-spring-boot-application-into-an-istio-service-mesh-a55948666fd&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n596&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://blog.csdn.net/xixingzhe2/article/details/88537038&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n598&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://blog.csdn.net/chenleiking/article/details/86716049&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c6c2c20146f5984f6aeceafd2831f73d</guid>
<title>相见恨晚！开源的傻瓜搜索引擎，帮你快速实现搜索功能</title>
<link>https://toutiao.io/k/4wma5nj</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;傻瓜一词借鉴自傻瓜相机，又称轻便相机、全自动相机，通常指容易操作针对一般人而设计的小型全自动相机。&lt;/span&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.66640625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNPQIMn0Sfp7fxOkUKTf9uUsgPByOf9OYwzsWxXAJx1jP2yDnLREfvwu5fhtMEWC4ZKyH9ZneqibO6A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 HelloGitHub 找到有趣、入门级的开源项目，大家好我是卤蛋。说到搜索第一个想到的应该是鼎鼎大名的 Elasticsearch，但 ES 对于个人项目有些重。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天给大家带来一款轻盈、人人都会用的开源傻瓜搜索引擎——MeiliSearch&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;https://github.com/meilisearch/MeiliSearch&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.35462962962962963&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPQIMn0Sfp7fxOkUKTf9uUsA9AIibKiah1OX5icH3OabXT9iaamLsLjaCDpljeZXo4jScvUVrjpicrsuTw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在介绍 MeiliSearch 之前，我想先聊下我是怎么找到它并喜欢上它的。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;我的要求并不高&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我开发的 HelloGitHub 小程序：支持关键字搜索往期月刊中的开源项目。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/xBgIbW1vdNPQIMn0Sfp7fxOkUKTf9uUsNnEw8Cica3FJ4sefwFY0rWMuIYibovjGJEjckuy9b5MBmNLKXGfaHc8Q/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;640&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小程序的搜索功能是用 Rust 写的开源搜索引擎 Sonic，它虽然搜索速度快但使用过程中发现：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;不支持中文分词，导致搜索结果较差&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;没有官方的 Python 客户端，三方开源客户端问题较多&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;搜索返回的结果仅有 ID，需要再去数据库关联其他数据&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些问题直接影响了搜索的体验，让我十分苦恼一边看搜索相关的知识，另外也在寻找新的开源解决方案。想找一个：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;部署+配置简单、支持中文分词、搜索速度快、轻量级开源搜索引擎项目。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;俗称：傻瓜中文搜索引擎。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;它有个美丽的名字&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0734375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/xBgIbW1vdNPQIMn0Sfp7fxOkUKTf9uUsQayYnkZD7hjiaXLTexNK6bdtTT8bRDDYwvWa80hQjBAEE5qCw6qT1RQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;它有个“美丽”（meili）的名字「MeiliSearch」，同样是用 Rust 写的开源搜索引擎，支持：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7034068136272545&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPQIMn0Sfp7fxOkUKTf9uUs78icoGt7OvGf3jEVVsDicE3HaI6fq0EdaDT5G9Nba0fY8dLOamZvQ1Gw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;998&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;概述功能：搜索速度快、全文搜索、支持汉字、容易安装和维护，这不就是我在找的：傻瓜中文搜索引擎吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我已经摩拳擦掌的跃跃欲试了，话不多说搞起！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;简单的开始&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;纸上得来终觉浅，得上手试试效果。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1、安装和启动&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Linux &amp;amp; Mac OS 的一键安装和启动的命令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;curl -L https://install.meilisearch.com | sh&lt;br/&gt;./meilisearch&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个安装够不够傻瓜🤪 启动成功如下图：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5861111111111111&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPQIMn0Sfp7fxOkUKTf9uUsIoGaV2AdD2AjPuvWYg3g1NMtQmKr71NKU8GmszmPDstPU5O8ORquQA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用浏览器访问：&lt;code&gt;http://127.0.0.1:7700/&lt;/code&gt; 就可以看到 MeiliSearch 提供的 Web 搜索页面。我提前写入了一些数据，用来演示搜索：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5074074074074074&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPQIMn0Sfp7fxOkUKTf9uUswdGK72aoE9bRJ9WJ4uzAicZ0d3w0P0KljQ8PJ1Ss2VMzSsARsuUlE4A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2、基本操作&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MeiliSearch 就是一个搜索的服务，提供 RESTful API 通讯协议更加通用，官方提供了多种编程语言的客户端：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后面的演示将采用 Python 代码作为示例，安装 Python SDK：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# 要求 Python3.6+&lt;/span&gt;&lt;br/&gt;pip3/pip install meilisearch&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用 Python 实现连接、写入、查询、删除等基本操作：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; meilisearch&lt;br/&gt;&lt;br/&gt;client = meilisearch.Client(&lt;span&gt;&#x27;http://127.0.0.1:7700&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;masterKey&#x27;&lt;/span&gt;) &lt;span&gt;# masterKey 是密码&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# index 相当于数据库的表&lt;/span&gt;&lt;br/&gt;index = client.index(&lt;span&gt;&#x27;books&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 准备写入搜索的数据&lt;/span&gt;&lt;br/&gt;documents = [&lt;br/&gt;  { &lt;span&gt;&#x27;book_id&#x27;&lt;/span&gt;: &lt;span&gt;123&lt;/span&gt;,  &lt;span&gt;&#x27;title&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;Pride and Prejudice&#x27;&lt;/span&gt; },&lt;br/&gt;  { &lt;span&gt;&#x27;book_id&#x27;&lt;/span&gt;: &lt;span&gt;456&lt;/span&gt;,  &lt;span&gt;&#x27;title&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;Le Petit Prince&#x27;&lt;/span&gt; },&lt;br/&gt;  { &lt;span&gt;&#x27;book_id&#x27;&lt;/span&gt;: &lt;span&gt;1&lt;/span&gt;,    &lt;span&gt;&#x27;title&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;Alice In Wonderland&#x27;&lt;/span&gt; },&lt;br/&gt;  { &lt;span&gt;&#x27;book_id&#x27;&lt;/span&gt;: &lt;span&gt;1344&lt;/span&gt;, &lt;span&gt;&#x27;title&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;The Hobbit&#x27;&lt;/span&gt; },&lt;br/&gt;  { &lt;span&gt;&#x27;book_id&#x27;&lt;/span&gt;: &lt;span&gt;4&lt;/span&gt;,    &lt;span&gt;&#x27;title&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;Harry Potter and the Half-Blood Prince&#x27;&lt;/span&gt; },&lt;br/&gt;  { &lt;span&gt;&#x27;book_id&#x27;&lt;/span&gt;: &lt;span&gt;42&lt;/span&gt;,   &lt;span&gt;&#x27;title&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;The Hitchhiker\&#x27;s Guide to the Galaxy&#x27;&lt;/span&gt; }&lt;br/&gt;]&lt;br/&gt;&lt;span&gt;# 删：清空指定 index&lt;/span&gt;&lt;br/&gt;index.delete_all_documents()&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 写：&lt;/span&gt;&lt;br/&gt;result = index.add_documents(documents) &lt;br/&gt;&lt;span&gt;# 该引擎会根据写入数据 ID 做替换或者新增的操作&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 写入后并不代表搜索引擎处理完成，可以查看返回 updateId 的状态&lt;/span&gt;&lt;br/&gt;index.get_update_status(result.get(&lt;span&gt;&#x27;updateId&#x27;&lt;/span&gt;))&lt;br/&gt;&lt;span&gt;# enqueued, processed or failed 三种状态（processed 代表完成）&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 查：&lt;/span&gt;&lt;br/&gt;index.search(&lt;span&gt;&#x27;harry pottre&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;span&gt;# 结果：&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 包含丰富的字段&lt;/span&gt;&lt;br/&gt;&lt;span&gt;&quot;&quot;&quot;&lt;br/&gt;{&lt;br/&gt;  // 命中的结果&lt;br/&gt;  &quot;hits&quot; =&amp;gt; [{&lt;br/&gt;    &quot;book_id&quot; =&amp;gt; 4,&lt;br/&gt;    &quot;title&quot; =&amp;gt; &quot;Harry Potter and the Half-Blood Prince&quot;&lt;br/&gt;  }],&lt;br/&gt;  // 页&lt;br/&gt;  &quot;offset&quot; =&amp;gt; 0,&lt;br/&gt;  // 每页条数&lt;br/&gt;  &quot;limit&quot; =&amp;gt; 20,&lt;br/&gt;  // 处理耗时&lt;br/&gt;  &quot;processingTimeMs&quot; =&amp;gt; 1,&lt;br/&gt;  // 查询的内容&lt;br/&gt;  &quot;query&quot; =&amp;gt; &quot;harry pottre&quot;&lt;br/&gt;}&lt;br/&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至此已经实现了搜索的最基本的功能，但探索不止于此。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3、优化搜索效果&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MeiliSearch 可通过配置规则来提高搜索结果：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;synonyms：同义词&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;stopWords：停用词（为节省存储空间和提高搜索效率，自动过滤掉某些字或词）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;rankingRules：排序规则&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;...&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以用 Python 客户端更新 MeiliSearch 配置，示例代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;# 停用词&lt;/span&gt;&lt;br/&gt;client.index(&lt;span&gt;&#x27;movies&#x27;&lt;/span&gt;).update_settings({&lt;br/&gt;  &lt;span&gt;&#x27;stopWords&#x27;&lt;/span&gt;: [&lt;br/&gt;      &lt;span&gt;&#x27;the&#x27;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&#x27;a&#x27;&lt;/span&gt;,&lt;br/&gt;      &lt;span&gt;&#x27;an&#x27;&lt;/span&gt;&lt;br/&gt;  ],&lt;br/&gt;})&lt;br/&gt;&lt;span&gt;# 排序规则&lt;/span&gt;&lt;br/&gt;client.index(&lt;span&gt;&#x27;movies&#x27;&lt;/span&gt;).update_ranking_rules([&lt;br/&gt;    &lt;span&gt;&quot;typo&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;words&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;proximity&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;attribute&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;wordsPosition&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;exactness&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;asc(publish_time)&quot;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;&quot;desc(watch)&quot;&lt;/span&gt;&lt;br/&gt;])&lt;br/&gt;&lt;span&gt;# 查看 stop words&lt;/span&gt;&lt;br/&gt;client.index(&lt;span&gt;&#x27;movies&#x27;&lt;/span&gt;).get_stop_words()&lt;br/&gt;&lt;span&gt;# 重置设置&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# index.reset_settings()&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 除了搜索其它操作都是异步，会直接返回一个 updateId 需要通过 ID 查询处理状态&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# wait_for_pending_update 可阻塞等待处理结果&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这些设置可以有效的提高搜索效果，比如使用停用词之前，搜索“开源的书籍”命中不了“开源书籍”，加了停用词即可命中，因为匹配时忽略了输入内容包含的停用词（无用词）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说一个我遇到的坑，我测试搜索效果时发现：go 搜不到，但是 golang 就可以搜索到，排查了半天最后发现是因为 go 在上面的停用词字典中😅&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;另外，功能上对比 sonic 没有词联想（suggest），可以通过新建 index+searchableAttributes 实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同义词集合我没有找到，如果大家有现成的 中/英文 同义词词典，欢迎留言告诉我～感谢&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4、部署&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MeiliSearch 部署很简单，增加到系统的 systemd 服务就行了。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/systemd/system/meilisearch.service&lt;br/&gt;[Unit]&lt;br/&gt;Description=MeiliSearch&lt;br/&gt;After=systemd-user-sessions.service&lt;br/&gt;&lt;br/&gt;[Service]&lt;br/&gt;Type=simple&lt;br/&gt;ExecStart=/usr/bin/meilisearch --http-addr 127.0.0.1:7700 --env production --master-key xxxxxx&lt;br/&gt;&lt;br/&gt;[Install]&lt;br/&gt;WantedBy=default.target&lt;br/&gt;EOF&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# Set the service meilisearch&lt;/span&gt;&lt;br/&gt;systemctl &lt;span&gt;enable&lt;/span&gt; meilisearch&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# Start the meilisearch service&lt;/span&gt;&lt;br/&gt;systemctl start meilisearch&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# Verify that the service is actually running&lt;/span&gt;&lt;br/&gt;systemctl status meilisearch&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但部署正式环境，需要注意以下几点：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;生产环境必须设置密码，开发环境无强制&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;生产环境 Web 页面会关闭&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;没有远程访问和权限控制，可以通过 Nginx 实现 IP 白名单+ Cerbot 实现 HTTPS，提高安全性&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可通过 &lt;code&gt;curl 地址&lt;/code&gt; 查看服务状态&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是我使用 MeiliSearch 的一些心得，总体给我的感觉：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;安装简单，没有复杂的配置：省心&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;数据写入方便，功能丰富：傻瓜&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;查询快&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一条命令即可启动搜索服务，一行代码实现搜索功能，有了它我这个搜索小白都能分分钟实现一个搜索服务，舒服～&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;爱的结晶（实战）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我用 MeiliSearch 重写了 HelloGitHub 小程序的搜索功能，后端用的 FastAPI 框架。除此之外还增加了一些新功能：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;热门搜索词&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;项目详情页&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;项目镜像地址提高访问速度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;新的界面&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;HelloGitHub 小程序第二版效果图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0555555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/xBgIbW1vdNPQIMn0Sfp7fxOkUKTf9uUswWlKMg49XibzYwPVeEwVmC1j4l4icbiaQ2VghX8Ticb6oFbFm14GTHXvHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;mp-miniprogram data-miniprogram-appid=&quot;wx22c4e99d60284a41&quot; data-miniprogram-path=&quot;pages/index&quot; data-miniprogram-nickname=&quot;HelloGitHub&quot; data-miniprogram-avatar=&quot;http://mmbiz.qpic.cn/mmbiz_png/F8WLkHjQscznNq80WjOXqrpYVJGkxEFP3ibSvyKCibPGvibfx64zrO51wHyKobp5ich4HGEK5enfOHQibCqvuG3m7bQ/640?wx_fmt=png&amp;amp;wxfrom=200&quot; data-miniprogram-title=&quot;找开源项目来这儿就对了&quot; data-miniprogram-imageurl=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/xBgIbW1vdNPQIMn0Sfp7fxOkUKTf9uUsEb7WQ8NjLCsKqeW0byGAonLCxE64CKWMflKnRwIOg4nZ3r1Mhzutqw/0?wx_fmt=jpeg&quot; data-miniprogram-type=&quot;card&quot; data-miniprogram-servicetype=&quot;0&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;👆&lt;/span&gt;&lt;span&gt;点击使用&lt;/span&gt;&lt;span&gt;👆&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;后面计划增加：信息流、评论、打分、用户系统、积分系统，因为只有我一个人开发，所以进度会很慢...但我不会半途而废哒 💪&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果说 MeiliSearch 缺点的话，我觉得搜索准确度还有待提高，一方面我需要学习下分词和 NLP 的一些知识，另一方面需要再熟悉下它的 API 和原理，然后再找一些词典辅助，应该能提高准确度，但心急吃不了热豆腐慢慢来吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，希望本文的分享有帮助到你，今天的文章就到这里了。如果你也想分享把玩开源项目的心得，欢迎投稿原创文章给我，微信：xueweihan（备注：投稿）&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;优秀的开源项目像散落在海边的贝壳，需要发现它的人。&lt;/p&gt;&lt;p&gt;HelloGitHub 就是拾贝者，找开源项目来 HelloGitHub 就对了！&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7230038d68f2279607b5e0d84dad57cb</guid>
<title>测试架构师如何解读测试平台的各种争议</title>
<link>https://toutiao.io/k/gwtb6lg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU1MzQ0MzEwMQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibJK7B5PzWO6LWTYEYErwibjN91xSrfd9OYCAbeFnk5eRf2mUJE0F0uItZYwX2or675rGsds2JWsow/0?wx_fmt=png&quot; data-nickname=&quot;软件测试架构师俱乐部&quot; data-alias=&quot;&quot; data-signature=&quot;共同推广学习测试相关技术&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;   &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; 先从testerHome上关于测试平台的话题谈起，再来谈谈接口测试的痛点是什么，然后是我的接口测试的解决方案。希望通过本篇的论述，大家对什么是好的平台能达成统一的认识，且通过创新做出好用，对测试人友好的平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;最近&lt;/span&gt;&lt;span&gt;t&lt;/span&gt;&lt;span&gt;esterHome &lt;/span&gt;&lt;span&gt;上，关于测试平台的讨论很激烈。&lt;/span&gt;&lt;span&gt;我本人是支持平台的，但是现在好多平台都是&lt;/span&gt;&lt;span&gt;KPI&lt;/span&gt;&lt;span&gt;导向，拿接口测试平台来&lt;/span&gt;&lt;span&gt;说，除了&lt;/span&gt;&lt;span&gt;少数做得不错之外，看到好多不是&lt;/span&gt;&lt;span&gt;demo &lt;/span&gt;&lt;span&gt;，就是&lt;/span&gt;&lt;span&gt;jme&lt;/span&gt;&lt;span&gt;t&lt;/span&gt;&lt;span&gt;er ,&lt;/span&gt;&lt;span&gt;postman&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;web &lt;/span&gt;&lt;span&gt;化，不否认做平台，对技术多少还是有提升&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;大多数是&lt;/span&gt;&lt;span&gt;CRUD&lt;/span&gt;&lt;span&gt;，仅仅是从&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;到&lt;/span&gt;&lt;span&gt;1)&lt;/span&gt;&lt;span&gt;，但是如果平台没人用，这平台就是失败的。&lt;/span&gt;&lt;span&gt;证明有&lt;/span&gt;&lt;span&gt;一定的&lt;/span&gt;&lt;span&gt;技术实力&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;除了开发平台，还有很多&lt;/span&gt;&lt;span&gt;更&lt;/span&gt;&lt;span&gt;高效的&lt;/span&gt;&lt;span&gt;方式，比如为开源软件提交&lt;/span&gt;&lt;span&gt;PR&lt;/span&gt;&lt;span&gt;，熟读开源中件间代码，掌握测试前后移的&lt;/span&gt;&lt;span&gt;技术，为团队开发实用测试小工具等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;痛点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;随着微服务架构理念，云计算，容器技术的普及，DevOps在it界渐成共识，并成为主流开发模式，在DevOps快速迭代中测试成为快速交付的一大短板。降本增效迫在眉睫。反过来，平台只要好用，就是好的平台，什么是好的平台，一定是要能做到降本增效。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;先从两个主流工具的局限性谈起，postman 和jmeter 是两个比较主流的接口测试工具，当然jmeter 用于压测和接口自动化都可以。这两个工具都解决了接口测试的基本问题，但仍然存在不少问题，我罗列了以下五点：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;  1.可管理性不强&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;我认为这些工具在一定程度上就是个面向个人的“单兵武器”， 基本上无可管理性。JMX，或是JSON文件，不好管理，协同就更是难上加难。市面上对他们web化的价值，也就是可管理这一点，更深层次的痛点并没有触达。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; 2.对测试人员不足够“友好”&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;用过QTP，LR之类的对测试人员都知道，傻瓜化，不懂代码，一样用得很开心，这对大多数不会写代码的测试人员来说，确实是“福报”，断言，参数化，数据驱动都非常简单，然而这些工具都是商业化且使用场景相对固定，并无法快速响应互联网不断变化的测试需求。反观postman或者jmeter，虽然免费了但是又有不少功能需要你二次开发，所以说没有”普适性”。对于一些代码基础薄弱的同学来说，遇到定制化的需求往往束手无策。检验”普适性”的标准，就是是否傻瓜化，这决定了门槛的高低；高级使用人员，可以二开及使用一些高级特性。傻瓜化不是提倡，测试人员不会代码就是好事，平台想要推广得好，普适性很重要，打个不太恰当的比方，就算会写代码，也没多少人用VI 或是记事本写，都要用IDE工具，为什么？效率高呀。会写代码，可以做很多实用的测试小工具，还是非常棒的!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.对接口反向用例或混沌测试支持不够&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;虽然很多平台支持数据驱动测试，但是对接口反向用例或混沌测试支持不够。先从一下真实生产事故讲起，朋友公司因第三方接口导致了服务器宕机，最后查到的原因是，扫码，传入的数据是一个比较长的乱七八糟的字符串，没按要求传正确的值，结果服务器，死循环挂掉了。接口测试时，无法穷举所有参数值。在postman 和jmeter中都有数据驱动，但是我认为采用枚举的方式来设置参数值，然后通过数据驱动的方式来执行测试，对人的依赖太大。后面我再讲接口混沌测试，瞬间可以完成笛卡尔积式的接口混沌测试，从另一个视角来实现，且和接口数据结构无关。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.理不清接口间的调用关系&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;纵使写了很多接口用例，但是对接口间的关系依然是”抓瞎”。很多时候我们借助于调用链跟系统，但是对于平台上的接口用例，调用链这张网又太大，和接口用例也不完全匹配，就算匹配，且调用链跟踪突出的是，调用上的时间顺序，并不突出他们之间的依赖关系，以及是什么样的依赖关；也不是所有系统都用上了调用链路跟踪，大多不是微服务架构的项目，这块想用调用链跟系统(如 SkyWalking  Zipkin、Pinpoint等)还是不好办的。接口用例间，实际上就存在依赖关系，如A接口，要依赖取token 接口，同时A还依赖B接口的响应数据中提取的参数等等，这在postman ,jmeter 中，虽然接口依赖关系事实上存在，但只能人工去理，没有一目了然的可视化界面来展示依赖关系，当一个接口改动了，也不方便评估，对其他接口的影响；且通过直观的依赖关系，可促使挖掘更多的测试场景。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;5.低代码模式对测试能效提出更高的要求&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;研发都低代码了，接口测试却还没有低代码，变相抬高了接口测试门槛，当然这个对于测试来说要求也比较高，事实上这也不利于提效。肯定有人要反对了，测开就是要写代码呀，能写代码这很好呀，明确的说，这是五年前流行的观点了，我们要的不是代码的堆砌，而是高质量的有效代码；测开会写代码，做出来的产品和解决能效之间并不是等号！脱离方法论，脱离工程文化等能加快交付途径的方方面面，只是“秀代码”,没多大价值。既然要做平台，出发点肯定是团队提效，而不是单兵作战；另外从公司团队组建的角度来说，也不可能全是测开，平台化如果不考虑业务测试的融入，不考虑对非测开人员的“普适性”，就没法解决木桶效应的问题，我认为这个平台是失败的，不管如何分工，团队的整体能效没上去，这平台就是测开自嗨的平台。现在开发都在提低代码了，开发效率会大大提升，测试的压力更大，测试也要低代码化，才能也一起提效，否则测试这块的短板更短，下面我也会再讲讲对于测试低代码化的一些思考。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;现在大家对低代码的讨论非常多，看低的也大有人在，我这里就不展开说了，但有一点我认为低代码会成为趋势，无服务对低代码更是推波助澜。&lt;/span&gt;&lt;span&gt;目前比较火的低代码平台，比较有名的都是国外的，微软也有低代码平台。&lt;/span&gt;&lt;span&gt;拿我我们公司的低代码平台来说，刚毕业的新人，入职三天，就能实现业务开发了，效率还是杠杠的！&lt;/span&gt;&lt;span&gt;且通过注解，单元测试不需要写一行代码了，加少量的注解就可以了，比手写junit 测试类，省&lt;/span&gt;至少&lt;span&gt;2倍的时间 。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上面是我个人认为的接口测试中最痛的点，我看到的接口测试平台，不解决这些刚需，只是通过web封装工具的话意义不大。从老板的角度来说，没增效，投人力做这事就不值，大家都知道提问题简单，难在解决问题，下面我来说我的解决方案是什么？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;解决方案&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span&gt;下面就来谈谈我设计的一站式敏捷测试管理平台，针对我罗列的五个痛点是如何解决的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;关于管理协作，只要是平台化，天然就解决这问题。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;对测试人员友好，主要是可用性，可维护性。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;postman 和jmeter 虽然受到普遍的欢迎，但从自动化角度来说存在一些硬伤，我举两个设计上的具体例子；&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;postman前后置脚本及签名等和接口用例耦合在一起，不方便维护&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;,比如我需要对请求签名，如果签名算法改了，我得来改接口用例，如果有100个接口，这改起来太可怕了，要是解偶，只要改签名算法本身，其他接口中是选择引用这个算法，就不存在这种痛苦；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;参数维护不面向对像且不能自动转换&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; , 如参数得复杂json 只能写json ，通常大家对表单比较熟悉, 批量维护KV 自动转JSON ，如是复杂对像，支持dto.user.id 这种复杂kye转josn就爽得多，完全是向面对像的式在维护参数；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;直接上图我是怎么解决的？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下图就是插件化解耦，维护好相关插件，在接口用例中，只是下拉选而已。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.399288256227758&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibjcH4nrQb0OFNuR5kZibTCGqVfbMGrUIXs3ZqWrfRI724tWvXk0YdET0vF1HrHgBMAJEicg685NaIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2810&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;参数维护方便很多,个人非常不喜欢json schema 的方式，KV 可方便转复杂JSON ，又可下接写复杂JSON，这才是照顾使用人的效率和提升便利，XXX.XXX.XXX这种才是以面向前对像的思维维护参数，且更切近表单属性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4904214559386973&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibjcH4nrQb0OFNuR5kZibTCGGUPYu0C2GuIibkviaEYN1Nv7DO5fUBdq1Qfwsz561GicJs8vNxyFm2KkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2610&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;对接口反向用例或混沌测试支持不够。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;span&gt;一说反向测试大家第一反应是，通过数据驱动来测试，如果复杂JSON数据结构，数据驱动按传统的方式，对测试人员来说一点不方便，这两个我们都是这样来解决的&lt;/span&gt;&lt;span&gt;接口反向或是混沌测试，只需要配置好混沌规则&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7286973555337904&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibjcH4nrQb0OFNuR5kZibTCGMPpIkhshOTdPUXMEZFwMpfPpglq7ovzhT5icKib7icsXyzMPfn2eZ0mYQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2042&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;看下混沌工程的执行结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.386685552407932&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibjcH4nrQb0OFNuR5kZibTCGMgtUEOI9jwqick28y3SGsPBIhxlM4xANia4ZlA9dNefMOZHF6nlWVicKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2824&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;数据驱动，也是按面向对像的方式，方便复杂JOSN的结构，传统的数据驱动，只方便KV方式，复杂对像，表达起来费劲，我们依然采用xxx.xx.xx 这种对像属性访问形式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3167259786476868&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibjcH4nrQb0OFNuR5kZibTCGAWoxv9qDSBbw1RFpFxkDSsVFRB4tnmdSLmhm1y9yFbI6RwHWbEoyaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2810&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;对接口间的关系理不清&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;前面的论述，就不重复了，接口间只要存在参数引用，就必须存在依赖关系，完全可以根据依赖关系推导出来，在接口测试场景中，只要选择了一些用例，自动加入依赖的接口用例，并排好执行顺序。同时还能自动检查循环依赖&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6540825285338016&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibjcH4nrQb0OFNuR5kZibTCG44lz8RCScrzpmJcJSAqTfZnnlIYDPJTbJnZtxrcx2PkyvialBkbAdhA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2278&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;自动循环依赖，如下图给出了具体的循环依赖信息&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.47696476964769646&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibjcH4nrQb0OFNuR5kZibTCG4ephqndIDx58EO1SdqsdVibTNnibXbV2RrIBSEsFImEn7qjOEpicskAUA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1476&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;研发都低代码了，接口测试却还没有低代码&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这其实变相抬高了接口测试门槛，同时也不利于提效。这块的争议最多，不再累述。可能测试人员，平时写代码少，低代码会使一些人觉得剥夺他们写代码的权利；也有人说低代码，容易让大家变成工具的奴隶，低代码只是为了提效，把重复工作工具化，并不禁锢使用人员的思想，从公司的角度来说，老板希望你把时间花在，重要的事情上， 重复的事情，工具化，平台化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如初级一点的，可以在断言以及提取参数时，通过拖拽的方式，高级玩法就是bpm 那样的编排，就像工作流一样，拖拉的方式来编排，通过编排实现接口业务场景的测试。另外，还可以重用接口用例，把他转化为JMX 文件，这样一个用例或是场景，接口测试可用，压测也重用接口用例，以一当二用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5126582278481012&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibjcH4nrQb0OFNuR5kZibTCGjfbAXDjxlDdN62vED3WichnjDmeZLYIU1SCDvA73T8eNuKWC39XSHdA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2528&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5309798270893372&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibjcH4nrQb0OFNuR5kZibTCGB9IZI7RdSknvpiadtx3qR4zr6aO33d5ZhAsBZ2iclMsbUroBXcJ9yMxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2776&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;写到这里也几千字了,这只是我个人之言，不对之处欢迎大家讨论拍砖，看testerHome 上关于平台的讨论，很是激烈；我在这里抛砖引玉，只要是有益的讨论，对行业也是有利，如果能让大家静下心来，一起来探讨什么是好的接口测试平台，也是好事。少卷一些，少一些KPI，做真正好用的对测试人友好的测试平台还是很香的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;好些人做平台是为了面试时加分，或是多些谈资，这太急功近利了；我看过好多只是个demo的平台，在这里我就不一一列举代码地址了，多数是为了加群吸粉，这留得住人吗！！我表示嗤之以鼻！一个好的面试官用一个烂平台也忽悠不了他，有能力，不管是编码能力，还是综合能力强，有很多方方面面来体现，这里就不展开说了。&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;这贴子肯定少不了争议，欢迎大家加入testerHome反智讨论群，我也在群里方便大家来讨论，本人是开源免费的 www.itest.work ,一站式敏捷测试管理平台作者, 让测试变得简单、敏捷！是itestwork的执念。写这贴子，也是有感而发，我们一直在改进的路上，3年了一直在维护中，上面的痛点，必须要全面解决；当前正在丰富压测模块及实现可视化接口编排  大家可以期待。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5122529644268775&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibjcH4nrQb0OFNuR5kZibTCG1keic3DvSqTqaMO2FS1RIh3meobbziaJBsGPcnOhdxGjlXZ1G4YlNxAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2530&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;官网访问地址：www.itest.work&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;往期推荐：&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzQ0MzEwMQ==&amp;amp;mid=2247485929&amp;amp;idx=1&amp;amp;sn=3f816845a5e8a873b2af995e50308605&amp;amp;chksm=fbf3839bcc840a8d9398babb75d0dcae533d5997e3cda6b2750acdb96fb8c7280a552a8f9e03&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;itestwork压测模块重磅发布&lt;/a&gt;&lt;/p&gt;&lt;p&gt;欢迎关注公众号并留言&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU1MzQ0MzEwMQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/AsMHq6TmhAibJK7B5PzWO6LWTYEYErwibjN91xSrfd9OYCAbeFnk5eRf2mUJE0F0uItZYwX2or675rGsds2JWsow/0?wx_fmt=png&quot; data-nickname=&quot;软件测试架构师俱乐部&quot; data-alias=&quot;&quot; data-signature=&quot;共同推广学习测试相关技术&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>60e07196ae745fb2484badf90f988034</guid>
<title>[译] 为什么不应该使用 ZooKeeper 做服务发现</title>
<link>https://toutiao.io/k/09au09b</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;185&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;原文标题：Eureka! Why You Shouldn’t Use ZooKeeper for Service Discovery&lt;/p&gt;&lt;p&gt;原文链接：https://medium.com/knerd/eureka-why-you-shouldnt-use-zookeeper-for-service-discovery-4932c5c7e764&lt;/p&gt;&lt;p&gt;发布时间：2014年12月15&lt;/p&gt;&lt;p&gt;作者：Knewton&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是服务发现领域早期挺有名的一个文章，阐述了为什么不应该使用Zookeeper来做服务发现，这篇文章从实践角度出发分别从云平台特点、CAP原理以及运维三个方面对比了ZooKeeper与Eureka两个系统作为发布服务的优劣，并提出了在云平台构建发现服务的方法论。不过文章是2014年的，里面推荐的Eureaka是SpringCloudNetflix里的服务发现组件，在国内貌似现在用的不多，与之相对的阿里巴巴也有一篇挺有名的文章「&lt;span&gt;阿里巴巴为什么不用 ZooKeeper 做服务发现？&lt;/span&gt;&lt;span&gt;」阐述了类似的论点。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUzNTY5MzU2MA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/z4pQ0O5h0f4pGhLz2xEbRFHnAQon2QLYgbBibCJo1ibJHesLWshPJeRibateRtAqkaf6BgjlbhYiaxHLq6Zu07CRPw/0?wx_fmt=png&quot; data-nickname=&quot;网管叨bi叨&quot; data-alias=&quot;kevin_tech&quot; data-signature=&quot;分享软件开发和系统架构设计基础、Go 语言和Kubernetes。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;很多公司选择使用ZooKeeper作为Service发现服务（Service Discovery），但是在构建Knewton（Knewton是一个提供个性化教育平台的公司、学校和出版商可以通过Knewton平台为学生提供自适应的学习材料）平台时，我们发现这是个根本性的错误。在这边文章中，我们将用我们在实践中遇到的问题来说明，为什么使用ZooKeeper做Service发现服务是个错误。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;请留意服务部署环境&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们从头开始梳理。我们在部署服务的时候，应该首先考虑服务部署的平台（平台环境），然后才能考虑平台上跑的软件系统或者如何在选定的平台上自己构建一套系统。例如，对于云部署平台来说，平台在硬件层面的伸缩（注：作者应该指的是系统的冗余性设计，即系统遇到单点失效问题，能够快速切换到其他节点完成任务）与如何应对网络故障是首先要考虑的。当你的服务运行在大量服务器构建的集群之上时（注：原话为大量可替换设备），则肯定会出现单点故障的问题。对于knewton来说，我们虽然是部署在AWS上的，但是在过往的运维中，我们也遇到过形形色色的故障；所以，你应该把系统设计成“故障开放型”（expecting failure）的。其实有很多同样使用AWS的公司跟我们遇到了（同时有很多书是介绍这方面的）相似的问题。你必须能够提前预料到平台可能会出现的问题如：意外故障（注：原文为box failure，只能意会到作者指的是意外弹出的错误提示框），高延迟与网络分割问题（注：原文为network partitions。意思是当网络交换机出故障会导致不同子网间通讯中断）——同时我们要能构建足够弹性的系统来应对它们的发生。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;永远不要期望你部署服务的平台跟其他人是一样的！当然，如果你在独自运维一个数据中心，你可能会花很多时间与钱来避免硬件故障与网络分割问题，这是另一种情况了；但是在云计算平台中，如AWS，会产生不同的问题以及不同的解决方式。当你实际使用时你就会明白，但是，你最好提前应对它们（注：指的是上一节说的意外故障、高延迟与网络分割问题）的发生。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;ZooKeeper作为发现服务的问题&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ZooKeeper（注：ZooKeeper是著名Hadoop的一个子项目，旨在解决大规模分布式应用场景下，服务协调同步（Coordinate Service）的问题；它可以为同在一个分布式系统中的其他服务提供：统一命名服务、配置管理、分布式锁服务、集群管理等功能）是个伟大的开源项目，它很成熟，有相当大的社区来支持它的发展，而且在生产环境得到了广泛的使用；但是用它来做Service发现服务解决方案则是个错误。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在分布式系统领域有个著名的CAP定理（C-数据一致性；A-服务可用性；P-服务对网络分区故障的容错性，这三个特性在任何分布式系统中不能同时满足，最多同时满足两个）；ZooKeeper是个CP的，即任何时刻对ZooKeeper的访问请求能得到一致的数据结果，同时系统对网络分割具备容错性；但是它不能保证每次服务请求的可用性（注：也就是在极端环境下，ZooKeeper可能会丢弃一些请求，消费者程序需要重新请求才能获得结果）。但是别忘了，ZooKeeper是分布式协调服务，它的职责是保证数据（注：配置数据，状态数据）在其管辖下的所有服务之间保持同步、一致；所以就不难理解为什么ZooKeeper被设计成CP而不是AP特性的了，如果是AP的，那么将会带来恐怖的后果（注：ZooKeeper就像交叉路口的信号灯一样，你能想象在交通要道突然信号灯失灵的情况吗？）。而且，作为ZooKeeper的核心实现算法Zab，就是解决了分布式系统下数据如何在多个服务之间保持同步问题的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为一个分布式协同服务，ZooKeeper非常好，但是对于Service发现服务来说就不合适了；因为对于Service发现服务来说就算是返回了包含不实的信息的结果也比什么都不返回要好；再者，对于Service发现服务而言，宁可返回某服务5分钟之前在哪几个服务器上可用的信息，也不能因为暂时的网络故障而找不到可用的服务器，而不返回任何结果。所以说，用ZooKeeper来做Service发现服务是肯定错误的，如果你这么用就惨了！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而且更何况，如果被用作Service发现服务，ZooKeeper本身并没有正确的处理网络分割的问题；而在云端，网络分割问题跟其他类型的故障一样的确会发生；所以最好提前对这个问题做好100%的准备。就像Jepsen在ZooKeeper网站上发布的博客中所说：在ZooKeeper中，如果在同一个网络分区（partition）的节点数（nodes）数达不到ZooKeeper选取Leader节点的“法定人数”时，它们就会从ZooKeeper中断开，当然同时也就不能提供Service发现服务了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果给ZooKeeper加上客户端缓存（注：给ZooKeeper节点配上本地缓存）或者其他类似技术的话可以缓解ZooKeeper因为网络故障造成节点同步信息错误的问题。Pinterest与Airbnb公司就使用了这个方法来防止ZooKeeper故障发生。这种方式可以从表面上解决这个问题，具体地说，当部分或者所有节点跟ZooKeeper断开的情况下，每个节点还可以从本地缓存中获取到数据；但是，即便如此，ZooKeeper下所有节点不可能保证任何时候都能缓存所有的服务注册信息。如果ZooKeeper下所有节点都断开了，或者集群中出现了网络分割的故障（注：由于交换机故障导致交换机底下的子网间不能互访）；那么ZooKeeper会将它们都从自己管理范围中剔除出去，外界就不能访问到这些节点了，即便这些节点本身是“健康”的，可以正常提供服务的；所以导致到达这些节点的服务请求被丢失了。（注：这也是为什么ZooKeeper不满足CAP中A的原因）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更深层次的原因是，ZooKeeper是按照CP原则构建的，也就是说它能保证每个节点的数据保持一致，而为ZooKeeper加上缓存的做法的目的是为了让ZooKeeper变得更加可靠（available）；但是，ZooKeeper设计的本意是保持节点的数据一致，也就是CP。所以，这样一来，你可能既得不到一个数据一致的（CP）也得不到一个高可用的（AP）的Service发现服务了；因为，这相当于你在一个已有的CP系统上强制栓了一个AP的系统，这在本质上就行不通的！一个Service发现服务应该从一开始就被设计成高可用的才行！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果抛开CAP原理不管，正确的设置与维护ZooKeeper服务就非常的困难；错误会经常发生，导致很多工程被建立只是为了减轻维护ZooKeeper的难度。这些错误不仅存在与客户端而且还存在于ZooKeeper服务器本身。Knewton平台很多故障就是由于ZooKeeper使用不当而导致的。那些看似简单的操作，如：正确的重建观察者（reestablishing watcher）、客户端Session与异常的处理与在ZK窗口中管理内存都是非常容易导致ZooKeeper出错的。同时，我们确实也遇到过ZooKeeper的一些经典bug：ZooKeeper-1159 与ZooKeeper-1576；我们甚至在生产环境中遇到过ZooKeeper选举Leader节点失败的情况。这些问题之所以会出现，在于ZooKeeper需要管理与保障所管辖服务群的Session与网络连接资源（注：这些资源的管理在分布式系统环境下是极其困难的）；但是它不负责管理服务的发现，所以使用ZooKeeper当Service发现服务得不偿失。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;做出正确的选择：Eureka的成功&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们把Service发现服务从ZooKeeper切换到了Eureka平台，它是一个开源的服务发现解决方案，由Netflix公司开发。（注：Eureka由两个组件组成：Eureka服务器和Eureka客户端。Eureka服务器用作服务注册服务器。Eureka客户端是一个java客户端，用来简化与服务器的交互、作为轮询负载均衡器，并提供服务的故障切换支持。）Eureka一开始就被设计成高可用与可伸缩的Service发现服务，这两个特点也是Netflix公司开发所有平台的两个特色。（他们都在讨论Eureka）。自从切换工作开始到现在，我们实现了在生产环境中所有依赖于Eureka的产品没有下线维护的记录。我们也被告知过，在云平台做服务迁移注定要遇到失败；但是我们从这个例子中得到的经验是，一个优秀的Service发现服务在其中发挥了至关重要的作用！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先，在Eureka平台中，如果某台服务器宕机，Eureka不会有类似于ZooKeeper的选举leader的过程；客户端请求会自动切换到新的Eureka节点；当宕机的服务器重新恢复后，Eureka会再次将其纳入到服务器集群管理之中；而对于它来说，所有要做的无非是同步一些新的服务注册信息而已。所以，再也不用担心有“掉队”的服务器恢复以后，会从Eureka服务器集群中剔除出去的风险了。Eureka甚至被设计用来应付范围更广的网络分割故障，并实现“0”宕机维护需求。当网络分割故障发生时，每个Eureka节点，会持续的对外提供服务（注：ZooKeeper不会）：接收新的服务注册同时将它们提供给下游的服务发现请求。这样一来，就可以实现在同一个子网中（same side of partition），新发布的服务仍然可以被发现与访问。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是，Eureka做到的不止这些。正常配置下，Eureka内置了心跳服务，用于淘汰一些“濒死”的服务器；如果在Eureka中注册的服务，它的“心跳”变得迟缓时，Eureka会将其整个剔除出管理范围（这点有点像ZooKeeper的做法）。这是个很好的功能，但是当网络分割故障发生时，这也是非常危险的；因为，那些因为网络问题（注：心跳慢被剔除了）而被剔除出去的服务器本身是很”健康“的，只是因为网络分割故障把Eureka集群分割成了独立的子网而不能互访而已。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;幸运的是，Netflix考虑到了这个缺陷。如果Eureka服务节点在短时间里丢失了大量的心跳连接（注：可能发生了网络故障），那么这个Eureka节点会进入”自我保护模式“，同时保留那些“心跳死亡“的服务注册信息不过期。此时，这个Eureka节点对于新的服务还能提供注册服务，对于”死亡“的仍然保留，以防还有客户端向其发起请求。当网络故障恢复后，这个Eureka节点会退出”自我保护模式“。所以Eureka的哲学是，同时保留”好数据“与”坏数据“总比丢掉任何”好数据“要更好，所以这种模式在实践中非常有效。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，Eureka还有客户端缓存功能（注：Eureka分为客户端程序与服务器端程序两个部分，客户端程序负责向外提供注册与发现服务接口）。所以即便Eureka集群中所有节点都失效，或者发生网络分割故障导致客户端不能访问任何一台Eureka服务器；Eureka服务的消费者仍然可以通过Eureka客户端缓存来获取现有的服务注册信息。甚至最极端的环境下，所有正常的Eureka节点都不对请求产生相应，也没有更好的服务器解决方案来解决这种问题时；得益于Eureka的客户端缓存技术，消费者服务仍然可以通过Eureka客户端查询与获取注册服务信息，这点很重要。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Eureka的构架保证了它能够成为Service发现服务。它相对与ZooKeeper来说剔除了Leader节点的选取或者事务日志机制，这样做有利于减少使用者维护的难度也保证了Eureka的在运行时的健壮性。而且Eureka就是为发现服务所设计的，它有独立的客户端程序库，同时提供心跳服务、服务健康监测、自动发布服务与自动刷新缓存的功能。但是，如果使用ZooKeeper你必须自己来实现这些功能。Eureka的所有库都是开源的，所有人都能看到与使用这些源代码，这比那些只有一两个人能看或者维护的客户端库要好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;维护Eureka服务器也非常的简单，比如，切换一个节点只需要在现有EIP下移除一个现有的节点然后添加一个新的就行。Eureka提供了一个web-based的图形化的运维界面，在这个界面中可以查看Eureka所管理的注册服务的运行状态信息：是否健康，运行日志等。Eureka甚至提供了Restful-API接口，方便第三方程序集成Eureka的功能。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;结论&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于Service发现服务通过本文我们想说明两点：1、留意服务运行的硬件平台；2、时刻关注你要解决的问题，然后决定使用什么平台。Knewton就是从这两个方面考虑使用Eureka替换ZooKeeper来作为service发现服务的。云部署平台是充满不可靠性的，Eureka可以应对这些缺陷；同时Service发现服务必须同时具备高可靠性与高弹性，Eureke就是我们想要的！&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>64a6a325284b779f604892b25e68e66f</guid>
<title>Dubbo No provider 问题排查思路</title>
<link>https://toutiao.io/k/9pjazug</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;不想看字的同学可直接划到底部查看思维导图&lt;/p&gt;&lt;/blockquote&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;问题分析&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用过Dubbo的朋友很多都碰到过如下报错：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;No provider available for the service org.newboo.basic.api.MyDemoService from registry 127.0.0.1:2181 on the consumer 127.0.0.1 using the dubbo version 2.7.6. Please check if the providers have been started and registered.&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从源码来看这个报错位于&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker#checkInvokers&lt;/code&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;protected&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;checkInvokers&lt;/span&gt;&lt;span&gt;(List&amp;lt;Invoker&amp;lt;T&amp;gt;&amp;gt; invokers, Invocation invocation)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (CollectionUtils.isEmpty(invokers)) {&lt;br/&gt;        &lt;span&gt;throw&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; RpcException(RpcException.NO_INVOKER_AVAILABLE_AFTER_FILTER, &lt;span&gt;&quot;Failed to invoke the method &quot;&lt;/span&gt;&lt;br/&gt;                + invocation.getMethodName() + &lt;span&gt;&quot; in the service &quot;&lt;/span&gt; + getInterface().getName()&lt;br/&gt;                + &lt;span&gt;&quot;. No provider available for the service &quot;&lt;/span&gt; + getDirectory().getConsumerUrl().getServiceKey()&lt;br/&gt;                + &lt;span&gt;&quot; from registry &quot;&lt;/span&gt; + getDirectory().getUrl().getAddress()&lt;br/&gt;                + &lt;span&gt;&quot; on the consumer &quot;&lt;/span&gt; + NetUtils.getLocalHost()&lt;br/&gt;                + &lt;span&gt;&quot; using the dubbo version &quot;&lt;/span&gt; + Version.getVersion()&lt;br/&gt;                + &lt;span&gt;&quot;. Please check if the providers have been started and registered.&quot;&lt;/span&gt;);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当配置reference的check=false时调用它的代码位于&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;org.apache.dubbo.rpc.cluster.support.FailoverClusterInvoker#doInvoke&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（为true时在启动时校验）&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从代码能看出导致这个报错的&lt;strong&gt;直接原因&lt;/strong&gt;是：&lt;code&gt;invokers&lt;/code&gt;为空&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此处invoker对应一个provider URL，当没有provider可用时，invokers为空&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;排查思路&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个问题看似简单，但实际情况异常复杂，碰到后无从下手，本文提供一种可行的排查思路。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;排查大致分为两条线，provider端和consumer端。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;provider端&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;出问题第一时间排查provider，因为provider的情况比较少，可以简单地排除一部分情况。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;provider出问题只有一种情况：&lt;strong&gt;未注册到注册中心&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以对应的排查思路是去看provider有没有注册成功：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果有dubbo控制台或者注册中心查询页面，直接查询一下即可&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果没有可视化界面，比如zk、etcd可通过相应的客户端连上去查看是否注册成功&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以zk为例，可通过 &lt;code&gt;ls /dubbo/${service}/providers&lt;/code&gt; 查看注册上的provider&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.08257713248638839&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/xacdaKuBM0SaZhjic5qqnoQEdaM8jWFXfaRvPjOwDsDohuJ4tdcic9p2oibryZULvxAHHTia5wrpFWp5kKcS0XZGQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2204&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果provider未注册成功，那么就需要排查，可能的原因有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;provider未启动成功，启动一下即可&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;provider虽然启动了，但注册失败了，查看一下错误日志，对症解决&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;注册中心地址是否写错？环境是否一致？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果provider已经注册，说明provider没问题，再看consumer。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt; &lt;/span&gt;&lt;span/&gt;&lt;span&gt;consumer端&lt;/span&gt;&lt;span/&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;consumer端排查还需再细分，以是否订阅（拉取）到对应provider信息为界&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;如何查看consumer的订阅信息&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;consumer订阅信息可从缓存文件中查看，缓存文件默认按如下规则生成：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;String defaultFilename = System.getProperty(&lt;span&gt;&quot;user.home&quot;&lt;/span&gt;) + &lt;span&gt;&quot;/.dubbo/dubbo-registry-&quot;&lt;/span&gt; + url.getApplication() + &lt;span&gt;&quot;-&quot;&lt;/span&gt; + url.getAddress().replaceAll(&lt;span&gt;&quot;:&quot;&lt;/span&gt;, &lt;span&gt;&quot;-&quot;&lt;/span&gt;) + &lt;span&gt;&quot;.cache&quot;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;例如：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;~/.dubbo/dubbo-registry-ddog-my-demo-c0-127.0.0.1-2181.cache&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有多个注册中心，将有多个缓存文件，文件内容如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;#Dubbo Registry Cache&lt;br/&gt;#Wed Aug 11 20:26:15 CST 2021&lt;br/&gt;org.newboo.basic.api.MyDemoService=empty\://127.0.0.1/org.newboo.basic.api.MyDemoService?application\=ddog-my-demo-c0&amp;amp;category\=routers&amp;amp;check\=false&amp;amp;dubbo\=2.0.2&amp;amp;init\=false&amp;amp;interface\=org.newboo.basic.api.MyDemoService&amp;amp;loadbalance\=xxx&amp;amp;methods\=call&amp;amp;owner\=roshilikang&amp;amp;pid\=3084&amp;amp;qos.enable\=true&amp;amp;qos.port\=33333&amp;amp;release\=2.7.6&amp;amp;side\=consumer&amp;amp;sticky\=false&amp;amp;timestamp\=1628684774590 empty\://127.0.0.1/org.newboo.basic.api.MyDemoService?application\=ddog-my-demo-c0&amp;amp;category\=configurators&amp;amp;check\=false&amp;amp;dubbo\=2.0.2&amp;amp;init\=false&amp;amp;interface\=org.newboo.basic.api.MyDemoService&amp;amp;loadbalance\=xxx&amp;amp;methods\=call&amp;amp;owner\=roshilikang&amp;amp;pid\=3084&amp;amp;qos.enable\=true&amp;amp;qos.port\=33333&amp;amp;release\=2.7.6&amp;amp;side\=consumer&amp;amp;sticky\=false&amp;amp;timestamp\=1628684774590 dubbo\://127.0.0.1\:20880/org.newboo.basic.api.MyDemoService?anyhost\=true&amp;amp;application\=ddog-my-demo-p0&amp;amp;deprecated\=false&amp;amp;dubbo\=2.0.2&amp;amp;dynamic\=true&amp;amp;generic\=false&amp;amp;interface\=org.newboo.basic.api.MyDemoService&amp;amp;methods\=call&amp;amp;owner\=roshilikang&amp;amp;pid\=2058&amp;amp;release\=2.7.6&amp;amp;side\=provider&amp;amp;threads\=500&amp;amp;timestamp\=1628684412247&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;搜索文件中是否有对应服务的provider&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;未成功订阅&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果没拿到信息（搜索不到对应的provider），说明订阅存在问题，检查consumer日志是否有报错，注册中心地址，环境等配置是否有问题。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;成功订阅&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如这个文件，存在&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;dubbo\://127.0.0.1\:20880/org.newboo.basic.api.MyDemoService?anyhost\=true&amp;amp;application\=ddog-my-demo-p0&amp;amp;deprecated\=false&amp;amp;dubbo\=2.0.2&amp;amp;dynamic\=true&amp;amp;generic\=false&amp;amp;interface\=org.newboo.basic.api.MyDemoService&amp;amp;methods\=call&amp;amp;owner\=roshilikang&amp;amp;pid\=2058&amp;amp;release\=2.7.6&amp;amp;side\=provider&amp;amp;threads\=500&amp;amp;timestamp\=1628684412247&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;说明consumer已经拿到了provider信息&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当consumer拿到provider，也不一定就能保证调用不会报No provider，有这么几种情况需要排查&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;检查consumer的group、version是否和provider完全匹配，不匹配会报No provider&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;是否被禁用，搜索缓存文件中是否有该服务对应的override URL，且disabled=true&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;consumer是否配置了路由规则，如tag路由，条件路由等，路由规则可能导致No provider&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;group、version是否匹配，有一个不看代码就知道consumer的version、group配置的小技巧，如果consumer指定了version或group，报错信息如下（group=read，version=1.0）：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;No provider available from registry 127.0.0.1:2181 for service read/org.newboo.basic.api.MyDemoService:1.0 on consumer 127.0.0.1 use dubbo version 2.7.6&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;service前包含group，用斜线分隔，service后有version用冒号分隔。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上可覆盖95%的场景，还有一种比较少见：&lt;strong&gt;consumer&lt;/strong&gt;生成invoker失败导致invokers为空；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此种情况请仔细检查错误日志，不明的报错需要关注。此处列举一些碰到过的case&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Dubbo 2.6.x中transport实现了netty和netty4，而在2.6.10版本中，netty transport扩展名字被改为了netty3；如果provider使用dubbo 2.6.10且指定了transport为netty3，低版本的dubbo调用时因为没有实现netty3的扩展而导致invoker生成失败；此时consumer端看起来是拿到了provider的URL，但也会报No provider错误&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;与1类似，当自定义某些扩展只在provider使用时，provider的一些参数会传递给consumer，让consumer也使用相同扩展，但consumer不一定实现了该扩展，导致invoker生成失败；比如自定义的dispatcher扩展。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;注：可能你会问为什么provider的参数会传递给consumer？这合理吗？举个例子，如果provider指定序列化协议为json，那consumer是否也要按照provider的序列化协议json来传输数据呢？只能说没有万全的设计&lt;/p&gt;&lt;/blockquote&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;总结&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;跟很多问题排查思路一样，根据已有现象一步步缩小排查范围，最终锁定根本原因。用一副思维导图来总结：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.25442684063373716&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/xacdaKuBM0SaZhjic5qqnoQEdaM8jWFXf1wCcricL9VU9CEpgPibicgJPSzVFe21foQ6eUNLxBxgWrVsafqmP0FFCg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1073&quot;/&gt;&lt;/figure&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;关于作者：专注后端的中间件开发，公众号&quot;捉虫大师&quot;作者，关注我，给你最纯粹的技术干货&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/xacdaKuBM0SaZhjic5qqnoQEdaM8jWFXfw3rfny7OTbHHFFviaLMiaibFv4ydxhWsBgK7sSOohemupDbt1xPebufbQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/figure&gt;&lt;span&gt;- END -&lt;/span&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>