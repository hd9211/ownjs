<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>23aadca594fd04183c170aa020bb507d</guid>
<title>什么鬼：谷歌浏览器，一次get请求建立两次tcp连接</title>
<link>https://toutiao.io/k/d2k0ruf</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                       &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5635416666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z85sZvtmju0tiaJS6BMffqEdxZTHN7MmibYwlBITT6bn2tPqP3SFeqKN2QnYN5od7mnR3veDrRdhs1w9lkLZHgdA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;960&quot;/&gt;&lt;/p&gt;&lt;p&gt;今天，同事说在谷歌浏览器中发起一次请求，使用wireshark抓包时，却发现了有两次tcp连接建立：其中一次是正常的三次握手-请求应答-四次挥手；另一次只有三次握手和四次挥手。谷歌浏览器抓包如图所示：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qlogo.cn/mmbiz_png/Z85sZvtmju1YPcZlVMKMJbbuibYfVpaWhnrU6aPeQ2PS4IgITmRUZWI3nkdkgAyPurdEoprEgJia6DG6fXfAYzBw/0?wx_fmt=png&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;912&quot; data-cropy1=&quot;52.069204152249135&quot; data-cropy2=&quot;397.61937716262975&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3793859649122807&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Z85sZvtmju1YPcZlVMKMJbbuibYfVpaWhrQh9JibGaFzzwtSdyRC26p99xMxar9l9dGuX420mDGRjNRvME0NAE6g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;912&quot;/&gt;&lt;/p&gt;&lt;section&gt;可以看到客户端在端口61112和端口64272分别进行了三次握手，建立了tcp连接，下面的http请求都是在端口61112进行的请求应答。那端口64272在干什么呢？&lt;br/&gt;&lt;/section&gt;&lt;p&gt;为了排除浏览器的问题，我们使用火狐浏览器进行请求抓包，抓包如下图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.32073544433094997&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z85sZvtmju1YPcZlVMKMJbbuibYfVpaWhhXA6gokxz8JrNZBDaJNiaxh2Jo5S6t4dwicpQUKQSAia4DWFpW1qaePQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;979&quot;/&gt;&lt;/p&gt;&lt;section&gt;可以看到火狐浏览器中正常：一次请求只建立一次tcp连接。我们尝试了curl发起请求，抓包记录都是一次tcp连接。基本确定不是浏览器的共性，只是谷歌浏览器的个性。&lt;br/&gt;&lt;/section&gt;&lt;p&gt;使用多个连接通常最容易想到的是加速访问，比如一个数据库连接不够用，可以建立多个连接（连接池复用连接）。于是，我们在谷歌浏览器设置里搜索有关加速、快速的内容，经过测试找到了一项：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z85sZvtmju1YPcZlVMKMJbbuibYfVpaWhfa77dwTL0ru8vRhZo6K2WibcBhzcTQiaUbkTA2HcfA82HpH9VurhFIaw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;856&quot;/&gt;&lt;/p&gt;&lt;section&gt;关闭预加载后，再次发起请求，谷歌浏览器也正常变成单个三次握手了。本文使用wireshark抓包，过滤指定端口filter：&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;tcp.port==8787&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;使用springboot2项目，配置tomcat 连接超时时间（验证keep-alive超时时间）：&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;server.connection-timeout=5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.32695035460992905&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z85sZvtmju1YPcZlVMKMJbbuibYfVpaWhzXtNrjYTSQO51DUfblQkrKWCOczhedticiaMPgA4kQEjMc3wh6uZTZcw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1410&quot;/&gt;&lt;/p&gt;&lt;section&gt;本文就简单分享到这里，觉得有用点个&lt;em&gt;在看&lt;/em&gt;，喜欢请关注我们：&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5226390685640362&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z85sZvtmju2ZMvElmjsA4IjbhwMTv9HFQHMSCWvDnX6DtgEiaVYia6ZlZL9jPGvBDIyIDK5tAP1oZGlJxDhFYSYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;773&quot;/&gt;&lt;span/&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                          
              &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                  &lt;p class=&quot;tips_global&quot; aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_title&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                    &lt;p role=&quot;option&quot; aria-labelledby=&quot;js_a11y_reward_qr_word js_a11y_comma js_a11y_reward_qr_title js_a11y_reward_qr_money&quot; aria-describedby=&quot;js_a11y_reward_qr_tips &quot; class=&quot;reward_tips&quot; id=&quot;js_a11y_reward_qr_word&quot;/&gt;
                  &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img alt=&quot;赞赏二维码&quot; class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                  &lt;p aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_tips&quot; class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                &lt;/div&gt;
                                              
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b249630e379fc927095e86702dc72698</guid>
<title>MQTT 协议基本介绍</title>
<link>https://toutiao.io/k/xxeqcbo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div id=&quot;cnblogs_post_body&quot; class=&quot;blogpost-body blogpost-body-html&quot;&gt;
&lt;h2 class=&quot;_1RuRku&quot;&gt;&lt;span&gt;简介&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://links.jianshu.com/go?to=https%3A%2F%2Fwww.emqx.io%2Fcn%2Fmqtt&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MQTT&lt;/a&gt; 全称为 Message Queuing Telemetry Transport（消息队列遥测传输）是一种基于发布/订阅范式的“轻量级”消息协议，由 IBM 发布。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MQTT 可以被解释为一种低开销，低带宽占用的即时通讯协议，可以用极少的代码和带宽的为连接远程设备提供实时可靠的消息服务，它适用于硬件性能低下的远程设备以及网络状况糟糕的环境下，因此 MQTT 协议在 IoT（Internet of things，物联网），小型设备应用，移动应用等方面有较广泛的应用。&lt;/li&gt;
&lt;li&gt;IoT 设备要运作，就必须连接到互联网，设备才能相互协作，以及与后端服务协同工作。而互联网的基础网络协议是 TCP/IP，MQTT 协议是基于 TCP/IP 协议栈而构建的，因此它已经慢慢的已经成为了 IoT 通讯的标准。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在简介完 MQTT 协议后，EMQ君将从其一些基本特点和基本概念为两部分，介绍 MQTT 协议。&lt;/p&gt;
&lt;h2&gt;基本特点&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;MQTT是一种发布/订阅传输协议，基本原理和实现如下；&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;MQTT 协议提供一对多的消息发布，可以解除应用程序耦合，信息冗余小。该协议需要客户端和服务端，而协议中主要有三种身份：发布者（Publisher）、代理（Broker，服务器）、订阅者（Subscriber）。其中，消息的发布者和订阅者都是客户端，消息代理是服务器，而消息发布者可以同时是订阅者，实现了生产者与消费者的脱耦。&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;使用 TCP/IP 提供网络连接，提供有序、无损、双向连接；&lt;/p&gt;
&lt;p&gt;MQTT 是一种连接协议，它指定了如何组织数据字节并通过 TCP/IP 网络传输它们。设备联网，也需要连接到互联网中，在大万维的世界中，TCP 如同汽车，有轮子就能用来运输数据，MQTT 就像是交通规则。在网络模型中，TCP是传输层协议，而 MQTT是在应用层，在 TCP 的上层，因此 MQTT 也是基于这个而构建的，提高了可靠性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对负载内容屏蔽的消息传输；&lt;/p&gt;
&lt;p&gt;可以对消息订阅者所接受到的内容有所屏蔽。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;具体有三种消息发布的服务质量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;至多一次&lt;/code&gt;，消息发布完全依赖底层 TCP/IP 网络。会发生消息丢失或重复。这一级别可用于如下情况，环境传感器数据，丢失一次读记录无所谓，因为不久后还会有第二次发送。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;至少一次&lt;/code&gt;，确保消息到达，但消息重复可能会发生。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;只有一次&lt;/code&gt;，确保消息到达一次。这一级别可用于如下情况，在计费系统中，消息重复或丢失会导致不正确的结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;小型传输，开销小，固定长度的头部是 2 字节，协议交换最小化，以降低网络流量；&lt;/p&gt;
&lt;p&gt;整体上协议可拆分为：固定头部+可变头部+消息体，这就是为什么在介绍里说它非常适合&quot;在物联网领域，传感器与服务器的通信，信息的收集&quot;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用Last Will和Testament特性通知有关各方客户端异常中断的机制；&lt;/p&gt;
&lt;p&gt;Last Will：即遗言机制，用于通知同一主题下的其他设备发送遗言的设备已经断开了连接。&lt;/p&gt;
&lt;p&gt;Testament：遗嘱机制，功能类似于Last Will。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;基本概念&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MQTT 客户端&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个使用 MQTT 协议的设备、应用程序等，它总是建立到服务器的网络连接。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可以发布信息，其他客户端可以订阅该信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;订阅其它客户端发布的消息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;退订或删除应用程序的消息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;断开与服务器连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MQTT 服务器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MQTT 服务器也称为 Broker（消息代理），以是一个应用程序或一台设备。它是位于消息发布者 和订阅者之间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;接受来自客户端的网络连接&lt;/li&gt;
&lt;li&gt;接受客户端发布的应用信息&lt;/li&gt;
&lt;li&gt;处理来自客户端的订阅和退订请求&lt;/li&gt;
&lt;li&gt;向订阅的客户转发应用程序消息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主题（Topic）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;连接到一个应用程序消息的标签，该标签与服务器的订阅相匹配。服务器会将消息发送给订阅所匹配标签的每个客户端。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主题筛选器（Topic Filter）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个对主题名通配符筛选器，在订阅表达式中使用，表示订阅所匹配到的多个主题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;QoS（消息传递的服务质量水平）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;服务质量，标志表明此主题范围内的消息传送到客户端所需的一致程度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;值 0：不可靠，消息基本上仅传送一次，如果当时客户端不可用，则会丢失该消息。&lt;/li&gt;
&lt;li&gt;值 1：消息应传送至少 1 次。&lt;/li&gt;
&lt;li&gt;值 2：消息仅传送一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;会话（Session）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每个客户端与服务器建立连接后就是一个会话，客户端和服务器之间有状态交互。会话存在于一个网络之间，也可能在客户端和服务器之间跨越多个连续的网络连接。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;订阅（Subscription）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;订阅包含主题筛选器（Topic Filter）和最大服务质量（QoS）。订阅会与一个会话（Session）关联。一个会话可以包含多个订阅。每一个会话中的每个订阅都有一个不同的主题筛选器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;客户端在成功建立TCP连接之后，发送CONNECT消息，在得到服务器端授权允许建立彼此连接的CONNACK消息之后，客户端会发送SUBSCRIBE消息，订阅感兴趣的Topic主题列表（至少一个主题）&lt;/li&gt;
&lt;li&gt;订阅的主题名称采用UTF-8编码，然后紧跟着对应的QoS值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发布（publish）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;控制报文是指从客户端向服务端或者服务端向客户端传输一个应用消息，MQTT 客户端发送消息请求，发送完成后返回应用程序线程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;比如安卓的推送服务，还有一些即时通信软件如微信等也是采用的推送技术。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;负载（Payload）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;消息订阅者所具体接收的内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;简单示例&lt;/h2&gt;
&lt;p&gt;MQTT 协议主要是根据以下情况设计的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;M2M（Machine to Machine），机器或设备间端到端通信，比如传感器之间的数据通讯。&lt;/li&gt;
&lt;li&gt;设备（Machine）中，例如传感器，硬件能力很弱，协议要考虑尽量小的资源消耗，比如计算能力和存储等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据 MQTT 的基础了解后并结合简单的架构，在这里做一个简单的示例图，可以更直观的理解MQTT协议的通信模型。MQTT Broker 就选择 EMQ 作为示范。比如有1个温度传感器（1个Machine），1个移动设备，1个电脑，一个服务器（3个Machine)，都可以得到或者显示温度传感器的温度值，需要先通过 MQTT 协议subscribe（订阅）一个比如叫 temperature 的 topic（主题）如下：&lt;/p&gt;

&lt;p&gt;图中移动设备，服务器，电脑需要先通过 EMQ subscribe 一个叫 temperature 的 topic，当温度传感器 publish 温度数据，三个设备就可以收到了。&lt;/p&gt;
&lt;h1&gt;进一步了解MQTT 3&lt;/h1&gt;
&lt;p&gt;MQTT 3 （当前版本3.1.1）是目前使用的最为广泛的 MQTT 协议标准。尽管 &lt;a href=&quot;https://links.jianshu.com/go?to=https%3A%2F%2Fwww.emqx.io%2Fcn%2Fmqtt%2Fmqtt5&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MQTT 5&lt;/a&gt; 标准已经发布，并且带来了一些令人振奋的新特性，但是在整个应用场景上，从后台服务到消息中间件再到客户端SDK等环节上的产品升级并没有都完成，再加上既有部署的维护，业界从版本3到5的过渡可能会持续相当长一段时间，所以，对于刚加入物联网行业的生力军来说，现在来学习 MQTT 3 依然是一件很有意义的事情。&lt;/p&gt;
&lt;h2&gt;MQTT 协议的工作方式&lt;/h2&gt;
&lt;p&gt;前面简介中讲到，在 MQTT 协议中有三个角色会参与到整个通信过程，发布者（publisher）、代理（broker）和订阅者（subscriber）。有别于传统的客户端/服务器通讯协议，MQTT协议并不是端到端的，消息传递通过代理，包括会话（session）也不是建立在发布者和订阅者之间，而是建立在端和代理之间。代理解除了发布者和订阅者之间的耦合。&lt;/p&gt;
&lt;p&gt;除了发布者和订阅者之间传递普通消息，代理还可以为发布者处理保留消息和遗愿消息，并可以更改服务质量（QoS）等级。&lt;/p&gt;
&lt;h2&gt;MQTT控制报文&lt;/h2&gt;
&lt;p&gt;MQTT协议工作在TCP之上，端和代理之间通过交换预先定义的控制报文来完成通信。MQTT报文有3个部分组成，并按下表顺序出现：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;固定报头（fixed header）&lt;/th&gt;&lt;th&gt;可变报头（variable header）&lt;/th&gt;&lt;th&gt;荷载（payload）&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;所有报文都包含&lt;/td&gt;
&lt;td&gt;部分报文包含&lt;/td&gt;
&lt;td&gt;部分报文包含&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;所有的MQTT控制报文都有一个固定报头，格式如下：&lt;/p&gt;

&lt;p&gt;协议版本3定义了14种 MQTT 报文，用于建立/断开连接、发布消息、订阅消息和维护连接。固定报头的第一字节的4-7位的值指定了报文类型，其取值如下表。0和15为系统保留值；0-3位为标志位，依照报文类型有不同的含义，事实上，除了 PUBLISH 报文以外，其他报文的标志位均为系统保留。如果收到报文的标志位无效，代理应断开连接。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;报文类型&lt;/th&gt;&lt;th&gt;值&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CONNECT&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;客户端向代理发起连接请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CONNACK&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;连接确认&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUBLISH&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;发布消息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUBACK&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;发布确认&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUBREC&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;发布收到（QoS2）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUBREL&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;发布释放（QoS2）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUBCOMP&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;发布完成（QoS2）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SUBSCRIBE&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;客户端向代理发起订阅请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SUBACK&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;订阅确认&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UNSUBSCRIBE&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;取消订阅&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UNSUBACK&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;取消订阅确认&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PINGREQ&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;PING请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PINGRESP&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;PING响应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;断开连接&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;固定报头的第二字节起表示报文的剩余长度。&lt;span&gt;最大4个字节，每字节可以编码至127，并含有一位继续位，如继续位非0，则下一字节依然为剩余长度。由此，理论上一个控制报文最长可以到256MB。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/420532/202106/420532-20210607095138649-2085346960.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;span/&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;一些报文在固定报头和荷载之间可以有一个可变报头。可变报头的内容根据报文类型不同而不同。最常见的可变报头是报文标识符（Packet Identifier）。&lt;/p&gt;
&lt;p&gt;一些报文可以在最后携带一个荷载。不同的报文可以无荷载，可选荷载，或必须带有荷载。&lt;/p&gt;
&lt;p&gt;限于篇幅，在这里我们仅以CONNECT和CONNACK为例解释一下 MQTT 报文的构成和报文响应行为。其他报文请查阅MQTT标准文档。&lt;/p&gt;
&lt;h3&gt;CONNECT报文&lt;/h3&gt;
&lt;p&gt;限于篇幅，在这里我们仅以CONNECT为例解释一下MQTT报文的构成。其他报文请查阅MQTT标准文档。&lt;br/&gt;CONNECT是客户端连接到代理的第一个报文，如果在连接已经存在，代理收到该报文将会断开现有连接。&lt;/p&gt;
&lt;h4&gt;CONNECT报文的固定报头&lt;/h4&gt;

&lt;h4&gt;CONNECT报文的可变报头&lt;/h4&gt;
&lt;p&gt;CONNECT报文的可变报头由4部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;协议名。协议名是UTF-8编码的大写的MQTT。&lt;/li&gt;
&lt;li&gt;协议级别。MQTT 3.1.1的协议级别为4.&lt;/li&gt;
&lt;li&gt;连接标志位。定义连接行为的参数。见下表。&lt;/li&gt;
&lt;li&gt;Keep Alive。2字节，客户端和代理之间的无活动时间超过该值后，应关闭连接。如果该值置0表示客户端不要求代理启用KEEPALIVE功能。&lt;/li&gt;

&lt;/ul&gt;
&lt;p&gt;连接标志位：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;位&lt;/th&gt;&lt;th&gt;7&lt;/th&gt;&lt;th&gt;6&lt;/th&gt;&lt;th&gt;5&lt;/th&gt;&lt;th&gt;4&lt;/th&gt;&lt;th&gt;3&lt;/th&gt;&lt;th&gt;2&lt;/th&gt;&lt;th&gt;1&lt;/th&gt;&lt;th&gt;0&lt;/th&gt;&lt;/tr&gt;

&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;用户名&lt;/td&gt;
&lt;td&gt;密码&lt;/td&gt;
&lt;td&gt;保留遗愿&lt;/td&gt;
&lt;td&gt;遗愿QoS&lt;/td&gt;
&lt;td&gt;遗愿QoS&lt;/td&gt;
&lt;td&gt;遗愿&lt;/td&gt;
&lt;td&gt;清除会话&lt;/td&gt;
&lt;td&gt;保留（0）&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;
&lt;p&gt;清除会话标志位：&lt;br/&gt;这个标志位定义了如何处理会话状态。如果设置为0，客户端和代理可以恢复上一次连接时的会话状态，如果上一次连接的会话状态不存在，代理将会为客户端建立一个新的会话。如果该位设置为1，则双方将清除掉上一次连接的会话状态并建立一个新的会话。&lt;/p&gt;
&lt;p&gt;遗愿标志位：&lt;br/&gt;如果遗愿标志为1，则遗愿消息会被存储在代理上，当连接关闭时，代理将发布这个消息，除非在客户端断开连接时把遗愿消息清除了。&lt;/p&gt;
&lt;p&gt;遗愿QoS标志位：&lt;br/&gt;指定了遗愿消息的服务质量等级。&lt;/p&gt;
&lt;p&gt;保留遗愿消息标志位：&lt;br/&gt;指定在发布遗愿消息的时候，是否把该消息作为保留消息存储在代理。&lt;/p&gt;
&lt;p&gt;用户名标志位：&lt;br/&gt;如果设置为1，则用户名必须出现在荷载中，反之，用户名不允许出现在荷载中。&lt;/p&gt;
&lt;p&gt;密码标志位：&lt;br/&gt;如果该位为1，则密码必须出现在荷载中；如果该位为0，则密码不允许出现在荷载中。如果用户名标志位为0，则该位必须也为0。&lt;/p&gt;
&lt;h4&gt;CONNECT报文的荷载&lt;/h4&gt;
&lt;p&gt;CONNECT报文的荷载由一个或者多个字段组成，这些字段是否出现由可变报头中的标志位决定。字段总是以长度开始。字段出现的顺序必须是：客户端标识符，遗愿主题，遗愿消息，用户名，密码。&lt;/p&gt;
&lt;h4&gt;CONNECT报文的响应&lt;/h4&gt;
&lt;p&gt;在代理在为MQTT协议开放的端口上接收到TCP连接请求并建立连接后应该会收到CONNECT报文，如果在一定时间内代理没有收到CONNECT报文，则应该关闭这个TCP连接。&lt;br/&gt;在收到CONNECT报文后，代理应该检查报文格式是否符合协议标准。如果不符合协议标准，代理应关闭连接，且不发送CONNACK报文给客户端。&lt;br/&gt;代理可以检查CONNECT报文的内容并执行响应的认证和鉴权。如果这些检查没有通过，代理应该向客户端发送一个带有非0返回码的CONNACK报文。&lt;/p&gt;
&lt;h3&gt;CONNACK报文&lt;/h3&gt;
&lt;p&gt;CONNACK是代理用来响应客户端CONNECT的报文。代理向客户端发送的第一个报文必须是CONNACT。CONNACK有一个固定报头，一个可变报头，但是不带有荷载。&lt;/p&gt;
&lt;h4&gt;CONNACK的固定报头&lt;/h4&gt;

&lt;p&gt;CONNACT报文只有固定报头和一个2字节的可变报头，所以它的剩余长度总是2。&lt;/p&gt;
&lt;h4&gt;CONNACK报文的可变报头&lt;/h4&gt;
&lt;p&gt;CONNACK报文的可变报头为定长2字节。第一字节的0位表示是否有会话存在。如果代理上已经有请求连接的客户端的会话，且连接请求的清除会话标识为0，则该位为1，否则该位为0。客户端可以根据这一位的值采取响应行为，比如（重新）订阅主题等。&lt;/p&gt;
&lt;p&gt;CONNACK报文的可变报头的第二字节为返回码。如果CONNECT请求的格式正确，但是代理依然不能允许客户端连接，则返回码为一个非零值。如果连接成功，则返回0。&lt;/p&gt;
&lt;p&gt;返回码的定义：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;值&lt;/th&gt;&lt;th&gt;返回码含义&lt;/th&gt;&lt;/tr&gt;

&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;成功，连接请求被接受。&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;拒绝连接，不可接受的协议版本。&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;拒绝连接，不被允许的身份识别符（Client Identifier）。&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;拒绝连接，服务器不可用。&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;拒绝连接，无效的用户名和密码。&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;拒绝连接，客户端无授权。&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6-255&lt;/td&gt;
&lt;td&gt;系统保留。&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;
&lt;p&gt;客户端接受到代理的CONNACK的返回码为0，则连接建立完成，双方可以开始通信。&lt;/p&gt;
&lt;h2&gt;清除会话、保留消息和QoS的组合&lt;/h2&gt;
&lt;p&gt;清除会话、保留消息等概念，在传统的客户端/服务器方式的通信中不一定会出现，这些概念有时候不太容易理解，特别是当他们被组合起来用的时候。&lt;/p&gt;
&lt;p&gt;下面的表格汇总了当一个客户端连接上来时，它能收到消息的各种情况。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;清除会话位&lt;/th&gt;&lt;th&gt;保留位&lt;/th&gt;&lt;th&gt;订阅QoS&lt;/th&gt;&lt;th&gt;发布QoS&lt;/th&gt;&lt;th&gt;可收到的消息&lt;/th&gt;&lt;/tr&gt;

&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Y，会话全部消息&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Y，最后一条消息&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Y，最后一条消息&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Y，最后一条消息&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Y，最后一条消息&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Y，最后一条消息&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Y，最后一条消息&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Y，最后一条消息&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Y，会话全部消息&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;
&lt;h1&gt;MQTT 5.0 协议新增介绍&lt;/h1&gt;
&lt;p&gt;MQTT 5.0 协议相比 MQTT 3.1.1 协议新增了许多内容， 比如说属性，AUTH 包，还有对一些字段做了修改，比如将 Clean Session 修改成 Clean Start 配合 Session Expiry Internal 去实现更灵活的会话控制。&lt;/p&gt;
&lt;p&gt;这里就简单罗列一下 5.0 协议新增的内容。&lt;/p&gt;
&lt;h2&gt;设计目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;增强了扩展性&lt;/li&gt;
&lt;li&gt;改善了错误报告的方式&lt;/li&gt;
&lt;li&gt;定型了一些通用范式，例如能力发现和请求、响应&lt;/li&gt;
&lt;li&gt;扩展机制包括用户属性(user properties)&lt;/li&gt;
&lt;li&gt;性能改善，并且添加了对小客户端（small clients） 的支持&lt;/li&gt;

&lt;/ul&gt;
&lt;p&gt;读者可以参考MQTT5.0协议规范的&lt;a href=&quot;https://links.jianshu.com/go?to=http%3A%2F%2Fdocs.oasis-open.org%2Fmqtt%2Fmqtt%2Fv5.0%2Fcs02%2Fmqtt-v5.0-cs02.html%23AppendixC&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;附录C&lt;/a&gt;来了解协议变更。&lt;/p&gt;
&lt;h2&gt;属性&lt;/h2&gt;
&lt;p&gt;为了达成新协议的设计目标，MQTT 5.0 协议中新增了许多属性，以下是新添加的属性列表。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;标识符 Identifier(十进制)&lt;/th&gt;&lt;th&gt;标识符 Identifier(十六进制)&lt;/th&gt;&lt;th&gt;名称（用法）Name(usage)&lt;/th&gt;&lt;th&gt;类型 Type&lt;/th&gt;&lt;th&gt;报文/遗嘱属性 Packet/Will Properties&lt;/th&gt;&lt;/tr&gt;

&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0x01&lt;/td&gt;
&lt;td&gt;有效载荷格式指示器 Payload Format Indicator&lt;/td&gt;
&lt;td&gt;字节&lt;/td&gt;
&lt;td&gt;PUBLISH, 遗嘱属性 Will Properties&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0x02&lt;/td&gt;
&lt;td&gt;消息到期间隔 Message Exipiry Interval&lt;/td&gt;
&lt;td&gt;四字节整形&lt;/td&gt;
&lt;td&gt;PUBLISH，遗嘱属性&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;0x03&lt;/td&gt;
&lt;td&gt;内容类型 Content Type&lt;/td&gt;
&lt;td&gt;UTF-8 编码字符串&lt;/td&gt;
&lt;td&gt;PUBLISH，遗嘱属性&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;0x08&lt;/td&gt;
&lt;td&gt;响应主题 Response Topic&lt;/td&gt;
&lt;td&gt;UTF-8 编码字符串&lt;/td&gt;
&lt;td&gt;PUBLISH，遗嘱属性&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;0x09&lt;/td&gt;
&lt;td&gt;关联数据 Correlation Data&lt;/td&gt;
&lt;td&gt;二进制数据 Binary Data&lt;/td&gt;
&lt;td&gt;PUBLISH，遗嘱属性&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;0x0B&lt;/td&gt;
&lt;td&gt;订阅标识符 Subscription Identifier&lt;/td&gt;
&lt;td&gt;可变字节整形&lt;/td&gt;
&lt;td&gt;PUBLISH, SUBSCRIBE&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;0x11&lt;/td&gt;
&lt;td&gt;会话到期间隔 Session Expiry Interval&lt;/td&gt;
&lt;td&gt;四字节整形&lt;/td&gt;
&lt;td&gt;CONNECT, CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;0x12&lt;/td&gt;
&lt;td&gt;已分配客户端标识符 Assigned Client Identifier&lt;/td&gt;
&lt;td&gt;UTF-8 编码字符串&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;0x13&lt;/td&gt;
&lt;td&gt;服务器保活 Server Keep Alive&lt;/td&gt;
&lt;td&gt;两字节整形&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;0x15&lt;/td&gt;
&lt;td&gt;认证方法 Authentication Method&lt;/td&gt;
&lt;td&gt;UTF-8 编码字符串&lt;/td&gt;
&lt;td&gt;CONNECT, CONNACK, AUTH&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;0x16&lt;/td&gt;
&lt;td&gt;认证数据 Authentication Data&lt;/td&gt;
&lt;td&gt;二进制数据&lt;/td&gt;
&lt;td&gt;CONNECT, CONNACK, AUTH&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;0x17&lt;/td&gt;
&lt;td&gt;请求响应信息 Request Response Information&lt;/td&gt;
&lt;td&gt;字节&lt;/td&gt;
&lt;td&gt;CONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;0x18&lt;/td&gt;
&lt;td&gt;遗嘱延迟间隔 Will Delay Interval&lt;/td&gt;
&lt;td&gt;四字节整形&lt;/td&gt;
&lt;td&gt;遗嘱属性 Will Properties&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;0x19&lt;/td&gt;
&lt;td&gt;请求响应信息 Request Response Information&lt;/td&gt;
&lt;td&gt;字节&lt;/td&gt;
&lt;td&gt;CONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;0x1A&lt;/td&gt;
&lt;td&gt;响应信息 Response Information&lt;/td&gt;
&lt;td&gt;UTF-8 编码字符串&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;0x1C&lt;/td&gt;
&lt;td&gt;服务器引用 Server Reference&lt;/td&gt;
&lt;td&gt;UTF-8 编码字符串&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;0x1F&lt;/td&gt;
&lt;td&gt;原因字符串 Reason String&lt;/td&gt;
&lt;td&gt;UTF-8 编码字符串&lt;/td&gt;
&lt;td&gt;CONNACK, PUBACK, PUBREC, PUBREL, PUBCOMP, SUBACK,UNSUBACK, DISCONNECT, AUTH&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;0x21&lt;/td&gt;
&lt;td&gt;接收最大值 Receive Maximum&lt;/td&gt;
&lt;td&gt;两字节整形&lt;/td&gt;
&lt;td&gt;CONNECT, CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;0x22&lt;/td&gt;
&lt;td&gt;主题别名最大值 Topic Alias Maximum&lt;/td&gt;
&lt;td&gt;两字节整形&lt;/td&gt;
&lt;td&gt;CONNECT, CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;0x23&lt;/td&gt;
&lt;td&gt;主题别名 Topic Alias&lt;/td&gt;
&lt;td&gt;两字节整形&lt;/td&gt;
&lt;td&gt;PUBLISH&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;0x24&lt;/td&gt;
&lt;td&gt;服务质量最大值 Maximum QoS&lt;/td&gt;
&lt;td&gt;字节&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;0x25&lt;/td&gt;
&lt;td&gt;保留可用 Retain Available&lt;/td&gt;
&lt;td&gt;字节&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;0x26&lt;/td&gt;
&lt;td&gt;用户属性 User Property&lt;/td&gt;
&lt;td&gt;UTF-8 字符串对 UTF-8 String Pair&lt;/td&gt;
&lt;td&gt;CONNECT, CONNACK, PUBLISH, PUBACK, PUBREC, PUBREL, PUBCOMP, SUBACK, UNSUBACK, DISCONNECT, AUTH&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;0x27&lt;/td&gt;
&lt;td&gt;最大报文大小 Maximum Packet Size&lt;/td&gt;
&lt;td&gt;四字节整形&lt;/td&gt;
&lt;td&gt;CONNECT, CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;0x28&lt;/td&gt;
&lt;td&gt;可用通配符订阅 Wildcard Subscription Available&lt;/td&gt;
&lt;td&gt;字节&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt;0x29&lt;/td&gt;
&lt;td&gt;可用订阅标识符 Subscription Identifier Available&lt;/td&gt;
&lt;td&gt;Byte&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;0x2A&lt;/td&gt;
&lt;td&gt;可用共享订阅 Shared Subscription Available&lt;/td&gt;
&lt;td&gt;字节&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;
&lt;h2&gt;原因码&lt;/h2&gt;
&lt;p&gt;MQTT v3.1.1 只有寥寥 6 个返回码，用来表示网络连接时可能会出现的异常行为，在引入属性后的 MQTT 5.0 协议中，仅仅这 6 个返回码显然已经不足以用来描述各种异常行为，因此MQTT 5.0 协议中将返回码改成了原因码，用来实现改善错误报告的目的。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;原因码（十进制）&lt;/th&gt;&lt;th&gt;原因码（十六进制）&lt;/th&gt;&lt;th&gt;名称&lt;/th&gt;&lt;th&gt;报文&lt;/th&gt;&lt;/tr&gt;

&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0x00&lt;/td&gt;
&lt;td&gt;成功 Success&lt;/td&gt;
&lt;td&gt;CONNACK, PUBACK, PUBREC, PUBREL, PUBCOMP, UNSUBACK, AUTH&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0x00&lt;/td&gt;
&lt;td&gt;正常断连 Normal disconnection&lt;/td&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0x00&lt;/td&gt;
&lt;td&gt;准许 QoS 0 Granted QoS 0&lt;/td&gt;
&lt;td&gt;SUBACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0x01&lt;/td&gt;
&lt;td&gt;准许 QoS 1 Granted QoS 1&lt;/td&gt;
&lt;td&gt;SUBACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0x02&lt;/td&gt;
&lt;td&gt;准许 QoS 2 Granted QoS 2&lt;/td&gt;
&lt;td&gt;SUBACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;0x04&lt;/td&gt;
&lt;td&gt;以遗嘱消息断开连接 Disconnect with Will Message&lt;/td&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;0x10&lt;/td&gt;
&lt;td&gt;没有匹配的订阅者 No matching subscribers&lt;/td&gt;
&lt;td&gt;PUBACK, PUBREC&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;0x11&lt;/td&gt;
&lt;td&gt;没有订阅 No subscription existed&lt;/td&gt;
&lt;td&gt;UNSUBACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;0x18&lt;/td&gt;
&lt;td&gt;继续认证 Continue authentication&lt;/td&gt;
&lt;td&gt;AUTH&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;0x19&lt;/td&gt;
&lt;td&gt;重新认证 Re-authenticate&lt;/td&gt;
&lt;td&gt;AUTH&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;0x80&lt;/td&gt;
&lt;td&gt;未指定错误 Unspecified error&lt;/td&gt;
&lt;td&gt;CONNACK, PUBACK, PUBREC, SUBACK, UNSUBACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;129&lt;/td&gt;
&lt;td&gt;0x81&lt;/td&gt;
&lt;td&gt;畸形报文 Malformed Packet&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;130&lt;/td&gt;
&lt;td&gt;0x82&lt;/td&gt;
&lt;td&gt;协议错误 Protocol Error&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;131&lt;/td&gt;
&lt;td&gt;0x83&lt;/td&gt;
&lt;td&gt;实现特有错误 Implementation specific error&lt;/td&gt;
&lt;td&gt;CONNACK, PUBACK, PUBREC, SUBACK, UNSUBACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;132&lt;/td&gt;
&lt;td&gt;0x84&lt;/td&gt;
&lt;td&gt;不支持的协议版本 Unsupported Protocol Version&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;133&lt;/td&gt;
&lt;td&gt;0x85&lt;/td&gt;
&lt;td&gt;客户端标识符无效 Client Identifier not valid&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;134&lt;/td&gt;
&lt;td&gt;0x86&lt;/td&gt;
&lt;td&gt;错误的用户名和密码 Bad User Name or Password&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;135&lt;/td&gt;
&lt;td&gt;0x87&lt;/td&gt;
&lt;td&gt;未授权 Not authorized&lt;/td&gt;
&lt;td&gt;CONNACK, PUBACK, PUBREC, SUBACK, UNSUBACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;136&lt;/td&gt;
&lt;td&gt;0x88&lt;/td&gt;
&lt;td&gt;服务器不可用 Server unavailable&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;137&lt;/td&gt;
&lt;td&gt;0x89&lt;/td&gt;
&lt;td&gt;服务器繁忙 Server busy&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;138&lt;/td&gt;
&lt;td&gt;0x8A&lt;/td&gt;
&lt;td&gt;禁止访问 Banned&lt;/td&gt;
&lt;td&gt;CONNACK&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;139&lt;/td&gt;
&lt;td&gt;0x8B&lt;/td&gt;
&lt;td&gt;服务器关机中 Server shutting down&lt;/td&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;0x8C&lt;/td&gt;
&lt;td&gt;错误验证方法 Bad authentication method&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;141&lt;/td&gt;
&lt;td&gt;0x8D&lt;/td&gt;
&lt;td&gt;保活超时 Keep Alive timeout&lt;/td&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;142&lt;/td&gt;
&lt;td&gt;0x8E&lt;/td&gt;
&lt;td&gt;会话被接管 Session taken over&lt;/td&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;143&lt;/td&gt;
&lt;td&gt;0x8F&lt;/td&gt;
&lt;td&gt;主题过滤器无效 Topic Filter invalid&lt;/td&gt;
&lt;td&gt;SUBACK, UNSUBACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;144&lt;/td&gt;
&lt;td&gt;0x90&lt;/td&gt;
&lt;td&gt;主题名无效 Topic Name invalid&lt;/td&gt;
&lt;td&gt;CONNACK, PUBACK, PUBREC, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;145&lt;/td&gt;
&lt;td&gt;0x91&lt;/td&gt;
&lt;td&gt;报文标识符在使用中 Packet Identifier in use&lt;/td&gt;
&lt;td&gt;PUBACK, PUBREC, SUBACK, UNSUBACK=&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;146&lt;/td&gt;
&lt;td&gt;0x92&lt;/td&gt;
&lt;td&gt;没有发现报文标识符 Packet Identifier not found&lt;/td&gt;
&lt;td&gt;PUBREL, PUBCOMP&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;147&lt;/td&gt;
&lt;td&gt;0x93&lt;/td&gt;
&lt;td&gt;超出接收最大值 Receive Maximum exceeded&lt;/td&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;148&lt;/td&gt;
&lt;td&gt;0x94&lt;/td&gt;
&lt;td&gt;主题别名无效 Topic Alias invalid&lt;/td&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;149&lt;/td&gt;
&lt;td&gt;0x95&lt;/td&gt;
&lt;td&gt;报文太大 Packet too large&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;150&lt;/td&gt;
&lt;td&gt;0x96&lt;/td&gt;
&lt;td&gt;消息传输速率太高 Message rate too high&lt;/td&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;151&lt;/td&gt;
&lt;td&gt;0x97&lt;/td&gt;
&lt;td&gt;超出限额 Quota exceeded&lt;/td&gt;
&lt;td&gt;CONNACK, PUBACK, PUBREC, SUBACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;152&lt;/td&gt;
&lt;td&gt;0x98&lt;/td&gt;
&lt;td&gt;管理行为 Administrative action&lt;/td&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;153&lt;/td&gt;
&lt;td&gt;0x99&lt;/td&gt;
&lt;td&gt;有效载荷格式无效 Payload format invalid&lt;/td&gt;
&lt;td&gt;PUBACK, PUBREC, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;154&lt;/td&gt;
&lt;td&gt;0x9A&lt;/td&gt;
&lt;td&gt;不支持消息保留 Retain not supported&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;155&lt;/td&gt;
&lt;td&gt;0x9B&lt;/td&gt;
&lt;td&gt;不支持的QoS QoS not supported&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;156&lt;/td&gt;
&lt;td&gt;0x9C&lt;/td&gt;
&lt;td&gt;使用另一台服务器 Use another server&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;157&lt;/td&gt;
&lt;td&gt;0x9D&lt;/td&gt;
&lt;td&gt;服务器被移除 Server moved&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;158&lt;/td&gt;
&lt;td&gt;0x9E&lt;/td&gt;
&lt;td&gt;不支持的共享订阅 Shared Subscription not supported&lt;/td&gt;
&lt;td&gt;SUBACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;159&lt;/td&gt;
&lt;td&gt;0x9F&lt;/td&gt;
&lt;td&gt;超出连接速率 Connection rate exceeded&lt;/td&gt;
&lt;td&gt;CONNACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;160&lt;/td&gt;
&lt;td&gt;0xA0&lt;/td&gt;
&lt;td&gt;最大连接时间 Maximum connect time&lt;/td&gt;
&lt;td&gt;DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;161&lt;/td&gt;
&lt;td&gt;0xA1&lt;/td&gt;
&lt;td&gt;不支持的订阅标识符 Subscription Identifiers not supported&lt;/td&gt;
&lt;td&gt;SUBACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;162&lt;/td&gt;
&lt;td&gt;0xA2&lt;/td&gt;
&lt;td&gt;不支持的通配符订阅 Wildcard Subscription not supported&lt;/td&gt;
&lt;td&gt;SUBACK, DISCONNECT&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;
&lt;h2&gt;实际应用&lt;/h2&gt;
&lt;p&gt;1.　由于&lt;span&gt;主题别名（Topic Alias）的引入，使 MQTT PUBLISH 控制报文的体积更小&lt;/span&gt;，更便于在带宽和网络受限的物联网环境下传输消息。&lt;/p&gt;
&lt;p&gt;2.　AUTH 包的引入使 MQTT 协议扩展了认证方式，增加了询问/响应式的认证方式，&lt;span&gt;服务器或客户端在发送 CONNECT 与接收 CONNACK 包之间交换 AUTH 报文来完成身份验证的流程&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;3.　由于很多嵌入式设备的 CPU 并没有对 AES 加密标准下的加密算法提供硬件级的支持，因此，使用 AES 加密对嵌入式设备的硬件开销是非常大的，所以 MQTT 5.0 协议提供了新的加密算法 ChaCha20 ，&lt;span&gt;ChaCha20 在软件层面做加密和解密处理要比 AES 快得多&lt;/span&gt;。因此也算是一大进步，不过本人更希望 MQTT 下一版协议能够增加对 AEAD 加密算的支持。&lt;/p&gt;
&lt;p&gt;总的来说，MQTT 5.0 协议的内容增加了很多，协议书的内容几乎是 MQTT 3.1.1 协议的两倍，除了本文上述提到的这些新的变化，还有很多非常细节的东西没有在这里做详细的介绍。基于 MQTT 5.0 协议现有的很多属性，在实现 MQTT 5.0 协议的时说不定还能挖掘出更多的有意思的新用法，不过这需要开发人员去多读协议的具体细节，去更深入地理解 MQTT 5.0 协议。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;参考信息&lt;/h2&gt;

&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f7b7d7a566d17d0543f910997cbcc708</guid>
<title>腾讯云实时数仓建设实践（PPT附下载）</title>
<link>https://toutiao.io/k/wkiyw89</link>
<content:encoded>&lt;div&gt;&lt;div&gt;

          

          
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3276825a11756fbf0ed5cb9ecfe5804d</guid>
<title>你凭什么如此成功，自律？时间管理？</title>
<link>https://toutiao.io/k/er2ql1x</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原创不易，求分享、求一键三连&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近有个粉丝问了一个很有意思的问题：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;blockquote&gt;&lt;p&gt;小钗，我设定了很多目标，但都因不太自律半途而废了，怎么破？&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设定了目标，但没有达成，很多人会将之归咎于&lt;strong&gt;时间管理有问题&lt;/strong&gt;或者&lt;strong&gt;不够自律&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但关于如何实现目标，之前&lt;strong&gt;瞬变思维框架&lt;/strong&gt;提供了很好的回答：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;所有冥顽不明，不接受改变的人，其实是因为缺乏清晰的目标，所以第一步是提供清晰的目标；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;表面上懒散的人，实际上是激情耗尽的表现，不能强迫这种人去完成清晰的目标，而是要把感性的部分引入进来，自驱前进；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;目标明确+思想深层次想改变的同时需要控制外部环境（控制路径），当路径形成后，改变会更容易产生；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子：如果目标是减肥，那么就要清晰定义减到多少；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其次要说清楚为什么要减肥，因为想要便漂亮还是什么，如果本身长得丑，那减肥自然没动力；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后是要列出减肥的具体行动计划，并且参与减肥群体互相激励，这样就会更容易达成目标。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;抛开瞬变思维框架，我们先来聊聊如何做时间管理，什么是自律。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;时间管理&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;时间管理即是体力的选择，就是你决定将时间用到什么地方，这里直接说时间管理的方法论，我这边常用的是&lt;strong&gt;重要紧急四象限&lt;/strong&gt;：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9232914923291492&quot; data-type=&quot;png&quot; data-w=&quot;717&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTBqgwduQzBswWldeczv6kSL3kGhSpYTCCk1cfNMVoUyuYzjkqGwRAE8HjIUqgm4LibjgCtY7assIxw/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;重要紧急&lt;/strong&gt;的事要保证越少越好，因为这种事情一旦出现就必须all in，他导致的后果可能是手段有限必须付出额外代价，一旦出现一定是时间管理有问题或者意想不到的情况；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;重要不紧急&lt;/strong&gt;的事要成为我们主要投资的部分，要有计划的做，持续的做，如果长时间不处理他们会变成重要紧急的事，但如果重要不紧急的事过多，需要整理事件分类排序；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;紧急不重要&lt;/strong&gt;给其他人提要求，分出去，查看结果就行，因为不重要偶尔失败也无妨，但一定要管理为什么失败，否则他也可能变成重要紧急；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;不紧急不重要&lt;/strong&gt;当没有这件事；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;时间管理事实上只是帮你整理出来&lt;strong&gt;应该做的事&lt;/strong&gt;是什么，但我们多数时候未必会去做，这就涉及到第二个话题：如何保证投入时间去做真正重要的事，这就涉及到自律了。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;自律&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6642424242424242&quot; data-type=&quot;png&quot; data-w=&quot;3300&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTBqgwduQzBswWldeczv6kSL46eLibeKwyZXNWQbBicVGcs41ic428PNXXzT1Vc1YdTusbsHnvZO423Gg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的上进心等同于自律，在理想的场景是我有一个目标，并且我为这个目标付诸了行动，最后目标达成了；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但事实上情况下，那个行动需要不断的重复，并且执行那个行动是要消耗意志力的，最后因为这样那样的借口，我们停止了那个行动，并且最后放弃了目标。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这很正常，多数时候目标都不能达成，所以怎么办呢，有两个办法：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;第一是对目标本身&lt;strong&gt;极度渴望&lt;/strong&gt;，愿意放弃所有；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其次是在具体行动上下功夫，给他&lt;strong&gt;加杠杆&lt;/strong&gt;；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5351787773933102&quot; data-type=&quot;png&quot; data-w=&quot;3468&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTBqgwduQzBswWldeczv6kSLl03hz6UZmHfgw81KBwe8XY0hibuTnMsjRWICnAxZNoIia6ryNsdVVY6g/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举个例子，我的公众号基本做到了日更，很多同学觉得不可思议，觉得我好自律，其实我王者荣耀都45星了，对于打王者荣耀我更自律......&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那么为什么公众号可以不断更呢？因为我给内容输出这个事情加了杠杆！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先我本身是部门负责人，需要大量的思考，如果我一周没有两个思考结果，那说明一周都在摸鱼，所以必须有思考输出物；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其次我是公司文化建设负责人，文化建设本来就需要大量的内容输出，那是本质工作；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后到了公众号，只需要将工作中的内容脱敏一下，自然而然就产出了；&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;一鱼多吃，&lt;strong&gt;找到一件事更多的价值&lt;/strong&gt;，赋予一件事更多的意义，这件事自然就容易坚持了&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你跑步不只能拥有好身材，还能结识新朋友，甚至还能赚钱，那跑步这件事就很难中断了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为我们的核心动作加杠杆，&lt;strong&gt;拿到更多的正反馈&lt;/strong&gt;，能让自律这个事情更容易发生，不要跟人性做斗争嘛。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;知识地图&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事实上，重要紧急就是一个工具，他让“为事件分类排序这件事”变得更简单了，而这节约了很多的时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们首先得确定目标，其次要让多数的时间为目标而服务，最后要让单位时间的ROI更高，这时就需要切入方法论了，而这个提升ROI的方法就是：&lt;strong&gt;复盘，形成你的知识地图&lt;/strong&gt;，如图所示：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4537037037037037&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTBqgwduQzBswWldeczv6kSLds9xx5qZicY7Ksq5pLuhBIABGr01IycibgoZicoqtXtBRA64XngJ2vE8Q/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知识地图是认知体系的重要组成部分，他是结构化运作的，比如一提到管理我们马上就会想到能力五维模型和Leader的五件事：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9297052154195011&quot; data-type=&quot;png&quot; data-w=&quot;1764&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTBqgwduQzBswWldeczv6kSLY2o2U5Y7QmAvnzQiawMIBnLYSqFZLb7NpibPqULvibBtWiavqmJX3hfHHg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而且，知识地图并不是一层不变的，比如开始只有能力五维模型，Leader的五件事是随后摸索出来的，在实际使用过程中又发现，貌似辅导可以合并至人才（梯队建设）中，所以他还会持续变化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但无论怎么变化都已经形成知识地图深入体系了，这会对我们做一件事有极大的帮助。举个简单例子：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;我人在远洋光华国际上班；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;再上是朝阳区；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;再上是北京；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;周围是一些标志性建筑；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以，一旦有人提到北京，我就可以跟他细说朝阳区某个办公区是什么样的，很细节也很形象；再比如说我们提到的自律：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6263157894736842&quot; data-type=&quot;png&quot; data-w=&quot;2660&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTBqgwduQzBswWldeczv6kSLeNNOtFEP6OOaMIaU8BicXbgoXUEibJm3BbOF9QqO1Q9dcwj4AQL4RFOg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;自律跟目标有关系；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;目标可以与成长相关；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;成长的底层是心力的理想模型；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;成长增速逻辑是上进和热爱以及三种认知提升；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;但目标也可以与欲望相关；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;所以也可以衍生很多欲望相关的话题；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;知识就像串糖葫芦一样，一点一点的就被连起来了，如果没有形成知识地图，很容易形成盲点。比如一提到目标实现失败，很多人第一反应就是不够自律；看到某个人特别优秀，第一反应就是他的时间管理做得真好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但自律与时间管理只是其中一个解释，某个目标失败的原因可能是目标不清晰，可能是路径难以实现，这不能完全说他不自律；某个人优秀可能是他心中的理想十分宏伟，可能是他的单位效率特别高，甚至他时间管理做得并不好。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;结语&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;至此，我相信大家不会认为一些优点会独立存在了，比如有人问：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;你是如何做到如此自律的；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你是如何做时间管理的；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;你为何会如此优秀；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果用之前的&lt;strong&gt;心脑体框架&lt;/strong&gt;解释一次：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;心力即是目标，目标越清晰心力越强；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;体力即是时间的选择，日程安排的越合理体力越充沛；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;脑力即是利用时间的工具，方法论得宜必定事半功倍；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9858490566037735&quot; data-type=&quot;png&quot; data-w=&quot;2120&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTBqgwduQzBswWldeczv6kSLbiahdykdhTa4IzYnBOVTtmZpEFyicu3faur7CUsiaqp4d3oVqtibcfOzBg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;心力、体力、脑力是一个正循环，一个拉胯，两个受损，一荣俱荣，一损俱损，但可以清晰的看到，体力是其中最重要的存在，体力只要出问题，那么心力、体力都没得玩。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而体力是什么呢，体力对应着我们常说的&lt;strong&gt;时间管理&lt;/strong&gt;和&lt;strong&gt;自律&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这不，&lt;strong&gt;自律&lt;/strong&gt;居然又跟心脑体联系起来了：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;体力是一个时间选择的问题，是你要把时间要用到什么地方；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;脑力是认知和思维框架，是时间的乘法，他能带来体力的价值最大化；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;心力是告诉你所有的时间和技巧要服务于什么目标。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个世界真是循环往复，说不清道不明啊！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好了，今天的分享就到这。如果本文对你有帮助的话，欢迎&lt;strong&gt;点赞&amp;amp;评论&amp;amp;在看&amp;amp;分享&lt;/strong&gt;，这对我非常重要，感谢🙏🏻。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想要更多交流可以加我微信：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5549076773566569&quot; data-type=&quot;png&quot; data-w=&quot;2058&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JdfjlwvwuTBqgwduQzBswWldeczv6kSLHCiap9GRSLMSqSBDyLGzlxVuUcWwRUAOj63N8O3TibATO08LzdatrmwQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>b42bc2fdfe045ceac7c3376362cf1d04</guid>
<title>搭建可维护的 Golang 开发环境</title>
<link>https://toutiao.io/k/mj29vex</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content&quot;&gt;
  
  
  
&lt;p&gt;本篇文章将聊聊如何快速搭建 Linux 环境中的 Golang 开发环境。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&quot;https://soulteary.com/2022/06/21/building-a-cost-effective-linux-learning-environment-on-a-laptop-the-basics.html&quot;&gt;《基础篇》&lt;/a&gt;的内容中，我们聊过了如何基于 Ubuntu 22.04 搭建基础的 Linux 学习环境。接下来的文章里，我们先来聊聊如何在 Linux 环境中，快速安装配置各种可维护的语言环境。&lt;/p&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;写在前面&lt;/h2&gt;
&lt;p&gt;在开始聊如何做之前，我们首先要了解为什么要这么做。&lt;/p&gt;
&lt;p&gt;我知道有不少同学有安装好环境之后，然后持续使用一个环境，并“天长地久”的用下去的习惯。这样做的好处是“看起来简单省心”，但实际上却埋藏了许多隐患，举几个常见的例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同事说代码、程序有问题，跑不起来，你说程序在你这边是正常的，你觉得他的使用方式不对，他觉得你的程序“兼容性”/“健壮性”有问题。&lt;/li&gt;
&lt;li&gt;当你想把半年、一年前的项目跑起来，发现运行的时候多了非常多的“警告”，甚至是“报错”，尤其是当你换了一台电脑的时候。&lt;/li&gt;
&lt;li&gt;项目扩充人手，你的同事也需要配置一套环境，你和他折腾的半天，虽然有着重重困难，什么版本不对，配置散落在系统的各个“犄角旮旯”等等，但是你们最终克服了困难，并加深了革命友情。&lt;/li&gt;
&lt;li&gt;项目遇到大版本升级，因为一些历史原因，你需要同时使用两个不同的语言版本来做调试，不同版本存在兼容性问题（包括依赖兼容性问题），你的本地环境是升级还是不升呢。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决这个问题的最佳方案有两个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽可能简化你的环境，简化环境依赖（因为项目的多样性和复杂性，这有一些难）。&lt;/li&gt;
&lt;li&gt;尽可能参考“基础架构即代码（IaC）”的思想去维护我们自己的开发环境，让我们所使用的内容，尽可能&lt;strong&gt;配置化，透明化，可复现&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它除了能够完成 golang 开发环境的快速安装之外，还能够保障多个版本的 golang 共存，不同版本的软件依赖包都保持正常工作。并且，它的实现和社区大名鼎鼎的 nvm-sh/nvm 、shyiko/jabba 是一致的，都是由 BASH 编写，和所需要管理的 Runtime 语言无关，能够更稳定的完成“管理工作”。&lt;/p&gt;
&lt;h2 id=&quot;golang-环境安装和配置使用&quot;&gt;Golang 环境安装和配置使用&lt;/h2&gt;
&lt;p&gt;关于 Golang 的多版本管理和安装，我曾经写过两篇相关的内容，一篇是半年前的内容，分享如何对 “&lt;a href=&quot;https://soulteary.com/2021/12/15/golang-multi-version-management.html&quot;&gt;Golang 进行多版本管理&lt;/a&gt;”，另外一篇则是这篇的补充内容，分享如何针对 Mac M1 这类 ARM 设备使用 Golang 版本管理工具：&lt;a href=&quot;https://soulteary.com/2022/05/12/better-golang-usage-on-m1-mac.html&quot;&gt;《M1 芯片 Mac 上更好的 Golang 使用方案》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果你希望了解本章节之外的实践内容，或者过程中的思考，可以翻阅上面两篇内容。本篇文章的重点在于如何快速安装和配置，所以就不再展开相关“折腾安装工具”的细节啦。&lt;/p&gt;
&lt;h3 id=&quot;安装-golang-版本管理工具soultearygvm&quot;&gt;安装 Golang 版本管理工具：soulteary/gvm&lt;/h3&gt;
&lt;p&gt;关于 Golang 的安装和版本升降级，因为老牌开源软件 GVM （Go Version Manager）“年久失修”，所以我做了一个修正版：&lt;a href=&quot;https://github.com/soulteary/gvm&quot;&gt;https://github.com/soulteary/gvm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;想要正常使用这个工具，我们需要先完成工具的基础依赖的安装：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;sudo apt install -y binutils bison gcc make
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着，执行下面的命令，通过网络获取安装脚本，然后在本地执行脚本完成安装。（如果你因为网络或其他原因，无法执行这条命令，可以使用下文中的替代方案）：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;curl -sSL https://github.com/soulteary/gvm/raw/master/binscripts/gvm-installer | bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不出意外的话，你将会看到类似下面的日志输出，意味着工具就此刻已经安装好啦。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;Cloning from https://github.com/soulteary/gvm.git to /home/soulteary/.gvm
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;No existing Go versions detected
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Installed GVM v1.0.24
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Please restart your terminal session or to get started right away run
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;span&gt;`&lt;/span&gt;source /home/soulteary/.gvm/scripts/gvm&lt;span&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里选择执行或者不执行 &lt;code&gt;source /home/soulteary/.gvm/scripts/gvm&lt;/code&gt;  这条命令都可以（注意调整路径中的用户名），因为在接下来的文章中，我们将使用更靠谱的方式来将命令注册到我们所使用的 SHELL 环境中。&lt;/p&gt;
&lt;h2 id=&quot;使用国内镜像来安装soultearygvm&quot;&gt;使用国内镜像来安装：soulteary/gvm&lt;/h2&gt;
&lt;p&gt;为了让安装过程更加顺利，我们可以使用从国内镜像下载包含安装脚本的仓库代码，然后直接执行安装脚本，来完成 &lt;code&gt;gvm&lt;/code&gt; 这个开源软件的安装。&lt;/p&gt;
&lt;p&gt;先使用 &lt;code&gt;git clone&lt;/code&gt; 下载完整的软件仓库：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;git clone https://gitcode.net/soulteary/gvm.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;指定 &lt;code&gt;SRC_REPO&lt;/code&gt; 参数为国内镜像地址，然后运行安装脚本：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;SRC_REPO&lt;span&gt;=&lt;/span&gt;https://gitcode.net/soulteary/gvm.git bash gvm/binscripts/gvm-installer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当脚本运行完毕，我们将会看到上文中提到过的日志输出，此刻 &lt;code&gt;gvm&lt;/code&gt; 就安装完毕啦。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;Cloning from https://gitcode.net/soulteary/gvm.git to /home/soulteary/.gvm
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;No existing Go versions detected
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Installed GVM v1.0.24
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Please restart your terminal session or to get started right away run
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;span&gt;`&lt;/span&gt;source /home/soulteary/.gvm/scripts/gvm&lt;span&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了更方便的使用 &lt;code&gt;gvm&lt;/code&gt;，我们还需要进行一些配置。&lt;/p&gt;
&lt;h3 id=&quot;配置-gvm-加速-golang-下载切换&quot;&gt;配置 gvm 加速 Golang 下载/切换&lt;/h3&gt;
&lt;p&gt;gvm 支持使用两种方式来下载 “Golang”，然而不论是“下载源码编译安装”，还是下载适合当前操作系统的“预编译好的二进制文件”，我们都需要访问官方地址。&lt;/p&gt;
&lt;p&gt;为了避免下载过程中因为网络问题，出现下载慢，或者无法下载的情况，节约我们的时间，我们需要对 &lt;code&gt;gvm&lt;/code&gt; 进行一些简单的配置。&lt;/p&gt;
&lt;p&gt;我们可以在当前使用的 “&lt;code&gt;SHELL&lt;/code&gt;”  的 “&lt;code&gt;rc&lt;/code&gt;” 文件中（比如&lt;code&gt;.bashrc&lt;/code&gt; 或者 &lt;code&gt;.zshrc&lt;/code&gt;），添加下面的内容，来在当前的环境中让 &lt;code&gt;gvm&lt;/code&gt; 命令生效，同时，让我们能够使用更快的下载源来下载我们所需要的 “Golang”：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;export GO_BINARY_BASE_URL&lt;span&gt;=&lt;/span&gt;https://golang.google.cn/dl/
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;[[&lt;/span&gt; -s &lt;span&gt;&quot;&lt;/span&gt;$HOME&lt;span&gt;/.gvm/scripts/gvm&quot;&lt;/span&gt; &lt;span&gt;]]&lt;/span&gt; &lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt; source &lt;span&gt;&quot;&lt;/span&gt;$HOME&lt;span&gt;/.gvm/scripts/gvm&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;export GOROOT_BOOTSTRAP&lt;span&gt;=&lt;/span&gt;$GOROOT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在“&lt;code&gt;rc&lt;/code&gt;” 文件中添加了上述内容后，需要重启终端会话，才能够让会话生效。你可以使用 &lt;code&gt;CTRL+D&lt;/code&gt; 退出登录，然后再重新使用 &lt;code&gt;SSH&lt;/code&gt; 进行终端连接或者直接在本地创建一个新的会话（具体怎么做，取决于你是如何开启的会话）。&lt;/p&gt;
&lt;p&gt;为了让配置过程清晰透明，上面的三条命令，我们来依次看看上面的命令都“做了什么事情”。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;export GO_BINARY_BASE_URL&lt;span&gt;=&lt;/span&gt;https://golang.google.cn/dl/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;命令中的 &lt;code&gt;GO_BINARY_BASE_URL&lt;/code&gt; 变量，定义了我们将从何处下载 Golang 的二进制文件或源码压缩包进行安装。当然，你也可以将其替换为下面的任意一个。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;# 官方地址&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;https://go.dev/dl/
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;# 官方国内镜像地址&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;https://golang.google.cn/dl/
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;# 阿里云镜像&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;https://mirrors.aliyun.com/golang/
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;# 中科大镜像&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;http://mirrors.ustc.edu.cn/golang/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，我们来看看三条命令中看似最复杂的命令：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;[[&lt;/span&gt; -s &lt;span&gt;&quot;&lt;/span&gt;$HOME&lt;span&gt;/.gvm/scripts/gvm&quot;&lt;/span&gt; &lt;span&gt;]]&lt;/span&gt; &lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt; source &lt;span&gt;&quot;&lt;/span&gt;$HOME&lt;span&gt;/.gvm/scripts/gvm&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这条命令，是根据软件的实际安装情况来选择性加载 &lt;code&gt;gvm&lt;/code&gt;。相比较前文中安装完毕 &lt;code&gt;gvm&lt;/code&gt; 日志输出内容推荐我们直接使用 &lt;code&gt;source&lt;/code&gt; 命令加载 &lt;code&gt;gvm&lt;/code&gt;，这样可以更安全的执行命令，当且仅当 &lt;code&gt;~/.gvm&lt;/code&gt; 存在的时候才会加载程序，将 &lt;code&gt;gvm&lt;/code&gt; 注册到你当前的 &lt;code&gt;SHELL&lt;/code&gt; 环境中。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;export GOROOT_BOOTSTRAP&lt;span&gt;=&lt;/span&gt;$GOROOT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后一条命令，则是为了确保 Golang 使用源码编译安装时，不会出错（golang 1.14后需要 ），感兴趣可以围观官方开源项目中的&lt;a href=&quot;https://github.com/golang/go/issues/12214&quot;&gt;这个 issue&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;gvm-简明实用教程&quot;&gt;gvm 简明实用教程&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;gvm&lt;/code&gt; 是一个特别简单的命令，我们日常使用中其实只需要记得&lt;strong&gt;两个命令&lt;/strong&gt;就好，第一个是 &lt;code&gt;gvm install&lt;/code&gt;，第二个是 &lt;code&gt;gvm use&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;假设我们想安装 Golang 最新版本 1.18.3，那么只需要执行下面的命令：&lt;/p&gt;
&lt;p&gt;在执行完毕命令之后，稍等片刻，当我们看到 &lt;code&gt;Installing go1.18.3 from binary source&lt;/code&gt; 这条日志输出结果后，就意味着 Golang 已经被下载完毕了。如果你希望使用编译源码的方式安装 Golang 的话，可以去掉上面命令中的&lt;code&gt;-B&lt;/code&gt; 参数：&lt;/p&gt;
&lt;p&gt;虽然我们已经完成了 Golang 1.18.3 的安装，但是目前我们还不能直接使用它，需要再执行一条命令，将这个版本的 Golang “激活”：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;gvm use go1.18.3 --default
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在执行完命令之后，我们能够立刻看到类似 &lt;code&gt;Now using version go1.18.3&lt;/code&gt; 的日志输出结果，接下来我们就可以随意的使用 &lt;code&gt;go&lt;/code&gt; 这个命令了。&lt;/p&gt;
&lt;p&gt;我们可以使用 &lt;code&gt;go version&lt;/code&gt; 来验证刚刚下载的程序是否符合我们的诉求：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;go version
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;go version go1.18.3 linux/amd64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;未来如果 Golang 推出了新版本，我们想升级只需要按照上面的玩法，调整版本号，然后再执行一遍 &lt;code&gt;install&lt;/code&gt; 和 &lt;code&gt;use&lt;/code&gt; 命令就好了，&lt;strong&gt;是不是很简单！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当然，如果你只是想临时性的使用某个版本，比如 Golang 1.17 这个旧版本，可以稍微调整一下上面的命令，去掉 &lt;code&gt;use&lt;/code&gt; 命令中的 &lt;code&gt;--default&lt;/code&gt; 参数，只在当前 &lt;code&gt;SHELL&lt;/code&gt; 会话中，让这个版本的 Golang 生效，随着我们关闭终端会话，Golang 的版本也会恢复到我们指定的默认版本，&lt;strong&gt;再也不需要担心系统环境混乱的问题啦。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;gvm install go1.17 -B
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;gvm use go1.17
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;# 再次执行查看版本，可以看到版本号已经变化了&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;go version
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;go version go1.17 linux/amd64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&quot;配置-golang-软件包镜像&quot;&gt;配置 Golang 软件包镜像&lt;/h2&gt;
&lt;p&gt;在日常开发和学习过程中，我们更多的是使用 Golang 来初始化项目和下载必要的软件包依赖。所以如何快速的下载到各种软件包也很重要，好在 Golang 提供了软件包代理配置选项 &lt;code&gt;GOPROXY&lt;/code&gt;，我们可以通过在 “&lt;code&gt;SHELL&lt;/code&gt;” 的 “&lt;code&gt;rc&lt;/code&gt;” 文件中配置这个参数来完成下载提速：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;export GO111MODULE&lt;span&gt;=&lt;/span&gt;on
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;export GOPROXY&lt;span&gt;=&lt;/span&gt;&lt;span&gt;&quot;https://goproxy.cn&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;和上文中配置 &lt;code&gt;gvm&lt;/code&gt; 一样，我们将上面的内容添加到所使用的 SHELL 的 “&lt;code&gt;rc&lt;/code&gt;” 配置后，需要重新创建一个终端会话，让配置生效。&lt;/p&gt;
&lt;p&gt;当然，你也可以将上面命令中使用的“镜像源”替换为下面任意一个：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;# 由七牛云赞助的项目&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;goproxy.cn
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;# 阿里云&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;https://mirrors.aliyun.com/goproxy/
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;# 华为云&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;https://repo.huaweicloud.com/repository/goproxy/
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;# “一家的”&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;goproxy.io
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;proxy.golang.com.cn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里有一个题外话，初见“goproxy”的两个域名的时候，觉得域名十分相似，一番搜索，发现这两个域名虽然归属不同的开发者在维护，但是它们之间确实有一段缘分：&lt;a href=&quot;https://github.com/goproxy/goproxy.cn/issues/61&quot;&gt;“goproxy.io 和 goproxy.cn 的关系”&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;golang-环境验证gojieba&quot;&gt;Golang 环境验证：GoJieba&lt;/h2&gt;
&lt;p&gt;在完成环境配置之后，我们使用一个比较实用的 Golang 项目（&lt;a href=&quot;https://github.com/yanyiwu/gojieba&quot;&gt;https://github.com/yanyiwu/gojieba&lt;/a&gt;），来验证环境是否“好用”。&lt;/p&gt;
&lt;p&gt;随便创建一个程序目录，然后在其中创建一个名为 &lt;code&gt;main.go&lt;/code&gt; 的文件，引用 “gojieba”，并对一些句子和词汇进行处理：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;package&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&quot;fmt&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&quot;strings&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&quot;github.com/yanyiwu/gojieba&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;var&lt;/span&gt; &lt;span&gt;s&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;var&lt;/span&gt; &lt;span&gt;words&lt;/span&gt; []&lt;span&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;use_hmm&lt;/span&gt; &lt;span&gt;:=&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;x&lt;/span&gt; &lt;span&gt;:=&lt;/span&gt; &lt;span&gt;gojieba&lt;/span&gt;.&lt;span&gt;NewJieba&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;defer&lt;/span&gt; &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;Free&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;s&lt;/span&gt; = &lt;span&gt;&quot;北京西站南广场东&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;words&lt;/span&gt; = &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;CutAll&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;全模式:&quot;&lt;/span&gt;, &lt;span&gt;strings&lt;/span&gt;.&lt;span&gt;Join&lt;/span&gt;(&lt;span&gt;words&lt;/span&gt;, &lt;span&gt;&quot;/&quot;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;words&lt;/span&gt; = &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;Cut&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;, &lt;span&gt;use_hmm&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;精确模式:&quot;&lt;/span&gt;, &lt;span&gt;strings&lt;/span&gt;.&lt;span&gt;Join&lt;/span&gt;(&lt;span&gt;words&lt;/span&gt;, &lt;span&gt;&quot;/&quot;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;s&lt;/span&gt; = &lt;span&gt;&quot;向量数据库&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;words&lt;/span&gt; = &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;Cut&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;, &lt;span&gt;use_hmm&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;精确模式:&quot;&lt;/span&gt;, &lt;span&gt;strings&lt;/span&gt;.&lt;span&gt;Join&lt;/span&gt;(&lt;span&gt;words&lt;/span&gt;, &lt;span&gt;&quot;/&quot;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;x&lt;/span&gt;.&lt;span&gt;AddWord&lt;/span&gt;(&lt;span&gt;&quot;向量数据库&quot;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;s&lt;/span&gt; = &lt;span&gt;&quot;向量数据库&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;words&lt;/span&gt; = &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;Cut&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;, &lt;span&gt;use_hmm&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;添加词典后,精确模式:&quot;&lt;/span&gt;, &lt;span&gt;strings&lt;/span&gt;.&lt;span&gt;Join&lt;/span&gt;(&lt;span&gt;words&lt;/span&gt;, &lt;span&gt;&quot;/&quot;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;s&lt;/span&gt; = &lt;span&gt;&quot;前门到了，请您后门下车&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;words&lt;/span&gt; = &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;Cut&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;, &lt;span&gt;use_hmm&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;新词识别:&quot;&lt;/span&gt;, &lt;span&gt;strings&lt;/span&gt;.&lt;span&gt;Join&lt;/span&gt;(&lt;span&gt;words&lt;/span&gt;, &lt;span&gt;&quot;/&quot;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;s&lt;/span&gt; = &lt;span&gt;&quot;小明先去了北京西站南广场东，然后又去了南京东路北大街西&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;words&lt;/span&gt; = &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;CutForSearch&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;, &lt;span&gt;use_hmm&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;搜索引擎模式:&quot;&lt;/span&gt;, &lt;span&gt;strings&lt;/span&gt;.&lt;span&gt;Join&lt;/span&gt;(&lt;span&gt;words&lt;/span&gt;, &lt;span&gt;&quot;/&quot;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;s&lt;/span&gt; = &lt;span&gt;&quot;朝阳区三里屯优衣库&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;words&lt;/span&gt; = &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;Tag&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;词性标注:&quot;&lt;/span&gt;, &lt;span&gt;strings&lt;/span&gt;.&lt;span&gt;Join&lt;/span&gt;(&lt;span&gt;words&lt;/span&gt;, &lt;span&gt;&quot;,&quot;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;s&lt;/span&gt; = &lt;span&gt;&quot;元宇宙&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;words&lt;/span&gt; = &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;Tag&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;词性标注:&quot;&lt;/span&gt;, &lt;span&gt;strings&lt;/span&gt;.&lt;span&gt;Join&lt;/span&gt;(&lt;span&gt;words&lt;/span&gt;, &lt;span&gt;&quot;,&quot;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;s&lt;/span&gt; = &lt;span&gt;&quot;长江大桥&quot;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;words&lt;/span&gt; = &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;CutForSearch&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;, !&lt;span&gt;use_hmm&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;搜索引擎模式:&quot;&lt;/span&gt;, &lt;span&gt;strings&lt;/span&gt;.&lt;span&gt;Join&lt;/span&gt;(&lt;span&gt;words&lt;/span&gt;, &lt;span&gt;&quot;/&quot;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;wordinfos&lt;/span&gt; &lt;span&gt;:=&lt;/span&gt; &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;Tokenize&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;, &lt;span&gt;gojieba&lt;/span&gt;.&lt;span&gt;SearchMode&lt;/span&gt;, !&lt;span&gt;use_hmm&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;Tokenize:(搜索引擎模式)&quot;&lt;/span&gt;, &lt;span&gt;wordinfos&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;wordinfos&lt;/span&gt; = &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;Tokenize&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;, &lt;span&gt;gojieba&lt;/span&gt;.&lt;span&gt;DefaultMode&lt;/span&gt;, !&lt;span&gt;use_hmm&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;Tokenize:(默认模式)&quot;&lt;/span&gt;, &lt;span&gt;wordinfos&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;keywords&lt;/span&gt; &lt;span&gt;:=&lt;/span&gt; &lt;span&gt;x&lt;/span&gt;.&lt;span&gt;ExtractWithWeight&lt;/span&gt;(&lt;span&gt;s&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;fmt&lt;/span&gt;.&lt;span&gt;Println&lt;/span&gt;(&lt;span&gt;&quot;Extract:&quot;&lt;/span&gt;, &lt;span&gt;keywords&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在准备好程序文件之后，我们先执行 &lt;code&gt;go mod init main&lt;/code&gt;，完成 Go 项目的初始化：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;go&lt;/span&gt;: &lt;span&gt;creating&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;go&lt;/span&gt;.&lt;span&gt;mod&lt;/span&gt;: &lt;span&gt;module&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;go&lt;/span&gt;: &lt;span&gt;to&lt;/span&gt; &lt;span&gt;add&lt;/span&gt; &lt;span&gt;module&lt;/span&gt; &lt;span&gt;requirements&lt;/span&gt; &lt;span&gt;and&lt;/span&gt; &lt;span&gt;sums&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;go&lt;/span&gt; &lt;span&gt;mod&lt;/span&gt; &lt;span&gt;tidy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在执行完上面的命令后，我们的目录中将会多出来 “go.mod” 和 “go.sum” 两个文件，接着，我们来执行 &lt;code&gt;go mod tidy&lt;/code&gt; 命令，让程序完成相关依赖的下载：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;go&lt;/span&gt;: &lt;span&gt;finding&lt;/span&gt; &lt;span&gt;module&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; &lt;span&gt;package&lt;/span&gt; &lt;span&gt;github&lt;/span&gt;.&lt;span&gt;com&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;yanyiwu&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;gojieba&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;go&lt;/span&gt;: &lt;span&gt;found&lt;/span&gt; &lt;span&gt;github&lt;/span&gt;.&lt;span&gt;com&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;yanyiwu&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;gojieba&lt;/span&gt; &lt;span&gt;in&lt;/span&gt; &lt;span&gt;github&lt;/span&gt;.&lt;span&gt;com&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;yanyiwu&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;gojieba&lt;/span&gt; &lt;span&gt;v1&lt;/span&gt;&lt;span&gt;.1.2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;因为我们配置了软件包镜像，所以应该在几秒内就能够完成项目的初始化。&lt;/p&gt;
&lt;p&gt;在完成了项目初始化之后，我们执行 &lt;code&gt;go run main.go&lt;/code&gt; 来验证下程序是否能运行，不出意外，将看到类似下面的输出结果：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;&lt;span&gt;北京西站南广场东
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;全模式: 北京/北京西/北京西站/京西/西站/南/广场/东
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;北京西站南广场东
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;精确模式: 北京西站/南/广场/东
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;向量数据库
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;精确模式: 向量/数据库
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;向量数据库
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;添加词典后,精确模式: 向量数据库
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;前门到了，请您后门下车
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;新词识别: 前门/到/了/，/请/您/后门/下车
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;小明先去了北京西站南广场东，然后又去了南京东路北大街西
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;搜索引擎模式: 小明/先去/了/北京/京西/西站/北京西/北京西站/南/广场/东/，/然后/又/去/了/南京/京东/东路/南京东路/北大/大街/北大街/西
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;朝阳区三里屯优衣库
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;词性标注: 朝阳区/ns,三里屯/ns,优衣库/x
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;元宇宙
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;词性标注: 元/m,宇宙/n
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;长江大桥
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;搜索引擎模式: 长江/大桥/长江大桥
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;长江大桥
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Tokenize:&lt;span&gt;(&lt;/span&gt;搜索引擎模式&lt;span&gt;)&lt;/span&gt; &lt;span&gt;[{&lt;/span&gt;长江 &lt;span&gt;0&lt;/span&gt; 6&lt;span&gt;}&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;大桥 &lt;span&gt;6&lt;/span&gt; 12&lt;span&gt;}&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;长江大桥 &lt;span&gt;0&lt;/span&gt; 12&lt;span&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;长江大桥
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Tokenize:&lt;span&gt;(&lt;/span&gt;默认模式&lt;span&gt;)&lt;/span&gt; &lt;span&gt;[{&lt;/span&gt;长江大桥 &lt;span&gt;0&lt;/span&gt; 12&lt;span&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Extract: &lt;span&gt;[{&lt;/span&gt;长江大桥 11.1926274509&lt;span&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，除了 &lt;code&gt;run&lt;/code&gt; 之外，我们最常用的命令还有 &lt;code&gt;test&lt;/code&gt; 和 &lt;code&gt;build&lt;/code&gt;，本篇文章暂时不聊如何写单元测试，所以我们就先只验证 &lt;code&gt;build&lt;/code&gt; 命令，执行 &lt;code&gt;go build .&lt;/code&gt;，我们将在程序目录得到一个名为 &lt;code&gt;main&lt;/code&gt; 的可执行文件。&lt;/p&gt;
&lt;p&gt;手动执行命令 &lt;code&gt;./main&lt;/code&gt;，不出意外，将得到和上面 &lt;code&gt;run&lt;/code&gt; 一样的输出结果。至此，Golang 环境验证也就结束啦。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;最后&lt;/h2&gt;
&lt;p&gt;目前为止，我们已经聊完了“基础 Linux 环境搭建”、“Docker 环境安装和配置”、“Golang 的开发环境搭建”。&lt;/p&gt;
&lt;p&gt;接下来的文章中，我会继续完成上篇文章中提到的几种不同的 K8S “发行版”的安装和配置，以及当今世界上流行的编程语言的环境配置。&lt;/p&gt;
&lt;p&gt;希望对你有帮助。&lt;/p&gt;
&lt;p&gt;–EOF&lt;/p&gt;

&lt;/div&gt;

                    &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>