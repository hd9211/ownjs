<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>d3636029dcc3829ca71005bc7999a82e</guid>
<title>分布式一致性协议 Raft</title>
<link>https://toutiao.io/k/xydtpak</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;post-content&quot;&gt;&lt;p&gt;学习raft之前，给大家推荐一个网站，这个网站动画描述raft运行过程。在看文章时对照该网站，可以帮助更好的理解raft。&lt;br/&gt;&lt;a href=&quot;http://thesecretlivesofdata.com/raft/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://thesecretlivesofdata.com/raft/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;相比于paxos，我们更应掌握raft。raft作为现在分布式系统首选的共识算法。zookeeper、cubby、oceanbase等系统都是在raft诞生之前开发的，所以都是使用了paxos或者对其进行改进。而后来的大多系统都选择了raft，比如consul、etcd等。&lt;/p&gt;
&lt;p&gt;raft相比paxos的优点是:容易理解，容易实现。之所以说容易，是因为raft流程清晰、关键处给出了伪代码描述。相反，可真正用于工程实现的multi-paxos，lamport宗师只提出了个大概。&lt;/p&gt;
&lt;h3 id=&quot;Raft术语科普以及总结&quot;&gt;&lt;a href=&quot;#Raft术语科普以及总结&quot; class=&quot;headerlink&quot; title=&quot;Raft术语科普以及总结&quot;/&gt;Raft术语科普以及总结&lt;/h3&gt;&lt;p&gt;基于前两个篇对paxos和zab的介绍，我们对分布式协议有一定的基础，所以本文先给出总结。&lt;/p&gt;
&lt;h4 id=&quot;三种成员身份&quot;&gt;&lt;a href=&quot;#三种成员身份&quot; class=&quot;headerlink&quot; title=&quot;三种成员身份&quot;/&gt;三种成员身份&lt;/h4&gt;&lt;p&gt;raft提供三种成员身份，&lt;strong&gt;领导者（leader）、跟随者（follower）、候选人（candidate）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跟随者：相当于paxos中的acceptor，接收和处理leader的消息，当leader故障时，主动推荐自己为候选人&lt;/li&gt;
&lt;li&gt;候选人：向其他节点发送请求投票消息（Request Vote），如果获得大多数选票，则晋升为leader&lt;/li&gt;
&lt;li&gt;领导者：处理写请求，管理日志复制、发送心跳消息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;两种运行阶段&quot;&gt;&lt;a href=&quot;#两种运行阶段&quot; class=&quot;headerlink&quot; title=&quot;两种运行阶段&quot;/&gt;两种运行阶段&lt;/h4&gt;&lt;p&gt;raft强化了leader的地位，把整个协议可以清楚的分割成两个部分，并利用日志的连续性做了一些简化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;leader在时，由leader向follower同步日志。&lt;/li&gt;
&lt;li&gt;leader挂掉了，选一个新leader，leader选举算法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;两类rpc消息&quot;&gt;&lt;a href=&quot;#两类rpc消息&quot; class=&quot;headerlink&quot; title=&quot;两类rpc消息&quot;/&gt;两类rpc消息&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;请求投票消息（request vote），用于选举leader。&lt;/li&gt;
&lt;li&gt;追加条目消息（append entry），用于心跳消息或日志复制消息。该包含当前最大的日志项。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;raft与multi-paxos的区别&quot;&gt;&lt;a href=&quot;#raft与multi-paxos的区别&quot; class=&quot;headerlink&quot; title=&quot;raft与multi-paxos的区别&quot;/&gt;raft与multi-paxos的区别&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;不是所有节点都能当选leader&lt;br/&gt;只有日志最完整的才能当选leader，而multi-paxos则不需要保证这一点，也意味multi-paxos需要额外的流程从其它节点获取已经被提交的日志。&lt;/li&gt;
&lt;li&gt;日志是连续的&lt;br/&gt;日志的连续性蕴含了这样一条性质：如果两个不同节点上相同序号的日志，那么这和这之前的日志必然也相同的&lt;/li&gt;
&lt;li&gt;简化的二阶段&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Leader选举&quot;&gt;&lt;a href=&quot;#Leader选举&quot; class=&quot;headerlink&quot; title=&quot;Leader选举&quot;/&gt;Leader选举&lt;/h3&gt;&lt;p&gt;在节点刚启动状态下，都处于follower状态。同时每个节点会为自己设置一个等待leader心跳消息的随机超时时间。当在超时时间之内没有收到来自leader的心跳信息时，则会推荐自己为candidate。随后增加自己的任期编号，并以candidate的身份发起请求投票消息，推荐自己为leader，当获得大多数选票后，晋升leader，发送心跳消息。&lt;/p&gt;
&lt;h4 id=&quot;选举过程&quot;&gt;&lt;a href=&quot;#选举过程&quot; class=&quot;headerlink&quot; title=&quot;选举过程&quot;/&gt;选举过程&lt;/h4&gt;&lt;p&gt;例如，存在A、B、C三个节点的raft集群刚启动时，都处于follower状态，其中A超时时间为100ms，B超时时间为200ms，C超时时间为300ms。&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_1.png&quot; alt=&quot;节点信息&quot;/&gt;&lt;/p&gt;
&lt;p&gt;由于集群中不存在leader，A、B、C三个节点都不会收到来自leader心跳信息。其中，A节点的超时时间最小，则最先修改自己状态为candidate，并增加自己的任期编号为1，发起请求投票消息。&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_2.png&quot; alt=&quot;节点信息&quot;/&gt;&lt;/p&gt;
&lt;p&gt;节点A的选票会投给自己，而节点B、C收到candidate的请求投票消息。根据投票规则：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;任期编号大的节点拒绝投票给任期编号的小的请求投票消息&lt;/li&gt;
&lt;li&gt;最后一条日志编号大的拒绝投票给最后一条日志编号小的节点&lt;/li&gt;
&lt;li&gt;一个任期编号只投出一张选票&lt;/li&gt;
&lt;li&gt;先来先获得投票&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;明显，B、C的任期编号小于A的任期，也不存在最大的日志编号，并且任期编号为1的选票还没有投给任何人，则将任期为1的选票投给节点A，并更新自己的任期编号。&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_3.png&quot; alt=&quot;节点信息&quot;/&gt;&lt;br/&gt;节点A获得包括自己在内的3个选票，赢得大多数选票。其中赢得过半选票也是存在随机超时时间的。如果在超时时间内，则晋升为leader，否则发起新的一轮选举。晋升leader后，则向其他节点发送心跳信息，维护自己的leader角色。&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_4.png&quot; alt=&quot;节点信息&quot;/&gt;&lt;/p&gt;
&lt;h4 id=&quot;选举规则&quot;&gt;&lt;a href=&quot;#选举规则&quot; class=&quot;headerlink&quot; title=&quot;选举规则&quot;/&gt;选举规则&lt;/h4&gt;&lt;p&gt;整个选举过程相对来说，比较简单。具体细节还得挑几个点，单独来说：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;随机超时时间&lt;br/&gt;在basic-paxos中，通常会描述“活性”一词，是指两个提案同时提出，互相争取选票，导致另一个提案在第二阶段获取不到大多数选票。在muilt-paxos中，leader的选举，而会存在瓜分选票的情况。而raft巧妙的通过随机超时时间，避免了两个candidate同时竞选leader。需要注意，随机超时时间包含两个方面：&lt;ul&gt;
&lt;li&gt;follower等待leader心跳信息超时的时间间隔。&lt;/li&gt;
&lt;li&gt;candidate在一个随机时间间隔内，没有赢得过半票数，那么选举无效了，需要发起新一轮的选举。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一届任期只投出一张选票，先来先获得投票&lt;br/&gt;比如：B节点先后收到A、C任期编号为1的请求投票消息，B节点则将选票投给A节点。至于C节点的请求投票消息，B节点在任期编号为1的已经没有选票可投了。&lt;/li&gt;
&lt;li&gt;任期编号大的节点拒绝投票给任期编号的小的请求投票消息&lt;br/&gt;实际上，raft协议在leader选举阶段，由于老leader可能也还存活，也会存在不只一个leader的情形，只是不存在任期编号一样的两个leader。因为选举算法要求leader得到同一个任期编号的多数派的同意，同时赞同的成员会承诺不接受任期编号更小的任何消息。这样可以根据任期编号大小来区分谁是合法的leader。&lt;/li&gt;
&lt;li&gt;最后一条日志编号（uncommited）大的拒绝投票给最后一条日志编号（uncommited）小的节点&lt;br/&gt;这一条则是为了保证，只有日志完整度高的节点才能当选leader。这样则可以节省在当选leader后，与各节点比对日志的时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;日志同步&quot;&gt;&lt;a href=&quot;#日志同步&quot; class=&quot;headerlink&quot; title=&quot;日志同步&quot;/&gt;日志同步&lt;/h3&gt;&lt;p&gt;在raft中，数据都是以日志的形式存在的，客户端每一次的写请求，都会封装成一个日志项（log entry）记录在日志中。所以处理客户端的写请求，就是把日志项（log entry）同步给其他节点并应用到各自状态机的过程。日志同步则可以认为就是处理写请求。&lt;/p&gt;
&lt;p&gt;一条日志项（log entry）又包含：用户数据、索引值、任期编号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户数据，指客户端写请求中的数据，一般是对某个值的修改。&lt;/li&gt;
&lt;li&gt;索引值，日志项的id，一个连续的单调递增的数字&lt;/li&gt;
&lt;li&gt;任期编号，指创建该日志项的leader的任期编号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在上面总结中，有提到简化的二阶段协议，则是指日志同步阶段。其实在raft之前lamport宗师也有提到如何优化multi-paxos，其中就有优化为一阶段提交。而raft则在日志同步中做出了实践。&lt;/p&gt;
&lt;p&gt;具体实现，在raft中，leader接收到写请求，进入第一阶段。leader将写请求封装为log entry追加到自己的日志中，并发送日志复制消息，将需要同步的log entry复制到集群中其他节点上。如果leader收到大多数节点都成功写入该log entry。那么就将该log entry提交到自己的状态机，同时返回成功给客户端。否则返回错误给客户端。&lt;/p&gt;
&lt;p&gt;而follower则是在接收到leader的心跳信息或者新的日志复制消息后，如果follower发现leader已经提交了某条log entry，而自己还没提交，那么follower就将这条log entry提交到自己的状态机中。&lt;/p&gt;
&lt;h4 id=&quot;算法模拟&quot;&gt;&lt;a href=&quot;#算法模拟&quot; class=&quot;headerlink&quot; title=&quot;算法模拟&quot;/&gt;算法模拟&lt;/h4&gt;&lt;p&gt;存在3节点的集群，A为leader，B、C为follower。当客户端向leader发送set 5的请求，leader收到后，会将其封装成log entry追加到自己的日志中。然后通过日志复制消息时将更改发送给follower。&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_5.png&quot; alt=&quot;算法模拟&quot;/&gt;&lt;/p&gt;
&lt;p&gt;follower收到消息后，将该log entry追加到自己的日志中，并向leader返回成功响应。当leader收到大多数节点的成功响应后，则在自己的状态机中提交该log entry，并向客户端返回成功。&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_6.png&quot; alt=&quot;算法模拟&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在下一次追加条目消息（心跳消息、日志复制消息）中，会携带leader最新修改的log entry。follower收到后，则会提交之前尚未提交的log entry。&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_7.png&quot; alt=&quot;算法模拟&quot;/&gt;&lt;/p&gt;
&lt;p&gt;follower完成提交后，即达成本次共识。&lt;/p&gt;
&lt;h3 id=&quot;网络分区、宕机恢复&quot;&gt;&lt;a href=&quot;#网络分区、宕机恢复&quot; class=&quot;headerlink&quot; title=&quot;网络分区、宕机恢复&quot;/&gt;网络分区、宕机恢复&lt;/h3&gt;&lt;p&gt;当集群中出现网络分区，导致产生了两个小集群时，每个集群都存在自己的leader。或者上一任leader宕机恢复后加入集群时，存在两个leader的情况。raft为此也制定了一些特殊的规定：&lt;strong&gt;根据任期编号大小来区分谁是合法的leader&lt;/strong&gt;。例如：当一个candidate或者leader发现自己的任期编号比其他节点小，那么它会立即恢复成follower状态。&lt;/p&gt;
&lt;p&gt;存在一个5节点集群，正常运行时，B节点为leader，其余A、C、D、E为follower&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_8.png&quot; alt=&quot;网络分区&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当出现网络分区，出现两个由B, A和C, D, E组成的小集群。并且B继续保持leader状态，C为新晋升的leader。&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_9.png&quot; alt=&quot;网络分区&quot;/&gt;&lt;/p&gt;
&lt;p&gt;当此时，有写请求到B时，由于B不能获得多数票的支持，最终该写请求不会被提交，也不会返回给客户端成功的响应，将一直保持未提交的状态存在日志中。&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_10.png&quot; alt=&quot;网络分区&quot;/&gt;&lt;/p&gt;
&lt;p&gt;而当网络分区恢复后，B, A节点重新加入集群。当它们收到来自C节点的心跳消息时，发现C的任期编号比自己大，则会切换状态，抛弃掉自己有但C节点没有的log entry，并且同步C节点上的log entry。&lt;br/&gt;&lt;img src=&quot;/images/theory/distributed/raft_11.png&quot; alt=&quot;网络分区&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;思考几个题目吧&quot;&gt;&lt;a href=&quot;#思考几个题目吧&quot; class=&quot;headerlink&quot; title=&quot;思考几个题目吧&quot;/&gt;思考几个题目吧&lt;/h3&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;leader选举中，B节点的任期编号为1，日志编号为2。A节点任期编号为2，日志编号为1。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;B节点收到A节点的请求投票消息，B会投票给A节点吗？&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;不会，B节点的编号大于A节点，说明B节点的日志完整度更高，更适合当选leader。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;--------------------------------&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;当一个节点出现网络分区，它即获取不到大多数节点的选票，当不了leader，也接收不到其他leader的心跳，那么任期则会一直增加。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;那它网络恢复加入集群后，因为它存在很大编号，其他节点会不会认它为leader。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;不会，它加入集群后，会拒绝新leader的消息（因为它的任期大），则会修改状态为candidate，并发起请求投票。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;其他节点收到它的投票信息后，会将自己的任期编号改成它的，然后判断其他投票条件（最大日志编号），将会拒绝投票给它。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;它加入集群的唯一的影响就是一下子增加了任期编号的大小。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;--------------------------------&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;假如客户端发送请求set 1，当leader在第一阶段时将该日志项只复制到了一个节点，没有获得大多数选票，则返回给客户端失败。这时leader宕机。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;根据选举规则，那台复制成功的节点会当选leader，那么怎么处理set 1的日志项？&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;新当选的leader，会确认set 1这条日志项有没有被大多数节点复制成功。如果被大多数节点复制成功，则提交该日志，否则丢弃该日志。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;题中情况，会丢弃set 1的日志项。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;--------------------------------&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;假如客户端发送请求set 1，当leader在第一阶段时将该日志项只复制到了大多数节点，获得了大多数选票，则返回给客户端成功。这时leader宕机。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;新选举的leader，将会如何将set 1日志项进行提交呢？&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;新当选的leader，会确认set 1这条日志项有没有被大多数节点复制成功。如果被大多数节点复制成功，则提交该日志，否则丢弃该日志。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;--------------------------------&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;raft一切依赖leader，所以性能瓶颈集中在leader，写性能仅为单机。如何提升？&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;可以裂变分区，将原本一个raft集群裂变成多个互不影响的raft集群。&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;例如：设计一个数据库，可以将元数据同步和用户数据同步使用两个raft集群。&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>39fbbde165b65a1ed2980740cfc62bfd</guid>
<title>毕业两年，如何在帝都购房上车：石头买房经验谈（上）</title>
<link>https://toutiao.io/k/dfei7ms</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-role=&quot;paragraph&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;0.8767123287671232&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/EeJSurrFuXN8k74xtBpeicuXWMy9AjmTs6CzLGRfp5KFzJ49EVSXDTYj2ntuToBNtenTjCEEZBueuthDIgO9yLA/640?wx_fmt=gif&quot; data-w=&quot;219&quot; data-width=&quot;100%&quot; data-type=&quot;gif&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;span&gt;点击上方&lt;/span&gt;&lt;span&gt;蓝色字体&lt;/span&gt;&lt;span&gt;，关注我 ——&lt;/span&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;一个在&lt;strong&gt;阿里云&lt;/strong&gt;打工的&lt;strong mpa-from-tpl=&quot;t&quot;&gt;清华&lt;/strong&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;学渣&lt;/strong&gt;!&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;433&quot; data-ratio=&quot;0.7515625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ZMXDhhGnYibvL222ibibOUpTibaOB9icz8A7WHV9FiaynjvwUgzHeMdD7N1OcYwsJDTasbqZX0d2ZqKdBlzibky12QaAw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 by：我是严肃的于海童@清华&lt;/span&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;65&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;&lt;span&gt;关于作者：程序猿石头(ID: tangleithu)，现任阿里巴巴技术专家，清华学渣，前大疆后端 Leader。欢迎关注，交流和指导！回复 “&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;” 送&lt;/span&gt;&lt;span&gt;阿里技术大礼包&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;之前看到大白等分享了帝都购房记录，石头哥也来跟风分享一下我是如何在帝都购房上车的。&lt;/p&gt;&lt;p&gt;当然，我也非常希望我买房的剧情如下：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;石头是个普通程序猿，大学毕业后来到帝都北京，开始北漂生活，他月薪八千，不过他用了一年的时间就在帝都买房了，看看他是怎么做到的：&lt;/p&gt;&lt;p&gt;在这一年之间，他每天早出晚归，上下班都坐地铁，因为外面吃饭贵，因此他学着自己做饭，他不泡吧也从来不去夜店，一直都省吃俭用，过着艰苦朴素的生活。&lt;/p&gt;&lt;p&gt;一年后，他用辛苦攒下来的两万块，再加上父母给的 666 万，在帝都还算不错的地段有了自己的房子……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;哈哈哈，这毕竟是段子，羡慕归羡慕，但毕竟多数人都没有这么好的运气。如果家庭有一定经济基础，再加上自己的努力，能够上车自然是好的；没有好运气，咱也不能气馁，只要自己功夫足够深，作为程序猿，在这个“高薪”行当里，还是有机会的，实在一线不行，咱们可以二线嘛。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ZMXDhhGnYibtwArG7NfRmW8o6jI2oAxRAQRKRCic4ibz1iaczChsN66WG02vXfV6cGsMQcJZcm95AK6lb0w6oibSzdA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;300&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;梦想还是要有的&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;说实话，其实，石头刚开始也都没想过自己能在帝都买房，尤其在这么短时间之类（自认为短，当然不能给有钱的大佬比），因为我深知自己家庭背景，自己和对象都是出生农村，家里也都没啥积蓄，即便掏光自己和对象父母的 4 个钱包，离在帝都购房的目标也是相差甚远的。&lt;/p&gt;&lt;p&gt;当然，如果家里有实力支撑，你就没必要说非得说，“恩，不行，我必须得靠自己&lt;span&gt;”&lt;/span&gt;。要知道，这个时间差就是金钱呀。举个例子，刚毕业，实验室同学双方父母家里支撑各家出 75W，一共 150W首付+150 贷款购得一套两居室；等我 2 年后准备看房时，同学房子价值已经增至近 600W 了。&lt;/p&gt;&lt;p&gt;记得还没毕业时，有一次跟一个清华的师兄讨论过此事，他谈到，“你放心，你到时候一定可以在北京买房的，时间长短的问题”，当时我心想 “我有那么牛 X 吗？”，心里确实没底儿呀！没想到毕业两年半，我还就真实现了，只能说&lt;strong&gt;当初那个师兄看得真准&lt;/strong&gt;！&lt;/p&gt;&lt;figure&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9583333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ZMXDhhGnYibtwArG7NfRmW8o6jI2oAxRATR7lcgB6huLnwRExqIiblfRRtDSlEF0ZlZfen1yiaKJUHS6icsDn20D7w/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;240&quot;/&gt;&lt;/p&gt;&lt;/figure&gt;&lt;p&gt;不过，谈起买房，石头毕业至今，有过实操 3 套购房经历，有帝都一线，也有二线城市 CQ，去年还在十八线城市老家县城有二手房交易流程，因此在购房这方面，还是稍微有点经验。这当然不能跟那些炒房、房产大 V 比。大家就随便看看得了，如果能有点儿帮助，那就最好不过了。&lt;/p&gt;&lt;p&gt;这么想来，我这一路走来，确实感觉自己“很牛逼“啊。其实，牛 X 谈不上，自我感觉良好。特别是认识和接触的人越多后，才发现真的是 “山外有山，人外有人”，不过我也常常进行自我激励：（学会知足常乐也挺好的）&lt;/p&gt;&lt;p&gt;因为来自农村，“穷人家孩纸早当家”，从高中起上学到大学，再到研究生，基本没怎么花家里的钱，并且研究生毕业时也积攒了一小笔钱（还完&lt;span&gt;生源地贷款&lt;/span&gt;后，还剩 xx 来万，在当时看来确实还是个不小的数目），再然后通过自己努力，最终能在一线城市有个小窝，解决 “住” 的问题，实属不容易了。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibtwArG7NfRmW8o6jI2oAxRAdmUMFv7heBiatu05yQEz6Sa7h7ZHiaUz6ppTfWxljdnwiagrUKC20jf6Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;255&quot;/&gt;&lt;/p&gt;&lt;p&gt;不吹牛了，聊聊正事吧，分享下购房经验。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;前期准备&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;购房前的前期准备，当然就是赚钱。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibtwArG7NfRmW8o6jI2oAxRAnIKYzd76Gdkd8oqCufncpibHqsxbmQUIdkpdSAwM71jrSImX2ROB5eQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;440&quot;/&gt;&lt;/p&gt;&lt;p&gt;在准备想购房这个话题的时候，肯定手里有一定积累，这个时候就该好好整理整理计算一下，你目前自己手里有多少现金，亲戚朋友能凑多少（当然如果父母有实力支持更好，没有的话，其他亲戚朋友这块建议不要放太大的比例），这样基本上能计算出购房的大致预算是多少了。&lt;/p&gt;&lt;p&gt;以石头为例，经过 2 年半的准备，我确实也积累了一定的积蓄，再加上我对象也有部分资金。为了方便说明问题，我就简单假设我恰好积累了 100W 现金吧。（大家不用纠结具体数字，这个 100W 我就是为了方便举例说明，实际比这个少或者比这个多，真的不重要）然后我对象手里有 60W 左右的现金，那么我们俩现金部分就有 160W；双方的公积金账户其实也有部分现金，虽然不能直接取出来当做首付&lt;strong&gt;直接使用&lt;/strong&gt;，但是这部分资金是可以通过短期周转获取的，因此也可以计算在首付资金里面。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;特此感谢我的老婆，没有她的支持，我们也没那么快，至少不会这么“简单“就在帝都上车的。要知道，当初她可是担着“风险”的，毕竟婚前购买，因为购房前未婚，且当初她名下外地有房贷（上面提到的二线城市购的房），所以不能先领证，且房产证也不能加她的名字（这都是“首套首贷”资格给逼的）。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9215686274509803&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibtwArG7NfRmW8o6jI2oAxRAmd7IcmlHLAJBNTP52LoZaPMnxriajFGCwibOJZZCtPhUZ93G9lR6s6Vg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;510&quot;/&gt;&lt;/p&gt;&lt;p&gt;再加上比如能从亲戚手里借 10~20W，玩得好的同学手里借10~20W。这部分资金可以提前调研清楚，因为首付资金的确定是前提，决定了后面你看房范围。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;说到借钱这个事情，需要谨慎，如果作为借钱方借的时候就预估好还钱时间，提前跟人家说明等等，做到守信用。作为被借的债主，一定要评估对方是否靠谱，如果有闲散的资金，信得过的朋友咱们能帮还是帮一下，前提是一定得对方人品到位，信得过。如果对对方人品没底儿，如果 “这钱借出去，可能短期要不回来” 不会影响到你，就借，否则就别借。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;另外，针对资金这块还有一个渠道，其实就是信用贷款（消费贷），当然这个就是稍微高端一点的玩家了。一般一家银行可能能申请 30-50W 的消费贷，找好时间窗口，运作一下还是能操作的；&lt;/p&gt;&lt;p&gt;有一点说明就是，申请房贷的时候，借款人名下**最好**没有贷款，所以就需要这个消费贷在别人的名义下，可以是你对象等等（这种情况下，你对象就不能作为共同借贷人）。&lt;/p&gt;&lt;p&gt;当然本文主要说的是&lt;span&gt;贷款买房&lt;/span&gt;哈，土豪全款等不在讨论范围。注意珍惜首次贷款机会（也叫处女贷），记住这句话：“处女贷可能是你这辈子最&lt;span&gt;容易&lt;/span&gt;能借到的，最&lt;span&gt;便宜&lt;/span&gt;的钱”。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;了解当地购房政策&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;首先要看看你有没有资格购买。—— 你说气人不，有钱还不一定能买，还得先有资格。不过没关系，一般而言，差的是钱，扎心了。&lt;/p&gt;&lt;p&gt;这个各地政策不一样，以北京为例：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;有北京户口&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;有《北京市工作居住证》&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在京无房且已连续五年在京缴纳社保或个税&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;满足以上条件任何一个就可以有购房资格了。再比如重庆，三无（无户籍、无企业、无工作）人员也可以购买，只不过会有额外的房产税。具体不再列举了，大家可以到当地住建委网站或者电话咨询。&lt;/p&gt;&lt;p&gt;另外，建议大家准备购房前可以先了解一下&lt;span&gt;政府政策性房产&lt;/span&gt;，看看你所在城市有没有类似的福利。&lt;/p&gt;&lt;p&gt;这种房产是政府“福利性”房产，对购买人有一定资格要求，比如所谓的经济适用房等、限价商品房、回迁房等。&lt;/p&gt;&lt;p&gt;比如刚毕业那会，石头还想着北京的“自住型商品房”，最开始的几期还真合适，低端合适且价格基本是周围的 5 折，且 100%产权属于你自己，摇号摇了几次都摇不中。就跟石头前面提到的 &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3OTUzMzcwNw==&amp;amp;mid=2247489185&amp;amp;idx=1&amp;amp;sn=4abfc07dfca59dec6680d39f395020ba&amp;amp;chksm=eb471745dc309e5392ad57d867ef687526e785a9fe5d190ebb7efe8f60ae1dd112c3366e255a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;摇车牌&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;摇车牌&lt;/a&gt; 一样，看人品的。不过后来演变成了“共有产权房”，产权可能只有一半属于你自己，且慢慢性价比也不高了。&lt;/p&gt;&lt;p&gt;这种政策性住房相对于普通商品房来说，在贷款、出售等方面有所不同，首付要求往往比较低，二次转卖（出售）可能有一定要求，比如要求必满 5 年等等。这个具体就不做讨论了。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;石头 tip：&lt;/span&gt;&lt;span&gt;首套刚需&lt;/span&gt;，大家也可以先了解下当地有没有类似的政策性房产，如果资金有限，房子合适且有资格的话，推荐购买。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;&lt;span&gt;首付的计算&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;举个🌰，上面得到首付资金 160-200 W，最高能买总价多少的房子呢？&lt;/p&gt;&lt;p&gt;按照北京&lt;span&gt;首套&lt;/span&gt;首付比例 35% 计算的话，对应范围 457(=160/0.35) ~ 571(=200/0.35) W 吗？&lt;/p&gt;&lt;p&gt;石头开始也是这样认为的，但真不是这么计算的，比这个复杂得多得多。。。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.8233333333333334&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ZMXDhhGnYibtwArG7NfRmW8o6jI2oAxRAxiaFO3s5uLyRaGH955ySWKGL4IyqrHD9icgr6BTo2mGibHInjcyp4lFSA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;300&quot;/&gt;&lt;/p&gt;&lt;p&gt;先来看看关于贷款这部分。&lt;/p&gt;&lt;p&gt;银行会通过你的工资流水来评估你的还款能力。一般而言，&lt;span&gt;贷款的月供&lt;/span&gt;不得超过你工资流水（税后）的一半，首套利率一般较低，之前是基准利率还有折扣，现在基本是 LPR 的计算方式了，关于利率计算方式，石头哥的这篇文章 —— &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3OTUzMzcwNw==&amp;amp;mid=2247486345&amp;amp;idx=1&amp;amp;sn=56373982f8e8393a5a11b0e401523937&amp;amp;chksm=eb470a6ddc30837b1cdefb2812ef8ee2b7f52f56002481480974ccc42c44a146935c1548592c&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;你有被银行套路过吗？| 一文教你计算真实的年化利率&lt;/a&gt; 可以参考。&lt;/p&gt;&lt;p&gt;举例，税后工资 2W，那么，你月供不能超过 1W，贷款周期不超过 25 年（北京最高的政策，其他可能有 30 年），这样一来，你贷款额度也能计算出来了。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;当然，贷款可以由 2 个人一起承担，不过需要注意的是要提前了解当地的购房政策，比如恰好你对象（已婚）有过房贷记录？那对不起，你还不符合首套政策，只能按照二套处理。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;关于贷款年限的规定也是需要看具体房子的房龄的，以北京为例：&lt;/p&gt;&lt;p&gt;最长贷款年限不超过 &lt;code&gt;50 - 房龄&lt;/code&gt;，假设这房子年纪比较大了（北京这种房子太多太多了），90 年代的房子，至今已经 30 年了，那么贷款最多只能贷款 20 年。这样，你月还款额度又上去了，期望你的工资不能成为瓶颈。&lt;/p&gt;&lt;p&gt;其实还跟借款人的年龄有关，贷款年限不超过 &lt;code&gt;65-年龄&lt;/code&gt;，假设你 55 岁的老爸帮你贷款买，一般最多只能贷 10 年。&lt;/p&gt;&lt;p&gt;对了，本文说的贷款说的主要是商业贷款，公积金贷款的话，能用肯定得用，不过：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;北京最新政策，每缴社保 1 年最多贷款 10W；这个有点坑，不过幸好石头赶上了老政策的末班车。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;贷款总额度不能超过 120W（夫妻双方）；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;如果在异地购房的话，一般公积金是支持异地贷款政策的，具体要和当地的政策有关，石头去年也正好跑了一遍 CQ 的公积金异地贷款流程（北京缴纳公积金，CQ 贷款购房）。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;石头 tip：如果公积金能用，尽量都给安排上，毕竟&lt;span&gt;贷款利率这么低&lt;/span&gt;的其他地儿找不到。公积金相关问题，建议直接打电话 12329 询问。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;是不是发现好复杂，没办法……接着看。&lt;/p&gt;&lt;p&gt;假设按照工资计算出最高能贷 200W，这样，房价总价范围就直接加上首付 160-200W，得到总价 360-400W 吗？&lt;/p&gt;&lt;p&gt;答案当然可能也不太对。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibtwArG7NfRmW8o6jI2oAxRAcBFbGnoOWtxsYC5RaafKpOibuPgofjqVs6vsN7Vrcrb9UwGYR62ngyA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;300&quot;/&gt;&lt;/p&gt;&lt;p&gt;首先，银行贷款额度都是 &lt;code&gt;评估价*贷款比例&lt;/code&gt; ，评估价 ≠ 成交价，总价市场价 500W，银行评估会有个折扣 9 折，那么银行只认为你这个房子值 500*0.9=450 W，假设你工资不影响你贷款额度计算的情况下，理论上贷款额度为：&lt;code&gt;450W * 0.65 = 292W&lt;/code&gt;，那么首付资金是 &lt;code&gt;500 - 292 = 208 W&lt;/code&gt;，对不起，还不是。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;石头 Tip：评估价这里有一定“寻租”空间，如果你希望更可能多地贷款，或许可以让评估公司对房子进行高评。高评估意味着可以多贷款，相应的税费可能也会适当高一些。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;还得看你看中的这个房子是普通住宅，还是 VIP 住宅（非普通），啥是普通住宅？以北京为例，须同时满足：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;小区容积率在1.0(含)以上&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;房屋建筑面积在140平方米(含)以下&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;还有政府指导价：&lt;/section&gt;&lt;/li&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;五环内：单价不超过39600/㎡ 或 总价不超过 468W。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;五环到六环：单价不超过31680/㎡ 或 总价不超过374W；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;六环外：单价不超过23760/㎡ 或 总价不超过280W；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;p&gt;普通住宅和非普通住宅，对首付比例要求不一样，贷款利率也不一样，税收比例也不一样。一般而言，可能我们都期望按照普通住宅去成交（假设前两项满足普通住宅的标准），那么：&lt;/p&gt;&lt;p&gt;这个 500W 的房子：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;在 5 环内，总价不超过 468W，网签价就得按照 468W 计算，贷款比例又缩水了。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;5-6 环，网签价374W，贷款比例：&lt;code&gt;374*0.65=243W&lt;/code&gt;，首付变成了 257W。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;首付还得包括下面的这部分：&lt;/p&gt;&lt;p&gt;个税、增值税、契税，如果所购房是经济适用房的话，还有另外的&lt;strong&gt;高额&lt;/strong&gt;的综合地价款或土地出让金。这个就相对很复杂了，借用网上的这个图：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9986338797814208&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ZMXDhhGnYibtwArG7NfRmW8o6jI2oAxRAOgzyfLrhiaXoBzExPuCFTXJg8pOFWCibn9ia3VZrUj9YvCY0g0fj9Xmzw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;732&quot;/&gt;&lt;/p&gt;&lt;p&gt;别看上面的个税等理论上由卖方承担，实际交易过程中，都会直接转交给买方的。以理想情况下 “满五唯一” 的房子，只需要缴纳契税 &lt;code&gt;500*1%=5W&lt;/code&gt;。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;石头 Tip：不同中介费率可能不一样，业主（卖方）可能会同时在多个中介上挂出房屋信息，这个时候就会有谈判空间，但也不太多。如果有渠道或有条件，其实也可以自行成交。&lt;/p&gt;&lt;p&gt;自行成交对于买方的风险会更大一些，这个需要自己评估。这个对具体感兴趣可以私聊我(wechat: codershitou)，我有过 2 套房子自行成交交易的经验。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;中介费，这个相对比较固定，一般 &lt;code&gt;2.?&lt;/code&gt;，不同中介不一样，甚至可以自己成交免中介费，我们就以 2% 计算，&lt;code&gt;500*2%=10W&lt;/code&gt;。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;石头 Tip：首套刚需，房源就先尽量锁定“满五唯一”的吧。然后&lt;span&gt;处女贷（首贷）资格&lt;/span&gt;要谨慎，好好把握。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;大头其实就是上面的了，其他可能还会有：贷款服务费、评估费、抵押登记费、印花税等等。&lt;/p&gt;&lt;p&gt;我们再回过头来看看首付，总价 500W 的房子，五环外的话，最多贷款 243W，首付为：257 + 5W(契税) + 10W(中介）+ 1W（其他）= 272W。说好的首付比例 35%（175W）呢？结果从 175 直接变成 272W，&lt;span&gt;硬生生多出来 100W&lt;/span&gt;。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.99609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ZMXDhhGnYibtwArG7NfRmW8o6jI2oAxRA1JMYrTBsFcHQqOmO9XG0rGA28Iiano9Lx9kWpfdbbp2Gj9NtiaAoAH1A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;256&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;小结&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;卧槽，发现写了这么多，才基本把首付预算这块写了个七七八八，我们还是分两次写吧。&lt;/p&gt;&lt;p&gt;咱们小结一下，购房前，先看看是否有合适的政策性福利住房，然后最主要就是清点首付资金，然后了解当地的贷款政策（特别强调&lt;span&gt;不要浪费处女贷&lt;/span&gt;资格），方便确定房子总价范围，这样才能为后面看房等打下基础。&lt;/p&gt;&lt;p&gt;咱们下一期接着聊聊，当💰准备好之后，如何看房、选房、过户交易、以及交房验收等流程和&lt;span&gt;注意事项&lt;/span&gt;。有的还挺重要的，身边就有前同事没注意其中的条条框框，还惹上了官司，赔了钱不说，还浪费时间和精力，影响心情。&lt;/p&gt;&lt;p&gt;最后，祝大家早日上车。&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ZMXDhhGnYibtwArG7NfRmW8o6jI2oAxRA3xURCrx5emnd7ibibZRP3bP489esjUBZGTy3s8MQ3dfxttKicgtLlbDvg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;255&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;后记&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;最后，&lt;/span&gt;&lt;span&gt;求关注，求关注，求关注&lt;/span&gt;&lt;span&gt;，本号会定期分享一些技术干货、职场经验等，如果大家对阿里或者其他大厂感兴趣，也可以找我&lt;/span&gt;&lt;span&gt;内推&lt;/span&gt;&lt;span&gt;，我可以帮忙提供简历 review 等，希望能和大家积极交流讨论，&lt;/span&gt;&lt;span&gt;一起学习、共同进步&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;觉得本号分享的文章有价值，记得&lt;/span&gt;&lt;span&gt;添加星标&lt;/span&gt;&lt;span&gt;哦。周更很累，不要白 piao，需要来点正反馈，安排个 “&lt;/span&gt;&lt;span&gt;一键三连&lt;/span&gt;&lt;span&gt;”（点赞、在看、分享）如何？😝 这将是我持续输出优质文章的最强动力。&lt;/span&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;img data-ratio=&quot;0.5763888888888888&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/ZMXDhhGnYibus0M9Ca9kxyicUG4QMG51vSh2LCtOpicfJwrribu5Zc8d9OKFIP2E5UhcJ9ctTEeG9Xv0ElRFJqv65A/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;288&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;推 荐 阅 读&lt;/strong&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;span/&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages __bg_gif&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_gif/uwFfSFSf91seQScIvEVNUmicz8EaY909ichXz5pHkVN8AwtsHOVg6mYnOlib8icUjfWZJkX6IibVlx9vJhtQrYaIUjg/0?wx_fmt=gif&quot; data-ratio=&quot;0.8428571428571429&quot; data-s=&quot;300,640&quot; data-type=&quot;gif&quot; data-w=&quot;140&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/uwFfSFSf91seQScIvEVNUmicz8EaY909ichXz5pHkVN8AwtsHOVg6mYnOlib8icUjfWZJkX6IibVlx9vJhtQrYaIUjg/640?wx_fmt=gif&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-tools-id=&quot;74666&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;程序猿石头 &lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;程序猿石头(ID: tangleithu)，现任阿里巴巴技术专家，清华学渣，前大疆后端 Leader。用不同的视角分享高质量技术文章，以每篇文章都让人有收获为目的，欢迎关注，交流和指导！扫码回复关键字 “&lt;/span&gt;&lt;span&gt;1024&lt;/span&gt;&lt;span&gt;” 获取&lt;/span&gt;&lt;span&gt;程序员大厂面试指南&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;53&quot; data-backw=&quot;53&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;269&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;269&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ZMXDhhGnYibsGrjJaF5hvicrswVeQicFujwTxcfbYhd7y5cjEkf2nwDCFdiauYuqmHY3VDWyCbImg92mvoicoQ6Uk3g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>38834a44dcca024e374951803d70d757</guid>
<title>听说这是未来最流行的编程形式</title>
<link>https://toutiao.io/k/mmp3sl8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section&gt;&lt;span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;‍&lt;/span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-backh=&quot;241&quot; data-backw=&quot;562&quot; data-ratio=&quot;0.428125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmBib4kOUcrprTLVCHAAP4kINZ24ksJHHqKO3onvD71osXhnBIicjn8cszA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;近几年，互联网、大数据、AI......数字经济正在如火如荼蔓延，各行各业纷纷拥抱数据基建、转向企业上云，极大地提升了企业开发效率。但广大的开发者却不知道，不仅企业可以上云，个人也可以，同样能极大提升自身的开发效率。所以，今天我们给程序员们带（an）来（li）一份礼物——做点你们想要的——Titan IDE。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1073345259391771&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiavOaaRORXpLFN6NoUT8ZqRiabialicrZ42nr0aT62lJsDHuavyGvSCVNf7olt6Wh37DHJyfuR0vNHU0Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;559&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;Titan IDE 是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;Titan IDE&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 是基于 &lt;/span&gt;&lt;span&gt;Code-Server&lt;/span&gt;&lt;span&gt; 开发并根据开发者开发习惯进行优化的云端集成开发环境（IDE）。开发者无需安装，只要打开浏览器，连接上网络就可以在任何地方，任何机器上即刻享有一个&lt;strong&gt;永不间断、永不丢失的云端开发环境&lt;/strong&gt;。无论你的设备是 Mac、Windows、Linux，还是 Pad、手机等，都能获得近乎一致的体验。简单来说，只要你能连接上网络，能打开浏览器，你就能拥有属于自己独立的开发空间。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5254342431761787&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmBA3bEWuiaO2geqIdbcERxk9CUywGevux1urZeOQK60v8iaCbugGAKQibeg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1612&quot; data-backw=&quot;562&quot; data-backh=&quot;295&quot;/&gt;&lt;/span&gt;&lt;span&gt;图片来源于 Titan IDE官网&lt;/span&gt;&lt;/p&gt;&lt;h3/&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1073345259391771&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiavOaaRORXpLFN6NoUT8ZqRiabialicrZ42nr0aT62lJsDHuavyGvSCVNf7olt6Wh37DHJyfuR0vNHU0Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;559&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Titan IDE 能做什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Titan IDE 适用于多种研发工作场景，&lt;strong&gt;免部署、低成本、开箱即用&lt;/strong&gt;，涵盖了软件开发从设计到交付的一切需求，全面提升研发效能。主要功能集中在：&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;多编码环境，开箱即用&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;分屏磁贴&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;效能看板&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;兼容VS Code插件，支持定制多种扩展能力&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;通过Git进行版本控制&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1.支持多编码环境，开箱即用&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;根据&lt;/span&gt;&lt;span&gt;PYPL&lt;/span&gt;&lt;span&gt;最新数据，开发语言流行榜上 Python 牢牢占据榜首，同时流行度前 10 名的开发语言占据了 85%以上的份额。而目前市面上这些流行度很高的语言， Titan IDE 基本都能支持，用起来非常方便。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;1.3895781637717122&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmBrevCkxWxCzZPKlfUNIooicZtRZlia4SsNI8D9rGmfhWrekQd80PxVzhw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1612&quot; data-backw=&quot;562&quot; data-backh=&quot;781&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;排行榜引用自 PYPL&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;由于Titan IDE 是基于 Code-Sever 开发的一款云端 IDE 产品，因此保留了Visual Studio 与 Vs Code 原始的交互逻辑和交互页面，开发者无需改变个人习惯，可自如切换到 Titan IDE上。同时 Titan IDE 还内置了主流的十余种编码环境，开发者无需手动配置环境，真正做到开箱即用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5595533498759305&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmBAhFFyuEzw0ClaLBVBxtvGtknPybFJPuIqIniaWBedtSibN4EtysBt8Rw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1612&quot; data-backw=&quot;562&quot; data-backh=&quot;315&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图片来源于 Titan IDE官网&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;2.分屏磁贴&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;分屏磁贴功能支持用户在所有页面，打开Titan IDE的开发工作台。用户可以对照需求文档、原型设计、帮助文档、API接口等页面同时进行开发。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5702179176755447&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmBEY3icgn1g5C4VXYJ22F8DpumSJJkBzsUR1IceIbs1twNSMyRiby4nHibQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;2478&quot; data-backw=&quot;562&quot; data-backh=&quot;321&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图片来源于 Titan IDE官网&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;3.效能看板&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Titan IDE 提供的效率看板功能，可以使得在概览中清晰的看到自己的开发效能。目前官方提供了使用总时长、有效使用时长、代码行数、注释行数、Commit 数等五个维度的效率统计，未来会有更多的统计维度上线。Titan IDE 还支持查看历史数据和导出的功能，以后CTO再也不能说开发人员偷懒摸鱼了。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.6029776674937966&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmBjj7njUoRvH4pTyxpkZbriaTazyTlLoNJyd9lMHg20nKdWxWoqYbZmQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1612&quot; data-backw=&quot;562&quot; data-backh=&quot;339&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图片来源于 Titan IDE官网&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;4.兼容VS Code插件，支持定制多种扩展能力&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Titan TDE 在插件方面兼容VS Code插件，因此支持定制多种扩展能力，真正做到契合每个开发的开发习惯。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5333333333333333&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmBACUQghoYG5rFXiaTQevn9EpxR7oqq8cbNVEyljia4kjCia3a1nsv4mmOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1920&quot; data-backw=&quot;562&quot; data-backh=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图片来源于 Titan IDE官网&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;5.通过Git进行版本控制&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Titan IDE 目前还可通过 Git 的方式直接拉取第三方的代码工程文件，使得开发者们的迁移难度大大降低。同时还贴心的提供了教程，即使是小白也能快速上手。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.1259305210918114&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmByppcBfkj4MY7YIoSQgqYRiahdbtKO1RX12WGjqy9AiavvYNbegX3Yefg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1612&quot; data-backw=&quot;562&quot; data-backh=&quot;71&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.1073345259391771&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiavOaaRORXpLFN6NoUT8ZqRiabialicrZ42nr0aT62lJsDHuavyGvSCVNf7olt6Wh37DHJyfuR0vNHU0Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;559&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Ti&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;tan IDE 个人开发体验&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;section&gt;&lt;span&gt;一位资深程序员体验后....&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;&lt;span&gt;我使用了 Titan IDE 大约有一周的时间，总体来说体验比较不错，整个开发过程比较流畅。以下是使用之后个人觉得Titan IDE存在的一些优势：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1.适用云原生应用的云上开发&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;市面上有众多琳琅满目的IDE，各有优缺，所以平时大多开发者都会在本地装至少两三个IDE插件，需要耗费大量的时间进行学习和配置，但是 Titan IDE 完美适用于云原生应用开发，节省了大量不必要的损耗时间。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.切换成本低&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在IDE的榜单中，Visual Studio则牢牢占据榜首，同时 VS Code 也排在第四位。二者份额合计占到了 34%以上，同时二者的上升趋势在整个榜单中名列前茅。由此可见，目前使用 VS Code 和 Visio Studio  作为开发工具的人很多，且依旧呈现上升趋势，Titan IDE 是基于 Code-Server 开发的，使用和操作习惯和这两个浏览器一致 ，没有切换成本，切换流畅自然。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;1.4795285359801489&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmBEiaaiajWg5QpdzNG0usZNnO9lEANkBgwXcicCS86Sy61VDxKNXrgVlZkA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1612&quot; data-backw=&quot;562&quot; data-backh=&quot;831&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;排行榜引用自 PYPL&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;3.一些温馨小功能&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;另外值得一提的是， Titan IDE 别出心裁的在 IDE 页面的提供了两个温馨的小功能。&lt;/span&gt;&lt;/section&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;全屏缩放功能。可以使得 IDE 处于全屏模式，极大减少其他干扰，拥有很好的沉浸式体验。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img data-backh=&quot;324&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.5618153364632238&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmBVOmapg6OC1QdFFIK3rrkt33GhqsV7ZGx1C2UyDY3wu1ib9BWEjvFp4Q/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;5112&quot;/&gt;&lt;span/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;快速提交功能。免去了Code-Server 原本繁琐的提交步骤，只要两步就能将代码快速提交到代码仓库。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span/&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5724358974358974&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyUBExfODswm5YCQ2ibOsmBY8H8QEdVNmvMZHFCXCywlslBPTK8hJYJgco2zDnSNfmgcu3QSIdskg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1560&quot; data-backw=&quot;578&quot; data-backh=&quot;331&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;这两个小功能提升了开发工作效率，使得开发幸福感大大增强。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;Titan IDE 是一款面向云，面向未来的编程。关于 Titan IDE 今天就先介绍到这里，等作者再体验一段时间后再来给大家分享新的内容。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;接下来是福利派送时间：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;目前 Titan IDE 上线了&lt;strong&gt;注册有礼&lt;/strong&gt;活动，只要在 &lt;strong&gt;2020/12/12 &lt;/strong&gt;之前注册并登录体验 Titan IDE，就能领取福利大礼包：1、创建项目数量上限翻倍，可免费创建20个项目；2、支持同时开启两个 IDE项目，操作方便自如。还在等什么，快去试试看吧，&lt;strong&gt;点击阅读原文&lt;/strong&gt;，即刻到达：&lt;strong&gt;Titan IDE 官网！&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;↙↙↙时不待人，快点阅读原文呀！&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;img data-ratio=&quot;0.0671875&quot; data-type=&quot;jpeg&quot; data-w=&quot;640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/MUAXarcSGiasByiaziaOFXuliaicQwlj5gEBECZYZWW9anFBPprXXqsdTia89TOItLPmm3Ptl9scqvNfumw7mTczsiaDg/640?wx_fmt=jpeg&quot;/&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;行云创新（CloudToGo)&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;是国内一站式开发云的首创者，为开发者提供一站式的全云端开发环境，涵盖应用从架构设计、开发、交付、运维和运营全生命周期。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;对开发、测试、运维提供统一支持；零门槛，用户不需要懂容器、K8S也能熟练使用；可定义灵活的应用交付策略，一键式交付到多云环境；以应用为中心、感知应用全方位状态，变被动响应为主动运维，实现应用状态的快速反馈。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前为金融、保险、制造、教育、物流、电商等多个行业提供各种整体解决方案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-backh=&quot;221&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyq89yoja5T5VqbwgT99GjAvsPKhAszYXfeicFRib0mmbwohiceZRcNgkB5XCHBshAQibte28O14ia1eA/640?wx_fmt=png&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3965014577259475&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1029&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/MUAXarcSGiauyq89yoja5T5VqbwgT99GjAvsPKhAszYXfeicFRib0mmbwohiceZRcNgkB5XCHBshAQibte28O14ia1eA/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>253852482ed6dc8c42cc08f0472315d7</guid>
<title>Golang 程序性能分析（一）：pprof 和 go-torch</title>
<link>https://toutiao.io/k/s0r9vv5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近计划用三篇文章讲述一下&lt;code&gt;Golang&lt;/code&gt;应用性能分析，本文是第一篇，先来介绍&lt;code&gt;Go&lt;/code&gt;语言自带的性能分析库&lt;code&gt;pprof&lt;/code&gt;怎么使用，后面两篇会讲解怎么用&lt;code&gt;pprof&lt;/code&gt;对&lt;code&gt;Echo&lt;/code&gt;或者&lt;code&gt;Gin&lt;/code&gt;框架开发的应用进行性能分析以及如何使用&lt;code&gt;pprof&lt;/code&gt;对&lt;span&gt;gRPC&lt;/span&gt; 服务进行性能分析。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;有兴趣追更的同学欢迎微信关注「网管叨bi叨」&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Golang&lt;/code&gt;是一个非常注重性能的语言，因此语言的内置库里就自带了性能分析库&lt;code&gt;pprof&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;性能分析和采集在计算机性能调试领域使用的术语是&lt;code&gt;profile&lt;/code&gt;，或者有时候也会使用&lt;code&gt;profiling&lt;/code&gt;代表性能分析这个行为。所以&lt;code&gt;pprof&lt;/code&gt;名字里的&lt;code&gt;prof&lt;/code&gt;来源于对单词&lt;code&gt;profile&lt;/code&gt;的缩写，&lt;code&gt;profile&lt;/code&gt;这个单词的原意是&lt;strong&gt;画像&lt;/strong&gt;，那么针对程序性能的画像就是应用使用 CPU 和内存等等这些资源的情况。都是哪些函数在使用这些资源？每个函数使用的比例是多少？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在&lt;code&gt;Go&lt;/code&gt; 语言中，主要关注的程序运行情况包括以下几种：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;CPU profile：报告程序的 CPU 使用情况，按照一定频率去采集应用程序在 CPU 和寄存器上面的数据&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Memory Profile（Heap Profile）：报告程序的内存使用情况&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Block Profile：报告导致阻塞的同步原语的情况，可以用来分析和查找锁的性能瓶颈&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Goroutine Profile：报告 goroutines 的使用情况，有哪些 goroutine，它们的调用关系是怎样的&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;工具型应用的性能分析&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你的应用是工具类应用，执行完任务就结束退出，可以使用 &lt;span&gt;`runtime/pprof` &lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;库。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比如要想进行 CPU Profiling，可以调用 &lt;code&gt;pprof.StartCPUProfile()&lt;/code&gt; 方法，它会对当前应用程序进行CPU使用情况分析，并写入到提供的参数中（&lt;code&gt;w io.Writer&lt;/code&gt;），要停止调用 &lt;code&gt;StopCPUProfile()&lt;/code&gt; 即可。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;去除错误处理只需要三行内容，一般把部分内容写在 &lt;code&gt;main.go&lt;/code&gt; 文件中，应用程序启动之后就开始执行：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;f, err := os.Create(*cpuprofile)&lt;br/&gt;...&lt;br/&gt;pprof.StartCPUProfile(f)&lt;br/&gt;defer pprof.StopCPUProfile()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用执行结束后，就会生成一个文件，保存了我们应用的 CPU使用情况数据。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想要获得内存的数据，直接使用 &lt;code&gt;WriteHeapProfile&lt;/code&gt; 就行，不用 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;stop&lt;/code&gt; 这两个步骤了：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;f, err := os.Create(*memprofile)&lt;br/&gt;pprof.WriteHeapProfile(f)&lt;br/&gt;f.Close()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们的&lt;strong&gt;文章会把重点篇幅放在服务型应用的性能分析&lt;/strong&gt;，所以关于工具型应用的性能分析就说这么多。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;服务型应用性能分析&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你的应用是一直运行的，比如 web 应用或者&lt;code&gt;gRPC&lt;/code&gt;服务等，那么可以使用 &lt;code&gt;net/http/pprof&lt;/code&gt; 库，它能够在应用提供 HTTP 服务时进行分析。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果使用了默认的 &lt;code&gt;http.DefaultServeMux&lt;/code&gt;（通常是代码直接使用 &lt;code&gt;http.ListenAndServe(&quot;0.0.0.0:8000&quot;, nil)&lt;/code&gt;），只需要在代码中添加一行，匿名引用&lt;code&gt;net/http/pprof&lt;/code&gt;：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;import _ &lt;span&gt;&quot;net/http/pprof&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你使用自定义的 &lt;code&gt;ServerMux&lt;/code&gt;复用器，则需要手动注册一些路由规则：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;r.HandleFunc(&lt;span&gt;&quot;/debug/pprof/&quot;&lt;/span&gt;, pprof.Index)&lt;br/&gt;r.HandleFunc(&lt;span&gt;&quot;/debug/pprof/heap&quot;&lt;/span&gt;, pprof.Index)&lt;br/&gt;r.HandleFunc(&lt;span&gt;&quot;/debug/pprof/cmdline&quot;&lt;/span&gt;, pprof.Cmdline)&lt;br/&gt;r.HandleFunc(&lt;span&gt;&quot;/debug/pprof/profile&quot;&lt;/span&gt;, pprof.Profile)&lt;br/&gt;r.HandleFunc(&lt;span&gt;&quot;/debug/pprof/symbol&quot;&lt;/span&gt;, pprof.Symbol)&lt;br/&gt;r.HandleFunc(&lt;span&gt;&quot;/debug/pprof/trace&quot;&lt;/span&gt;, pprof.Trace)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注册完后访问&lt;code&gt;http://localhost/debug/pprof&lt;/code&gt;端点，它会得到类似下面的页面内容：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Types of profiles available:&lt;br/&gt;Count Profile&lt;br/&gt;// 下面是一些可访问的/debug/pprof/目录下的路由&lt;br/&gt;2 allocs&lt;br/&gt;0 block&lt;br/&gt;0 cmdline&lt;br/&gt;36 goroutine&lt;br/&gt;2 heap&lt;br/&gt;0 mutex&lt;br/&gt;0 profile&lt;br/&gt;13 threadcreate&lt;br/&gt;0 trace&lt;br/&gt;full goroutine stack dump&lt;br/&gt;Profile Descriptions:&lt;br/&gt;&lt;br/&gt;// 下面是对上面那些路由页面里展示的性能分析数据的解释&lt;br/&gt;allocs: A sampling of all past memory allocations&lt;br/&gt;block: Stack traces that led to blocking on synchronization primitives&lt;br/&gt;cmdline: The &lt;span&gt;command&lt;/span&gt; line invocation of the current program&lt;br/&gt;goroutine: Stack traces of all current goroutines&lt;br/&gt;heap: A sampling of memory allocations of live objects. You can specify the gc GET parameter to run GC before taking the heap sample.&lt;br/&gt;mutex: Stack traces of holders of contended mutexes&lt;br/&gt;profile: CPU profile. You can specify the duration &lt;span&gt;in&lt;/span&gt; the seconds GET parameter. After you get the profile file, use the go tool pprof &lt;span&gt;command&lt;/span&gt; to investigate the profile.&lt;br/&gt;threadcreate: Stack traces that led to the creation of new OS threads&lt;br/&gt;trace: A trace of execution of the current program. You can specify the duration &lt;span&gt;in&lt;/span&gt; the seconds GET parameter. After you get the trace file, use the go tool trace &lt;span&gt;command&lt;/span&gt; to investigate the trace.&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个路径下几个需要重点关注的子页面有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;/debug/pprof/profile&lt;/code&gt;：访问这个链接会自动进行 CPU profiling，持续 30s，并生成一个文件供下载，可以通过带参数&lt;code&gt;?=seconds=60&lt;/code&gt;进行60秒的数据采集&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;/debug/pprof/heap&lt;/code&gt;：Memory Profiling 的路径，访问这个链接会得到一个内存 Profiling 结果的文件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;/debug/pprof/block&lt;/code&gt;：block Profiling 的路径&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;/debug/pprof/goroutines&lt;/code&gt;：运行的 goroutines 列表，以及调用关系&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;直接访问这些页面产生的性能分析数据我们是分析不过来什么的，Go在&lt;code&gt;1.11&lt;/code&gt;版本后在它自带的工具集&lt;code&gt;go tool&lt;/code&gt;里内置了&lt;code&gt;pprof&lt;/code&gt;工具来分析由&lt;code&gt;pprof&lt;/code&gt;库生成的数据文件。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;使用go tool pprof&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过上面的设置可以获取服务的性能数据后，接下来就可以使用&lt;code&gt;go tool pprof&lt;/code&gt;工具对这些数据进行分析和保存了，一般都是使用&lt;code&gt;pprof&lt;/code&gt;通过&lt;code&gt;HTTP&lt;/code&gt;访问上面列的那些路由端点直接获取到数据后再进行分析，获取到数据后&lt;code&gt;pprof&lt;/code&gt;会自动让终端进入交互模式。在交互模式里&lt;code&gt;pprof&lt;/code&gt;为我们提供了不少分析各种指标的子命令，在交互模式下键入&lt;code&gt;help&lt;/code&gt;后就会列出所有子命令。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; pprof子命令的使用方法可以参考 &lt;code&gt;pprof --help&lt;/code&gt; 或者 &lt;span&gt;pprof 文档&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;CPU性能分析&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;进行&lt;code&gt;CPU&lt;/code&gt;性能分析直接用&lt;code&gt;go tool pprof&lt;/code&gt;访问上面说的&lt;code&gt;/debug/pprof/profile&lt;/code&gt;端点即可，等数据采集完会自动进入命令行交互模式。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;➜ go tool pprof http://localhost/debug/pprof/profile&lt;br/&gt;Fetching profile over HTTP from http://localhost/debug/pprof/profile&lt;br/&gt;Saved profile in /Users/Kev/pprof/pprof.samples.cpu.005.pb.gz&lt;br/&gt;Type: cpu&lt;br/&gt;Time: Nov 15, 2020 at 3:32pm (CST)&lt;br/&gt;Duration: 30.01s, Total samples = 0&lt;br/&gt;No samples were found with the default sample value type.&lt;br/&gt;Try &quot;sample_index&quot; command to analyze different sample values.&lt;br/&gt;Entering interactive mode (type &quot;help&quot; for commands, &quot;o&quot; for options)&lt;br/&gt;(pprof)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;默认采集时长是 30s，如果在 url 最后加上 &lt;code&gt;?seconds=60&lt;/code&gt; 参数可以调整采集数据的时间为 60s。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;采集完成我们就进入了一个交互式命令行，可以对解析的结果进行查看和导出。可以通过 &lt;code&gt;help&lt;/code&gt; 来查看支持的子命令有哪些。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;NOTE：&lt;/strong&gt; 如果&lt;code&gt;pprof&lt;/code&gt;用性能数据生成分析图的话、包括后面的go-torch火焰图都依赖软件&lt;code&gt;graphviz&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Mac 用户直接&lt;code&gt;brew install graphviz&lt;/code&gt;就能安装，其他系统官网下载页面也有提供安装包，请访问https://graphviz.org/download/&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;列出最耗时的地方&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一个有用的命令是 &lt;code&gt;topN&lt;/code&gt;，它列出最耗时间的地方：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;(pprof) top10&lt;br/&gt;130ms of 360ms total (36.11%)&lt;br/&gt;Showing top 10 nodes out of 180 (cum &amp;gt;= 10ms)&lt;br/&gt;      flat  flat%   sum%        cum   cum%&lt;br/&gt;      20ms  5.56%  5.56%      100ms 27.78%  encoding/json.(*decodeState).object&lt;br/&gt;      20ms  5.56% 11.11%       20ms  5.56%  runtime.(*mspan).refillAllocCache&lt;br/&gt;      20ms  5.56% 16.67%       20ms  5.56%  runtime.futex&lt;br/&gt;      10ms  2.78% 19.44%       10ms  2.78%  encoding/json.(*decodeState).literalStore&lt;br/&gt;      10ms  2.78% 22.22%       10ms  2.78%  encoding/json.(*decodeState).scanWhile&lt;br/&gt;      10ms  2.78% 25.00%       40ms 11.11%  encoding/json.checkValid&lt;br/&gt;      10ms  2.78% 27.78%       10ms  2.78%  encoding/json.simpleLetterEqualFold&lt;br/&gt;      10ms  2.78% 30.56%       10ms  2.78%  encoding/json.stateBeginValue&lt;br/&gt;      10ms  2.78% 33.33%       10ms  2.78%  encoding/json.stateEndValue&lt;br/&gt;      10ms  2.78% 36.11%       10ms  2.78%  encoding/json.stateInString&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每一行表示一个函数的信息。前两列表示函数在 CPU 上运行的时间以及百分比；第三列是当前所有函数累加使用 CPU 的比例；第四列和第五列代表这个函数以及子函数运行所占用的时间和比例（也被称为&lt;code&gt;累加值 cumulative&lt;/code&gt;），应该大于等于前两列的值；最后一列就是函数的名字。如果应用程序有性能问题，上面这些信息应该能告诉我们时间都花费在哪些函数的执行上。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;生成函数调用图&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;pprof&lt;/code&gt; 不仅能打印出最耗时的地方(&lt;code&gt;top&lt;/code&gt;)，还能列出函数代码以及对应的取样数据(&lt;code&gt;list&lt;/code&gt;)、汇编代码以及对应的取样数据(&lt;code&gt;disasm&lt;/code&gt;)，而且能以各种样式进行输出，比如 &lt;code&gt;svg&lt;/code&gt;、&lt;code&gt;gif&lt;/code&gt;、&lt;code&gt;png&lt;/code&gt;等等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中一个非常便利的是 &lt;code&gt;web&lt;/code&gt; 命令，在交互模式下输入 &lt;code&gt;web&lt;/code&gt;，就能自动生成一个 &lt;code&gt;svg&lt;/code&gt; 文件，并跳转到浏览器打开，生成了一个函数调用图（这个功能需要安装&lt;code&gt;graphviz&lt;/code&gt;后才能使用）。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4660714285714286&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z4pQ0O5h0f43qkGFicAxqB3A9GOhtDVvKF2mgSP5a7OcA5icibbdsXSPh04t5fMS51wK5ju9D6fjtOYYpicJUwmbJQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1680&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图中每个方框对应应用程序运行的一个函数，方框越大代表函数执行的时间越久（函数执行时间会包含它调用的子函数的执行时间，但并不是正比的关系）；方框之间的箭头代表着调用关系，箭头上的数字代表被调用函数的执行时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里还要提两个比较有用的方法，如果应用比较复杂，生成的调用图特别大，看起来很乱，有两个办法可以优化：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;使用 &lt;code&gt;web funcName&lt;/code&gt; 的方式，只打印和某个函数相关的内容&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;运行 &lt;code&gt;go tool pprof&lt;/code&gt; 命令时加上 &lt;code&gt;--nodefration&lt;/code&gt; 参数，可以忽略内存使用较少的函数，比如&lt;code&gt;--nodefration=0.05&lt;/code&gt;表示如果调用的子函数使用的 CPU、memory 不超过 5%，就忽略它，不要显示在图片中。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;分析函数性能&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;想更细致分析，就要精确到代码级别了，看看每行代码的耗时，直接定位到出现性能问题的那行代码。&lt;code&gt;pprof&lt;/code&gt; 也能做到，&lt;code&gt;list&lt;/code&gt; 命令后面跟着一个正则表达式，就能查看匹配函数的代码以及每行代码的耗时：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;(pprof) list podFitsOnNode&lt;br/&gt;Total: 120ms&lt;br/&gt;ROUTINE ======================== k8s.io/kubernetes/plugin/pkg/scheduler.podFitsOnNode in /home/cizixs/go/src/k8s.io/kubernetes/_output/local/go/src/k8s.io/kubernetes/plugin/pkg/scheduler/generic_scheduler.go&lt;br/&gt;         0       20ms (flat, cum) 16.67% of Total&lt;br/&gt;         .          .    230:&lt;br/&gt;         .          .    231:// Checks whether node with a given name and NodeInfo satisfies all predicateFuncs.&lt;br/&gt;         .          .    232:func podFitsOnNode(pod *api.Pod, meta interface{}, info *schedulercache.NodeInfo, predicateFuncs map[string]algorithm.FitPredicate) (bool, []algorithm.PredicateFailureReason, error) {&lt;br/&gt;         .          .    233:    var failedPredicates []algorithm.PredicateFailureReason&lt;br/&gt;         .          .    234:    for _, predicate := range predicateFuncs {&lt;br/&gt;         .       20ms    235:        fit, reasons, err := predicate(pod, meta, info)&lt;br/&gt;         .          .    236:        if err != nil {&lt;br/&gt;         .          .    237:            err := fmt.Errorf(&quot;SchedulerPredicates failed due to %v, which is unexpected.&quot;, err)&lt;br/&gt;         .          .    238:            return false, []algorithm.PredicateFailureReason{}, err&lt;br/&gt;         .          .    239:        }&lt;br/&gt;         .          .    240:        if !fit {&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;内存性能分析&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要想获得内存使用 Profiling 信息，只需要把数据源修改一下就行（对于 HTTP 方式来说就是修改 url 的地址，从 &lt;code&gt;/debug/pprof/profile&lt;/code&gt; 改成 &lt;code&gt;/debug/pprof/heap&lt;/code&gt;）：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;➜  go tool pprof  http://localhost/debug/pprof/heap        &lt;br/&gt;Fetching profile from http://localhost/debug/pprof/heap        &lt;br/&gt;Saved profile &lt;span&gt;in&lt;/span&gt; &lt;br/&gt;......&lt;br/&gt;(pprof)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;和 CPU Profiling 使用一样，使用 &lt;code&gt;top N&lt;/code&gt; 可以打印出使用内存最多的函数列表：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;(pprof) top&lt;br/&gt;11712.11kB of 14785.10kB total (79.22%)&lt;br/&gt;Dropped 580 nodes (cum &amp;lt;= 73.92kB)&lt;br/&gt;Showing top 10 nodes out of 146 (cum &amp;gt;= 512.31kB)&lt;br/&gt;      flat  flat%   sum%        cum   cum%&lt;br/&gt; 2072.09kB 14.01% 14.01%  2072.09kB 14.01%  k8s.io/kubernetes/vendor/github.com/beorn7/perks/quantile.NewTargeted&lt;br/&gt; 2049.25kB 13.86% 27.87%  2049.25kB 13.86%  k8s.io/kubernetes/pkg/api/v1.(*ResourceRequirements).Unmarshal&lt;br/&gt; 1572.28kB 10.63% 38.51%  1572.28kB 10.63%  k8s.io/kubernetes/vendor/github.com/beorn7/perks/quantile.(*stream).merge&lt;br/&gt; 1571.34kB 10.63% 49.14%  1571.34kB 10.63%  regexp.(*bitState).reset&lt;br/&gt; 1184.27kB  8.01% 57.15%  1184.27kB  8.01%  bytes.makeSlice&lt;br/&gt; 1024.16kB  6.93% 64.07%  1024.16kB  6.93%  k8s.io/kubernetes/pkg/api/v1.(*ObjectMeta).Unmarshal&lt;br/&gt;  613.99kB  4.15% 68.23%  2150.63kB 14.55%  k8s.io/kubernetes/pkg/api/v1.(*PersistentVolumeClaimList).Unmarshal&lt;br/&gt;  591.75kB  4.00% 72.23%  1103.79kB  7.47%  reflect.Value.call&lt;br/&gt;  520.67kB  3.52% 75.75%   520.67kB  3.52%  k8s.io/kubernetes/vendor/github.com/gogo/protobuf/proto.RegisterType&lt;br/&gt;  512.31kB  3.47% 79.22%   512.31kB  3.47%  k8s.io/kubernetes/pkg/api/v1.(*PersistentVolumeClaimStatus).Unmarshal&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每一列的含义也是类似的，只不过从 &lt;code&gt;CPU&lt;/code&gt; 使用时长变成了内存使用大小，就不多解释了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;类似的，&lt;code&gt;web&lt;/code&gt; 命令也能生成 &lt;code&gt;svg&lt;/code&gt; 图片在浏览器中打开，从中可以看到函数调用关系，以及每个函数的内存使用多少。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;需要注意的是，默认情况下，统计的是内存使用大小，如果执行命令的时候加上 &lt;code&gt;--inuse_objects&lt;/code&gt; 可以查看每个函数分配的对象数；&lt;code&gt;--alloc-space&lt;/code&gt; 查看分配的内存空间大小。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;go-torch 和火焰图&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;火焰图（Flame Graph）是 Bredan Gregg 创建的一种性能分析图表，因为它的样子近似火焰而得名。上面的 &lt;code&gt;profiling&lt;/code&gt;结果也转换成火焰图，这里我们要介绍一个工具：&lt;span&gt;go-torch&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;。这是 uber 开源的一个工具，可以直接读取 &lt;code&gt;pprof&lt;/code&gt;的 &lt;code&gt;profiling&lt;/code&gt; 数据，并生成一个火焰图的 svg 文件。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.645&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/z4pQ0O5h0f43qkGFicAxqB3A9GOhtDVvKsebFibsx7hZsStZRhECpebcEw0wiagMs1icfT7Xaw8MLHKHLEshtgicrSg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1200&quot;/&gt;&lt;figcaption&gt;img&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;火焰图 svg 文件可以通过浏览器打开，&lt;strong&gt;它对于调用图的优点是：可以通过点击每个方块来分析它上面的内容&lt;/strong&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;火焰图的调用顺序从下到上，每个方块代表一个函数，它上面一层表示这个函数会调用哪些函数，方块的大小代表了占用 CPU 使用的长短。火焰图的配色并没有特殊的意义，默认的红、黄配色是为了更像火焰而已。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;go-torch 工具的使用非常简单，没有任何参数的话，它会尝试从 &lt;code&gt;http://localhost/debug/pprof/profile&lt;/code&gt; 获取 profiling 数据。它有三个常用的参数可以调整：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-u --url&lt;/code&gt;：要访问的 URL，这里只是主机和端口部分&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;-s --suffix&lt;/code&gt;：pprof profile 的路径，默认为 &lt;code&gt;/debug/pprof/profile&lt;/code&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;--seconds&lt;/code&gt;：要执行 profiling 的时间长度，默认为 30s&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;要生成火焰图，需要事先安装 &lt;span&gt;FlameGraph&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;工具，这个工具的安装很简单，只要把对应的可执行文件放到 &lt;code&gt;$PATH&lt;/code&gt; 目录下就行。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天的文章把Go语言的性能分析库&lt;code&gt;pprof&lt;/code&gt;的安装和使用方法大体流程走了一遍，重点讲解了一下最常用的几个性能分析命令以及如何用&lt;code&gt;pprof&lt;/code&gt;采集的&lt;code&gt;profile&lt;/code&gt;数据找出程序里最耗费性能的部分。相信有了&lt;code&gt;pprof&lt;/code&gt;的帮助在遇到需要优化程序性能的时候我们能有更多的参照指标从而有的放矢地对程序性能进行优化改进。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在使用&lt;code&gt;pprof&lt;/code&gt;采集数据的时候一定要注意下面两点：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;只有在有访问量的时候才能采集到这些性能指标数据。我是在公司的压测环境对接口压测时用&lt;code&gt;pprof&lt;/code&gt;拿到的数据，如果你是在本地运行程序的话最好用&lt;code&gt;Postman&lt;/code&gt;或者&lt;code&gt;Jmeter&lt;/code&gt;这些工具做个简单的并发访问。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;除非有健全的安全策略，否则最好只在测试和压测环境加上&lt;code&gt;pprof&lt;/code&gt;使用的那些路由，不要在生产环境上应用。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这篇文章就说这么多，后面的文章会介绍怎么在&lt;code&gt;Echo&lt;/code&gt;和&lt;code&gt;Gin&lt;/code&gt;框架下使用&lt;code&gt;pprof&lt;/code&gt;，以及如何用&lt;code&gt;pprof&lt;/code&gt;分析&lt;code&gt;gRPC&lt;/code&gt;服务的性能。求关注、求点赞、求转发！我是网管，会在这里每周坚持输出原创，我们下期再见吧。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;引用链接&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;&lt;code&gt;runtime/pprof&lt;/code&gt; : &lt;span&gt;https://golang.org/pkg/runtime/pprof/&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;pprof 文档: &lt;span&gt;https://github.com/google/pprof/blob/master/doc/pprof.md&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;go-torch: &lt;span&gt;https://github.com/uber/go-torch&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;FlameGraph: &lt;span&gt;https://github.com/brendangregg/FlameGraph/tags&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>776f02b68c0bed136a3198eefa8e458d</guid>
<title>为什么十年寒窗，比不上几代人的努力</title>
<link>https://toutiao.io/k/uxwalux</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p data-lake-id=&quot;aacf307544675a541af16628d483ebbe&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;网上有句很火的话“靠几代人积累的背景和财富，凭什么不如你寒窗苦读几十年”。其实多年前，一位银行从业者也写过一篇很火的文章《寒门再难出贵子》。在英国也有一部堪称伟大的纪录片《UP》系列，也反映了社会阶层固化。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;65029366b5a0e17efbe8b52cdd4648fa&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;e6aff0374fde0d154e9d2502551eb771&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;为什么10年寒窗，比不上几代人的努力？可能大多数时候都把原因归结于金钱和权力。可现实是残酷的，当年被打倒的地主老财们，很多又再一次富起来了。人与人的差距，不仅仅是资源的差距，还有认知的差距。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3a7dc49f9edc79202e1aaabb12aa2ed4&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;认知的差距&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;ba091ac1c156f7790f1b659ba1b19364&quot; data-wording=&quot;true&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;ba091ac1c156f7790f1b659ba1b19364&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;无论是《寒门再难出贵子》，还是《UP》系列，都是一个个鲜活的案例。当富家三公子每天读着泰晤士报，畅谈着未来的人生理想，想好了要上牛津、要做律师的时候，穷苦的小伙子们还不知道大学是何物、未来是何物，还在开心地玩着童年游戏。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;886cd6fd913fcd36e61647c2849f325c&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;8d303fa2b0ff2488b388a0371579a170&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;当穷人家的孩子，还在翻山越岭走着艰难的上学路，富家子弟已经可以去弹琴、画画、骑马，综合素质日益提高。当穷人家的孩子还在辛苦读书兼职赚钱的时候，富家子弟已经可以周游世界，看遍世界繁华。即便大家毕业于同一所大学、同一个专业，素质、能力不同，以后的发展机会也是不一样的。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;544c65b5804db4b491464e5151780eb1&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;decf4825ec7e8ab18379c07fd7c6f059&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;穷爸爸给年轻的罗伯特规划的是上大学、进大公司，安安稳稳过一生，而富爸爸给罗伯特规划的是买入资产、卖出负债，开开心心赚大钱。从人生规划的角度看，差距其实早就产生了。富人们对人生的规划远远超越了我们，关键是，大部分时候还比我们更努力。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;54564780543127280038131f692a4fbd&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;906d3dbcde83e491c8c2105984aadcf6&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;时至今日，生活在农村的人们，对孩子们的规划，还是没有清晰的认知，或者想让孩子上大学却不知道如何才能实现。很遗憾地看到，同龄人们已经走上了父辈的老路，下一代的现状又像极了熟悉的童年。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;af5b0b0f4d6d42b26cd7d7e1c4d9c522&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;023d5004107f4d37cae3190ec0ed959e&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;认知会影响人的行为和选择，认知的不同最终一定导致人与人之间巨大的差距。有些人很努力，但是始终无法取得突破，与其说是能力的限制，不如说是认知水平的限制。抛开家庭和智力，即便是上学时看起来相似的同学，工作后取得的成就也有很大的差距。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3dcdec4be83a305fd646fc7ab3b67636&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;可怕的稀缺&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;78b73262b4fea438a3db003dfc11b585&quot; data-wording=&quot;true&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;78b73262b4fea438a3db003dfc11b585&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;去年看了一本很牛逼的书，名字叫《稀缺：我们是如何陷入贫穷和忙碌的》。这本书讲了什么呢？它从贫穷和忙碌具有的共同点出发，在经济学和心理学两个领域进行交叉分析，得出了稀缺这个重要的概念。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;7d938e001feafcf4f7777b269d52eef0&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;888956f1e2f2ec0e5558e643013e679c&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;稀缺是什么呢？当我们拥有太少的东西，无法满足我们的需要，就很容易陷入恶性循环导致处境进一步变糟。当拥有太少的东西，注意力就会大量集中在眼前的事物上，视野就会变的狭窄，长期下去就会变得只关注短期利益，而忽略长期利益。书中用“管窥效应”来形容这种情况，“管窥效应”损害的是认知能力，使我们长期处于低层级认知中。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;55e7a79527abb4b0b59c10d51454332a&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;5a9583cee575a219a46ce8f2fd2de19a&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;每个人的时间和精力是有限的，所以大脑能够关注的、思考的、深入的东西是有限的，手里的钱财同样也是极其有限的，所以花钱能够买到的东西、能办成的事都是有限的。在《稀缺》中提出了“带宽”概念来描述这种限制。“带宽”不够用是产生“管窥效应”的根本原因。长期处于低层级认知中，“带宽”也很难发展，甚至变得更“窄”。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;5f1db6b091fd9dadd317d7cb757e1283&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;4e7ce64340ced7ccbd0f30e6ec3e7606&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;《贫穷的本质》一书中描绘了 10 亿底层人民的生活状态。吃不饱饭还要去买电视机，孩子即使上了学也不爱学习，拒绝体检却花更多钱看病买药，需要钱却不愿意小额贷款，诸如此类的常见现象，其实都和稀缺有很大的关系。稀缺导致大家“挪用”预算，目光短浅，丧失了长期发展的可能性。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;8e6e29f0dab1c65609a55e2321ed0d11&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;突破的希望&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;297bf06071ba1e4ca66bc1f901cc56eb&quot; data-wording=&quot;true&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;297bf06071ba1e4ca66bc1f901cc56eb&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;今年发生了新冠疫情，传统行业出现了倒闭潮。而互联网+相关的行业们，反而出现了新突破，互联网新贵们争相上市套取财富。今年还有一篇 SCI 论文，分析了美国经济现状，得出一个结论：学习科学的人在现在的社会更容易赚到钱，尤其是计算机和医学。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;9d96e63536f7e69f84d0e48685e378f0&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;165050f33faad340ecfad8836b3d1ce4&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;网上不乏读书无用论，然而学习科学知识可能是我们唯一的选择。互联网行业在近些年发展非常快，涌现出非常多的机会，从业者的收入也是水涨船高。腾讯人均 7 万，阿里 P7 年薪百万，拼多多更猛挖阿里的人有的给到了翻倍。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;3d3e2c4d16b57cff3761b018b6fd2425&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;d0ee820647b02c454de4a9cff58c9309&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;富贵险中求，要脱颖而出还是需要注意博弈和冒险。在社会相对稳定的情况下，去做高风险的事情。无论选择什么行业，一定要去大城市。留在大城市是冒险，选择互联网行业是冒险，选择创业也是冒险，但这些冒险背后，才是我们的机会。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;cce069b23d8e59bd4c8ca938bac72769&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;20e56733cee70744b111b7ee78c62f4d&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;很多人不敢舍弃已有的安稳，害怕新事物，害怕面对风险，做起事来总是受到各种思维的约束，不敢越雷池半步。越是不敢冒险，越没有机会。一定要在能承受的范围内，做成功概率最大的事情，不要墨守成规，但是也不要太激进，最好一步一个脚印做渐进式的上升。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;dfa9ababd1a84c458622c85fa28a0eff&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;6bafe786881ac14cbf92a87f9dc8e4ac&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;所以说，普通人逆袭的最大希望，就是学好科学知识，把握住时代的机遇，敢于冒险，在能承受的范围内做成功概率最大的事情。现在是最好的年代，付出就会有回报，坚持下去就还有希望。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;a72870da1e5de887bc4f20360907ae1b&quot;&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;未来的选择&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-lake-id=&quot;961bf841103eff3d64a5d20980b131f5&quot; data-wording=&quot;true&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;961bf841103eff3d64a5d20980b131f5&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;10 年前我因为兴趣选择了计算机，10 年后我认识到选择计算机进入互联网是我唯一的机会。互联网行业是一个新兴的，充满了机遇的行业。这个行业还在快速发展期，历史已经证明砸钱砸不出成功的产品，真正重要的是从业者的思维和想象力。这，便是机会。&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;d7925bb4b6e48c5e1e570fb797868a2f&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;0ce0cc608a90c64b7cf6fd3510bd4ca5&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;互联网越来越成为像水电煤气一样重要的基础设施，也给了很多人积累原始财富的机会。互联网产品边际成本很低，使得从业者有机会分享到丰厚的利润回报。有很多小众软件，可能你都没有听说过，但是开发者已经赚得盆满钵满了。。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;b38b69299e890aa633e5c26a8b642675&quot;&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;f8ff548ea0b99461271e30aac641d24c&quot; data-wording=&quot;true&quot;&gt;&lt;span data-mce-style=&quot;font-size: 12px&quot;&gt;也许，互联网从业者是最有希望跃升为中产的群体之一。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐阅读：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNDE2NTgzNQ==&amp;amp;mid=2247486248&amp;amp;idx=1&amp;amp;sn=ba8ba06d006136e20ec7c14aefe893c5&amp;amp;chksm=9b31528cac46db9a42e8cb410216fdbe05d79f0a4feb719c94ecd86c545bb78d9e471edf5639&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;被黑客攻击了，登录流程要怎么做才安全&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNDE2NTgzNQ==&amp;amp;mid=2247486242&amp;amp;idx=1&amp;amp;sn=51936b434b7cfe88fd073b9f22f77d7d&amp;amp;chksm=9b315286ac46db90c4919d179663d495fd40380d343ea418d085f788ea3d8190d0746cf14b22&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;天天写业务代码的程序员，怎么成为技术大牛&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNDE2NTgzNQ==&amp;amp;mid=2247486236&amp;amp;idx=1&amp;amp;sn=dd9060690257c6f5fd4f6eb22327497b&amp;amp;chksm=9b3152b8ac46dbae00892d68e6c8d8a21ebcbd2e3eb626153929ae42187d3526341fb43d1822&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;走向卓越，领域驱动设计的思维方式&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-lake-id=&quot;2d3df6ebe009895b22060e5a29478d84&quot; data-wording=&quot;true&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.6811352253756261&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/3cfNeMrD2uzUXLTGibiabV4icAibOoeZKOIPBoIJoE8Mng1xZMGOpv0U4zdEI8nb5nKftA9TBLNiaez19lTLORB7hfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;599&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>