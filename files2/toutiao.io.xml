<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>57f56a1e4e38799eb7ab696d3c5f59d1</guid>
<title>我不能没有的 5 个 Vue.js 库</title>
<link>https://toutiao.io/k/l04ibvu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;1.Click Off to Close&lt;/h2&gt;&lt;section&gt;&lt;span&gt;有的时候，我们需要在用户点击元素之外的时候触发一个事件。最常见的用例是当你想通过点击关闭一个下拉框或对话框时。这是一个必不可少的包，几乎在我构建的每个应用中都会用到。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;首选：&lt;strong&gt;vue-clickaway&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.343&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/WYoaOn5t0AOUCI5wdH14guJwREX4cO5L1aIfJpkoe1cGNfW94R5KFticPvwr2lVHuLKChzxpbGU7HMNbiaiaZpt1w/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1000&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;https://github.com/simplesmiler/vue-clickaway&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;我通常会将它安装在 &lt;/span&gt;&lt;code&gt;&lt;span&gt;main.js&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 中，以便在我的应用程序中使用。如果你只在一个或两个页面上使用它，你可能会想单独导入它。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果你真的单独导入，请记住，指令需要在指令下暴露。&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;✅ &lt;code&gt;&lt;span&gt;directives: { onClickaway }&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;而不是组件：&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;❌ &lt;code&gt;&lt;span&gt;components: { onClickaway }&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;使其全局可用（在 &lt;/span&gt;&lt;code&gt;&lt;span&gt;main.js&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 中）：&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; { directive &lt;span&gt;as&lt;/span&gt; onClickaway } &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;vue-clickaway&#x27;&lt;/span&gt;&lt;br/&gt;Vue.directive(&lt;span&gt;&#x27;on-clickaway&#x27;&lt;/span&gt;, onClickaway)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在模板中：&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4517937219730942&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOUCI5wdH14guJwREX4cO5LcD1ejkKgUBFYPyn8gmUb2dKB26G9zk4c2UCHl8xrn7ib5kIGKHcfM6Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;892&quot;/&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;想象一下，我有一个完整的选择框，其中包含 &lt;/span&gt;&lt;code&gt;&lt;span&gt;li&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 元素列表（此处未显示）。上面的按钮用于触发我的自定义选择框项目列表，当我在该元素外点击时，会触发一个关闭选项列表的方法。这比强迫用户始终单击元素右上角处的“X”按钮要好得多。我们只需将以下内容添加到按钮即可获得此功能：&lt;/span&gt;&lt;code&gt;&lt;span&gt;v-on-clickaway = &quot;closeMethodName&quot;&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;注意：&lt;/strong&gt;你应该总是在 &lt;/span&gt;&lt;code&gt;&lt;span&gt;close&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 方法中使用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;vue-clickaway&lt;/span&gt;&lt;/code&gt;&lt;span&gt; ，而不是 &lt;/span&gt;&lt;code&gt;&lt;span&gt;toggle&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 方法。我的意思是这个方法连接到&lt;/span&gt;&lt;code&gt;&lt;span&gt;v-on-clickaway&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 应该是这样的:&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;closeMethod() {&lt;br/&gt;  &lt;span&gt;this&lt;/span&gt;.showSomething = &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;而不是这样：&lt;/span&gt;&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;toggleMethod() {&lt;br/&gt;  &lt;span&gt;this&lt;/span&gt;.showSomething = !&lt;span&gt;this&lt;/span&gt;.showSomething&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;如果你使用了 &lt;/span&gt;&lt;code&gt;&lt;span&gt;toggle&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 方法，那么每当你在该元素外点击时，无论你点击什么，它都会打开，然后一遍遍地关闭该元素。这很可能不是你想要的结果，所以请记住使用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;close&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 方法来防止这种情况发生。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;2.Toasts (Notification Bar)&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;首选：&lt;strong&gt;vue-toastification&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.495&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/WYoaOn5t0AOUCI5wdH14guJwREX4cO5LiaZLPibbq2z5WWickAMysdSiafVfDl8XG6u6OxIYCb1Wvk7ZTCWG9NyKicQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1000&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;https://maronato.github.io/vue-toastification/&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;你有很多toast和类似通知的选择，但我是Maronato的vue-toastification的忠实粉丝。它提供了大量的选项来覆盖你的大部分边界情况，而且样式和动画导致了出色的用户体验，远远超过其他软件包。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Vue-toastification提供了几种在其文档中使用它的方法。你可以在组件级别，全局级别甚至在Vuex内执行此操作，如果你希望根据状态或与服务器相关的操作显示toasts。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;全局使用（在 &lt;/span&gt;&lt;code&gt;&lt;span&gt;main.js&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 中）：&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; Toast &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;vue-toastification&#x27;&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// Toast styles&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&#x27;vue-toastification/dist/index.css&#x27;&lt;/span&gt;&lt;br/&gt;Vue.use(Toast, {&lt;br/&gt;  &lt;span&gt;transition&lt;/span&gt;: &lt;span&gt;&#x27;Vue-Toastification__bounce&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;maxToasts&lt;/span&gt;: &lt;span&gt;3&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;newestOnTop&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;position&lt;/span&gt;: &lt;span&gt;&#x27;top-right&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;timeout&lt;/span&gt;: &lt;span&gt;2000&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;closeOnClick&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;pauseOnFocusLoss&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;pauseOnHover&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;draggable&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;draggablePercent&lt;/span&gt;: &lt;span&gt;0.7&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;showCloseButtonOnHover&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;hideProgressBar&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;closeButton&lt;/span&gt;: &lt;span&gt;&#x27;button&#x27;&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;icon&lt;/span&gt;: &lt;span&gt;true&lt;/span&gt;,&lt;br/&gt;  &lt;span&gt;rtl&lt;/span&gt;: &lt;span&gt;false&lt;/span&gt;&lt;br/&gt;})&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section&gt;&lt;span&gt;你可以在每个组件中单独控制样式，但在上面的案例中，我通过将它导入 &lt;/span&gt;&lt;code&gt;&lt;span&gt;main.js&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，然后在那里设置我想使用的选项，使它在我的应用程序中到处可用，这使我不必每次都编写相同的选项属性。Vue-toastification有一个很好的在线演示，在这里你可以看到每个选项属性的结果，只需要复制粘贴你想要的选项，就像我上面做的那样。&lt;/span&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;选项1：在组件（模板）中使用Toast&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;lt;&lt;span&gt;button&lt;/span&gt; @&lt;span&gt;click&lt;/span&gt;=&lt;span&gt;&quot;showToast&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Show toast&lt;span&gt;&amp;lt;/&lt;span&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.2710997442455243&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOUCI5wdH14guJwREX4cO5LEmRKwLvrtluCHtfmE9F1IQ5SWMlyMS9Cz6MuAJp1GQpkgPKDfqD7XQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1173&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;选项2：在Vuex action中发现错误（或成功）时调用Toast&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4110738255033557&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOUCI5wdH14guJwREX4cO5Lb26KUYk2p31UlC5cjOHiaqOzOSEGOyU3Rr2micziaia2FKq69Oft6x8ibtw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1192&quot;/&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;你只需将 &lt;/span&gt;&lt;code&gt;&lt;span&gt;.error&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 改为 .success&lt;/span&gt;&lt;code&gt;&lt;span&gt;，&lt;/span&gt;&lt;/code&gt;&lt;span&gt;.info&lt;/span&gt;&lt;code&gt;&lt;span&gt;，&lt;/span&gt;&lt;/code&gt;&lt;span&gt;.warning 即可更改所需的Toast类型，也可以将其完全删除以作为默认的Toast通知。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Toasts可以让你根据实时状态的变化或者发生了不可预见的错误来显示消息，这大大改善了用户的体验。Toasts提供了比模态或丑陋的提示框更好的视觉指示，例如，用户必须提供一个额外的点击来关闭。用户会很感激你给他们一个视觉上的提示，让他们知道出了什么问题，防止他们盯着屏幕茫然地等待一些永远不会发生的事情。确认他们执行的操作是否成功完成也很有用。&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;mpcpc js_editor_cpcad=&quot;&quot; class=&quot;js_cpc_area cpc_iframe&quot; src=&quot;/cgi-bin/readtemplate?t=tmpl/cpc_tmpl#1603699772392&quot; data-category_id_list=&quot;48|26|49|1|55|8|47|35|5|6|7|24|37|11|50|54|53|52|42|29|43|16|17|51|36&quot; data-id=&quot;1603699772392&quot;/&gt;&lt;span&gt;3.Tables&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;首选：&lt;strong&gt;vue-good-table&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.43&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOUCI5wdH14guJwREX4cO5Lial31Wn8ggKf3l3spzxP2Cd34YIKYpforxficM4te6bAM80diayIEw5dQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1400&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;https://xaksis.github.io/vue-good-table&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;表格是许多Web应用程序的重要组成部分，选择错误的表格会让你陷入无尽的痛苦之中。尝试了很长的包选项列表后，我相信vue-good-table将解决你大部分的表需求。它不仅仅是为了好玩才叫“good-table”。它真的很好，提供了更多的选择和功能，超出了你的能力范围。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在以下情况下，我将 &lt;/span&gt;&lt;code&gt;&lt;span&gt;:rows&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 数据绑定到名为 &lt;/span&gt;&lt;code&gt;&lt;span&gt;getOrderHistory&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的Vuex getter。&lt;/span&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7504159733777038&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOUCI5wdH14guJwREX4cO5L6AjNcRAO3ibDHlA0xcx3teWr1tPQpQUc4HMhQSoATTy5818burKRcZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1202&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在本地 &lt;/span&gt;&lt;code&gt;&lt;span&gt;data()&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 中定义我的列：&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.1537822111388196&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOUCI5wdH14guJwREX4cO5L53rJJoEtdhTLX2jRicJFxqmhmy3AdCFUcY5NfeYKAgohEOcPyUGb0Lw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1203&quot;/&gt;&lt;/figure&gt;&lt;section&gt;&lt;code&gt;&lt;span&gt;label&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 是显示的列标题，而 &lt;/span&gt;&lt;code&gt;&lt;span&gt;field&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 是我在Vuex getter中绑定的数据。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在上图中，我还使用了vue-good-table的一些自定义选项，比如设置我的日期的输入和输出格式(这让我可以把服务器提供的一个很长的时间戳改成对我的用户来说更易读的东西)。我还使用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;formatFn&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 来格式化我的价格，调用了一个我命名为 &lt;/span&gt;&lt;code&gt;&lt;span&gt;toLocale&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的单独方法，然后我通过绑定 &lt;/span&gt;&lt;code&gt;&lt;span&gt;tdClass&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 到我在 local &lt;/span&gt;&lt;code&gt;&lt;span&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 中设置的类来定制每个单元格的外观。Vue-good-table确实内置了无穷的可定制性，他们已经覆盖了非常广泛的边缘案例。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Vue-good-table还可以与自定义模板配合使用，因此你可以轻松地将按钮，选择框或您喜欢的其他任何东西注入到表格的单元格中。为此，你只需使用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;v-if&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 定义应将其注入的位置。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;要添加另一个自定义列，只需在你的 &lt;/span&gt;&lt;code&gt;&lt;span&gt;v-if&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 标签后面添加一个 &lt;/span&gt;&lt;code&gt;&lt;span&gt;v-else-if&lt;/span&gt;&lt;/code&gt;&lt;span&gt;（在上面的例子中是一个跨度），然后在那里添加第二个自定义模板的逻辑。无论你需要什么，vue-good-table都能满足你的需求。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;4.Date Picker&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;首选：&lt;strong&gt;vue2-datepicker&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.421&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/WYoaOn5t0AOUCI5wdH14guJwREX4cO5LKxHzrMFTuW7ZKibHYA9BE47iabFiaXmD8aUQYdA1kH137ibU6EhsBqlKgA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1000&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;https://mengxiong10.github.io/vue2-datepicker/index.html#Basic&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;啊，日期选择器，这是许多应用程序的重要组成部分。在这个列表中，日期选择器的选择比其他任何东西都多，但Mengxiong打造的vue2-datepicker是我不断回归的一个选择。它的风格简单，提供了广泛的选择日期和日期范围的选项，并被包装在一个光滑和用户友好的UI中。它甚至支持i18n语言和日期格式的本地化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;注意：&lt;/strong&gt;尽管包名为vue2-datepicker，但将这个包(或这里列出的其他包)添加到Vue 3.0应用程序中应该没有问题。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在组件或视图中导入，使其可以使用。&lt;/span&gt;&lt;/section&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; DatePicker &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;vue2-datepicker&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;// styles&lt;/span&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&#x27;vue2-datepicker/index.css&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在模板中：&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.42907385697538103&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOUCI5wdH14guJwREX4cO5Ljel0nBuHBhxUycYJtCQoh2MoaWN8gLYdvtSk5Dse68orTpbmsRPRBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;853&quot;/&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;在这里，我使用的是 &lt;/span&gt;&lt;code&gt;&lt;span&gt;range&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 选项，允许用户选择日期范围，并将用户输入的日期 &lt;/span&gt;&lt;code&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 以一个名为 &lt;/span&gt;&lt;code&gt;&lt;span&gt;dateRange&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 的数据值绑定。然后，vue-good-table（如下）使用 &lt;/span&gt;&lt;code&gt;&lt;span&gt;dateRange&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 对我的表的结果进行排序。我还使用事件选项 &lt;/span&gt;&lt;code&gt;&lt;span&gt;@clear&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 和 &lt;/span&gt;&lt;code&gt;&lt;span&gt;@input&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 来触发重置表（resetList）或发送服务器请求表数据（searchDate）的方法。Vue2-datepicker提供了更多的选项和事件，以方便你的使用，但这些是我发现自己最经常使用的。&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;5.User Ratings&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;首选：&lt;strong&gt;vue-star-rating&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.041&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/WYoaOn5t0AOUCI5wdH14guJwREX4cO5LKiakCO1BTJZzbOIg3Hlias1XwvjXord6CVlN3TqcO8I3ibqwoowKIrFvA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1000&quot;/&gt;&lt;figcaption&gt;&lt;span&gt;https://github.com/craigh411/vue-star-rating&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;section&gt;&lt;span&gt;虽然你可能不会在每个项目中都使用这个功能，但对于任何需要用户评级元素的网站（比如Amazon或Rotten Tomatoes），vue-star-rating是我的首选。自己创建看似是一件微不足道的事情，但当你进入细节后，星级评定很快就会变得比你预期的要复杂。如果需要特殊功能，它可以让你使用自定义SVG形状，并且可以轻松自定义大小，间距和颜色。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;通过这些选项，可以很容易地将用户选择的评级 &lt;/span&gt;&lt;code&gt;&lt;span&gt;v-model&lt;/span&gt;&lt;/code&gt;&lt;span&gt; 绑定到任何你想使用的地方，你可以通过一个prop将评级设置为可更改或只读。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果你发现需要更多选择，请查看创建者的扩展软件包vue-rate-it。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在模板中（带有选项）：&lt;/span&gt;&lt;/section&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.39558417663293466&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOUCI5wdH14guJwREX4cO5LiaLSVgFBdFosIKuKBgjMOfKK2CFf9xDiaIOMG1YfkprLicjgA1VmgI2lg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1087&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;将其导入到组件或视图中：&lt;/span&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3274745605920444&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOUCI5wdH14guJwREX4cO5LzDdjibic2Sd4GjxjS7ia6Z99lsQy6Po1FBEOSe4hh5PGemCLltkg8mxow/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1081&quot;/&gt;&lt;/figure&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;推荐阅读&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5555555555555556&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;900&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/WYoaOn5t0AOPiaqWez1sKrh7Hffjoia7y8zkhic56DPic8FsoheTZljsrr5rpFMFcp7OgSZoOuuLKdXkWmhKibHia0fQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4d657c658db719b027daa896b7a93b61</guid>
<title>Swift 编译慢？请看这里，全套开源</title>
<link>https://toutiao.io/k/ihas21f</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;article class=&quot;markdown-body entry-content container-lg&quot; itemprop=&quot;text&quot;&gt;&lt;h3&gt;&lt;a id=&quot;user-content-更新&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#更新&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;更新&lt;/h3&gt;

&lt;h1&gt;&lt;a id=&quot;user-content-cocoapods-imy-bin&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#cocoapods-imy-bin&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;Cocoapods-imy-bin&lt;/h1&gt;
&lt;p&gt;关于 插件具体的架构部署实践和更详细的资源，可以参考&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/5eccceb9f265da76f30e4e13&quot; rel=&quot;nofollow&quot;&gt;iOS编译速度如何稳定提高10倍以上&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/5f066cfa5188252e893a136e&quot; rel=&quot;nofollow&quot;&gt;iOS美团同款&quot;ZSource&quot;二进制调试实现&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/6850037272415813645&quot; rel=&quot;nofollow&quot;&gt;iOS教你如何像RN一样实时编译&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/su350380433/cocoapods-imy-bin-demo&quot;&gt;OC-Demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/su350380433/Swift-OC-Demo&quot;&gt;Swift-OC-Demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/6890419459639476237&quot; rel=&quot;nofollow&quot;&gt;Swift编译支持&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-特色&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#特色&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;特色：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;无入侵、无感知、不影响现有业务，不影响现有代码框架、完全绿色产品~&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;轻量级，只要项目能编译通过就能使用，无视组件化、无视耦合&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完全自动化，一键使用、无需手动操作&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一步步教你使用，新手也能欢乐玩转&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;提供几个特色服务&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持 使用与不使用 use_frameworks!&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;少数支持swift项目二进制化编译的开源项目之一&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-一概要&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#一概要&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;一、概要&lt;/h2&gt;
&lt;p&gt;cocoapods-imy-bin功能点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;组件二进制化，&lt;code&gt;无入侵式&lt;/code&gt;支持组件二进制化，完全自动化，无需手动操作。致力于解决Ci打包速度慢、研发编译慢等编译问题。&lt;/li&gt;
&lt;li&gt;本地配置文件 - &lt;code&gt;Podfile_local&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;二进制源码调试&lt;code&gt;pod bin code&lt;/code&gt;，类似&lt;a href=&quot;https://juejin.im/post/6847897745987125262&quot; rel=&quot;nofollow&quot;&gt;美团 iOS 工程 zsource 命令背后的那些事儿&lt;/a&gt;的效果。&lt;/li&gt;
&lt;li&gt;命令快捷键&lt;code&gt;pod bin imy&lt;/code&gt;，如游戏快捷键，根据配置会在特定目录执行特定命令（如任意终端目录下，执行某个特定目录的pod update --no-repo-update命令），减少其他繁琐操作。支持任意个快捷键。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;cocoapods-imy-bin插件所关联的组件二进制化策略：&lt;/p&gt;
&lt;p&gt;预先将打包成 &lt;code&gt;.a&lt;/code&gt;  的组件保存到静态服务器上，并在 &lt;code&gt;install&lt;/code&gt; 时，去下载组件对应的二进制版本，以减少组件编译时间，达到加快 App 打包、组件发布等操作的目的。&lt;/p&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-二准备工作&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#二准备工作&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;二、准备工作&lt;/h2&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-1安装插件&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#1安装插件&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;1、安装插件&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;&lt;pre&gt;sudo gem install cocoapods-imy-bin&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-三使用二进制组件&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#三使用二进制组件&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;三、使用二进制组件&lt;/h2&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-1环境搭建&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#1环境搭建&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;1、环境搭建&lt;/h3&gt;
&lt;br/&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/su350380433/cocoapods-imy-bin-demo&quot;&gt;环境搭建详细教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用二进制时，本插件需要提供以下资源：&lt;/p&gt;

&lt;h3&gt;&lt;a id=&quot;user-content-2初始化插件&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#2初始化插件&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;2、初始化插件&lt;/h3&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;&lt;pre&gt;xx:Demo slj$ pod bin init

======  dev 环境 ========

开始设置二进制化初始信息.
所有的信息都会保存在 /Users/slj/.cocoapods/bin_dev.yml 文件中.
%w[bin_dev.yml bin_debug_iphoneos.yml bin_release_iphoneos.yml] 
你可以在对应目录下手动添加编辑该文件. 文件包含的配置信息样式如下：

---
configuration_env: dev
code_repo_url: git@github.com:su350380433/example_spec_source.git
binary_repo_url: git@github.com:su350380433/example_spec_bin_dev.git
binary_download_url: http://localhost:8080/frameworks/%s/%s/zip
download_file_type: zip


编译环境
可选值：[ dev / debug_iphoneos / release_iphoneos ]
旧值：dev&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;按提示输入&lt;code&gt;所属环境&lt;/code&gt;、源码私有源、二进制私有源、二进制下载地址、下载文件类型后，插件就配置完成了。其中 &lt;code&gt;binary_download_url&lt;/code&gt; 需要预留组件名称与组件版本占位符，插件内部会依次替换 &lt;code&gt;%s&lt;/code&gt; 为相应组件的值。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cococapods-imy-bin&lt;/code&gt; 也支持从 url 下载配置文件，方便对多台机器进行配置：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;&lt;pre&gt;➜  &lt;span class=&quot;pl-k&quot;&gt;~&lt;/span&gt; pod bin init --bin-url=https://github.com/su350380433/cocoapods-imy-bin-configs/raw/master/bin_dev.yml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置文件模版内容如下，根据不同团队的需求定制即可：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;&lt;pre&gt;---
configuration_env: dev
code_repo_url: git@github.com:su350380433/example_spec_source.git
binary_repo_url: git@github.com:su350380433/example_spec_bin_dev.git
binary_download_url: http://localhost:8080/frameworks/%s/%s/zip
download_file_type: zip
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置时，不需要手动添加源码和二进制私有源的 repo，插件在找不到对应 repo 时会主动 clone。&lt;/p&gt;
&lt;p&gt;记得启动 &lt;code&gt;sudo mongod&lt;/code&gt;服务，静态资源服务。&lt;/p&gt;
&lt;br/&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-四制作二进制组件&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#四制作二进制组件&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;四、制作二进制组件&lt;/h2&gt;
&lt;br/&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/MeetYouDevs/cocoapods-imy-bin/tree/master/%E6%BC%94%E7%A4%BA%E8%A7%86%E9%A2%91&quot;&gt;视频演示&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-1制作命令&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#1制作命令&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;1、制作命令&lt;/h3&gt;
&lt;p&gt;可以直接使用插件的 &lt;code&gt;pod bin auto&lt;/code&gt;命令，在插件初始化配置完成后，目录下只要有包含podspec文件，根据podspec文件的version版本号会自动化执行build、组装二进制组件、制作二进制podspec、上传二进制文件、上传二进制podspec到私有源仓库。&lt;/p&gt;

&lt;p&gt;带上&lt;code&gt;—all-make&lt;/code&gt;参数会把当前组件所依赖的组件都自动化制作成二进制组件。&lt;/p&gt;

&lt;p&gt;pod bin local 是配合其他三方编译产物的命令，需要配置编译产物的目录。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BinArchive.json&lt;/code&gt;是制作二进制的一些配置项，放在项目跟目录下：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-json&quot;&gt;&lt;pre&gt;{
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;//&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;archive-white-pod-list 不制作二进制白名单，&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;archive-white-pod-list&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; : [
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;YYTargetDemo&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;YYModel&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ],
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;//&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;ignore-git-list 不制作二进制 所属git白名单，&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;ignore-git-list&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;git@gitlab.xxx.com:Github-iOS&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ],
     &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;//&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;ignore-http-list 不制作二进制 所属https白名单，&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;ignore-http-list&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: [
        &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;https://gitlab.xxx.com/Github-iOS&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
    ],
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;//&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;xcode_build_path 设置编译缓存完整路径, 默认地址如下&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
    &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;xcode_build_path&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; : &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;xcode-build/Build/Intermediates.noindex/ArchiveIntermediates/#{target_name}/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/&lt;span class=&quot;pl-pds&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;,
}&lt;/pre&gt;&lt;/div&gt;
&lt;br/&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-2-二进制podspec&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#2-二进制podspec&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;2. 二进制Podspec&lt;/h3&gt;
&lt;p&gt;通过&lt;code&gt;pod bin auto&lt;/code&gt;和&lt;code&gt;pod bin local&lt;/code&gt;二进制Podspec 会自动生成、上传，无需关心。&lt;/p&gt;
&lt;br/&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-3查看结果&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#3查看结果&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;3、查看结果&lt;/h3&gt;
&lt;p&gt;二进制存储服务：&lt;a href=&quot;http://localhost:8080/frameworks/&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080/frameworks/&lt;/a&gt;（默认本地8080端口）&lt;/p&gt;
&lt;p&gt;二进制私有源参考：&lt;a href=&quot;https://github.com/su350380433/example_spec_bin_dev&quot;&gt;https://github.com/su350380433/example_spec_bin_dev&lt;/a&gt;（自定义）&lt;/p&gt;
&lt;br/&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-4使用二进制&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#4使用二进制&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;4、使用二进制&lt;/h3&gt;
&lt;br/&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/MeetYouDevs/cocoapods-imy-bin/tree/master/%E6%BC%94%E7%A4%BA%E8%A7%86%E9%A2%91&quot;&gt;视频演示&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在Podfile文件中，加入这两行代码，对已经制作二进制的就会生效，自动转换二进制组件依赖。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&#x27;cocoapods-imy-bin&#x27;&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;use_binaries!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br/&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-五扩展功能&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#五扩展功能&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;五、扩展功能&lt;/h2&gt;
&lt;br/&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-1本地配置文件---podfile_local&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#1本地配置文件---podfile_local&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;1、本地配置文件 - Podfile_local&lt;/h3&gt;
&lt;p&gt;本地组件配置文件 Podfile_local，目前已支持Podfile下的大部分功能，可以把一些本地配置的语句放到Podfile_local。&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://raw.githubusercontent.com/MeetYouDevs/cocoapods-imy-bin/master/img/Podfile_local.png&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/MeetYouDevs/cocoapods-imy-bin/master/img/Podfile_local.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;场景:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不希望把本地采用的源码/二进制配置、本地库传到远程仓库。&lt;/li&gt;
&lt;li&gt;避免直接修改Podfile文件，引起更新代码时冲突、或者误提交。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如Podfile本地库的写法：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;YYModel&lt;/span&gt; &lt;span class=&quot;pl-pds&quot;&gt;:path&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&#x27;../&#x27;&lt;/span&gt; &lt;span class=&quot;pl-c&quot;&gt;#提交的时候往往要修改回来才提交，操作繁琐&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用法：&lt;/p&gt;
&lt;p&gt;在与Podfile同级目录下，新增一个&lt;code&gt;Podfile_local&lt;/code&gt;文件&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-c&quot;&gt;#target &#x27;Seeyou&#x27; do 不同的项目注意修改下Seeyou的值&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;#:path =&amp;gt; &#x27;../IMYYQHome&#x27;,根据实际情况自行修改，与之前在podfile写法一致&lt;/span&gt;


 &lt;span class=&quot;pl-en&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&#x27;cocoapods-imy-bin&#x27;&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;#是否启用二进制插件，想开启把下面注释去掉&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;# use_binaries! &lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;#设置使用【源码】版本的组件。&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;#set_use_source_pods [&#x27;YYKit&#x27;,&#x27;SDWebImaage&#x27;]&lt;/span&gt;

&lt;span class=&quot;pl-c&quot;&gt;#需要替换Podfile里面的组件才写到这里&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;#在这里面的所写的组件库依赖，默认切换为【源码】依赖&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&#x27;Seeyou&#x27;&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;#本地库引用&lt;/span&gt;
&lt;span class=&quot;pl-c&quot;&gt;#pod &#x27;YYModel&#x27;, :path =&amp;gt; &#x27;../YYModel&#x27;&lt;/span&gt;

  &lt;span class=&quot;pl-c&quot;&gt;#覆盖、自定义组件&lt;/span&gt;
  &lt;span class=&quot;pl-c&quot;&gt;#pod &#x27;YYCache&#x27;, :podspec =&amp;gt; &#x27;http://覆盖、自定义/&#x27;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;以前的&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;update&lt;/span&gt; --&lt;span class=&quot;pl-en&quot;&gt;no&lt;/span&gt;-&lt;span class=&quot;pl-en&quot;&gt;repo&lt;/span&gt;-&lt;span class=&quot;pl-en&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;命令加个前缀&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;`bin`&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;变成&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;&lt;pre&gt;pod bin update --no-repo-update &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;支持 pod install/update 命令参数&lt;/p&gt;
&lt;p&gt;并将其加入 .gitignore ，再也不用担心我误提交或者冲突了，Podfile_local 中的配置选项优先级比 Podfile 高，支持和 Podfile 相同的配置语句，同时支持&lt;strong&gt;pre_install&lt;/strong&gt; or &lt;strong&gt;post_install&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果您不习惯Podfile_local的使用方式，可以把命令写在Podfile里面，pod时不需要加bin，依旧是 pod update/install。&lt;/p&gt;
&lt;br/&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-2二进制源码调试&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#2二进制源码调试&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;2、二进制源码调试&lt;/h3&gt;
&lt;br/&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/MeetYouDevs/cocoapods-imy-bin/tree/master/%E6%BC%94%E7%A4%BA%E8%A7%86%E9%A2%91&quot;&gt;视频演示&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在项目根目录下，输入命令:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;YYModel&lt;/code&gt;为需要源码调试的组件库名称。成功之后像平时一样单步调试，控制台打印变量。让我们同时拥有使用二进制的便利和源码调试的能力。&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;&lt;pre&gt; $ pod bin code --help                                                                   [11:37:50]
Usage:

    $ pod bin code [NAME]

      通过将二进制对应源码放置在临时目录中，让二进制出现断点时可以跳到对应的源码，方便调试。 在不删除二进制的情况下为某个组件添加源码调试能力，多个组件名称用空格分隔

Options:

    --all-clean   删除所有已经下载的源码
    --clean       删除所有指定下载的源码
    --list        展示所有一级下载的源码以及其大小
    --source      源码路径，本地路径,会去自动链接本地源码&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果与演示参考&lt;a href=&quot;https://juejin.im/post/5eccceb9f265da76f30e4e13#heading-48&quot; rel=&quot;nofollow&quot;&gt;链接1&lt;/a&gt;、&lt;a href=&quot;https://github.com/MeetYouDevs/cocoapods-imy-bin/tree/master/%E6%BC%94%E7%A4%BA%E8%A7%86%E9%A2%91&quot;&gt;视频&lt;/a&gt;&lt;/p&gt;
&lt;br/&gt;
&lt;h3&gt;&lt;a id=&quot;user-content-3快捷键命令&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#3快捷键命令&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;3、快捷键命令&lt;/h3&gt;
&lt;br/&gt;
&lt;p&gt;在任意的终端执行命令，都能执行特定目录下特定命令&lt;/p&gt;
&lt;p&gt;使用命令：&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;&lt;pre&gt;pod bin imy 2    &lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;2 是自定义的快捷键&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用场景:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 在任意目录下，执行项目A的pod update --no-repo-update命令
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;命令快捷键配置&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;&lt;pre&gt; $ pod bin inithk                                                                        [11:37:58]

开始设置快捷键 pod bin imy.
所有的信息都会保存在 /Users/ci/.cocoapods/hot_key_1.yml 文件中.
%w[hot_key.yaml] 
你可以在对应目录下手动添加编辑该文件. 文件包含的配置信息样式如下：

---
hot_key_index: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&#x27;&lt;/span&gt;1&lt;span class=&quot;pl-pds&quot;&gt;&#x27;&lt;/span&gt;&lt;/span&gt;
hot_key_dir: &lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&#x27;&lt;/span&gt;/User/ci/自定义目录&lt;span class=&quot;pl-pds&quot;&gt;&#x27;&lt;/span&gt;&lt;/span&gt;
hot_key_cmd: pod bin update --no-repo-update


快捷键
可选值：[ 1 / 2 / 3... ]
旧值：1 &lt;/pre&gt;&lt;/div&gt;
&lt;br/&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-六-dsl参数解释&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#六-dsl参数解释&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;六、 DSL参数解释&lt;/h2&gt;
&lt;p&gt;首先，开发者需要在 Podfile 中需要使用 &lt;code&gt;plugin &#x27;cocoapods-imy-bin&#x27;&lt;/code&gt; 语句引入插件&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&#x27;cocoapods-imy-bin&#x27;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;顺带可以删除 Podfile 中的 source ，因为插件内部会自动帮你添加两个私有源。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cocoapods-bin &lt;/code&gt;插件提供二进制相关的配置语句有 &lt;code&gt;use_binaries!&lt;/code&gt;、&lt;code&gt;use_binaries_with_spec_selector!&lt;/code&gt; 以及 &lt;code&gt;set_use_source_pods&lt;/code&gt;，下面会分别介绍。&lt;/p&gt;
&lt;h5&gt;&lt;a id=&quot;user-content-use_binaries&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#use_binaries&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;use_binaries!&lt;/h5&gt;
&lt;p&gt;全部组件使用二进制版本。&lt;/p&gt;
&lt;p&gt;支持传入布尔值控制是否使用二进制版本，比如 DEBUG 包使用二进制版本，正式包使用源码版本，Podfile 关联语句可以这样写：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;use_binaries!&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&#x27;DEBUG&#x27;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;nil?&lt;/span&gt; || &lt;span class=&quot;pl-c1&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&#x27;DEBUG&#x27;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt; == &lt;span class=&quot;pl-s&quot;&gt;&#x27;true&#x27;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id=&quot;user-content-set_use_source_pods&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#set_use_source_pods&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;set_use_source_pods&lt;/h5&gt;
&lt;p&gt;设置使用源码版本的组件。&lt;/p&gt;
&lt;p&gt;实际开发中，可能需要查看 YYModel 组件的源码，这时候可以这么设置：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;set_use_source_pods&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&#x27;YYModel&#x27;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果 CocoaPods 版本为 1.5.3 ，终端会输出以下内容，表示 YYModel 的参照源从二进制私有源切换到了源码私有源：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;Analyzing&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;dependencies&lt;/span&gt;
&lt;span class=&quot;pl-en&quot;&gt;Fetching&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;podspec&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;`A`&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;`../`&lt;/span&gt;
&lt;span class=&quot;pl-v&quot;&gt;Downloading&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;dependencies&lt;/span&gt;
&lt;span class=&quot;pl-v&quot;&gt;Using&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;/&gt;&lt;span class=&quot;pl-c1&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;pl-v&quot;&gt;Installing&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;YYModel&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot;&gt;4.2&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;changed&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;`git@git.xxxxxx.net:ios/cocoapods-spec.git`&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;`git@git.xxxxxx.net:ios/cocoapods-spec-binary.git`&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;pl-v&quot;&gt;Generating&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;Pods&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;project&lt;/span&gt;
&lt;span class=&quot;pl-v&quot;&gt;Integrating&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;project&lt;/span&gt;
&lt;span class=&quot;pl-v&quot;&gt;Sending&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;stats&lt;/span&gt;
&lt;span class=&quot;pl-v&quot;&gt;Pod&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;installation&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;complete!&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;There&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;pl-v&quot;&gt;Podfile&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;pods&lt;/span&gt; &lt;span class=&quot;pl-en&quot;&gt;installed&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id=&quot;user-content-use_binaries_with_spec_selector&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#use_binaries_with_spec_selector&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;use_binaries_with_spec_selector!&lt;/h5&gt;
&lt;p&gt;过滤出需要使用二进制版本组件。&lt;/p&gt;
&lt;p&gt;假如开发者只需要 &lt;code&gt;YYModel&lt;/code&gt; 的二进制版本，那么他可以在 Podfile 中添加以下代码：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;use_binaries_with_spec_selector!&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;pl-s1&quot;&gt;spec&lt;/span&gt;|
  &lt;span class=&quot;pl-s1&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;name&lt;/span&gt; == &lt;span class=&quot;pl-s&quot;&gt;&#x27;YYModel&#x27;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;需要注意的是，如果组件有 subspec ，使用组件名作为判断条件应如下&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;use_binaries_with_spec_selector!&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;pl-s1&quot;&gt;spec&lt;/span&gt;|
  &lt;span class=&quot;pl-s1&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;start_with?&lt;/span&gt; == &lt;span class=&quot;pl-s&quot;&gt;&#x27;组件名&#x27;&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果像上个代码块一样，&lt;strong&gt;直接对比组件名，则插件会忽略此组件的所有 subspec，导致资源拉取错误&lt;/strong&gt;，这种场景下，最好通过 &lt;code&gt;set_use_source_pods&lt;/code&gt; 语句配置依赖。&lt;/p&gt;
&lt;p&gt;一个实际应用是，三方组件采用二进制版本，团队编写的组件依旧采用源码版本。如果三方组件都在 &lt;code&gt;cocoapods-repo&lt;/code&gt; 组下，就可以使用以下代码过滤出三方组件：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;use_binaries_with_spec_selector!&lt;/span&gt; &lt;span class=&quot;pl-k&quot;&gt;do&lt;/span&gt; |&lt;span class=&quot;pl-s1&quot;&gt;spec&lt;/span&gt;|
 &lt;span class=&quot;pl-s1&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;pl-c1&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s1&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;source&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;pl-s1&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&#x27;git&#x27;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;pl-s1&quot;&gt;git&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;pl-s1&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-en&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pl-s&quot;&gt;&#x27;cocoapods-repo&#x27;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;pl-k&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id=&quot;user-content-切换devdebug_iphoneosrelease_iphoneos环境初始化设置&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#切换devdebug_iphoneosrelease_iphoneos环境初始化设置&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;切换Dev/Debug_iPhoneos/Release_iPhoneos环境初始化设置&lt;/h5&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;dev 初始化插件配置 默认dev环境&lt;/span&gt;
pod bin init --bin-url=https://gitlab.xxx.com/cocoapods-imy-bin-config/raw/master/bin_dev.yml

&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;Debug_iPhoneos 初始化插件配置&lt;/span&gt;
pod bin init --bin-url=https://gitlab.xxx.com/cocoapods-imy-bin-config/raw/master/bin_debug_iphoneos.yml


&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;release_iPhoneos 初始化插件配置&lt;/span&gt;
pod bin init --bin-url=https://gitlab.xxx.com/cocoapods-imy-bin-config/raw/master/bin_release_iphoneos.yml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用时在podfile 或者 podfile_local指定设置&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-shell&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-c&quot;&gt;&lt;span class=&quot;pl-c&quot;&gt;#&lt;/span&gt;在podfile 或者 podfile_local 文件下加这句话&lt;/span&gt;
set_configuration_env(&lt;span class=&quot;pl-s&quot;&gt;&lt;span class=&quot;pl-pds&quot;&gt;&#x27;&lt;/span&gt;debug_iphoneos&lt;span class=&quot;pl-pds&quot;&gt;&#x27;&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id=&quot;user-content-其他设置&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#其他设置&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;其他设置&lt;/h5&gt;
&lt;p&gt;插件默认开启多线程下载组件资源，如果要禁用这个功能，Podfile 添加以下代码即可：&lt;/p&gt;
&lt;div class=&quot;highlight highlight-source-ruby&quot;&gt;&lt;pre&gt;&lt;span class=&quot;pl-en&quot;&gt;install!&lt;/span&gt; &lt;span class=&quot;pl-s&quot;&gt;&#x27;cocoapods&#x27;&lt;/span&gt;&lt;span class=&quot;pl-kos&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;pl-pds&quot;&gt;install_with_multi_threads&lt;/span&gt;: &lt;span class=&quot;pl-c1&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;pl-kos&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br/&gt;
&lt;h2&gt;&lt;a id=&quot;user-content-七感谢&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#七感谢&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;七、感谢&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/tripleCC/cocoapods-bin&quot;&gt;cocoapods-bin&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tech.meituan.com/2019/08/08/the-things-behind-the-ios-project-zsource-command.html&quot; rel=&quot;nofollow&quot;&gt;美团 iOS 工程 zsource 命令背后的那些事儿&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id=&quot;user-content-您有什么更好的想法可以提出来我们一起来实现共创一个强大的工具平台同时也欢迎给我们提pr&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#您有什么更好的想法可以提出来我们一起来实现共创一个强大的工具平台同时也欢迎给我们提pr&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;您有什么更好的想法，可以提出来，我们一起来实现，共创一个强大的工具平台，同时也欢迎给我们提PR。&lt;/h4&gt;
&lt;p&gt;微信号：su1231235&lt;/p&gt;
&lt;/article&gt;
      &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>29259e0f21e815f59cdb5b9a80b0d7df</guid>
<title>Kafka 浅谈：什么是 AR、OSR、ISR、HW 和 LEO 以及之间的关系</title>
<link>https://toutiao.io/k/wyi8d8m</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;content post-body&quot;&gt;&lt;h3 id=&quot;kafka-多副本&quot;&gt;&lt;a href=&quot;#kafka-多副本&quot; class=&quot;headerlink&quot; title=&quot;kafka 多副本&quot;/&gt;kafka 多副本&lt;/h3&gt;&lt;p&gt;Kafka 为分区引入了多副本（Replica）机制，通过增加副本数量可以提升容灾能力。同一分区的不同副本中保存的是相同的消息（当然在同一时刻，副本之间可能并非完全一样），副本之间是“一主多从”的关系，其中leader副本负责处理读写请求，follower副本只负责与leader副本的消息同步。副本处于不同的broker中，当leader副本出现故障时，从follower副本中重新选举新的leader副本对外提供服务。Kafka通过多副本机制实现了故障的自动转移，当Kafka集群中某个broker失效时仍然能保证服务可用。&lt;/p&gt;
&lt;p&gt;Kafka集群中有4个broker，某个主题中有3个分区，且副本因子（即副本个数）也为3，如此每个分区便有1个leader副本和2个follower副本。生产者和消费者只与leader副本进行交互，而follower副本只负责消息的同步，很多时候follower副本中的消息相对leader副本而言会有一定的滞后。&lt;/p&gt;
&lt;p&gt;Kafka 消费端也具备一定的容灾能力。Consumer 使用拉（Pull）模式从服务端拉取消息，并且保存消费的具体位置，当消费者宕机后恢复上线时可以根据之前保存的消费位置重新拉取需要的消息进行消费，这样就不会造成消息丢失。&lt;/p&gt;
&lt;h3 id=&quot;AR、LSR、OSR&quot;&gt;&lt;a href=&quot;#AR、LSR、OSR&quot; class=&quot;headerlink&quot; title=&quot;AR、LSR、OSR&quot;/&gt;AR、LSR、OSR&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;分区中的所有副本统称为AR（Assigned Replicas）。&lt;/li&gt;
&lt;li&gt;所有与leader副本保持一定程度同步的副本（包括leader副本在内）组成ISR（In-Sync Replicas），ISR集合是AR集合中的一个子集。&lt;/li&gt;
&lt;li&gt;与leader副本同步滞后过多的副本（不包括leader副本）组成OSR（Out-of-Sync Replicas）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;消息会先发送到leader副本，然后follower副本才能从leader副本中拉取消息进行同步，同步期间内follower副本相对于leader副本而言会有一定程度的滞后。前面所说的“一定程度的同步”是指可忍受的滞后范围，这个范围可以通过参数进行配置。，由此可见，AR=ISR+OSR。在正常情况下，所有的 follower 副本都应该与 leader 副本保持一定程度的同步，即 AR=ISR，OSR集合为空.&lt;/p&gt;
&lt;h3 id=&quot;LSR-与-OSR-转换、LSR集合中的副本才允许选举为leader&quot;&gt;&lt;a href=&quot;#LSR-与-OSR-转换、LSR集合中的副本才允许选举为leader&quot; class=&quot;headerlink&quot; title=&quot;LSR 与 OSR 转换、LSR集合中的副本才允许选举为leader&quot;/&gt;LSR 与 OSR 转换、LSR集合中的副本才允许选举为leader&lt;/h3&gt;&lt;p&gt;leader副本负责维护和跟踪ISR集合中所有follower副本的滞后状态，当follower副本落后太多或失效时，leader副本会把它从ISR集合中剔除。如果OSR集合中有follower副本“追上”了leader副本，那么leader副本会把它从OSR集合转移至ISR集合。默认情况下，当leader副本发生故障时，只有在ISR集合中的副本才有资格被选举为新的leader，而在OSR集合中的副本则没有任何机会（不过这个原则也可以通过修改相应的参数配置来改变）。ISR与HW和LEO也有紧密的关系。&lt;/p&gt;
&lt;h3 id=&quot;什么是HW高水位&quot;&gt;&lt;a href=&quot;#什么是HW高水位&quot; class=&quot;headerlink&quot; title=&quot;什么是HW高水位&quot;/&gt;什么是HW高水位&lt;/h3&gt;&lt;p&gt;HW是High Watermark的缩写，俗称高水位，它标识了一个特定的消息偏移量（offset），消费者只能拉取到这个offset之前的消息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://static.studytime.xin/article/2020/11/16043177212192.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如图所示，它代表一个日志文件，这个日志文件中有 9 条消息，第一条消息的 offset（LogStartOffset）为0，最后一条消息的offset为8，offset为9的消息用虚线框表示，代表下一条待写入的消息。日志文件的HW为6，表示消费者只能拉取到offset在0至5之间的消息，而offset为6的消息对消费者而言是不可见的。&lt;/p&gt;
&lt;h3 id=&quot;什么是LEO&quot;&gt;&lt;a href=&quot;#什么是LEO&quot; class=&quot;headerlink&quot; title=&quot;什么是LEO&quot;/&gt;什么是LEO&lt;/h3&gt;&lt;p&gt;LEO是Log End Offset的缩写，它标识当前日志文件中下一条待写入消息的offset，图中offset为9的位置即为当前日志文件的LEO，LEO的大小相当于当前日志分区中最后一条消息的offset值加1。分区ISR集合中的每个副本都会维护自身的LEO，而ISR集合中最小的LEO即为分区的HW，对消费者而言只能消费HW之前的消息。&lt;/p&gt;
&lt;h3 id=&quot;ISR集合，以及HW和LEO之间的关系&quot;&gt;&lt;a href=&quot;#ISR集合，以及HW和LEO之间的关系&quot; class=&quot;headerlink&quot; title=&quot;ISR集合，以及HW和LEO之间的关系&quot;/&gt;ISR集合，以及HW和LEO之间的关系&lt;/h3&gt;&lt;p&gt;为了更好地理解ISR集合，以及HW和LEO之间的关系，下面通过一个简单的示例来进行相关的说明。如图所示，假设某个分区的ISR集合中有3个副本，即一个leader副本和2个follower副本，此时分区的LEO和HW都为3。消息3和消息4从生产者发出之后会被先存入leader副本&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://static.studytime.xin/article/2020/11/16043177369600.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://static.studytime.xin/article/2020/11/16043177502794.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://static.studytime.xin/article/2020/11/16043177624510.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://static.studytime.xin/article/2020/11/16043177728479.jpg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;p&gt;在消息写入leader副本之后，follower副本会发送拉取请求来拉取消息3和消息4以进行消息同步。&lt;/p&gt;
&lt;p&gt;在同步过程中，不同的 follower 副本的同步效率也不尽相同。在某一时刻follower1完全跟上了leader副本而follower2只同步了消息3，如此leader副本的LEO为5，follower1的LEO为5，follower2的LEO为4，那么当前分区的HW取最小值4，此时消费者可以消费到offset为0至3之间的消息。&lt;/p&gt;
&lt;p&gt;当所有的副本都成功写入了消息3和消息4，整个分区的HW和LEO都变为5，因此消费者可以消费到offset为4的消息了。&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;/&gt;总结&lt;/h3&gt;&lt;p&gt;由此可见，Kafka 的复制机制既不是完全的同步复制，也不是单纯的异步复制。事实上，同步复制要求所有能工作的 follower 副本都复制完，这条消息才会被确认为已成功提交，这种复制方式极大地影响了性能。而在异步复制方式下，follower副本异步地从leader副本中复制数据，数据只要被leader副本写入就被认为已经成功提交。在这种情况下，如果follower副本都还没有复制完而落后于leader副本，突然leader副本宕机，则会造成数据丢失。Kafka使用的这种ISR的方式则有效地权衡了数据可靠性和性能之间的关系。&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>4308a995a59a5e0ea8a1d895a0b61ac6</guid>
<title>.Net/.Net Core 的界面框架 NanUI 发布新版本啦</title>
<link>https://toutiao.io/k/waofqq3</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;cnblogs_post_description&quot;&gt;
        适用于.NET/.NET Core 开发人员的 WinForms 组件 NanUI 发布最新版本了。本文将大概介绍 NanUI 0.8 版的新特性和新功能。
    &lt;/p&gt;
&lt;div id=&quot;cnblogs_post_body&quot; class=&quot;blogpost-body cnblogs-markdown&quot;&gt;
    &lt;h1 id=&quot;发布前感悟&quot;&gt;发布前感悟&lt;/h1&gt;
&lt;p&gt;NanUI 自从上一次更新 NanUI 0.7 已经过去大半年，B站和头条的教学视频也只制作到了第二集。&lt;/p&gt;
&lt;p&gt;有朋友悄悄问我是不是发生什么事故我删库跑路了所以那么长时间不更新项目不发布教程，当然，这只是玩笑而已。&lt;/p&gt;
&lt;p&gt;实际情况是 NanUI 0.7 基于 ChormiumFX 项目进行开发，刚刚发布 0.7 之后我就发现了框架自生存在有重大 BUG 而且是我没有能力处理的那种。&lt;/p&gt;
&lt;p&gt;本想联系作者深入探讨下这个 BUG，谁知道 ChromiumFX 的项目似乎突然中止了，截至目前位置&lt;a href=&quot;https://bitbucket.org/chromiumfx/chromiumfx&quot;&gt;项目首页&lt;/a&gt;任然是走失状态。&lt;/p&gt;
&lt;p&gt;因此我不得不考虑放弃 ChromiumFX 换一种内核，在甄选了 CefSharp 和 CefGlue 之后，还是觉得使用更接近 CEF 原生的 CefGlue 作为底层重置 NanUI 项目，并提升版本号到 0.8，这也是第一次在大项目版本几乎没有小版本更新的情况下直接升级大版本。&lt;/p&gt;
&lt;p&gt;新版本的 NanUI 开发了大半年，踩了 CefGlue 各种坑，期间我太太还突发了非常不幸于的疾病，后来我也非常幸体验了人生第一次住院经历。还好，老天留下了我俩的狗命，估计将来还另做他用吧😂，所以也希望各位及家人身体健康，经历了这次浩劫，突然觉得人只要能好好的，健健康康活着就行，其他的都不重要。&lt;/p&gt;
&lt;p&gt;废话就这么多吧，下面进入正题。&lt;/p&gt;
&lt;h1 id=&quot;nanui-简介&quot;&gt;NanUI 简介&lt;/h1&gt;
&lt;p&gt;NanUI 界面组件是一个开放源代码的 .NET / .NET Core 窗体应用程序（WinForms）界面组件。她适用于希望使用 HTML5/CSS3 等前端技术来构建 Windows 窗体应用程序用户界面的 .NET/.NET Core 开发人员。&lt;/p&gt;
&lt;p&gt;NanUI 的渲染引擎 WinFormium 基于谷歌可嵌入的浏览器框架 Chromium Embedded Framework，因此用户可以使用各种前端技术 HTML5/CSS3/JavaScript 和框架 React/Vue/Angular/Blazor 设计和开发.NET 桌面应用程序的用户界面。&lt;/p&gt;
&lt;p&gt;同时，WinFormium 特有的 JavaScript Bridge 可以方便简洁地实现浏览器端与 .NET 之间的通信和数据交换。&lt;/p&gt;
&lt;p&gt;使用 NanUI 界面框架将为传统的 WinForm 应用程序的用户界面设计和开发工作带来无限种可能！&lt;/p&gt;
&lt;p&gt;如果您想了解更多关于 NanUI 项目的信息，请移步&lt;a href=&quot;https://github.com/NetDimension/NanUI&quot;&gt;NanUI 项目主页&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102154937274-1634179274.png&quot; alt=&quot;preview&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;h1 id=&quot;08-新增内容&quot;&gt;0.8 新增内容&lt;/h1&gt;
&lt;h2 id=&quot;内核替换&quot;&gt;内核替换&lt;/h2&gt;
&lt;p&gt;内核从 ChromiumFX 替换为 CefGlue，Chromim 的版本提升到了&lt;code&gt;80.0.3987.163&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;承载窗体&quot;&gt;承载窗体&lt;/h2&gt;
&lt;p&gt;重写承载窗体底层删除了没必要的 API 仅保留和框架有关的功能，并且拓展了无边框窗体的能力，新增了两种阴影效果以及一种边框效果。&lt;/p&gt;
&lt;h3 id=&quot;窗体类型&quot;&gt;窗体类型&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;原生样式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;系统原生窗体样式与传统的 WinForm 应用程序界面一致，拥有系统样式的标题栏、边框和系统命令区域，类似在传统的 Form 控件上拖入 WebBrowser 控件并设置 Dock 属性为 Fill 时的样子一致。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无边框窗体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在无边框窗体样式中系统原生的标题栏和边框被隐藏，可以使用整个窗体区域来绘制您的应用程序界面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kiosk 模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kiosk 样式的窗体普遍用于需要全屏展示窗体内容的场景，例如：工控上位机界面、查询机界面、数据大屏幕等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;异形窗口&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用 Layered 样式允许创建异形、半透明窗体。类似各种大师、各种管家提供的加速球那种效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102162033806-273472318.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;亚克力特效窗体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;亚克力特效是 Windows 10 创意者更新版之后提供的新功能，它允许窗体的透明或半透明区域与桌面元素进行模糊混合，实现特殊的磨砂亚克力效果。与 Layered 样式相同，根据网页中透明或者半透明区域的设置，将实现特定效果的磨砂玻璃效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102162134246-200769784.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;h3 id=&quot;窗体特效&quot;&gt;窗体特效&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;阴影效果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关闭&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102160350160-587246004.png&quot; alt=&quot;关闭&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;泛光&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102160411440-1098029858.png&quot; alt=&quot;泛光&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;阴影&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102160456904-236090472.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;投影&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102160526026-802599804.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;边框效果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;无边框&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102161407998-1629330111.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;普通边框&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102161419436-1627334610.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;圆角边框&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102161437081-294895020.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;以上示例均已提交至 GitHub 代码仓库，请异步&lt;a href=&quot;https://github.com/XuanchenLin/NanUI-0.8-Examples&quot;&gt;https://github.com/XuanchenLin/NanUI-0.8-Examples&lt;/a&gt;获取各个示例的源码。&lt;/p&gt;
&lt;h2 id=&quot;离屏渲染支持&quot;&gt;离屏渲染支持&lt;/h2&gt;
&lt;p&gt;引入了 Direct2D 技术，CEF 的离屏渲染得以实现，由此添加了两种新的承载窗体样式：&lt;code&gt;异形样式窗体&lt;/code&gt;和&lt;code&gt;亚克力特效窗体&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;资源处理器&quot;&gt;资源处理器&lt;/h2&gt;
&lt;p&gt;新增了一种资源处理器，能够从 ZIP 文件里加载资源。&lt;/p&gt;
&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;对一些 API 的写法进行了优化。&lt;/li&gt;
&lt;li&gt;优化了自定义资源控制器的抽象类，使用更简单了。&lt;/li&gt;
&lt;li&gt;优化了 JavaScript 扩展的抽象类，同上，麻麻在也不用担心我不会注册 .NET 对象到 JavaScript 的代码了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;使用-nanui-08-创建一个应用程序&quot;&gt;使用 NanUI 0.8 创建一个应用程序&lt;/h1&gt;
&lt;h2 id=&quot;引用-nanui-包&quot;&gt;引用 NanUI 包&lt;/h2&gt;
&lt;p&gt;使用 Visual Studio 的&lt;code&gt;NuGet包管理器&lt;/code&gt;或者&lt;code&gt;程序包管理器控制台&lt;/code&gt;来获取 NanUI 的程序集，根据项目的类型（.NET Framework 或者 .NET Core）将自动安装合适的程序集。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PM&amp;gt; Install-Package NetDimension.NanUI
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装 NanUI 运行环境包。这个包主要包含了与&lt;code&gt;CEF&lt;/code&gt;框架有关的文件，根据您项目架构（AnyCPU/x86/x64）的具体情况，此 NuGet 包将在编译时拷贝与架构对应的运行时文件到项目的输出目录中。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PM&amp;gt;  Install-Package NetDimension.NanUI.Runtime
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果您在国内 NuGet 访问较慢无法下载NetDimension.NanUI.Runtime包时，请您加QQ群521854872在群文件中下载NuGet 离线包 。&lt;/p&gt;
&lt;h2 id=&quot;编码部分&quot;&gt;编码部分&lt;/h2&gt;
&lt;p&gt;在主窗体加载前初始化 NanUI 运行环境。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C#&quot;&gt;using NetDimension.NanUI;

class Program
{
  static void Main()
  {
    // ...
    WinFormium.CreateRuntimeBuilder(env =&amp;gt; {

      env.CustomCefSettings(settings =&amp;gt;
      {
        // 在此处设置 CEF 的相关参数
      });

      env.CustomCefCommandLineArguments(commandLine =&amp;gt;
      {
        // 在此处指定 CEF 命令行参数
      });

    }, app =&amp;gt;
    {
        // 指定启动窗体
        app.UseMainWindow(context =&amp;gt; new MainWindow());
    })
    .Build()
    .Run();
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编写窗体代码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C#&quot;&gt;using NetDimension.NanUI;
using NetDimension.NanUI.HostWindow;

class MainWindow : Formium
{
  // 设置窗体样式类型
  public override HostWindowType WindowType =&amp;gt; HostWindowType.System;
  // 指定启动 Url
  public override string StartUrl =&amp;gt; &quot;https://www.formium.net&quot;;

  public MainWindow()
  {
    // 在此处设置窗口样式
    Size = new System.Drawing.Size(1024, 768);
  }

  protected override void OnReady()
  {
    // 在此处进行浏览器相关操作

    //ShowDevTools();
    //ExecuteJavaScript(&quot;alert(&#x27;Hello NanUI&#x27;)&quot;);
  }
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;没有复杂的步骤！只需简单操作 NanUI 项目就可以顺利运行。&lt;/p&gt;
&lt;h1 id=&quot;项目相关&quot;&gt;项目相关&lt;/h1&gt;
&lt;h2 id=&quot;仓库&quot;&gt;仓库&lt;/h2&gt;
&lt;p&gt;以上涵盖了本次更新的大概内容，如果想了解更多信息，请移步 NanUI 项目仓库首页。&lt;/p&gt;

&lt;p&gt;目前 NanUI 0.8 版源码暂时没有放出，等黑测一段时间收集反馈修改后会提交至上面两个仓库。&lt;/p&gt;
&lt;h2 id=&quot;文档&quot;&gt;文档&lt;/h2&gt;
&lt;p&gt;NanUI 提供了大部分功能的文档，使用这些文档将有助于轻松快速的开始使用 NanUI 进行开发。&lt;/p&gt;

&lt;p&gt;目前 NanUI 文档正在逐步完善，如果有朋友愿意帮助翻译不同语言的文档，请与我取得联系或者直接提交其他语言文档的 Pull Request 即可，感激不敬！&lt;/p&gt;
&lt;h2 id=&quot;开源协议&quot;&gt;开源协议&lt;/h2&gt;
&lt;p&gt;NanUI 项目基于 LGPL-3.0 开源协议开放项目源代码。&lt;strong&gt;本项目版权由项目发起人、开发者林选臣所有&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;依照 LGPL-3.0 协议规定：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;您可以在任何商业软件中引用 NanUI 的二进制库而无需支付任何与版权相关的费用;&lt;/li&gt;
&lt;li&gt;如果您的项目使用并修改了 NanUI 的源代码，那么您的项目也需要使用 LGPL 协议进行开源，并且在您的衍生项目中保留 NanUI 的版权信息：&lt;code&gt;Powered by NanUI&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;如果您需要在非开源的应用程序中使用 NanUI 的源代码，为了保障您的合法权益，请考虑向项目作者购买商业授权。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;关于 LGPL-3.0 协议的具体内容请参考此协议&lt;a href=&quot;https://github.com/NetDimension/NanUI/blob/master/docs/zh-CN/Licence.md&quot;&gt;详细副本&lt;/a&gt;。此外，NanUI 项目基于诸多开源项目进行构建，相关的项目请查阅&lt;a href=&quot;https://github.com/NetDimension/NanUI/blob/master/docs/zh-CN/Dependences.md&quot;&gt;第三方授权协议&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;打赏和赞助&quot;&gt;打赏和赞助&lt;/h1&gt;
&lt;p&gt;NanUI 项目基于 LGPL-3.0 协议的开源项目并且它是完全免费的。尽管如此，如果没有适当的资金支持，项目维护和新功能的开发是无法持续下去的。所以如果你喜欢这个项目并认可我的工作，你可以支付我一杯咖啡的钱请我喝一杯咖啡，或者你也可以成为长期的项目资助人以帮助 NanUI 变得更好。&lt;/p&gt;
&lt;p&gt;使用微信或者支付宝扫描下方二维码来进行资金方面的捐助。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img2020.cnblogs.com/blog/352785/202011/352785-20201102164631381-222209012.png&quot; alt=&quot;&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>5c35229d123478a013caee58df401773</guid>
<title>13 张图彻底搞懂分布式系统服务注册与发现原理</title>
<link>https://toutiao.io/k/f9kkb5t</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;引入服务注册与发现组件的原因&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先来看一个问题，假如现在我们要做一个商城项目，作为架构师的你应该怎样设计系统的架构？你心里肯定在想：这还不容易直接照搬淘宝的架构不就行了。但在现实的创业环境中一个项目可能是九死一生，如果一开始投入巨大的人力和财力，一旦项目失败损失就很大。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作为一位有经验的架构师需要结合公司财力、人力投入预算等现状选择最适合眼下的架构才是王道。大型网站都是从小型网站发展而来，架构也是一样。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;任何一个大型网站的架构都不是从一开始就一层不变的，而是随着用户量和数据量的不断增加不断迭代演进的结果。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在架构不断迭代演进的过程中我们会遇到很多问题，&lt;strong&gt;技术发展的本质就是不断发现问题再解决问题，解决问题又发现问题&lt;/strong&gt;。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;strong&gt;单体架构&lt;/strong&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在系统建立之初可能不会有特别多的用户，将所有的业务打成一个应用包放在tomcat容器中运行，与数据库共用一台服务器，这种架构一般称之为单体架构。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8589743589743589&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1Yy1lpDpnSgrIUzMCUAShjPozEcMOJlPM9KEZoViblj0qF7TJs70DibHFA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;780&quot;/&gt;&lt;figcaption&gt;单体架构-应用和数据库共同部署&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在初期这种架构的效率非常高，根据用户的反馈可以快速迭代上线。但是随着用户量增加，一台服务的内存和CPU吃紧，很容易造成瓶颈，新的问题来了怎么解决呢？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;应用与数据分离&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着用户请求量增加，一台服务器的内存和CPU持续飙升，用户请求响应时间变慢。这时候可以考虑将应用与数据库拆开，各自使用一台服务器，你看问题又解决了吧。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.0881542699724518&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1YoL2Pibpkhp9Wo5grIzjFXia28tSHKjqHia8W2Gh58wxBuCJdgJlNKDwHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;726&quot;/&gt;&lt;figcaption&gt;单体架构-应用和数据库分离&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;突然有一天扫地阿姨不小心碰了电线，其中一台服务器掉电了，用户所有的请求都报错，随之而来的是一系列投诉电话。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;集群部署&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单实例很容易造成单点问题，比如遇到服务器故障或者服务能力瓶颈，那怎么办？聪明的你肯定想到了，用集群呀。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8782287822878229&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1YBIgyiasm5iamgdAvJEn18AR1xPlfjcicLIPibyR1bPpYEbncPS2xibOzYVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1084&quot;/&gt;&lt;figcaption&gt;应用集群部署&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;集群部署是指将应用部署在多个服务器或者虚机上，用户通过服务均衡随机访问其中的一个实例，从而使多个实例的流量均衡，如果一个实例出现故障可以将其下线，其他实例不受影响仍然可以对外提供服务。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;随着用户数量快速增加，老板决定增加投入扩大团队规模。开发团队壮大后效率并没有得到显著的提高，以前小团队可以一周迭代上线一次，现在至少需要两到三周时间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务逻辑越来越复杂，代码间耦合很严重，修改一行代码可能引入几个线上问题。架构师意识到需要进行架构重构。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;微服务架构&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当单体架构演进到一定阶段后开发测试的复杂性都会成本增加，团队规模的扩大也会使得各自工作耦合性更严重，牵一发而动全身就是这种场景。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;单体架构遇到瓶颈了，微服务架构就横空出世了。微服务就是将之前的单体服务按照业务维度进行拆分，拆分粒度可大可小，拆分时机可以分节奏进行。最佳实践是先将一些独立的功能从单体中剥离出来抽成一个或多个微服务，这样可以保障业务的连续性和稳定性。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8771929824561403&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1YvlySHf3wnCtdbvSDx4JBV4YJJuXbvrF1DXmN3hMLBcHLGvOk4zFTEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1368&quot;/&gt;&lt;figcaption&gt;微服务架构&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上图将一个商用应用拆分为六个独立微服务。六个微服务可以使用Docker容器化进行多实例部署。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;架构演化到这里遇到了一个难题，如果要查询用户所有的订单，用户服务可能会依赖订单服务，用户服务如何与订单服务交互呢？订单服务有多个实例该访问哪一个？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通常有几种解决办法：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;（1）服务地址硬编码&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务的地址写死在数据库或者配置文件，通过访问DNS域名进行寻址路由。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.68561872909699&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1Yw9zpILmDibILP43qdWrBaQuOiaLV5HlRssCmaMEV2yPzHY2ksgQ6FrQA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1196&quot;/&gt;&lt;figcaption&gt;服务元数据硬编码&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务B的地址硬编码在数据库或者配置文件中，服务A首先需要拿到服务B的地址，然后通过DNS服务器解析获取其中一实例的真实地址，最后可以向服务B发起请求。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果遇到大促活动需要对服务实例扩容，大促完需要对服务实例进行下线，运维人员要做大量的手工操作，非常容易误操作。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;（2）服务动态注册与发现&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务地址硬编码还有一个非常致命的问题，如果一台实例挂了，运维人员可能不能及时感知到，导致一部分用户的请求会异常。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;引入服务注册与发现组件可以很好解决上面遇到的问题，避免过多的人工操作。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;架构演进总结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在单体架构中一个应用程序就是一个服务包，包内的模块通过函数方法相互调用，模型足够简单，根本没有服务注册和发现一说。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在微服务架构中会将一个应用程序拆分为多个微服务，微服务会部署在不同的服务器、不同的容器、甚至多数据中心，微服务间要相互调用，服务注册和发现成为了一个不可或缺的组件。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;服务注册与发现基本原理&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务注册与发现是分为注册和发现两个关键的步骤。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;服务注册&lt;/strong&gt;：服务进程在注册中心注册自己的元数据信息。通常包括主机和端口号，有时还有身份验证信息，协议，版本号，以及运行环境的信息。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;服务发现&lt;/strong&gt;：客户端服务进程向注册中心发起查询，来获取服务的信息。服务发现的一个重要作用就是提供给客户端一个可用的服务列表。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;服务注册&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务注册有两种形式：客户端注册和代理注册。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;客户端注册&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;客户端注册是服务自己要负责注册与注销的工作。当服务启动后注册线程向注册中心注册，当服务下线时注销自己。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.22934232715008432&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1YibU8A8rBNr7YzicTNU6vT2xhtzmDGb4yIZvU6xmK2CtRUadT3NIujl4g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1186&quot;/&gt;&lt;figcaption&gt;客户端注册&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式的缺点是注册注销逻辑与服务的业务逻辑耦合在一起，如果服务使用不同语言开发，那需要适配多套服务注册逻辑。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;代理注册&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代理注册由一个单独的代理服务负责注册与注销。当服务提供者启动后以某种方式通知代理服务，然后代理服务负责向注册中心发起注册工作。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.32371794871794873&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1YiavZKfZPwyWXibjiaWVtQP1mb8hFXKpX5KHibMtTbvFAQV0Nc5rwknLx8A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1248&quot;/&gt;&lt;figcaption&gt;代理注册&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式的缺点是多引用了一个代理服务，并且代理服务要保持高可用状态。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;服务发现&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务发现也分为客户端发现和代理发现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;客户端发现&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;客户端发现是指客户端负责向注册中心查询可用服务地址，获取到所有的可用实例地址列表后客户端根据负载均衡算法选择一个实例发起请求调用。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.4648729446935725&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1Y604U6SEL81XhRYpuubvaB1B89eZUNHYz0wnvVGrRqFIZB8yRGRIhyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1338&quot;/&gt;&lt;figcaption&gt;客户端发现&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这种方式非常直接，客户端可以控制负载均衡算法。但是缺点也很明显，获取实例地址、负载均衡等逻辑与服务的业务逻辑耦合在一起，如果服务发现或者负载平衡有变化，那么所有的服务都要修改重新上线。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;代理发现&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;代理发现是指新增一个路由服务负责服务发现获取可用的实例列表，服务消费者如果需要调用服务A的一个实例可以直接将请求发往路由服务，路由服务根据配置好的负载均衡算法从可用的实例列表中选择一个实例将请求转发过去即可，如果发现实例不可用，路由服务还可以自行重试，服务消费者完全不用感知。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.3880407124681934&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1YKK0I3aW4URJEb3uibncYDb70BQbRDsiasGw6WTuiaY0ARaeayY8p6xStQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1572&quot;/&gt;&lt;figcaption&gt;代理路由服务注册&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;心跳机制&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果服务有多个实例，其中一个实例出现宕机，注册中心是可以实时感知到，并且将该实例信息从列表中移出，也称为摘机。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如何实现摘机？业界比较常用的方式是通过心跳检测的方式实现，心跳检测有&lt;strong&gt;主动&lt;/strong&gt;和&lt;strong&gt;被动&lt;/strong&gt;两种方式。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;被动检测&lt;/strong&gt;是指服务主动向注册中心发送心跳消息，时间间隔可自定义，比如配置5秒发送一次，注册中心如果在三个周期内比如说15秒内没有收到实例的心跳消息，就会将该实例从列表中移除。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5235294117647059&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1Ysqr2CSsoNpReXCmg2zFTLCMuyuibSheOibTQlDNO4mDuiapEzkAiaiaV6wg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1020&quot;/&gt;&lt;figcaption&gt;心跳机制-被动检测&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图中服务A的实例2已经宕机不能主动给注册中心发送心跳消息，15秒之后注册就会将实例2移除掉。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;主动检测&lt;/strong&gt;是注册中心主动发起，每隔几秒中会给所有列表中的服务实例发送心跳检测消息，如果多个周期内未发送成功或未收到回复就会主动移除该实例。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5185185185185185&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1Y7lK6NlTicv232833icKoG9ZIrhVIeQFK8GuvML8E6nGPibjEtrpVBPNuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1026&quot;/&gt;&lt;figcaption&gt;心跳机制-主动检测&lt;/figcaption&gt;&lt;/figure&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;业界常用的服务注册与发现组件对比&lt;/h1&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;了解服务注册与发现的基本原理后，如果你要在项目中使用服务注册与发现组件，当面对众多的开源组件该如何进行技术选型？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在互联网公司里，有研发实力的大公司一般会选择自研或者基于开源组件进行二次开发，但是对于中小型公司来说直接选用一款开源软件会是一个不错的选择。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;常用的注册与发现组件有eureka，zookeeper，consul，etcd等，由于eureka在2018年已经宣布放弃维护，这里就不再推荐使用了。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.32325141776937616&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1YK9wPaIDydpE0A60bJV2GdnHRsvjZmgAibumCQjjRwdYON2GLvGaROLw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1058&quot;/&gt;&lt;figcaption&gt;业界开源组件&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面结合各个维度对比一下各组件。&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table data-sort=&quot;sortDisabled&quot; interlaced=&quot;disabled&quot;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;组件&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;接口类型&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;一致性算法&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;zookeeper&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1.功能强大，不仅仅只是服务发现；&lt;br/&gt;2.提供watcher机制可以实时获取服务提供者的状态；&lt;br/&gt;3.广泛使用，dubbo等微服务框架已支持；&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1.没有健康检查；&lt;br/&gt;2.需要在服务中引入sdk，集成复杂度高；&lt;br/&gt;3.不支持多数据中心；&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;sdk&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;Paxos&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;consul&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1.开箱即用，方便集成；&lt;br/&gt;2.带健康检查；&lt;br/&gt;3.支持多数据中心；&lt;br/&gt;4.提供web管理界面；&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;不能实时获取服务变换通知&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;restful/dns&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;Raft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span&gt;etcd&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1.开箱即用，方便集成；&lt;br/&gt;2.可配置性强&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;1.没有健康检查；&lt;br/&gt;2.需配合三方工具完成服务发现功能；&lt;br/&gt;3.不支持多数据中心；&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;restful&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span&gt;Raft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从整体上看consul的功能更加完备和均衡。接下来以consul为例详细介绍一下。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Consul——值得推荐的服务注册与发现开源组件&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;简单认识一下Consul&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Consul是HashiCorp公司推出的开源工，使用Go语言开发，具有开箱即可部署方便的特点。Consul是分布式的、高可用的、 可横向扩展的用于实现分布式系统的服务发现与配置。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Consul有哪些优势？&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;服务注册发现：Consul提供了通过DNS或者restful接口的方式来注册服务和发现服务。服务可根据实际情况自行选择。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;健康检查：Consul的Client可以提供任意数量的健康检查，既可以与给定的服务相关联，也可以与本地节点相关联。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;多数据中心：Consul支持多数据中心，这意味着用户不需要担心Consul自身的高可用性问题以及多数据中心带来的扩展接入等问题。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Consul的架构图&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.7142857142857143&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RXvHpViaz3EozrV0KJDBlyZ3dH8NBBH1YOIpiclpFn79C0xhaicN8eKZIhMGBIibgTxicxZm6UuBVWic4JWXuEOQ3vEg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1274&quot;/&gt;&lt;figcaption&gt;Consul架构&lt;br/&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Consul 实现多数据中心依赖于gossip protocol协议。这样做的目的：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;不需要使用服务器的地址来配置客户端；服务发现是自动完成的。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;健康检查故障的工作不是放在服务器上，而是分布式的。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Consul的使用场景&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Consul的应用场景包括&lt;strong&gt;服务注册发现&lt;/strong&gt;、&lt;strong&gt;服务隔离&lt;/strong&gt;、&lt;strong&gt;服务配置&lt;/strong&gt;等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;服务注册发现场景&lt;/strong&gt;中consul作为注册中心，服务地址被注册到consul中以后，可以使用consul提供的dns、http接口查询，consul支持health check。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;服务隔离场景&lt;/strong&gt;中consul支持以服务为单位设置访问策略，能同时支持经典的平台和新兴的平台，支持tls证书分发，service-to-service加密。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;服务配置场景&lt;/strong&gt;中consul提供key-value数据存储功能，并且能将变动迅速地通知出去，借助Consul可以实现配置共享，需要读取配置的服务可以从Consul中读取到准确的配置信息。&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>