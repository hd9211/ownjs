<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>c2efc1379c0e12ea85bb2840b7be9697</guid>
<title>优质网站同好者周刊（第 51 期）- 倾城之链 - 悠然宜想亭</title>
<link>https://toutiao.io/k/jymdjoq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;Post-body&quot;&gt;
                    &lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot; rel=&quot; nofollow ugc&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界。此周刊，将汇聚过去一周&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot; rel=&quot; nofollow ugc&quot;&gt;倾城&lt;/a&gt;所收录的内容，以飨同好；欢迎推荐或自荐（仅限有独立域名的网站，可以是二级域名）。您如果要了解收录要求，请参见&lt;a href=&quot;https://nicelinks.site/about?utm_source=weekly&quot; rel=&quot; nofollow ugc&quot;&gt;关于倾城&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：本周刊&lt;strong&gt;每周五&lt;/strong&gt;生成，首发于个人微信公众号&lt;a href=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI5MDIwMzM2Mg==&amp;amp;action=getalbum&amp;amp;album_id=1530765143352082433&amp;amp;scene=173&amp;amp;from_msgid=2650641087&amp;amp;from_itemidx=1&amp;amp;count=3#wechat_redirect&quot; rel=&quot; nofollow ugc&quot;&gt;晚晴幽草轩&lt;/a&gt;、博客&lt;a href=&quot;https://www.jeffjade.com&quot; rel=&quot; nofollow ugc&quot;&gt;晚晴幽草轩&lt;/a&gt;，以及&lt;a href=&quot;https://forum.lovejade.cn/&quot; rel=&quot; nofollow ugc&quot;&gt;悠然宜想亭&lt;/a&gt;社区；此一键生成脚本基于 &lt;a href=&quot;https://nicelinks.site/post/602d30aad099ff5688618591&quot; rel=&quot; nofollow ugc&quot;&gt;Deno&lt;/a&gt; 编写，并在 Github 开源：&lt;a href=&quot;https://github.com/nicejade/nicelinks-weekly&quot; rel=&quot; nofollow ugc&quot;&gt;nicejade/nicelinks-weekly&lt;/a&gt;。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%88%A9%E5%99%A8&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;利器&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/mockups&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;mockups&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/3D&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;3D&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&quot;uncited&quot;&gt;&lt;div&gt;&lt;p&gt;Create 3D app mockups and videos. Right from your web browser. No experience required. Choose from the lastest 3D device modals.&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/mockrocket.io.png?x-oss-process=style/png2jpg&quot; title=&quot;&quot; alt=&quot;倾城之链 - MockRocket – Jaw-dropping 3D app mockups &amp;amp; animations&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://mockrocket.io/&quot; rel=&quot; nofollow ugc&quot;&gt;MockRocket&lt;/a&gt;，简单的 3D 设备模型生成器，用户动画和静止图像；直接在您的网络浏览器中，创建设备模型和产品视频，无需任何经验。它使用看起来跟专业制作 3D 设备动画一样，让您对产品的质量保持零怀疑。您可以自己创建工作室级动画，无需外包或复杂的编辑工具。它具有以下功能特征：&lt;/p&gt;

&lt;h3&gt;非常容易&lt;/h3&gt;

&lt;p&gt;在几分钟内了解 MockRocket 的拖放界面 - 直接从您的网络浏览器。无需下载复杂的软件。&lt;/p&gt;

&lt;h3&gt;完美像素 4K&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://mockrocket.io/&quot; rel=&quot; nofollow ugc&quot;&gt;MockRocket&lt;/a&gt; 的 WebGL 渲染引擎可导出高达 4K 分辨率的精美图像和视频。&lt;/p&gt;

&lt;h3&gt;超实惠&lt;/h3&gt;

&lt;p&gt;MockRocket 比租用代理机构或工作室便宜几个数量级。在内部制作您的产品视频并保存。&lt;/p&gt;

&lt;h3&gt;闪电般的快&lt;/h3&gt;

&lt;p&gt;使用 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://mockrocket.io/&quot; rel=&quot; nofollow ugc&quot;&gt;MockRocket&lt;/a&gt; 广泛的模板库和快速渲染引擎，在几分钟内从零完成。&lt;/p&gt;

&lt;p&gt;值得一提的是，&lt;a href=&quot;https://nicelinks.site/redirect?url=https://mockrocket.io/&quot; rel=&quot; nofollow ugc&quot;&gt;MockRocket&lt;/a&gt; 提供了令人惊叹的模版来启动您的创作；另外，还提供了强大的控件支持您自定义，如果您认为自己是专业人士，可以使用高级控件，将您的模型提升到一个全新的水平。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://mockrocket.io/&quot; rel=&quot; nofollow ugc&quot;&gt;MockRocket&lt;/a&gt; 的 WebGL 渲染引擎直接在您的浏览器中导出高达 4K 分辨率的图像和视频。你没看错。100% 私人渲染。（设计永远不会上传到我们的服务器）；支持 PNG、MP4、WEBM 和 PNG 序列等格式。最后，&lt;a href=&quot;https://nicelinks.site/redirect?url=https://mockrocket.io/&quot; rel=&quot; nofollow ugc&quot;&gt;MockRocket&lt;/a&gt; 支持免费试用，无需注册；假如您对 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://mockrocket.io/&quot; rel=&quot; nofollow ugc&quot;&gt;MockRocket&lt;/a&gt; 感兴趣的话，不妨这就来尝试下。&lt;/p&gt;

&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/61fa6090cc8cf55fbe4d8e0b&quot; rel=&quot; nofollow ugc&quot;&gt;倾城之链 - MockRocket – Jaw-dropping 3D app mockups &amp;amp; animations&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E9%82%AE%E7%AE%B1&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;邮箱&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B9%B3%E5%8F%B0&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;平台&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&quot;uncited&quot;&gt;&lt;div&gt;&lt;p&gt;Firefox Relay 可以轻松创建马甲邮箱，用它收邮件并转发至您的真实邮箱。可用马甲邮箱来保护您的账户，不受黑客和垃圾邮件的侵扰。&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/relay.firefox.com.png?x-oss-process=style/png2jpg&quot; title=&quot;&quot; alt=&quot;倾城之链 - Firefox Relay&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;推荐语&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://relay.firefox.com/&quot; rel=&quot; nofollow ugc&quot;&gt;Firefox Relay&lt;/a&gt;，旨在保护你的真实邮箱地址，拒绝垃圾邮件侵扰。&lt;a href=&quot;https://nicelinks.site/redirect?url=https://relay.firefox.com/&quot; rel=&quot; nofollow ugc&quot;&gt;Firefox Relay&lt;/a&gt; 的工作原理是：提供 Relay 马甲邮箱，可自动将邮件转发至您的真实邮箱，从而保护您的真实邮箱地址不被泄露。 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://relay.firefox.com/&quot; rel=&quot; nofollow ugc&quot;&gt;Firefox Relay&lt;/a&gt; 使用起来，也非常简单：&lt;/p&gt;

&lt;h3&gt;安装扩展&lt;/h3&gt;

&lt;p&gt;下载 Firefox 的 Relay 扩展。 在输入邮箱地址时自动生成马甲邮箱&lt;/p&gt;

&lt;h3&gt;新建马甲&lt;/h3&gt;

&lt;p&gt;在您浏览网页时，Relay 图标将出现在网站要求您提供电子邮件地址的位置。 选择它即可生成以 @relay.mozmail.com 结尾的随机全新邮箱地址。&lt;/p&gt;

&lt;h3&gt;管理马甲&lt;/h3&gt;

&lt;p&gt;登录 Relay 即可总览您创建的的马甲邮箱，而 Relay 会将邮件转发至您的真实邮箱。若您发现某个马甲邮箱开始收到垃圾邮件或不想收到的邮件，则可在面板上直接屏蔽或删除该马甲。&lt;/p&gt;

&lt;p&gt;从现在起，把邮箱里那些烦人的“不速之客”统统挡在外面。使用 Firefox 账户 注册即可开始使用。您在网购、社交网络、线下场景、网络读物、游戏等场景，都可以使用 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://relay.firefox.com/&quot; rel=&quot; nofollow ugc&quot;&gt;Firefox Relay&lt;/a&gt;，从而保护您的真实邮箱不被泄露。&lt;/p&gt;

&lt;p&gt;── 出自&lt;a href=&quot;https://nicelinks.site/post/61fa5a19cc8cf55fbe4d8e09&quot; rel=&quot; nofollow ugc&quot;&gt;倾城之链 - Firefox Relay&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E9%9F%B3%E4%B9%90&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;音乐&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://nicelinks.site/tags/%E5%8F%91%E7%8E%B0&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;发现&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;https://nicelinks.site/tags/%E8%81%9A%E5%90%88&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;聚合&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关键字：&lt;/strong&gt; 铜钟，音乐聚合，音乐播放器，音乐搜索，tonzhon&lt;/p&gt;

&lt;p&gt;铜钟是一个音乐聚合网站。你可以在铜钟上聆听来自 QQ 音乐、网易云音乐和酷我音乐三家平台的音乐。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/tonzhon.com.png?x-oss-process=style/png2jpg&quot; title=&quot;&quot; alt=&quot;铜钟 - 在一处聆听所有音乐 倾城之链&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;推荐语：&lt;/strong&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://tonzhon.com/&quot; rel=&quot; nofollow ugc&quot;&gt;铜钟&lt;/a&gt;是一个音乐聚合网站（基于 &lt;a href=&quot;https://nicelinks.site/post/5b1294b5e93ed2618cfac134&quot; rel=&quot; nofollow ugc&quot;&gt;React&lt;/a&gt; 框架搭建，访问速度还蛮快）。你可以在铜钟上聆听来自 QQ 音乐、网易云音乐和酷我音乐三家平台的音乐。该网站有分为歌单推荐、歌曲推荐、发现歌曲、发现歌单、热歌榜等板块；也支持用户登录，将喜欢的音乐添加至歌单。除此之外，&lt;a href=&quot;https://nicelinks.site/redirect?url=https://tonzhon.com/&quot; rel=&quot; nofollow ugc&quot;&gt;铜钟&lt;/a&gt;支持搜索，您可以检索自己喜欢的音乐。── 出自&lt;a href=&quot;https://nicelinks.site/post/61f3736491cda30632c3097b&quot; rel=&quot; nofollow ugc&quot;&gt;倾城之链 | 铜钟 - 在一处聆听所有音乐&lt;/a&gt;。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E7%BB%84%E4%BB%B6%E5%BA%93&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;组件库&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/CSS&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;CSS&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/React&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;React&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make beautiful websites regardless of your design experience.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/nextui.org.png?x-oss-process=style/png2jpg&quot; title=&quot;&quot; alt=&quot;NextUI - Beautiful, fast and modern React UI Library 倾城之链&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;推荐语：&lt;/strong&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://nextui.org/&quot; rel=&quot; nofollow ugc&quot;&gt;NextUI&lt;/a&gt; 是漂亮、快速和现代的 React UI 库；无论您的设计经验如何，它都可以让您制作漂亮的网站，并具有自动暗模式识别、主题支持、轻松定制、一流的 DX 等出色功能。&lt;a href=&quot;https://nicelinks.site/redirect?url=https://nextui.org/&quot; rel=&quot; nofollow ugc&quot;&gt;NextUI&lt;/a&gt; 具有以下功能特性：&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;主题化：&lt;a href=&quot;https://nicelinks.site/redirect?url=https://nextui.org/&quot; rel=&quot; nofollow ugc&quot;&gt;NextUI&lt;/a&gt; 提供一种自定义默认主题的简单方法，您可以更改颜色、字体、断点和您需要的一切；&lt;/li&gt;
&lt;li&gt;快速地：在运行时避免不必要的样式道具，使其比其他 UI 库更高效；&lt;/li&gt;
&lt;li&gt;明暗界面：自动深色模式识别，NextUI 检测到 HTML 主题道具变化时自动更改主题；&lt;/li&gt;
&lt;li&gt;独特的 DX：NextUI 是全类型化的，以最大限度地减少学习曲线，并提供最佳的开发人员体验。&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;除以上特色，&lt;a href=&quot;https://nicelinks.site/redirect?url=https://nextui.org/&quot; rel=&quot; nofollow ugc&quot;&gt;NextUI&lt;/a&gt; 还有非常多其他出色设定，如：服务器端渲染 (SSR)、内置媒体查询、设计精美、基于 TypeScript、关键路径 CSS（由于 NextUI 基于 Stitches，它只注入实际使用的样式，因此您的用户不会下载不必要的 CSS）、覆盖组件标签等；如果您基于 &lt;a href=&quot;https://nicelinks.site/post/61c928af5be6454b4e3d5146&quot; rel=&quot; nofollow ugc&quot;&gt;Next.js&lt;/a&gt; 来开发 Web 应用，那么 &lt;a href=&quot;https://nicelinks.site/redirect?url=https://nextui.org/&quot; rel=&quot; nofollow ugc&quot;&gt;NextUI&lt;/a&gt; 是非常值得您考虑的 UI 库。── 出自&lt;a href=&quot;https://nicelinks.site/post/61f3596768ba114abbae603c&quot; rel=&quot; nofollow ugc&quot;&gt;倾城之链 | NextUI - Beautiful, fast and modern React UI Library&lt;/a&gt;。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E5%BE%AE%E4%BF%A1&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;微信&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%B9%B3%E5%8F%B0&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;平台&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关键字：&lt;/strong&gt; 微信红包封面开放平台, 微信红包封面开放平台官方网站, 红包封面开放平台, 微信红包封面定制平台, 微信红包封面定制, 红包封面定制, 微信红包封面, 红包封面, 微信红包, 微信红包定制, 红包定制, 微信红包封面平台, 红包封面平台, 定制红包, 定制红包封面, 定制封面&lt;/p&gt;

&lt;p&gt;微信红包封面开放平台，是微信红包面向品牌主开放的封面付费定制平台。在这里，定制方可自主设计封面样式、创建封面故事，付费定制专属的红包封面。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/cover.weixin.qq.com.png?x-oss-process=style/png2jpg&quot; title=&quot;&quot; alt=&quot;微信红包封面开放平台 倾城之链&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;推荐语：&lt;/strong&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://cover.weixin.qq.com/&quot; rel=&quot; nofollow ugc&quot;&gt;微信红包封面开放平台&lt;/a&gt;，是微信红包面向品牌主开放的封面付费定制平台。在这里，定制方可自主设计封面样式、创建封面故事，付费定制专属的红包封面。目前，红包领取后界面，可以关联视频号、公众号等，因此企业或个人，可定制相关创意封面，微信用户发放红包时，即能传递祝福和好运，也能给企业与个人的产品做些宣传推广。定制红包封面，需要经过以下几个步骤：&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;注册：可以个人或企业；个人可根据公众号或视频号（粉丝需大于 100 人才满足条件）。&lt;/li&gt;
&lt;li&gt;定制封面：上传红包封面定制信息，包括素材图、封面简称、品牌 logo、封面故事素材以及相关证明材料。&lt;/li&gt;
&lt;li&gt;提交审核`完成红包封面的定制后，提交给微信团队审核（一般需要 3 ～ 5 个工作日）。&lt;/li&gt;
&lt;li&gt;付款下单：审核通过后，选择红包封面的使用人数，并支付款项生成订单。&lt;/li&gt;
&lt;li&gt;发放封面：下单成功后即可生成红包封面二维码、领取序列号兑换码、领取链接，用户领取后可在发红包时使用。&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;当然，如果您对微信原创生态（公众号、视频号等）做出贡献的话，可获得定制红包封面的机会；在过去的 2021 一年，在公众号（&lt;a href=&quot;https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;amp;__biz=MzI5MDIwMzM2Mg==&amp;amp;scene=124#wechat_redirect&quot; rel=&quot; nofollow ugc&quot;&gt;晚晴幽草轩&lt;/a&gt;）创作 60 篇原创内容，因此获得了 2000 个红包 🧧 封面。 ── 出自&lt;a href=&quot;https://nicelinks.site/post/61f3b4c891cda30632c3097d&quot; rel=&quot; nofollow ugc&quot;&gt;倾城之链 | 微信红包封面开放平台&lt;/a&gt;。&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;标签&lt;/strong&gt;：&lt;a href=&quot;https://nicelinks.site/tags/%E7%A4%BE%E5%8C%BA&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;社区&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E7%BC%96%E7%A8%8B&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;编程&lt;/code&gt;&lt;/a&gt; · &lt;a href=&quot;https://nicelinks.site/tags/%E5%88%86%E4%BA%AB&quot; rel=&quot; nofollow ugc&quot;&gt;&lt;code&gt;分享&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;关键字：&lt;/strong&gt; 社区, 霓虹灯下社区, 读书, 穿搭, 旅游, 宠物, 美食, 书评, 新鲜事, 资源下载, 有趣, 好玩, 文字, 休闲, 故事, 技术编程, 代码, 有个性的网站, 热点动态&lt;/p&gt;

&lt;p&gt;一个有趣且有情怀的网站，分享网络上新鲜好玩热点内容，个人学习生活上的一些感悟,以及读书、穿搭、旅游、宠物、美食、书评等等的社交高质量的内容，同时也给我们所有的打工人一个温暖有爱的吐槽平台。愿霓虹灯下社区陪伴你渡过漫长岁月。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/nihongdengxia.com.png?x-oss-process=style/png2jpg&quot; title=&quot;&quot; alt=&quot;霓虹灯下社区 - 听说，与城市霓虹灯穿插的每一户灯火里，都塞满了独一无二的故事。 倾城之链&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;推荐语：&lt;/strong&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://nihongdengxia.com/&quot; rel=&quot; nofollow ugc&quot;&gt;霓虹灯下社区&lt;/a&gt;是基于 Go、HTML、CSS 等语言搭建的网站，您可以在这里分享&lt;code&gt;生活&lt;/code&gt;、&lt;code&gt;美食&lt;/code&gt;、&lt;code&gt;旅行&lt;/code&gt;、&lt;code&gt;读书&lt;/code&gt;、&lt;code&gt;穿搭&lt;/code&gt;、&lt;code&gt;宠物&lt;/code&gt;等内容。── 出自&lt;a href=&quot;https://nicelinks.site/post/61f3506868ba114abbae603a&quot; rel=&quot; nofollow ugc&quot;&gt;倾城之链 | 霓虹灯下社区 - 听说，与城市霓虹灯穿插的每一户灯火里，都塞满了独一无二的故事。&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;对倾城之链感兴趣的朋友，可通过 Web，小程序，快应用等渠道进行访问(后续将支持更多，如 VsCode 插件，Chrome 扩展等)。您有任何问题，欢迎随时向我们反馈（您可以通过官网反馈渠道，或添加如下客服微信），🤲 。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/%E5%80%BE%E5%9F%8E%E4%B9%8B%E9%93%BE-%E5%BE%AE%E4%BF%A1-mini.jpeg&quot; title=&quot;&quot; alt=&quot;倾城之链 - 客服微信&quot;/&gt;&lt;/p&gt;

&lt;h2&gt;本期文末寄语&lt;/h2&gt;

&lt;p&gt;“洗一个澡，看一朵花，吃一顿饭，假使你觉得快活，并非全因为澡洗得干净，花开得好，或者菜合你口味，主要因为你心上没有挂碍。”── 近现代 · 钱钟书&lt;/p&gt;

&lt;blockquote class=&quot;uncited&quot;&gt;&lt;div&gt;&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/?utm_source=weekly&quot; rel=&quot; nofollow ugc&quot;&gt;倾城之链&lt;/a&gt;作为一个开放平台，旨在云集全球&lt;strong&gt;优秀网站&lt;/strong&gt;，探索互联网中更广阔的世界；在这里，你可以轻松发现、学习、分享更多有用或有趣的事物。&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://image.nicelinks.site/nicelinks-miniprogram-code.jpeg?imageView2/1/w/300/h/300/interlace/1/ignore-error/1&quot; title=&quot;&quot; alt=&quot;小程序码 - 倾城之链&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;您可能感兴趣的文章&lt;/h3&gt;


                &lt;/div&gt;
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1e11dac15c00c9e8a8132e9c598f7556</guid>
<title>腾讯音乐知识图谱搜索实践</title>
<link>https://toutiao.io/k/873mk1g</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-backh=&quot;161&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;561&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;187&quot; data-fileid=&quot;100072688&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2777777777777778&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPiatBXkeQWuUGBmUQ4xiahXXVm7Ohkcwd798zgEzw4l4EBMjUqNd5HtdBibHyicSCVfIIpG0ZkFwdSsFQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;262&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.45276417074877534&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjNVE0NdHNeCbS5p7RwmDjQFQ3G4jEZSk98txKjo5zDFDryegXC0Paib5Bu643G5ibuTicGe343t0LeQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1429&quot;/&gt;&lt;/p&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot; data-style=&quot;margin-bottom: -10px; margin-left: -8px; max-width: 100%; width: 18px; height: 18px; border-top: 8px solid rgb(54, 65, 173); border-left: 8px solid rgb(54, 65, 173); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;br data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot;/&gt;&lt;/section&gt;&lt;section data-bgopacity=&quot;50%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot; data-style=&quot;max-width: 100%; width: 543.333px; background: rgb(247, 247, 247); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot;&gt;&lt;p data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot;&gt;&lt;span&gt;分享嘉宾：&lt;/span&gt;&lt;span&gt;Elvin 腾讯音乐 高级工程师&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot;&gt;&lt;span&gt;编辑整理&lt;/span&gt;&lt;span&gt;：李一 中科雨辰&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-darkmode-bgcolor-16008590572276=&quot;rgb(33, 33, 33)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(247, 247, 247)&quot;&gt;&lt;span&gt;出品平台：DataFunTalk&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot;&gt;&lt;section data-darkmode-bgcolor-16008590572276=&quot;rgb(25, 25, 25)&quot; data-darkmode-original-bgcolor-16008590572276=&quot;rgb(255, 255, 255)&quot; data-style=&quot;max-width: 100%; width: 18px; height: 18px; border-bottom: 8px solid rgb(54, 65, 173); border-right: 8px solid rgb(54, 65, 173); box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;导读：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;近几年来，图数据在计算机领域得到了广泛的应用。&lt;/span&gt;&lt;span&gt;互联网数据量指数级增长，大数据技术、图数据方面的应用增长很快，各家互联网大厂都在图数据分析和应用方面大量投入。&lt;/span&gt;&lt;span&gt;为了让我们的搜索更加智能化，腾讯音乐也借助了知识图谱。&lt;/span&gt;&lt;span&gt;今天和大家分享下腾讯音乐在图谱检索与业务实践方面的探索，主要包括以下几大部分：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;音乐知识图谱介绍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;图数据库选型&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;项目架构介绍&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;知识图谱搜索功能应用举例&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;总结与展望&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;01&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;音乐知识图谱介绍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;首先和大家介绍下音乐知识图谱的相关知识。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 音乐数据分类&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjJUGx6txWmGX6CxkN5TsxHYMeibuuDicAZe4pC40geqaHHUeScyMkARDE46j1EGWChVPZMVZ55ibImg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图状数据广泛存在，其中与音乐相关的业务数据主要有以下三类：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2. 音乐知识图谱的应用场景&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjJUGx6txWmGX6CxkN5TsxHfXCrPq7VJ9icjI65YH0HAhLoxxiavU6iaIg9UvEocxeSPYicy1Nr9vicyPw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;(1) 复杂搜索需求实现&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;音乐知识图谱不仅可以做简单的搜索，还可以实现复杂搜索需求。&lt;/span&gt;&lt;span&gt;例如要查询周杰伦的男女对唱的歌曲有哪些，&lt;/span&gt;&lt;span&gt;如果要实现这个查询，&lt;/span&gt;&lt;span&gt;需要对周杰伦的歌曲进行一定的过滤，歌手的数量要等于2，另一位歌&lt;/span&gt;&lt;span&gt;手的性别是女性，还要考虑基于播放量、歌手权重等等的排序。&lt;/span&gt;&lt;span&gt;在&lt;/span&gt;&lt;span&gt;传统关系型数据要实现这个功能很复杂。&lt;/span&gt;&lt;span&gt;利用知识图谱就比较简单了，先找到歌手周杰伦，查找周杰伦的所有歌曲中满足2人合唱，另一个歌手性别是女性的，只要两跳就可以实现复杂的搜索查询。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;(2) 搜索结果的相关推荐&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以根据搜索的关键词，查询图谱中的实体节点，根据实体节点查询出关联的节点，用关联的节点给出推荐的结果。例如用户搜索周华健，可以通过关联信息推荐出李宗盛。如果通过搜索引擎，很难推荐出李宗盛，而用知识图谱，只要两跳，周华健歌手到对应组合（纵贯线），从组合再到另一歌手李宗盛，只要两跳。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;(3) 基于知识计算给出答案&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以根据知识图谱的计算来给出一些答案，通过图谱的关联信息，实体上下位信息，实体属性信息，查询出相应的答案。例如用户搜索刘德华90年年代的歌曲，用知识图谱的话，只要歌手刘德华，时间90年代歌曲，两个联合起来就可以得到结果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3. 搜索召回和知识图谱召回优缺点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;搜索召回，是基于文本匹配的，召回之后会涉及相关性排序，相对来说比较复杂，精准度不足，可能过度召回。搜索召回的流程比较复杂，排序策略也相对复杂。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;知识图谱召回，是基于实体之间的关系进行查询，可以做到精准召回，也没有过召回，召回的流程可以很短，也就是几条图查询的语句。另外，知识图谱还具备一定的推理能力。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;02&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;图数据库选型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;要实现图查询，首先得做图数据库的选型。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjJUGx6txWmGX6CxkN5TsxHsPvYuFe97YyQFveLtU4U3AtLzTQV1msm6iaJibZkroW1R29gibdZmrOCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图数据库的选型，需要考虑以下几点因素：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们对比了8个数据库，对优缺点进行了分析，对这些数据库进行了分类：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;第一类，以Neo4j为代表的，只有单机版本，性能比较优秀，但是不满足分布式可扩展性要求。Neo4j的商业版本支持分布式，但是却是收费的。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;第二类，JanusGraph、HugeGraph这类数据库，支持分布式可扩展的，他们的共同特点是在现有的图谱上增加了通用的图语义解释层，受到存储层架构的限制，存储层是外部数据库实现，不支持计算下推的功能，导致性能较差。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;第三类，以NebulaGraph为代表，这一类数据库都实现了自己的存储层，支持计算下推，做了效率上的优化，性能提升很多。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjJUGx6txWmGX6CxkN5TsxHibI8xIIS2UIHhYV0NARLwIt0me0PSuhQwHZbDZvKqzjSsOV01Oc4Utg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从上图看到综合性能测试数据。我们通过1度邻居（跟点直接相连的点），2度邻居，共同邻居，这三个方面来对数据库性能进行测试，可以看到Nebula不管是单机性能，还是集群性能，都要远超于其他竞品。考虑到性能，社区活跃度，版本迭代速度，语言上的通用性，我们最终选择了Nebula数据库做为我们项目的图数据库。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;03&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;项目架构介绍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 在线层&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjJUGx6txWmGX6CxkN5TsxHD7sIry58KjcOKY9Ralfn2rMAYqkRFIHQibtNhA3iatVTMvXehJ4U1JQg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;包含以下模块：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Storaged&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;负责具体数据的存储，包括点数据、边数据，以及相关的索引；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;Metad&lt;/strong&gt;负责存储图数据的meta信息，例如数据库的schema、addition等；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Nebula graphd&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;负责数据计算的逻辑层，是无状态的，可以进行平行扩展，内部执行计算引擎来完成查询的整个过程。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Nebula proxy&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;是我们新增的模块，作为整个nebula模块的代理层，可以接受外部的命令，并对图数据进行操作，包括图的查询，更新，删除。另外，nebula proxy也负责协议的转换，集群的心跳和路由注册。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;由于单集群有重建数据的需求，也为了防止机房故障，我们选择双集群来支撑整个服务的可用性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在线层请求处理的流程为，cgi在接收到用户请求后，将用户请求传给broker模块，broker请求模版匹配生成相应的图查询语句，从Zookeeper中提取可用的集群，将查询语句发给nebula proxy进行图谱召回，nebula proxy将具体的查询语句传递给nebula graphd, nebula graphd负责执行最终的语句，然后把结果返回给broker层，broker层补充一些前端显示摘要后，将数据返回给前端做展示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 离线层&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjJUGx6txWmGX6CxkN5TsxHJ0Fh3CUWJaKwia5qZf9ZvXtsjZxVy4Xx5ZDvicbhuJeZsPxOxTiake3vw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;音乐数据有实时的新增数据，例如新增发行的唱片，还有全量数据的更新，所以我们选择了全量加增量的数据层方案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;(1) 全量数据生成方案&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;音乐很多数据存在数据库中，先将数据从DB中dump出来后，由IndexBuilder模块将数据格式转换为所需的格式后形成一个全量的源数据，将全量的源数据上传到HDFS后，通过运行spark任务，把数据转为Nebula底层所需的数据文件，IndexMgr发现有新的常量数据生成后，将数据文件下载下来，将全量数据加载到NebulaProxy，这样全量数据就生成好了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;(2) 实时数据的生成&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每隔一段时间，通常是几分钟，将几分钟之内的业务修改数据dump出来后，转为特定的格式，形成一个增量的源数据，增量的源数据存入到Kafka里面，可以用于数据的重发和恢复，DataSender从Kafka队列里面拉取到最新的数据，通过NebulaProxy发送到集群，这样增量数据就生效了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这里涉及到了一个增量补发的问题，因为存量过程dump过程中要耗费很长时间，可能要花几个小时，在全量数据dump过程中也有新的增量数据，这期间的增量数据可能并没有进入到全量的数据当中。&lt;/span&gt;&lt;span&gt;所以这里需要进行一个历史增量的补发，从T0后（全量同步开始时间）的新增数据，不在全量数据中，需要将T0之后的数据全部进行补发。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;04&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;知识图谱搜索功能应用举例&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1. 配置化召回&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;常规召回方式为：&lt;/span&gt;&lt;span&gt;根据Query生成查询语句，&lt;/span&gt;&lt;span&gt;获取召回结果，&lt;/span&gt;&lt;span&gt;根据策略混排，&lt;/span&gt;&lt;span&gt;召回结果展示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这样做的问题是，每做一次，每增加一种新的召回策略，以上四步都要重复，所以召回不够灵活，业务改动大。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjJUGx6txWmGX6CxkN5TsxHb73zZFzVsUvoV1gOLibXGF7WB58gMQaa2OumcLP5gCZ13FHTbiaPKXPw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们增加了一种新的基于Query模板的召回方式，就是根据模板生成对应的查询语句，同时预先设置了一些常用的混排策略。比如我们配置一个学校加校歌的模板，当查询校歌的时候，我们把学校的名字提取出来，填到查询语句里面，形成一个完整的图查询语句。同时也预置了一些混排插入策略，填入对应的混排参数，就可以做到上线。这样做的优点就是召回比较灵活，和搜索相比，召回上线的代价比较小。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2. 业务应用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;325&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjJUGx6txWmGX6CxkN5TsxH2cAjXGyuLaE6atdRaibcdwiazUK4NVKh2pnHxpej10u65QcDzcJMmphg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们最终上线了上图这些业务，支持各类搜索场景。&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;校歌搜索：当用户搜索大学校名和校歌组合时，召回对应的学校的校歌；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;歌手场景：当用户搜索歌手名字的时候，返回歌手所在组合，以及合唱过知名歌曲的合作歌手等；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;影视场景：当用户搜索影视主题曲、片尾曲、插曲等等的时候，返回对应的影视的歌曲。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;05&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;总结与展望&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;今天的讨论从图数据的选型开始，到schema分类定义，项目架构层设计，再到知识图谱的搜索。&lt;/span&gt;&lt;span&gt;结论是采用图数据，可以很好的把专家经验智能融入图谱。&lt;/span&gt;&lt;span&gt;通过图数据技术实现的知识库，增强了检索、推荐、可视化等功能，腾讯音乐很好的对知识图谱技术进行了应用，大大提高了客户的搜索体验感，增强了客户黏度。&lt;/span&gt;&lt;span&gt;让我们拥抱AI技术，让其更好地服务于生活。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;06&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;精彩问答&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;Q：&lt;/span&gt;&lt;span&gt;在搜索过程中有考虑音频信息吗？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A：这个是有考虑的，我们可以通过音频识别技术，首先去识别歌曲的一个大的分类流派，比如说像民谣摇滚流行这些流派，然后在线检索的时候，我们会通过这种语音搜索去召回。另外，我们跟QQ音乐天津实验室也有合作，比如像听目前的金科视曲，后台走的也是走我们的限量搜索，也是通过对音频信息进行的召回。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Q：语义检索结果排在第几位？是怎么和关键词检索一起排序的？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A：首先我们会通过算法去挖掘某一个语义标签跟某一首歌曲的相似度，语意搜索的话就可以通过语音标签进行召回，优先把语义相似度高的结果排到前面。当然也会有一些奇异的情况，比如说像赵雷有一首歌叫民谣，民谣这首歌就是一个歌曲，它同时也是一个语义，我们排序的时候也会兼顾这种混排的效果，最下层排序，首先会把民谣的歌曲放在前面，因为它毕竟是一个比较知名歌手的歌曲，下面会把对应的语义的结构放在后面，然后我们在更上层会有基于算法的排序模型去给用户推荐点击量高的调前。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Q：全量索引版本切换双buffer内存是否会翻倍？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A：实际上我们索引切换的过程中是没有双buffer的，是按每一个分片下的每一个副本进行逐个切换，切换的时候会进行动态的卸载，所以并没有占用额外的内存。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Q：跨越截断，是在index截断好，还是在线选择截断？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;A：是在线选择截断，如果离线截断会导致数据丢失，这样是没办法回溯的。截断也是分片的，向量检索也是可以分片之后，做并行检索。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;今天的分享就到这里，谢谢大家。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;在文末分享、点赞、在看，给个3连击呗~&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分享嘉宾：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;289&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPjJUGx6txWmGX6CxkN5TsxHMgTfeAd8Q0emGYhfphQV9VdjhWrOZzNEckTKtuWk6scCxKqeMVS9gg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;活动推荐：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2022年02月19日，由&lt;/span&gt;&lt;span&gt;英伟达、中电港联合举办&lt;/span&gt;&lt;span&gt;的&lt;/span&gt;&lt;span&gt;《深度学习推理优化与部署实践》技术分享&lt;/span&gt;&lt;span&gt;，邀请英伟达、京东科技、vivo技术大咖，围绕“如何给深度学习加速？”为大家带来系列分享，感兴趣的小伙伴可&lt;/span&gt;&lt;span&gt;识别下方海报二维码进行报名。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;578&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.9994791666666667&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lAStFsJ0Pm2EJZ6dtHzMick9oBicicRbhTlyTeawbNZgHwXdqzDLUh7mL7eXZcWHf2hU0XI4fylUmQBXE51vjPKoQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1920&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;关于我们：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;DataFun：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;专注于大数据、人工智能技术应用的分享与交流。发起于2017年，在北京、上海、深圳、杭州等城市举办超过100+线下和100+线上沙龙、论坛及峰会，已邀请近1000位专家和学者参与分享。其公众号 DataFunTalk 累计生产原创文章500+，百万+阅读，12万+精准粉丝。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU1NTMyOTI4Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/zHbzQPKIBPh87SyjsEtoRFs9iaLyPXYh9ls0BcsiaPDnFkg72xgLsvku13ZRYibyq93DgRoCaTaTkbJj7Hia4dvI1w/0?wx_fmt=png&quot; data-nickname=&quot;DataFunTalk&quot; data-alias=&quot;datafuntalk&quot; data-signature=&quot;专注于大数据、人工智能技术应用的分享与交流。致力于成就百万数据科学家。定期组织技术分享直播，并整理大数据、推荐/搜索算法、广告算法、NLP 自然语言处理算法、智能风控、自动驾驶、机器学习/深度学习等技术应用文章。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;🧐&lt;strong&gt;分享、点赞、在看&lt;/strong&gt;，给个&lt;strong&gt;3连击&lt;/strong&gt;呗！&lt;strong&gt;👇&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>e1f7414aefab810884aa0ab14e43bc7f</guid>
<title>解读 5 种软件架构模式</title>
<link>https://toutiao.io/k/kzkb0tp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6666666666666666&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FE4VibF0SjfPbKbNVkmsYx2476ABnNd1rpGY4zDq6fAWhb1LaQElibm7ic8YUm2fMvgHKoq1G6MVzagfBMHVw6CUA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1920&quot;/&gt;&lt;/section&gt;&lt;section&gt;作者｜Orkhan Huseynli&lt;/section&gt;&lt;section&gt;
译者｜Sambodhi&lt;/section&gt;&lt;section&gt;
策划｜辛晓亮&lt;/section&gt;&lt;p&gt;当一些人开始涉足软件工程领域，总有一天他会需要学习&lt;strong&gt;软件架构模式&lt;/strong&gt;的基本知识。在我第一次接触编程的时候，我并不知道如何才能了解到现有的架构模型，这样就不会过于详尽，也不会让人感到混乱，而是非常抽象和简单的理解。&lt;/p&gt;&lt;p&gt;在我发现 Mark Richards 的 &lt;strong&gt;&lt;em&gt;Software Architecture Patterns&lt;/em&gt;&lt;/strong&gt;（《软件架构模式》，暂无中译本）一书之前，这个问题就一直存在。在此，我将与你分享这本书的最重要部分和架构模式。（要了解更多信息，我强烈建议你阅读这本书或他的报告）&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;报告地址：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.oreilly.com/content/software-architecture-patterns/&lt;/span&gt;&lt;/p&gt;&lt;section&gt;
&lt;span&gt;0&lt;/span&gt; 为什么作为软件工程师，至少要学习基本的架构模式？&lt;/section&gt;&lt;p&gt;我肯定有许多文章可以解答这个问题，但是我会告诉你一些原因。首先，如果你了解架构模式，你将更容易遵循架构师的要求。其次，理解这些模式可以帮助你在代码中作出决策：比如，如果你的应用设计是基于事件驱动的微服务，作为一名软件工程师，如果你注意到现有服务中逻辑的复杂性和责任的增加，你就必须把你的代码解耦到一个单独的服务中。（不懂的话，就跟着文中的内容走，这种模式在本文中已经做了一个简要的说明。）&lt;/p&gt;&lt;p&gt;Mark Richards 在他著的书中，描述了 5 种模式：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;分层架构&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;事件驱动架构&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;微内核架构（或插件架构）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;微服务架构&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;基于空间的架构（或云架构模式）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;
&lt;span&gt;1&lt;/span&gt;分层架构&lt;/section&gt;&lt;p&gt;它是单体应用最常见的架构。该模式的基本思想是将应用程序的逻辑划分为若干层，每层都封装了特定的角色。例如，&lt;strong&gt;持久层&lt;/strong&gt;将负责应用程序与数据库引擎之间的通信。&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7471428571428571&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FE4VibF0SjfPbKbNVkmsYx2476ABnNd1rNdpoA1u3q7Uu7O0XiaE64jjTjOdoaa2oPjDRsCVebgBd3ibC2p9eV7Ow/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;700&quot;/&gt;&lt;/section&gt;&lt;em&gt;&lt;span&gt;图 1：分层架构模式&lt;/span&gt;&lt;/em&gt;&lt;section&gt;
&lt;span&gt;2&lt;/span&gt;事件驱动架构&lt;/section&gt;&lt;p&gt;这种模式背后的思想是将应用逻辑解耦为&lt;strong&gt;单一用途的事件处理组件，以异步方式接收和处理事件&lt;/strong&gt;。这是一种广受欢迎的分布式异步架构模型，它以高可扩展性和适应性而闻名。&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6757142857142857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FE4VibF0SjfPbKbNVkmsYx2476ABnNd1rWnASBNhl4bgsq9nPmAicsrWl55SMc8ekm1iazT5homzzGn1WU8jPJqrQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;700&quot;/&gt;&lt;/section&gt;&lt;span&gt;&lt;em&gt;图 2：事件驱动架构代理拓扑&lt;/em&gt;&lt;/span&gt;&lt;section&gt;&lt;section&gt;
&lt;span&gt;3&lt;/span&gt; 微内核架构  &lt;/section&gt;&lt;/section&gt;&lt;p&gt;微内核架构，也被称为插件架构，这种设计模式包含两大部分：&lt;strong&gt;核心系统&lt;/strong&gt;和&lt;strong&gt;插件模块&lt;/strong&gt;（或扩展）。&lt;strong&gt;Web 浏览器&lt;/strong&gt;就是一个很好的例子，它相当于核心系统，可以让你无限地安装扩展（或者插件）。&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6742857142857143&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FE4VibF0SjfPbKbNVkmsYx2476ABnNd1rljBW6q7ibDMzMo2JyCIxnJVBs6rrnXzvFfK309iaBDo68f0R5QGK4Qnw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;700&quot;/&gt;&lt;/section&gt;&lt;em&gt;&lt;span&gt;图 3：微内核架构&lt;/span&gt;&lt;/em&gt;&lt;section&gt;
&lt;span&gt;4&lt;/span&gt;微服务架构&lt;/section&gt;&lt;p&gt;微服务架构由&lt;strong&gt;单独部署的服务组成，每个服务最好都有一个单一的责任&lt;/strong&gt;。这些服务彼此之间是相互独立的，当其中一个服务出现故障时，其他服务不会因此中断。&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7957142857142857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FE4VibF0SjfPbKbNVkmsYx2476ABnNd1ruu7eHVwmdJsyVwHQJw58Vct66zmtkCQcMpwNkFvyxO9uIhVaey6iaTA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;700&quot;/&gt;&lt;/section&gt;&lt;em&gt;&lt;span&gt;图 4：微服务架构&lt;/span&gt;&lt;/em&gt;&lt;section&gt;&lt;section&gt;
&lt;span&gt;5&lt;/span&gt;基于空间的架构  &lt;/section&gt;&lt;/section&gt;&lt;p&gt;基于空间的模式背后的主要思想是&lt;strong&gt;分布式共享内存，以缓解经常发生在数据库层面的问题。它的假设是，通过使用内存数据处理大部分操作，这样我们就可以避免在数据库中进行额外的操作，从而避免未来可能由此产生的任何问题（例如，如果你的用户活动数据实体发生了变化，你不需要改变一堆代码来持久化和从数据库中检索这些数据）&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;基本的方法是将应用程序分离成&lt;strong&gt;处理单元&lt;/strong&gt;（可以根据需求自动扩大和缩小），数据将在这些单元之间进行复制和处理，无需持久化到中央数据库（虽然当系统发生故障时，也会有本地存储）。&lt;/p&gt;&lt;section&gt;&lt;em&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5357142857142857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/FE4VibF0SjfPbKbNVkmsYx2476ABnNd1rib1fuEXqwLwLbHrFcGficmDatVwPg4MFDMXYqIfTtchA4yeEOhpIAwiaA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;700&quot;/&gt;&lt;/em&gt;&lt;/section&gt;&lt;em&gt;&lt;span&gt;图 5：基于空间的架构&lt;/span&gt;&lt;/em&gt;&lt;p&gt;你可以在我的 GitHub 账户中找到其中一些架构模式的最简单例子。以下是链接：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;分层模式（使用 Java）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;微内核或插件模式（使用 Go 或 Golang）。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;微服务模式（使用 Go）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;作者介绍：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Orkhan Huseynli，软件工程师。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;原文链接：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://orkhanscience.medium.com/software-architecture-patterns-5-mins-read-e9e3c8eb47d2&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>962d031a03b6c5bf983f68c39a22afce</guid>
<title>2022 技术趋势：Go、Rust 将大放异彩</title>
<link>https://toutiao.io/k/jjrci58</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;文 | 白开水不加糖&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;出品 | OSC开源社区（ID：oschina2013）&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在线学习平台 O&#x27;Reilly 最新发布了一份《Technology Trends for 2022》报告。该报告基于该平台 2021 年 1 至 9 月产生的数据，并与 2020 年同期进行了比较；就技术行业的趋势进行了一番分析。O&#x27;Reilly 的用户群涵盖全球来自 100 多个国家/地区的数以百万计的开发者。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;报告基于四种具体数据进行了分析：搜索查询、向人工智能引擎 O&#x27;Reilly Answers 提出的问题、按 title 的资源使用情况、以及按主题分类的资源使用情况。值得注意的是，对于平台上尚未囊括的内容（如：QUIC 协议或 HTTP/3 之类的）；无论用户兴趣程度如何，其相关统计数据都将为零。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.21995192307692307&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dkwuWwLoRK8IibzsTBgDWMOFytrLAZa8uZP2icK08MKUDl6gvbkMMictLNFfE18xaAiaRt110ufvKel1Gk130UaEsw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1664&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;调查结果指出，勒索软件正在推动开发者对网络安全的兴趣、物联网和游戏开发则刺激了对有 35 年历史的编程语言 C++ 的兴趣。以及存在的可能情况是，开发人员正在关注一些较新的语言，以拓展自身优势。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;具体表现为，过去一年中&lt;/span&gt;有关勒索软件的内容使用量几乎增加了两倍（270%）、关于隐私的内容增加了 90%、威胁建模增加了 58%、身份&lt;span&gt;识别&lt;/span&gt;增加了 50%、应用程序安全性提高 45%、恶意软件增加了 34%、零信任增加了 23%。供应链安全尚未成为安全主题，但有关供应链管理的内容的使用量增长了 30%。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;对 &lt;/span&gt;&lt;span&gt;C++ 的兴趣在过去一年显着增长（13%），其使用量大约是 C 的两倍。关于 C 的内容使用基本持平，下降了 3%。&lt;/span&gt;O&#x27;Reilly 方面指出&lt;span&gt;，C++ 在游戏编程中占主导地位，但他们怀疑该语言还将在嵌入式系统中成为主导，且正越来越广泛地用于开发微服务。另一方面，虽然 C 语言在传统上是工具开发者的主要语言（&lt;/span&gt;&lt;span&gt;所有 Unix 和 Linux 实用程序都是用 C 编写的&lt;/span&gt;&lt;span&gt;），但这一角色可能已经转移到 Go 和 Rust 等较新的语言。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Go 和 Rust 继续增长。自去年以来，有关 Go 的内容使用量增长了 23%，Rust 增长了 31%。“我们预计增长将继续。Rust 和 Go 都将继续存在。Rust 反映了关于内存管理和并发性的全新思考方式。除了为并发提供一个干净且相对简单的模型之外，Go 代表了一种语言的转变，这些语言随着每个新版本的发布而变得越来越复杂。”&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;尽管对 C++ 的兴趣显着增加，但 &lt;/span&gt;&lt;span&gt;Python、Java 和 JavaScript 仍保持领先地位。其中 Java 上升了 4%，Python 下降了 6%，JavaScript 下降了 3%。此外，Scala 和 Kotlin 分别下降了 27% 和 9%。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6449598572702944&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/dkwuWwLoRK8IibzsTBgDWMOFytrLAZa8uhiaZATj4ic7Doh3HvWxW7JTQIQXWmqcoibfKnCk9b09QP4eo7klbCib9Sw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1121&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;软件架构、Kubernetes 和微服务是 2021 年使用量最大的三个主题。它们的同比增长也非常健康，分别为 19%、15% 和 13%。&lt;/span&gt;&lt;span&gt;考虑到云应用程序开发的步伐，对容器软件的兴趣也增加了 137%；&lt;/span&gt;&lt;span&gt;Docker 的增长较少但使用量较高。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;Amazon Web Services &lt;/span&gt;的竞争正在加剧。有关 Microsoft Azure 的内容使用量增长了 32%，Google Cloud 增长了 54%，而 AWS 相关内容的使用量下降了 3%。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;关于机器学习的内容使用量增长了 35%，但该主题的特定兴趣发生了显着变化。例如，对深度学习的兴趣下降了 14%、对神经网络的兴趣增长了 13%、强化学习和对抗网络分别增长了 37% 和 51%。 &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;更多详情可&lt;/span&gt;&lt;span&gt;查看完整报告：&lt;span&gt;https://www.oreilly.com/radar/technology-trends-for-2022/&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对 Rust 感兴趣的可以关注公众号：Rust 编程指北&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwOTIyNzM5OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/kmhrPEkIgHWcrYbUeXRjssykgInvap9uG758l6ONpayyLYvE4iarKTbItdiad1ADiboBE5pW1l4aAD7bej9sWic6Fw/0?wx_fmt=png&quot; data-nickname=&quot;Rust编程指北&quot; data-alias=&quot;rustrd&quot; data-signature=&quot;Rust语言的那些事，一起用Rust编程，从入门到“放弃”！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;104423&quot;&gt;&lt;section&gt;&lt;hr/&gt;&lt;p&gt;&lt;strong&gt;推荐阅读&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-darkmode-bgcolor-15906318746582=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906318746582=&quot;rgb(255, 255, 255)&quot; data-style=&quot;width: 30px; height: 30px; background-color: rgb(255, 255, 255); box-shadow: rgb(87, 187, 255) -7px -7px 0px; margin-left: 7px;&quot;&gt;&lt;span&gt;&lt;strong&gt;福利&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-15906318746582=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906318746582=&quot;rgb(255, 255, 255)&quot; data-style=&quot;width: 30px; height: 30px; background-color: rgb(255, 255, 255); box-shadow: rgb(87, 187, 255) -7px -7px 0px; margin-left: 7px;&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-darkmode-bgcolor-15906318746582=&quot;rgb(36, 36, 36)&quot; data-darkmode-original-bgcolor-15906318746582=&quot;rgb(255, 255, 255)&quot; data-style=&quot;width: 30px; height: 30px; background-color: rgb(255, 255, 255); box-shadow: rgb(87, 187, 255) -7px -7px 0px; margin-left: 7px;&quot;&gt;&lt;span/&gt;&lt;span&gt;我为大家整理了一份&lt;/span&gt;&lt;span&gt;从入门到进阶的Go学习资料礼包&lt;/span&gt;&lt;span&gt;，包含学习建议：入门看什么，进阶看什么。&lt;/span&gt;&lt;span&gt;关注公众号 「polarisxu」，回复 &lt;/span&gt;&lt;strong&gt;&lt;span&gt;ebook&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; 获取；还可以回复「&lt;strong&gt;进群&lt;/strong&gt;」，和数万 Gopher 交流学习。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/UWba2ryLMqm8cgtrMXjG1BLGg46vQNmUompBL02uYYwic9RicPbCnlKdZiacBF5Wv6RLgmGIqnBnwuWyP82ibYusiag/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;258&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>91748a8071504e5d3da79052e2eec415</guid>
<title>React 新的文档用到了哪些技术？</title>
<link>https://toutiao.io/k/gpsq0q2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h2&gt;&lt;span&gt;1. &lt;/span&gt;前言&lt;/h2&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzg3MTU4NTI3OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/DByMFBAKmy4tPIvr2tia5uXwn82NMUrdb1iaxuic4tlLnz5bFibGHOA4rCZy111tDZwoichgyO9q0oYmfVkbYlyqTew/0?wx_fmt=png&quot; data-nickname=&quot;前端森林&quot; data-alias=&quot;&quot; data-signature=&quot;关注行业前沿，定期推送大前端相关的干货文章和日常开发过程中的实战总结～&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span href=&quot;https://beta.reactjs.org&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span href=&quot;https://beta.reactjs.org&quot;&gt;https://beta.reactjs.org&lt;/span&gt; React 的新的文档已经 完成了 70 % 并且呼吁社区进行翻译工作。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.40089086859688194&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/e4YNLngAJ867ibXoGAqbtt3TtILmPUlrBfJym4bthm5ASaficSogNniboFN4sjTy7H6dlD96qYAl9mwmEia4k6SfVw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;898&quot;/&gt;&lt;/p&gt;&lt;p&gt;新的文档采用了全新的架构 &lt;code&gt;next.js&lt;/code&gt; +&lt;code&gt; Tailwind CSS&lt;/code&gt; ,改版后的文档界面有种焕然一新的感觉，支持暗黑模式，我们可以在线学习，并且写代码，采用了这种所见即所得的形式，大大降低了学习者的成本，我也被这种形式所深深吸引，那么这种所见即所得的形式是如何实现的呢？&lt;/p&gt;&lt;h2&gt;&lt;span&gt;2. &lt;/span&gt;基本介绍&lt;/h2&gt;&lt;p&gt;新文档地址在 &lt;span href=&quot;https://github.com/reactjs/reactjs.org/&quot;&gt;https://github.com/reactjs/reactjs.org/&lt;/span&gt; 中的 beta 目录下，外层代码是目前的文档代码，那么我们可以直接 &lt;code&gt;git clone&lt;/code&gt; 并且拷贝 beta 目录下的内容&lt;/p&gt;&lt;p&gt;这里面有 &lt;code&gt;yarn.lock&lt;/code&gt; 文件，跟绝大多数 next 项目一样 &lt;code&gt;yarn install&lt;/code&gt; 之后，运行 &lt;code&gt;yarn dev&lt;/code&gt; 就可以运行开发环境&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.23354958294717332&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e4YNLngAJ867ibXoGAqbtt3TtILmPUlrBiaOOnwQWibREIJgweDGVqeDTdCesicJ7SEGicQS0USKGkRp2lgibywibBoog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2158&quot;/&gt;&lt;figcaption&gt;s16501401132022&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;启动速度非常快，仅仅 3.3s， 打开 &lt;span href=&quot;http://localhost:3000%EF%BC%8C%E6%AD%A4%E6%97%B6&quot;&gt;http://localhost:3000，此时&lt;/span&gt; &lt;code&gt;next.js&lt;/code&gt; 会再次编译，大概 &lt;span&gt;「200ms」&lt;/span&gt;，这种优势得益于 next.js 按需编译的优势，也就是是说当前启动的时候，并不会全站打包，而是当进入某个页面的时候编译当前页面，所以速度相当快。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;3. &lt;/span&gt;约定式路由&lt;/h2&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0120481927710843&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e4YNLngAJ867ibXoGAqbtt3TtILmPUlrBRVYaZ1cYrS60JZ7LWzAAvh1p58Ety7vy7cLlVfJksFLNhCAsIUCYhg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;830&quot;/&gt;&lt;figcaption&gt;s16384301132022&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;此时发现里面的文档都是&lt;code&gt;.md&lt;/code&gt;后缀的 Markdown 文件，那么 markdown 也可以写交互功能了吗？&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5024390243902439&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e4YNLngAJ867ibXoGAqbtt3TtILmPUlrB1ZZxBcqGzs5Wdjm3vOJvwVeSibBogiaLNfJtbGdpegUuibicVUK0icdACiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1230&quot;/&gt;&lt;/p&gt;&lt;p&gt;打开 index.md，我们发现里面的代码不仅仅是 markdown 还有 react 组件，那么 HomepageHero  这个组件是如何被解析成 react 组件的？&lt;/p&gt;&lt;h2&gt;&lt;span&gt;4. &lt;/span&gt;next 支持 Markdown&lt;/h2&gt;&lt;p&gt;首先 &lt;code&gt;next.js&lt;/code&gt; 是不支持 &lt;code&gt;Markdown&lt;/code&gt; 的，我们需要让 &lt;code&gt;next.js&lt;/code&gt; 支持 &lt;code&gt;Markdown&lt;/code&gt;， 我们打开 &lt;code&gt;next.js&lt;/code&gt; 的配置文件 &lt;code&gt;next.config.js&lt;/code&gt;,&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;pageExtensions: [&lt;span&gt;&#x27;jsx&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;js&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;ts&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;tsx&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;mdx&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;md&#x27;&lt;/span&gt;],&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;先让 next 支持 md、 mdx 格式，接下来我们来看下 webpack 部分的配置&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;webpack: &lt;span&gt;(&lt;span&gt;config, {dev, isServer, ...options}&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; (process.env.ANALYZE) {&lt;br/&gt;        &lt;span&gt;const&lt;/span&gt; { BundleAnalyzerPlugin } = &lt;span&gt;require&lt;/span&gt;(&lt;span&gt;&#x27;webpack-bundle-analyzer&#x27;&lt;/span&gt;)&lt;br/&gt;        config.plugins.push(&lt;br/&gt;        &lt;span&gt;new&lt;/span&gt; BundleAnalyzerPlugin({&lt;br/&gt;            &lt;span&gt;analyzerMode&lt;/span&gt;: &lt;span&gt;&#x27;static&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;reportFilename&lt;/span&gt;: options.isServer&lt;br/&gt;            ? &lt;span&gt;&#x27;../analyze/server.html&#x27;&lt;/span&gt;&lt;br/&gt;            : &lt;span&gt;&#x27;./analyze/client.html&#x27;&lt;/span&gt;,&lt;br/&gt;        })&lt;br/&gt;        );&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;// Add our custom markdown loader in order to support frontmatter&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;// and layout&lt;/span&gt;&lt;br/&gt;    config.module.rules.push({&lt;br/&gt;        &lt;span&gt;test&lt;/span&gt;: &lt;span&gt;/.mdx?$/&lt;/span&gt;, &lt;span&gt;// load both .md and .mdx files&lt;/span&gt;&lt;br/&gt;        use: [&lt;br/&gt;        options.defaultLoaders.babel,&lt;br/&gt;        {&lt;br/&gt;            &lt;span&gt;loader&lt;/span&gt;: &lt;span&gt;&#x27;@mdx-js/loader&#x27;&lt;/span&gt;,&lt;br/&gt;            &lt;span&gt;options&lt;/span&gt;: {&lt;br/&gt;            remarkPlugins,&lt;br/&gt;            },&lt;br/&gt;        },&lt;br/&gt;        path.join(__dirname, &lt;span&gt;&#x27;./plugins/md-layout-loader&#x27;&lt;/span&gt;),&lt;br/&gt;        ],&lt;br/&gt;    });&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; config;&lt;br/&gt;},&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;首先是单独安装了 &lt;code&gt;webpack-bundle-analyzer&lt;/code&gt; 这个是打包分享插件，通过 &lt;code&gt;ANALYZE=true next build&lt;/code&gt; 就可以生成分析包含哪些模块包的网页&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6823647294589178&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e4YNLngAJ867ibXoGAqbtt3TtILmPUlrBeoib9liaUun52ycstvzrjDO43fX4wNNy36u11fgzpDvjn12hVIsic244w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;998&quot;/&gt;&lt;figcaption&gt;s16585001132022&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这里面还加了一个自定义 loader&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;module&lt;/span&gt;.exports = &lt;span&gt;async&lt;/span&gt; &lt;span&gt;&lt;span&gt;function&lt;/span&gt; (&lt;span&gt;src&lt;/span&gt;) &lt;/span&gt;{&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; callback = &lt;span&gt;this&lt;/span&gt;.async();&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; {content, data} = fm(src);&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; pageParentDir = path&lt;br/&gt;    .dirname(path.relative(&lt;span&gt;&#x27;./src/pages&#x27;&lt;/span&gt;, &lt;span&gt;this&lt;/span&gt;.resourcePath))&lt;br/&gt;    .split(path.sep)&lt;br/&gt;    .shift();&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; layoutMap = {&lt;br/&gt;    &lt;span&gt;blog&lt;/span&gt;: &lt;span&gt;&#x27;Post&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;learn&lt;/span&gt;: &lt;span&gt;&#x27;Learn&#x27;&lt;/span&gt;,&lt;br/&gt;    &lt;span&gt;reference&lt;/span&gt;: &lt;span&gt;&#x27;API&#x27;&lt;/span&gt;,&lt;br/&gt;  };&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; layout = layoutMap[pageParentDir] || &lt;span&gt;&#x27;Home&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;const&lt;/span&gt; code =&lt;br/&gt;    &lt;span&gt;`import withLayout from &#x27;components/Layout/Layout&lt;span&gt;${layout}&lt;/span&gt;&#x27;;&lt;br/&gt;&lt;br/&gt;export default withLayout(&lt;span&gt;${&lt;span&gt;JSON&lt;/span&gt;.stringify(data)}&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;`&lt;/span&gt; + content;&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;return&lt;/span&gt; callback(&lt;span&gt;null&lt;/span&gt;, code);&lt;br/&gt;};&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过判断父级目录自动增加 Layout，有了 layout，结构就出来了，所以 webpack 的 loader 就是一个函数，可以直接修改代码。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;5. &lt;/span&gt;MDX&lt;/h2&gt;&lt;p&gt;&lt;span href=&quot;https://mdxjs.com/docs/using-mdx/#mdx-provider&quot;&gt;MDX&lt;/span&gt;&lt;sup&gt;&lt;span href=&quot;#fn-MDX&quot;&gt;[1]&lt;/span&gt;&lt;/sup&gt; 让 markdown 支持 jsx，我们一起来看看如何使用&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; React &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; ReactDom &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;react-dom&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; Post &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./post.mdx&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; {Heading, &lt;span&gt;/* … */&lt;/span&gt; Table} &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./components/index.js&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; components = {&lt;br/&gt;  &lt;span&gt;h1&lt;/span&gt;: Heading.H1,&lt;br/&gt;  &lt;span&gt;// …&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;table&lt;/span&gt;: Table,&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;ReactDom.render(&lt;br/&gt;  &amp;lt;&lt;span&gt;Post&lt;/span&gt; &lt;span&gt;components&lt;/span&gt;=&lt;span&gt;{components}&lt;/span&gt; /&amp;gt;,&lt;br/&gt;  &lt;span&gt;document&lt;/span&gt;.querySelector(&lt;span&gt;&#x27;#root&#x27;&lt;/span&gt;)&lt;br/&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在 components 传入自定义组件，在 markdown 中就可以使用了。也可以改成嵌套模式：&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; React &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;react&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; ReactDom &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;react-dom&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; Post &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./post.mdx&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; {Heading, &lt;span&gt;/* … */&lt;/span&gt; Table} &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;./components/index.js&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; {MDXProvider} &lt;span&gt;from&lt;/span&gt; &lt;span&gt;&#x27;@mdx-js/react&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;const&lt;/span&gt; components = {&lt;br/&gt;  &lt;span&gt;h1&lt;/span&gt;: Heading.H1,&lt;br/&gt;  &lt;span&gt;// …&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;table&lt;/span&gt;: Table,&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;ReactDom.render(&lt;br/&gt;  &amp;lt;&lt;span&gt;MDXProvider&lt;/span&gt; &lt;span&gt;components&lt;/span&gt;=&lt;span&gt;{components}&lt;/span&gt;&amp;gt;&lt;br/&gt;    &amp;lt;&lt;span&gt;Post&lt;/span&gt; /&amp;gt;&lt;br/&gt;  &amp;lt;/&lt;span&gt;MDXProvider&lt;/span&gt;&amp;gt;,&lt;br/&gt;  &lt;span&gt;document&lt;/span&gt;.querySelector(&lt;span&gt;&#x27;#root&#x27;&lt;/span&gt;)&lt;br/&gt;);&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;span&gt;5.1. &lt;/span&gt;在线沙箱&lt;/h3&gt;&lt;p&gt;文档中还有一种写法, 可以直接在网页中渲染一个 &lt;span href=&quot;https://codesandbox.io/&quot;&gt;https://codesandbox.io/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;并且文件可以引用文件，这就比较你牛了&lt;/p&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8574821852731591&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e4YNLngAJ867ibXoGAqbtt3TtILmPUlrBibibVsL4z57xrJI0lqicLGJIreOV8ZOXb3xp7lE0IUelX90icsoSMzYxsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;842&quot;/&gt;&lt;/figure&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3164426059979317&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e4YNLngAJ867ibXoGAqbtt3TtILmPUlrBObQpxv4DrM5PIarJVm2fNXLD9zInRVicBdjk1YYlppEh04Bl3CQ2caA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;967&quot;/&gt;&lt;figcaption&gt;s18303801132022&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;我们发现 Sandpack 里面使用了 &quot;@codesandbox/sandpack-react&quot; 这个包，&lt;br/&gt;打开 &lt;span href=&quot;https://sandpack.codesandbox.io/&quot;&gt;https://sandpack.codesandbox.io/&lt;/span&gt; 官网，非常酷炫的效果映入眼帘&lt;/p&gt;&lt;p&gt;简单几个配置就可以渲染出在线代码编辑器&lt;/p&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;Sandpack&lt;br/&gt;  customSetup={{ &lt;br/&gt;    dependencies: { &lt;br/&gt;      &quot;react-markdown&quot;: &quot;latest&quot; &lt;br/&gt;    }, &lt;br/&gt;    files: {&lt;br/&gt;      &quot;/App.js&quot;: `import ReactMarkdown from &#x27;react-markdown&#x27; &lt;br/&gt;&lt;br/&gt;export default function App() {&lt;br/&gt;  return (&lt;br/&gt;    &amp;lt;ReactMarkdown&amp;gt;&lt;br/&gt;      # Hello, *world*!&lt;br/&gt;    &amp;lt;/ReactMarkdown&amp;gt;&lt;br/&gt;  )&lt;br/&gt;}`&lt;br/&gt;    }&lt;br/&gt;  }}&lt;br/&gt;/&amp;gt;;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6790490341753344&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/e4YNLngAJ867ibXoGAqbtt3TtILmPUlrB5WpENcXpDibAoQDrJrKuJIpF0CDDp6gUxcPpeMQhq7Y4SiaAGPYFrAIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;673&quot;/&gt;&lt;/figure&gt;&lt;h2&gt;&lt;span&gt;6. &lt;/span&gt;小结&lt;/h2&gt;&lt;p&gt;1、React 新文档的架构我很喜欢，代码和目录也非常清晰，非常适合阅读&lt;/p&gt;&lt;p&gt;2、我们一些组件库文档是否可以往next架构迁移？&lt;/p&gt;&lt;section&gt;&lt;hr/&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;MDX: https://mdxjs.com/docs/using-mdx/#mdx-provider&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>