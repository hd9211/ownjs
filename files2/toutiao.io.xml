<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>9aa5f7f947c5113c6e01959f8e550bf6</guid>
<title>地表最强 Markdown 文本编辑工具——Obsidian</title>
<link>https://toutiao.io/k/d7zchat</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;pos-relative js-post-content&quot;&gt;
              
              &lt;p&gt;沈从文先生在给张兆和的情书中，有写道：“&lt;strong&gt;我一辈子走过许多地方的路，行过许多地方的桥，看过许多形状的云，喝过许多种类的酒，却只爱过一个正当最好年龄的人&lt;/strong&gt;”。近十年，写文章或文档，用过非常多基于 &lt;a href=&quot;https://nicelinks.site/tags/Markdown&quot;&gt;Markdown&lt;/a&gt; 出色的文本编辑工具，诸如 &lt;a href=&quot;https://nicelinks.site/post/5af1dffb979f626ea3d37910&quot;&gt;Sublime Text&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5a5114df0b0ec0396863d7c1&quot;&gt;Cmd Markdown&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5b055142e93ed2618cfac124&quot;&gt;MarkEditor&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5cbc58707855f80ea42ea6a7&quot;&gt;Typora&lt;/a&gt; ， &lt;a href=&quot;https://markdown.lovejade.cn/&quot;&gt;Arya 在线&lt;/a&gt; 等等，直到遇见 &lt;a href=&quot;https://nicelinks.site/post/6266999577f8270876fcb3d6&quot;&gt;Obsidian&lt;/a&gt; ，被强大的功能、完美的设计所震撼、折服，堪称&lt;strong&gt;地表最强文本编辑工具&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/redirect?url=https://obsidian.md/&quot;&gt;Obsidian&lt;/a&gt; 是一个强大的&lt;strong&gt;知识库&lt;/strong&gt;、一款好用的&lt;strong&gt;笔记应用&lt;/strong&gt;程序，位于纯文本 &lt;code&gt;Markdown&lt;/code&gt; 文件的本地文件夹之上。其目标是：永远成为你第二个大脑。人脑是非线性的：人们总是从一个想法跳到另一个想法。你的第二个大脑应该同样工作。在 Obsidian 中，建立和跟随&lt;strong&gt;连接&lt;/strong&gt; 是无摩擦的。像园丁一样照顾你的笔记；在一天结束时，坐下来惊叹于您自己的知识图谱。── 出自 &lt;a href=&quot;https://nicelinks.site/post/6266999577f8270876fcb3d6&quot;&gt;倾城之链 | Obsidian&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://oss.nicelinks.site/obsidian.md.png?x-oss-process=style/png2jpg&quot; alt=&quot;Obsidian 倾城之链&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nicelinks.site/post/6266999577f8270876fcb3d6&quot;&gt;Obsidian&lt;/a&gt; ，它不仅是极其好用的文本编辑工具，而且还是一款&lt;strong&gt;强大的知识库&lt;/strong&gt;；但，在这里就不对&lt;strong&gt;知识库&lt;/strong&gt;作探讨，主要就其极致的文本编辑体验，结合自己短暂的实践体验，来跟朋友们分享下 Obsidian 的优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认&lt;strong&gt;所见即所得&lt;/strong&gt;（wysiwyg）的编辑模式；&lt;/li&gt;
&lt;li&gt;支持粘贴 HTML 自动转换为 Markdown；&lt;/li&gt;
&lt;li&gt;所有操作默认有&lt;strong&gt;快捷键&lt;/strong&gt;，并且方便自行更改；&lt;/li&gt;
&lt;li&gt;应用打开极快，操作流畅，所占用内存很少；&lt;/li&gt;
&lt;li&gt;100% 免费供个人使用，无需账户或注册；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支持扩展&lt;/strong&gt;，社区已贡献有 &lt;a href=&quot;https://obsidian.md/plugins#&quot;&gt;近 600 个插件&lt;/a&gt; ；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要着重称赞的就是 Obsidian 的插件，这在 Markdown 编辑器工具中是少见的。首先，这种机制本身就很赞，不将所有功能，都集成于应用本身，而按需给予，善莫如是，使其能在&lt;strong&gt;轻量&lt;/strong&gt;与&lt;strong&gt;强大&lt;/strong&gt;中平衡；其次，有了这种机制，即能允许用户介入，参与贡献，无疑是为产品功能丰富，提供了绝佳的途径。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;：Obsidian 插件，安装与使用，都非常方便；前往 &lt;a href=&quot;https://obsidian.md/plugins&quot;&gt;Obsidian Plugins&lt;/a&gt;，检索您想要的插件；如果您已安装并打开 Obsidian，点击 &lt;code&gt;Open in Obsidian&lt;/code&gt;，即可快速在 Obsidian 中，打开该插件；点击 &lt;code&gt;install&lt;/code&gt; 安装之后，再点击 &lt;code&gt;enable&lt;/code&gt; 即可启用该插件（如下截图）。对于有需要按键才能作用的插件，您还可以修改&lt;code&gt;快捷键&lt;/code&gt;以及其他设置参数。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lovejade.oss-cn-shenzhen.aliyuncs.com/Obsidian-Pangu-Plugin.png&quot; alt=&quot;Obsidian Pangu Plugin&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;下面，跟大家分享些个人所喜欢的插件：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Add improved navigation, formatting, and manipulation to markdown tables in Obsidian&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Markdown 的表格语法比在 Word 中插入表格还要麻烦，一旦想要增改某个内容，更是灾难。该插件则大大简化了表格输入的流程。&lt;/p&gt;
&lt;p&gt;要创建表格，请创建一个 &lt;code&gt;|&lt;/code&gt; 字 符，然后键入表格的第一个标题并按 &lt;code&gt;Tab&lt;/code&gt;，就会触发插件的自动补全语法。之后通过 &lt;code&gt;Tab&lt;/code&gt; / &lt;code&gt;Shift + Tab&lt;/code&gt; 来在表格之间移动光标，通过 &lt;code&gt;Enter&lt;/code&gt; 完成输入；顷刻之间，就能写完您想要的表格，实在是完美。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/tgrosinger/advanced-tables-obsidian/main/resources/screenshots/basic-functionality.gif&quot; alt=&quot;# Advanced Tables for Obsidian&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果您想了解更多，可参见 Github 源码： &lt;a href=&quot;https://github.com/tgrosinger/advanced-tables-obsidian&quot;&gt;tgrosinger/advanced-tables-obsidian&lt;/a&gt; 。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;为 Obsidian 笔记加上「盘古之白」，排版强迫症者的福音。 | A small plugin aims to add space between Chinese Characters and English Alphabet, and it is a boon for typographically compulsive people.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个小插件，旨在增加汉字和英文字母之间，添加&lt;strong&gt;空格&lt;/strong&gt;，使得整个排版更加专业且美观；这对于排版强迫症的人来说，是一个福音（我个人非常喜欢，先前是借助 &lt;a href=&quot;https://nicelinks.site/post/5c16083e819ae45de1453caa&quot;&gt;Prettier&lt;/a&gt; 或其他工具，来实现）。&lt;/p&gt;
&lt;p&gt;如果你想了解更多，可以参见 Github 源码： &lt;a href=&quot;https://github.com/Natumsol/obsidian-pangu&quot;&gt;Obsidian Pangu Plugin&lt;/a&gt; 。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A plugin for Obsidian which allows syntax highlighting for code blocks in the editor.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这对于程序员（软件开发）来讲，非常有价值；它能让编辑界面的代码，页面的元数据都有高亮效果；而且支持的格式极多，如 &lt;code&gt;xml&lt;/code&gt;、&lt;code&gt;json&lt;/code&gt;、&lt;code&gt;ts&lt;/code&gt;、&lt;code&gt;js&lt;/code&gt;、&lt;code&gt;html&lt;/code&gt;、&lt;code&gt;css&lt;/code&gt;、&lt;code&gt;python&lt;/code&gt;、&lt;code&gt;bash&lt;/code&gt; 等等。值得一提的是，在代码区域，可以放心使用 &lt;code&gt;Tab&lt;/code&gt; 按键，无需担心会清空你选中的代码，其效果跟在代码编辑器中是一致的，体验极佳。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/deathau/cm-editor-syntax-highlight-obsidian/raw/main/screenshot.png&quot; alt=&quot;# Editor Syntax Highlight Obsidian Plugin&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果你想了解更多，可以参见 Github 源码： &lt;a href=&quot;https://github.com/deathau/cm-editor-syntax-highlight-obsidian&quot;&gt;Editor Syntax Highlight Obsidian Plugin&lt;/a&gt; 。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Create markdown-backed Kanban boards in Obsidian&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Kanban&lt;/code&gt;，这款插件可以为 Obsidian 增加看板模块；让你可以使用看板，来管理&lt;strong&gt;任务或笔记&lt;/strong&gt;。它有两种看板创建方式：使用命令添加新的看板，也可以使用右键菜单创建；而且可以在 Markdown 和看板中，随时切换，如果你想要用 Obsidian &lt;strong&gt;管理日常任务&lt;/strong&gt;的话，它是非常好的插件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lovejade.oss-cn-shenzhen.aliyuncs.com/Obsidian-kanban.png&quot; alt=&quot;Obsidian kanban&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;关于如何创建和使用看板，可参见： &lt;a href=&quot;https://matthewmeye.rs/obsidian-kanban/How%20do%20I/Create%20a%20Kanban%20board/&quot;&gt;创建看板&lt;/a&gt; ；最简单的方式是：右键单击文件夹，并选择 &lt;code&gt;New Kanban board&lt;/code&gt;。值得一提的是，Obsidian 的看板功能，其使用体验，在笔者看来要比 &lt;a href=&quot;https://nicelinks.site/post/59ba80d93df6765c75b77911&quot;&gt;Giuhub&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5f86fe3ccda9de27bd93a927&quot;&gt;Gitlab&lt;/a&gt; 、 &lt;a href=&quot;https://nicelinks.site/post/5ce69c6746395f0822df9d6b&quot;&gt;Trello&lt;/a&gt; 要用很多，强烈推荐。&lt;/p&gt;
&lt;p&gt;如果你想了解更多，可以参见 Github 源码： &lt;a href=&quot;https://github.com/tgrosinger/advanced-tables-obsidian&quot;&gt;Advanced Tables for Obsidian&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id=&quot;outline%EF%BC%9A%E6%96%87%E4%BB%B6%E5%A4%A7%E7%BA%B2%EF%BC%88%E5%AE%98%E6%96%B9%E6%8F%92%E4%BB%B6%EF%BC%89&quot;&gt;Outline：文件大纲（官方插件）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Display the outline of current file or linked pane&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Outline 是一款大纲插件，可以根据标题自动为 Obsidian 文档生成目录大纲，可以快速预览所有标题，也可以用来快速跳转到指定位置，如果你经常写长文章的话会非常有用，Outline 是官方插件，到核心插件中启用即可自动开启。具体操作为：打开设置（&lt;code&gt;command + ,&lt;/code&gt;） =&amp;gt; Core Plugin =&amp;gt; 发起检索 &lt;code&gt;Outline&lt;/code&gt; =&amp;gt; 选择开启。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This repository contains a plugin for Obsidian for viewing Markdown notes as Mind Maps using Markmap.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mind Map 是一款 &lt;code&gt;思维导图&lt;/code&gt; 插件，它可以为你的 Markdown 文本转换为思维导图，可以更清晰地查看文章的结构和内容，还支持一些简单的操作，比如放大缩小、拖拽、收起展开节点等，你还可以一键复制思维导图图片，分享或保存到其他位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lovejade.oss-cn-shenzhen.aliyuncs.com/mind-map-demo.png&quot; alt=&quot;Obsidian Mind Map&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果你想了解更多，可以参见 Github 源码： &lt;a href=&quot;https://github.com/lynchjames/obsidian-mind-map&quot;&gt;Obsidian Mind Map&lt;/a&gt; 。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Insert links (URLs) into a selected text &quot;notion-style&quot; using regular &lt;code&gt;Ctrl/Cmd + V&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当想要在鼠标选中的单词上插入 URL 时，基于 Markdown 语法，并不是很方便；此时你可以安装 &lt;code&gt;Paste URL into selection&lt;/code&gt; 这款插件；启用该插件后，只需要选中文字再 &lt;code&gt;Cmd + V&lt;/code&gt; （or &lt;code&gt;Ctrl V&lt;/code&gt; Windows 系统） 键，就可以直接添加链接，比富文本编辑器中操作，还要方便许多。&lt;/p&gt;
&lt;p&gt;如果你想了解更多，可以参见 Github 源码： &lt;a href=&quot;https://github.com/denolehov/obsidian-url-into-selection&quot;&gt;Paste URL into selection&lt;/a&gt; 。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Consolidate checklists across all files into a single view&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Checklist 是一款&lt;strong&gt;待办任务增强&lt;/strong&gt;插件，它可以为 Obsidian 的侧边栏增加一个任务栏，你可以在该栏目下查看到所有笔记中的待办任务，可以快速跳转到任务的位置，也可以直接在任务栏上勾选完成任务。其用法如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启用此插件后，您将看到清单出现在右侧边栏中；&lt;/li&gt;
&lt;li&gt;您标记的任何清单项目块都 &lt;code&gt;#todo&lt;/code&gt; 将显示在此侧边栏中；&lt;/li&gt;
&lt;li&gt;您可以通过在编辑器中勾选它们（例如 &lt;code&gt;- [ ]&lt;/code&gt;-&amp;gt; &lt;code&gt;- [x]&lt;/code&gt;）或单击侧栏中的清单项目来完成清单项目，这将为您更新 &lt;code&gt;.md&lt;/code&gt; 文件；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://lovejade.oss-cn-shenzhen.aliyuncs.com/screenshot-two-files.png&quot; alt=&quot;Obsidian Checklist&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果你想了解更多，可以参见 Github 源码： &lt;a href=&quot;https://github.com/delashum/obsidian-checklist-plugin&quot;&gt;obsidian-checklist-plugin&lt;/a&gt; 。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This plugin for Obsidian creates a simple Calendar view for visualizing and navigating between your daily notes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Calendar 是一款为增强 Daily notes 而制作的日历插件，它可以在侧边栏上增加日历模块，你可以用它来快速跳转到特定时间的每日笔记，而且你还可以用它来为没有每日笔记的日期创建笔记，可以为之前的日期创建，也可以创建未来的笔记。其用法如下：&lt;/p&gt;
&lt;p&gt;在设置菜单中启用插件后，您应该会看到日历视图出现在右侧边栏中。该插件会读取您的每日笔记设置，以了解您的日期格式、每日笔记模板的位置以及它创建的新每日笔记的位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lovejade.oss-cn-shenzhen.aliyuncs.com/screenshot-full.png&quot; alt=&quot;Obsidian  Calendar&quot; loading=&quot;lazy&quot;/&gt;&lt;/p&gt;
&lt;p&gt;如果你想了解更多，可以参见 Github 源码：&lt;a href=&quot;https://github.com/liamcain/obsidian-calendar-plugin&quot;&gt;obsidian-calendar-plugin&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如今，&lt;a href=&quot;https://nicelinks.site/post/6266999577f8270876fcb3d6&quot;&gt;Obsidian&lt;/a&gt; 插件市场，所蕴含的宝藏已十分丰富，大凡能想到优化点，都已有人贡献出良好的设计方案。如果您有自己独特诉求，完全可以基于Obsidian，定制属于自己的插件，只需阅读相关文档，懂些 JavaScript 编程基础即可。具体可参见文章：&lt;a href=&quot;https://david-brown.dev/posts/obsidian-macros-plugin/&quot;&gt;为 Obsidian.md 创建插件&lt;/a&gt; 或 &lt;a href=&quot;https://phibr0.medium.com/how-to-create-your-own-obsidian-plugin-53f2d5d44046&quot;&gt;How to create your own Obsidian Plugin&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;窃以为，好的工具与强大工具，其最大区别在于：前者会让使用者觉得自己跟软件本身都很强；而后者只会让使用者觉得工具很强。&lt;a href=&quot;https://nicelinks.site/post/6266999577f8270876fcb3d6&quot;&gt;Obsidian&lt;/a&gt; 就属于前者，它能让用户 0 配置，即能快速上手使用；又能很好支持愿意折腾的朋友，在上面各种折腾，附加额外功能，实在是值得称赞。如今，只使用了没几天，尚有更多玩法儿，等待探索；欢迎各路朋友，分享您宝贵的建议和意见。&lt;/p&gt;
&lt;h2 id=&quot;%E6%82%A8%E5%8F%AF%E8%83%BD%E6%84%9F%E5%85%B4%E8%B6%A3%E7%9A%84%E6%96%87%E7%AB%A0&quot;&gt;您可能感兴趣的文章&lt;/h2&gt;


                &lt;section class=&quot;m-tags in-post&quot;&gt;
                  &lt;h3 class=&quot;m-submenu-title&quot;&gt;Tags&lt;/h3&gt;
                  
                &lt;/section&gt;
            &lt;/div&gt;
          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>64a76aeb52189d636cebd6d13a03032c</guid>
<title>支持300+常用功能的开源GO语言工具函数库</title>
<link>https://toutiao.io/k/an98swu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;article&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_png/vbERicIdYZbAQcw2NEmFMZSuWibSsSXialiaf6yx4bslAnxD4ugFSlbQoUgOhj933C5LpV0tCbOvwbIOTliaPwa5mDg/640?wx_fmt=png&quot; data-cropx1=&quot;255.98615916955018&quot; data-cropx2=&quot;771.6955017301038&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;345.67474048442904&quot; data-ratio=&quot;0.6686046511627907&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vbERicIdYZbAQcw2NEmFMZSuWibSsSXialia8pedRwI8dScG4tHjibTu6FmDa8CkIyKFpiah3m5HBHuKase7Sdvnzhyw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;516&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;lancet（柳叶刀）是一个全面、高效、可复用的go语言工具函数库。lancet受到了java apache common包和lodash.js的启发。&lt;/span&gt;&lt;/section&gt;&lt;p data-track=&quot;3&quot;&gt;&lt;/p&gt;&lt;h1 data-track=&quot;4&quot;&gt;特性&lt;/h1&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;全面、高效、可复用&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;300+常用go工具函数，支持string、slice、datetime、net、crypt...&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;只依赖go标准库&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;所有导出函数单元测试覆盖率100%&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-track=&quot;14&quot;&gt;安装&lt;/h1&gt;&lt;p data-track=&quot;10&quot;&gt;&lt;span&gt;1、对于使用go1.18及以上的用户，建议安装v2.x.x。因为v2.x.x用go1.18的泛型重写了大部分函数。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;go &lt;span&gt;get&lt;/span&gt; github.com/duke-git/lancet/v2 &lt;span&gt;//安装v2最新版本v2.x.x&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;11&quot;&gt;&lt;span&gt;2、使用go1.18以下版本的用户，必须安装v1.x.x。目前最新的v1版本是v1.2.9。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;go &lt;span&gt;get&lt;/span&gt; github.com/duke-git/&lt;span&gt;lancet@&lt;/span&gt;v1&lt;span&gt;.2.9&lt;/span&gt; &lt;span&gt;// 使用go1.18以下版本, 必须安装v1.x.x版本&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;34&quot;&gt;&lt;/p&gt;&lt;h1 data-track=&quot;15&quot;&gt;用法&lt;/h1&gt;&lt;p data-track=&quot;18&quot;&gt;&lt;span&gt;lancet是以包的结构组织代码的，使用时需要导入相应的包名。例如：如果使用字符串相关函数，需要导入strutil包：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&quot;github.com/duke-git/lancet/v2/strutil&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;17&quot;&gt;&lt;span&gt;此处以字符串工具函数ReverseStr（逆序字符串）为例，需要导入strutil包：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;github.com/duke-git/lancet/v2/strutil&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;func main()&lt;/span&gt; {&lt;br/&gt;    s := &lt;span&gt;&quot;hello&quot;&lt;/span&gt;&lt;br/&gt;    rs := strutil.ReverseStr(s)&lt;br/&gt;    fmt.Println(rs) &lt;span&gt;//olleh&lt;/span&gt;&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;22&quot;&gt;&lt;/p&gt;&lt;h1 data-track=&quot;35&quot;&gt;算法包&lt;/h1&gt;&lt;p data-track=&quot;23&quot;&gt;&lt;span&gt;algorithm算法包实现一些基本算法。例如：sort、search、lrucache等。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; ( &lt;span&gt;&quot;github.com/duke-git/lancet/v2/algorithm&quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;27&quot;&gt;&lt;span&gt;示例：BubbleSort&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;29&quot;&gt;&lt;span&gt;冒泡排序，参数comparator需要实现包&lt;br/&gt;lancetconstraints.Comparator&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;30&quot;&gt;&lt;span&gt;函数签名：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;func BubbleSort[&lt;span&gt;T any&lt;/span&gt;](&lt;span&gt;slice []T, comparator lancetconstraints.Comparator&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;31&quot;&gt;&lt;span&gt;Example：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;github.com/duke-git/lancet/v2/algorithm&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;func main()&lt;/span&gt; {&lt;br/&gt;    &lt;span&gt;type&lt;/span&gt; intComparator &lt;span&gt;struct&lt;/span&gt;{}&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;func (c *intComparator) Compare(v1 any, v2 any) int&lt;/span&gt; {&lt;br/&gt;        val1, _ := v1.(&lt;span&gt;int&lt;/span&gt;)&lt;br/&gt;        val2, _ := v2.(&lt;span&gt;int&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;//ascending order&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; val1 &amp;lt; val2 {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;-1&lt;/span&gt;&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; val1 &amp;gt; val2 {&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;br/&gt;        }&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    intSlice := []&lt;span&gt;int&lt;/span&gt;{&lt;span&gt;2&lt;/span&gt;, &lt;span&gt;1&lt;/span&gt;, &lt;span&gt;5&lt;/span&gt;, &lt;span&gt;3&lt;/span&gt;, &lt;span&gt;6&lt;/span&gt;, &lt;span&gt;4&lt;/span&gt;}&lt;br/&gt;    comparator := &amp;amp;intComparator{}&lt;br/&gt;    algorithm.BubbleSort(intSlice, comparator)&lt;br/&gt;&lt;br/&gt;    fmt.Println(intSlice) &lt;span&gt;//[]int{1, 2, 3, 4, 5, 6}&lt;/span&gt;&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;67&quot;&gt;&lt;/p&gt;&lt;h1 data-track=&quot;37&quot;&gt;并发包&lt;/h1&gt;&lt;p data-track=&quot;38&quot;&gt;&lt;span&gt;并发包包含一些支持并发编程的功能。例如：goroutine、channel、async等。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&quot;github.com/duke-git/lancet/v2/concurrency&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;39&quot;&gt;&lt;span&gt;示例：NewChannel&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;40&quot;&gt;&lt;span&gt;返回一个 Channel 指针实例&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;41&quot;&gt;&lt;span&gt;函数签名：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; Channel &lt;span&gt;struct&lt;/span&gt; {}&lt;br/&gt;&lt;span&gt;func NewChannel() *Channel&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;42&quot;&gt;&lt;span&gt;Example：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;github.com/duke-git/lancet/v2/concurrency&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;func main()&lt;/span&gt; {&lt;br/&gt;    c := concurrency.NewChannel()&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;44&quot;&gt;&lt;/p&gt;&lt;h1 data-track=&quot;68&quot;&gt;转换器包&lt;/h1&gt;&lt;p data-track=&quot;46&quot;&gt;&lt;span&gt;convertor转换器包支持一些常见的数据类型转换。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&quot;github.com/duke-git/lancet/v2/convertor&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;47&quot;&gt;&lt;span&gt;示例：ToBool&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;52&quot;&gt;&lt;span&gt;字符串转布尔类型，使用strconv.ParseBool&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;49&quot;&gt;&lt;span&gt;函数签名：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;func ToBool(s &lt;span&gt;string&lt;/span&gt;) (&lt;span&gt;bool&lt;/span&gt;, error)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;51&quot;&gt;&lt;span&gt;Example：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;github.com/duke-git/lancet/v2/convertor&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;func main()&lt;/span&gt; {&lt;br/&gt;    v1, _ := convertor.ToBool(&lt;span&gt;&quot;1&quot;&lt;/span&gt;)&lt;br/&gt;    fmt.Println(v1) &lt;span&gt;//true&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    v2, _ := convertor.ToBool(&lt;span&gt;&quot;true&quot;&lt;/span&gt;)&lt;br/&gt;    fmt.Println(v2) &lt;span&gt;//true&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    v3, _ := convertor.ToBool(&lt;span&gt;&quot;True&quot;&lt;/span&gt;)&lt;br/&gt;    fmt.Println(v3) &lt;span&gt;//true&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    v4, _ := convertor.ToBool(&lt;span&gt;&quot;123&quot;&lt;/span&gt;)&lt;br/&gt;    fmt.Println(v4) &lt;span&gt;//false&lt;/span&gt;&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;53&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;53&quot;&gt;&lt;span&gt;加密包&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;55&quot;&gt;&lt;span&gt;cryptor加密包支持数据加密和解密，获取md5，hash值。支持base64、md5、hmac、aes、des、rsa。&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;import&lt;/span&gt; &lt;span&gt;&quot;github.com/duke-git/lancet/v2/cryptor&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;57&quot;&gt;&lt;span&gt;示例：AesEcbEncrypt&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;58&quot;&gt;&lt;span&gt;使用AES ECB算法模式加密数据. 参数`key`的长度是16, 24 or 32。&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;59&quot;&gt;&lt;span&gt;函数签名：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;func AesEcbEncrypt(data, key []&lt;span&gt;byte&lt;/span&gt;) []byte&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;60&quot;&gt;&lt;span&gt;Example：&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;github.com/duke-git/lancet/v2/cryptor&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;func main()&lt;/span&gt; {&lt;br/&gt;    data := &lt;span&gt;&quot;hello world&quot;&lt;/span&gt;&lt;br/&gt;  key := &lt;span&gt;&quot;abcdefghijklmnop&quot;&lt;/span&gt;&lt;br/&gt;    encrypted := cryptor.AesEcbEncrypt([]&lt;span&gt;byte&lt;/span&gt;(data), []&lt;span&gt;byte&lt;/span&gt;(key))&lt;br/&gt;&lt;br/&gt;    fmt.Println(&lt;span&gt;string&lt;/span&gt;(encrypted))&lt;br/&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;p data-track=&quot;62&quot;&gt;&lt;/p&gt;&lt;p data-track=&quot;66&quot;&gt;&lt;span&gt;—END—&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;开源协议：MIT&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;开源地址：&lt;br/&gt;https://github.com/duke-git/lancet&lt;/span&gt;&lt;strong/&gt;&lt;/section&gt;&lt;p data-track=&quot;64&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-track=&quot;64&quot;&gt;&lt;strong&gt;想要了解更多相关的内容，欢迎扫描下方👇 关注 公众号，回复关键词 [实战群]  ,就有机会进群和我们进行交流~&lt;/strong&gt;&lt;/p&gt;&lt;/article&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ad8ad4217ab70fd54a2fee7d6d53eb0b</guid>
<title>REDIS-CLUSTER集群模式下REDIS客户端如何获得SLOT的路由信息</title>
<link>https://toutiao.io/k/9lb1kj9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;entry-content e-content&quot; itemprop=&quot;description articleBody&quot;&gt;&amp;#13;
            &lt;pre&gt;&lt;code class=&quot;&quot;&gt;版权声明 本站原创文章 由 萌叔 发表
转载请注明 萌叔 | http://vearne.cc
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;1. 引言&lt;/h2&gt;
&lt;p&gt;我们都知道在Redis-Cluster集群模式下，集群中有18634个slot，slot分布在集群多个实例上，当执行一个&lt;code&gt;Command&lt;/code&gt;时，Redis客户端会提取&lt;code&gt;Command&lt;/code&gt;中的key&lt;br/&gt;
根据下面的算法得出key所属的slot&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;slot=CRC16（key）&amp;amp;16383
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在根据客户端中的路由表，找到slot所在的Redis实例&lt;br/&gt;
这里的路由表存储的就是&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;slot -&amp;gt; redis-instance
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;那么问题来了redis客户端是如何得到这个路由表的呢？&lt;/p&gt;
&lt;h2&gt;2. 分析&lt;/h2&gt;
&lt;p&gt;下面以&lt;a href=&quot;https://github.com/go-redis/redis&quot;&gt;go-redis/redis&lt;/a&gt;的代码为例,谈谈Redis客户端如何获取和维护slot路由信息。&lt;/p&gt;
&lt;h3&gt;2.1 存储结构&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;type clusterClient struct {
    opt           *ClusterOptions
    nodes         *clusterNodes
    state         *clusterStateHolder // 在这里
    cmdsInfoCache *cmdsInfoCache      //nolint:structcheck
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;type clusterState struct {
    nodes   *clusterNodes
    Masters []*clusterNode
    Slaves  []*clusterNode

    slots []*clusterSlot  // 路由信息存储在这里

    generation uint32
    createdAt  time.Time
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;type clusterSlot struct {
    start, end int
    nodes      []*clusterNode
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;2.2 命令执行过程&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;1)通过key计算出对应slot&lt;/li&gt;
&lt;li&gt;2)通过路由表查找到对应的node信息&lt;/li&gt;
&lt;li&gt;3)向node发送CMD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实第2步根据slot从&lt;code&gt;clusterState&lt;/code&gt;中查询对应&lt;code&gt;clusterNode&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;func (c *clusterState) slotNodes(slot int) []*clusterNode {
    i := sort.Search(len(c.slots), func(i int) bool {
        return c.slots[i].end &amp;gt;= slot
    })
    if i &amp;gt;= len(c.slots) {
        return nil
    }
    x := c.slots[i]
    if slot &amp;gt;= x.start &amp;amp;&amp;amp; slot &amp;lt;= x.end {
        return x.nodes
    }
    return nil
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;2.3 初始化slot路由信息&lt;/h3&gt;
&lt;p&gt;在处理任意Command时，如果路由信息为空，会触发以下动作&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;ClusterClient.process() -&amp;gt; ClusterClient.cmdNode() -&amp;gt; clusterStateHolder.Get() -&amp;gt; clusterStateHolder.Reload() -&amp;gt; ClusterClient.loadState()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最终调用了&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;func (c cmdable) ClusterSlots(ctx context.Context) *ClusterSlotsCmd {
    cmd := NewClusterSlotsCmd(ctx, &quot;cluster&quot;, &quot;slots&quot;)
    _ = c(ctx, cmd)
    return cmd
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;CLUSTER SLOTS的返回大体如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;192.168.132.114:6403&amp;gt; cluster slots
1) 1) (integer) 0        // Start slot range
   2) (integer) 2730     // End slot range
   3) 1) &quot;192.168.134.95&quot;  // Redis实例-IP(主)
      2) (integer) 6403   // Redis实例-端口
      3) &quot;702608b2556413c6f8927ef06e86e5c0e869a07d&quot; // node ID
   4) 1) &quot;192.168.134.109&quot;  // Redis实例-IP(从)
      2) (integer) 6403     // Redis实例-端口
      3) &quot;d950357fd1e0010646b32d3397ced3e52b1322fd&quot;
2) 1) (integer) 8192
   2) (integer) 10922
   3) 1) &quot;192.168.134.95&quot;
      2) (integer) 6403
      3) &quot;702608b2556413c6f8927ef06e86e5c0e869a07d&quot;
   4) 1) &quot;192.168.134.109&quot;
      2) (integer) 6403
      3) &quot;d950357fd1e0010646b32d3397ced3e52b1322fd&quot;
3) 1) (integer) 2731
   2) (integer) 8191
   3) 1) &quot;192.168.132.114&quot;
      2) (integer) 6403
      3) &quot;fccdf478a66f2a11713111b5567e3afa2be6c3ab&quot;
   4) 1) &quot;192.168.132.123&quot;
      2) (integer) 6403
      3) &quot;83600e144b488ad324235d84dca9ae6f02928715&quot;
4) 1) (integer) 10923
   2) (integer) 16383
   3) 1) &quot;192.168.132.124&quot;
      2) (integer) 6403
      3) &quot;f4347dfea9bf425281df393976b02547fa45c7ce&quot;
   4) 1) &quot;192.168.132.128&quot;
      2) (integer) 6403
      3) &quot;aba3f6cda55c0595a82d0ddea864a58c21008fb3&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;start&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;end&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;node&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;0&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;2730&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;192.168.134.95/192.168.134.109&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;2731&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;8191&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;192.168.132.114/192.168.132.123&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;8192&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;10922&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;192.168.134.95/192.168.134.109&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;10923&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;16383&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;192.168.132.124/192.168.132.128&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;问题来了，在成功获取slot的路由信息后，集群中slot的分布情况是会发生变化的。比如Redis集群的管理员通过指令移动一部分slot。客户端怎么感知到这种变化？&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;(redis1)$ redis-cli --cluster reshard 192.168.11.131:6379 \
--cluster-from node1,nod2,node3 \
--cluster-to node4 \
--cluster-slots 3276 \
--cluster-yes
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;2.4 更新slot路由信息&lt;/h3&gt;
&lt;h4&gt;1) 当slot路由信息已经超过10秒没有更新了，将触发LazyReload()&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;func (c *clusterStateHolder) Get(ctx context.Context) (*clusterState, error) {
    ...
    if time.Since(state.createdAt) &amp;gt; 10*time.Second {
        c.LazyReload()
    }
    ...
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;2) 执行Command的过程中，如果收到MOVED或ASK重定向，将触发LazyReload()&lt;/h4&gt;
&lt;p&gt;从moved的ERROR中可以获取slot所在的新的地址, 同时触发LazyReload()&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;func (c *ClusterClient) process(ctx context.Context, cmd Cmder) error {
  ...
    moved, ask, addr = isMovedError(lastErr)
    if moved || ask {
        c.state.LazyReload()

        var err error
        node, err = c.nodes.GetOrCreate(addr)
        if err != nil {
            return err
        }
        continue
    }
  ...

}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;&quot;&gt;192.168.132.114:6403&amp;gt; get a
(error) MOVED 15495 192.168.132.124:6403
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;MOVED重定向过程&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://ut-bucket01.sh1a.qingstor.com/woshiaotian/20220514/81afce36-d380-11ec-8df4-5626e1cdcfe1.png&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
&lt;h2&gt;3. 参考资料&lt;/h2&gt;
&lt;p&gt;1.&lt;a href=&quot;https://redis.io/commands/cluster-slots/&quot;&gt;CLUSTER SLOTS命令&lt;/a&gt;&lt;br/&gt;
2.&lt;a href=&quot;https://www.cnblogs.com/zhoujinyi/p/11606935.html&quot;&gt;Redis 5.0 redis-cli –cluster help说明 &lt;/a&gt;&lt;br/&gt;
3.&lt;a href=&quot;https://www.jianshu.com/p/bb857f883ccb&quot;&gt;Redis Cluster 重定向问题 – Moved/Ask重定向&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h4&gt;请我喝瓶饮料&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://ut-bucket01.sh1a.qingstor.com/woshiaotian/20220421/e824ac06-c136-11ec-8e0e-5626e1cdcfe2.jpg&quot; alt=&quot;微信支付码&quot;/&gt;&lt;/p&gt;


            &lt;p class=&quot;clear&quot;/&gt;&amp;#13;
        &lt;/div&gt;&amp;#13;
        
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>553a13b786c2ffd2fd1814cc6f006693</guid>
<title>超越 Nginx！号称下一代 Web 服务器，用起来够优雅！</title>
<link>https://toutiao.io/k/y2bdqlt</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Nginx是一款非常流行的Web服务器，在Github上已有&lt;code&gt;16K+Star&lt;/code&gt;，我们经常用它来做静态资源托管或反向代理。最近发现了一款全新的Web服务器&lt;code&gt;Caddy&lt;/code&gt;，Star数超越Nginx，标星&lt;code&gt;38K+Star&lt;/code&gt;。试用了一下&lt;code&gt;Caddy&lt;/code&gt;，发现它使用起来比Nginx优雅多了，功能也很强大，推荐给大家！&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Caddy简介&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Caddy是一款功能强大，扩展性高的Web服务器，目前在Github上已有&lt;code&gt;38K+Star&lt;/code&gt;。Caddy采用Go语言编写，可用于静态资源托管和反向代理。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5696969696969697&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyic9pYv5Rnk0XtbCCFCYH13siazfcQ0kWu730nOiab2RF7TvUZsuiaOC3Tw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1155&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Caddy具有如下主要特性：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;对比Nginx复杂的配置，其独创的&lt;code&gt;Caddyfile&lt;/code&gt;配置非常简单；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可以通过其提供的&lt;code&gt;Admin API&lt;/code&gt;实现动态修改配置；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;默认支持自动化HTTPS配置，能自动申请HTTPS证书并进行配置；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;能够扩展到数以万计的站点；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;可以在任意地方执行，没有额外的依赖；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;采用Go语言编写，内存安全更有保证。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;安装&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;首先我们直接在CentOS 8上安装Caddy，使用DNF工具安装无疑是最简单的，Docker安装方式之后也会介绍。&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;使用如下命令通过DNF工具安装Caddy，安装成功后Caddy会被注册成系统服务；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;dnf install &lt;span&gt;&#x27;dnf-command(copr)&#x27;&lt;/span&gt;&lt;br/&gt;dnf copr &lt;span&gt;enable&lt;/span&gt; @caddy/caddy&lt;br/&gt;dnf install caddy&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;使用&lt;code&gt;systemctl status caddy&lt;/code&gt;查看Caddy的状态，可以发现Caddy已被注册为系统服务，但是还没开启。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.19849874895746455&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyZ9DjgwxIf8WR8czpVgiakibIxelIEgDZahkTQGSBmAHkOgBeic6dHN2xw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1199&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;使用&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;下面我们体验下Caddy的基本使用，对于Web服务器来说都是常用的操作，你准能用的上！&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;基本使用&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;首先我们来个Caddy的入门使用，让Caddy运行在&lt;code&gt;2015&lt;/code&gt;端口上并返回&lt;code&gt;Hello, world!&lt;/code&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;直接使用&lt;code&gt;caddy&lt;/code&gt;命令将输出Caddy的常用命令，基本看介绍就知道如何使用了，标出来的是常用命令；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6805671392827356&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyJX5LicAxNDTianKTrMEjEAgVpibTjDAiapBYsbngSWDF9AxOFyGlLrScEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1199&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;使用&lt;code&gt;caddy start&lt;/code&gt;命令可以让Caddy服务在后台运行；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.19683069224353628&quot; data-type=&quot;png&quot; data-w=&quot;1199&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyqB6JIia6ciaSU6qkJ4fuJHn2PTpwLn8VQmpoWx47ZPYOnjib2LIb0RT8g/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Caddy默认使用JSON格式的配置文件，但由于JOSN格式配置书写比较麻烦，又提供了&lt;code&gt;Caddyfile&lt;/code&gt;这种更加简洁的配置形式，使用如下命令能自动把&lt;code&gt;Caddyfile&lt;/code&gt;转化为JSON配置；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;caddy adapter&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;我们可以先创建一个名称为&lt;code&gt;Caddyfile&lt;/code&gt;的文件，文件内容如下，然后使用&lt;code&gt;caddy adapter&lt;/code&gt;将它转换为JSON配置，再使用&lt;code&gt;caddy reload&lt;/code&gt;使配置生效，该配置将监听&lt;code&gt;2015&lt;/code&gt;端口，并返回&lt;code&gt;Hello, world!&lt;/code&gt;；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;:2015&lt;br/&gt;&lt;br/&gt;respond &lt;span&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;然后我们使用curl命令访问&lt;code&gt;localhost:2015&lt;/code&gt;，将返回指定的信息；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1292743953294412&quot; data-type=&quot;png&quot; data-w=&quot;1199&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyE1Lop7oCO9XA41rsV6rIx965KibCJVvxZvlcHmyBLugzNVwhMCZiclEA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;当然我们还可以使用Caddy提供的&lt;code&gt;Admin API&lt;/code&gt;来查看配置信息，使用如下命令即可；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;curl localhost:2019/config/&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;当前JSON配置如下，如果你直接使用JSON配置的话需要书写如下配置，使用&lt;code&gt;Caddyfile&lt;/code&gt;确实方便很多！&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;{&lt;br/&gt; &lt;span&gt;&quot;apps&quot;&lt;/span&gt;: {&lt;br/&gt;  &lt;span&gt;&quot;http&quot;&lt;/span&gt;: {&lt;br/&gt;   &lt;span&gt;&quot;servers&quot;&lt;/span&gt;: {&lt;br/&gt;    &lt;span&gt;&quot;srv0&quot;&lt;/span&gt;: {&lt;br/&gt;     &lt;span&gt;&quot;listen&quot;&lt;/span&gt;: [&lt;span&gt;&quot;:2015&quot;&lt;/span&gt;],&lt;br/&gt;     &lt;span&gt;&quot;routes&quot;&lt;/span&gt;: [{&lt;br/&gt;      &lt;span&gt;&quot;handle&quot;&lt;/span&gt;: [{&lt;br/&gt;       &lt;span&gt;&quot;body&quot;&lt;/span&gt;: &lt;span&gt;&quot;Hello, world!&quot;&lt;/span&gt;,&lt;br/&gt;       &lt;span&gt;&quot;handler&quot;&lt;/span&gt;: &lt;span&gt;&quot;static_response&quot;&lt;/span&gt;&lt;br/&gt;      }]&lt;br/&gt;     }]&lt;br/&gt;    }&lt;br/&gt;   }&lt;br/&gt;  }&lt;br/&gt; }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Caddyfile&lt;/code&gt;基本语法&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;下面案例将使用&lt;code&gt;Caddyfile&lt;/code&gt;来进行配置，我们有必要了解下它的语法，&lt;code&gt;Caddyfile&lt;/code&gt;的具体语法规则如下。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5612244897959183&quot; data-type=&quot;png&quot; data-w=&quot;1078&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyNlfRVs45X1gmSoXRTfn92JAgITJGd9fnibmcDvVtSiaIjc9zCZbJd7iaA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;关键字&lt;/th&gt;&lt;th&gt;解释&lt;/th&gt;&lt;th&gt;使用&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Global options block&lt;/td&gt;&lt;td&gt;服务器全局配置&lt;/td&gt;&lt;td&gt;可用于配置是否启用HTTPS和Admin API等&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Snippet&lt;/td&gt;&lt;td&gt;可以复用的配置片段&lt;/td&gt;&lt;td&gt;定义好后认可以通过&lt;code&gt;import&lt;/code&gt;关键字引用&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Site Block&lt;/td&gt;&lt;td&gt;单个网站配置&lt;/td&gt;&lt;td&gt;通过&lt;code&gt;file_server&lt;/code&gt;可以配置静态代理，通过&lt;code&gt;reverse_proxy&lt;/code&gt;可以配置动态代理&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Matcher definition&lt;/td&gt;&lt;td&gt;匹配定义&lt;/td&gt;&lt;td&gt;默认情况下指令会产生全局影响，通过它可以指定影响范围&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Comment&lt;/td&gt;&lt;td&gt;注释&lt;/td&gt;&lt;td&gt;使用&lt;code&gt;#&lt;/code&gt;符号开头&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Site address&lt;/td&gt;&lt;td&gt;网站地址&lt;/td&gt;&lt;td&gt;默认使用HTTPS，如需开启HTTP，需要指定&lt;code&gt;http://&lt;/code&gt;开头&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Directive&lt;/td&gt;&lt;td&gt;指令&lt;/td&gt;&lt;td&gt;指令赋予了Caddy强大的功能&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;反向代理&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;反向代理就是当请求访问你的代理服务器时，代理服务器会对你的请求进行转发，可以转发到静态的资源路径上去，也可以转发到动态的服务接口上去。下面我们以对域名进行代理为例，来讲讲如何进行静态代理和动态代理。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;静态代理&lt;/h4&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;静态代理就是将请求代理到不同的静态资源路径上去，这里我们将对&lt;code&gt;docs.macrozheng.com&lt;/code&gt;的请求代理到我的文档项目中，对&lt;code&gt;mall.macrozheng.com&lt;/code&gt;的请求代理到mall的前端项目中。&lt;/p&gt;&lt;/blockquote&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;192.168.3.106 docs.macrozheng.com&lt;br/&gt;192.168.3.106 mall.macrozheng.com&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;然后将我们的文档项目和mall前端项目上传到Caddy的html目录中去，并进行解压操作：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.24603836530442036&quot; data-type=&quot;png&quot; data-w=&quot;1199&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWykpHD5r6oUasglvK4BgicubLewfpZyEMthIfvv0LCrCaFbcIxKr1u8Mw/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;修改&lt;code&gt;Caddyfile&lt;/code&gt;文件，使用如下配置，修改完成后使用&lt;code&gt;caddy reload&lt;/code&gt;命令刷新配置；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;http://docs.macrozheng.com {&lt;br/&gt;        root * /mydata/caddy/html/docs&lt;br/&gt;        file_server browse&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;http://mall.macrozheng.com {&lt;br/&gt;        root * /mydata/caddy/html/mall&lt;br/&gt;        file_server browse&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;如果你的&lt;code&gt;Caddyfile&lt;/code&gt;文件格式不太合格的话，会出现如下警告，直接使用&lt;code&gt;caddy fmt --overwrite&lt;/code&gt;格式化并重写配置即可解决；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.1609674728940784&quot; data-type=&quot;png&quot; data-w=&quot;1199&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyzz5efViac36b9ic6icuPunQoZqnrLqvGicwWrW1r7p9vrFFSB9wRTtboTg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;通过&lt;code&gt;docs.macrozheng.com&lt;/code&gt;即可访问部署好的文档项目了：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6953125&quot; data-type=&quot;png&quot; data-w=&quot;1152&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyGNcrBssiaTMiaC9kI1JichCnqr2bUS6mXHT9icxvr7Bkh77sAMIDxZXzTQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;通过&lt;code&gt;mall.macrozheng.com&lt;/code&gt;即可访问到部署好的前端项目了。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6848847139197267&quot; data-type=&quot;png&quot; data-w=&quot;1171&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyeot4SMTibs5UxhuQBx4oyz0O9jbnbTNOoOKypsZD9vepWSsF0CwqYQA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;动态代理&lt;/h4&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;动态代理就是把代理服务器的请求转发到另一个服务上去，这里我们将把对&lt;code&gt;api.macrozheng.com&lt;/code&gt;的请求代理到演示环境的API服务上去。&lt;/p&gt;&lt;/blockquote&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;192.168.3.106 api.macrozheng.com&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;修改&lt;code&gt;Caddyfile&lt;/code&gt;文件，使用如下配置，修改完成后使用&lt;code&gt;caddy reload&lt;/code&gt;命令刷新配置；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;http://api.macrozheng.com {&lt;br/&gt;        reverse_proxy http://admin-api.macrozheng.com&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;之后通过&lt;code&gt;api.macrozheng.com/swagger-ui.html&lt;/code&gt;即可访问到&lt;code&gt;mall-admin&lt;/code&gt;的API文档页面了。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6823228010247652&quot; data-type=&quot;png&quot; data-w=&quot;1171&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyjezYsLibVetwblI1bL541QIxgGFBIBSmggFZrKj4OBXRFUuQabhrXqg/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;文件压缩&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果我们的服务器带宽比较低，网站访问速度会很慢，这时我们可以通过让Caddy开启Gzip压缩来提高网站的访问速度。这里我们以mall的前端项目为例来演示下它的提速效果。&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;我们需要修改&lt;code&gt;Caddyfile&lt;/code&gt;文件，使用&lt;code&gt;encode&lt;/code&gt;指令开启Gzip压缩，修改完成后使用&lt;code&gt;caddy reload&lt;/code&gt;命令刷新配置；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;http://mall.macrozheng.com {&lt;br/&gt;        root * /mydata/caddy/html/mall&lt;br/&gt;        encode {&lt;br/&gt;            gzip&lt;br/&gt;        }&lt;br/&gt;        file_server browse&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.41673783091374894&quot; data-type=&quot;png&quot; data-w=&quot;1171&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWy5Et1W6kialSkXGVor1mDx4I35uibiaCV2jI3yp0mbUDvnL6dPIqHd68aA/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.41673783091374894&quot; data-type=&quot;png&quot; data-w=&quot;1171&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyPrX5AKdbdetLJddlI0oSgib9MKe4xA1yoswfcEnQd27TW1ZtKr7b0tQ/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;另外我们可以看下响应信息，如果有&lt;code&gt;Content-Encoding: gzip&lt;/code&gt;这个响应头表明Gzip压缩已经启用了。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.41673783091374894&quot; data-type=&quot;png&quot; data-w=&quot;1171&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyoA9E03ABUgHCOz0CI3sc5YnB9m3iaXOHwCmKQGVWH5icbwRwBMNTvN3Q/640?wx_fmt=png&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;地址重写&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;有的时候我们的网站更换了域名，但还有用户在使用老的域名访问，这时可以通过Caddy的地址重写功能来让用户跳转到新的域名进行访问。&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;我们需要修改&lt;code&gt;Caddyfile&lt;/code&gt;文件，使用&lt;code&gt;redir&lt;/code&gt;指令重写地址，修改完成后使用&lt;code&gt;caddy reload&lt;/code&gt;命令刷新配置；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;http://docs.macrozheng.com {&lt;br/&gt;        redir http://www.macrozheng.com&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;此时访问旧域名&lt;code&gt;docs.macrozheng.com&lt;/code&gt;会直接跳转到&lt;code&gt;www.macrozheng.com&lt;/code&gt;去。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;按目录划分&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;有时候我们需要使用同一个域名来访问不同的前端项目，这时候就需要通过子目录来区分前端项目了。&lt;/p&gt;&lt;/blockquote&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;www.macrozheng.com &lt;span&gt;#访问文档项目&lt;/span&gt;&lt;br/&gt;www.macrozheng.com/admin &lt;span&gt;#访问后台项目&lt;/span&gt;&lt;br/&gt;www.macrozheng.com/app &lt;span&gt;#访问移动端项目&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;我们需要修改&lt;code&gt;Caddyfile&lt;/code&gt;文件，使用&lt;code&gt;route&lt;/code&gt;指令定义路由，修改完成后使用&lt;code&gt;caddy reload&lt;/code&gt;命令刷新配置。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;http://www.macrozheng.com {&lt;br/&gt;        route /admin/* {&lt;br/&gt;                uri strip_prefix /admin&lt;br/&gt;                file_server {&lt;br/&gt;                        root /mydata/caddy/html/admin&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        route /app/* {&lt;br/&gt;                uri strip_prefix /app&lt;br/&gt;                file_server {&lt;br/&gt;                        root /mydata/caddy/html/app&lt;br/&gt;                }&lt;br/&gt;        }&lt;br/&gt;        file_server * {&lt;br/&gt;                root /mydata/caddy/html/www&lt;br/&gt;        }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;HTTPS&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Caddy能自动支持HTTPS，无需手动配置证书，这就是之前我们在配置域名时需要使用&lt;code&gt;http://&lt;/code&gt;开头的原因，要想使用Caddy默认的HTTPS功能，按如下步骤操作即可。&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;首先我们需要修改域名的DNS解析，直接在购买域名的网站上设置即可，这里以&lt;code&gt;docs.macrozheng.com&lt;/code&gt;域名为例；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;之后使用如下命令验证DNS解析记录是否正确，注意配置的服务器的&lt;code&gt;80&lt;/code&gt;和&lt;code&gt;443&lt;/code&gt;端口需要在外网能正常访问；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;curl &lt;span&gt;&quot;https://cloudflare-dns.com/dns-query?name=docs.macrozheng.com&amp;amp;type=A&quot;&lt;/span&gt; \&lt;br/&gt;  -H &lt;span&gt;&quot;accept: application/dns-json&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;docs.macrozheng.com {&lt;br/&gt;        root * /mydata/caddy/html/docs&lt;br/&gt;        file_server browse&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;然后使用&lt;code&gt;caddy run&lt;/code&gt;命令启动Caddy服务器即可，是不是非常方便！&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;caddy run&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;Docker支持&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;当然Caddy也是支持使用Docker进行安装使用的，其使用和直接在CentOS上安装基本一致。&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;首先使用如下命令下载Caddy的Docker镜像；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;docker pull caddy&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;然后在&lt;code&gt;/mydata/caddy/&lt;/code&gt;目录下创建&lt;code&gt;Caddyfile&lt;/code&gt;配置文件，文件内容如下；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;http://192.168.3.105:80&lt;br/&gt;&lt;br/&gt;respond &lt;span&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;之后使用如下命令启动caddy服务，这里将宿主机上的&lt;code&gt;Caddyfile&lt;/code&gt;配置文件、Caddy的数据目录和网站目录挂载到了容器中；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;docker run -p 80:80 -p 443:443 --name caddy \&lt;br/&gt;    -v /mydata/caddy/Caddyfile:/etc/caddy/Caddyfile \&lt;br/&gt;    -v /mydata/caddy/data:/data \&lt;br/&gt;    -v /mydata/caddy/html:/usr/share/caddy \&lt;br/&gt;    -d caddy&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;之后使用&lt;code&gt;docker exec&lt;/code&gt;进入caddy容器内部执行命令；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;docker &lt;span&gt;exec&lt;/span&gt; -it caddy /bin/sh&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;输入Caddy命令即可操作，之后的操作就和我们直接在CentOS上安装一样了。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6805671392827356&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CKvMdchsUwliaXhlIY1ibvFfDzk0oTqaWyXGYibV5qAibu6EiauLWxnYDibKibBaInlSTmtrM10wuj3zRHcOkEibUJ7bcg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1199&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天体验了一把Caddy，其强大的指令功能，让我们无需多余的配置即可实现各种功能，使用起来确实非常优雅！尤其是其能自动配置实现HTTPS，非常不错！&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;项目地址：https://github.com/caddyserver/caddy&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;官方文档：https://caddyserver.com/&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;- EOF -&lt;/span&gt;&lt;/p&gt;&lt;section donone=&quot;shifuMouseDownCard(&#x27;shifu_c_030&#x27;)&quot; label=&quot;Copyright Reserved by PLAYHUDONG.&quot;&gt;&lt;section&gt;&lt;span&gt;推荐阅读&lt;/span&gt;  &lt;span&gt;点击标题可跳转&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;1、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MDMyMzk0NA==&amp;amp;mid=2650830250&amp;amp;idx=1&amp;amp;sn=4175e68cd082b34e4538031d6304927c&amp;amp;chksm=84ca4e2db3bdc73b84da412b007da3e28a01ac4d483741daec027443a7a2045204c062b597d2&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;武汉一公司要求员工下班发手机电量消耗截图；美国上诉法院裁决 Web 抓取是合法的&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;美国上诉法院裁决 Web 抓取是合法的&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MDMyMzk0NA==&amp;amp;mid=2650830427&amp;amp;idx=1&amp;amp;sn=caca6bfc3a4d05063d283d98ff8073e2&amp;amp;chksm=84ca4ddcb3bdc4ca827f36e73d56132830e6fbab01843b88db8f0a5de0fd0abd4b611ced226f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;小程序的鼻祖在国内就这么消亡了！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;小程序的鼻祖在国内就这么消亡了！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MDMyMzk0NA==&amp;amp;mid=2650830330&amp;amp;idx=1&amp;amp;sn=e08fa3a8e5537f067444868d31c7d1ca&amp;amp;chksm=84ca4e7db3bdc76b41ab3833d9c275e258e22874850b5728d0d41c8369406aa3115342170211&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;15K Star！Github 上最火的低代码开发平台！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;15K Star！Github 上最火的低代码开发平台！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;觉得这条资讯有帮助？请转发给更多人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;推荐关注 &lt;/span&gt;&lt;strong&gt;&lt;span&gt;技术最前线&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;看 IT 要闻&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA3MDMyMzk0NA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/gDmjibFWrFyNNcKCx7SURQWib5e6XYy3wV3mSa4XCjRo4iazUcgB8UGWg410zrXvefSNCoF1Xx1HoW2BC2oY4ADyQ/0?wx_fmt=png&quot; data-nickname=&quot;技术最前线&quot; data-alias=&quot;topitnews&quot; data-signature=&quot;关注 IT 业界的新技术和新动态&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;点赞和在看就是最大的支持❤️&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>32975fa6d5714d62365d3189d325544a</guid>
<title>边缘计算架构、分层及典型组网拓扑</title>
<link>https://toutiao.io/k/1t5wnfq</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content                                                                     &quot; id=&quot;js_content&quot;&gt;
            &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.4619140625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/jaB37dd7lCJXKBwqjmnAmlib0Faq2G2lTeIHsKyUCsPCibJISS2UdtrarJ5D3b5QwX0jknMnfFfH5s6MmibricicJpQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1024&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;物联网简称：IoT，是新一代信息技术的重要组成部分，也 是“信息化”时代的重要发展阶段。 &lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;物联网通过智能感知、识别技术与普适计算等通信感知技术，被广泛应用于网络的融合中，也因此被称为继计算机、互联网之后世界信息产业发展的第三次浪潮。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;物联网大事件- NB-IoT标准演进&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;窄带蜂窝物联网通信技术NB-IoT标准从2015年9月正式立项，于2016年6月核心标准冻结。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3692722371967655&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jaB37dd7lCJ1FU9f1ES2kVYZicWbvy15FtICt18JKEDphj7mmrrfTpbpFRI4Ll54YGicdTNfibcCibJoXLV1xxARtQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;742&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;物联网大事件 - 软银收购ARM&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2016年7月18日，日本软银集团和英国ARM公司共同宣布，双方达成协议，软银集团以243亿英镑（折合人民币2028亿元，折合日元3.3万亿）收购ARM。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;物联网(Internet Of Things)概念最早于1999年由美国MIT提出，早期的物联网是指依托RFID（Radio Frequency Identification）技术和设备，按约定的通信协议与互联网结合，使物品信息实现智能化识别和管理，实现物品信息互联、可交换和共享而形成的网络。 &lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;通过二维码识读设备、射频识别(RFID) 装置、红外感应器、全球定位系统和激光扫描器等信息传感设备，按约定的协议，把&lt;/span&gt;&lt;span&gt;任何物品与互联网相连接&lt;/span&gt;&lt;span&gt;，进行信息交换和通信，以实现智能化识别、定位、跟踪、监控和管理的一种网络。&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;物联网的层次划分&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;感知层负责信息收集和信号处理。通过感知识别技术，让物品“开口说话、发布信息”，这是物联网区别于其他网络的最独特部分。感知识别层的信息生成设备，既包括采用自动生成方式的RFID电子标签、传感器、定位系统等部分，还包括采用人工生成方式的各种智能设备，例如智能手机、PDA、多媒体播放器、笔记本电脑等。感知识别层位于物联网四层模型的最底端，是所有上层结构的基础。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;其直接通过现有的互联网、移动通信网、卫星通信网等基础网络设施，对来自感知识别层的信息进行接入和传输。在物联网四层模型中，网络构建层接驳感知识别层和平台管理层，具有强大的纽带作用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在高性能网络计算机的环境下，平台管理层能够将网络内海量的信息资源通过计算机整合成一个可互联互通的大型智能网络。平台管理层可解决数据如何存储(数据库与海量存储技术)、如何检索(搜索引擎)、如何使用(数据挖掘与机器学习)、如何不被滥用(数据安全与隐私保护)等问题。平台管理层位于感知识别和网络构建层之上，处于综合应用层之下，是物联网的智慧源泉。人们通常把物联网应用冠以“智能”的名称，如智能电网、智能交通、智能物流等，而其中的智慧就来自于这一层。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.47928176795580113&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jaB37dd7lCJ1FU9f1ES2kVYZicWbvy15FfHdd4SdRy05b8onc5tj9eM99wrfmQv4ou1qcnDRQFrqBhLBtIMHIoQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;724&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;综合应用层是物联网系统的用户接口，通过分析处理后的感知数据，为用户提供丰富的特定服务。具体来看，综合应用层接收网络构建层传来的信息，并对信息进行处理和决策，再通过网络构建层发送信息，以控制感知识别层的设备和终端。物联网的应用以“物”或物理世界为中心，涵盖物品追踪、环境感知、智能物流、智能交通、智能海关等各个领域。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;什么是边缘计算？ &lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在靠近终端的网络边缘节点上，提供连接、计算、存储、控制与应用功能，满足用户实时、智能、安全和数据聚合等需求。借助成熟的通信技术，在位于网络边缘的节点上分布式部署计算、存储、安全等能力，把中心节点的计算、存储、通信压力分散到计算能力稍弱的边缘节点，同时实现了服务的低时延、高可靠、低成本，也有效地保护了用户的边缘隐私，支持网络从成本中心向商业价值中心的转移。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4395750332005312&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jaB37dd7lCJ1FU9f1ES2kVYZicWbvy15FJ5qibRBOa4DZ11tsGRAyvooriaWkHae8iaghPXZ3JMlkpqibmic71VDTyFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;753&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在靠近终端设备或数据源头的边缘节点，融合联接、计算、存储、控制和应用等核心能力的开放平台，满足用户实时、智能、数据聚合和安全需求。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.41843971631205673&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jaB37dd7lCJ1FU9f1ES2kVYZicWbvy15FTgjibczU6MaTdTtSiaHZViaDWyicas65PNicHE5ywvF9RNrU20YskKHTkHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;705&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;边缘计算架构分层&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;ECC将边缘计算架构分成四个层次域：应用域、数据域、网络域、设备域。&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5118694362017804&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jaB37dd7lCJ1FU9f1ES2kVYZicWbvy15FueHDBakSCLRR7bibJo8SpicPr6eOEKpBMR6jPZp4Sia8AcgYTsCUyrIWg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;674&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;ECC提出了CROSS，即在敏捷联接（Connection）的基础上，实现实时业务（Real-time）、数据优化（DataOptimization）、应用智能（Smart）、安全与隐私保护（Security），为用户在网络边缘侧带来价值和机会，也就是联盟成员要关注的重点。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;网络拓扑（Network Topology）结构是指利用传输介质互连各种设备的物理布局。指构成网络成员间特定的物理的（即真实的）、或者逻辑的（即虚拟的）排列方式。如果两个网络的连接结构相同即它们的网络拓扑相同，尽管它们各自内部的物理接线、节点间距离可能会有不同。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;星型拓扑结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;星型拓扑（Star Topology）是指网络中的各节点设备通过一个网络集中设备（如集线器HUB或者交换机Switch）连接在一起，各节点呈星状分布的网络连接方式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3995859213250518&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jaB37dd7lCJ1FU9f1ES2kVYZicWbvy15FCSpxqGfXImQGRhcKxiaia4WUl6haeVFoSgImdic4p4OjBTkKzh17Yo7yg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;483&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;它具有如下特点：结构简单，便于管理；控制简单，便于建网；网络延迟时间较小，传输误差较低。但缺点也是明显的：成本高、可靠性较低、资源共享能力也较差。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;环形拓扑结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;环形网络拓扑(英文：Ring Topology) 环型结构在LAN中使用较多。这种结构中的传输媒体从一个端用户到另一个端用户，直到将所有的端用户连成环型。数据在环路中沿着一个方向在各个节点间传输，信息从一个节点传到另一个节点。这种结构显而易见消除了端用户通信时对中心系统的依赖性。 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3538011695906433&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jaB37dd7lCJ1FU9f1ES2kVYZicWbvy15FyZRQuwbaPNBxGdb4VMYyVobMQlED9W5rPBcUesGQfSnqXFj1Lf07nw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;684&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;环型结构具有如下特点：信息流在网中是沿着固定方向流动的，两个节点仅有一条道路，故简化了路径选择的控制；环路上各节点都是自举控制，故控制软件简单；由于信息源在环路中是串行地穿过各个节点，当环中节点过多时，势必影响信息传输速率，使网络的响应时间延长；环路是封闭的，不便于扩充；可靠性低，一个节点故障，将会造成全网瘫痪；维护难，对分支节点故障定位较难。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;总线型拓扑结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;总线拓扑(英文：Bus Topology)，又称总线网络(Bus Network)；在该节点连接以Daisy Chain由直线之总线序列。由于该拓扑是由一条主缆线串接所有的电脑或其他网络设备，因此也称为线性总线(Linear Bus)。 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.38127090301003347&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jaB37dd7lCJ1FU9f1ES2kVYZicWbvy15F8N87iccVPEmfG8nIWQC4SUPiaRXXlK5hakCWwRBcX0fFCvR7aagMtKIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;598&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;总线型结构的网络特点如下：结构简单，可扩充性好。当需要增加节点时，只需要在总线上增加一个分支接口便可与分支节点相连，当总线负载不允许时还可以扩充总线；使用的电缆少，且安装容易；使用的设备相对简单，可靠性高；维护难，分支节点故障查找难。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Mesh网络拓扑结构&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;无线Mesh网络也称为“多跳”网络，它是一种与传统无线网络完全不同的新型无线网络技术。它不依赖于预设的基础设施，具有可临时组网、快速展开、无控制中心、抗毁性强等特点。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.369969040247678&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/jaB37dd7lCJ1FU9f1ES2kVYZicWbvy15FPNWlrDfOtbmPQiaORR3mRiaXPwgm6EnQC50Lib3k7v58rPAESylZiaODZw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;646&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;在无线Mesh网络中，采用网状Mesh拓扑结构，是一种多点到多点网络拓扑结构。在这种Mesh网络结构中，各网络节点通过相邻其他网络节点，以无线多跳方式相连。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;推荐阅读：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247484337&amp;amp;idx=1&amp;amp;sn=b82bc301d542459d7f36c56172d02e93&amp;amp;chksm=9faf9c7aa8d8156c38234d11232a16242ec6235ba4f0e8f52b33b3b4d76ecd6ff1838c18f626&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;世界的真实格局分析，地球人类社会底层运行原理&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247484891&amp;amp;idx=1&amp;amp;sn=11430a774940305e7703f33a1f4ff0bd&amp;amp;chksm=9faf9a10a8d8130623b5906b1f124ede6859ac5dc60ccd12fe3d2357cb76f740c34c39f43cb8&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;不是你需要中台，而是一名合格的架构师（附各大厂中台建设PPT）&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247485571&amp;amp;idx=1&amp;amp;sn=0f55a55ed8fb0d3219b7f2d56eeaf953&amp;amp;chksm=9faf9748a8d81e5e4a987a80e56cd417ae68b597264d38fa031eed0e89e7c5992f9425cbe398&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;亿级(无限级)并发，没那么难&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;亿级(无限级)并发，没那么难&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247506474&amp;amp;idx=3&amp;amp;sn=e4e6cb0cbc0a2f294df1e6339a8ccb9b&amp;amp;chksm=9fac45e1a8dbccf73021f7013cc401ac27f9743d8ea03dabf3fe70807966559e18f0da00637b&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;论数字化转型——转什么，如何转？&lt;/a&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247512521&amp;amp;idx=1&amp;amp;sn=5e7fdd9fb1ad1f66f92e546de42bbb4d&amp;amp;chksm=9fac2e02a8dba71459c02b7a3cb347995ba34b206280d1d89af2ea5014a70137b7685cc72ca3&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;华为干部与人才发展手册（附PPT）&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247506360&amp;amp;idx=1&amp;amp;sn=c1aa07e315cd5f164ac26468dcea7ddc&amp;amp;chksm=9fac4673a8dbcf6539c9c9f1d5d5bad1316c830b680c34a027e80c23488d1cc2bdb79eac6546&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;企业10大管理流程图，数字化转型从业者必备！&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247505467&amp;amp;idx=3&amp;amp;sn=5dd52c083de259cfe5795fbf0df81925&amp;amp;chksm=9fac49f0a8dbc0e6ee63dae7e4957010d30a348446a0926da38586e4a59b3e5834eec1faf5a6&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;【中台实践】华为大数据中台架构分享.pdf&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247506811&amp;amp;idx=1&amp;amp;sn=0fa215f6cd3be00778d62103c33a8fcc&amp;amp;chksm=9fac44b0a8dbcda65ab026a23aae80ded9757badcb918af0065b84d00d27199dbe46b9d1abd8&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;华为的数字化转型方法论&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247506918&amp;amp;idx=2&amp;amp;sn=f017c702fbe35e9bbc7d3d70bc76acb4&amp;amp;chksm=9fac442da8dbcd3beeed44d647bcde1d0b1462d2d7e417fcb54c47046c928eb89649c73f4c39&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;华为如何实施数字化转型（附PPT）&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247507565&amp;amp;idx=2&amp;amp;sn=dce1a25f1065837f006f2565123d257e&amp;amp;chksm=9fac41a6a8dbc8b0ae288725505916cd20c5069ab718cbeab0343869587a82844642ad0bbc40&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;超详细280页Docker实战文档！开放下载&lt;/a&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3OTc0MzY1Mg==&amp;amp;mid=2247503860&amp;amp;idx=1&amp;amp;sn=9cd8bbb4096e3aa3369382c851c0fbfa&amp;amp;chksm=9fac503fa8dbd929e7541db6b2feb37bf6a20bd54bb0b943ebebe6857b0e73fd30c9c5e79889&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;华为大数据解决方案（PPT）&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5626740947075209&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1077&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DMP9YVibia1dRcoIRZhIEXjOiadY6nez36IR7kcRPHYnzIMUjuhwA4q1nX78edeXc3JsWM0Dqdl3csJvp7BiaLSbXw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;
          &lt;/div&gt;

          

          



           
                                
                    
        &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>