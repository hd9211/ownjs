<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>492648e91b5b0f73105be2abc7dbcc42</guid>
<title>2022 年升职加薪就靠它了！抓紧时间！</title>
<link>https://toutiao.io/k/fitvcz1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;开发者头条&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;kaifazhetoutiao&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;程序员分享平台 | 官方应用下载地址：http://toutiao.io/download&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>bc30ec71cff02337f98b8aaaa1011dc0</guid>
<title>深度分页，我都是这么玩的</title>
<link>https://toutiao.io/k/p61u81q</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d265d35077231d4586b6820fd4ef7611</guid>
<title>2022 年要考虑的 7 种 Docker 替代方案</title>
<link>https://toutiao.io/k/ywk73n5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.15625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YriaiaJPb26VN5koUu22VNrAnuXDfGLRs8w4tRT63wErRVia5ic9J4ZyzWLDwcKT1Ldrzibn8lWIAnCQmkMCAVEtuIg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;section&gt;作者 | Sudip Sengupta&lt;/section&gt;&lt;section&gt;
译者 | 辛晓亮&lt;/section&gt;&lt;p&gt;许多企业都采用容器来进行开发和管理稳定的应用程序，Docker 是该领域功能最丰富且使用最广泛的工具之一，已有数百万应用程序在使用它。Docker 本身有着强大的独立生态系统，并提供了一个广泛的工具包来管理容器化过程，但 Docker 还有其他替代品，它们提供了独特的用例和功能。本文深入探讨了 Docker 七个替代品，其中包括一系列综合平台，如 Docker 以及可以作为 Docker 生态系统组件替代品的工具等。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;Podman&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2852852852852853&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17v7vcib7WiaCFZA3GyyNEGfb7vuNsDSIqF2GeqZKovvBRsCDRibyomDqQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1332&quot;/&gt;&lt;/p&gt;&lt;p&gt;Podman 是 RedHat 开发的一个无守护程序的开源 Linux 原生容器引擎，用于构建、运行和管理 Linux OCI 容器与容器镜像。尽管 Podman 提供了一个类似于 Docker 的命令行界面，但它的操作方式并不相同。&lt;/p&gt;&lt;p&gt;Docker 和 Podman 之间的一个显著区别是，Docker 运行一个持久的、自给自足的运行时来管理其对象或称为 dockerd 的守护进程；而 Podman 并不依赖守护进程来工作，相反，Podman 将容器作为子进程启动，它还直接与注册表和使用运行时进程的 Linux 内核进行交互，也正因如此，Podman 被称为无守护进程的容器技术。&lt;/p&gt;&lt;p&gt;没有守护进程提高了 Podman 作为容器引擎的灵活性，消除了对单个进程的依赖。Podman 与 Docker 的另一大不同就是它不需要 root 权限。这一特点提供了一个额外的安全缓冲区，限制了某些可能操纵关键系统设置并使容器和包含的应用程序易受攻击的潜在危险进程。&lt;/p&gt;&lt;p&gt;此外，Podman 可以运行 pod-- 包含一个或多个容器的集合，作为一个单一实体管理，并利用共享的资源池。通过这项能力，Podman 用户可以将他们的工作负载转移到 Kubernetes。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;L  X  D&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34294385432473445&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17ygsk3jCfFca9MTzgDHXTCIU5dGx6KwPNz0GwGEzm4wFF5uALsjxIrg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1318&quot;/&gt;&lt;/p&gt;&lt;p&gt;LXD 一个专为 LXC Linux 容器设计的开源容器引擎。LXC 使用户能够在隔离的容器或类似于虚拟机的虚拟环境中运行应用程序，而无需承担管理单个内核的技术负担。LXD 提供了一个用于连接 LXC 软件库的接口，同时创建了一个守护进程，负责处理网络、数据存储和管理多个 LXC 容器。尽管 LXC 可以作为独立工具运行，但它拥有有限的功能子集。LXD 提供了这些附加功能，因此依赖于 LXC 工作。&lt;/p&gt;&lt;p&gt;LXD 与 Docker 的主要区别如下。与 Docker 建议每个容器只有单个进程的设计模式不同，LXC/LXD 中的容器可以运行多个进程。此外，Docker 容器可移植性更强，为与 LXD 相比，Docker 有效地抽象了资源。最后，Docker 支持在 Windows 和 macOS 环境上运行，但 LXD 只支持 Linux。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;containerd&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3249444855662472&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17TiaFWSIfjhzEYEW6Pk4M4etCCh8I9B3sEcL0mLo8x5AniayEAMtVmbOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1351&quot;/&gt;&lt;/p&gt;&lt;p&gt;containerd 是一个高级容器运行时，它通过在底层运行 runc 以提供操作系统和容器引擎之间的接口。runc 是一个支持 Windows 和 Linux 的守护进程，它抽象了特定于操作系统的功能，使运行和监督容器以及管理图像传输和存储变得更加容易。&lt;/p&gt;&lt;p&gt;containerd 提供的这种抽象级别功能消除了进行若干低级系统调用的复杂性，使得容器的可移植性得以实现。然而，与 Docker 不同，containerd 不处理镜像的构建或卷的创建。有趣的是，containerd 是 Docker 的默认运行时，现在它是一个独立的工具，就像 runc 一样。这也使得 containerd 像 Kubernetes 一样成为一个方便的编排工具，containerd 也是最受欢迎的 Docker 替代品之一。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;Buildah&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2906875543951262&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17ZcY4FuiauOUibQicmxfyEy78iaeJq9rHIefza085fsHJy4I3eaZp5XYBpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1149&quot;/&gt;&lt;/p&gt;&lt;p&gt;Buildah 是红帽基金会为容器化系统开发的一个 OCI 镜像构建工具。它是一个提供类似于在 Docker 中运行 &lt;code&gt;docker build&lt;/code&gt; 的功能的工具。Buildah 经常与 Podman 一起使用，互作补充，例如，Podman 在后台使用 Buildah 功能的子集来实现其构建过程。&lt;/p&gt;&lt;p&gt;它可以从 Dockerfile 或 Containerfile 中构建镜像，并生成与使用 Docker 创建的镜像相同的镜像，因为这些镜像是符合 OCI 的。此外，它还提供了对镜像层的细粒度控制，允许在一个单一层中进行多次修改提交。它还提供了从头开始构建镜像的能力，即不包含任何内容的镜像，这让用户可以自由地只添加运行应用程序所需的软件包。最后，与 Docker 不同的是，在 Buildah 中，用户只能看到他们构建的镜像。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;BuildKit&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2831230283911672&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17cyEvAcrCF9Uu7qQxbcicbBxRgu3mf5tO0hFK7qjV4246pJG24Uk6PicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1268&quot;/&gt;&lt;/p&gt;&lt;p&gt;BuildKit 是第二代构建镜像的 Moby 项目，在较新的 Docker 版本中作为实验性功能提供。&lt;span&gt;与 Do&lt;/span&gt;&lt;span&gt;cker 一样，它使用守护程序&lt;/span&gt;运行。不过，标准 Docker 构建和 BuildKit 之间的主要区别之一是，前者是逐层构建，后者提供并行构建处理。这个功能提高了性能，使构建速度更快。BuildKit 还允许跳过未使用的阶段，改善增量构建，并允许无根构建。此外，BuildKit 使用一个缓存来减少重建图像每一层的需要。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;Kaniko&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3467297084318361&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17oDFlibicibMlDxGwy9MnM3QVwZiaBcuhKdrMNFNzAK4fdUc0N5m7ZTXjKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1269&quot;/&gt;&lt;/p&gt;&lt;p&gt;Kaniko 是一个谷歌镜像构建工具，它可以从 Dockerfile 构建镜像。它和 Buildah 一样是无守护进程的，但更侧重于在 Kubernetes 中构建镜像。Kaniko 对于本地开发实例来说不是很方便，因为它通常作为镜像与 Kubernetes 等容器编排器一起运行。对于 Kubernetes 集群中的持续集成和交付管道，Kaniko 可以成为一个实用的工具。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;RunC&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3230437903804738&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17FAXBYfic6Y7wwhYfHTAMrY5HE72EoggsRuXmnrmGQz1AOP3TZiajOOmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1393&quot;/&gt;&lt;/p&gt;&lt;p&gt;RunC 以前是嵌入到 Docker 架构中的一个模块，在 2015 年作为独立工具发布。此后，它成为一个广泛使用的、标准化的、可互操作的容器运行时。DevOps 团队可以将其作为 Docker 或其他定制容器引擎的一部分。RunC 属于容器化生态系统中的容器运行时部分。容器运行时是处理容器运行的容器引擎中使用的较低级别的组件。&lt;/p&gt;&lt;p&gt;尽管 Docker 为组织在容器化过程中所需的各个方面提供了一个全面的工具包，但某些 DevOps 功能可能需要探索其他替代方案。但是，在选择任何此类选项时也需牢记此类替代方案所运行的主机操作系统及其使用情况。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;原文链接：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.containiq.com/post/docker-alternatives&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;点击底部&lt;/span&gt;&lt;span&gt;阅读原文&lt;/span&gt;&lt;span&gt;访问 InfoQ 官网，获取更多精彩内容！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span photoshow-hd-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YriaiaJPb26VNPrPHVrV124MK6fhrWJSGLwiapMkaCSpJichgaCz6JzXr413C6xfEjiasT96KgRdhjRP3CHnaEHQe7A/&quot;&gt;今日好文推荐&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2651106089&amp;amp;idx=1&amp;amp;sn=4eb1903a395a9544767d5383bd4cfbff&amp;amp;chksm=bdb9537a8aceda6c96a107d348b5e954fb2107f89870b67a6c50f557c7969029f21b4240aa2d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;75%新项目都可以“无脑”选择单体架构&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;75%新项目都可以“无脑”选择单体架构&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2651105854&amp;amp;idx=1&amp;amp;sn=346fc790136616fc3e088acc8bf0f950&amp;amp;chksm=bdb9526d8acedb7bff88e236e17002102f92918bb3245796020239927cfa21ce5bd341caad6a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;InfoQ 最新 Java 发展趋势报告&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;InfoQ 最新 Java 发展趋势报告&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2651105779&amp;amp;idx=1&amp;amp;sn=9d06a049aa0429b3eb56c6af73305bb0&amp;amp;chksm=bdb951a08aced8b68c97d4d0ed16bdeee3128bd0e081b173b2c35e955c7c09e737af191c2694&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;AlphaCode编程比赛击败一半程序员；微信超1亿人视频号看春晚，6.6亿人抢红包；Flutter 2.10发布 ｜ Q资讯&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;AlphaCode编程比赛击败一半程序员；微信超1亿人视频号看春晚，6.6亿人抢红包；Flutter 2.10发布 ｜ Q资讯&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2651105739&amp;amp;idx=1&amp;amp;sn=0c9a1d1a5b45c7a5a5c6779cb3f2a232&amp;amp;chksm=bdb951988aced88e599f05b2cb023a267e074a033cfb395d5742b5dbd7c5fd08ae924bd5df32&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;这十个事件，让“永不宕机”变成了一个笑话&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;这十个事件，让“永不宕机”变成了一个笑话&lt;/a&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.1515625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YriaiaJPb26VNBX66P2F9dF2yuYfbcibGMuaBYgvK62MGPE9HhgU2vptFAUZdaO2cGKCsP4h1DnibIGywKSkFv9b6g/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点个在看少个 bug&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;👇&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d2da361ab4a9cb90ed3bac9d2ede6a8d</guid>
<title>我做基础架构学到的42件事</title>
<link>https://toutiao.io/k/k6tjws1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.562962962962963&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hBL5R2neMA0j12Nst4bfv3gk0Qato1iaGibd2e4wLCXa8rvRc7cwRgn2lRRE0szMKsXrG2Mw8icSgcIOE7oQF4FQw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;h3 data-sourcepos=&quot;3:1-3:13&quot;&gt;译者序&lt;br/&gt;&lt;/h3&gt;&lt;p data-sourcepos=&quot;5:1-5:411&quot;&gt;最近读到了分布式系统研究者 Mahesh Balakrishnan 的一篇博客《42 things I learned from building a production database》。同样做基础架构，看完大佬总结的经验后拍案叫绝，其中有几条简直是真知灼见，故翻译了全文。&lt;/p&gt;&lt;blockquote data-sourcepos=&quot;7:1-7:193&quot;&gt;&lt;p data-sourcepos=&quot;7:3-7:193&quot;&gt;Mahesh Balakrishnan 是 Facebook Delos 项目的负责人。Delos 对标 ZooKeeper，关于 Delos 更多详细细节其团队已经发了两篇 paper，感兴趣的同学可以自行搜索。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-sourcepos=&quot;10:1-10:230&quot;&gt;&lt;strong&gt;译注&lt;/strong&gt;：IC = Individual Contributor，即独立贡献者，Facebook 开发团队的一个术语，&lt;strong&gt;指那些不是经理、不是 team leader、不是任何领导职位的编码人员&lt;/strong&gt;，可以理解为一线开发人员。&lt;/p&gt;&lt;p data-sourcepos=&quot;10:1-10:230&quot;&gt;&lt;span&gt;&lt;strong&gt;以下为正文：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-sourcepos=&quot;13:1-13:24&quot;&gt;对客户（用户）&lt;/h2&gt;&lt;p data-sourcepos=&quot;15:1-15:86&quot;&gt;（1）&lt;strong&gt;让你的客户开心；否则这篇文章的其余部分都无关紧要&lt;/strong&gt;。&lt;/p&gt;&lt;p data-sourcepos=&quot;17:1-17:163&quot;&gt;（2）要注意拥有正确数量的客户（刚开始时，就一个）和合适的客户（他允许你构建关键技术）；并小心地增加这个数字。&lt;/p&gt;&lt;p data-sourcepos=&quot;19:1-19:232&quot;&gt;（3）直接与客户对接。很多团队内部冲突可以通过一句“我刚才和客户谈过，他们说......”来解决。在做基础架构时，我们往往不需要猜测客户的需求，我们可以直接问他们。&lt;/p&gt;&lt;p data-sourcepos=&quot;21:1-21:187&quot;&gt;（4）但要意识到客户可能无法表达他们真正需要的东西；不要只看到需求的表面价值，而要花时间详细地理解他们的用例。阅读他们的代码。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;23:1-23:15&quot;&gt;项目管理&lt;/h2&gt;&lt;p data-sourcepos=&quot;25:1-25:140&quot;&gt;（5）要有一个简单明了的使命宣言来表达你存在的理由。Delos 的宣言是：我们将成为 FB infra 的可靠基础。&lt;/p&gt;&lt;p data-sourcepos=&quot;27:1-27:181&quot;&gt;（6）反复进行任务难度的评估；决策者可能没有时间、倾向、上下文或培训来进行评估，而且可能会把它们弄错（简直是）几个数量级。&lt;/p&gt;&lt;p data-sourcepos=&quot;29:1-29:252&quot;&gt;（7）对 IC 的任务分配很关键; 要求自己处于任何决策的关键路径上，因为你通常比经理更了解问题、代码库和 IC 们的优势。如果你和其他 IC 自己解决任务分配问题，大多数经理都会很高兴。&lt;/p&gt;&lt;p data-sourcepos=&quot;31:1-31:52&quot;&gt;（8）Road-map 是一种手段，而不是目的。&lt;/p&gt;&lt;p data-sourcepos=&quot;33:1-33:215&quot;&gt;（9）如果你有好的和/或一致的经理，要尽可能地理解、支持和包容。如果你没有这样的经理人......好吧，我还没有想明白这个问题，如果你想明白了，请告诉我。&lt;/p&gt;&lt;p data-sourcepos=&quot;35:1-35:325&quot;&gt;（10）使你的项目对组织架构调整有足够的鲁棒性，一个公司的管理层级本质上是脆弱的（毕竟，树是一个单连接的图）；不断地与未来可能接手这个项目的经理进行交流。&lt;strong&gt;不惜一切代价，确保经理人的变动不会给 IC 们带来不公平的职业结果&lt;/strong&gt;。&lt;/p&gt;&lt;blockquote data-sourcepos=&quot;37:1-37:215&quot;&gt;&lt;p data-sourcepos=&quot;37:3-37:215&quot;&gt;通常来说，公司组织架构调整是非常频繁的，经常一年就会调整一次，确保经理人的变动不会带来不公平的职业结果，这点其实很难（我也很想知道怎么做到）。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-sourcepos=&quot;39:1-39:232&quot;&gt;（11）追踪类似的功能在你所在领域的其他项目中花费了多长时间，并以此作为任务难度评估的依据(例如，“功能 X 在系统 Y 中花了 3 年时间；这不是一个 IC 的一半工作”）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;41:1-41:9&quot;&gt;设计&lt;/h2&gt;&lt;p data-sourcepos=&quot;43:1-43:107&quot;&gt;（12）对 API 要保守，对实现要宽松(Be conservative on APIs and liberal with implementations)。&lt;/p&gt;&lt;p data-sourcepos=&quot;45:1-45:80&quot;&gt;（13）但要坚持谨慎地推出新的实现（灰度、分阶段推出）。&lt;/p&gt;&lt;p data-sourcepos=&quot;47:1-47:335&quot;&gt;（14）设计 API 时，写代码完成第一个实现(implementation)；积极计划第二个实现；并希望/祈祷事情将在第三个实现中发挥作用。（When designing APIs, write code for one implementation; plan actively for the second implementation; and hope/pray that things will work for a third implementation.）&lt;/p&gt;&lt;p data-sourcepos=&quot;49:1-49:206&quot;&gt;（15）设计 API 时，首要考虑向新实现的迁移；自定义迁移会造成巨大的时间消耗且不可靠。每个主要的 API 都应该有一个单一的 CLI 驱动的调用来切换实现。&lt;/p&gt;&lt;p data-sourcepos=&quot;51:1-51:187&quot;&gt;（16）作为一个团队去设计；作为个人实现(Design as a team; implement as individuals)。这将使设计成为瓶颈，但这是值得的：抵制并行化设计的冲动。&lt;/p&gt;&lt;p data-sourcepos=&quot;53:1-53:276&quot;&gt;（17）对于存储系统，&lt;strong&gt;在开始时就要重点关注一致性和持久性，而不是可用性；一致性和持久性更难衡量，如果出问题也更难修复&lt;/strong&gt;。由于可用性更容易衡量，所以会有外部压力要求优先考虑它；推到后面去。&lt;/p&gt;&lt;p data-sourcepos=&quot;55:1-55:181&quot;&gt;（18）在测试中维护 API 的多个实现；比较它们之间的结果。这样做的代价是值得的（这将有助于正确性，也可以防止实现细节的泄露）。&lt;/p&gt;&lt;p data-sourcepos=&quot;57:1-57:306&quot;&gt;（19）对设计进行后期绑定（Late-bind）：鼓励团队思考整个设计空间，而不是承诺使用某个特定的解决方案。与一群高智商、有主见的 IC 们一起开头脑风暴会议是一门值得掌握的艺术。鼓励在设计的关键路径上进行粗略的原型设计。&lt;/p&gt;&lt;p data-sourcepos=&quot;59:1-59:102&quot;&gt;（20）对实现者进行后期绑定：一旦设计完成，任何 IC 都应该能够编写代码。&lt;/p&gt;&lt;p data-sourcepos=&quot;61:1-61:179&quot;&gt;（21）拥有适当数量的抽象（这很难）。太少了，你会得到一个混乱的单体；太多了，团队会被理解每个抽象的语义的认知开销所淹没。&lt;/p&gt;&lt;p data-sourcepos=&quot;63:1-63:132&quot;&gt;（22）&lt;strong&gt;避免使用实时性来保证正确性或在机器间比较时钟，除非你有（并理解）时钟的错误界限&lt;/strong&gt;。&lt;/p&gt;&lt;p data-sourcepos=&quot;65:1-65:98&quot;&gt;（23）有一个单一的真理来源。在各种类型的状态之间建立简单的不变量。&lt;/p&gt;&lt;p data-sourcepos=&quot;67:1-67:144&quot;&gt;（24）创造一种文化，让 IC 不断地思考完全不同的设计；不要停止关于假设性替代设计的对话。鼓励好奇心。&lt;/p&gt;&lt;p data-sourcepos=&quot;69:1-69:141&quot;&gt;（25）了解你的 SKU。云计算使人们很容易忽视硬件；但对硬件（和硬件趋势）的理解对设计来说至关重要。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;71:1-71:14&quot;&gt;Code Review&lt;/h2&gt;&lt;p data-sourcepos=&quot;73:1-73:118&quot;&gt;（26）在一个具有快速评审周期的透明代码库中，除非你把关，否则 API 会泄露实现细节。&lt;/p&gt;&lt;p data-sourcepos=&quot;75:1-75:204&quot;&gt;（27）鼓励 IC 对 diffs 进行批判性的思考，并创造一个人们可以自由表达的环境。作为 diffs 作者，你对指出 diffs 问题的人的反应应该是感激，而不是沮丧。&lt;/p&gt;&lt;p data-sourcepos=&quot;77:1-77:149&quot;&gt;（28）对于关键组件，考虑非正式的规则，例如要求两个接受（即两个 LGTM）或甚至是某个子集的 IC 的一致接受。&lt;/p&gt;&lt;p data-sourcepos=&quot;79:1-79:356&quot;&gt;（29）对于关键组件，落地时间不是衡量其重要性的标准：抵制衡量这一标准和优化它的冲动。创造一种让 IC 可以接受 diffs 不能快速落地的文化（创造性的工作——书籍、论文等等——由于高质量 review 的成本，通常需要漫长的 review 周期；为什么代码应该有所不同？）&lt;/p&gt;&lt;p data-sourcepos=&quot;81:1-81:368&quot;&gt;（30）有时候，你只有在一个 IC 写出了一个候选的设计方案后才意识到这个设计是正确的。要抵制说“哦，好吧，让我们先落地，然后再修复它”的冲动；你这样做对 IC 和项目都没有帮助。创造一种文化，让 IC 感觉到如果这不是正确的解决方案，就可以丢弃代码（以身作则）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;83:1-83:9&quot;&gt;策略&lt;/h2&gt;&lt;p data-sourcepos=&quot;85:1-85:253&quot;&gt;（31）以某种节奏问自己：为什么这个团队/项目会存在？如果它不存在，会发生什么（哪个其他团队/系统会填补这个空白）？该团队是如何为公司增加价值的，以及它如何在未来继续这样做？&lt;/p&gt;&lt;p data-sourcepos=&quot;87:1-87:427&quot;&gt;（32）跟踪公司内你所在领域的每个其他主要项目：你应该能够比他们自己的 IC 更好地解释他们的技术设计。抓住任何机会去与其他类似项目的负责人辩论项目范围：你应该能够阐明你的项目如何适合更大的生态系统。团队间的竞争是健康和必要的。与这些项目中的 IC 交朋友：他们比公司里的其他人更了解你的技术挑战。&lt;/p&gt;&lt;p data-sourcepos=&quot;89:1-89:251&quot;&gt;（33）不要在原始性能或效率上与其他团队竞争；这将升级为一场军备竞赛，两个团队都会浪费时间为工作负载优化他们的系统，产生苹果与橘子的比较，等等。在基本设计特性上进行竞争。&lt;/p&gt;&lt;p data-sourcepos=&quot;91:1-91:119&quot;&gt;（34）如果客观上有人在你的使用场景有更好的系统，并想接手它，那就去找别的事做吧。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;93:1-93:15&quot;&gt;可观测性&lt;/h2&gt;&lt;p data-sourcepos=&quot;95:1-95:50&quot;&gt;（35）测量是一种手段，而不是目的。&lt;/p&gt;&lt;p data-sourcepos=&quot;97:1-97:77&quot;&gt;（36）你应该能够在你的客户之前发现你的服务中的问题。&lt;/p&gt;&lt;p data-sourcepos=&quot;99:1-99:261&quot;&gt;（37）在尽可能的情况下，可观察性应该在 API 之上，并在实现(implementations)之外。这可以确保你可以切换实现并比较性能，而不会在测量代码中引入错误。它还可以简化实现；并降低新实现的门槛。&lt;/p&gt;&lt;p data-sourcepos=&quot;101:1-101:125&quot;&gt;（38）任何不容易测量的东西（例如，一致性）往往被遗忘；要特别注意那些难以测量的属性。&lt;/p&gt;&lt;p data-sourcepos=&quot;103:1-103:176&quot;&gt;（39）尽可能将关键的检查（例如一致性）推到部署本身；尽量减少对外部服务的检查（否则你现在有两件事要跟踪，而不是一件）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;105:1-105:9&quot;&gt;研究&lt;/h2&gt;&lt;p data-sourcepos=&quot;107:1-107:224&quot;&gt;（40）追踪你所在领域的研究成果。很快你就会和你的 IC 有一个速记，可以实现超快的沟通。&quot;如果我们尝试项目 X 中的那个东西呢？并将其与项目 Y 中的技术相结合？&quot;。&lt;/p&gt;&lt;p data-sourcepos=&quot;109:1-109:221&quot;&gt;（41）尝试新事物。在可行的解决方案内，偏向于新的东西。抵制逐字逐句地复制设计的冲动。每一个重要的系统在某些时候都只是某人头脑中的一个半生不熟的想法。&lt;/p&gt;&lt;p data-sourcepos=&quot;111:1-111:380&quot;&gt;（42）写论文。为那些对你正在做的事情没有任何背景的听众写作，将迫使你检查和澄清你的假设。论文可以使你更容易雇用到优秀的人才，也更容易让他们上岗。研究生应该能够向你解释你的设计（并发现错误！）。当被要求做讲座时，尽量答应。它们很有趣，而且你可以认识新的人。&lt;/p&gt;&lt;hr/&gt;&lt;p data-sourcepos=&quot;113:1-113:74&quot;&gt;&lt;/p&gt;&lt;p data-sourcepos=&quot;113:1-113:74&quot;&gt;&lt;em&gt;原文：&lt;/em&gt;&lt;em&gt;https://maheshba.bitbucket.io/blog/2021/10/19/42Things.html&lt;/em&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;欢迎关注我的公众号：&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIwODA2NjIxOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA0g3RQ9bRYaJib92ovwsSB9pPup1lt5cB24cJVJia1dc3Nr2kFSBHsJq5HL9DcLhoAGribSBvHU7ZzjA/0?wx_fmt=png&quot; data-nickname=&quot;多颗糖&quot; data-alias=&quot;duoketang&quot; data-signature=&quot;一名系统研究者的攀登之路&quot; data-from=&quot;1&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a0226287e1f0b92e87884cfe7dee05c5</guid>
<title>阿里P9专家右军：以终为始的架构设计</title>
<link>https://toutiao.io/k/dx66bds</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single js_wx_tap_highlight wx_tap_card&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left js_a11y_comma js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI3MzEzMDI1OQ==&amp;amp;action=getalbum&amp;amp;album_id=1339313882632110082#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;1339313882632110082&quot; data-tag_source=&quot;&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#中生代技术&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;199个&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;section label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;section label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;section label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;section label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;section&gt;&lt;section label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;section&gt;P&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;右军&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;section&gt;&lt;p&gt;读完需要&lt;/p&gt;&lt;section&gt;17&lt;/section&gt;分钟&lt;p&gt;速读仅需 6 分钟&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;115&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;&lt;span&gt;右军(于君泽)，蚂蚁金服P9技术专家，在 IT 领域从业超过十五年。对 高并发、分布式架构、内建质量、研发管理有一些心得。维护公众号“技术琐话”，合著有《深入分布式缓存》、《架构宝典》、《程序员的三门课》等书籍。本文摘取自《架构宝典》&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;1&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h2 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;缘起&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;世界上有两件东西能震撼人们的心灵: 一件是我们心中崇高的道德标准，另一件是我们头顶上灿烂的星空。——康德&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;架构是一种思维模式，可以理解为系统化地看待周遭事物并提出解决方案。从这个角度讲，小到一段代码，中到一个模块，大到一系列产品集都有其架构层次。我们常常听到 的抽象、扩展、复用、分层都是常见的架构设计手段。一位程序员经常做架构思维的训练 和实践，然后成长为一位系统或者平台架构师，这是一种自然演化的成长路径。所以说， 架构思维非架构师独有，架构师也非天降神人，而是通过实践、学习成长而来的。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;架构师是连接商业世界与技术世界的桥梁，如同金门大桥一样(如图 2.1 所示)，《软件架构师的 12 项修炼: 技术技能篇》一书曾大篇幅论述接触客户的重要性，通过调研、会 谈、引导等方式了解你的客户，了解产品展开竞争的市场，从而研究业务目标，考虑能为 客户做什么，在尘土飞扬的商业背面来设计 IT 系统。比如，客户告诉你的未必是真正的需求，而是要挖掘背后的本质需求。此时，往往需要考虑如下几个要点:&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;ul label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;他们的“痛点”是什么?&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;如何让他们更高效地工作?&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;你如何满足他们的需求?&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;因此，架构师不仅仅要懂得技术选型、约束，有丰富的代码研发经验，对于非功能性需求(比如性能、事务设计)有丰富的应对策略，还需要足够了解业务，了解客户需要什 么，并知道如何衡量产品是否成功。这种成功是真实的成功，而不是象牙塔和实验室中架构师们假想的那种成功。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6002906976744186&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnU439xvGLhibfI4YoKPIXselGKWhpNOWm6OKIjGDQ96G4vY3yJcSyFAA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1376&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2.1&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;笔者主张的架构设计思想，一言以蔽之就是以终为始。只有从需求出发，才能衡量架构设计的成败，也才能不偏不倚地不断评估当下所走之路是已经偏离了路线还是已经迷路 了。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;2&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h2 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;我们的思考方式&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;在抛出笔者的观点之前，先来看一下黄金圈理论，该理论由著名的营销顾问西蒙·斯涅克提出，如图 2.2 所示。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;一般的营销方式是“这台电脑功能强大，性能优秀，买一台吧”! 但苹果这样的公司恰恰相反，苹果公司的营销方式实际上是这样的: “我们做的每一件事情，都是为了突破和创 新。我们坚信应该以不同的方式思考。我们挑战现状的方式是把我们的产品设计得十分精 美，使用简单，界面友好。我们只是在这个过程中做出了最棒的电脑。想买一台吗?”&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;在制定营销策略时，运用此黄金圈，从 why 开始，再到 how，最后再考虑 what。即先找到“为什么”，建立自己的核心价值理念，突出“为什么”，个性鲜明、追求极致，并始终用 why 来检验 how 与 what!接下来，尝试用 why-how-what 的思路来分别谈一下我对软件架构的一些想法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7118353344768439&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibneUjgUmNmpGSsaSy91luoX7uibWc1vZxkgiac0eOQkes5edfsN0kXbxrQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1166&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2.2&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;3&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h2 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;为什么要做架构设计&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;3.1&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;由模型到实施&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;无数的著作都论及软件架构和建筑的关系。我认为架构就如同一张蓝图，没有图纸很难建造房屋。如图 2.3 所示，一个令人神往的海边建筑涉及的方方面面非常多，具体实施过程还包括各种测量和计算，没有一个架构设计过程是不可能的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6613636363636364&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibn3nWopibFubOUHjKjW6BzRPk88ibPVsawtDzI2rU71aY14CJrvl57ckHQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2.3&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3247232472324723&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnkTIdicRyAMNfMDZ7iaicdyXtFaNZ8yA1SbsyLwSoq8HYHp9QUa5jpiatCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1626&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2.4&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;如&lt;/span&gt;&lt;span&gt;图 2.4 &lt;/span&gt;&lt;span&gt;所示，室内的图纸也有建筑分布、水电图等，以服务于不同的目标。&lt;/span&gt;&lt;span&gt;水电图指导水电施工，如果搞错了，再返工也是蛮复杂的一件事情。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;3.2&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;业务规模发展带来的复杂度&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;如果说设计师给你的效果图相当于 UI 设计的话，那么建筑工人建造的就是设计的骨架了(比如架构分层、部署)。而合适的架构可以见微知著，适应变化，在快速规模化效应到来时较好地解决客户问题，如图 2.5 和图 2.6 所示的 2 个例子。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.3811074918566775&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibn4ciaLcQfAHkktTPhoica7p4UoLWKlKoDGGvMLibwDHVJxqnzRHkALuJUQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1228&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2.5&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.43544303797468353&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnzVUpNf48MC2ePiaSVVYmXBjgMicp6ruFrlMZBqtuNzRe42E2WptQ9vyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;790&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2.6&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;一艘民用的船只如果发展成一艘巨舰，在安全性、载重、动力设备、船只内部设计等各方面都有差异。而对于时下很火热的线下 O2O 业务，广大群众乐于比较价格，计算各种优惠，厂商也乐此不疲地发展营销创新，从街头的跳楼价到打折，不一而足。如图 2.6 所示的例子，起初的优惠方式为:打折、立减。转换为规则的表达就是 X*折扣比例及 X−Y(折扣金额)。演变到第二阶段时，优惠方式增加了累计，就是打折和立减同时生效。演变到第三阶段便出现了有条件的累计优惠，阶梯性优惠，指定品种/数量优惠等情况。从三个阶段的可扩展性层面来设计优惠规则，其实并不简单，因为后期的需求与起初相比已经有很大的不同。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;3.3&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;从沟通视角看软件架构&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;在 Simon Brown 所著的《程序员必读之软件架构》一书中，提到了软件架构的若干好 处，其中有不少是从沟通视角来看的，如下。&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;/&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;对于第二点，笔者感同身受。有时候，当产品经理、应用架构师、开发人员甚至还有业务领域专家一起讨论交流时，大家对一个概念有不同的说法，统一名称、形成共识往往 是设计架构方案的第一步。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;4&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h2 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;如何做架构设计&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;对于如何做架构设计，笔者总结了以下几点。&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;ul label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;以终为始，不忘初心。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;使用 PMC(Production Material Control，生产及物料控制)框架。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;聚焦 SLA(Service-Level Agreement，服务等级协议)。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;满足利益相关者的需要。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;从多视角、多层次看架构。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;全息视图分析。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;抽象、协作、扩展、复用。前 4 点本质上都是从客户价值出发的，第 5 点和第 6 点针对的是多层次视图问题，第 7 点谈的是探寻架构的基本方法。下面和大家具体谈一谈。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;4.1&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;以终为始，不忘初心&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;笔者在如何做架构设计这部分旗帜鲜明地提出: 以终为始，不忘初心。初心是什么， 就是用户的本质需求。如图 2.7 所示，不论系统如何组织，用户最关心的是响应时间 (Response Time，RT)，以及展示的金额是否准确。所以，在一开始设计时就要考虑如何获 取到用户关注的两个要素——体验和准确性。是否要考虑链路级的监控，以及链路级的关 键数据校验;如果规则分散到多个系统，如何检查整体组合的命中等情况;链路上每个系统的容量和响应时间是多少;等等。以上这些都在考虑之列。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.453125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnthunWLBgA4w0mbicHwa5sUApTibzuQuWEgSAVJvB1Y36s1xPhSPSenPQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1152&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2.7&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;4.2&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;PMC 框架&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;什么是 PMC 框架呢?P 代指平台侧(Platform)，M 代指商户侧(Merchant)，而 C 代指用户侧(Customer)。平台型的产品都有这三端的考量。在构建一个具体软件的时候，一 定要搞明白它在服务谁? 是用户还是商户，还是兼而有之。以天猫、Uber 和某 O2O 的 App 来进行比较，如图 2.8 所示，其中 C 端为客户端，B 端为商户端。滴滴或 Uber 解决出行的问题，电商解决网上购买商品的问题。平台设计的本质是符合平台侧、商户侧、用户侧的三端诉求。比如，电商的 IM 解决信息沟通问题，客服解决售后，还有其他方式解决可能的作弊、交易、安全及评价体系等一系列的问题。Uber 也是基于交易的平台，乘客需要付款给司机，用户的需求则是更快更省地叫到车，司机的信用评价沿用了星级评价、投诉等保障措施，但对于 Uber 来说，基于地理位置的撮合(用户的地点，以及在一定范围内寻找可以承载他的车，包括允许共享座位的车)是其核心，也是 Uber 孵化出 dispatch 模块的原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6964656964656964&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnJZ4Q0shqx7tKQfMxicac6diaU8tToicBDOQGRMnF4ZUWtZnu4Fic5kV1xw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;962&quot;/&gt;&lt;span&gt;图 2.8&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;有意思的事情发生了，Uber 老板一觉醒来发现他创造的不仅仅是一家出行公司，如图 2.9 所示。司机和车只是平台的资源，供应方(Supply)可以是一家蛋糕店、鲜花店或者是西湖 的休闲船只管理中心，那么面向不同的供应方，该平台架构的哪些能力是可以复用的呢? 如下:&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;ul label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;调度能力。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;用户呼叫的界面、策略(大部分)。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;地理位置处理。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;交易事后处理等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6615969581749049&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnIa2EvZRVaWUPGz7uCDgbUpketHDEdV4oqFQNPXsNv48libtUYQVNHdA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1052&quot;/&gt;&lt;span&gt;图 2.9&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;大部分变化在于运送的物品(属性)及一些附属需求，而这些都是可以通过良好的平台设计及可扩展的新市场产品特性来完成的。有一位互联网圈资深产品经理曾提及要识别刚需和伪需求。刚需比如衣食住行，而我理解的伪需求或许是小众需求，只针对特定客户体现其价值，并可能仅仅是一点点演绎， 而非本质需求。做软件架构设计，识别本质需求比较重要。比如客户让你把对账单导出成 Excel，可能他还需要导入手工账单，以便和自己记账的数据做核对，那么如何提供对账功能给用户就值得再考虑了。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;4.3&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;架构非单一视角、单一层次&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;由于不同角色对领域或者概念的理解存在差异，因此很容易导致频繁的争吵不休。前面提到了统一概念定义，讨论了远景、目标和价值，但是在更具体的讨论中，往往有可能陷入第二个层次的喋喋不休，研发管理者往往乐见这些争吵。模拟一下管理者的心理:&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;“嗨，比尔，你看，架构师讨论得多专注，多投入啊! 一个概念问题竟然讨论了大半天， 对自己要求太严格了!这是工匠精神呢!”&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;另外一个场景就是，小 V 在说红包是一个支付工具，而小 B 说它明明是一个营销工具。有时候还上升到哲学层面，比如门是因为有把手才成为门，还是因为它本来是门，把手是它的组成部分。笔者也乐见架构师们不断探究的精神，但是有以下两点建议:&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;ul label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;应该给争论设置一个时间节点——由于有些概念未明晰，工作便无法开展，因此争论有时不可避免;而有些概念并不影响现阶段甚至下一步工作的开展，因此需要避免对这些概念的过度争论。不要忘了，争论是为了更好地构建软件系统，而软件是为业务服务的。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;争论的问题未必是“非黑即白”的选择题，事物往往具有复杂性，通过不同维度和层次的抽离，可以看见不同层次的本源。比如 CTG-MBOSS 功能架构就对电信业务领域做了客户产品、服务、资源、企业管理的划分，又基于提供、保障、计费这个 层次做了划分，如图 2.10 所示。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;有同学可能会问，多个视角有什么用呢?图 2.10 从颜色区分了业务支撑、运营支撑、 企业管理等。不难理解，业务支撑直接面向用户前端，而运营支撑是支持业务支撑的，比如产品管理、网络资源管理。运营支撑能力直接影响到前端业务的效率、体验和 SLA。以一个第三方支付的应用为例。单就这样一个应用来说就有诸多的考量因素，比如风控、营销、签约(签约的顺畅度)等，如图 2.11 所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6662790697674419&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnDGib4BaDMMeFsKzgCNH0ZgHZSvv9TDdj01zia41XwHrmfa3d7PXGvDoQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1720&quot;/&gt;&lt;span&gt;图 2.10&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.645748987854251&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnr1mhASVBQtXLJa0Poic1Kpq0ptxbHVy6kwvT3ViabojwgDBicmrt0WtQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;988&quot;/&gt;&lt;span&gt;图 2.11&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;图 2.11 提及的维度已经很全面了，但毕竟是离散的，可以进一步进行分类管理，分类如下。&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;/&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;根据企业运营业务的经验，可以抽象出一种典型的组织形式: 业务执行、业务运营、企业内部运营和主数据，如图 2.12 所示。业务执行、业务运营等视角又可以加以组合，组合可以用来考量设计的要素(谁为谁服务)。比如营销是业务运营的板块，是为了更好地执行业务。Uber 的打折优惠也好，免费拼车也好，都是不影响主流程的，是可以进一步刺激消费的设计; 然而，有的产品把营销活动设计得极其生硬，极其难用，相当于把一件大人的衣服穿到了一个小朋友身上。或许可以有这样一种设计，可以对产品的流量进行分析，当检测到某项指标达到某一阈值时，便强烈预警产品应该优化，并能通过分析给出优化建议。可能一开始数据不够准确，但是通过不断训练和尝试，可以形成正循环。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;百度的朋友曾经在某个会议上分享过通过快速构建 MVP 以及收集舆情信息，不断优化产品迭代的案例，这就是一种蛮有意思的尝试，业务运营一定要为业务执行(产品)服务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.772&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnibicJnCBlPmnbyTtWK3fXHwZzLFM4hrXia2g0qC5X3LhWrNxfJlMDMWuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2.12&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;4.4&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;满足利益相关者的需要&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;在写本部分内容时，我的好友同时也是时任诺基亚创意经理、架构师的石涛声向我推荐了《软件系统架构:使用视点和视角与利益相关者合作》一书，说我的某些观点与此书有相通之处。什么是利益相关者?利益相关者最终会对软件产品或者系统的范围、功能、 操作特性和结果做出决定并产生影响。没有利益相关者就没有必要创建架构，因为没有人来构建部署它或者为此付费。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;好的架构描述能够向利益相关者对架构的关键内容进行有效的展示。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;4.5&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;聚焦 SLA&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;SLA 的全称是 Service-Level Agreement，意思是服务等级协议。聚焦 SLA，有如下两 个明确的注意事项。&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;/&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;前面阐述了从客户价值出发构建架构，同时考虑 C(客户侧)、P(平台侧)、M(商户侧)的不同诉求。那么如何衡量这些诉求是否实现了呢?答案是需要清晰明确地设定 SLA。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;举个例子，12306 这个众所周知的火车票购买网站由于经历了 2012 年的阻塞、间或的宕机及与黄牛(抢票软件等)斗智斗勇开启了“杀伤力巨大”的图片校验码而引发众多吐槽。那么，12306 给客户带来的价值是什么呢? 首先是让尽量多的人买到票(票的数量受制于运输能力)，另外是让人能够比较顺畅地买到票，再者是公平性(开发抢票软件的浏览器是不是应该治理，还有那些倒卖的地下软件)。有专家说 12306 不应该把图片校验码弄得这么复杂，对抗黄牛不是主要依靠这种手段。我认为只说对了一半，防作弊的确是它要做的事情，这是为了客户价值而做的。但是，有报道称，对 12306 图片识别困难的回应是能买到票就不错了。这样的说法显然降低了对价值实现的认可。另外，虽然票最终是会卖完的， 但是票以什么样的方式卖完，大部分人购买时是否顺畅也是非常重要的(近些年已经没有出现宕机问题了)。说了这些，大家不妨梳理一下实现客户价值的方法，比如是否可以使用预约的方法， 只有预约才有资格买票，且实行 7×12 小时分批次购买等; 再比如运行程序时如何区分是普通用户还是刷票软件，针对不同的渠道采取不同的策略，这里肯定有不少事情可以做， 而不是一图难天下。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;讲了 12306，再来看一个例子。以图 2.13 所示的第三方支付为例(仅作示意，切莫细究图示模块内容的完备性)。业务运行(支付业务)涉及用户下单、形成交易并支付等相关处理，而用户非常关注能不能快速、正确且安全地进行支付。为了求证付款正确性，他们也会习惯性地在第一时间查询消费记录。对于商户而言，他们也有查询收支明细的诉求。到这里，可能有人会问，了解 SLA 要求和具体的架构设计存在哪些关联呢?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6977687626774848&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnQY7NG2RzLfGOicVbh6ZEBXjhrWqylWOvMxldyP5101Xxku7TCicVJtQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;986&quot;/&gt;&lt;span&gt;图 2.13&lt;/span&gt;&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;&lt;span&gt;图中的空白方框代表不方便公开的隐藏业务。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;仍以图 2.13 为例，可以用一系列假设做恰当的预设计，如图 2.14 所示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.743801652892562&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnOXES2uGulqhLYN4lJP3nrnvqNMnPRibxlticRIdtI9iaS6h53v337NVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;968&quot;/&gt;&lt;span&gt;图 2.14&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;比如从系统运行角度看，如何度量用户 SLA(体验顺畅度、支付成功率、从下单到完成支付花费的时间)以及更多行为数据(用户在哪一步流失的，什么原因)等。要做这些，就需要全链路的监控，进而需要做统一的上下文、事件码来串联请求的链路(traceId 描述 技术语义，业务语义则可能被 userId 所描述)。再举一个例子，在数据量 100 万级的情况下， 可能以 buyerId 或者 sellerId 为查询条件分别满足按买家、商家不同维度的消费记录查询。当数据规模扩大之后，可以通过数据库表的拆分来做 Sharding，此时，则涉及键(key)的选取问题，该问题就是比较典型的多维度查询问题。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;4.6&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;抽象、协作、扩展、复用&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;抽象、扩展人人都知道，但是如何识别本质而不做 BDUF(Big Design Up Front)则并不容易。以 Uber 为例，Uber 的定位已经不仅仅是一家出行公司，而是一家可以利用其物流能力叫飞机、叫外卖，包括送花的公司，如图 2.15 所示。要知道 Uber 也不是一天炼成的。有文章披露，旧系统是为专用客车运输所设计的，其中做了很多假设:每辆车一个乘客，不适用 Uber Pool(拼车服务)。将运送人的想法深深嵌入数据模型和接口里，会限制将该架构扩展到新的市场和产品上，比如运送食物和箱子。最初的版本是按城市来划分的。这样做对于可扩展性而言是好的，每个城市可以独自运营。但当越来越多的城市加入的时候，这就变得越来越难以管理。城市有大有小，负载也不一样。后来，他们重构了 dispatch 模块，让调度的接口不依赖具体的专用客车领域而具备可扩展性，并通过微服务来做切分和管理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7425531914893617&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnicHf1ibdwjiaOmyLNhz9paQ55nZu8qQS3iccAHoUib9UAb5Rnp6O9sJdSXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;940&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2.15&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;4.7&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;全息视图分析&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;笔者有一个观点，就是要从全局视图来看问题，拘泥于细节上的问题会出现“一叶障目不见泰山”的情况。在软件的设计模式里有一个拦截器模式，在软件思想里有面向切面的设计，比如著名开源软件 Spring 的 AOP 思想。面向切面也是架构设计的一个分析思路， 比如可以分析稳定性及性能，包括对应系统特有的资金安全等。如图 2.16 所示，一个支付系统外部连接商户系统，中间做支付处理，后台与银行或其他支付机构进行通信。那么在幂等性、接口的结果状态和错误码约定方面都要做相应的处理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6753731343283582&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnQiaEtQfkTxMiaMYUR7I7iamTBhd1oVNOXfA9yliabhW68aBSybfxibcMcxg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1072&quot;/&gt;&lt;span&gt;图 2.16&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;仅以网关系统和银行机构的通信做一下说明，因为如果二者的约定出了问题，则后果不堪设想。比如银行返回未知或处理中，而如果支付系统当成支付失败来处理，则最终银行处理成功时可能会导致用户资产损失。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;5&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h2 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;架构是什么&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;最后，笔者抛出 3 个观点来谈谈架构是什么的问题。回顾一下前辈们对“架构是什么”的看法，架构有组成派和决策派两派观点，而我的 观点是: 架构兼具组成和决策的特点，架构之于架构是自包含关系。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;5.1&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;架构兼具组成和决策的特点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;Mary Shaw 在《软件体系结构:一门初露端倪学科的展望》一书中论及软件系统的架 构时，将系统描述为组件及组件之间的交互。而“Rational 统一过程”则重点表达了以下观 点。软件架构包含了关于以下问题的重要决策:&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;/&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;软件架构并不仅仅注重软件本身的结构和行为，还注重其他特性:使用、功能性、性能、弹性、重用、可理解性、经济和技术的限制与权衡，以及美学。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;5.2&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;架构是演进来的&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;架构是演进来的，是动态的。业界关于架构是预先设计出来的还是演进出来的颇有些争论(《恰如其分的软件架构》一书就提及了计划式设计、演进式设计等观点)，笔者的观点是比较明确的，不倒向任何一方，而是认为:&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;ul label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;软件架构需要做事先设计，而演进式架构号称是采用 TDD、重构、持续集成等手段 保障其演进的。但敏捷实践里面的 TDD 是从微观视角来看的，重构也可以以微观 视角进行。宏观视角需要对整体架构进行设计，让参与者具有共同的愿景，并做出共同的决策。比如，技术框架如何选型、怎样评估用户并发、用户是谁，以及如何提供服务等。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;不做 BDUF，暂缓做不确定的事，不做大投入的方案。任何一个选择都需要考虑投资回报率(ROI)。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;架构处于一个动态的过程中，是不断演进的。除了微观的重构及敏捷实践会演进， 领域模型和架构方案亦可持续演进。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;偿还技术债务、重构和不断抽象、分解问题域是演进的一些手段，保持架构演进要特别持续关注质量并保障其没有下降。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;图 2.17 是一个大公司架构生命周期的活动图。从架构规划到架构实施，其中有不断的架构沟通。而架构实施的反馈又将纳入下一代的架构规划中。下一代架构规划，一方面要纳入现阶段的问题，另一方面要基于行业领域知识、同行参考和商业洞察进行。2011 年，我们做过一个不太成功的示范，在产品层之下设计了一个基础层，做核心领域的沉淀，后来孵化出了 10 多个小产品，结果核心的两张表被过度抽象，但这对于不确定性很强的业务是不合适的。完全烟囱模型+插件(或工具黏合剂)的方式可能更合适。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7360912981455064&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnywN7wZGibF7jIZMTKl4lIf9vzPxGbeKYr4nNzUOtmWOdFfqVRiau1JWg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1402&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 &lt;/span&gt;&lt;span&gt;2.17&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;5.3&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h3 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h3&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;无纯粹的非功能特性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;这一节其实想表达的是功能特性与非功能特性的区分不够好。什么叫非功能特性?有 人也称之为质量特性。笔者觉得一切都是质量，所以在商业需求呈现过程中一定要区分下 面两条需求的意义其实不大。&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;ul label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;登录三次，锁定账号 20 分钟。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;系统需要支持 2000 个用户同时并发。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;另外一个区分功能特性与非功能特性的危害是容易把非功能特性当作增强性要素。增强性要素就是重要，但紧急程度不高，可以让用户先用起来的要素。&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;笔者的观点很明确，应该把所有需求放到一起排序，而基于安全性、高可用这些面向 切面的分类，只是为了更好地管理架构的各个组成部分而已。同时，在团队分工上也可以 术业有专攻。以图 2.18 为例，可以看到每个约束要求都对应具体可操作、可验证的功能， 比如数据安全性、通信安全性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.6936416184971098&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/3xsFRgx4kHpsjdyH1RxbuwJTpv0iaJuibnWn7nvswE62hawjSAFMODm6QaMvKVo0WbFib7UjBjiaib4P1oiayhqlDl9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1038&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图 2.18&lt;/span&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;strong&gt;&lt;em&gt;&lt;span&gt;6&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;/p&gt;&lt;h2 label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;   &lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;综上所述，软件架构工作看似简单，其实不然。系统化思考有助于理清软件架构流程及从客户价值出发，识别用户、设定 SLA 可以帮助软件架构设计人员和研发人员避免在技术纷繁复杂的跋涉中迷失而陷入“自嗨”。架构是演进出来的，架构包含了一系列的决策和若干组成，架构应该从全局视角看问题。有人说，读完本章还是不知道该如何做。那就再帮帮你:&lt;/span&gt;&lt;/p&gt;&lt;blockquote label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;ul label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;对于新项目，请利益相关者进行分析，了解大家的需求;对于老平台，检查利益相关者的需要，规划后续发展方向。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;请度量产品对于用户、商户的 SLA(接入效率、接入成本、用户体验、稳定性、应急处理能力等)，面向服务对象做规划和设计。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;适当的时候考虑链路级业务监控视图。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;在系统链路调用中加上 traceId 这样的标识。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;考虑平台沉淀能力时，要考虑业务形态的扩展，确定投入产出比再进行扩展。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;在不同阶段采用不同的架构，说不定在试水期的阶段烟囱型架构是最合适的，因为(业务上)短期的价值是突出产品核心功能，并不求全，先度过生存期是第一要务。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;非功能要素不是加分项，却可能是主体价值的体现，比如商户需要一个批量导入接口，你提供了单笔处理接口，这是严重的信息不对称导致的，批量导入接口看起来是为了提高处理性能，但是它其实也提高了业务处理的便利性，这也是功能特性的一部分。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p label=&quot;Converted by KNB Formatter from Jason Ng https://knb.im/mp&quot;&gt;&lt;span&gt;非功能要素依据重要程度也可能需要融入日常研发中，比如微软的同仁分享的 Office 的故事。Office 产品需要不断校验安装包大小，因为功能增加，变成巨无霸 可能会影响性能，所以就需要依据重要程度将这些非功能要素融入日常研发中。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.06323529411764706&quot; data-type=&quot;png&quot; data-w=&quot;680&quot; title=&quot;分割线 卡通&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/tibrg3AoIJTs4dwwaYiaIriaDLic2gKF276xC9sfdFvJ35bs4YHNE4iczpTrIYfic56G3uLHJvEyhgd34quOoTZqIzEw/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;想要加入中生代架构群的小伙伴，请添加群合伙人&lt;strong&gt;大白&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;的微信&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;申请备注（姓名+公司+技术方向）才能通过哦！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-copyright=&quot;0&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;512&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/3xsFRgx4kHr2icZia2kYhz47wrudC1SvrXR264ED2ibiaib9KAwjsTHAic1HfiaMLcfmzG811gcM73n3IIrVCYibcUaaCQ/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;pre data-style=&quot;padding-right: 0.5em; padding-left: 0.5em; max-width: 100%; background-color: rgb(255, 255, 255); color: rgb(62, 62, 62); letter-spacing: 0.544px; font-size: 15px; text-align: start; word-spacing: 2px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;   END     &lt;/strong&gt;&lt;strong/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong helvetica=&quot;helvetica&quot; neue=&quot;neue&quot; pingfang=&quot;pingfang&quot; sc=&quot;sc&quot; hiragino=&quot;hiragino&quot; sans=&quot;sans&quot; gb=&quot;gb&quot; microsoft=&quot;microsoft&quot; yahei=&quot;yahei&quot; ui=&quot;ui&quot; arial=&quot;arial&quot; sans-serif=&quot;sans-serif&quot; border-box=&quot;border-box&quot; important=&quot;important&quot; break-word=&quot;break-word&quot;&gt;#接力技术，链接价值#&lt;/strong&gt;&lt;strong helvetica=&quot;helvetica&quot; neue=&quot;neue&quot; pingfang=&quot;pingfang&quot; sc=&quot;sc&quot; hiragino=&quot;hiragino&quot; sans=&quot;sans&quot; gb=&quot;gb&quot; microsoft=&quot;microsoft&quot; yahei=&quot;yahei&quot; ui=&quot;ui&quot; arial=&quot;arial&quot; sans-serif=&quot;sans-serif&quot; border-box=&quot;border-box&quot; important=&quot;important&quot; break-word=&quot;break-word&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;pre data-style=&quot;padding-right: 0.5em; padding-left: 0.5em; max-width: 100%; color: rgb(62, 62, 62); letter-spacing: 0.544px; font-size: 15px; text-align: start; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;30&quot; data-width=&quot;100%&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7QRTvkK2qC6RyGcCclHibMw08rYZOOtkfNaX7nMdG9yQnOtpBIJTxTIJ5fibMmicEJickp5DaQrxq1YKQiaJVJkyrZA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;精彩推荐&lt;/span&gt;&lt;/section&gt;&lt;pre data-style=&quot;padding-right: 0.5em; padding-left: 0.5em; max-width: 100%; color: rgb(62, 62, 62); letter-spacing: 0.544px; font-size: 15px; text-align: start; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;30&quot; data-width=&quot;100%&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/7QRTvkK2qC6RyGcCclHibMw08rYZOOtkfNaX7nMdG9yQnOtpBIJTxTIJ5fibMmicEJickp5DaQrxq1YKQiaJVJkyrZA/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821766&amp;amp;idx=1&amp;amp;sn=4a819f1319f4185e1bfe53e7ce73a810&amp;amp;chksm=f0dcc0bac7ab49ac33200fb998eb49dd6124220adb0fdbdd42c6e175466d678418f8c8063def&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;1. &quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; data-style=&quot;color: rgb(0, 122, 170); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 15px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span&gt;1. &lt;/span&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821951&amp;amp;idx=1&amp;amp;sn=42cbcfb25b1916bb8be075c7a0dbfafd&amp;amp;chksm=f0dcc103c7ab48153a6df76e55628318b51e313633fe5d6fb8361833d9eedc3562e0e64f1cf0&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;从0到1设计一个秒杀系统&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNzM1NjQyNg==&amp;amp;mid=2649963428&amp;amp;idx=2&amp;amp;sn=ca3d1a6e1e3e12c2824601800d850d5d&amp;amp;chksm=8378f2c1b40f7bd754a5a08ddb6b2da1f37d579ff8be471d31c39dd36697642a2e29bc5a95ba&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;2.&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821949&amp;amp;idx=2&amp;amp;sn=3fd1b55f8a0dfde09f988de067b006ed&amp;amp;chksm=f0dcc101c7ab4817e2827a2c7dc01c578ac881580bf8101f5bc9823a0c164e66033438423bf4&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;苏宁金服技术大揭秘：支付决策机器人&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNzM1NjQyNg==&amp;amp;mid=2649963432&amp;amp;idx=1&amp;amp;sn=66cbdd0073d36ab4fa701c049b9b3a90&amp;amp;chksm=8378f2cdb40f7bdbd4dccb465fa6bbf260712f59841d454e1286ecc507a008056d0959c76fde&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;11&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; data-style=&quot;color: rgb(0, 122, 170); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 15px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;3. &lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821274&amp;amp;idx=1&amp;amp;sn=51e96907530215115cfe89a28dd47dbe&amp;amp;chksm=f0dcc2a6c7ab4bb012b5a41a83d9bc6678b0758b6fc9480329132b39f976741f519b0d0ea2f0&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;手哥架构宝典系列：支付系统1.0架构演进&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;4. &lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821343&amp;amp;idx=1&amp;amp;sn=e1c68345dfe1122ec680b3862894284e&amp;amp;chksm=f0dcc363c7ab4a75f5c35f1ace6f42b6c3bd3d1e583cec03555ebc8fe2f6b81a628f2a0c3faf&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;手哥架构宝典系列：支付系统2.0架构演进&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;pre data-style=&quot;padding-right: 0.5em; padding-left: 0.5em; max-width: 100%; color: rgb(62, 62, 62); letter-spacing: 0.544px; font-size: 15px; text-align: start; word-spacing: 2px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;漫画推荐&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;pre data-style=&quot;background-color: rgb(255, 255, 255); padding-right: 0.5em; padding-left: 0.5em; max-width: 100%; color: rgb(62, 62, 62); letter-spacing: 0.544px; font-size: 15px; text-align: start; word-spacing: 2px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;pre data-style=&quot;max-width: 100%; letter-spacing: 0.544px; color: rgb(62, 62, 62); font-size: 15px; text-align: start; word-spacing: 2px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821719&amp;amp;idx=1&amp;amp;sn=65ff2a79dc4ece2d12f88f07e1f34754&amp;amp;chksm=f0dcc0ebc7ab49fda84b2fe8e7316ffcbdad02883ee6199c1ae3a1c66824fcab5fa7888ae0d2&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;11&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; data-style=&quot;color: rgb(0, 122, 170); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 15px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;1. &lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821913&amp;amp;idx=1&amp;amp;sn=53903892a57b44ec7f2a1b5d7134f339&amp;amp;chksm=f0dcc125c7ab4833a0e669b172d83d7f929f26e44d3964d7a0b1cfccf2ea682c394850983fa5&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;漫画：程序员和产品经理撕得真是太太太太厉害了&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNzM1NjQyNg==&amp;amp;mid=2649963432&amp;amp;idx=1&amp;amp;sn=66cbdd0073d36ab4fa701c049b9b3a90&amp;amp;chksm=8378f2cdb40f7bdbd4dccb465fa6bbf260712f59841d454e1286ecc507a008056d0959c76fde&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;11&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; data-style=&quot;color: rgb(0, 122, 170); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 15px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span&gt;2. &lt;/span&gt;&lt;/a&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821726&amp;amp;idx=1&amp;amp;sn=c2f71970ea898c77badf22bf0e1e57fe&amp;amp;chksm=f0dcc0e2c7ab49f459ea24c3ee9cc6246884b974a023cdb1712b0258b907f096ce9c4d18a25a&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;漫画：程序员真的是太太太太太太太太难了！&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNzM1NjQyNg==&amp;amp;mid=2649963428&amp;amp;idx=2&amp;amp;sn=ca3d1a6e1e3e12c2824601800d850d5d&amp;amp;chksm=8378f2c1b40f7bd754a5a08ddb6b2da1f37d579ff8be471d31c39dd36697642a2e29bc5a95ba&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; data-style=&quot;color: rgb(0, 122, 170); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 15px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span&gt;3. &lt;/span&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNzM1NjQyNg==&amp;amp;mid=2649963479&amp;amp;idx=1&amp;amp;sn=053090fc0fae25a8349ecbb22c5f91a2&amp;amp;chksm=8378f2b2b40f7ba451c921a53796304093bccd61995cfdc2085d03634e3cb53eaa3d2a9096f1&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;漫画：普通程序员 vs 优秀程序员&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNzM1NjQyNg==&amp;amp;mid=2649963469&amp;amp;idx=2&amp;amp;sn=a7aea5f453cc9cfd925b1fcad7db5ab5&amp;amp;chksm=8378f2a8b40f7bbe772832c9cda2a43a807dd610dd02137d53eaccf24c26a58059ef85b0fdff&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;11&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; data-style=&quot;color: rgb(0, 122, 170); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 15px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span&gt;4. &lt;/span&gt;&lt;/a&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNzM1NjQyNg==&amp;amp;mid=2649963469&amp;amp;idx=2&amp;amp;sn=a7aea5f453cc9cfd925b1fcad7db5ab5&amp;amp;chksm=8378f2a8b40f7bbe772832c9cda2a43a807dd610dd02137d53eaccf24c26a58059ef85b0fdff&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;11&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;漫画：35岁的IT何去何从？&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821737&amp;amp;idx=2&amp;amp;sn=97bb5704b3f0704ebc45dd6c7ac0361d&amp;amp;chksm=f0dcc0d5c7ab49c31382644426f5306c386c8af89602eed10e917eb8c19177907cd9aeddd779&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;5. &quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; data-style=&quot;color: rgb(0, 122, 170); -webkit-tap-highlight-color: rgba(0, 0, 0, 0); cursor: pointer; max-width: 100%; font-size: 15px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot;&gt;&lt;span&gt;5. &lt;/span&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821737&amp;amp;idx=2&amp;amp;sn=97bb5704b3f0704ebc45dd6c7ac0361d&amp;amp;chksm=f0dcc0d5c7ab49c31382644426f5306c386c8af89602eed10e917eb8c19177907cd9aeddd779&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;漫画：从修灯泡来看各种 IT 岗位，你是哪一种？&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821769&amp;amp;idx=2&amp;amp;sn=1062730b5366b62e71bb1cbdb8be6a42&amp;amp;chksm=f0dcc0b5c7ab49a3bb9de42817e234bde159a3f3d1f0051eb1fb93fcde089504dd1976d7170f&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;6. 漫画：一批90后已经30岁了，更扎心的是…&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;7. 图解：&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821762&amp;amp;idx=1&amp;amp;sn=07e9c5f2096675eaf5e3d53d8f754ee3&amp;amp;chksm=f0dcc0bec7ab49a8fdb8b737ccb02b61f4a5a4995d67f3103eeda9dc1370f172e36b32ba5004&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;这才是程序员加班的真正原因！&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;8. &lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI3MzEzMDI1OQ==&amp;amp;mid=2651821782&amp;amp;idx=2&amp;amp;sn=3aabb5562398537543d6ae6e32992ea5&amp;amp;chksm=f0dcc0aac7ab49bcb1f3c225815ffa5b76296ccc5a1213f8643f614024e8eb123ec7160a07f0&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;漫画：中国互联网往事(2000-2020)&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.3215130023640662&quot; data-type=&quot;jpeg&quot; data-w=&quot;846&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/3xsFRgx4kHqRrz3icuH7dpIufmnj5MZmibUjY7sFaWicyI0XGqUGHjeQ5hcrMLONH0jMb2ZzhwEAdzLusoKrj3S5A/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>