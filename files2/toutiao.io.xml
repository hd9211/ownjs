<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>fb0e2d3ce2f01110c03481236beb359e</guid>
<title>一款专为开发者开发的一站式写作、管理、发布的更简单且下载即用的效率工具</title>
<link>https://toutiao.io/k/py6lwml</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;logged-out env-production page-responsive&quot; id=&quot;readabilityBody&quot;&gt;
    

    

  &lt;p id=&quot;start-of-content&quot; class=&quot;show-on-focus&quot;/&gt;






    


    

  &lt;include-fragment class=&quot;js-notification-shelf-include-fragment&quot; data-base-src=&quot;https://github.com/notifications/beta/shelf&quot;/&gt;





  &lt;div class=&quot;application-main &quot; data-commit-hovercards-enabled=&quot;&quot; data-discussion-hovercards-enabled=&quot;&quot; data-issue-and-pr-hovercards-enabled=&quot;&quot;&gt;
        &lt;div itemscope=&quot;&quot; itemtype=&quot;http://schema.org/SoftwareSourceCode&quot; class=&quot;&quot;&gt;
    &lt;main id=&quot;js-repo-pjax-container&quot; data-pjax-container=&quot;&quot;&gt;
      

      
    






  


  



&lt;div class=&quot;clearfix new-discussion-timeline container-xl px-3 px-md-4 px-lg-5&quot;&gt;
  &lt;div id=&quot;repo-content-pjax-container&quot; class=&quot;repository-content &quot;&gt;

    


    
      
    &lt;div&gt;
  &lt;p class=&quot;d-none d-lg-block mt-6 mr-3 Popover top-0 right-0 color-shadow-medium col-3&quot;&gt;
    
  &lt;/p&gt;

  &lt;div data-view-component=&quot;true&quot; class=&quot;gutter-condensed gutter-lg flex-column flex-md-row d-flex&quot;&gt;

  &lt;div data-view-component=&quot;true&quot; class=&quot;flex-shrink-0 col-12 col-md-9 mb-4 mb-md-0&quot;&gt;      
      &lt;div class=&quot;file-navigation mb-3 d-flex flex-items-start&quot;&gt;
  



  

  &lt;p class=&quot;flex-auto&quot;/&gt;

  &lt;include-fragment data-test-selector=&quot;overview-actions-fragment&quot; src=&quot;/oncework/kuaixieya/overview_actions/main&quot;/&gt;


    &lt;span class=&quot;d-none d-md-flex ml-2&quot;&gt;

      
&lt;get-repo class=&quot;&quot;&gt;
    
    &lt;details class=&quot;position-relative details-overlay details-reset&quot; data-action=&quot;toggle:get-repo#onDetailsToggle&quot;&gt;
      &lt;summary class=&quot;btn btn-primary&quot; data-hydro-click=&quot;{&amp;quot;event_type&amp;quot;:&amp;quot;repository.click&amp;quot;,&amp;quot;payload&amp;quot;:{&amp;quot;repository_id&amp;quot;:314759811,&amp;quot;target&amp;quot;:&amp;quot;CLONE_OR_DOWNLOAD_BUTTON&amp;quot;,&amp;quot;originating_url&amp;quot;:&amp;quot;https://github.com/oncework/kuaixieya?hmsr=toutiao.io&amp;amp;utm_campaign=toutiao.io&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&amp;quot;,&amp;quot;user_id&amp;quot;:null}}&quot; data-hydro-click-hmac=&quot;4e8e3dccea3ac9316c97f9daea81959abe61202894c82db3e235d87a6f8198c5&quot;&gt;
        Code
        &lt;span class=&quot;dropdown-caret&quot;/&gt;
&lt;/summary&gt;      &lt;div class=&quot;position-relative&quot;&gt;
        &lt;div class=&quot;dropdown-menu dropdown-menu-sw p-0&quot;&gt;
          


          
          
          &lt;div class=&quot;p-3&quot; data-targets=&quot;get-repo.platforms&quot; data-platform=&quot;xcode&quot; hidden=&quot;&quot;&gt;
            &lt;h4 class=&quot;lh-condensed mb-3&quot;&gt;Launching Xcode&lt;span class=&quot;AnimatedEllipsis&quot;/&gt;&lt;/h4&gt;
            &lt;p class=&quot;color-text-secondary&quot;&gt;If nothing happens, &lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;download Xcode&lt;/a&gt; and try again.&lt;/p&gt;
            &lt;button data-action=&quot;click:get-repo#onDetailsToggle&quot; type=&quot;button&quot; data-view-component=&quot;true&quot; class=&quot;btn-link&quot;&gt;
  
  
              Go back

  

&lt;/button&gt;          &lt;/div&gt;
          &lt;div class=&quot;p-3 &quot; data-targets=&quot;get-repo.platforms&quot; data-target=&quot;new-codespace.loadingVscode prefetch-pane.loadingVscode&quot; data-platform=&quot;vscode&quot; hidden=&quot;&quot;&gt;
  &lt;poll-include-fragment data-target=&quot;get-repo.vscodePoller new-codespace.vscodePoller prefetch-pane.vscodePoller&quot;&gt;
    &lt;h4 class=&quot;lh-condensed mb-3&quot;&gt;Launching Visual Studio Code&lt;span class=&quot;AnimatedEllipsis&quot; data-hide-on-error=&quot;&quot;/&gt;&lt;/h4&gt;
    &lt;p class=&quot;color-text-secondary&quot; data-hide-on-error=&quot;&quot;&gt;Your codespace will open once ready.&lt;/p&gt;
    &lt;p class=&quot;color-text-secondary&quot; data-show-on-error=&quot;&quot; hidden=&quot;&quot;&gt;There was a problem preparing your codespace, please try again.&lt;/p&gt;
  &lt;/poll-include-fragment&gt;
&lt;/div&gt;

        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/details&gt;

&lt;/get-repo&gt;

        
    &lt;/span&gt;
&lt;/div&gt;

      


&lt;div class=&quot;Box mb-3&quot;&gt;
  
  &lt;h2 id=&quot;files&quot; class=&quot;sr-only&quot;&gt;Files&lt;/h2&gt;
  


    &lt;a class=&quot;d-none js-permalink-shortcut&quot; data-hotkey=&quot;y&quot; href=&quot;/oncework/kuaixieya/tree/8e184c2389cc23ca465f7a58f2f66fc699ac4966&quot;&gt;Permalink&lt;/a&gt;

  &lt;div data-view-component=&quot;true&quot; class=&quot;include-fragment-error flash flash-error flash-full py-2&quot;&gt;
  &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;&lt;p&gt;
  
    Failed to load latest commit information.


  
&lt;/p&gt;&lt;/div&gt;  &lt;div class=&quot;js-details-container Details&quot;&gt;
    &lt;div role=&quot;grid&quot; aria-labelledby=&quot;files&quot; class=&quot;Details-content--hidden-not-important js-navigation-container js-active-navigation-container d-md-block&quot; data-pjax=&quot;&quot;&gt;
      &lt;div class=&quot;sr-only&quot; role=&quot;row&quot;&gt;
        &lt;p role=&quot;columnheader&quot;&gt;Type&lt;/p&gt;
        &lt;p role=&quot;columnheader&quot;&gt;Name&lt;/p&gt;
        &lt;p role=&quot;columnheader&quot; class=&quot;d-none d-md-block&quot;&gt;Latest commit message&lt;/p&gt;
        &lt;p role=&quot;columnheader&quot;&gt;Commit time&lt;/p&gt;
      &lt;/div&gt;

        
        
        
    &lt;/div&gt;
    &lt;p class=&quot;Details-content--shown Box-footer d-md-none p-0&quot;&gt;
      &lt;button aria-expanded=&quot;false&quot; type=&quot;button&quot; data-view-component=&quot;true&quot; class=&quot;js-details-target btn-link d-block width-full px-3 py-2&quot;&gt;
  
  
        View code

  

&lt;/button&gt;    &lt;/p&gt;
  &lt;/div&gt;




&lt;/div&gt;

    &lt;readme-toc&gt;

    &lt;div id=&quot;readme&quot; class=&quot;Box md js-code-block-container Box--responsive&quot;&gt;

      

        &lt;div data-target=&quot;readme-toc.content&quot; class=&quot;Box-body px-5 pb-5&quot;&gt;
          &lt;article class=&quot;markdown-body entry-content container-lg&quot; itemprop=&quot;text&quot;&gt;&lt;p&gt;「快写鸭」是一款专为开发者开发的一站式写作、管理、发布的更简单且下载即用的效率工具，去除繁琐配置但又极具丰富且自定义性质等功能。&lt;/p&gt;
&lt;h2&gt;&lt;a id=&quot;user-content--效率更高效&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#-效率更高效&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class=&quot;g-emoji&quot; alias=&quot;bulb&quot; fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png&quot;&gt;💡&lt;/g-emoji&gt; 效率更高效&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;程序员和技术人员常常会写「技术文章」和「博客」，用作「技术分享」、「产品分享」或「提供咨询」等等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;技术博主通常需要在多个媒体渠道发布文章，诸如「掘金」、「SegmentFault」、「CSDN」、「知乎」、「简书」、「微信公众号」等等，以求最大的关注度。但是，发布文章到这么多平台费时费神，需要不断地复制粘贴和修改排版；同时，作者想查看阅读数时还需要来回切换各个网站来进行「统计」(To be continue...)。这非常不方便。「快写鸭」主要就是为了来解决上述这些问题的。&lt;/li&gt;
&lt;li&gt;一方面，市面上已经存在「一文多发」平台了，例如 「OpenWrite」，为何还要搞这个软件呢？或许其他一文多发平台也是一个替代方案，但它们要求用户将自己的账户信息例如 「Cookie」 或「账号密码」上传到对方服务器，这很不安全，一旦平台发生问题，自己的账户信息会遭到泄漏。虽然我相信一般平台不会恶意操作用户的账户，但如果出现误操作，您的账户「隐私」将遭到「泄漏」，平台上的财产也可能遭到损坏，有这样的风险需要考虑。「快写鸭」不提供任何接口保存用户账号信息，所有账户信息全部保存在用户自己的本地数据库里，因此规避了这个安全风险。&lt;/li&gt;
&lt;li&gt;另一方面，相对还有其他的一文多发平台，都存在一个问题就是「安装繁琐」，或者「占用内存大」，无法立即使用发布功能，因此「快写鸭」就诞生了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id=&quot;user-content--发布原理&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#-发布原理&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class=&quot;g-emoji&quot; alias=&quot;boom&quot; fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4a5.png&quot;&gt;💥&lt;/g-emoji&gt; 发布原理&lt;/h2&gt;
&lt;p&gt;通过 「Electron」 和 「Puppeteer」的通信，编写「自动化脚本」来进行一键发布。&lt;/p&gt;
&lt;h2&gt;&lt;a id=&quot;user-content--详细文档&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#-详细文档&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class=&quot;g-emoji&quot; alias=&quot;books&quot; fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png&quot;&gt;📚&lt;/g-emoji&gt; 详细文档&lt;/h2&gt;
&lt;p&gt;更丰富的功能介绍，&lt;a href=&quot;https://www.yuque.com/daolong/kxy&quot; rel=&quot;nofollow&quot;&gt;点击查看文档&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id=&quot;user-content--功能预览&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#-功能预览&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class=&quot;g-emoji&quot; alias=&quot;duck&quot; fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f986.png&quot;&gt;🦆&lt;/g-emoji&gt; 功能预览&lt;/h2&gt;
&lt;p&gt;快写鸭正在快速地开发中，如果你有好的建议可以随时找我哦~&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://imgtu.com/i/h7enVH&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/8396f2704bf950f8816ac49ec3a6eace5b0f1c654bcab1c2f9d9aab93c25242d/68747470733a2f2f7a332e617831782e636f6d2f323032312f30392f30382f6837656e56482e706e67&quot; alt=&quot;管理渠道.png&quot; data-canonical-src=&quot;https://z3.ax1x.com/2021/09/08/h7enVH.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://imgtu.com/i/h7eVKO&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/8166122402b1c29e543e1ad6a33f5526c8a9efccb8e382249caccba37208664a/68747470733a2f2f7a332e617831782e636f6d2f323032312f30392f30382f683765564b4f2e706e67&quot; alt=&quot;管理文章.png&quot; data-canonical-src=&quot;https://z3.ax1x.com/2021/09/08/h7eVKO.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://imgtu.com/i/h7euad&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/3ca86f49f0cfeeea5f52ebb6f1e01736bdfb2b77958500aec5459dab7156ba12/68747470733a2f2f7a332e617831782e636f6d2f323032312f30392f30382f6837657561642e706e67&quot; alt=&quot;发布文章.png&quot; data-canonical-src=&quot;https://z3.ax1x.com/2021/09/08/h7euad.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://imgtu.com/i/h7eZrD&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/8d86810d6eaa4324a5f5d2895e16ca9159c81b9fad71f272df13bf9a36789462/68747470733a2f2f7a332e617831782e636f6d2f323032312f30392f30382f6837655a72442e706e67&quot; alt=&quot;自定义渠道.png&quot; data-canonical-src=&quot;https://z3.ax1x.com/2021/09/08/h7eZrD.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id=&quot;user-content--如何下载&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#-如何下载&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class=&quot;g-emoji&quot; alias=&quot;dog&quot; fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f436.png&quot;&gt;🐶&lt;/g-emoji&gt; 如何下载&lt;/h2&gt;
&lt;p&gt;Github地址：&lt;a href=&quot;https://github.com/oncework/kuaixieya&quot;&gt;https://github.com/oncework/kuaixieya&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;https://github.com/oncework/kuaixieya/releases&quot;&gt;https://github.com/oncework/kuaixieya/releases&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id=&quot;user-content--联系方式&quot; class=&quot;anchor&quot; aria-hidden=&quot;true&quot; href=&quot;#-联系方式&quot;&gt;&lt;svg class=&quot;octicon octicon-link&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; aria-hidden=&quot;true&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&quot;/&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class=&quot;g-emoji&quot; alias=&quot;envelope_with_arrow&quot; fallback-src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4e9.png&quot;&gt;📩&lt;/g-emoji&gt; 联系方式&lt;/h2&gt;
&lt;p&gt;Email: &lt;a href=&quot;mailto:xudaolong@gmail.com&quot;&gt;xudaolong@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WeChat:&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/db926d693533772bcda65d5ada3855d689f52d18938036cd39f7ae7c3e0dee80/68747470733a2f2f7a332e617831782e636f6d2f323032312f30392f30382f68485a5946412e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/db926d693533772bcda65d5ada3855d689f52d18938036cd39f7ae7c3e0dee80/68747470733a2f2f7a332e617831782e636f6d2f323032312f30392f30382f68485a5946412e706e67&quot; alt=&quot;&quot; data-canonical-src=&quot;https://z3.ax1x.com/2021/09/08/hHZYFA.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; href=&quot;https://camo.githubusercontent.com/4551603453c178881a081d3fb7ed30df2d508c6c9fb7bb1d8c312bec85763972/68747470733a2f2f7777772e6b75616978696579612e636f6d2f696d672f77656978696e2d70726f66696c652e706e67&quot;&gt;&lt;img src=&quot;https://camo.githubusercontent.com/4551603453c178881a081d3fb7ed30df2d508c6c9fb7bb1d8c312bec85763972/68747470733a2f2f7777772e6b75616978696579612e636f6d2f696d672f77656978696e2d70726f66696c652e706e67&quot; alt=&quot;&quot; data-canonical-src=&quot;https://www.kuaixieya.com/img/weixin-profile.png&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;
        &lt;/div&gt;
    &lt;/div&gt;

  &lt;/readme-toc&gt;


&lt;/div&gt;

    &lt;div data-view-component=&quot;true&quot; class=&quot;flex-shrink-0 col-12 col-md-3&quot;&gt;      

      &lt;div class=&quot;BorderGrid BorderGrid--spacious&quot; data-pjax=&quot;&quot;&gt;
        &lt;div class=&quot;BorderGrid-row hide-sm hide-md&quot;&gt;
          &lt;div class=&quot;BorderGrid-cell&quot;&gt;
              &lt;h2 class=&quot;mb-3 h4&quot;&gt;About&lt;/h2&gt;

    &lt;p class=&quot;f4 mt-3&quot;&gt;
      「快写鸭」是一款专为开发者开发的一站式写作、管理、发布的更简单且下载即用的效率工具，去除繁琐配置但又极具丰富且自定义性质等功能。
    &lt;/p&gt;
    

  &lt;h3 class=&quot;sr-only&quot;&gt;Topics&lt;/h3&gt;
  

  &lt;h3 class=&quot;sr-only&quot;&gt;Resources&lt;/h3&gt;
  

  &lt;h3 class=&quot;sr-only&quot;&gt;License&lt;/h3&gt;
  

  &lt;include-fragment aria-label=&quot;Loading...&quot; src=&quot;/oncework/kuaixieya/hovercards/citation/sidebar_partial?commit=8e184c2389cc23ca465f7a58f2f66fc699ac4966&quot;&gt;
  &lt;/include-fragment&gt;

          &lt;/div&gt;
        &lt;/div&gt;
          
          
          
      &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;



  &lt;/div&gt;
&lt;/div&gt;

    &lt;/main&gt;
  &lt;/div&gt;

  &lt;/div&gt;

          




  &lt;div id=&quot;ajax-error-message&quot; class=&quot;ajax-error-message flash flash-error&quot; hidden=&quot;&quot;&gt;
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;
    &lt;button type=&quot;button&quot; class=&quot;flash-close js-ajax-error-dismiss&quot; aria-label=&quot;Dismiss error&quot;&gt;
      &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-x&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z&quot;/&gt;
&lt;/svg&gt;
    &lt;/button&gt;&lt;p&gt;
    You can’t perform that action at this time.
  &lt;/p&gt;&lt;/div&gt;

  &lt;div class=&quot;js-stale-session-flash flash flash-warn flash-banner&quot; hidden=&quot;&quot;&gt;
    &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-alert&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z&quot;/&gt;
&lt;/svg&gt;
    &lt;span class=&quot;js-stale-session-flash-signed-in&quot; hidden=&quot;&quot;&gt;You signed in with another tab or window. &lt;a href=&quot;&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;
    &lt;span class=&quot;js-stale-session-flash-signed-out&quot; hidden=&quot;&quot;&gt;You signed out in another tab or window. &lt;a href=&quot;&quot;&gt;Reload&lt;/a&gt; to refresh your session.&lt;/span&gt;
  &lt;/div&gt;
    &lt;template id=&quot;site-details-dialog&quot;&gt;
  &lt;details class=&quot;details-reset details-overlay details-overlay-dark lh-default color-text-primary hx_rsm&quot; open=&quot;&quot;&gt;
    &lt;summary role=&quot;button&quot; aria-label=&quot;Close dialog&quot;/&gt;
    &lt;details-dialog class=&quot;Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal&quot;&gt;
      &lt;button class=&quot;Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0&quot; type=&quot;button&quot; aria-label=&quot;Close dialog&quot; data-close-dialog=&quot;&quot;&gt;
        &lt;svg aria-hidden=&quot;true&quot; viewbox=&quot;0 0 16 16&quot; version=&quot;1.1&quot; data-view-component=&quot;true&quot; class=&quot;octicon octicon-x&quot;&gt;
    &lt;path fill-rule=&quot;evenodd&quot; d=&quot;M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z&quot;/&gt;
&lt;/svg&gt;
      &lt;/button&gt;
      &lt;p class=&quot;octocat-spinner my-6 js-details-dialog-spinner&quot;/&gt;
    &lt;/details-dialog&gt;
  &lt;/details&gt;
&lt;/template&gt;

    

    &lt;template id=&quot;snippet-clipboard-copy-button&quot;&gt;
  
&lt;/template&gt;




  &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>783dc387bca9ef82b4df2a34712a54bf</guid>
<title>征服傅里叶变换</title>
<link>https://toutiao.io/k/yr8f2qp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-style=&quot;box-sizing: border-box; padding: 0px; margin: 0px; line-height: 1.75em;font-size: 14px; color: rgb(12, 12, 12);&quot; deep=&quot;6&quot;&gt;&lt;p&gt;&lt;span&gt;能有效和能非常简单地领会的原因是我们使用了一种不太传统的逼近。重要的是你将学习傅立叶变换的要素而完全不用超过加法和乘法的数学计算! 我将设法在不超过以下六节里解释在对音像信号处理中傅立叶变换的实际应用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;strong&gt;步骤 1: 一些简单的前提&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;在下面，您需要理解以下四件最基本的事情: 加法，乘、除法。什么是正弦，余弦和正弦信号。明显地，我将跳第一二件事和将解释位最后一个。您大概还记得您在学校学过的“ 三角函数”[1] ，它神秘地用于 与角度一起从它们的内角计算它们的边长，反之亦然。我们这里不需要所有这些事，我们只需要知道二个 最重要的三角函数，&quot;正弦&quot; 和&quot;余弦&quot; 的外表特征。这相当简单: 他们看起来象是以峰顶和谷组成的从观察点向左右无限伸展的非常简单的波浪。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.6291208791208791&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/QfOX6PoObkAzGGs3ppTWKL7aWLqFjpARicFTNiafveSGUTbdJ4xiaH2iaxK88yMJ3bfB7MIiaPl7TDGqico4Yl6YL6WA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;364&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;span&gt;（附图一）&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;如同你所知道的，这两种波形是周期性的，这意味着在一定的时间、周期之后，它们看起来再次一样。两种波形看起来也很象，但当正弦波在零点开始时余弦波开始出现在最大值。在实践中，我们如何判定我们在一个给定时间所观测到的波形是开始在它的最大值或在零? 问的好: 我们不能。实践上没有办法区分正弦波和余弦波，因此看起来象正弦或余弦波的我们统称为正弦波，在希腊语中译作&quot;正弦类&quot;。正弦波的一个重要性质是&quot;频率&quot;。它告诉我们在一个给定的时间内有多少个波峰和波谷。高频意味许多波峰和波谷， 低频率意味少量波峰和波谷:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.5782122905027933&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/QfOX6PoObkAzGGs3ppTWKL7aWLqFjpARMx3sSsHkVjD7MicA2W5LVFgkg9FZd4v6OZVvdfVXQyWT6eXQwgFBxCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;358&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;span&gt;（附图二）&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;步骤 2: 了解傅立叶定理&lt;/span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Jean-Baptiste Joseph Fourier 是孩子们中让父母感到骄傲和惭愧的的一个，因为他十四岁时就开始对他们说非常复杂的数学用语。他的一生中做了很多重要工作，但最重大的发现可能是解决了材料热传导问题。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;他推导出了描述热在某一媒介中如何传导的公式，即用三角函数的无穷级数来解决这个问题（就是我们在上面讨论过的正弦、余弦函数）。主要和我们话题有关的是：傅里叶的发现总结成一般规律就是任意复杂的信号都能由一个个混合在一起的正弦函数的和来表示。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;这是一个例子：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;1.3402061855670102&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/QfOX6PoObkAzGGs3ppTWKL7aWLqFjpAR9YPoEewek2gIlXa4Q5vO1EClB1eHtTAttQnorfCKmeicibBjqMdqnnsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;291&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;span&gt;（附图三）&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在这里你看到的是一个原始的信号，以及如何按某一确定的关系（“ 配方” ）混合在一起的正弦函数混合物（我们称它们为分量）所逼近。我们将简略地谈论一下那份配方。如你所知，我们用的正弦函数愈多 其结果就愈精确地接近我们的原始信号波形。在“ 现实” 世界中，在信号连续的地方，即你能以无穷小的间 隔来测量它们，精度仅受你的测试设备限制，你需要无限多的正弦函数才能完美地建立任意一个给定的信 号。幸运地是，和数字信号处理者们一样，我们不是生活在那样的世界。相反，我们将处理仅以有限精度 每隔一定间隔被测量的现实世界的采样信号。因而，我们不需要无限多地正弦函数，我们只需要非常多。稍后我们也将讨论这个“ 非常多” 是多少。目前重要的一点是你能够想象，任意一个在你计算机上的信号， 都能用简单正弦波按配方组成。&lt;/span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;strong&gt;步骤 3: “ 非常多” 是多少&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;正如我们所知道的，复杂形状的波形能由混合在一起的正弦波所建立。我们也许要问需要多少正弦波来 构造任意一个在计算机上给定的信号。当然，倘若我们知道正在处理的信号是如何组成的，这可能至少是 一个单个正弦波。在许多情况下，我们处理的现实世界的信号可能有非常复杂的结构，以至于我们不能深 入知道实际上有多少“ 分量” 波存在。在这种情况下，即使我们无法知道原始的信号是由多少个正弦波来构 成的，肯定存在一个我们将需要多少正弦波的上限。尽管如此，这实际上没解决有多少的问题。让我们试 着来直观地逼近它: 假设一个信号我们有 1000 个样采，可能存在的最短周期正弦波（即多数波峰波谷在其 中）以交替的波峰波谷分布在每个采样内。因此，最高频率的正弦波将有 500 个波峰和 500 个波谷在我 们的 1000 个采样中，且每隔一个采样是波峰。下图中的黑点表示我们的采样，所以，最高频率的正弦波 以看起来象这样:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.46710526315789475&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/QfOX6PoObkAzGGs3ppTWKL7aWLqFjpAR7lmPDa9rw5rbF2SKjwCjqlDjc1rUvwVnWhYTKz2rUvgiaWZUA6ddfvQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;152&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;span&gt;The highest frequency sine wave（附图四）&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;现在让我们来看一下最低频率正弦波可能多么低。如果我们只给一个单独的采样点，我们将如何能测量穿过这点的正弦波的峰顶和谷? 我们做不到，因为有许多不同周期正弦波穿过这点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.3415841584158416&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/QfOX6PoObkAzGGs3ppTWKL7aWLqFjpAR3YweXvSVKla2MibJsSqgU8bwibaWIImqSoN47VVmL52D6NrQFe3V7aiaQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;202&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;span&gt;（附图五）&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;所以，一个单独数据点不足以告诉我们关于频率的任何事。现在，如果我们有两个采样，那么穿过这 两点的正弦波的最低频率是什么？在这种情况下它很常简单。只有一个穿过这两点的非常低频率的正弦 波。它看起来向这样：&lt;/span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.3817204301075269&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/QfOX6PoObkAzGGs3ppTWKL7aWLqFjpARSFDFj5mDfCZYuQ9QVuDOryibJjNg37bJricbP6HDOaiaZ98oGVnwyEfIw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;186&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;span&gt;The lowest frequency sine wave（附图六）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;想象最左面的两个点是二个钉子和一个跨越它们之间的弦（图六描述三个数据点是因为正弦波的周期性，但我们实际上只需要最左面的两点说明它的频率）。我们能领会的最低的频率是来回地摆动在二个钉 子之间的弦，象是图六中左边两点之间的正弦波所做的。如果我们有 1000 个采样，那么两个“ 钉子” 相当 于第一个或最后的采样，比如 1 号采样和 1000 号采样。从对乐器的体验我们知道，当长度增加时弦的频 率将下降。所以我们可以想象，当我们将两个钉子向彼此远离的方向移开时，最小正弦波的频率将变得更 低。例如，如果我们选择 2000 个采样，因为我们的“ 钉子” ，在 1 号或 2000 号采样间，所以最低正弦波将 更低。事实上，它将低两倍，因为因为我们的钉子比 1000 个采样时远两倍。这样，如果我们有更多的采 样，我们将能辨别出一个更低频率的正弦波，因为它们的零交叉点（我们的“ 钉子” ）将移动得更远。这对 了解下面的解释是非常重要的。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;象我们看到的那样，在两个“ 钉子” 之后，我们的波形开始重复上升斜坡（第一个钉子和第三个钉子同样）。这意味着任意两个相邻的钉子准确地包含完整正弦波的一半，换句话说一个峰或一个谷或半个周期。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;概括一下我们刚学过的东西，我们知道，一个采样正弦波的上限频率是所有其它有一个波峰和波谷的 采样，并且，低频下限是我们看到的正好匹配采样数的正弦波的周期的一半。但等一下，这难到不意味着， 当上限频率保持固定时，当有很多采样时最低频率可以降低？确实如此! 结果我们将从一个低频开始增加 更多正弦波来组成一个较长的未知内容的信号。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;一切都清楚了，但我们仍然不知道我们最终需要多少正弦波。就象我们现在知道任意正弦波分量所能 具的有上下限频率一样，我们能计算出适合这两个极限之间的量是多少。既然我们沿着最左到最右的采样 固定了最低正弦波分量，我们要所有其它正弦波最好也使用这些钉子(为什么我们要不同地对待他们? 所有的正弦波被同等的创建！)。假设正弦波束是系在吉他上二个固定点的弦。它们能只摇摆在二个钉子之间(除非他们断了)，就象我们下图的正弦波。这导致如下关系，我们的最低分量（1）以 1/2 周期装配，第二分量（2）以 1 个周期装配，第三分量以 1 1/2 周期装配以此类推直到我们看到的 1000 个采样。形象地, 看起来象这:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.8280632411067194&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/QfOX6PoObkAzGGs3ppTWKL7aWLqFjpARibc137TKf96KicQc5VibHcgIPolc9vPLI05Fx0dkHib5Wo6P2gePDQRVkw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;506&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;span&gt;（附图七）&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在，如果我们算一下要多少正弦波以那种方法装配我们的 1000 个采样，就会发现我们精确地需要1000 个正弦波叠加起来表示 1000 个采样。实际上，我们总是发现我们需要和采样一样多的正弦波。&lt;/span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;strong&gt;步骤 4 关于烹饪食谱&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;在前面的段落我们看到, 任一个给定的在计算机上的信号能被正弦波混合物来构造。我们考虑了他们的频率，并且考虑了需要多大的最低和最高频率的正弦波来完美地重建任一个我们所分析信号。我们明白 了为确定所需最低的正弦波分量，我们考察的采样的数量是重要，但我们还未论述实际正弦波如何必需被 混合产生某一确定的结果。由叠加正弦波组成任何指定的信号，我们需要测量他们的另外一个方面。实际 上，频率不是我们需要知道的唯一的事。我们还需要知道正弦波的幅度，也就是说每个正弦波幅度有多高 才能混合在一起产生我们需要的输入信号。高度是正弦波的峰顶的高度，意即峰顶和零线之间距离。幅度 赿高，我们听到的声音也就赿大。所以，如果您有一个含有许多低音的信号，无疑可以预期混合体中的低 频率正弦波的分量比例比高频正弦波分量更大。因此一般情况下，低音中的低频正弦波有一个比高频正弦 波更高的幅度。在我们的分析中，我们将需要确定各个分量正弦波的幅度以完成我们的配方。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;步骤 5：关于苹果和桔子&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;如果你一直跟着我，我们几乎完成了通向傅里叶变换的旅程。我们学了需要多少正弦波，它的数量依 赖于我们查看的采样的数量有一个频率上下限界，并且不知道怎么确定单个分量的幅度以完成我们的配 方。我们一直不清楚究竟如何从我们的采样来确定实际的配方。直观上我们可以断定能找到正弦波的幅度， 设法把一个已知频率正弦波和采样作对比，我们测量找出它们有多么接近。如果它们精确地相等，我们知 道该正弦波存在着相同的幅度，如果我们发现我们的信号与参考正弦波一点也不匹配，我们将认为这个不 存在。尽管如此，我们如何高效地把一个已知的正弦波同采样信号进行比较？幸运地是，数字信号处理工 作者早已解决了如何作这些。事实上，这象加法和乘法一样容易－我们取一个已知频率的单位正弦波（这意味着它的振幅是 1，可从我们的计算器或计算机中精确地获得）和我们的信号采样相乘。累加乘积之后， 我们将得到我们正在观测的这个频率上正弦波分量的幅度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这是个举例，一个简单的完成这些工作的 C 代码片段：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;span&gt;Listing 1.1: The direct realization of the Discrete Sine Transform (DST):&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;#&lt;span class=&quot;code-snippet__meta-keyword&quot;&gt;define&lt;/span&gt; M_PI 3.14159265358979323846&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;long&lt;/span&gt; bin,k;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; arg;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (bin = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;; bin &amp;lt; transformLength; bin++) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;transformData[bin] = &lt;span class=&quot;code-snippet__number&quot;&gt;0.&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (k = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;; k &amp;lt; transformLength; k++) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;arg = (&lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt;)bin * M_PI *(&lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt;)k / (&lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt;)transformLength;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;transformData[bin] += inputData[k] * &lt;span class=&quot;code-snippet__built_in&quot;&gt;sin&lt;/span&gt;(arg);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这段代码变换存储在 inputData[0...transformLength-1]中我们测量的采样点成为一个正弦波分量的幅度队列 transformData[0...transformLength-1]。根据通用术语，我们称参考正弦波的频率步长为盒（bin），&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;这意味着它们被认为象是一个我们放置我们估计的任意分量波的幅度的容器。离散正弦变换(DST)是一个普通程序，它假设我们无法想象我们的信号看起来象什么样，否则我们能使用一个更加高效率的方法来确 定正弦波分量的幅度（例如，我们予先知道, 我们的信号是一个已知频率的正弦波。我们能直接地找出它 的高度而不用计算正弦波的整个范围。实现这个有效的逼近是基于傅里叶原理，它能在文献的戈策尔(Goe rtzel)算法条目下找到）。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;这些就是你坚持想要的我们为什么用这样的方法计算正弦变换的一个解释：对我们用一个已知频率正弦 波的乘积来作一种非常直观逼近的理由，可以设想，这大致相当于一个固有频率的“ 共振” 在系统内发生时 物理世界发生的事情。sin(arg)项本质上是一个获得由输入信号波形激励的谐振器。如果输入（信号）有在 我们正观测的频率上的分量，它的输出将是参考正弦波谐振的幅度。因为我们的参考波是单位幅度的，输出是一个在那个频率上的分量的实际幅度的一个直接测量。因为谐振器只是简单的滤波器，变换（不可否 认是在稍微宽松条件下）被认为有极窄的带通滤波器组的特征，它位于我们估值的频率中心的周围。这有 助于解释一个事实，为什么傅立叶变换提供了对信号进行过滤的一个高效工具。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;只是为了完备性: 当然，上述程序是可逆的，当我们知道它的正弦波分量时，我们的信号(在数字精确度 极限内)能完全被重建，通过简单地把正弦波加起来。这留下给读者做为一个练习。同样程序能改变使用余 弦波做为基本函数工作-我们只需简单地改变 sin(arg)条件到 cos(arg)来获得离散余弦变换的直接实现(DC T)。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;现在，就象在这篇文章较前面的段落中我们讨论过的那样，我们在实践中没有办法区分一个被测量的正 弦类函数象是正弦波还是余弦波。做为代替我们总是测量正弦信号，且正弦和余弦变换在实践中没有太大 的用途，除了一些特殊情况（象图象压缩的地方，即毎块图象具有能用一个基本的余弦或正弦函数较好模 拟特性，例如能用余弦基本函数较好表现的相同颜色的大区域）。正弦信号是一个比正弦或余弦波更一般 的片断，因为它可以开始在在它的周期中的一个任意位置。我们记得，当余弦波开始于 1 时，正弦波总开 始在 0。当我们采取正弦波作为参考，余弦波开始在它的周期的最后 1/4 之处。一般用度或弧度测量它们 的偏移量，这是两个一般与三角函数相关的单位。一个完整的周期等于 360°（代表 &quot;度&quot;) 或 2π 个弧度(代表&quot;2π&quot; ，&quot;π&quot; 发音象“pie” 。π 是希腊字表示数 3.14159265358979323846... 在三角学方面有重要意义) 。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;余弦波因而有一个 90°或 π/2 的偏移。这偏移叫正弦信号的相位，因此余弦波相对正弦信号有 90°或 π/2 相位。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;相位的事情就有这些内容。因为我们一直不能限定信号在 0°或 90°相位开始（因为我们正观测一个我们 可能无法控制的信号），它对同时直接唯一的描述信号的频率、振幅、相位至关重要。以正弦或余弦做变换相位限制在 0°或 90°，一个具有任意相位的正弦信号将引起相邻频率出现假峰（因为它们试图“ 帮助” 分析，强制给被测信号加上一个 0°或 90°的相位作用）。它有些象用一圆石头去填满一个方孔：你需要小一 些的圆石头去填充剩余的空间，并且更小的石头填好依然留出空的空间，等等。我们所需要的是能处理一 般信号的变换，它能处理任意相位正弦波构成的信号。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;strong&gt;步骤 6：离散傅叶变换&lt;/strong&gt;&lt;/span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;从正弦变换到傅里叶变换的步骤是简单的，只需用更一般的方法。在正弦变换中对每个频率上的测度 使用正弦波，在傅里叶变换中正弦、余弦波二者都使用。就是说，对任意的当前频率，我们以同一频率的 正弦和余弦波来“ 比较” （或“ 共振” ）被测信号。如果我们的信号看起来很象正弦波，变换的正弦部份将有 一个大的幅值。如果它看起来象余弦波，变换的余弦部份将有一个大的幅值。如果看起来象反相的正弦波， 也就是说，它开始于 0 但下降至－1 取代上升至 1，它的正弦部份将有一个大的负幅值。这表明用＋、－ 符号和正弦、余弦相位能表示任意给定频率的正弦信号[2]。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;Listing 1.2: The direct realization of the Discrete Fourier Transform[3]:&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;#&lt;span class=&quot;code-snippet__meta-keyword&quot;&gt;define&lt;/span&gt; M_PI 3.14159265358979323846&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;long&lt;/span&gt; bin, k;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;double&lt;/span&gt; arg, sign = &lt;span class=&quot;code-snippet__number&quot;&gt;-1.&lt;/span&gt;; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (bin = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;; bin &amp;lt;= transformLength/&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;; bin++) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;cosPart[bin] = (sinPart[bin] = &lt;span class=&quot;code-snippet__number&quot;&gt;0.&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (k = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;; k &amp;lt; transformLength; k++) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;arg = &lt;span class=&quot;code-snippet__number&quot;&gt;2.&lt;/span&gt;*(&lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt;)bin*M_PI*(&lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt;)k/(&lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt;)transformLength;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;sinPart[bin] += inputData[k] * sign * &lt;span class=&quot;code-snippet__built_in&quot;&gt;sin&lt;/span&gt;(arg);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;cosPart[bin] += inputData[k] * &lt;span class=&quot;code-snippet__built_in&quot;&gt;cos&lt;/span&gt;(arg);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;我们仍遗留着一个问题，就是如何获得傅里叶变换所缺乏的那些有用的东西。我说过傳里叶变换的优赿性超过正弦和余弦变换是因为用正弦信号工作。但至今我们还未看到任何正弦信号，仍只有正弦和余弦。好，这需要一点附加处理步聚：&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;#&lt;span class=&quot;code-snippet__meta-keyword&quot;&gt;define&lt;/span&gt; M_PI 3.14159265358979323846&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;long&lt;/span&gt; bin;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (bin = &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;; bin &amp;lt;= transformLength/&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;; bin++) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;frequency[bin] = (&lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt;)bin * sampleRate / (&lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt;)transformLength;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;magnitude[bin] = &lt;span class=&quot;code-snippet__number&quot;&gt;20.&lt;/span&gt; * &lt;span class=&quot;code-snippet__built_in&quot;&gt;log10&lt;/span&gt;( &lt;span class=&quot;code-snippet__number&quot;&gt;2.&lt;/span&gt; * &lt;span class=&quot;code-snippet__built_in&quot;&gt;sqrt&lt;/span&gt;(sinPart[bin]*sinPart[bin] + cosPart[bin]*c&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;osPart[bin]) / (&lt;span class=&quot;code-snippet__keyword&quot;&gt;float&lt;/span&gt;)transformLength);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;phase[bin] = &lt;span class=&quot;code-snippet__number&quot;&gt;180.&lt;/span&gt;*&lt;span class=&quot;code-snippet__built_in&quot;&gt;atan2&lt;/span&gt;(sinPart[bin], cosPart[bin]) / M_PI - &lt;span class=&quot;code-snippet__number&quot;&gt;90.&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;在运行清单 1.3 所示的关于 DFT 输出的代码段之后，我们结束被看作以正弦信号波的和的输入信号表示。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;K 序正弦信号是用 frequency[k],magnitude[k]和 phase[k]来描述的。单位是 Hz(Hertz,周/秒)，dB(Decibel),和°(Degree)。请注意在经过清单 1.3 的后加工（处理）即把正弦和余弦函数部份转换成一个单一的正弦信 号之后，我们命名 K 序正弦信号的振幅－DFT 存贮为幅度，且它总是取相对值。我们可以说一个-1.0 的振 幅对应于 1.0 的幅度，对应于相位+或-180°。在文献中，做做傅里叶变换的场合，队列 magnitude[] 被称 作被测信号的幅度谱，队列 phase[]被称作被测信号的相位谱。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;如用分贝测量存贮幅度的参考，输入波也期望有一个在[-1.0,1.0]之间的采样值，相对于 0dB 幅度满刻 度数字。做为一个 DFT 的有趣应用，比如清单 1.3 就可被用于写一个基于离散傅里叶变换的谱分析。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;strong&gt;结论&lt;/strong&gt;&lt;/span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;象我们已知那样，傅里叶变换和其系列的离散正弦和余弦变换，提供了把一个信号分解成一束分波的 便利工具。结果有正弦或余弦之一，或正弦信号（用正弦和余弦波的组合来描述）。在傅里叶变换中同时 使用正弦和余弦波的好处是我们因而能引入相位的概念，它使变换更一般化，因而我们能用它有效清楚地 分析既不是纯正弦也不是纯余弦的正弦信号，当然其它信号也一样。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;傅里叶变换与被考察信号无关，因而无论我们正分析的信号是一个正弦信号或是一些其它的更复杂的， 变换需要相同的操作数。这就是为什么傅里叶变换被称做无参数变换的原因，这意味着它对需要的信号“ 智能的” 分析没有直接的帮助（在考察一个我们已知是一个信号是正弦曲线的情况下，我们更喜欢精确地获 得关于相位，频率，幅度的信息以代替一串在一些预定频率上的正弦和余弦波）。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;现在我们也知道了我们是在求输入信号在一组固定频率栅格上的值，输入信号实际存在的频率组在这 组栅格上可能不起作用。我们在分析中利用的栅格是人为的，因为我们几乎按照关于它们的频率的尝试来 选择参考正弦、余弦波。说到了这些，马上清楚了一个将要很容易遇到的要点，即被测信号的频率位于变 换栅格的频率之间。因此，有一个频率发生在位于两个频率栅格之间的正弦曲线，在变换中将不好被描述。包围着与输入信号频率最接近的栅格的相邻的栅格将试图‘改正’ 频率的背离。因而，输入信号的能量将拖 尾至数个相邻的栅格。这也是傅里叶变换不能迅速地分析声音返回它的基波和谐波（并且，这也是为什么 我们称正弦和余弦波为分波而不谐波和泛音）。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;简单的说，没有进一步的快速处理，DFT 和一个狭窄的坝一样，细小并行的带通滤波器组（“ 通道” ）和每个通道带有附加的相位信息。这对分析信号、做滤波器和运用其它的技巧是有益的（改变一个信号的 音调而不改变它的速度是它们其中之一，说明在 DSPdimension.com 上另一篇不同的文章中），但它需 要对少量普通任务附加快速处理。同样，它能被认为是使用除了正弦和余弦波基本函数的变换系列的一个 特例。在这个方向上展开概念超出了这篇文章的范围。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;最后，重要的是要提及一个更高效的 DFT 工具，也就是一个被称做快速傅里叶变换的算法。它最初是由库利和图克在 1969 年构思的（它的根源仍然要追溯到高斯和其它人的工作）。FFT 只是一个高效的 算法，它比上面给出的以直接逼近计算 DFT 所化的时间少，它是结果完全相同的其它方法。无论如何，F FT 是以库利/图克算法实施的，它需要变换长度是 2 的幂。在实践中，对大多数应用来说这是一个可以接 受的限制。有大量的以不同方法实施 FFT 的可利用的文献，因而，可以说有足够多不同的 FFT 实现，其中一些并不需要经典 FFT 的 2 的幂的限制。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面清单 1.4 以程序 smbFft()给出了一个 FFT 的实现。&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Listing 1.4: The Discrete Fast Fourier Transform (FFT):&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;makefile&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;void smbFft(float *fftBuffer, long fftFrameSize, long sign)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;/*&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;FFT routine, (C)1996 S.M.Bernsee. Sign = -1 is FFT, 1 is iFFT (inverse) Fills fftBuffer[0...2*fftFrameSize-1] with the Fourier transform of the time domain data in fftBuffer [0...2*fftFrameSize-1]. The FFT array takes and returns the cosine and sine parts in an interleaved manner, ie. fftBuffer[0] = cosPart[0], fftBuffer[1] = sinPart[0], asf. fftFrameSize must be a power of 2. It expects a complex input signal (see footnote 2), ie. when working with ＇common＇ audio signals our input signal has to be passed as {in[0],0.,in[1],0.,in[2],0.,...} asf. In that case, the transform of the frequencies of interest is in fftBuffer[0...fftFrameSize].&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;float wr, wi, arg, *p1, *p2, temp;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;float tr, ti, ur, ui, ur, ui, *p1r, *p1i, *p2r, *p2i;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;long i, bitm, j, le, le2, k;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;for (i = 2; i &amp;lt; 2*fftFrameSize-2; i += 2) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;for (bitm = 2, j = 0; bitm &amp;lt; 2*fftFrameSize; bitm &amp;lt;&amp;lt;= 1) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;if (i &amp;amp; bitm) j++;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;j &amp;lt;&amp;lt;= 1;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;if (i &amp;lt; j) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;p1 = fftBuffer+i; p2 = fftBuffer+j;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;temp = *p1; *(p1++) = *p2;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;*(p2++) = temp; temp = *p1;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;*p1 = *p2; *p2 = temp;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;for (k = 0, le = 2; k &amp;lt; (long)(log(fftFrameSize)/log(2.)); k++) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;le &amp;lt;&amp;lt;= 1;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;le2 = le&amp;gt;&amp;gt;1;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ur = 1.0;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ui = 0.0;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;arg = M_PI / (le2&amp;gt;&amp;gt;1);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;wr = cos(arg);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;wi = sign*sin(arg);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;for (j = 0; j &amp;lt; le2; j += 2) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;p1r = fftBuffer+j; p1i = p1r+1;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;p2r = p1r+le2; p2i = p2r+1;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;for (i = j; i &amp;lt; 2*fftFrameSize; i += le) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;tr = *p2r * ur - *p2i * ui;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ti = *p2r * ui + *p2i * ur;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;*p2r = *p1r - tr; *p2i = *p1i - ti;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;*p1r += tr; *p1i += ti;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;p1r += le; p1i += le;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;p2r += le; p2i += le;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;tr = ur*wr - ui*wi;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ui = ur*wi + ui*wr;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ur = tr;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6d2c7a8af6b534428bb36688e84be421</guid>
<title>新一代 CTR 预测服务的 GPU 优化实践</title>
<link>https://toutiao.io/k/ehemt6m</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a5b9a0356808185c2a3ec582cf016380</guid>
<title>iOS 优化：瘦身</title>
<link>https://toutiao.io/k/hhipqfo</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4NjQ5NDYxNg==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/B0Mukl4e1IVEGOynoQuKHoISeM4T5Wd0UrUMPZEQia2eiaN59NardjoJfGibWoPsjox4iaWzD8yHTmVibOw9DGxJiaEQ/0?wx_fmt=png&quot; data-nickname=&quot;CoderStar&quot; data-alias=&quot;Coder-Star&quot; data-signature=&quot;分享大前端相关的技术知识，只聊技术干货，欢迎大家订阅！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Hi Coder，我是 CoderStar！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;iOS 优化将是一个专题，其中会包括包体积优化（瘦身）、启动时间优化、UI 优化等等。那么这个专题的开篇就从瘦身开始吧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;APP 的大小是分为 APP 下载大小和安装大小两个概念的。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;下载大小是指 App 压缩包（也就是 .ipa 文件）所占的空间，用户在下载 App 时，下载的是压缩包，这样做可以节省流量；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;当压缩包下载完成后，就会自动解压，解压过程也就是通常所说的安装过程；安装大小就是指压缩包解压后所占用的空间。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户在商店看到的大小是安装大小。如果想看安装包在各机型上的下载、安装大小可以在 App Store Connect 后台查看。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5594758064516129&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/B0Mukl4e1IWmExpOqsaH6ewvbEBRsJuJb4eDw9RLsiczI9HJ2K6fd9gTCiccGuvicBRhyGiasjB54kqC0tfzLdXLeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;992&quot;/&gt;&lt;figcaption&gt;下载及安装大小示意图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;App Store OTA 下载大小限制：&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;虽然苹果历年都会调整 App 下载大小，由之前的 100M 到后来的 150M 再到现在的 200M。如今，App 下载大小超出 200 MB 时 ，会出现两种情况：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;iOS 13 以下的用户，无法通过蜂窝数据下载 App；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;iOS 13 及以上的用户，需要手动设置才可以使用蜂窝网络下载 App。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Apple __TEXT 段大小限制：&lt;/strong&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;iOS 7 之前，二进制文件中所有的 __TEXT 段总和不得超过 80 MB；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;iOS 7.X 至 iOS 8.X，二进制文件中，每个特定架构中的 __TEXT 段不得超过 60 MB；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;iOS 9.0 之后，二进制文件中所有的 __TEXT 段总和不得超过 500 MB。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;顺便给大家说下苹果将下载大小限制由 100M 调整到 150M 的原因是什么？主要原因就是 Uber 当年用 Swift 重构开发 APP 时，随着业务的增长，后期发现实在无法再将 APP 尺寸降到 100M 以下，只能联系苹果让其将下载大小提升到 150M，同时苹果的 Swift 团队还帮助添加了一些编译器选项 (-Osize)。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该文主要研究的是如何降低 APP 的&lt;strong&gt;下载大小&lt;/strong&gt;的，因为文章篇幅较长，如果大家不想细读，可以直接跳过细节展开看每个小节的结论部分。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;瘦身方向&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;将 ipa 安装包后缀名改为 zip，将其解压，显示.app 包内容后，就可以很直观的看到安装包的组成部分。一般会包括以下几个部分：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Exectutable: Mach-O 可执行文件&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Resources：资源文件&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;图片资源：Assets.car/bundle/png/jpg 等&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视频 / 音频资源：mp4/mp3 等&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;静态网页资源：html/css/js 等&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;视图资源：xib/storyboard 等&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;国际化资源：xxx.lproj&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其他：文本 / 字体 / 证书 等&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;Framework：项目中使用的动态库&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;SwiftSupport: libSwiftxxx 等一系列 Swift 库&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;其他依赖库：Embeded Framework&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;section&gt;Pulgins：Application Extensions&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其实核心组成部分便是&lt;strong&gt;资源文件&lt;/strong&gt;与&lt;strong&gt;Mach-O 可执行文件&lt;/strong&gt;两部分，这两个部分便是我们的主要瘦身方向。在瘦身过程中，应该尽量使用 ROI 最高的优化手段，付出更少的精力，得到更多的收益。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在介绍我们作为开发者的优化方向之前，我们先看一下苹果自身对于 APP 下载大小的优化有哪些吧，我们要充分利用 Apple 自身的优化机制。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;App Thinning(苹果自身优化)&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;App Thinning 是指 iOS9 以后引入的一项优化，Apple 会尽可能，自动降低分发到具体用户时所需要下载的 App 大小。其主要包含以下三项功能。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Slicing(应用分割)&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当向 App Store Connect 上传 .ipa 后，App Store Connect 构建过程中，会自动分割该 App，会专门针对不同的设备来选择只适用于当前设备的内容（主要是架构和资源）以供设备下载。其差异性主要是体现在架构（32 位还是 64 位）和资源（@1x、@2x 还是 @3x）等方面上。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中架构方面开发者不需要去控制，但是对于资源来说要求图片在 &lt;strong&gt;Asset Catalog&lt;/strong&gt; 管理，如果直接放在 Bundle 中，则不会被优化。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;关于 Asset Catalog 相关知识点及优化结论可见下文 Assets Catalog 章节。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;总结：尽量将图片等资源交给&lt;code&gt;Asset Catalog&lt;/code&gt;管理。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Bitcode（中间码）&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Bitcode 是一个编译好的程序的中间表示形式（IR）。上传到 App Store Connect 中的包含 Bitcode 的 App 将会在 App store 中进行链接和编译。苹果会对包含 Bitcode 的二进制 app 进行二次优化，而不需要提交一个新的 app 版本到 app store 中。属于 Apple 内部的优化，但需要注意；&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;全部都要支持。我们所依赖的静态库、动态库、Cocoapods 管理的第三方库，都需要开启 Bitcode。否则打包会编译失败，具体错误会在 Xcode 中指出；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Crash 定位。开启 Bitcode 后最终生成的可执行文件是 Apple 自动生成的，同时会产生新的符号表文件，所以我们无法使用自己包生成的 DYSM 符号化文件来进行符号化，而是使用使用 Apple 生成的 DYSM 符号化文件；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Flutter 不支持 Bitcode，如果项目是包含 Flutter 框架的，就无法使用这种方式；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;BitCode 在 iOS 开发中是可选的，在 watchOS 开发中是必须要选择的， Mac OS 是不支持 BitCode 的。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开启方式：&lt;code&gt;Build Settings -&amp;gt; Enable Bitcode -&amp;gt; 设置为 YES&lt;/code&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果想对 Bitcode 了解更深入一些，可以看下我之前的一篇博文--&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjQ5NDYxNg==&amp;amp;mid=2247483706&amp;amp;idx=1&amp;amp;sn=5548d8358ba53513aa4868479af6cdde&amp;amp;chksm=fdfb26cdca8cafdb055fc2e01d29689aca6e40ac649d218cc656dfee1527f740fe654159de7e&amp;amp;token=99598549&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;iOS 编译简析&lt;/a&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：可根据项目实际情况决定是否开启，如果项目混编了 Flutter、依赖的部分库不支持 Bitcode 以及不想处理一遍 DYSM 符号化，就不要进行开启，否则可以选择开启。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;On-Demand Resources(随需应变资源)&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;On-Demand Resource 即一部分图片可以被放置在苹果的服务器上，不随着 App 的下载而下载，直到用户真正进入到某个页面时才下载这些资源文件。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;应用场景：相机应用的贴纸或者滤镜、关卡游戏等。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开启方式：&lt;code&gt;Build Settings -&amp;gt; Enable On Demand Resources -&amp;gt; 设置为 YES&lt;/code&gt;（默认开启）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;设置资源的 Tag 类型，种类包括：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Initial install tags：资源和 App 同时下载。在 App Store 中，App 的大小计算已经包含了这部分资源。当没有 NSBundleResourceRequest 对象访问它们时，它们将会从设备上清除。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Prefetch tag order：在 App 安装后开始下载，按照预加载列表中的顺序依次下载。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Dowloaded only on demand：只有在 App 中发出请求时才会下载。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果项目中有 Demand Resources，则最后生成的安装包结构大致层级为：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;项目名.app&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;OnDemandResources 文件夹&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体使用方法这里就不展开讲了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们在下载安装包时，不会下载 &lt;code&gt;OnDemandResources&lt;/code&gt; 文件夹中的资源，起到减小下载安装包尺寸的目的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：该方式与下文提到的资源远程化本质一样，只不过一个是放在自己服务器，一个是放在苹果服务器，可根据自己项目实际情况选择是否使用。&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;资源文件瘦身&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;资源文件优化方向比较多，相对优化 Mach-O 可执行文件来讲，风险也比较小。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;去除无用 / 重复的资源&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;业务的迭代开发，出现无用的图片资源是比较正常的，我们可以借助工具找出哪些图片资源没有被使用过。推荐下面两款工具：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;LSUnusedResources&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;：可视化客户端工具；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;FengNiao&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;：命令行工具，可嵌入到 Run Script 中或者在 CI 系统中使用，支持的模式匹配更加强大。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因为这类工具的原理都是在相关文件（.m、.swift 等等）中利用正则表达式检测是否有图片名称的字符，所以存在以下问题。问题点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;如果代码中使用的图标名称是拼接而成的，就会误以为相关图片是废弃图片；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;（有歧义，请忽略）如果 Assets.xcassets 文件中直接修改了图片的名字，也会认为相关图片可能是废弃图片；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以利用&lt;span&gt;Duplicate Photos&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;从内容上检测重复/相似图片。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;引申一下：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;之所以要使用自动化工具来检测重复资源的原因是因为资源是  弱类型，我们在项目迭代过程  中手动去维护是相当麻烦的一个过程。转换一下思维，如果资源变成强类型了， 那我们维护起来就相当容易了。目前就有这样一个工具 &lt;span&gt;R.swift&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;一定意义上将资源变成强类型， 类似于 Android  开发中的 R 文件。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可利用&lt;span&gt;fdupes&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;查找项目中的重复文件。其原理是对比不同文件的签名，签名相同的文件就会判定为重复资源。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;mac 上可直接通过 &lt;code&gt;brew install fdupes&lt;/code&gt; 进行安装，可以使用 &lt;code&gt;fdupes -Sr 文件夹名称&lt;/code&gt; 来查看所有涉及到的目录和子目录中的重复文件的大小，其余相关指令可自行查阅，不建议使用 fdupes 相关命令直接删除搜索出来的重复资源，风险比较高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：考虑到工具的不准确性，可以利用工具粗检测一下哪些资源没有被使用，然后经人工确认后才统一进行删除。对于工具无法检测出来的资源，就只能人工进行筛查了，可每人分配几个模块，提高效率。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;资源压缩&lt;span/&gt;&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;请注意：这里的资源不包括 Assets Catalog 管理的资源。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;PNG 资源&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这一部分涉及前因后果比较多，为保证大家能看懂，会先铺垫一些原理性知识，请耐心阅读。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Xcode 的 &lt;code&gt;Build Setting&lt;/code&gt; 提供的给我们两个编译选项来帮助压缩 PNG 资源 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Remove Text Medadata From PNG Files&lt;/code&gt;（默认开启）：能帮助我们移除 PNG 资源的文本字符，比如图像名称、作者、版权、创作时间、注释等信息。&lt;code&gt;Compress PNG Files&lt;/code&gt;（默认开启）：当设置为 YES 后，打包的时候会利用 &lt;code&gt;pngcrush&lt;/code&gt; 工具自动对项目中&lt;strong&gt;所有 PNG 图片&lt;/strong&gt;进行无损压缩以及修改文件格式，该工具是开源的--&lt;span&gt;pngcrush 地址&lt;/span&gt;&lt;sup&gt;[6]&lt;/sup&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Compress PNG Files&lt;/code&gt; 设置为 YES 后，XCode 会调用该路径的脚本&lt;code&gt;/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/iphoneos-optimize&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;pngcrush&lt;/code&gt; 工具在其同级目录存放，iphoneos-optimize 脚本中关于 PNG 压缩的内容如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;sub optimizePNGs {&lt;br/&gt;    my $name = $File::Find::name;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; ( -f $name &amp;amp;&amp;amp; $name =~ /^(.*)\.png$/i) {&lt;br/&gt;        my $crushedname = &lt;span&gt;&quot;$1-pngcrush.png&quot;&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;// $PNGCRUSH便是pngcrush工具路径&lt;/span&gt;&lt;br/&gt;        my @args = ( $PNGCRUSH, &lt;span&gt;&quot;-q&quot;&lt;/span&gt;, &lt;span&gt;&quot;-iphone&quot;&lt;/span&gt;, &lt;span&gt;&quot;-f&quot;&lt;/span&gt;, &lt;span&gt;&quot;0&quot;&lt;/span&gt; );&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; ( $stripPNGText ) {&lt;br/&gt;             push ( @args, &lt;span&gt;&quot;-rem&quot;&lt;/span&gt;, &lt;span&gt;&quot;text&quot;&lt;/span&gt; );&lt;br/&gt;        }&lt;br/&gt;        push ( @args, $name, $crushedname );&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (system(@args) != &lt;span&gt;0&lt;/span&gt;) {&lt;br/&gt;            print STDERR &lt;span&gt;&quot;$SCRIPT_NAME: Unable to convert $name to an optimized png!\n&quot;&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;        }&lt;br/&gt;        unlink $name &lt;span&gt;or&lt;/span&gt; die &lt;span&gt;&quot;Unable to delete original file: $name&quot;&lt;/span&gt;;&lt;br/&gt;        rename($crushedname, $name) &lt;span&gt;or&lt;/span&gt; die &lt;span&gt;&quot;Unable to rename $crushedname to $name&quot;&lt;/span&gt;;&lt;br/&gt;        print &lt;span&gt;&quot;$SCRIPT_NAME: Optimized PNG: $name\n&quot;&lt;/span&gt;;&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从内容上来看，脚本是通过&lt;strong&gt;png 后缀名&lt;/strong&gt;来判断是否为 png 图片，如果图片改变后缀名，则该图片则不会被 &lt;code&gt;pngcrush&lt;/code&gt; 工具进行处理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以通过下面命令手动使用 &lt;code&gt;pngcrush&lt;/code&gt; 工具。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; image.png 经编码后 生成 image1.png&lt;/span&gt;&lt;br/&gt;xcrun -sdk iphoneos pngcrush -iphone -f 0 image.png image1.png&lt;br/&gt;&lt;span&gt;&lt;br/&gt;#&lt;/span&gt;&lt;span&gt; image.png 经解码后 还原成 image1.png&lt;/span&gt;&lt;br/&gt;&lt;span&gt;#&lt;/span&gt;&lt;span&gt; 即使还原回去与原图片也不会完全一致，这里就不展开描述了&lt;/span&gt;&lt;br/&gt;xcrun -sdk iphoneos pngcrush -revert-iphone-optimizations image.png image1.png&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;pngcrush&lt;/code&gt; 工具编码结果主要变化内容如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;在 IHDR 块之前插入了 CgBI 块来表示这种格式&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;修改 IDAT 块中的数据，去除 zlib 压缩头和 Adler-32 校验和；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;八位真彩色图像按 BGR/BGRA 顺序存储，而不是按 IHDR 块中指示的 RGB 和 RGBA 顺序存储&lt;/strong&gt;；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;图像像素使用预乘 alpha；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;修改后的文件使用。png 为有效图像定义的文件扩展名以及内部文件结构，但符合 PNG 的查看和编辑软件不再能够处理它们；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;增加了一个 iDot 数据块，是 Apple 自定义的数据块，暂时不知其作用；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;其本质是使正常的 png 图片变成了一个优化后的 CgBI 格式的 png&lt;/strong&gt;。可以利用&lt;span&gt;pngcheck&lt;/span&gt;&lt;sup&gt;[7]&lt;/sup&gt;查看处理前的图片信息，利用&lt;span&gt;pngdefry&lt;/span&gt;&lt;sup&gt;[8]&lt;/sup&gt;查看处理后的图片信息（其还可以将 CgBI 格式的 png 还原回去，这个功能跟 pngcrush 工具解码功能类似）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上述变化内容来看， &lt;code&gt;pngcrush&lt;/code&gt; 工具编码过程并不是简单的压缩数据，更重要的是对文件格式做了修改。&lt;strong&gt;因为 iPhone 中，图像是以 BGRA 格式在内存中处理的，所以修改后的格式变成了 iPhone 能更方便处理的格式，加快处理速度。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;根据我自己测试的压缩效果来看，对于 Bundle 中放置的 png 图片，经过 &lt;code&gt;pngcrush&lt;/code&gt; 的处理，大小不降反增，目前暂时没有找到哪些具体因素影响其压缩效果。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.9505882352941176&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/B0Mukl4e1IWmExpOqsaH6ewvbEBRsJuJIcq9Eg0jzPCbXC5PJrzLHOqCpLRkfsyNJ9xQ8HXTicKziaUwZxVltPYA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1700&quot;/&gt;&lt;figcaption&gt;pngcrsuh测试效果对比图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：Compress PNG Files 虽然是压缩 PNG，但其最主要的目的并不是为了压缩图片大小， 而是将 PNG 转换成 iOS 更容易处理、更快速度的去识别的格式，可以根据项目在开启、关闭两种情况下的打包大小，自行取舍。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;非 PNG 资源&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;非 PNG 资源压缩包含两种方式：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;直接通过一些压缩工具将资源进行压缩，格式保持不变，如一些图片资源、音视频资源等，图片压缩工具下文会有介绍。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;还有一些文本资源，如 json 文件、html 文件等，无法使用上述的方式压缩，可以采用压缩成 zip 等压缩格式的方式，可分为三步：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;压缩阶段：在 Build Phase 中添加脚本，构建期间对白名单内的文本文件做 zip 压缩；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;解压阶段：在 App 启动阶段，在异步线程中进行解压操作，将解压产物存放到沙盒中；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;读取阶段：在 App 运行时，hook 读取这些文件的方法，将读取路径从 Bundle 改为沙盒中的对应路径；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：可选用合适的压缩工具对音视频、非 Assets Catalog 管理的图片资源进行压缩。对于一些比较大的文本文件可选用第二种运行时解压读取的方式，如 Lottie 动画的 json 文件。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Assets Catalog&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Assets Catalog 涉及的技术点比较多，后续可能会单独开一篇博文专门讲这一部分内容。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;去除 @1x 图片&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;@1x 图是 iPhone 3Gs 用的，iPhone 4 开始使用 @2x 图了，iPhone 6p 开始使用 3x 图。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：可以删除 Assets 中所有 @1x 的图片资源。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;图片压缩&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Assets.car 文件是工程中 Asset Catalog 的构建产物。Xcode 构建过程中，在 &lt;code&gt;compile asset catalog&lt;/code&gt; 节点时， 构建 Asset Catalog 的工具 &lt;code&gt;actool&lt;/code&gt; 会首先对 Asset Catalog 中的 png 图片进行解码，得到 Bitmap 数据，然后再运用 &lt;code&gt;actool&lt;/code&gt; 的编码压缩算法进行编码压缩处理。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果你开发时放入到 Assets 中的是 jpg 格式文件，在最终生成的 Assets.car 文件中也会成为 png 图片。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;xcrun assetutil --info Assets.car&lt;/code&gt; 。可使用该命令检查 Assets.car 中每张图片使用的编码压缩算法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前 &lt;code&gt;actool&lt;/code&gt; 会使用的压缩算法包括 &lt;code&gt;lzfse&lt;/code&gt; 、 &lt;code&gt;palette_img&lt;/code&gt; 、 &lt;code&gt;deepmap2&lt;/code&gt; 、 &lt;code&gt;deepmap_lzfse&lt;/code&gt; 、 &lt;code&gt;zip&lt;/code&gt; ，影响其使用何种算法的因素包括 &lt;strong&gt;iOS 系统版本&lt;/strong&gt;、&lt;strong&gt;ASSETCATALOG_COMPILER_OPTIMIZATION 设置&lt;/strong&gt;（位于 Build Setting 中）等；&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;iOS 11.x 版本：对应的压缩算法为 lzfse、zip；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;iOS 12.0.x - iOS 12.4.x: 对应的压缩算法为 deepmap_lzfse、palette_img；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;iOS 13.x: 对应的压缩算法为 deepmap2 ；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;按照压缩比来讲 lzfse &amp;lt; palette_img ~= deepmap_lzfse &amp;lt; deepmap2&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果设置了 &lt;code&gt;ASSETCATALOG_COMPILER_OPTIMIZATION&lt;/code&gt; 为 &lt;code&gt;space&lt;/code&gt; 那么在低版本 iOS 系统上，使用 &lt;code&gt;lzfse&lt;/code&gt; 压缩算法的图片会变成 &lt;code&gt;zip&lt;/code&gt; 的算法，可减少 iOS 11.x 及以下的 iOS 设备图片的占用大小。其他 iOS 版本的压缩算法不受这个配置的影响。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;无损压缩通过变换图片的编码压缩算法减少大小，但是不会改变 Bitmap 数据，对于 &lt;code&gt;actool&lt;/code&gt; 来说，它接收的输入（Bitmap 数据）没有改变，&lt;strong&gt;所以无损压缩无法优化 Assets.car 的大小，但是可以用来优化非 Asset Catalog 管理的图片&lt;/strong&gt;。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;使用有损压缩方式并采用合适的压缩方法是可以减小 Assets.car 的大小。可以对图片采用&lt;code&gt;RGB with palette&lt;/code&gt;（调色板算法）编码方式来达到图标压缩的效果，这种编码方式进行压缩特别适合内部颜色相对接近的图标。但是需要注意如果图片中有半透明效果，这种压缩方式可能会导致半透明的地方出现噪点，所以压缩之后请注意仔细检查一下。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;RGB with palette 编码的得到的字节流首先维护了一个颜色数组。颜色数组每个成员用 RGBA 四个分量维护一个颜色。图像中的每个像素点则存储颜色数组的下标代表该点的颜色。颜色数组维护的颜色种类和数量由图片决定，同时可以人为的限制颜色数组维护颜色的种类的上限，默认为最大值 256 种，具体原理详见底部相关链接 --【Palette Images】；&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用下文提到的 ImageOptim-CLI 工具，我们可以改变图片的编码方式为 &lt;code&gt;RGB with palette&lt;/code&gt;，命令如下：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;imageoptim -Q --no-imageoptim --imagealpha --number-of-colors 16 --quality 40-80 ./1.png&lt;/code&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;--number-of-colors：控制颜色数组维护颜色的数量；--quality：控制图片的质量变为原来的百分比；命令中的数值可以在显著减少包大小的同时维持肉眼看不到的质量变化。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以图片资源举例，我们可以使用工具对其进行压缩，推荐几款工具如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;TinyPng&lt;/span&gt;&lt;sup&gt;[9]&lt;/sup&gt;：网页工具，有损压缩；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;TinyPNG4Mac&lt;/span&gt;&lt;sup&gt;[10]&lt;/sup&gt;：TinyPng 的客户端工具，无需联网使用浏览器；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;ImageOptim&lt;/span&gt;&lt;sup&gt;[11]&lt;/sup&gt;：客户端工具，支持无损压缩及有损压缩两种形式，可自定义设置压缩方式。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;ImageOptim-CLI&lt;/span&gt;&lt;sup&gt;[12]&lt;/sup&gt;：Mac 可使用&lt;code&gt;brew install imageoptim-cli&lt;/code&gt;安装，其会根据你的指定，选择性调用 &lt;code&gt;JPEGmini&lt;/code&gt;、&lt;code&gt;ImageAlpha&lt;/code&gt;、&lt;code&gt;ImageOptim&lt;/code&gt; 等工具，实现中间过程自动化。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果想将 car 文件中的 png 提取出来，可以使用&lt;span&gt;Asset Catalog Tinkerer&lt;/span&gt;&lt;sup&gt;[13]&lt;/sup&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;引申一下，好的工具是开发利器，之前整理了一些好用的 Mac 效率工具，可见&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjQ5NDYxNg==&amp;amp;mid=2247483934&amp;amp;idx=1&amp;amp;sn=f47863a8e5cc3ff5c4d8167a1f155f06&amp;amp;chksm=fdfb25e9ca8cacffd81218a577ec5e2095d1d1cd477f9174a13b8a32a0e856af04e35b8917c0&amp;amp;token=99598549&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;Mac 效率软件&lt;/a&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：能用 Asset Catalogs 管理的资源，尽量使用 Asset Catalogs 来管理。使用 Asset Catalog 管理图片不要对图片进行无损压缩，最终起不到压缩效果，如果想要压缩，可以采用上面所提到的有损压缩方式，并检查压缩后的效果。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;图片资源使用 Webp 格式&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;谷歌开源的格式，Webp 压缩率比较高，同时支持有损和无损两种压缩模式，可以带来更小的图片体积，而且肉眼看不出差异。根据 Google 的测试，无损压缩后的 WebP 比 PNG 文件少了 26％的体积，有损压缩后的 WebP 图片相比于等效质量指标的 JPEG 图片减少了 25％~34% 的体积。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;但是 WebP 与 JPG 以及 PNG 相对比，在编解码的 CPU 消耗以及解码时间上会差一些，因为编码是用户上传图片时的一次性操作，并且编码过程是在服务器后台进行，对用户的影响不大，对用户影响大的主要是解码过程，会导致图片加载速度慢一些。所以，我们需要根据项目的实际情况在性能和体积上做取舍。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果从服务器带宽以及流量来看，因为图片的体积变小，所以会减小带宽，降低成本。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;推荐二种转 WebP 格式的方法&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;iSpart&lt;/span&gt;&lt;sup&gt;[14]&lt;/sup&gt;：腾讯出品，GUI 工具；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;webp 工具&lt;/span&gt;&lt;sup&gt;[15]&lt;/sup&gt;: 在 Mac 下，可以使用 Homebrew 安装 WebP 工具--&lt;code&gt;brew install webp&lt;/code&gt;；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;iOS 原生并不支持 WebP 格式加载，需要引入 &lt;code&gt;SDWebImage/WebP&lt;/code&gt;，或者进行自研。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：该方案适合整个大前端及后端统一调整，整体进行优化，如果是单一的客户端进行调整，可能达不到最优效果。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;资源动态化&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了上文提到的使用 &lt;code&gt;On-Demand Resources&lt;/code&gt; 方式将部分资源放在苹果服务器之外，我们也可以将一些本地资源转移到自己的服务器上去。这样不仅降低了安装包大小，也将这些资源动态化了。适合放在服务器的资源应包含以下几个特性：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如一些 Banner 广告图、主题资源、音视频资源、H5 资源资源。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：可尽量将满足上述特性的资源放置在服务器。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;图标优化&lt;span/&gt;&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;使用 tint color 精简单色图标；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用图标字体（IconFont）替换单色图标；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将部分相似图标进行整合；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：如果项目有相对的设计规范及标准图标样式，使用图标字体是一个很好的方案。剩余的优化点根据项目实际情况决定是否使用。&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;编译选项改进&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Xcode 支持编译器层面的一些优化选项，通过修改 &lt;code&gt;Build Setting&lt;/code&gt; 的一些相关配置，可以让我们介于更快的编译速度和更小的二进制大小并且更快的执行速度之间自由选择想要进行的优化粒度，这些选项有的会影响资源文件，有的会影响可执行文件，因为内容比较多，所以起一个独立的章节描述。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;这种方式的性价比很高，改动一项配置，就可能会带来收益，但是可能具有一定的风险，需要谨慎。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下文中提到的一些 Xcode 默认配置可能在低版本 Xcode 上不是默认配置，如果不是默认，可手动勾选。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;去除无用架构&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以在 &lt;code&gt;Build Setting&lt;/code&gt; - &lt;code&gt;Excluded Architectures&lt;/code&gt; 项设置排除的架构。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先看一下几种架构的含义：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;模拟器 32 位处理器测试需要 &lt;code&gt;i386&lt;/code&gt; 架构；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;模拟器 64 位处理器测试需要 &lt;code&gt;x86_64&lt;/code&gt; 架构；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;真机 32 位处理器需要 &lt;code&gt;armv7&lt;/code&gt;, 或者 &lt;code&gt;armv7s&lt;/code&gt; 架构；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;真机 64 位处理器需要 &lt;code&gt;arm64&lt;/code&gt; 架构。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;armv6&lt;/th&gt;&lt;th&gt;armv7&lt;/th&gt;&lt;th&gt;armv7s&lt;/th&gt;&lt;th&gt;arm64&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;iPhone&lt;br/&gt;iPhone2&lt;br/&gt;iPhone3G&lt;br/&gt;第一代和第二代 iPod Touch&lt;/td&gt;&lt;td&gt;iPhone4&lt;br/&gt;iPhone4S&lt;br/&gt;iPad1-iPad3，3、4 代 iPod Touch&lt;br/&gt;iPad mini&lt;/td&gt;&lt;td&gt;iPhone5&lt;br/&gt;iPhone5C&lt;br/&gt;iPad4&lt;/td&gt;&lt;td&gt;iPhone 5S 等剩余全部机型&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：理论上只保留 arm64 架构其实就够用了，可以去除 &lt;code&gt;armv6&lt;/code&gt; 、 &lt;code&gt;armv7&lt;/code&gt; 、 &lt;code&gt;armv7s&lt;/code&gt; 三种架构。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;使用链接时优化 LTO(Link-Time Optimization)&lt;span/&gt;&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;可以在 &lt;code&gt;Build Setting&lt;/code&gt; - &lt;code&gt;Link-Time Optimization&lt;/code&gt; 项设置优化方式&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其提供三种选项：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;No&lt;/code&gt; 不开启链接期优化；（默认项）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Monolithic&lt;/code&gt; 生成单个 LTO 文件，每次链接重新生成，无缓存高内存消耗，参数 LLVM_LTO=YES；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;Incremental&lt;/code&gt; 生成多个 LTO 文件，增量生成，低内存消耗，参数 LLVM_LTO=YES_THIN；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;LTO 能带来的优化有：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;将一些函数內联化&lt;/strong&gt;：不用进行调用函数前的压栈、调用函数后的出栈操作，提高运行效率与栈空间利用率；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;去除了一些无用代码&lt;/strong&gt;：如果一段代码分布在多个文件中，但是从来没有被使用，普通的 -O3 优化方法不能发现跨中间代码文件的多余代码，因此是一个局部优化。但是 &lt;code&gt;Link-Time Optimization&lt;/code&gt; 技术可以在 link 时发现跨中间代码文件的多余代码；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;对程序有全局的优化作用&lt;/strong&gt;：这是一个相对广泛的概念。举个例子来说，如果一个 if 方法的某个分支永不可能执行，那么在最后生成的二进制文件中就不应该有这个分支的代码。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;LTO 会降低编译链接的速度，所以建议在打正式包时开启；开启了 LTO 之后，Link Map 的可读性明显降低，多出了很多数字开头的类（LTO 的全局优化导致的），所以如果需要阅读 Link Map，可以先关闭 LTO；&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;LTO 虽然是链接期优化，但是仍然需要编译期参与，加入了 LTO 的编译出来的 .a 本质是 LLVM 的 BitCode，如果使用未开启 LTO 构建出来的的 .a 直接是机器码了。直接链接是无法完成 LTO 优化的。&lt;/p&gt;&lt;p&gt;开启 LTO 之后跨编译单元的重复代码会被链接器单独生成以 .lto.o 为后缀的目标文件进行链接。尤其是对于 Objc Runtime 需要的一些结构， &lt;strong&gt;比如方法签名的 literal string、protocol 的结构等有比较大的优化&lt;/strong&gt;。同时开启 Oz 和 LTO 可以让外联函数都只存在一份能够最大限度的优化安装包体积（是全局的优化作用，将已经外联的函数去重）。如果项目中大量的使用了 Protocol 建议还是开启这个选项。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：可将&lt;code&gt;Link-Time Optimization&lt;/code&gt;选项由 &lt;code&gt;NO&lt;/code&gt; 改为 &lt;code&gt;Incremental&lt;/code&gt; 。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;语言编译优化&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;OC&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;OC 关于编译内联优化的参数位于 &lt;code&gt;Build Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Apple Clang - Code Generation&lt;/code&gt; -&amp;gt; &lt;code&gt;Optimization Level&lt;/code&gt; ，选项如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;None[-O0]: 编译器不会优化代码，意味着更快的编译速度和更多的调试信息，默认在 &lt;strong&gt;Debug&lt;/strong&gt; 模式下开启；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Fast[-O, O1]: 编译器会优化代码性能并且最小限度影响编译时间，此选项在编译时会占用更多的内存；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Faster[-O2]：编译器会开启不依赖空间 / 时间折中所有优化选项。在此，编译器不会展开循环或者函数内联。此选项会增加编译时间并且提高代码执行效率；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Fastest[-O3]：编译器会开启所有的优化选项来提升代码执行效率。此模式编译器会执行函数内联使得生成的可执行文件会变得更大。一般不推荐使用此模式；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Fastest Smallest[-Os]：编译器会开启除了会明显增加包大小以外的所有优化选项。默认在 &lt;strong&gt;Release&lt;/strong&gt; 模式下开启；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Fastest, Aggressive Optimization[-Ofast]：启动 -O3 中的所有优化，可能会开启一些违反语言标准的一些优化选项。一般不推荐使用此模式。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：使用默认配置即可，无需修改。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Swift&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Swift 关于编译内联优化的参数位于 &lt;code&gt;Build Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Swift Compiler - Code Generation&lt;/code&gt; -&amp;gt; &lt;code&gt;Optimization Level&lt;/code&gt; ，可选参数如下。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;No optimization[-Onone]：不进行优化，能保证较快的编译速度。默认在 &lt;strong&gt;Debug&lt;/strong&gt; 模式开启；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Optimize for Speed[-O]：编译器将会对代码的执行效率进行优化，一定程度上会增加包大小。默认在 &lt;strong&gt;Release&lt;/strong&gt; 模式下开启；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Optimize for Size[-Osize]：编译器会尽可能减少包的大小并且最小限度影响代码的执行效率。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Optimize for Size&lt;/code&gt; 的核心原理是对重复的连续机器指令外联成函数进行复用，和函数内联的原理正好相反。因此，将其开启，能减小二进制的大小，但同时理论上会带来执行效率的额外消耗，对性能（CPU）敏感的代码使用需要评估。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体官方描述可见&lt;span&gt;Code Size Optimization Mode in Swift 4.1&lt;/span&gt;&lt;sup&gt;[16]&lt;/sup&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配合其使用的还有&lt;code&gt;Compliation Mode&lt;/code&gt;设置，其含有两个选项&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Single File：单个文件优化，&lt;strong&gt;可以减少增量编译的时间&lt;/strong&gt;，并且可以充分利用多核 CPU，并行优化多个文件，提高编译速度。但是对于交叉引用无能为力；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Whole Module：模块优化，&lt;strong&gt;最大限度优化整个模块&lt;/strong&gt;，能处理交叉引用。缺点不能利用多核 CPU 的优势，每次编译都会重新编译整个 Module；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在 Relese 模式下 &lt;code&gt;-Osize&lt;/code&gt; 和 &lt;code&gt;Whole Module&lt;/code&gt; 同时开启效果会发挥的最好，从现有的案例中可以看到它会减少 5%~30% 的可执行文件大小，并且对性能的影响也微乎其微（大约 5%）。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：将 Release 默认下配置改为 &lt;code&gt;Optimize for Size[-Osize]&lt;/code&gt;，&lt;code&gt;Compliation Mode&lt;/code&gt;选项改为&lt;code&gt;Whole Module&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;死代码裁剪&lt;span/&gt;&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;可以在 &lt;code&gt;Build Setting&lt;/code&gt; - &lt;code&gt;DEAD_CODE_STRIP&lt;/code&gt; 项设置。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在构建完成之后如果是 C、C++ 等静态的语言的代码、一些常量定义，如果发现没有被使用到将会被标记为 Dead code。开启 &lt;code&gt;DEAD_CODE_STRIP = YES&lt;/code&gt; 这些 Dead code 将不会被打包到安装包中。在 LinkMap 这些符号也会被标记为 &lt;code&gt;&amp;lt;&amp;lt;dead&amp;gt;&amp;gt;&lt;/code&gt; 。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;该项其实也属于在清除无用代码。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：默认配置即为 YES，所以使用默认配置即可，无需修改。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;去除符号信息&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可执行文件中的符号是指程序中的所有的变量、类、函数、枚举、变量和地址映射关系，以及一些在调试的时候使用到的用于定位代码在源码中的位置的调试符号，符号和断点定位以及堆栈符号化有很重要的关系。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Strip Style&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Strip Style&lt;/code&gt; 表示的是我们需要去除的符号的类型的选项，其分为三个选择项：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;All Symbols: 去除所有符号，一般是在主工程中开启；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Non-Global Symbols: 去除一些非全局的 Symbol（保留全局符号，Debug Symbols 同样会被去除），链接时会被重定向的那些符号不会被去除，此选项是静态库 / 动态库的建议选项；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Debug Symbols: 去除调试符号，去除之后将无法断点调试。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：主工程选择&lt;code&gt;All Symbols&lt;/code&gt;，静、动态库选择&lt;code&gt;Non-Global Symbols&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Strip Linked Product&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;并不是所有的符号都是必须的，比如 &lt;code&gt;Debug Map&lt;/code&gt;，所以 Xcode 提供给我们 &lt;code&gt;Strip Linked Product&lt;/code&gt; 来去除不需要的符号信息 (&lt;strong&gt;Strip Style 中选择的选项相应的符号&lt;/strong&gt;），去除了符号信息之后我们就只能使用 &lt;code&gt;dSYM&lt;/code&gt; 来进行符号化了，所以需要将 &lt;code&gt;Debug Information Format&lt;/code&gt; 修改为 &lt;code&gt;DWARF with dSYM file&lt;/code&gt;。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;需要注意&lt;code&gt;Strip Linked Product&lt;/code&gt; 选项在 &lt;code&gt;Deployment Postprocessing&lt;/code&gt; 设置为 YES 的时候才生效，而 Deployment Postprocessing 在 Archive 时不受手动设置的影响，会被强制设置成 YES。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：将&lt;code&gt;Deployment Postprocessing&lt;/code&gt;设置为 NO，将&lt;code&gt;Strip Linked Product&lt;/code&gt;设置为&lt;code&gt;YES&lt;/code&gt;，将&lt;code&gt;Release&lt;/code&gt;模式的下的&lt;code&gt;Debug Information Format&lt;/code&gt; 修改为 &lt;code&gt;DWARF with dSYM file&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Strip Debug Symbols During Copy&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;与 &lt;code&gt;Strip Linked Product&lt;/code&gt; 类似，但是这个是将那些拷贝进项目包的三方库、资源或者 Extension 的 &lt;code&gt;Debug Symbol&lt;/code&gt; 去除掉，同样也是使用的 strip 命令。这个选项不受&lt;code&gt;Deployment Postprocessing&lt;/code&gt;的控制，所以我们只需要在 Release 模式下开启，不然就不能对三方库进行断点调试和符号化了。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Cocoapods 管理的动态库 (use_framework!) 的情况就相对要特殊一点，Cocoapods 中的的动态库是使用自己实现的脚本 Pods-xxx-frameworks.sh 来实现拷贝的，所以并不会走 Xcode 的流程，当然也就不受 Strip Debug Symbols During Copy 的影响。当然 Cocoapods 是源码管理的，所以只需要将源码 Target 中的 Strip Linked Product 手动设置为 YES 即可。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：&lt;code&gt;Strip Debug Symbols During Copy&lt;/code&gt;在&lt;code&gt;Release&lt;/code&gt; 模式下设置为&lt;code&gt;YES&lt;/code&gt;，在&lt;code&gt;Debug&lt;/code&gt;模式下设置为&lt;code&gt;false&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Strip Swift Symbols&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开启 &lt;code&gt;Strip Swift Symbols&lt;/code&gt; 能帮助我们移除相应 Target 中的所有的 Swift 符号，这个选项也是默认打开的。这一选项是出现 Xcode 将 xcarchive 包导出成 ipa 文件过程中出现的，不是通过&lt;code&gt;Build Setting&lt;/code&gt;设置的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.6040268456375839&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/B0Mukl4e1IWmExpOqsaH6ewvbEBRsJuJVia0wqEYU6mvd3C7em7brkS2z74Ct8y8vSzAiaHWbvOPLtUcia6hWdK0Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1490&quot;/&gt;&lt;figcaption&gt;示意图&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：一般默认勾选，如果没勾选请手动勾选。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;选项设置方式优化&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大部分项目都会使用 Cocoapods 工具进行管理，Cocoapods 的 project 文件在每次 &lt;code&gt;pod install&lt;/code&gt; 或者 &lt;code&gt;pod update&lt;/code&gt; 会重置，所以需要 &lt;code&gt;hook pod install&lt;/code&gt; 来设置 Pods 中每个 Target 的编译选项。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;post_install &lt;span&gt;do&lt;/span&gt; &lt;span&gt;|installer|&lt;/span&gt;&lt;br/&gt;    installer.pods_project.targets.each &lt;span&gt;do&lt;/span&gt; &lt;span&gt;|target|&lt;/span&gt;&lt;br/&gt;        target.build_configurations.each &lt;span&gt;do&lt;/span&gt; &lt;span&gt;|config|&lt;/span&gt;&lt;br/&gt;            config.build_settings[&lt;span&gt;&#x27;ENABLE_BITCODE&#x27;&lt;/span&gt;] = &lt;span&gt;&#x27;NO&#x27;&lt;/span&gt;&lt;br/&gt;            config.build_settings[&lt;span&gt;&#x27;STRIP_INSTALLED_PRODUCT&#x27;&lt;/span&gt;] = &lt;span&gt;&#x27;YES&#x27;&lt;/span&gt;&lt;br/&gt;            config.build_settings[&lt;span&gt;&#x27;SWIFT_COMPILATION_MODE&#x27;&lt;/span&gt;] = &lt;span&gt;&#x27;wholemodule&#x27;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; config.name == &lt;span&gt;&#x27;Debug&#x27;&lt;/span&gt;&lt;br/&gt;                config.build_settings[&lt;span&gt;&#x27;SWIFT_OPTIMIZATION_LEVEL&#x27;&lt;/span&gt;] = &lt;span&gt;&#x27;-Onone&#x27;&lt;/span&gt;&lt;br/&gt;                config.build_settings[&lt;span&gt;&#x27;GCC_OPTIMIZATION_LEVEL&#x27;&lt;/span&gt;] = &lt;span&gt;&#x27;0&#x27;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;else&lt;/span&gt;&lt;br/&gt;                config.build_settings[&lt;span&gt;&#x27;SWIFT_OPTIMIZATION_LEVEL&#x27;&lt;/span&gt;] = &lt;span&gt;&#x27;-Osize&#x27;&lt;/span&gt;&lt;br/&gt;                config.build_settings[&lt;span&gt;&#x27;GCC_OPTIMIZATION_LEVEL&#x27;&lt;/span&gt;] = &lt;span&gt;&#x27;s&#x27;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;end&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;end&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;end&lt;/span&gt;&lt;br/&gt;&lt;span&gt;end&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Mach-O 可执行文件瘦身&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在对 Mach-O 文件进行瘦身优化时，我们可以通过分析 Link Map 文件来给我们一定的数据参考，帮助我们分析 Mach-O 文件的构成。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Link Map 是编译链接时可以生成的一个 txt 文件，它生成目的就是帮助程序员分析包大小。Link Map 记录了每个方法在当前的二进制架构下占据的空间。通过分析 Link Map，我们可以了解每个类甚至每个方法占据了多少安装包空间。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开启 &lt;code&gt;Build setting&lt;/code&gt; 中的 &lt;code&gt;Write Link Map File&lt;/code&gt; 开关，Xcode 就会生成一份 Link Map 文件。其中生成的 Link Map 文件路径如下：&lt;code&gt;~/Developer/Xcode/DerivedData/项目/Build/Intermediates.noindex/项目.build/Debug-iphonesimulator/项目.build/项目-LinkMap-normal-x86_64.txt&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果直接阅读 Link Map 文件，效率会比较低，也不直观，我们可以使用一些工具帮助我们分析。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;LinkMap 工具地址&lt;/span&gt;&lt;sup&gt;[17]&lt;/sup&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.71004243281471&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/B0Mukl4e1IWmExpOqsaH6ewvbEBRsJuJ2Yd8TYjaBKYEVZzw2gB9qrP0aC45LMVMMzQoUUqzpsmvPRzI7fvpzQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;707&quot;/&gt;&lt;figcaption&gt;LinkMap效果图&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;清除无用代码&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;通过 AppCode 查找无用代码&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;AppCode 提供了非常强大的代码静态检查工具，使用 Inspect Code，可以找到很多代码优化的地方；&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.17400881057268722&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/B0Mukl4e1IWmExpOqsaH6ewvbEBRsJuJdMdM97y5BiaqFVudROALy0kxx7X2iaFicWVXXb8xA1BL23YskMjLjtteA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2724&quot;/&gt;&lt;figcaption&gt;AppCode Inspect&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;基于源码扫描&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一般都是对源码文件进行字符串匹配。例如将 A *a、[A xxx]、NSStringFromClass(&quot;A&quot;)、objc_getClass(&quot;A&quot;) 等归类为使用的类，@interface A : B 归类为  定义的类，然后计算差集。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于源码扫描 有个已经实现的工具 -- &lt;span&gt;fui&lt;/span&gt;&lt;sup&gt;[18]&lt;/sup&gt;，它的实现原理是查找所有 #import &quot;A&quot; 和所有的文件进行比对。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;手动去除&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;已经下线的陈旧代码，AB 试验已经下线的代码；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;通过转 H5、Hybrid 或者 RN 实现的 Native 功能，可以定期清理；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将部分功能进行重构，以此去除一定的代码。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;多个可执行文件中去除相同代码&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里的多个可执行文件一般是指 APP 宿主程序与 Extension 程序，如果 APP 宿主程序与 Extension 程序都依赖同一个静态库库时，就会导致两个可执行文件中都包含相同的代码；个人觉得有两种解决方案：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;考虑到 Extension 程序相对宿主程序来说功能较小，可尽量使用原生功能，不接入三方库；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果想要接入同一份库，可将该库以动态库的方式引入，最终两个可执行文件会动态链接同一份库，避免了重复代码；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：根据项目实际情况选用解决方案。&lt;/strong&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;更多优化&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Pod&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;使用 &lt;code&gt;resource_bundles&lt;/code&gt; 配合 xcassets 的方式来集成各个插件中的资源文件，因为 &lt;code&gt;resource_bundle&lt;/code&gt; 中的资源在构建期能经过 Xcode 的优化，而 resource 中的资源则不能。并且这种形式可以将每个 pod 的资源放在自己的 Bundle 中，更方便管理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：自定义 Pod 如果含有资源，尽量使用 resource_bundle 的方式引用资源。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;编码素质&lt;span/&gt;&lt;/h3&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;代码复用，禁止无脑拷贝代码，共用代码下沉为底层组件；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;重复功能的框架使用一套；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;不要因为一个很小的功能就引入一个框架，或者有类似轻量级框架时转而选择一个功能强大但重量级框架；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;...&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;结论：这一部分需要从提升个人编码素质、团队文化以及团队管理等方面入手。&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;其他&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有一些优化方式，如二进制段压缩，__TEXT 段迁移等方式，大家可以去寻找相关的资料查看，这里只简单介绍相关的原理。&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;二进制段压缩：Mach-O 文件中并不是每个段 / 节在程序启动的第一时间都要被用到。可以在构建过程中将 Mach-O 文件中的这部分段 / 节压缩，然后只要在这些段被使用到之前将其解压到内存中，就能达到了减少包大小的效果，同时也能保证程序正常运行。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;**TEXT 段迁移：将可执行文件的 **TEXT 段中的部分节移动到其它的段，提高了可执行文件的压缩效率。具体可见相关链接中【今日头条优化实践：iOS 包大小二进制优化，一行代码减少 60 MB 下载大小】；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;...&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;最后&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文主要归纳总结了一些常用的瘦身方法，当然不同的项目需求以及业务场景都会产生一些对应的瘦身方法，大家可以根据自己的业务特性去寻找一些更好更优的瘦身技巧。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最后，祝大家周末愉快！&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Let&#x27;s be CoderStar!&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相关链接&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;LSUnusedResources: &lt;em&gt;https://github.com/tinymind/LSUnusedResources&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;FengNiao: &lt;em&gt;https://github.com/onevcat/FengNiao.git&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;Duplicate Photos: &lt;em&gt;https://www.duplicatephotocleaner.com/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;R.swift: &lt;em&gt;https://github.com/mac-cain13/R.swift&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;p&gt;fdupes: &lt;em&gt;https://github.com/adrianlopezroche/fdupes&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[6]&lt;/span&gt;&lt;p&gt;pngcrush 地址: &lt;em&gt;https://github.com/Kjuly/pngcrush&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[7]&lt;/span&gt;&lt;p&gt;pngcheck: &lt;em&gt;http://www.libpng.org/pub/png/apps/pngcheck.html&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[8]&lt;/span&gt;&lt;p&gt;pngdefry: &lt;em&gt;http://www.jongware.com/pngdefry.html&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[9]&lt;/span&gt;&lt;p&gt;TinyPng: &lt;em&gt;https://tinypng.com/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[10]&lt;/span&gt;&lt;p&gt;TinyPNG4Mac: &lt;em&gt;https://github.com/kyleduo/TinyPNG4Mac/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[11]&lt;/span&gt;&lt;p&gt;ImageOptim: &lt;em&gt;https://github.com/ImageOptim/ImageOptim&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[12]&lt;/span&gt;&lt;p&gt;ImageOptim-CLI: &lt;em&gt;https://github.com/JamieMason/ImageOptim-CLI&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[13]&lt;/span&gt;&lt;p&gt;Asset Catalog Tinkerer: &lt;em&gt;https://github.com/insidegui/AssetCatalogTinkerer&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[14]&lt;/span&gt;&lt;p&gt;iSpart: &lt;em&gt;http://isparta.github.io/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[15]&lt;/span&gt;&lt;p&gt;webp 工具: &lt;em&gt;https://developers.google.com/speed/webp/docs/using&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[16]&lt;/span&gt;&lt;p&gt;Code Size Optimization Mode in Swift 4.1: &lt;em&gt;https://swift.org/blog/osize/&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[17]&lt;/span&gt;&lt;p&gt;LinkMap 工具地址: &lt;em&gt;https://github.com/huanxsd/LinkMap&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[18]&lt;/span&gt;&lt;p&gt;fui: &lt;em&gt;https://github.com/dblock/fui&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[19]&lt;/span&gt;&lt;p&gt;我在 Uber 亲历的最严重的工程灾难: &lt;em&gt;https://www.infoq.cn/article/asjhHAmupqtcx5oGrb4b&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[20]&lt;/span&gt;&lt;p&gt;iOS 安装包瘦身实践: &lt;em&gt;https://xiaozhuanlan.com/topic/6147250839&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[21]&lt;/span&gt;&lt;p&gt;今日头条 iOS 安装包大小优化 - 新阶段，新实践: &lt;em&gt;https://zhuanlan.zhihu.com/p/358002160&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[22]&lt;/span&gt;&lt;p&gt;探究 WebP 一些事儿: &lt;em&gt;https://jelly.jd.com/article/6006b1035b6c6a01506c87a9&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[23]&lt;/span&gt;&lt;p&gt;Palette Images: &lt;em&gt;http://www.manifold.net/doc/mfd9/palette_images.htm&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[24]&lt;/span&gt;&lt;p&gt;iOS 减包实战：Compress PNG Files 作用分析: &lt;em&gt;https://cloud.tencent.com/developer/article/1368027&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[25]&lt;/span&gt;&lt;p&gt;iOS App 瘦身减肥记: &lt;em&gt;https://juejin.cn/post/6919751122760679437?utm_source=gold_browser_extension#heading-3&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[26]&lt;/span&gt;&lt;p&gt;iOS 安装包瘦身 （上篇）: &lt;em&gt;https://sq.163yun.com/blog/article/200385709022117888&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[27]&lt;/span&gt;&lt;p&gt;iOS 安装包瘦身（下篇）: &lt;em&gt;https://sq.163yun.com/blog/article/200384401846304768&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d90d340e4195cff07e60fd2ff028f0d0</guid>
<title>万字长文：如何更深刻的理解数据治理？</title>
<link>https://toutiao.io/k/xlcn22j</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;正文开始&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;本文有9000字，预计阅读20分钟，可以先收藏&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;这是一篇关于数据治理的综述，希望通过这篇文章让大家对数据治理有全新的认识，后面列出了所有的参考文献，方便拓展学习。&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;注：文末有&lt;span&gt;《数据治理规范》及《银行业金融机构数据治理指引》PDF下载&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;1、数据治理历史&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;探究“数据治理”的历史可以发展分为三个阶段。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;第一阶段早期探索&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，早在1988年由麻省理工学院的两位教授启动了全面数据质量管理计划（TDQM），可以认为是数据治理最初的雏形，同年，DAMA（国际数据管理组织协会）成立。时间一直走到2002年，数据治理概念首次出现在学术界，美国两位学者发表题为《数据仓库治理》的研究探讨了Blue Cross和Blue Shield of North Carolina两家公司的最佳实践，由此拉开了“数据治理”在企业管理中的大幕。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;第二阶段理论研究&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，在美国学者发表《数据仓库治理》的第二年，2003年DGI(国际数据治理研究所)成立，研究数据治理理论框架，与ISO国际标准化组织对数据管理与数据治理进行定义。直到2009年，DAMA国际发布DMBOK&lt;strong&gt;《数据管理知识体系指南》&lt;/strong&gt;[15]（以下简称《DAMA指南》），至此数据治理的理论框架基本固定。2020年DAMA国际发布DMBOK&lt;strong&gt;《数据管理知识体系指南原书第二版》&lt;/strong&gt;[16]（以下简称《DAMA指南第二版》）。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;第三阶段广泛接受与应用&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，伴随着数据仓库的建设，主数据管理与BI的实施，国内也逐步开始接受并利用数据治理的概念进行推广实践。我国数据治理之路在DMBOK基础上不断延伸和扩展，里程碑事件为在2015年提出了&lt;strong&gt;《数据治理白皮书》&lt;/strong&gt;[14]国际标准研究报告。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2018年6月7日，国家市场监督管理总局和国家标准化管理委员会发布《中华人民共和国国家标准公告（2018年第9号）》，批准&lt;strong&gt;《信息技术服务治理第5部分：数据治理规范》&lt;/strong&gt;[18]（以下简称《数据治理规范》）国家标准发布实施，标准号为GB/T 34960.5-2018，实施日期为2019年1月1日。《数据治理规范》是我国信息技术服务标准（ITSS）体系中的“服务管控”领域标准，属于《信息技术服务治理》的第5部分。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;金融等行业也在实践的过程中形成了自己的治理体系，比如银行在2018年发布了&lt;strong&gt;《银行业金融机构数据治理指引》&lt;/strong&gt;[19](以下简称《银行数据治理指引》)，标志着数据治理在我国银行金融机构中全面实践时代的到来，华为2020年出了本书&lt;strong&gt;《华为数据之道》&lt;/strong&gt;，可以看到数据治理在企业中也开始发挥出越来越重要的作用。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2、数据治理定义&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;百度百科：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据治理（Data Governance）是组织中涉及数据使用的一整套管理行为。由企业数据治理部门发起并推行，关于如何制定和实施针对整个企业内部数据的商业应用和技术管理的一系列政策和流程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;国际数据治理研究所（DGI）：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据治理是一个通过一系列信息相关的过程来实现决策权和职责分工的系统，这些过程按照达成共识的模型来执行，该模型描述了谁（Who）能根据什么信息，在什么时间（When）和情况（Where）下，用什么方法（How），采取什么行动（What）。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;DAMA指南:&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据治理是对数据资产管理行使权力和控制的活动集合（规划、监控和执行）。数据治理职能指导其他数据管理职能如何执行。数据治理是在高层次上执行数据管理制度。数据治理是通过连续性的计划和持续改进的过程来完成的。除了持续性的改进，数据治理的另外一个标志就是共同决策。有效的数据管理工作需要跨组织边界和系统边界。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;银行数据治理指引：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据治理是指通过建立组织架构，明确董事会、高级管理层、部门等职责要求，制定和实施系统化的制度、流程和方法，确保数据统一管理、高效运行，并在经营管理中充分发挥价值的动态过程。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;3、数据治理和数据管理辨析&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;大家有时表示难以理解数据治理是什么，治理本身是一个通用概念，与其发明新的概念，还不如将其他治理的概念和原则应用于数据治理，比如公司管理和公司治理。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（1）公司管理和公司治理&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;公司治理与公司管理的区别起源于公司治理理论中的法律模型。这一模型认为，股东由于向公司提供资本，而成为所有者，拥有法定的权力，其中最基本的权力就是选举董事会作为其受托人来进行公司的重大决策，再由董事会来选择和监督经理，进行日常的经营管理。这样公司治理与公司管理的区别在公司法关于董事会与经理之间的权责关系的界定上得到反映，即董事会从事治理，经理层从事管理。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;从目的上来看，公司治理的目的是为了降低代理成本，降低因代理人违背委托人意志而给委托人带来的损失和成本，而管理的目的是正确选择经营目标和高效率地实现经营目标，提高企业资源的利用效率;公司治理的主体是股东以及各利益相关者，而公司管理的主体是公司的经理层;公司治理涉及公司战略方针的制定、控制和监督，以及公司与外部的社会、经济和文化的联系;管理则是运用一定的方式来知道或监督某一活动，以达到特定的目的;公司治理的焦点在外部，公司管理的焦点在内部，公司治理假定一个开放的系统，而公司管理相对假定一个封闭的系统;公司治理基于战略考虑，公司管理基于任务考虑;公司治理考虑公司往哪个地方去，公司管理考虑怎样使公司到达那里。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;从程序和手段来看，公司治理强调的是董事会借以监督和激励经理的程序、方式和手段，重点强调利益关系的调整，公司管理关注的是为了达到公司的目标，经理应该做什么、怎么做，重点强调为达到特定目标应选择的手段、方法和管理技术，也就是说，公司治理是董事会的工作，而公司管理则是经理的事情。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;总结一下就是，公司治理是指最高管理层（董事会）利用它来监督管理层在实现战略目标的过程中，处于治理层既定的规则内（风险可控、绩效可见）。公司管理就是在既定的治理模式下，管理层为实现组织战略目标而采取的行动。 管理是在治理既定的“约束和激励”的规则下，对组织资源进行整合与配置，确定目标以及实现此目标所采取的行动。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.6293233082706767&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZNfjLg2x5qlERAdqb9ftedg3U2GKC8Oc23cH6vhgroIv5DVz5LcXhcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1330&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（2）数据管理和数据治理的区别&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据管理是指通过规划、控制与提供数据和信息资产职能，包括开发、执行和监督有关数据的计划、政策、方案、项目、流程、方法和程序，以获取、控制、保护、交付和提高数据和信息资产价值。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;数据治理是对数据资产管理行使权力和控制的活动集合（规划、监控和执行），指导其他数据管理职能如何执行，在高层次上执行数据管理制度。组织为实现数据资产价值最大化所开展的一系列持续工作过程，明确数据相关方的责权、协调数据相关方达成数据利益一致、促进数据相关方采取联合数据行动，下图示例了一个区别。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.6734434561626429&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZcNv9AYSTrjNJatILQwUJCIySUkvrn59UGPYb6YQS2vSzoSlfvTWmXg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1574&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;数据治理与数据管理的关系如下图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-backh=&quot;257&quot; data-backw=&quot;438&quot; data-ratio=&quot;0.58675799086758&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZQkMPfPOmGbqpyIDI81nrlrDAH8g66ial9byJEnh62QFINTuS8mn8gxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;438&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;数据治理的全过程：从范围来讲，数据治理涵盖了从前端事务处理系统、后段业务数据库到终端的数据分析，从源头到终端再回到源头形成一个闭环负反馈系统（控制理论中趋稳的系统），从目的来讲，数据治理就是对数据的获取、处理、使用进行监督（监管就是我们在执行层面对信息系统的负反馈），而监管的职能主要通过五个方面的执行力来保证——发现、监督、控制、沟通、整合。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;再举例子：&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;可以将审计、会计与数据治理放在一起比较，审计员和财务主管设置管理财务资产的规则，数据治理专家制定管理数据资产的规则，然后其它领域执行这些规则。财务审计人员实际上并不执行财务管理，数据治理确保数据被恰当的管理而不是直接管理数据，数据治理相当于将监督和执行的职责分离。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果你在一个基层单位做具体的数据安全工作，但总是被上级组织检查，你就是在做数据安全管理工作，而制定检查规范、总是来检查你的上级组织就是在做安全治理的工作，你可能觉得这些人真是吃饱了没事做，但站在全局的视角看，他们做的工作可能比你还更重要，因为他们要确保你在做正确的事。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果将数据治理类比于国家治理，&lt;strong&gt;数据治理相当于承担立法职能（策略和标准）和司法职能（问题管理），数据管理则承担行政职能（管理、服务和合规）&lt;/strong&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;搞懂了数据治理和数据管理的区别，就能理解将数据治理的职责甩给IT部门是多么荒谬的事情，因此DAMA一直强调，数据治理应该是业务部门与IT部门共同的职责。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;4、数据治理的内容&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《DAMA指南第二版》给出了数据治理的主要内容，包括&lt;span&gt;规划组织的数据治理&lt;/span&gt;、&lt;span&gt;制定数据治理战略&lt;/span&gt;、&lt;span&gt;实施数据治理&lt;/span&gt;和&lt;span&gt;嵌入数据治理，&lt;/span&gt;如下图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;1.2842592592592592&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZoicIAeEHibKjVBRrrHhwxEtnu2ic86ibP2ibGfonqYD6XqN3hMibUfVBmQiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;数据治理针对的主要对象如下图所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;1.0193236714975846&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8Zxne3MpPpmia7ibqDpDq7FhGF3XMq7pib8SVlm3oKuaQfia7aHkxNHK5xcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1035&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;以之可类比的是《数据治理规范》给出的数据治理框架，包括四大块：&lt;span&gt;顶层设计&lt;/span&gt;、&lt;span&gt;数据治理环境&lt;/span&gt;、&lt;span&gt;数据治理域&lt;/span&gt;及&lt;span&gt;数据治理过程&lt;/span&gt;，下面主要介绍这个框架。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.7669172932330827&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZDezop2c9GZiaCWhUIprMvIT7AqTo5NUibS4nNnK1plbSolfDdNl2dB9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1197&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;（1）顶层设计&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;战略规划&lt;/span&gt;：数据战略规划应保持与业务规划、信息技术规划一致，并明确战略规划实施的策略，至少应：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)理解业务和信息规划，调研需求并评估现状&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)制定数据战略规划，包括愿景、目标、任务、内容、边界、环境和蓝图等&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)指导数据治理方案的建立，包括但不限于实施主体、责权利、技术方案、实施策略和路线等&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;d)明确风险偏好、符合性、绩效和审计等要求、监控和评估数据治理的实施并持续改进&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以下是《华为数据之道》一书给出的华为数据工作的愿景和目标：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;华为数据工作的愿景：实现业务感知、互联、只能和ROADS体验，支撑华为数字化转型。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;华为数据工作的目标：清洁、透明、智慧数据，使能卓越运营和有效增长。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.49930651872399445&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8Zqk9LLuibZXev872pkjP34x2j7QOic1SV954pDDXeXT1yicYicz6DMcU2vQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2163&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;组织构建&lt;/span&gt;：组织构建应聚焦责任主体及责权利，通过完善组织机制，获得利益相关方的理解和支持，制定数据管理的流程和制度，以支撑数据治理的实施：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)建立支撑数据战略的组织机构和组织机制，明确相关的实施原则和策略&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)明确决策合适实施机构，设立岗位并明确角色，确保责权利的一致&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)建立相关的授权、决策和沟通机制，保证利益相关方理解、接受相应的职责和权利&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;d)实施决策、执行、控制和监督等职能，评估运行绩效并持续改进和优化&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;以下是《DAMA指南》[15]给出的一个组织范例：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.7510013351134847&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8Z5Kb2dZtMz5ke2ib5uEKZS9h7ga2rqosR2icFiakCntLRpunRvmaibUORwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1498&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;架构设计&lt;/span&gt;：架构设计应关注技术架构、应用架构和架构管理体系等，通过持续的评估、改进和优化，以支撑数据的应用和服务：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)建立与战略一致的数据架构，明确技术方向、管理策略和支撑体系，以满足数据管理、数据流通、数据服务和数据洞察的应用需求&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)评估数据架构设计的合理性和先进性，监督数据架构的管理和应用&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)评估数据架构的管理价值和有效性，并持续改进和优化&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（2）数据治理环境&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;内外部环境&lt;/span&gt;：组织应分析业务、市场和利益相关方的需求，适应内外部环境变化，支撑数据治理的实施&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)遵循法律法规、行业监管和内部管控，满足数据风险控制、数据安全和隐私的要求；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)遵从组织的业务战略和数据战略，满足利益相关方需求；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)识别并评估市场发展、竞争地位和技术变革等变化；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;d)规划并满足数据治理对各类资源的需求，包括人员、经费和基础设施等。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;促成因素&lt;/span&gt;：组织应识别数据治理的促成因素，保障数据治理的实施。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)获得数据治理决策机构的授权和支持；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)明确人员的业务技能及职业发展路径，开展培训和能力提升；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)关注技术发展趋势和技术体系建设，开展技术研发和创新；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;d)制定数据治理实施流程和制度，并持续改进和优化；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;e)营造数据驱动的创新文化，构建数据管理体系和数据价值体系；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;f)评估数据资源的管理水平和数据资产的运营能力，不断提升数据应用能力。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（3）数据治理域&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;数据管理体系&lt;/span&gt;：组织应围绕&lt;span&gt;数据标准&lt;/span&gt;、&lt;span&gt;数据质量&lt;/span&gt;、&lt;span&gt;数据安全&lt;/span&gt;、&lt;span&gt;元数据管理&lt;/span&gt;和&lt;span&gt;数据生存周期&lt;/span&gt;，开展数据管理体系的治理，至少应：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)评估数据管理的现状和能力，分析和评估数据管理的成熟度；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)指导数据管理体系治理方案的实施，满足数据战略和管理要求；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)监督数据管理的绩效和符合性，并持续改进和优化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;数据价值体系&lt;/span&gt;：组织应围绕&lt;span&gt;数据流通&lt;/span&gt;、&lt;span&gt;数据服务&lt;/span&gt;和&lt;span&gt;数据洞察&lt;/span&gt;等，开展数据资产运营和应用的治理，至少应：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)评估数据资产的运营和应用能力，支撑数据价值转化和实现；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)指导数据价值体系治理方案的实施，满足数据资产的运营和应用要求；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)监督数据价值实现的绩效和符合性，并持续改进和优化。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;可以看到，《数据治理规范》共包括&lt;span&gt;数据标准&lt;/span&gt;、&lt;span&gt;数据质量&lt;/span&gt;、&lt;span&gt;数据安全&lt;/span&gt;、&lt;span&gt;元数据管理&lt;/span&gt;、&lt;span&gt;数据生存周期、数据流通&lt;/span&gt;、&lt;span&gt;数据服务&lt;/span&gt;和&lt;span&gt;数据洞察&lt;/span&gt;等八项数据治理内容，而在《DAMA指南》中则包括十项，分别为&lt;span&gt;数据架构管理、数据开发、数据操作管理、数据安全管理、参考数据和主数据管理、数据仓库和商务智能管理、文档和内容管理、元数据管理和数据质量管理&lt;/span&gt;等，如下图所示。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.55390625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8Zlmxz4KIsULvcMSCjjqjs4E8jFkc4JvtcoxbRaf0gWHpsz7Oz22uIHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;《数据治理规范》相对于《DAMA指南》突出了&lt;span&gt;数据价值体系的治理内容&lt;/span&gt;。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（4）数据治理过程&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;统筹和规划：&lt;/span&gt;明确数据治理目标和任务，营造必要的治理环境，做好数据治理实施的准备，包括：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)评估数据治理的资源、环境和人员能力等现状，分析与法律法规、行业监管、业务发展以及利益相关方需求等方面的差距，为数据治理方案的制定提供依据；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)指导数据治理方案的制定，包括组织机构和责权利的规划、治理范围和任务的明确以及实施策略和流程的设计；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)监督数据治理的统筹和规划过程，保证现状评估的客观、组织机构设计的合理以及数据治理方案的可行。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;构建和运行：&lt;/span&gt;构建数据治理实施的机制和路径，确保数据治理实施的有序运行，包括：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)评估数据治理方案与现有资源、环境和能力的匹配程度，为数据治理的实施提供指导；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)制定数据治理实施的方案、包括组织结构和团队的构建，责权利的划分、实施路线图的制定、实施方案的选择以及管理制定的建立和运行等；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)监督数据治理的构建和运行过程，保证数据治理实施过程与方案的符合、治理资源的可用和治理活动的可持续。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;监控和评价：&lt;/span&gt;监督数据治理的过程，评价数据治理的绩效、风险与合规，保障数据治理目标的实现，包括：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)构建必要的绩效评估体系、内容体系或审计体系，制定评价机制、流程和制度；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)评价数据治理成效与目标的符合性，必要时刻聘请外部机构进行评估，为数据治理方案的改进和优化提供参考；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)定期评价数据治理实施的有效性、合规性，确保数据及其应用符合法律法规和行业监管要求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;改进和优化：&lt;/span&gt;改进数据治理方案，优化数据治理实施策略、方法和流程，促进数据治理体系的完善，包括：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)持续评估数据治理相关的资源、环境、能力、实施和绩效等，支撑数据治理体系的建设；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)指导数据治理方案的改进，优化数据治理的实施策略、方法、流程和制度，促进数据管理体系和数据价值体系的完善；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)监督数据治理的改进和优化过程，为数据资源的管理和数据价值的实现提供保障。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;5、银行数据治理实践&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;2018年5月21日中国银保监会正式发布的《银行业金融机构数据治理指引》全文共7章55条，强调了数据治理架构的建立，明确了数据管理和数据质量控制的要求，还明确了全面实现数据价值的要求，要求加强监管监督，与银行的监管评级挂钩，这里以顶层设计的&lt;span&gt;战略规划、组织构建&lt;/span&gt;和数据治理域的&lt;span&gt;数据标准体系构建&lt;/span&gt;为例来说明治理过程[10][11][12][13]。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（1）顶层设计-战略规划&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《银行数据治理指引》中的第九、第十七条明确提出了制定数据战略的观点。数据资产如何变现、如何创造收益已成为了银行的共同话题，数据战略主要涉及现有业务管理的数字化、创造新的数字化业务等内容。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)现有业务管理的数字化，比如告别纸质、线下等一切非数据化、系统化的业务形式，控制前置提升审批效率，绩效可视化；又比如通过对网点运营、市场营销、费用成本、绩效管理等方面的数据分析，帮助银行识别低效的流程环节，进行资源配置优化，提高运营效率、降低成本。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)创造新的数字化业务，比如管理层借助高质量的数据进行挖掘、分析，实现以客户为中心的业务转型，对银行未来战略方向进行更准确的前瞻性预测，提升银行竞争力；又比如成立金融服务和科技子公司，开发机器人流程自动化应用（RPA）、金融云服务等产品，进行能力输出。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;（1）顶层设计-组织构建&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《银行数据治理指引》中的第八至第十四条提出了组织架构的要求，比如第八点，银行业金融机构应当建立组织架构健全、职责边界清晰的数据治理架构，明确董事会、监事会、高级管理层和相关部门的职责分工，建立多层次、相互衔接的运行机制。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;银行根据数据战略、自身组织架构特征，构建数据治理组织架构，其的分散和集中程度各有不同。组织管理分散且数据需求较少或复杂程度较低的银行，一般采用“分散模式”，各部门负责本领域的数据管理和应用；数据需求较多且复杂程度较高的银行，可采用“归口管理模式”、“集中+派驻模式”、“全集中模式”，具体选择哪种方式，在银行数据发展的阶段中同时也取决于归口管理部门的人力投入与专业能力，专业能力主要涉及组织沟通、业务理解、技术开发等方面。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.4057142857142857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZbMrdqWBYicQlj0Hflx4zxNxjefKnajmstow8P2mMbAhw9ENnFB2kVEA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;目前监管明确要求银行设置数据治理归口管理部门，下图以“归口管理模式”为例进行了示例：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.6422018348623854&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZDwNwicgRcEV9peSyy5hd5siaMveBaZJQx7aOOUm0ucUV4EdPK8RNXI8g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;545&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;（2）数据治理域-数据管理体系（数据标准）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;《银行数据治理指引》中的第二十条、二十三条给出了建设数据标准的要求，比如第二十条，银行业金融机构应当建立覆盖全部数据的标准化规划，遵循统一的业务规范和技术标准。数据标准应当符合国家标准化政策及监管规定，并确保被有效执行。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;根据中国人民银行定义的银行业标准体系，将数据标准归入银行的通用基础标准。作为银行通用性、全局性、基础性的规范，指导银行业务的开展和系统建设。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;0.3985714285714286&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZS3SFx74KZKemUJdIQAuKPnaAmeJpLOzHdJjfYlHGsd20CRaLTbkPTQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;700&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在实践过程中，数据标准可分为基础类数据标准以及指标类数据标准。基础数据标准是针对业务开展过程中直接产生的数据制定的标准化规范；指标数据标准是针对为满足内部分析管理需要以及外部监管需求对基础类数据加工产生的数据制定的标准化规范。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;从银行层面来说，全行层级统一的数据标准是必须要做的，而且是要做到能够长期有效和可落地执行的。由谁来牵头、谁来管理、谁来执行？——各个银行均有不同实践，但是实践效果来看，建议在数据标准制定过程中，将角色划分为三类：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.5303030303030303&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZHpDlPEISCHtclE1hzib2jod1YfU1hribm0x3Pkg2wMr9GWeNyCJ86F7A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;660&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;对于数据标准管理工作而言，数据治理归口管理部门是作为牵头者的角色，需要做到组织数据治理小组，将技术管理与业务管理的相关人员协同起来，完成数据标准制定工作。为数据标准制定提供资源协调、统筹安排等便利。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;业务管理部门在数据标准制定中承担着业务规范者的角色。这些部门在数据标准制定过程中承担着提供权威业务定义和数据标准业务含义管理的多重职责。如果银行将数据治理归口管理部门确定在某一业务管理部门，则该部门需要同时承担起工作牵头和规范定义双重责任。业务管理部门不仅能够提出业务规范的要求，同时对技术属性，也可以提出初步的建议方案，与信息技术部门协同商榷。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;信息技术部门包括信息技术管理部门及部分银行已成立的专门的数据管理部门。信息技术部门作为数据标准的技术规范执行者，其职责不仅在于制定过程中确认技术属性具有可落地性，符合已建信息系统现状，还在于将确认后的数据标准实际落实在信息系统中，确保数据标准能够得到有效落地执行。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在大量实践经验中，银行已然总结出一套数据标准编制的有效方法：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)&lt;span&gt;制度保障先行&lt;/span&gt;：构建层次分明的制度体系，形成从章程、专项管理办法到工作细则三个梯次的制度层级。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.4228571428571429&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZNzt3PWMXC2SGtG5ANT2rRdYOl00JiaA9iaHBCo6BGLr2epQm79yxCFJw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;在数据标准管理中，针对数据标准的专项管理办法和具体工作细则必须首先予以明确。在制度中明确各个角色以及定义相应的分工界面，通过工作细则和相关的模板细化管理方式，固化管理流程，为制定数据标准、管理数据标准提供指导性意见。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;比如工作细则需要打通数据治理在执行操作层面的“最后一公里”，指导一线工作人员按照规范化流程开展数据治理工作，为全行数据治理和提升奠定基础。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.43&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8ZyjTbpX1ZXjxBzqulHicrYB7szzvHQPZRtbjhtms7iaQIMvdMxnBU3zUg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;b)&lt;span&gt;归口部门发挥牵头作用&lt;/span&gt;：归口管理部门需要积极发挥带头作用，推动和监督流程执行，为数据标准制定工作，提供人力、技术、资金等关键资源，并获得管理层的行政支持和充分授权，通过激励和问责考核体系，推进数据标准工作的制定与执行落地。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)&lt;span&gt;自下而上归纳与由上而下演绎相结合&lt;/span&gt;：数据标准梳理需要首先梳理内外部需求，细化形成对业务属性、技术属性的要求；一方面需要自下而上整理信息系统中的数据情况，同时也需要自上而下定义数据主题、细化分类，两者结合才能够实现全面整体的数据视图，形成有效的数据规范要求。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;img data-ratio=&quot;0.29&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQAw3UFyYibt54pdTJWnRJia8Zs1TEEUdfosyDL9XLOC8Eib6eNN4RYmPPIfoe3VJ0coic3XbDtogUjPww/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;从银行数据标准的治理可以看到，组织应明确数据标准的内涵和范围，建立数据标准体系及其管理机制，以支撑数据的标准化建设，保障数据在应用过程中的一致性，至少应：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;a)明确数据标准的内涵和范围，制定通用的数据规范，包括但不限于数据分类、数据类型、数据格式和编码规则等，保障数据应用的过程中的一致性；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;b)建立数据标准的实施方案和计划，推进数据标准化实施的落地；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;c)建立数据标准化管理机构和机制，明确责权利和流程，开展数据标准化的实施；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;d)制定数据标准管理制度，保障数据标准化的实施和落地；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;e)保障数据标准的先进性、前瞻性和技术层面的可执行性，满足数据应用发展需要，持续开展数据标准的更新。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;基本就讲这么多，文末列出了本文引用的所有参考文献，方便你拓展阅读，希望对你有所启示。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;PDF获取方法：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第一步，关注公众号，将本文章&lt;/span&gt;&lt;span&gt;&lt;strong&gt;分享&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;到你的朋友圈&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;第二步，分享&lt;span&gt;完朋友圈后，&lt;/span&gt;公众号后台回复“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;gov2021&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”即可获取下载方法&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.10789473684210527&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;380&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQBeWQ9Jf4ZVoJhYiaLHh2ThtV3ew4p7kZrjoU6nYAY1a3qGJVjHFP7r4MjehMzASG3IyTvubhq5Mqg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU4NjgzNzk4MQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQC18panFv8VgOcQGCz2HKrUBayxrxsYu5OH4OpSvEaqSFkmunggw6JIYWRoavAfypwxjh1pdfUzng/0?wx_fmt=png&quot; data-nickname=&quot;大鱼的数据人生&quot; data-alias=&quot;dayu_data&quot; data-signature=&quot;我是大鱼先生，CDO，跟你分享有关数据的一切！&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;参考文献&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;1、作者：yazone &lt;span&gt;来源：&lt;/span&gt;&lt;span&gt;知乎&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.zhihu.com/question/20096586/answer/1681362183  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、作者：亿信华辰 &lt;span&gt;来源：&lt;/span&gt;&lt;span&gt;知&lt;/span&gt;&lt;span&gt;乎&lt;/span&gt;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.zhihu.com/question/61097142/answer/821387693&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、公司治理与公司管理有什么区别?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4、马欢：DAMA数据管理知识体系及对制造业数据治理的一点思考&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.163.com/dy/article/FQGFI4VD0531CS6R.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5、【独家】数据治理为数据资产保驾护航 上篇 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http://www.dama.org.cn/drupal620/zh-hans/node/137&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;6、上篇 ▏数据治理为数据资产保驾护航（实录+PPT+视频）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http://www.cbdio.com/BigData/2017-03/01/content_5461153.htm&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;7、下篇 ▏数据治理为数据资产保驾护航（实录+PPT+视频）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http://www.cbdio.com/BigData/2017-03/02/content_5462029.htm&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;8、数据资产管理理论框架和能力建设——刘晨 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.dams.org.cn/speech-3-7.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;9、DGI《数据治理框架》全文中文翻译 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.secrss.com/articles/8879&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;10、【数据治理实践】第二期：顶层设计之数据战略、组织架构&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www2.deloitte.com/cn/zh/pages/financial-services/articles/banking-financial-institutions-data-strategy-top-level.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;11、【数据治理实践】第一期：银行业数据治理实践难点及应对系列文章开篇&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www2.deloitte.com/cn/zh/pages/financial-services/articles/banking-financial-institutions-data-governance-opening.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;12、【数据治理实践】 第三期：数据治理建章立制&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www2.deloitte.com/cn/zh/pages/financial-services/articles/banking-financial-institutions-data-regulations.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;13、第五期：基础数据标准 – 从制定到落实 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www2.deloitte.com/cn/zh/pages/financial-services/articles/banking-financial-institutions-data-basic-standard.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;14、研究| 《数据治理白皮书》国际标准研究报告要点解读 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;http://www.databanker.cn/info/75468&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;15、DAMA数据管理知识体系指南&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;16、DAMA数据管理知识体系指南（原书第二版）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;17、DGI数据治理框架&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;18、GB∕T 34960.5-2018 信息技术服务 治理 第5部分数据治理规范&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;19、 银行业金融机构数据治理指引&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.10789473684210527&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;380&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQCwoia1icXCvsgbMTPscibtQIVX3XibXERZo3RhhjBPVEPksoDZI4fia734jHWq3YX71Eo9JDACCyqHF1g/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjgzNzk4MQ==&amp;amp;mid=2247486310&amp;amp;idx=1&amp;amp;sn=bdaa8635e296ad05efec0d067c1d79bf&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjgzNzk4MQ==&amp;amp;mid=2247486132&amp;amp;idx=1&amp;amp;sn=fb13b3c3029518fe2e0103e9f41387b9&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;一文讲透数字化转型的本质！&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjgzNzk4MQ==&amp;amp;mid=2247485149&amp;amp;idx=1&amp;amp;sn=e95a98fa387ccace2517809d7cd91c1b&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;数据治理平台工具前世今生&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjgzNzk4MQ==&amp;amp;mid=2247485141&amp;amp;idx=1&amp;amp;sn=5cc4d8ab3199c02f0649e07a323055fc&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;数据治理路上的“四个魔鬼”&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjgzNzk4MQ==&amp;amp;mid=2247485148&amp;amp;idx=1&amp;amp;sn=f2ae27d4cd4c715548559e31acd1b318&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;全链路数据治理在网易严选的实践&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjgzNzk4MQ==&amp;amp;mid=2247485087&amp;amp;idx=1&amp;amp;sn=da2eae9a2fcac480213f4e0199cd7167&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;DCMM数据管理能力成熟度评估模型，再解读&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjgzNzk4MQ==&amp;amp;mid=2247485031&amp;amp;idx=1&amp;amp;sn=df4510aec11236928185521b7e589a82&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;从数据资源到数据资产的路有多长？&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjgzNzk4MQ==&amp;amp;mid=2247484358&amp;amp;idx=1&amp;amp;sn=1cee3f2ac76b90ec838b4636f51aceec&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;数据治理框架解读分析&lt;/span&gt;&lt;span/&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU4NjgzNzk4MQ==&amp;amp;mid=2247484357&amp;amp;idx=1&amp;amp;sn=6bd5e0ff0f5c36d92653839a9b2ccad8&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;点击左下角“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;阅读原文&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”查看更多精彩文章，后台回复【&lt;span&gt;&lt;strong&gt;&lt;span&gt;加群&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;】申请加入万人&lt;/span&gt;&lt;span&gt;&lt;strong&gt;数据学习&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;社群&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.4168987929433612&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1077&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/CWCpl8m0oQC3kCFvcnJqRQ38A5DabuORHXoPiclkfYyFbc3o4AyRsz3x15BbWS184eX232bBxcGVBdK71YbGIEg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>