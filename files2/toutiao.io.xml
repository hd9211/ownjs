<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>492648e91b5b0f73105be2abc7dbcc42</guid>
<title>2022 年升职加薪就靠它了！抓紧时间！</title>
<link>https://toutiao.io/k/fitvcz1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;开发者头条&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;kaifazhetoutiao&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;程序员分享平台 | 官方应用下载地址：http://toutiao.io/download&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>bc30ec71cff02337f98b8aaaa1011dc0</guid>
<title>深度分页，我都是这么玩的</title>
<link>https://toutiao.io/k/p61u81q</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;weui-dialog&quot;&gt;
      &lt;p class=&quot;weui-dialog__hd&quot;&gt;&lt;strong class=&quot;weui-dialog__title&quot;&gt;&quot;Top Stories&quot; is disabled&lt;/strong&gt;&lt;/p&gt;
      &lt;p class=&quot;weui-dialog__bd&quot;&gt;
        Enable &quot;Top Stories&quot; in &quot;Settings&quot; &amp;gt; &quot;General&quot; &amp;gt; &quot;Manage Discover&quot;      &lt;/p&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d265d35077231d4586b6820fd4ef7611</guid>
<title>2022 年要考虑的 7 种 Docker 替代方案</title>
<link>https://toutiao.io/k/ywk73n5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.15625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YriaiaJPb26VN5koUu22VNrAnuXDfGLRs8w4tRT63wErRVia5ic9J4ZyzWLDwcKT1Ldrzibn8lWIAnCQmkMCAVEtuIg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;section&gt;作者 | Sudip Sengupta&lt;/section&gt;&lt;section&gt;
译者 | 辛晓亮&lt;/section&gt;&lt;p&gt;许多企业都采用容器来进行开发和管理稳定的应用程序，Docker 是该领域功能最丰富且使用最广泛的工具之一，已有数百万应用程序在使用它。Docker 本身有着强大的独立生态系统，并提供了一个广泛的工具包来管理容器化过程，但 Docker 还有其他替代品，它们提供了独特的用例和功能。本文深入探讨了 Docker 七个替代品，其中包括一系列综合平台，如 Docker 以及可以作为 Docker 生态系统组件替代品的工具等。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;Podman&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2852852852852853&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17v7vcib7WiaCFZA3GyyNEGfb7vuNsDSIqF2GeqZKovvBRsCDRibyomDqQw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1332&quot;/&gt;&lt;/p&gt;&lt;p&gt;Podman 是 RedHat 开发的一个无守护程序的开源 Linux 原生容器引擎，用于构建、运行和管理 Linux OCI 容器与容器镜像。尽管 Podman 提供了一个类似于 Docker 的命令行界面，但它的操作方式并不相同。&lt;/p&gt;&lt;p&gt;Docker 和 Podman 之间的一个显著区别是，Docker 运行一个持久的、自给自足的运行时来管理其对象或称为 dockerd 的守护进程；而 Podman 并不依赖守护进程来工作，相反，Podman 将容器作为子进程启动，它还直接与注册表和使用运行时进程的 Linux 内核进行交互，也正因如此，Podman 被称为无守护进程的容器技术。&lt;/p&gt;&lt;p&gt;没有守护进程提高了 Podman 作为容器引擎的灵活性，消除了对单个进程的依赖。Podman 与 Docker 的另一大不同就是它不需要 root 权限。这一特点提供了一个额外的安全缓冲区，限制了某些可能操纵关键系统设置并使容器和包含的应用程序易受攻击的潜在危险进程。&lt;/p&gt;&lt;p&gt;此外，Podman 可以运行 pod-- 包含一个或多个容器的集合，作为一个单一实体管理，并利用共享的资源池。通过这项能力，Podman 用户可以将他们的工作负载转移到 Kubernetes。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;L  X  D&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.34294385432473445&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17ygsk3jCfFca9MTzgDHXTCIU5dGx6KwPNz0GwGEzm4wFF5uALsjxIrg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1318&quot;/&gt;&lt;/p&gt;&lt;p&gt;LXD 一个专为 LXC Linux 容器设计的开源容器引擎。LXC 使用户能够在隔离的容器或类似于虚拟机的虚拟环境中运行应用程序，而无需承担管理单个内核的技术负担。LXD 提供了一个用于连接 LXC 软件库的接口，同时创建了一个守护进程，负责处理网络、数据存储和管理多个 LXC 容器。尽管 LXC 可以作为独立工具运行，但它拥有有限的功能子集。LXD 提供了这些附加功能，因此依赖于 LXC 工作。&lt;/p&gt;&lt;p&gt;LXD 与 Docker 的主要区别如下。与 Docker 建议每个容器只有单个进程的设计模式不同，LXC/LXD 中的容器可以运行多个进程。此外，Docker 容器可移植性更强，为与 LXD 相比，Docker 有效地抽象了资源。最后，Docker 支持在 Windows 和 macOS 环境上运行，但 LXD 只支持 Linux。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;containerd&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3249444855662472&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17TiaFWSIfjhzEYEW6Pk4M4etCCh8I9B3sEcL0mLo8x5AniayEAMtVmbOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1351&quot;/&gt;&lt;/p&gt;&lt;p&gt;containerd 是一个高级容器运行时，它通过在底层运行 runc 以提供操作系统和容器引擎之间的接口。runc 是一个支持 Windows 和 Linux 的守护进程，它抽象了特定于操作系统的功能，使运行和监督容器以及管理图像传输和存储变得更加容易。&lt;/p&gt;&lt;p&gt;containerd 提供的这种抽象级别功能消除了进行若干低级系统调用的复杂性，使得容器的可移植性得以实现。然而，与 Docker 不同，containerd 不处理镜像的构建或卷的创建。有趣的是，containerd 是 Docker 的默认运行时，现在它是一个独立的工具，就像 runc 一样。这也使得 containerd 像 Kubernetes 一样成为一个方便的编排工具，containerd 也是最受欢迎的 Docker 替代品之一。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;Buildah&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2906875543951262&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17ZcY4FuiauOUibQicmxfyEy78iaeJq9rHIefza085fsHJy4I3eaZp5XYBpQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1149&quot;/&gt;&lt;/p&gt;&lt;p&gt;Buildah 是红帽基金会为容器化系统开发的一个 OCI 镜像构建工具。它是一个提供类似于在 Docker 中运行 &lt;code&gt;docker build&lt;/code&gt; 的功能的工具。Buildah 经常与 Podman 一起使用，互作补充，例如，Podman 在后台使用 Buildah 功能的子集来实现其构建过程。&lt;/p&gt;&lt;p&gt;它可以从 Dockerfile 或 Containerfile 中构建镜像，并生成与使用 Docker 创建的镜像相同的镜像，因为这些镜像是符合 OCI 的。此外，它还提供了对镜像层的细粒度控制，允许在一个单一层中进行多次修改提交。它还提供了从头开始构建镜像的能力，即不包含任何内容的镜像，这让用户可以自由地只添加运行应用程序所需的软件包。最后，与 Docker 不同的是，在 Buildah 中，用户只能看到他们构建的镜像。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;BuildKit&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2831230283911672&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17cyEvAcrCF9Uu7qQxbcicbBxRgu3mf5tO0hFK7qjV4246pJG24Uk6PicQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1268&quot;/&gt;&lt;/p&gt;&lt;p&gt;BuildKit 是第二代构建镜像的 Moby 项目，在较新的 Docker 版本中作为实验性功能提供。&lt;span&gt;与 Do&lt;/span&gt;&lt;span&gt;cker 一样，它使用守护程序&lt;/span&gt;运行。不过，标准 Docker 构建和 BuildKit 之间的主要区别之一是，前者是逐层构建，后者提供并行构建处理。这个功能提高了性能，使构建速度更快。BuildKit 还允许跳过未使用的阶段，改善增量构建，并允许无根构建。此外，BuildKit 使用一个缓存来减少重建图像每一层的需要。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;Kaniko&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3467297084318361&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17oDFlibicibMlDxGwy9MnM3QVwZiaBcuhKdrMNFNzAK4fdUc0N5m7ZTXjKQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1269&quot;/&gt;&lt;/p&gt;&lt;p&gt;Kaniko 是一个谷歌镜像构建工具，它可以从 Dockerfile 构建镜像。它和 Buildah 一样是无守护进程的，但更侧重于在 Kubernetes 中构建镜像。Kaniko 对于本地开发实例来说不是很方便，因为它通常作为镜像与 Kubernetes 等容器编排器一起运行。对于 Kubernetes 集群中的持续集成和交付管道，Kaniko 可以成为一个实用的工具。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;RunC&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3230437903804738&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/YriaiaJPb26VPdOhe0afO6YmFOckTwrr17FAXBYfic6Y7wwhYfHTAMrY5HE72EoggsRuXmnrmGQz1AOP3TZiajOOmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1393&quot;/&gt;&lt;/p&gt;&lt;p&gt;RunC 以前是嵌入到 Docker 架构中的一个模块，在 2015 年作为独立工具发布。此后，它成为一个广泛使用的、标准化的、可互操作的容器运行时。DevOps 团队可以将其作为 Docker 或其他定制容器引擎的一部分。RunC 属于容器化生态系统中的容器运行时部分。容器运行时是处理容器运行的容器引擎中使用的较低级别的组件。&lt;/p&gt;&lt;p&gt;尽管 Docker 为组织在容器化过程中所需的各个方面提供了一个全面的工具包，但某些 DevOps 功能可能需要探索其他替代方案。但是，在选择任何此类选项时也需牢记此类替代方案所运行的主机操作系统及其使用情况。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;原文链接：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.containiq.com/post/docker-alternatives&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;点击底部&lt;/span&gt;&lt;span&gt;阅读原文&lt;/span&gt;&lt;span&gt;访问 InfoQ 官网，获取更多精彩内容！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span photoshow-hd-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/YriaiaJPb26VNPrPHVrV124MK6fhrWJSGLwiapMkaCSpJichgaCz6JzXr413C6xfEjiasT96KgRdhjRP3CHnaEHQe7A/&quot;&gt;今日好文推荐&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2651106089&amp;amp;idx=1&amp;amp;sn=4eb1903a395a9544767d5383bd4cfbff&amp;amp;chksm=bdb9537a8aceda6c96a107d348b5e954fb2107f89870b67a6c50f557c7969029f21b4240aa2d&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;75%新项目都可以“无脑”选择单体架构&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;75%新项目都可以“无脑”选择单体架构&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2651105854&amp;amp;idx=1&amp;amp;sn=346fc790136616fc3e088acc8bf0f950&amp;amp;chksm=bdb9526d8acedb7bff88e236e17002102f92918bb3245796020239927cfa21ce5bd341caad6a&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;InfoQ 最新 Java 发展趋势报告&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;InfoQ 最新 Java 发展趋势报告&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2651105779&amp;amp;idx=1&amp;amp;sn=9d06a049aa0429b3eb56c6af73305bb0&amp;amp;chksm=bdb951a08aced8b68c97d4d0ed16bdeee3128bd0e081b173b2c35e955c7c09e737af191c2694&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;AlphaCode编程比赛击败一半程序员；微信超1亿人视频号看春晚，6.6亿人抢红包；Flutter 2.10发布 ｜ Q资讯&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;AlphaCode编程比赛击败一半程序员；微信超1亿人视频号看春晚，6.6亿人抢红包；Flutter 2.10发布 ｜ Q资讯&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=2651105739&amp;amp;idx=1&amp;amp;sn=0c9a1d1a5b45c7a5a5c6779cb3f2a232&amp;amp;chksm=bdb951988aced88e599f05b2cb023a267e074a033cfb395d5742b5dbd7c5fd08ae924bd5df32&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;这十个事件，让“永不宕机”变成了一个笑话&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot; hasload=&quot;1&quot;&gt;这十个事件，让“永不宕机”变成了一个笑话&lt;/a&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.1515625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/YriaiaJPb26VNBX66P2F9dF2yuYfbcibGMuaBYgvK62MGPE9HhgU2vptFAUZdaO2cGKCsP4h1DnibIGywKSkFv9b6g/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;640&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;点个在看少个 bug&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;👇&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d2da361ab4a9cb90ed3bac9d2ede6a8d</guid>
<title>我做基础架构学到的42件事</title>
<link>https://toutiao.io/k/k6tjws1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.562962962962963&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/hBL5R2neMA0j12Nst4bfv3gk0Qato1iaGibd2e4wLCXa8rvRc7cwRgn2lRRE0szMKsXrG2Mw8icSgcIOE7oQF4FQw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;h3 data-sourcepos=&quot;3:1-3:13&quot;&gt;译者序&lt;br/&gt;&lt;/h3&gt;&lt;p data-sourcepos=&quot;5:1-5:411&quot;&gt;最近读到了分布式系统研究者 Mahesh Balakrishnan 的一篇博客《42 things I learned from building a production database》。同样做基础架构，看完大佬总结的经验后拍案叫绝，其中有几条简直是真知灼见，故翻译了全文。&lt;/p&gt;&lt;blockquote data-sourcepos=&quot;7:1-7:193&quot;&gt;&lt;p data-sourcepos=&quot;7:3-7:193&quot;&gt;Mahesh Balakrishnan 是 Facebook Delos 项目的负责人。Delos 对标 ZooKeeper，关于 Delos 更多详细细节其团队已经发了两篇 paper，感兴趣的同学可以自行搜索。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-sourcepos=&quot;10:1-10:230&quot;&gt;&lt;strong&gt;译注&lt;/strong&gt;：IC = Individual Contributor，即独立贡献者，Facebook 开发团队的一个术语，&lt;strong&gt;指那些不是经理、不是 team leader、不是任何领导职位的编码人员&lt;/strong&gt;，可以理解为一线开发人员。&lt;/p&gt;&lt;p data-sourcepos=&quot;10:1-10:230&quot;&gt;&lt;span&gt;&lt;strong&gt;以下为正文：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-sourcepos=&quot;13:1-13:24&quot;&gt;对客户（用户）&lt;/h2&gt;&lt;p data-sourcepos=&quot;15:1-15:86&quot;&gt;（1）&lt;strong&gt;让你的客户开心；否则这篇文章的其余部分都无关紧要&lt;/strong&gt;。&lt;/p&gt;&lt;p data-sourcepos=&quot;17:1-17:163&quot;&gt;（2）要注意拥有正确数量的客户（刚开始时，就一个）和合适的客户（他允许你构建关键技术）；并小心地增加这个数字。&lt;/p&gt;&lt;p data-sourcepos=&quot;19:1-19:232&quot;&gt;（3）直接与客户对接。很多团队内部冲突可以通过一句“我刚才和客户谈过，他们说......”来解决。在做基础架构时，我们往往不需要猜测客户的需求，我们可以直接问他们。&lt;/p&gt;&lt;p data-sourcepos=&quot;21:1-21:187&quot;&gt;（4）但要意识到客户可能无法表达他们真正需要的东西；不要只看到需求的表面价值，而要花时间详细地理解他们的用例。阅读他们的代码。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;23:1-23:15&quot;&gt;项目管理&lt;/h2&gt;&lt;p data-sourcepos=&quot;25:1-25:140&quot;&gt;（5）要有一个简单明了的使命宣言来表达你存在的理由。Delos 的宣言是：我们将成为 FB infra 的可靠基础。&lt;/p&gt;&lt;p data-sourcepos=&quot;27:1-27:181&quot;&gt;（6）反复进行任务难度的评估；决策者可能没有时间、倾向、上下文或培训来进行评估，而且可能会把它们弄错（简直是）几个数量级。&lt;/p&gt;&lt;p data-sourcepos=&quot;29:1-29:252&quot;&gt;（7）对 IC 的任务分配很关键; 要求自己处于任何决策的关键路径上，因为你通常比经理更了解问题、代码库和 IC 们的优势。如果你和其他 IC 自己解决任务分配问题，大多数经理都会很高兴。&lt;/p&gt;&lt;p data-sourcepos=&quot;31:1-31:52&quot;&gt;（8）Road-map 是一种手段，而不是目的。&lt;/p&gt;&lt;p data-sourcepos=&quot;33:1-33:215&quot;&gt;（9）如果你有好的和/或一致的经理，要尽可能地理解、支持和包容。如果你没有这样的经理人......好吧，我还没有想明白这个问题，如果你想明白了，请告诉我。&lt;/p&gt;&lt;p data-sourcepos=&quot;35:1-35:325&quot;&gt;（10）使你的项目对组织架构调整有足够的鲁棒性，一个公司的管理层级本质上是脆弱的（毕竟，树是一个单连接的图）；不断地与未来可能接手这个项目的经理进行交流。&lt;strong&gt;不惜一切代价，确保经理人的变动不会给 IC 们带来不公平的职业结果&lt;/strong&gt;。&lt;/p&gt;&lt;blockquote data-sourcepos=&quot;37:1-37:215&quot;&gt;&lt;p data-sourcepos=&quot;37:3-37:215&quot;&gt;通常来说，公司组织架构调整是非常频繁的，经常一年就会调整一次，确保经理人的变动不会带来不公平的职业结果，这点其实很难（我也很想知道怎么做到）。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-sourcepos=&quot;39:1-39:232&quot;&gt;（11）追踪类似的功能在你所在领域的其他项目中花费了多长时间，并以此作为任务难度评估的依据(例如，“功能 X 在系统 Y 中花了 3 年时间；这不是一个 IC 的一半工作”）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;41:1-41:9&quot;&gt;设计&lt;/h2&gt;&lt;p data-sourcepos=&quot;43:1-43:107&quot;&gt;（12）对 API 要保守，对实现要宽松(Be conservative on APIs and liberal with implementations)。&lt;/p&gt;&lt;p data-sourcepos=&quot;45:1-45:80&quot;&gt;（13）但要坚持谨慎地推出新的实现（灰度、分阶段推出）。&lt;/p&gt;&lt;p data-sourcepos=&quot;47:1-47:335&quot;&gt;（14）设计 API 时，写代码完成第一个实现(implementation)；积极计划第二个实现；并希望/祈祷事情将在第三个实现中发挥作用。（When designing APIs, write code for one implementation; plan actively for the second implementation; and hope/pray that things will work for a third implementation.）&lt;/p&gt;&lt;p data-sourcepos=&quot;49:1-49:206&quot;&gt;（15）设计 API 时，首要考虑向新实现的迁移；自定义迁移会造成巨大的时间消耗且不可靠。每个主要的 API 都应该有一个单一的 CLI 驱动的调用来切换实现。&lt;/p&gt;&lt;p data-sourcepos=&quot;51:1-51:187&quot;&gt;（16）作为一个团队去设计；作为个人实现(Design as a team; implement as individuals)。这将使设计成为瓶颈，但这是值得的：抵制并行化设计的冲动。&lt;/p&gt;&lt;p data-sourcepos=&quot;53:1-53:276&quot;&gt;（17）对于存储系统，&lt;strong&gt;在开始时就要重点关注一致性和持久性，而不是可用性；一致性和持久性更难衡量，如果出问题也更难修复&lt;/strong&gt;。由于可用性更容易衡量，所以会有外部压力要求优先考虑它；推到后面去。&lt;/p&gt;&lt;p data-sourcepos=&quot;55:1-55:181&quot;&gt;（18）在测试中维护 API 的多个实现；比较它们之间的结果。这样做的代价是值得的（这将有助于正确性，也可以防止实现细节的泄露）。&lt;/p&gt;&lt;p data-sourcepos=&quot;57:1-57:306&quot;&gt;（19）对设计进行后期绑定（Late-bind）：鼓励团队思考整个设计空间，而不是承诺使用某个特定的解决方案。与一群高智商、有主见的 IC 们一起开头脑风暴会议是一门值得掌握的艺术。鼓励在设计的关键路径上进行粗略的原型设计。&lt;/p&gt;&lt;p data-sourcepos=&quot;59:1-59:102&quot;&gt;（20）对实现者进行后期绑定：一旦设计完成，任何 IC 都应该能够编写代码。&lt;/p&gt;&lt;p data-sourcepos=&quot;61:1-61:179&quot;&gt;（21）拥有适当数量的抽象（这很难）。太少了，你会得到一个混乱的单体；太多了，团队会被理解每个抽象的语义的认知开销所淹没。&lt;/p&gt;&lt;p data-sourcepos=&quot;63:1-63:132&quot;&gt;（22）&lt;strong&gt;避免使用实时性来保证正确性或在机器间比较时钟，除非你有（并理解）时钟的错误界限&lt;/strong&gt;。&lt;/p&gt;&lt;p data-sourcepos=&quot;65:1-65:98&quot;&gt;（23）有一个单一的真理来源。在各种类型的状态之间建立简单的不变量。&lt;/p&gt;&lt;p data-sourcepos=&quot;67:1-67:144&quot;&gt;（24）创造一种文化，让 IC 不断地思考完全不同的设计；不要停止关于假设性替代设计的对话。鼓励好奇心。&lt;/p&gt;&lt;p data-sourcepos=&quot;69:1-69:141&quot;&gt;（25）了解你的 SKU。云计算使人们很容易忽视硬件；但对硬件（和硬件趋势）的理解对设计来说至关重要。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;71:1-71:14&quot;&gt;Code Review&lt;/h2&gt;&lt;p data-sourcepos=&quot;73:1-73:118&quot;&gt;（26）在一个具有快速评审周期的透明代码库中，除非你把关，否则 API 会泄露实现细节。&lt;/p&gt;&lt;p data-sourcepos=&quot;75:1-75:204&quot;&gt;（27）鼓励 IC 对 diffs 进行批判性的思考，并创造一个人们可以自由表达的环境。作为 diffs 作者，你对指出 diffs 问题的人的反应应该是感激，而不是沮丧。&lt;/p&gt;&lt;p data-sourcepos=&quot;77:1-77:149&quot;&gt;（28）对于关键组件，考虑非正式的规则，例如要求两个接受（即两个 LGTM）或甚至是某个子集的 IC 的一致接受。&lt;/p&gt;&lt;p data-sourcepos=&quot;79:1-79:356&quot;&gt;（29）对于关键组件，落地时间不是衡量其重要性的标准：抵制衡量这一标准和优化它的冲动。创造一种让 IC 可以接受 diffs 不能快速落地的文化（创造性的工作——书籍、论文等等——由于高质量 review 的成本，通常需要漫长的 review 周期；为什么代码应该有所不同？）&lt;/p&gt;&lt;p data-sourcepos=&quot;81:1-81:368&quot;&gt;（30）有时候，你只有在一个 IC 写出了一个候选的设计方案后才意识到这个设计是正确的。要抵制说“哦，好吧，让我们先落地，然后再修复它”的冲动；你这样做对 IC 和项目都没有帮助。创造一种文化，让 IC 感觉到如果这不是正确的解决方案，就可以丢弃代码（以身作则）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;83:1-83:9&quot;&gt;策略&lt;/h2&gt;&lt;p data-sourcepos=&quot;85:1-85:253&quot;&gt;（31）以某种节奏问自己：为什么这个团队/项目会存在？如果它不存在，会发生什么（哪个其他团队/系统会填补这个空白）？该团队是如何为公司增加价值的，以及它如何在未来继续这样做？&lt;/p&gt;&lt;p data-sourcepos=&quot;87:1-87:427&quot;&gt;（32）跟踪公司内你所在领域的每个其他主要项目：你应该能够比他们自己的 IC 更好地解释他们的技术设计。抓住任何机会去与其他类似项目的负责人辩论项目范围：你应该能够阐明你的项目如何适合更大的生态系统。团队间的竞争是健康和必要的。与这些项目中的 IC 交朋友：他们比公司里的其他人更了解你的技术挑战。&lt;/p&gt;&lt;p data-sourcepos=&quot;89:1-89:251&quot;&gt;（33）不要在原始性能或效率上与其他团队竞争；这将升级为一场军备竞赛，两个团队都会浪费时间为工作负载优化他们的系统，产生苹果与橘子的比较，等等。在基本设计特性上进行竞争。&lt;/p&gt;&lt;p data-sourcepos=&quot;91:1-91:119&quot;&gt;（34）如果客观上有人在你的使用场景有更好的系统，并想接手它，那就去找别的事做吧。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;93:1-93:15&quot;&gt;可观测性&lt;/h2&gt;&lt;p data-sourcepos=&quot;95:1-95:50&quot;&gt;（35）测量是一种手段，而不是目的。&lt;/p&gt;&lt;p data-sourcepos=&quot;97:1-97:77&quot;&gt;（36）你应该能够在你的客户之前发现你的服务中的问题。&lt;/p&gt;&lt;p data-sourcepos=&quot;99:1-99:261&quot;&gt;（37）在尽可能的情况下，可观察性应该在 API 之上，并在实现(implementations)之外。这可以确保你可以切换实现并比较性能，而不会在测量代码中引入错误。它还可以简化实现；并降低新实现的门槛。&lt;/p&gt;&lt;p data-sourcepos=&quot;101:1-101:125&quot;&gt;（38）任何不容易测量的东西（例如，一致性）往往被遗忘；要特别注意那些难以测量的属性。&lt;/p&gt;&lt;p data-sourcepos=&quot;103:1-103:176&quot;&gt;（39）尽可能将关键的检查（例如一致性）推到部署本身；尽量减少对外部服务的检查（否则你现在有两件事要跟踪，而不是一件）。&lt;/p&gt;&lt;h2 data-sourcepos=&quot;105:1-105:9&quot;&gt;研究&lt;/h2&gt;&lt;p data-sourcepos=&quot;107:1-107:224&quot;&gt;（40）追踪你所在领域的研究成果。很快你就会和你的 IC 有一个速记，可以实现超快的沟通。&quot;如果我们尝试项目 X 中的那个东西呢？并将其与项目 Y 中的技术相结合？&quot;。&lt;/p&gt;&lt;p data-sourcepos=&quot;109:1-109:221&quot;&gt;（41）尝试新事物。在可行的解决方案内，偏向于新的东西。抵制逐字逐句地复制设计的冲动。每一个重要的系统在某些时候都只是某人头脑中的一个半生不熟的想法。&lt;/p&gt;&lt;p data-sourcepos=&quot;111:1-111:380&quot;&gt;（42）写论文。为那些对你正在做的事情没有任何背景的听众写作，将迫使你检查和澄清你的假设。论文可以使你更容易雇用到优秀的人才，也更容易让他们上岗。研究生应该能够向你解释你的设计（并发现错误！）。当被要求做讲座时，尽量答应。它们很有趣，而且你可以认识新的人。&lt;/p&gt;&lt;hr/&gt;&lt;p data-sourcepos=&quot;113:1-113:74&quot;&gt;&lt;/p&gt;&lt;p data-sourcepos=&quot;113:1-113:74&quot;&gt;&lt;em&gt;原文：&lt;/em&gt;&lt;em&gt;https://maheshba.bitbucket.io/blog/2021/10/19/42Things.html&lt;/em&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;em&gt;&lt;strong&gt;欢迎关注我的公众号：&lt;/strong&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzIwODA2NjIxOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/hBL5R2neMA0g3RQ9bRYaJib92ovwsSB9pPup1lt5cB24cJVJia1dc3Nr2kFSBHsJq5HL9DcLhoAGribSBvHU7ZzjA/0?wx_fmt=png&quot; data-nickname=&quot;多颗糖&quot; data-alias=&quot;duoketang&quot; data-signature=&quot;一名系统研究者的攀登之路&quot; data-from=&quot;1&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9be9326b28247450a6c29aa4ed7f3e73</guid>
<title>新入手的Mac需要做的事；自我刷新2.5次后工资涨了1.5倍；谷爱凌，欢迎归来｜码农周刊VIP会员专属邮件周报 Vol.079</title>
<link>https://toutiao.io/k/c1004x2</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single js_wx_tap_highlight wx_tap_card&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left js_a11y_comma js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MjM5MzA0ODkyMA==&amp;amp;action=getalbum&amp;amp;album_id=2218111508427898886#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;2218111508427898886&quot; data-tag_source=&quot;1&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#码农周刊&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;4个&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;以下内容节选自「码农周刊VIP会员专属邮件周报 Vol.079」，查看完整链接版请微信扫描下方二维码，加入「码农周刊VIP会员」。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNavicibroqCN98y5SNT9NbfA3oHYQiaicFScHFfppgek7ZGicJiaHK45qc2zoccBibfEzIvzTsI4AB2xO2IaOw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;strong&gt;谷爱凌，欢迎归来&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://mp.weixin.qq.com/s/dT7OTYzH9COgeSxR1i4A8g&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;绝大多数人对谷爱凌的了解仅限于「天才」、「学霸」、「冠军」等标签，而她的人生远比这些标签丰富、有趣得多。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;从2021到2022，14位CEO眼中的中国SaaS市场&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://mp.weixin.qq.com/s/a9lTGUkYp5qnZOzvZb_qpg&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;“流水可能会绕路，但绝不会回头。”&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;QQ音乐推荐系统的精细化调控&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/j9ze7ux&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;介绍一些更显性的、更具可解释性的一些数据驱动方法在内容精细化运营场景的应用&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;如何撰写好的技术方案设计&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/0f5fv4t&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;真实案例干货分享&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;一款适合于快速开发业务的 Go 框架&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://github.com/go-eagle/eagle&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;可快速构建 API 服务或 Web 网站&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;一款开源NFT市场&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://github.com/fingerchar/fingernft&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;兼容Opensea、Rarible，具有技术主流、价格低、授权宽松等特点。&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;非科班出生转行PHP开发三年后，又转战到Java开发我都经历了什么！&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/2rvy8s6&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;经验分享&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;应用架构指南全新发布&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/lmy3ob3&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;全新修订&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;自我刷新2.5次后工资涨了1.5倍！&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/pycipy6&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;成长经历&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;新入手的Mac需要做的事&lt;/strong&gt;&lt;br/&gt;&lt;/span&gt;&lt;span&gt;&lt;em&gt;https://toutiao.io/k/zou2w7c&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;适合新手&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;&lt;span&gt;查看完整链接版请微信扫描下方二维码，加入「码农周刊VIP会员」。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5493333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/AjN1jquNavicibroqCN98y5SNT9NbfA3oHYQiaicFScHFfppgek7ZGicJiaHK45qc2zoccBibfEzIvzTsI4AB2xO2IaOw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>