<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>810b220539785ee2355a4df72e1c341c</guid>
<title>华为鸿蒙 2.0，让我遇见未来 | 码农周刊第 318 期</title>
<link>https://toutiao.io/k/6rprzrd</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;华为鸿蒙 2.0，让我遇见未来 | 码农周刊第 318 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第318期（2020-09-16）&lt;/h2&gt;
        &lt;p&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=318&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3180&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_316.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=318&amp;amp;aid=19803&amp;amp;url=https%3A%2F%2Fwww.sheca.com%2Fassets%2Fwwx%2Fpage1.html%3Fsite%3Dkaifazhe02&quot; target=&quot;_blank&quot;&gt;SHECA 提供 SSL 证书一站式服务，为你的网络安全保驾护航，上海 CA 权威认证&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=318&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;深入讲解&lt;/p&gt;
        
        &lt;p&gt;业界实战&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;工作地点：成都 | 薪资：15-30K | 简历投递邮箱：xiexiaofang@huobi.com&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;持续更新&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;帮助大家有针对性地准备面试&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;用于播放特效动画的实现方案。具有高压缩率、硬件解码等优点。同时支持 iOS, Android, Web 平台。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;各有千秋&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;附 demo&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;收藏吧&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;经验分享&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;深入研究&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;教你用 Deployment 全搞定&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;程序员进阶系列&lt;/p&gt;
        
        &lt;p&gt;编程体系结构系列&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;看完这个视频你转头也写了一吨&lt;/p&gt;
        
        &lt;p&gt;类似微信的小程序&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;系列文章&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;死磕Elasticsearch！&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 272620 即可&lt;/p&gt;
        
        &lt;p&gt;前端 Or NodeJs。喜欢造轮子的懒人&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 95159 即可&lt;/p&gt;
        
        &lt;p&gt;关于计算机很多很多好玩的，一些常见的使用技巧和案例，还有技术方面的&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 72425 即可&lt;/p&gt;
        
        &lt;p&gt;顺势而为; 在技术人的后场; 分享前沿「技术」和「思想」。&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 56624 即可&lt;/p&gt;
        
        &lt;p&gt;五分钟不刷心里发慌&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 378 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=318&amp;amp;aid=19870&amp;amp;url=https%3A%2F%2Fu.jd.com%2FDpNS3m&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/book_318.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;采访实录&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>371a4706c31d7acbfaa3e5dc498c90c4</guid>
<title>就这一次：TCP/IP/IO/NIO/操作系统、计算机底层、Netty、算法一次性给你讲透</title>
<link>https://toutiao.io/k/ejwph4b</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;互联网Java高级架构&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;gh_ccb618f36650&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;专注于后端技术；Java、算法及各类数据库，提供优质的技术讲解文章&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>724901b1891c12778db5ed5db40a7706</guid>
<title>一次压缩引发堆外内存过高的教训</title>
<link>https://toutiao.io/k/ltpa1w9</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;src-views-article-detail-main-module__content--2qOBd markdown-body&quot;&gt;&lt;h3&gt;一、项目介绍&lt;/h3&gt;
&lt;p&gt;lz_rec_push_kafka_consume&lt;br/&gt;
该项目通过kafka与算法进行交互，通过push推荐平台（lz_rec_push_platform）预生成消息体。&lt;/p&gt;
&lt;h3&gt;二、问题背景&lt;/h3&gt;
&lt;p&gt;发现项目的k8s容器会出现重启现象，重启时间刚好是push扩量，每小时push数据量扩大5倍左右。&lt;br/&gt;
发生问题时，容器配置：CPU：4个，内存：堆内3G，堆外1G。&lt;/p&gt;
&lt;h3&gt;三、问题排查流程：望-闻-问-切&lt;/h3&gt;
&lt;h4&gt;望：查看监控系统，观察重启发生时，容器实例的资源情况&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://a.perfma.net/img/1835182&quot; alt=&quot;图片1.png&quot;/&gt;&lt;br/&gt;
注：容器重启机制：k8s监控发现“实例”内存使用超过申请时，会对容器进行重启。该动作是直接使用kill -9的，而非通过jvm指令对虚拟机进行重启，所以此处别想dump堆。&lt;br/&gt;
&lt;img src=&quot;https://a.perfma.net/img/1835195&quot; alt=&quot;图片2.png&quot;/&gt;&lt;br/&gt;
一开始怀疑是内存，但是内存不足的话，应该是出现oom的情况。所以先排除堆内内存不足的问题。将实例内存扩大至：6G，堆内5G，堆外1G。发现重启现象没有丝毫改善。&lt;/p&gt;
&lt;h4&gt;闻：检查项目的健康情况：线程、堆内内存使用、堆外内存使用。&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过jstack、jstat二连，查看项目线程情况及垃圾回收情况，无线程突增情况，无fullGC及频繁youngGC情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过top命令发现res使用比jstat命令显示的堆大小大许多（忘了保留现场了），此时怀疑是堆外内存泄漏导致的。为了确定是堆外泄漏而非堆内，分析GC日志文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;借助&lt;a href=&quot;https://gceasy.io/gc-index.jsp&quot; target=&quot;_blank&quot;&gt;easygc&lt;/a&gt;对GC日志进行分析：无fullGC情况（图中四次fullGC为手动触发测试的：jmap -histo:live ），且每次youngGC能正常回收对象。&lt;img src=&quot;https://a.perfma.net/img/1835262&quot; alt=&quot;图片5.png&quot;/&gt;&lt;img src=&quot;https://a.perfma.net/img/1835268&quot; alt=&quot;图片6.png&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改启动脚本，将-Xmx参数和-Xms参数置为4G，且增加dump堆参数（-XX:+HeapDumpOnOutOfMemoryError  -XX:HeapDumpPath=/data/logs/  ），如果堆内发生oom则能拿到我们心心念念的堆文件进行分析。&lt;br/&gt;
但是事与愿违，容器多次发生重启的时候，并没有发生项目堆内oom，也就是说，并没有dump下堆现场。此时更加确定，应该是堆外内存泄漏。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置堆外参数：-XX:MaxDirectMemorySize 用于限制堆外内存的使用，但是实例的内存使用还是膨胀到11G。网上的小伙伴都说这个参数可以用来限制堆外内存使用，难道是我没用好。原本是想用这个参数来触发堆外内存不足的错误，好验证堆外内存泄漏这个方向。&lt;br/&gt;
既然这个方向走不通，那就扩大堆外看看是否堆外的泄漏能否回收，还是永久泄漏。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;堆外内存泄漏一般由堆内对象引用（最常见由NIO引起，但是这次NIO表示不背锅），且堆内引用无法被回收引起的（我猜的）。通过第四点图，自然情况下的youngGC或者手动触发fullGC后，垃圾回收都能试堆回到正常水平。此处判断，泄漏的内存由可回收的引用所值向。&lt;br/&gt;
那么问题来了，该部分引用在垃圾回收前就已经大量堆积，导致堆外内存空间不足，触发k8s容器被kill。我猜的，接下来验证这个想法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;让运维大佬将k8s实例调整到12G，因为每次重启时，容器的内存占用几乎稳定在11g左右。（好吧其实是运维大佬看容器一直重启，主动要求扩容协助排查，赞一个）&lt;/li&gt;
&lt;li&gt;将堆内内存限制在7G，堆内使用6G，留给堆外尽可能大的空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实例内存调整后，项目的三个实例在持续运行两天过程中，没有再出现重启情况，且每次“预生成数据”后内存能正常回收。由此确定，泄漏的堆外内存是可回收的，而非永久泄漏，且在堆内引用被回收后即可完成回收。&lt;img src=&quot;https://a.perfma.net/img/1835298&quot; alt=&quot;图片7.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上图为k8s实例资源监控图，仅能体现容器资源情况，而非容器内项目的堆情况，该图只能证明堆外内存能正常回收，而不是永久泄漏。既然不再重启了，那么问题解决了，搞定走人？天真，一个节点12G，没必要的浪费，运维大佬会杀人祭天的。&lt;br/&gt;
通过jstat命令可观察，且GC日志可以得出，堆内存使用基本可稳定在4G以内，没必要浪费12G的空间。&lt;br/&gt;
&lt;img src=&quot;https://a.perfma.net/img/1835319&quot; alt=&quot;图片8.png&quot;/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;问：目前需要解决的问题是找出堆外内存泄漏的原因。&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;通过Google查找堆内存排查的文章：&lt;a href=&quot;https://cloud.tencent.com/developer/article/1129904&quot; target=&quot;_blank&quot;&gt;今咱们来聊聊JVM 堆外内存泄露的BUG是如何查找的&lt;/a&gt;    &lt;a href=&quot;https://developer.aliyun.com/article/657160&quot; target=&quot;_blank&quot;&gt;一次堆外内存泄露的排查过程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;借用arthas观察，当Eden区膨胀到85%+的时候会进行一轮youngGC。所以盯着监控在Eden使用达到80%的时候将堆dump下来（jmap -dump:format=b,file=heap.hprof ）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;切：通过对分析工具对堆文件进行分析：JProfiler（后面会用到）、MemoryAnalyzer&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;借助&lt;a href=&quot;http://www.eclipse.org/mat/&quot; target=&quot;_blank&quot;&gt;Memory Analyzer (MAT)&lt;/a&gt;工具将堆文件开。具体使用流程可自行百度，这里不细讲。
&lt;ul&gt;
&lt;li&gt;首先打开堆文件&lt;br/&gt;
&lt;img src=&quot;https://a.perfma.net/img/1835353&quot; alt=&quot;图片10.png&quot;/&gt;&lt;/li&gt;
&lt;li&gt;进入后看到对分析结果中出现三个明显的错误，问题一跟问题二是由于引入了arthas导致的，直接跳过。&lt;br/&gt;
&lt;img src=&quot;https://a.perfma.net/img/1835334&quot; alt=&quot;图片9.png&quot;/&gt;&lt;/li&gt;
&lt;li&gt;看到第三个问题是否眼前一亮，小时候我们学java的时候就知道java.lang.ref.Finalizer是干嘛的，有兴趣的可自行Google，也可看一下：&lt;a href=&quot;https://sq.163yun.com/blog/article/198141339137806336&quot; target=&quot;_blank&quot;&gt;JVM finalize实现原理与由此引发的血案&lt;/a&gt;&lt;br/&gt;
&lt;img src=&quot;https://a.perfma.net/img/1835384&quot; alt=&quot;图片11.png&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;java.lang.ref.Finalizer基本确定回收阶段出现问题，进入搜索待回收的对象。此时我们不是纠结有多少对象没有被回收，为什么没有回收。而是这些没有回收的对象是否由指向堆外内存。&lt;br/&gt;
&lt;img src=&quot;https://a.perfma.net/img/1835388&quot; alt=&quot;图片12.png&quot;/&gt;
&lt;ul&gt;
&lt;li&gt;点开实例查看所属类，此处看到这里出现3500+的未回收对象指向java.util.zip.ZipFile$ZipFileInflaterInputStream，赶紧Google发现还是有许多小伙伴碰到相同的问题，例如：&lt;a href=&quot;https://www.jianshu.com/p/5841df465eb9&quot; target=&quot;_blank&quot;&gt;Java压缩流GZIPStream导致的内存泄露 。&lt;/a&gt;&lt;br/&gt;
&lt;img src=&quot;https://a.perfma.net/img/1835412&quot; alt=&quot;图片13.png&quot;/&gt;&lt;/li&gt;
&lt;li&gt;看到ZipFileInflaterInputStream马上想起该压缩在哪使用：push消息在预生成后存储redis，批量生成后将消息进行压缩再存储，采用的正是zip压缩，代码示例如下：&lt;br/&gt;
遗憾的是项目中使用的压缩工具为jdk自带的zip压缩，有兴趣的孩子可以了解一下基于Deflater 和 Inflater的zip压缩。 （具体使用方法直接参照这两个类上的示例注释，应该是最权威的使用方式了）以下是本人在项目中的使用：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;hljs&quot;&gt;&lt;code class=&quot;hljs-code-wrap&quot;&gt;
        byte[] input = log.getBytes();

        try (final ByteArrayOutputStream outputStream = new ByteArrayOutputStream(input.length)) {
            final Deflater compressor = new Deflater();
            compressor.setInput(input);
            compressor.finish();

            byte[] buffer = new byte[1024];
            int offset = 0;
            for (int length = compressor.deflate(buffer, offset, buffer.length); length &amp;gt; 0; length = compressor.deflate(buffer, offset, buffer.length)) {
                outputStream.write(buffer, 0, length);
                outputStream.flush();
            }
            //compressor.end();
            return Base64Utils.encodeToString(outputStream.toByteArray());
        }
    }

    public static String zipDecompress(final String str) throws Exception {

        byte[] input = Base64Utils.decodeFromString(str);

        try (final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(input.length)) {

            final Inflater decompressor = new Inflater();
            decompressor.setInput(input);

            byte[] buffer = new byte[1024];
            for (int length = decompressor.inflate(buffer); length &amp;gt; 0 || !decompressor.finished(); length = decompressor.inflate(buffer)) {
                byteArrayOutputStream.write(buffer, 0, length);
            }
            //decompressor.end();
            return new String(byteArrayOutputStream.toByteArray());
        }
    }

&lt;/code&gt;&lt;button class=&quot;pre-button&quot;&gt;复制&lt;/button&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;奇怪的是，压缩与解压缩的预发都是采用try with resource的格式进行编写，讲道理是会进行流关闭的。网上部分小伙伴推荐使用snapy代替zip，但是我就不~~还是要搞清楚为什么此处没有在方法栈弹出之后马上做资源回收。&lt;/li&gt;
&lt;li&gt;点击进入Deflater的deflate方法或者Inflater的inflate方法可以发现，二者都是调用了“native”方法，详细代码请参照源码。两个工具类均持有end()方法，其注释如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;hljs&quot;&gt;&lt;code class=&quot;hljs-code-wrap&quot;&gt;/**
     * Closes the compressor and discards any unprocessed input.
     * This method should be called when the compressor is no longer
     * being used, but will also be called automatically by the
     * finalize() method. Once this method is called, the behavior
     * of the Deflater object is undefined.
     */
&lt;/code&gt;&lt;button class=&quot;pre-button&quot;&gt;复制&lt;/button&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;所以以上代码中将注释掉的两行end()方法的调用放开即可（这两行是锁定问题后加上的）。end()方法在调用后即可对堆外使用的内存进行释放，而不是等待jvm垃圾回收来临之后，将引用回收时再间接使堆外的缓冲区回收。继续翻看源码，不难发现Deflater和Inflater确实重写了finalize方法，而该方法的实现正是调用end方法，这就验证了我们上面的猜想。众所周知finalize方法会在对象被回收的时候被调用且只会被调用一次。所以在对象回收之前，被引用的堆外的空间是无法被回收的。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;hljs&quot;&gt;&lt;code class=&quot;hljs-code-wrap&quot;&gt; /**
     * Closes the compressor and discards any unprocessed input.
     * This method should be called when the compressor is no longer
     * being used, but will also be called automatically by the
     * finalize() method. Once this method is called, the behavior
     * of the Deflater object is undefined.
     */
    public void end() {
        synchronized (zsRef) {
            long addr = zsRef.address();
            zsRef.clear();
            if (addr != 0) {
                end(addr);
                buf = null;
            }
        }
    }

    /**
     * Closes the compressor when garbage is collected.
     */
    protected void finalize() {
        end();
    }
&lt;/code&gt;&lt;button class=&quot;pre-button&quot;&gt;复制&lt;/button&gt;&lt;/pre&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;翻看redis的存储空间，好吧即使是高峰期的数据也不是很多，是我考虑太多了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;思考：项目发生重启是在kafka数据扩量后才出现的，那为何扩量前没有这个问题的出现呢？其实问题一直是存在的，只是数据量小的情况下，引用都在垃圾回收后能正常释放堆外内存。但是扩量后，瞬间的流量增高，产生大量的堆外内存使用引用。在下一次垃圾回收之前ReferenceQueue队列已经堆积了大量的引用，将容器内的堆外内存撑爆。&lt;/p&gt;
&lt;h4&gt;药：去除压缩解压缩动作&lt;/h4&gt;
&lt;p&gt;去除压缩与解压缩动作后，发版观察。项目的k8s实例资源监控处在合理范围。&lt;br/&gt;
&lt;img src=&quot;https://a.perfma.net/img/1835420&quot; alt=&quot;图片14.png&quot;/&gt;&lt;br/&gt;
至此，堆外内存问题已经解决了。&lt;/p&gt;
&lt;h3&gt;五、思考与复盘&lt;/h3&gt;
&lt;p&gt;问题：使用资源时，保持着资源使用后及时释放的习惯。该问题便是由压缩使用有误引起的，应该也算是低级错误了。&lt;/p&gt;
&lt;p&gt;由于第一次排查堆外内存泄漏的问题，没有丰富的经验去锁定问题点达到快速排查，走了不着弯路。该文章略显啰嗦，但是主要目的还是想记录下排查问题的过程。第一次发博客，写作思路上有点紊乱，请多多包涵。如果有什么措辞不当的，还望指出。有什么好的建议也希望能指点一二。&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>f2997247c039b61f4376dc63502aac36</guid>
<title>Kubernetes 新玩法：在 yaml 中编程</title>
<link>https://toutiao.io/k/ah5q8e6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section data-tools=&quot;新媒体管家&quot; data-label=&quot;powered by xmt.cn&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/yvBJb5Iiafvlhk4gwDDMUiamhlAIBicVTNNCYW42t8G5meupryCmHNGiaxjic0mhfIzUKZaPE03iaK6F8JR4XxSOqsWw/0?wx_fmt=jpeg&quot; data-cropx1=&quot;0&quot; data-cropx2=&quot;1280&quot; data-cropy1=&quot;104.08304498269896&quot; data-cropy2=&quot;821.5916955017302&quot; data-ratio=&quot;0.56015625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/yvBJb5Iiafvlhk4gwDDMUiamhlAIBicVTNNqk2LGvXAQn6gHw3Wz7k4yPGc0EjmH9QlQP1xS5AUlh2rHaibhWlboAw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h2 data-lake-id=&quot;f2fc2832461bb2da39e74682b23ecf4f&quot;&gt;&lt;span&gt;作者 | 悟鹏&lt;/span&gt;&lt;br/&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;2858960&quot; data-style-type=&quot;undefined&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-id=&quot;2763309&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.45454545454545453&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/US10Gcd0tQGY9ddd5GpbmVRuaRfuaESAUBGE7uHX5G0nxxLSub2QTKZdu538V7GaHXS5jsTCebYCUibaHsjg0ow/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;22&quot; title=&quot;动态黑色音符&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;引子&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;性能测试在日常的开发工作中是常规需求，用来摸底服务的性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那么如何做性能测试？要么是通过编码的方式完成，写一堆脚本，用完即弃；要么是基于平台，在平台定义的流程中进行。对于后者，通常由于目标场景的复杂性，如部署特定的 workload、观测特定的性能项、网络访问问题等，往往导致性能测试平台要以高成本才能满足不断变化的开发场景的需求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在云原生的背景下，是否可以更好解决这种问题？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;先看两个 yaml 文件：&lt;/span&gt;&lt;/p&gt;&lt;ol data-lake-id=&quot;af32c55a17b67ebac5228be6af1c5d12&quot; lake-indent=&quot;1&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;ol data-lake-id=&quot;6766e5b7e5c3ce56f2d5d86eb323125e&quot; lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;创建测试用的 Namespace&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;启动针对 Deployment 创建效率和创建成功率的监控&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;下述动作重复 N 次：&lt;/span&gt;① 使用 workload 模板创建 Deployment；② 等待 Deployment 变为 Ready&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;删除测试用的 Namespace&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;performance-test.yaml ：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;apiVersion&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;aliyun.com/v1alpha1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;kind&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Beidou&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;metadata&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;performance&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;namespace&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;beidou&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;spec&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;steps&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: &quot;Create Namespace If Not Exits&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;operations&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: &quot;create namespace&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Task&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;op&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;CreateNamespace&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;args&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: NS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;beidou&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: &quot;Monitor Deployment Creation Efficiency&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;operations&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: &quot;Begin To Monitor Deployment Creation Efficiency&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Task&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;op&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;DeploymentCreationEfficiency&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;args&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: NS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;beidou&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: &quot;Repeat 1 Times&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Task&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;op&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;RepeatNTimes&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;args&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: TIMES&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: ACTION&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;reference&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;deployment-operation&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: &quot;Delete namespace&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;operations&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: &quot;delete namespace&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Task&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;op&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;DeleteNamespace&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;args&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: NS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;beidou&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: FORCE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;references&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;id: deployment-operation&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;steps&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: &quot;Prepare Deployment&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;operations&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: &quot;Prepare Deployment&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Task&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;op&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;PrepareBatchDeployments&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;args&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: NS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;beidou&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: NODE_TYPE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;ebm&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: BATCH_NUM&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: TEMPLATE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;./templates/basic-1-pod-deployment.yaml&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: DEPLOYMENT_REPLICAS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: DEPLOYMENT_PREFIX&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ebm&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: &quot;Wait For Deployments To Be Ready&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Task&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;op&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;WaitForBatchDeploymentsReady&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;args&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: NS&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;beidou&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: TIMEOUT&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;3m&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: CHECK_INTERVAL&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;2s&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;basic-1-pod-deployment.yaml：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;apiVersion&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;apps/v1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;kind&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Deployment&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;metadata&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;labels&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;app&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;basic-1-pod&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;spec&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;selector&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;matchLabels&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;app&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;basic-1-pod&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;template&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;metadata&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;labels&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;app&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;basic-1-pod&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;spec&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;containers&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__meta&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;name: nginx&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;image&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;registry-vpc.cn-hangzhou.aliyuncs.com/xxx/nginx:1.17.9&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;imagePullPolicy&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;Always&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;resources&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__attr&quot;&gt;limits&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;cpu&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__attr&quot;&gt;memory&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;4Gi&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;然后通过一个命令行工具执行 performance-test.yaml：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$ beidou server -c ~&lt;span class=&quot;code-snippet__regexp&quot;&gt;/.kube/config&lt;/span&gt; services/performance-test.yaml&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;执行效果如下 (每个 Deployment 创建耗时，所有 Deployment 创建耗时的 TP95 值，每个 Deployment 是否创建成功)：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5906040268456376&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yvBJb5Iiafvlhk4gwDDMUiamhlAIBicVTNNiaaJjOtSQUDPn41sXT1HO4oOcgGMF4MYn52NMIgwst508aiaL288OhrA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1043&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这些 metrics 是按照 Prometheus 标准输出，可以被 Prometheus server 收集走，再结合 Grafana 可以可视化展示性能测试数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过在 yaml 中表达想法，编排对 K8s 资源的操作、监控，再也不用为性能测试的实现头疼了 :D&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lake-id=&quot;e0e160d099a79ec2f7731b427c95230e&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;2858960&quot; data-style-type=&quot;undefined&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-id=&quot;2763309&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.45454545454545453&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/US10Gcd0tQGY9ddd5GpbmVRuaRfuaESAUBGE7uHX5G0nxxLSub2QTKZdu538V7GaHXS5jsTCebYCUibaHsjg0ow/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;22&quot; title=&quot;动态黑色音符&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;为什么要在 yaml 中编程？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;性能测试、回归测试等对于服务质量保障有很大帮助，需要做，但常规的实现方法在初期需要投入较多的时间和精力，新增变更后维护成本比较高。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通常这个过程是以代码的方式实现原子操作，如创建 Deployment、检测 Pod 配置等，然后再组合原子操作来满足需求，如 创建 Deployment -&amp;gt; 等待 Deployment ready -&amp;gt; 检测 Pod 配置等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有没有办法在实现的过程中既可以尽量低成本实现，又可以复用已有的经验？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以将原子操作封装为原语，如 CreateDeployment、CheckPod，再通过 yaml 的结构表达流程，那么就可以通过 yaml 而非代码的方式描述想法，又可以复用他人已经写好的 yaml 文件来解决某类场景的需求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;即在 yaml 中编程，减少重复性代码工作，通过 &lt;strong&gt;声明式&lt;/strong&gt; 的方式描述逻辑，并以 yaml 文件来满足场景级别的复用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;业界有很多种类型的 &lt;strong&gt;声明式操作&lt;/strong&gt; &lt;/span&gt;&lt;span&gt;服务，如运维领域中的&lt;/span&gt;&lt;a href=&quot;&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fdocs.ansible.com%2Fansible%2Flatest%2Findex.html&amp;amp;title=Ansible&quot; data-miniprogram-type=&quot;text&quot;&gt;&lt;span&gt;Ansible&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fdocs.saltstack.com%2Fen%2Flatest%2F&amp;amp;title=SaltStack&quot; data-miniprogram-type=&quot;text&quot;&gt;&lt;span&gt;SaltStack&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;Kubernetes 中的&lt;/span&gt;&lt;a href=&quot;&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fgithub.com%2Fargoproj%2Fargo&amp;amp;title=Argo%20Workflow&quot; data-miniprogram-type=&quot;text&quot;&gt;&lt;span&gt;Argo Workflow&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fgithub.com%2Fkubernetes%2Fperf-tests%2Ftree%2Fmaster%2Fclusterloader2&amp;amp;title=clusterloader2&quot; data-miniprogram-type=&quot;text&quot;&gt;&lt;span&gt;clusterloader2&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;它们的思想整体比较类似，将高频使用的操作封装为原语，使用者通过原语来表述操作逻辑。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;通过声明式的方法，将面向 K8s 的操作抽象成 yaml 中的关键词，在 yaml 中提供串行、并行等控制逻辑，那么就可以通过 yaml 文件完整描述想要进行的工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这种思想和&lt;/span&gt;&lt;a href=&quot;&quot; target=&quot;_blank&quot; class=&quot;weapp_text_link&quot; data-miniprogram-appid=&quot;wxae224e32990b0036&quot; data-miniprogram-path=&quot;pages/a?link=https%3A%2F%2Fgithub.com%2Fargoproj%2Fargo&amp;amp;title=Argo%20Workflow&quot; data-miniprogram-type=&quot;text&quot;&gt;&lt;span&gt;Argo Workflow&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 比较像，但粒度比 Argo 更细，关注在操作函数上：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.352803738317757&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yvBJb5Iiafvlhk4gwDDMUiamhlAIBicVTNN9hzpKUfBNd2MDVQpPp1FuJACNkycNrpQyuaDU9LvLGqtRSB8goz9ZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;856&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;下面简单描述该服务的设计和实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-lake-id=&quot;708dcb11e861f415499501086210357a&quot;&gt;&lt;span/&gt;&lt;/h2&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;2858960&quot; data-style-type=&quot;undefined&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-id=&quot;2763309&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.45454545454545453&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/US10Gcd0tQGY9ddd5GpbmVRuaRfuaESAUBGE7uHX5G0nxxLSub2QTKZdu538V7GaHXS5jsTCebYCUibaHsjg0ow/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;22&quot; title=&quot;动态黑色音符&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;设计和实现&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;3198855&quot; data-style-type=&quot;undefined&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-id=&quot;2763310&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h3&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;1. 服务形态&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;ul data-lake-id=&quot;6494a210ca0ac3aae64f7cac64034497&quot; lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;使用者在 yaml 中，通过 &lt;strong&gt;声明式&lt;/strong&gt; 的方式描述操作逻辑；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;以 all-in-one 的二进制工具或 Operator 的方式交付；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;服务内置常见原语的实现，以关键字的方式在 yaml 中提供；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;支持配置原生 K8s 资源。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 data-lake-id=&quot;a985bb7b41fc162e302e2d1a99faa830&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;3198855&quot; data-style-type=&quot;undefined&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-id=&quot;2763310&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h3&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;2. 设计&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;该方案的核心在于配置管理的设计，将操作流程配置化，自上而下有如下概念：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;抽象目标场景中的通用操作，这些通用操作即为可在 yaml 中使用的原语，对应上述 Plugin：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul data-lake-id=&quot;ff40451121e33008150218a6f03cd67e&quot; lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;检测项相关&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;CheckPodAnnotations&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;CheckPodObjectInfo&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;CheckPodInnerStates&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;etc.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上述 4 个概念的关系如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5215723873441994&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yvBJb5Iiafvlhk4gwDDMUiamhlAIBicVTNNvTwjIiaqWs3SxJwaxFfc3Omxv17Zas3zprlc1Wia2DrfiaZkMgnSO3pzA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1043&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;示例可参见文章开头的 yaml 文件，对应形式二。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 data-lake-id=&quot;2f566cf73059d8f5aaa45972ec777623&quot;&gt;&lt;span/&gt;&lt;/h3&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;3198855&quot; data-style-type=&quot;undefined&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-id=&quot;2763310&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h3&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;3. 核心实现&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;CRD 设计：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;package v1alpha1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__title&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  corev1 &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;k8s.io/api/core/v1&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  metav1 &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;k8s.io/apimachinery/pkg/apis/meta/v1&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type BeidouType &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__title&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  BeidouTask BeidouType = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Task&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type Beidou struct &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  metav1.TypeMeta   `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;,inline&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  metav1.ObjectMeta `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;metadata,omitempty&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,1,opt,name=metadata&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Spec   BeidouSpec   `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;spec,omitempty&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,2,opt,name=spec&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Status BeidouStatus `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;status,omitempty&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,3,opt,name=status&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type BeidouSpec &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Steps      []BeidouStep      `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;steps&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,1,opt,name=steps&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  References []BeidouReference `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;references&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,2,opt,name=references&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type BeidouStep &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Name       &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;            `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;name&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,1,opt,name=name&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Operations []BeidouOperation `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;operations&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,2,opt,name=operations&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type BeidouOperation &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Name &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;      `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;name&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,1,opt,name=name&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Type BeidouType  `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;type&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,2,opt,name=type&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Op   &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;      `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;op&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,3,opt,name=op&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Args []BeidouArg `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;args&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,4,opt,name=args&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type BeidouArg &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Name        &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;                   `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;name&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,1,opt,name=name&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Value       &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;                   `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;value,omitempty&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,2,opt,name=value&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Reference   BeidouOperationReference `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;reference,omitempty&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,3,opt,name=reference&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Tolerations []corev1.Toleration      `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;tolerations,omitempty&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,4,opt,name=tolerations&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Checking    []&lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;                 `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;checking,omitempty&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,5,opt,name=checking&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type BeidouOperationReference &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ID &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt; `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,1,opt,name=id&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type BeidouReference &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ID    &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt;       `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,1,opt,name=id&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Steps []BeidouStep `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;steps&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,2,opt,name=steps&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type BeidouStatus &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Message &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt; `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;message&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,1,opt,name=message&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;type BeidouList &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;struct&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  metav1.TypeMeta `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;,inline&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  metav1.ListMeta `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;metadata&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,1,opt,name=metadata&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  Items []Beidou `json:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;items&quot;&lt;/span&gt; protobuf:&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bytes,2,opt,name=items&quot;&lt;/span&gt;`&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;核心流程：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;go&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ExecSteps&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context, steps []v1alpha1.BeidouStep, references []v1alpha1.BeidouReference)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    logger, _ := ctx.Value(CtxLogger).(*log.Entry)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; hasMonitored &lt;span class=&quot;code-snippet__keyword&quot;&gt;bool&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; i, step := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; steps {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; j, op := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; step.Operations {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;switch&lt;/span&gt; op.Op {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;DeploymentCreationEfficiency&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; !hasMonitored {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            err := monitor.Output()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;              logger.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Failed to output: %s&quot;&lt;/span&gt;, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          }()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        hasMonitored = &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      err := ExecOperation(ctx, op, references)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; fmt.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;failed to run operation %s: %s&quot;&lt;/span&gt;, op.Name, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ExecOperation&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context, op v1alpha1.BeidouOperation, references []v1alpha1.BeidouReference)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;switch&lt;/span&gt; op.Type {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; v1alpha1.BeidouTask:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; !tasks.IsRegistered(op.Op) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; ErrNotRegistered&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; !tasks.DoesSupportReference(op.Op) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; ExecTask(ctx, op.Op, op.Args)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; ExecTaskWithRefer(ctx, op.Op, op.Args, references)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ExecTask&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context, opname &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;, args []v1alpha1.BeidouArg)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;switch&lt;/span&gt; opname {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; tasks.CreateNamespace:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; ns &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, arg := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; args {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;switch&lt;/span&gt; arg.Name {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;NS&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        ns = arg.Value&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; op.CreateNamespace(ctx, ns)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ExecTaskWithRefer&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(ctx context.Context, opname &lt;span class=&quot;code-snippet__keyword&quot;&gt;string&lt;/span&gt;, args []v1alpha1.BeidouArg, references []v1alpha1.BeidouReference)&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;error&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;switch&lt;/span&gt; opname {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; tasks.RepeatNTimes:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; times &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; steps []v1alpha1.BeidouStep&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; err error&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, arg := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; args {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;switch&lt;/span&gt; arg.Name {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;TIMES&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        times, err = strconv.Atoi(arg.Value)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != &lt;span class=&quot;code-snippet__literal&quot;&gt;nil&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; ErrParseArgs&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ACTION&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, refer := &lt;span class=&quot;code-snippet__keyword&quot;&gt;range&lt;/span&gt; references {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; refer.ID == arg.Reference.ID {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            steps = refer.Steps&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; RepeatNTimes(ctx, times, steps)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; ErrNotImplemented&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;操作原语的实现示例：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;func PodAnnotations(ctx context.Context, &lt;span class=&quot;code-snippet__keyword&quot;&gt;data&lt;/span&gt; PodAnnotationsData) error {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  kclient, ok := ctx.Value(tasks.KubernetesClient).(kubernetes.Interface)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; !ok {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; tasks.ErrNoKubernetesClient&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  pods, err := kclient.CoreV1().Pods(&lt;span class=&quot;code-snippet__keyword&quot;&gt;data&lt;/span&gt;.Namespace).List(metav1.ListOptions{})&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; err != nil {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; fmt.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;failed to list pods in ns %s: %s&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;data&lt;/span&gt;.Namespace, err)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, pod := range pods.Items {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; pod.Annotations == nil {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; fmt.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;pod %s in ns %s has no annotations&quot;&lt;/span&gt;, pod.Name, &lt;span class=&quot;code-snippet__keyword&quot;&gt;data&lt;/span&gt;.Namespace)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; _, &lt;span class=&quot;code-snippet__keyword&quot;&gt;annotation&lt;/span&gt; := range &lt;span class=&quot;code-snippet__keyword&quot;&gt;data&lt;/span&gt;.Exists {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; _, exists := pod.Annotations[&lt;span class=&quot;code-snippet__keyword&quot;&gt;annotation&lt;/span&gt;]; !exists {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; fmt.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;annotation %s does not exist in pod %s in ns %s&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;annotation&lt;/span&gt;, pod.Name, &lt;span class=&quot;code-snippet__keyword&quot;&gt;data&lt;/span&gt;.Namespace)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; k, v := range &lt;span class=&quot;code-snippet__keyword&quot;&gt;data&lt;/span&gt;.Equal {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; pod.Annotations[k] != v {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; fmt.Errorf(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;value of annotation %s is not %s in pod %s in ns %s&quot;&lt;/span&gt;, k, v, pod.Name, &lt;span class=&quot;code-snippet__keyword&quot;&gt;data&lt;/span&gt;.Namespace)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; nil&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;2858960&quot; data-style-type=&quot;undefined&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-id=&quot;2763309&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.45454545454545453&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/US10Gcd0tQGY9ddd5GpbmVRuaRfuaESAUBGE7uHX5G0nxxLSub2QTKZdu538V7GaHXS5jsTCebYCUibaHsjg0ow/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;22&quot; title=&quot;动态黑色音符&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;后续&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前阿里云容器服务团队内部已经实现了初版，已用于部分云产品的内部性能测试以及常规的回归测试，很大程度上提升了我们的工作效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在 yaml 中编程，是对云原生场景下声明式操作的体现，也是对声明式服务的一种实践。对于常规工作场景中重复编码或重复操作，可考虑类似的方式进行满足。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;欢迎大家对这样的服务形态和项目进行讨论，探索这种模式的价值。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;阿里云容器服务持续招聘，欢迎加入我们，一起在 K8s、边缘计算、Serverless 等领域开拓，让当前变得更美好，也为未来带来可能性！联系邮箱：flyer.zyf@alibaba-inc.com&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;3198855&quot; data-style-type=&quot;undefined&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-id=&quot;2763310&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;h3&gt;&lt;span&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;References&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;ul data-lake-id=&quot;68233cdd66bdd0f49dc0db80339d39d5&quot; lake-indent=&quot;0&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Ansible&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：https://docs.ansible.com/ansible/latest/index.html&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;SaltStack&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：https://docs.saltstack.com/en/latest/&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Argo Workflow&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：https://github.com/argoproj/argo&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;clusterloader2&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：https://github.com/kubernetes/perf-tests/tree/master/clusterloader2&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;新媒体排版&quot; data-id=&quot;2858960&quot; data-style-type=&quot;undefined&quot;&gt;&lt;section data-style-type=&quot;5&quot; data-id=&quot;2763309&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;0.45454545454545453&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/US10Gcd0tQGY9ddd5GpbmVRuaRfuaESAUBGE7uHX5G0nxxLSub2QTKZdu538V7GaHXS5jsTCebYCUibaHsjg0ow/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;22&quot; title=&quot;动态黑色音符&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong mpa-from-tpl=&quot;t&quot;&gt;&lt;span mpa-is-content=&quot;t&quot;&gt;Spring Cloud Alibaba 七天训练营&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;七天时间了解微服务各模块的实现原理，手把手教学如何独立开发一个微服务应用，助力小白开发者从 0 到 1 建立系统化的知识体系。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;识别下方海报二维码或点击&lt;/span&gt;&lt;strong&gt;&lt;span&gt;【阅读原文】&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;即刻报名参与！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5333333333333333&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/yvBJb5Iiafvlhk4gwDDMUiamhlAIBicVTNNYjIrcFeZ0ybnQ84rZZ40fLJH0TKUrdVnYBLlNFJ2KvbYoPPEgmiauCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;750&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;__bg_gif&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/6aVaON9Kibf5ibKRPQgZ9XgbVNsIeQUnfKSiaErmr8dtdicicS3A8m6TiavR6ZB0Eah3pD0kjQg8ACyNb1x5ibdqRg2jA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;400&quot;/&gt;&lt;/section&gt;&lt;section data-brushtype=&quot;text&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;span&gt;&lt;strong&gt;戳原文，即刻报名参与！&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d4b9aea664f8f15f711a33923fe8b40b</guid>
<title>你附近的人都有谁，这个功能是怎么实现的？</title>
<link>https://toutiao.io/k/zgm2yd8</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;手机上很多软件都有附近的人的功能，比如微信的“附近的人”，美团的“附近的餐厅”等等，那么这些功能可以怎么实现呢？&lt;/p&gt;&lt;h2&gt;Redis中的Geo命令&lt;/h2&gt;&lt;p&gt;在Redis在3.2版本新增了一个功能，就是GEO（地理位置），这个GEO功能总共有6个函数，分别为：&lt;/p&gt;&lt;p&gt;GEOADD：添加指定的地理位置坐标值到指定的key中，可以同时添加多个。&lt;/p&gt;&lt;p&gt;语法：&lt;code&gt;GEOADD location-set longitude latitude name [longitude latitude name ...]&lt;/code&gt;&lt;/p&gt;&lt;p&gt;GEODIST：计算两个给定位置之间的距离，可指定距离的单位，默认是米。&lt;/p&gt;&lt;p&gt;语法：&lt;code&gt;GEODIST location-set location-x location-y [unit]&lt;/code&gt;&lt;/p&gt;&lt;p&gt;GEOHASH：获取地理位置的geohash值。&lt;/p&gt;&lt;p&gt;语法：&lt;code&gt;GEOHASH key member [member …]&lt;/code&gt;&lt;/p&gt;&lt;p&gt;GEOPOS：指定key和member，返回所有指定名称的位置&lt;/p&gt;&lt;p&gt;语法：&lt;code&gt;GEOPOS location-set name [name ...]&lt;/code&gt;&lt;/p&gt;&lt;p&gt;GEORADIUS：给定经纬度信息，以给定的经纬度为中心，查询与中心位置距离不超过给定最大距离(radius)的所有地理位置元素。&lt;/p&gt;&lt;p&gt;语法：&lt;code&gt;GEORADIUS location-set longitude latitude radius m|km|ft|mi [WITHCOORD] [WITHDIST] [ASC|DESC] [COUNT count]&lt;/code&gt;&lt;/p&gt;&lt;p&gt;GEORADIUSBYMEMBER：与&lt;code&gt;GEORADIUS&lt;/code&gt;命令类似，给定中心位置，查询附近的地理位置元素，与&lt;code&gt;GEORADIUS&lt;/code&gt;命令不同的是，这个命令的中心点是某个成员，是从用户的维度来查询。&lt;/p&gt;&lt;p&gt;语法：&lt;code&gt;GEORADIUSBYMEMBER location-set location radius m|km|ft|mi [WITHCOORD] [WITHDIST] [ASC|DESC] [COUNT count]&lt;/code&gt;&lt;/p&gt;&lt;p&gt;更详细的参数说明可参考redis文档。&lt;/p&gt;&lt;p&gt;实现附近的人等方法就是通过&lt;code&gt;GEOADD&lt;/code&gt;将多个用户的地理位置坐标保存到Redis，使用&lt;code&gt;GEORADIUS&lt;/code&gt;就可以获得某个中心点指定范围内附近的人的所有地理位置元素及距离等信息。&lt;/p&gt;&lt;h2&gt;使用示例&lt;/h2&gt;&lt;p&gt;来看看具体是怎么使用的：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;使用GEOADD添加地理位置坐标&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;132&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.22826086956521738&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6sSKUw3oZQM1XoKibmmeEc67HWZ5pIxzhT1FhibwVUWiaRI68ib5DNk2zia48IxDf1TloTvJ9JsSM69DKffEaILicSsw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;644&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;使用GEORADIUS查找附近的人&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.46959896507115134&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6sSKUw3oZQM1XoKibmmeEc67HWZ5pIxzh5NUTGtLOT8Hb1MLQ5B7VVe05vhjeibmPtN7xVjKibib3iaTw67jhuRdCpw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;773&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;使用GEORADIUSBYMEMBER查找附近的人&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.5159420289855072&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6sSKUw3oZQM1XoKibmmeEc67HWZ5pIxzh161prHnEtvsk36z7ibACxPV7P1CwjTtNicu0X36DibEMGvmeMPa4Icxgg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;690&quot;/&gt;&lt;/p&gt;&lt;h2&gt;使用注意事项&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1、异常&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;注意在Java应用代码中调用georadius和georadiusbymember这两个指令，在没有数据的时候，会抛异常&lt;code&gt;redis.clients.jedis.exceptions.JedisDataException&lt;/code&gt;，所以在使用这个命令的时候，需要对方法进行try…catch…，或者自己封装一层，如果没有数据或者异常的时候返回空的数据。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2、删除单个用户的位置数据&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Redis的Geo只提供了六个命令，没有提供删除地理位置的指令，而Redis-geo的底层数据结构是ZSET，因此可以通过ZREM命令来删除某个成员的位置元素。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;594&quot; data-backw=&quot;578&quot; data-ratio=&quot;1.027027027027027&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6sSKUw3oZQM1XoKibmmeEc67HWZ5pIxzhbJLQ2RHvmiaG0aAE9b13styhJ8v6jGTF2ibwJZmzE4a2RA3jZsIb6Y6g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;666&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3、单位&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;查询出来的距离单位，就是查询时指定的单位，比如查询时指定了km，那么距离的单位就是km。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4、经纬度1度的跨度是多少&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在经线上，纬度每差1度,实地距离大约为111千米&lt;/p&gt;&lt;p&gt;在纬线上，经度每差1度,实际距离为111×cosθ千米。（其中θ表示该纬线的纬度.在不同纬线上,经度每差1度的实际距离是不相等的）。&lt;/p&gt;&lt;p&gt;在生成测试数据时需要注意这一点，如果随便生成数据，在查询时可能会找不到。&lt;/p&gt;&lt;p&gt;到这里为止，在Redis中使用geohash来实现附近功能的使用就介绍完了，使用起来就是这么简单，如果只是为了使用，看到这里就够了。如果你还想了解一下geohash的原理，那么请继续往下看。&lt;/p&gt;&lt;h2&gt;实现原理&lt;/h2&gt;&lt;p&gt;Redis的Geo功能底层使用的数据结构是ZSET，算法是geohash算法。&lt;/p&gt;&lt;h3&gt;Z阶曲线&lt;/h3&gt;&lt;p&gt;Z阶曲线如下所示，曲线看起来比较清晰，生成一个Z阶曲线只需要把每个Z的首尾相连即可。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.9963436928702011&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6sSKUw3oZQM1XoKibmmeEc67HWZ5pIxzhqCUVWibMBRIicibDakzVibIcXCQZjycCTemGQJzImxthFgWibKU8TtGR0xQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;547&quot;/&gt;&lt;/p&gt;&lt;h3&gt;Geohash描述&lt;/h3&gt;&lt;p&gt;Geohash是一种位置编码算法，它是基于Z阶曲线，把空间区域分割为多个网格/桶来存储，Geohash对地理位置编码后保存到字符串中。&lt;/p&gt;&lt;p&gt;Geohash保证，如果编码得到的字符串的共同前缀长度越长，两点之间的距离就越近，但是反过来是不保证的，两个很接近的点，可以有不同的/很少的共同字符串前缀。嗯，这是一个充分不必要条件。&lt;/p&gt;&lt;p&gt;简单的理解，Geohash就是将每一个经纬度的位置信息进行编码后得到编码字符串保存，而编码字符串相似的点，表示距离相近（也有特殊的情况），因此当根据某个中心点查找附近的人时，可以使用字符串前缀匹配算法来查找附近的人的位置信息。&lt;/p&gt;&lt;h3&gt;Geohash特点与好处&lt;/h3&gt;&lt;p&gt;Geohash有两个特点：&lt;/p&gt;&lt;p&gt;1、对于每一个位置，都有唯一的Geohash编码&lt;/p&gt;&lt;p&gt;2、Geohash可以用来做地理标记&lt;/p&gt;&lt;p&gt;在数据库中使用geohash编码保存位置信息还有两个好处：&lt;/p&gt;&lt;p&gt;1、使用geohash来做索引，查询时会非常快&lt;/p&gt;&lt;p&gt;2、geohash的索引可以实现非常快的临近点搜索，因为越接近的点，所在的索引范围越小&lt;/p&gt;&lt;h3&gt;Geohassh编码&lt;/h3&gt;&lt;p&gt;在进行编码时，geohash使用“二分逼近法”来得到经纬度的二进制，经度的范围是[-180,180]，纬度的范围是[-90,90]，编码过程如下：&lt;/p&gt;&lt;p&gt;1、将区间以中位数一分为二得到左右区间，如果数值比中位数大，则落在右区间，得到编码1，否则落到左区间，得到编码0&lt;/p&gt;&lt;p&gt;2、从第一步得到的新区间，继续将区间以中位数一分为二得到新的左右区间，继续判断数值的范围，如果数值比中位数大，则落在右区间，得到编码1，否则得到编码0&lt;/p&gt;&lt;p&gt;3、递归执行上述的过程，不断逼近所求数值，直到得到所要的长度&lt;/p&gt;&lt;p&gt;通过二分法不断逼近目标值获得0/1来得到某个数值的二进制编码，而编码的长度与要求的精度有关，长度与精度的对应关系见下表：&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;geohash length&lt;/th&gt;&lt;th&gt;lat bits&lt;/th&gt;&lt;th&gt;lng bits&lt;/th&gt;&lt;th&gt;lat error&lt;/th&gt;&lt;th&gt;lng error&lt;/th&gt;&lt;th&gt;km error&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;±23&lt;/td&gt;&lt;td&gt;±23&lt;/td&gt;&lt;td&gt;±2500&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;±2.8&lt;/td&gt;&lt;td&gt;±5.6&lt;/td&gt;&lt;td&gt;±630&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;±0.70&lt;/td&gt;&lt;td&gt;±0.70&lt;/td&gt;&lt;td&gt;±78&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;±0.087&lt;/td&gt;&lt;td&gt;±0.18&lt;/td&gt;&lt;td&gt;±20&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;±0.022&lt;/td&gt;&lt;td&gt;±0.022&lt;/td&gt;&lt;td&gt;±2.4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;±0.0027&lt;/td&gt;&lt;td&gt;±0.0055&lt;/td&gt;&lt;td&gt;±0.61&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;18&lt;/td&gt;&lt;td&gt;±0.00068&lt;/td&gt;&lt;td&gt;±0.00068&lt;/td&gt;&lt;td&gt;±0.076&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;±0.000085&lt;/td&gt;&lt;td&gt;±0.00017&lt;/td&gt;&lt;td&gt;±0.019&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;编码过程示例&lt;/h3&gt;&lt;p&gt;以经纬度(23.157 113.273)为例子，二进制编码长度取10位，编码过程如下：&lt;/p&gt;&lt;p&gt;纬度：23.157&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;编码&lt;/th&gt;&lt;th&gt;左区间&lt;/th&gt;&lt;th&gt;中位数&lt;/th&gt;&lt;th&gt;右区间&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;-90&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;90&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;90&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;22.5&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;22.5&lt;/td&gt;&lt;td&gt;33.75&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;22.5&lt;/td&gt;&lt;td&gt;28.125&lt;/td&gt;&lt;td&gt;33.75&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;22.5&lt;/td&gt;&lt;td&gt;25.3125&lt;/td&gt;&lt;td&gt;28.125&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;22.5&lt;/td&gt;&lt;td&gt;23.90625&lt;/td&gt;&lt;td&gt;25.3125&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;22.5&lt;/td&gt;&lt;td&gt;23.203125&lt;/td&gt;&lt;td&gt;23.90625&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;22.5&lt;/td&gt;&lt;td&gt;22.8515625&lt;/td&gt;&lt;td&gt;23.203125&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;22.8515625&lt;/td&gt;&lt;td&gt;23.0273438&lt;/td&gt;&lt;td&gt;23.203125&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;得到编码序列：1010000011&lt;/p&gt;&lt;p&gt;经度：113.273&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;编码&lt;/th&gt;&lt;th&gt;左区间&lt;/th&gt;&lt;th&gt;中位数&lt;/th&gt;&lt;th&gt;右区间&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;-180&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;180&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;90&lt;/td&gt;&lt;td&gt;180&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;90&lt;/td&gt;&lt;td&gt;135&lt;/td&gt;&lt;td&gt;180&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;90&lt;/td&gt;&lt;td&gt;112.5&lt;/td&gt;&lt;td&gt;135&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;112.5&lt;/td&gt;&lt;td&gt;123.75&lt;/td&gt;&lt;td&gt;135&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;112.5&lt;/td&gt;&lt;td&gt;118.125&lt;/td&gt;&lt;td&gt;123.75&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;112.5&lt;/td&gt;&lt;td&gt;115.3125&lt;/td&gt;&lt;td&gt;118.125&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;112.5&lt;/td&gt;&lt;td&gt;113.90625&lt;/td&gt;&lt;td&gt;115.3125&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;112.5&lt;/td&gt;&lt;td&gt;113.203125&lt;/td&gt;&lt;td&gt;113.90625&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;113.203125&lt;/td&gt;&lt;td&gt;113.554688&lt;/td&gt;&lt;td&gt;113.90625&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;得到编码序列：1101000001&lt;/p&gt;&lt;h3&gt;编码组合&lt;/h3&gt;&lt;p&gt;经过计算，纬度的编码序列：1010000011，经度的编码序列：1101000001。&lt;/p&gt;&lt;p&gt;编码后得到的经纬度二进制再进行重新组合，每一个经纬度都是一组数据，纬度放奇数位，经度保存在偶数位，从左到右，下标从0开始，组合后的编码序列：11100 11000 00000 00111，转化为十进制后，分别是28 24 0 13，根据Geohas使用的Base32编码，得到的编码字符串是ws0e。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.21686746987951808&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6sSKUw3oZQM1XoKibmmeEc67HWZ5pIxzhcGicX8qxH5PF9ajRc4GQ9UO3sFY8Dw1zODCGOKNqzHs9NrZo4RyRRuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;913&quot;/&gt;&lt;/p&gt;&lt;p&gt;验证编码结果：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.2160919540229885&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6sSKUw3oZQM1XoKibmmeEc67HWZ5pIxzhVyPiclL4yfI9OQ8VKwxfDlHPcTE85pdsk1xEH67mQf0cKP90yZ9KTvQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;870&quot;/&gt;&lt;/p&gt;&lt;p&gt;至于为什么要把经纬度分别安排在奇数和偶数位，前面提到，Geohash是基于Z阶曲线实现的，如下图所示，Z阶曲线实现中，空间被划分为多个网格，x 轴就是纬度，y轴就是经度。经度放偶数位，纬度放奇数位就是这样而来的。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;565&quot; data-backw=&quot;563&quot; data-ratio=&quot;1.0035523978685612&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/6sSKUw3oZQM1XoKibmmeEc67HWZ5pIxzh1icZ2YrxpGTuODiak851HMfguK40cFvNCicasyka4SVgucgjJZhicib2ibnA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;563&quot;/&gt;&lt;/p&gt;&lt;h2&gt;Redis中查找距离&lt;/h2&gt;&lt;p&gt;进行了编码和数据存储之后，就可以查询中心点附近的地理位置。&lt;/p&gt;&lt;p&gt;在Redis中的实现代码这里不展开了，有兴趣的可参考这份代码注释：https://blog.huangz.me/diary/2015/annotated-redis-geo-source.html&lt;/p&gt;&lt;p&gt;简单的说，是这样的：&lt;/p&gt;&lt;p&gt;1、添加的地理位置数据底层使用跳跃表保存&lt;/p&gt;&lt;p&gt;2、利用输入的中心点和输入半径确定待搜索的区域范围对象。这个范围对象包含了满足条件的经度以及对应的能覆盖目标区域的九宫格区域（目标是为了查询八个方向，四面八方）&lt;/p&gt;&lt;p&gt;3、遍历九宫格，根据每个geohash网格的范围框选出位置对象，最终找到满足条件的对象&lt;/p&gt;&lt;p&gt;以上，就是本次要介绍的内容，从实践和原理上分析了geohash算法实现距离查找的功能，了解了原理，使用起来就更加随心应手。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;参考资料：&lt;/p&gt;&lt;p&gt;https://en.wikipedia.org/wiki/Geohash&lt;/p&gt;&lt;p&gt;https://halfrost.com/go_spatial_search/&lt;/p&gt;&lt;p&gt;https://www.cnblogs.com/LBSer/p/3310455.html&lt;/p&gt;&lt;p&gt;https://redis.io/commands#geo&lt;/p&gt;&lt;p&gt;https://en.wikipedia.org/wiki/Z-order_curve&lt;/p&gt;&lt;p&gt;https://blog.huangz.me/diary/2015/annotated-redis-geo-source.html&lt;/p&gt;&lt;p&gt;https://segmentfault.com/a/1190000020977911&lt;/p&gt;&lt;p&gt;原创文章，文笔有限，才疏学浅，文中若有不正之处，万望告知。&lt;/p&gt;&lt;p&gt;如果本文对你有帮助，麻烦顺手点个赞吧，谢谢&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;推荐阅读：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIwNDUxNTAxNA==&amp;amp;mid=2247483706&amp;amp;idx=1&amp;amp;sn=4e7162f021cb5bb8cefbdc2720ee0a95&amp;amp;chksm=973fb293a0483b857a04b7abc0fe918ce32682b361fa277f8ebb942a2779e5dd982316d47618&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;redis对象&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;redis对象&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;281&quot; data-backw=&quot;578&quot; data-ratio=&quot;0.4859375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/6sSKUw3oZQOhVMJtNmrjxxbVUF1nSAaKxVdZTDTK68Fvlbz9MY41qNLfRK4eHYHic7I2s2wgUqqe054qnUgLt2Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>