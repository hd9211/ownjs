<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>ae44db42f50b0fc8d76e79eefd895be1</guid>
<title>白话linux操作系统原理</title>
<link>https://toutiao.io/k/zgc47l7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;虽然计算机相关专业，操作系统和计算机组成原理是必修课。但是大学时和真正从事相关专业工作之后，对于知识的认知自然会发生变化。还很有可能，一辈子呆在学校的老师们只是照本宣科，自己的理解也不深。所以今天我站在真正排查解决问题时的需要层面，用白话说一说linux操作系统的那些知识。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;本文整体采用的是类似递归调用的递进式结构。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;linux内核的本质&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.2537313432835822&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlicaj3NoVtl5MyZZIr39JD2AMOgVhppo9nIVOwEfYgQxsoYzC9henrAF2OpC7Hib69vDuHNNVh0QYqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;268&quot;/&gt;&lt;/p&gt;&lt;p&gt;简单来说如上图所示，咱们平时的应用程序或者linux命令要和操作系统打交道，都要经过一个叫做linux内核的软件。所有的硬件操作都需要通过他。就像古代女子出嫁，都要有媒人。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;虽然现在都是婚姻自由，没有父母之命媒妁之言那一套。其实在古代，媒人对于整个古代历史上的婚姻而言，起到的正向的作用。现在社会欺骗的婚姻也不少。而古代媒人都要是对两家熟悉，或者做过背调，掌握了情况的人。多数都是门当户对，除了个别婚前就心有所属的，大多数还是过得很幸福的。毕竟多数人的标准都差不多：好看就行。我觉得自己老公长得就挺好看，只是出去打听了一下，95%的人不这么认为&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlicaj3NoVtl5MyZZIr39JD2AvMD6TgATfCrR9qDnxaeU7RtoKpbwUnaEia52TJziaqgKlCSVBIzD7Plg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;20&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;本文不是为封装制度正名。想表达的是：媒人最初是一种保护机制。而linux之父&lt;span&gt;林纳斯最初设计linux&lt;/span&gt;内核也是设计成一种保护机制。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9305555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/2tk5ianItRlicaj3NoVtl5MyZZIr39JD2AHgz1Pspv1V6SDD2ZWSUjSClVPWawgcBSoicoOfCdwl5TVciao8NdAYuQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;360&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;为什么说linux内核是一种保护机制呢，这要从冯·诺依曼体系结构说起。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;冯·诺依曼体系结构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6029629629629629&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRliccfY8uUicHoibfkj1TpT97Gxdruu2L1uHemAp0RRUOaAyoGM5NkGkvOOiaiahnz297KJF3596EicpcGXQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;675&quot;/&gt;&lt;/p&gt;&lt;p&gt;冯·诺依曼体系结构的要点是：&lt;/p&gt;&lt;p&gt;&lt;br/&gt;计算机的数制采用二进制。计算机应该按照程序顺序执行。它采用存储程序方式，指令和数据不加区别，混合存储在同一个存储器中。数据和程序在内存中是没有区别的，它们都是内存中的数据。当EIP指针指向哪，CPU就加载哪段内存中的数据。如果是不正确的指令格式，CPU就会发生错误中断。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里提到计算机是在顺序的执行指令，但是咱们明明可以一边听歌一边敲代码。这个除了在目前多CPU架构下可以实现，之前单CPU下也可以实现。因为有时钟分片。如果没有插入优先级高的任务，cpu会在均匀的执行多项任务分片。因为CPU执行速度快，人可能完全感觉不到实际上是断续执行的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;不过我记得上大学的时候，03年我买了一台笔记本用来打魔兽。当时可是用的市面上的顶配呢。有时候还是会一卡一卡的。可以切身感受到时钟分片。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如果出现错误，可以通过中断来处理。中断也需要等待时钟分片。好在linux内核的分片十分合理，让中断可以及时响应。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.3935483870967742&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRliccfY8uUicHoibfkj1TpT97GxpSASVa1s0zY2e03iawfvXgzYynRowMrp4P2ClicYSI4CuxRVOBRSBkFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;310&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在现代CPU的保护模式中，每个内存段都有其描述符。这个描述符记录着这个内存段的访问权限。在&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486166&amp;amp;idx=1&amp;amp;sn=08a24c175c02a4b146dc52088d410599&amp;amp;chksm=fafde078cd8a696e616aebcb72aeef444e1e0008bf950a368933195f13c0a268face0d3ee371&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《接下来一段时间会对大家进行网络通信的魔鬼训练-理解socket》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;《接下来一段时间会对大家进行网络通信的魔鬼训练-理解socket》&lt;/a&gt;里我就提到过文件描述符。这里稍详细的解释下。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;文件描述符&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;linux系统中，一切皆文件。文件描述符是一个索引值，指向内核为每一个进程所维护的该进程打开文件的记录表。当程序打开一个现有文件或者创建一个新文件时，内核向进程返回一个文件描述符。在程序设计中，一些涉及底层的程序编写往往会围绕着文件描述符展开。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;&lt;span&gt;文件描述符、文件、进程间的关系&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;&lt;h4&gt;1.描述：&lt;/h4&gt;&lt;h4&gt;2.系统为维护文件描述符，建立了三个表&lt;/h4&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;进程级的文件描述符表&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;系统级的文件描述符表&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;文件系统的i-node表&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5040387722132472&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRliccfY8uUicHoibfkj1TpT97GxfnKWaCMPHPVAZVmicXOXibE1gQVehZRZibO4VpNzh8WpSFLiaO0nQjqXfA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;619&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h4&gt;&lt;span&gt;3.通过这三个表，认识文件描述符&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6353322528363047&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRliccfY8uUicHoibfkj1TpT97Gxc3bzeK7qPPDh8pqIQoHqvT7bAvjBibibuB7fzXu8nPuIxUmIsgr0SfdA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;617&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;在进程A中，文件描述符1和30都指向了同一个打开的文件句柄（#23），这可能是该进程多次对执行打开操作&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;进程A中的文件描述符2和进程B的文件描述符2都指向了同一个打开的文件句柄（#73），这种情况有几种可能，1.进程A和进程B可能是父子进程关系;2.进程A和进程B打开了同一个文件，且文件描述符相同（低概率事件=_=）；3.A、B中某个进程通过UNIX域套接字将一个打开的文件描述符传递给另一个进程。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;进程A的描述符0和进程B的描述符3分别指向不同的打开文件句柄，但这些句柄均指向i-node表的相同条目（#1936），换言之，指向同一个文件。发生这种情况是因为每个进程各自对同一个文件发起了打开请求。同一个进程两次打开同一个文件，也会发生类似情况。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;文件描述符限制&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;　　&lt;/p&gt;&lt;p&gt;有资源的地方就有战争，文件描述符也是一种资源，系统中的每个进程都需要有文件描述符才能进行改变世界的宏图霸业。世界需要秩序，于是就有了“文件描述符限制”的规定。&lt;/p&gt;&lt;h4&gt;如下表：&lt;/h4&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.44393241167434716&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRliccfY8uUicHoibfkj1TpT97GxFYdtSuoiaIjHqNrpia0RHs80ibyBWjnhvGazicF1OlTGT6n22dnoDziaKtw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;651&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;查看文件描述符限制也可以使用linux命令。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.9251968503937008&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRlicaj3NoVtl5MyZZIr39JD2AM3ibG6JzLicC26ptnSpWCz2MIZY0P4K7czmQ5abeMI2n9HWc0cDI90CA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;508&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在《提供一个排查性能问题的思路》里，我就提到过解决过too many open files问题。咱们今天来实际理解一下。执行下面命令：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3443298969072165&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRliccfY8uUicHoibfkj1TpT97GxxItgOGn7iahWcBpzCl2jcKIIqopGmLjkOIjroKtMPXQ4DZQKMqmmnCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;485&quot;/&gt;&lt;/p&gt;&lt;p&gt;这就是一个进程实际占用的文件描述符和文件描述符数。超过系统设定值就会发生too many open files异常。这里大家应该可以切实理解一个文件描述符就是一个文件，文件描述符占用超限就是too many open files啦。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;特殊的文件描述符&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;有三个特殊的文件描述符，分别是0、1、2，对应每个进程的标准输入、标准输出和错误输出。每个进程启动时，操作系统就会给它分配这三个标准的文件描述符。咱们平时用的console控制台就是通过读写这三个文件来实现滴。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;linux基础里有介绍怎么重定向，下面一条命令可以将标准输出1和错误输出2重定向到一个文件：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2777777777777778&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/2tk5ianItRliccfY8uUicHoibfkj1TpT97GxUcl1LrdafVyItWics8HvY5T6K9vU3qOGqdmErQQtiaoOBRicWm5nwu9Wg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;378&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;linux的内存分段、中断机制和文件描述符限制都是内核的保护机制。当然这并不全面，还有其他机制。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;本篇内容&lt;span&gt;和&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486245&amp;amp;idx=1&amp;amp;sn=494e71a356ad4bd26633b5ae5278215f&amp;amp;chksm=fafde18bcd8a689de3cfa45c0bbe629bc098d26a85106caff62b0bfa069055374515865a3b26&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《网络通信之Session的历史血脉》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;《网络通信之Session的历史血脉》&lt;/a&gt;、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486186&amp;amp;idx=1&amp;amp;sn=f21e17b21beb4c99cef0e076071ac859&amp;amp;chksm=fafde044cd8a69526aa3ec9edbe71ea5aa41de2ef236494201dc2f20701ed8abc6be1a72344f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《深入理解MQ生产端的底层通信过程-理解channel》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;《深入理解MQ生产端的底层通信过程-理解channel》&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486166&amp;amp;idx=1&amp;amp;sn=08a24c175c02a4b146dc52088d410599&amp;amp;chksm=fafde078cd8a696e616aebcb72aeef444e1e0008bf950a368933195f13c0a268face0d3ee371&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《接下来一段时间会对大家进行网络通信的魔鬼训练-理解socket》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;《接下来一段时间会对大家进行网络通信的魔鬼训练-理解socket》&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486210&amp;amp;idx=1&amp;amp;sn=fd7a60ca9b4e41f942dd0b2653228774&amp;amp;chksm=fafde1accd8a68ba4f41f19d3543984f47756e884eb395b295cc7f4f1cd0575bc0305fba5431&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《网络字节序列-大端序和小端序》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;《网络字节序列-大端序和小端序》&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486242&amp;amp;idx=1&amp;amp;sn=483566d3fd97f333d3ea114dbbe8f7d1&amp;amp;chksm=fafde18ccd8a689abfcb9959079a3cbfc4ecf98e52d34318bf9490422622bddb0c4b81ef2288&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《https引起的跨域问题-COE&amp;amp;casestudy》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;《https引起的跨域问题-COE&amp;amp;casestudy》&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247486103&amp;amp;idx=1&amp;amp;sn=943c5b7f3558df78164321806f273c8f&amp;amp;chksm=fafde039cd8a692f86f0ac97b0e1e05ece075de3e4f33e6a5ec90b269c51aed1963ff3107e0e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《懂得三境界-使用dubbo时请求超过问题》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;《懂得三境界-使用dubbo时请求超过问题》&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzUzNjAxODg4MQ==&amp;amp;mid=2247485988&amp;amp;idx=1&amp;amp;sn=efad5a030bc0a933ac5af2ee09f3c6c4&amp;amp;chksm=fafde08acd8a699c198d0d65c413273f05f2796cfd873160c2ba81ed3f33aebfaccb62234cb7&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;《一个http请求进来都经过了什么(2021版)》&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot; wah-hotarea=&quot;click&quot;&gt;《一个http请求进来都经过了什么(2021版)》&lt;/a&gt;&lt;span&gt;是一个系列。等全部串联起来，之前很多让人望而却步的生产问题，会有了大致的排查方向吧~&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;参考文章：https://segmentfault.com/a/1190000009724931&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>64c25a00e3ad2d859f9a4550bce85433</guid>
<title>再见 Typora！推荐一个 2.3 万 Star 的开源 Markdown 编辑器</title>
<link>https://toutiao.io/k/ol8ule0</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Typora 是一个&lt;span&gt;口碑&lt;/span&gt;&lt;span&gt;还不&lt;/span&gt;&lt;span&gt;错&lt;/span&gt;的 M&lt;span&gt;ark&lt;/span&gt;&lt;span&gt;down 编辑器&lt;/span&gt;，据说出自国内一位开发者做的。11 月它宣布正式版将开始收费（&lt;span&gt;14.99 美元） &lt;/span&gt;，最多只支持 3 台设备。对于忠实用户来说，价格也不算高。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对非重度用户来说，听到收费消息后，可能就想找其他 Markdown 编辑器了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天开源前哨推荐一个不错的替代品 &lt;span&gt;M&lt;/span&gt;&lt;span&gt;ark Text&lt;/span&gt;，在 GitHub 已有 2.3 万 Star。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;简介&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Mark Text 是一个简单而优雅的开源 Markdown 编辑器，专注于速度和可用性，适用于 Linux、MacOS 和 Windows，是新一代的 Markdown 编辑器。&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6546875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DSU8cv1j3ibTkY3Y2RwlTNGgNAHZlR7ibgF0hnXQtgjMmMzkEquvIRx28E1BnEA4fbBggfdduXxEeRutmg9NbvZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Mark Text 的作者喜欢写作，但是用了很多 Markdown 编辑器，仍然没有一个编辑器可以完全满足需求。Mark Text 使用虚拟 DOM 来呈现页面，使得它变得高效，并且开源的 Mark Text 可以让任何喜欢 Markdown 写作的人都可以使用 Mark Text，或者为它提供一些新的功能和特性。Mark Text 将永远开源，并且鼓励开发者贡献自己的代码，帮助 Mark Text 变得更好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;功能特点：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;支持实时预览和干净简单的界面，可以获得无干扰的写作体验。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Markdown 扩展，如数学表达式（KaTeX）、表情符号等。、&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持段落和内联样式快捷方式，提高写作效率。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;支持输出 HTML 和 PDF 文档。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;多种主题：Cadmium Light、Material Dark 等。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Cadmium Light&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.68046875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DSU8cv1j3ibTkY3Y2RwlTNGgNAHZlR7ibgYbmK4yoqn0659DibGLusr10qP1pogfdCXA13rXYlF4eQgYHiclcjOeRA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Material Dark&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6859375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/DSU8cv1j3ibTkY3Y2RwlTNGgNAHZlR7ibgnibjQbeFSDzSul7ic7HGFDWia5FGoXjdBc2Dv7YMUUfMrx6jT6MCiaNxuA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;源代码模式&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6716917922948074&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/DSU8cv1j3ibTkY3Y2RwlTNGgNAHZlR7ibgeJ5DkWqYnwRLHZm1ENykMkic8fibDVEaP1WUqgL2lCL0p5XwdeOAzmqg/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1194&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;打字机模式&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6716917922948074&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/DSU8cv1j3ibTkY3Y2RwlTNGgNAHZlR7ibgZEZz7clfKp3uFia52cARcMkT4BcIrEFUxzJJdWsEbEpvhIcobSVdOwA/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1194&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;专注模式&lt;br/&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6716917922948074&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/DSU8cv1j3ibTkY3Y2RwlTNGgNAHZlR7ibgdOL2ichEXd1eLYMTC6DrDL9b3kqnml3uGMbumYyL2ytjSzFlFDIcAaw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;1194&quot;/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;项目地址是：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;https://github.com/marktext/marktext&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;下载安装&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;MacOS&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以从发布页面直接下载文件进行安装，或者使用 homebrew cask 进行安装：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 下载页&lt;/span&gt;&lt;br/&gt;https://github.com/marktext/marktext/releases/latest&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 命令安装&lt;/span&gt;&lt;br/&gt;brew install --cask mark-text&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Windows&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同样可以通过发布页面进行下载安装，或者使用 Chocolatey：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;choco install marktext&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Linux&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Linux 下的安装有 3 种方式，其中使用二进制文件安装的话，从发布页直接下载解压即可，过程中可能需要安装一些依赖项，简单介绍其他两种方式。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;使用 AppImage&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于 AppImage 环境进行安装。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;在 Mark Text 的下载发布页下载 AppImage&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;执行命令：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;chmod +x marktext-%version%-x86_64.AppImage&lt;br/&gt;./marktext-%version%-x86_64.AppImage&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;执行 Mark Text&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;桌面文件创建&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;$ curl -L https://raw.githubusercontent.com/marktext/marktext/develop/resources/linux/marktext.desktop -o &lt;span&gt;$HOME&lt;/span&gt;/.&lt;span&gt;local&lt;/span&gt;/share/applications/marktext.desktop&lt;br/&gt;&lt;br/&gt;$ vim &lt;span&gt;$HOME&lt;/span&gt;/.&lt;span&gt;local&lt;/span&gt;/share/applications/marktext.desktop&lt;br/&gt;&lt;br/&gt;$ update-desktop-database &lt;span&gt;$HOME&lt;/span&gt;/.&lt;span&gt;local&lt;/span&gt;/share/applications/&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;从 Flathub 安装&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;首先需要先安装 flatpak 和 flathub 存储库，然后使用以下命令安装 Mark Text：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;flatpak install flathub com.github.marktext.marktext&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 仅为当前用户安装&lt;/span&gt;&lt;br/&gt;flatpak install --user flathub com.github.marktext.marktext&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;运行时使用以下命令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;flatpak run com.github.marktext.marktext&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;更新时使用以下命令：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;flatpak update com.github.marktext.marktext&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;- EOF -&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;推荐阅读&lt;/span&gt;  &lt;span&gt;点击标题可跳转&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;1、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODM5MDU3MA==&amp;amp;mid=2650878789&amp;amp;idx=1&amp;amp;sn=27f3cf0e37dcce5e42a6305187cee8f7&amp;amp;chksm=8b67d400bc105d161f6bb15c95d9441e812bf1f35b0f00d37ed90a213d7eef3e0913fc0dcaa9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;再见 Xshell！这个开源的终端工具更酷炫！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;11&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;再见 Xshell！这个开源的终端工具更酷炫！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODM5MDU3MA==&amp;amp;mid=2650877901&amp;amp;idx=1&amp;amp;sn=2832952fc9883b8f2d3eca31ac1188bb&amp;amp;chksm=8b67c888bc10419e9080fd8cdab6c6cebde61a1dfa04b90f4a8bea5bfb543f69b70fb7813970&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;白嫖把“开源”搞崩了！&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;白嫖把“开源”搞崩了！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3、&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODM5MDU3MA==&amp;amp;mid=2650875961&amp;amp;idx=1&amp;amp;sn=f2871bd0f368220d2075adc70b3fec67&amp;amp;chksm=8b67cf7cbc10466a66aae8383281e87b035a2dd3ce6895131949021db168a2b98c49e2dea7d6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;耗费 7.5 亿做的“垃圾”，被 3 个程序员爸爸重写并开源了&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;耗费 7.5 亿做的“垃圾”，被 3 个程序员爸爸重写并开源了&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;看完本文有收获？请转发分享给更多人&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;推荐关注「数据分析与开发」，提升数据技能&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA5ODM5MDU3MA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/DmibiaFiaAI4B3yECIF3LxR8ZMPVxnto79bB8LrraNT18VPT5aCHSDFGiczOnt4CYCQlBCWg5ykox33kcLydFc4jhA/0?wx_fmt=png&quot; data-nickname=&quot;数据分析与开发&quot; data-alias=&quot;DBDevs&quot; data-signature=&quot;「数据分析与开发」分享数据分析与开发相关技术文章、教程、工具&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;span&gt;点赞和在看就是最大的支持&lt;/span&gt;&lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>53ddf6b53afd45203e8583a5c4a51494</guid>
<title>125 python|第二部分：面向对象（2 ）MVC框架</title>
<link>https://toutiao.io/k/s1ktu0m</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;前言：本篇文章为「&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;面向对象&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;」的第二篇，将从&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;MVC是什么、有什么特点、应用案例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;三个方面进行学习。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;                        &lt;br mpa-from-tpl=&quot;t&quot; data-filtered=&quot;filtered&quot;/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;30&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ZcWNHRSIjJGs9bvuzwV9GxaCvA4ic5qN3EhBUUSmSLdmc9YTk9M815IRRFboPVT3Klpyd0bCVEdIsgn7p6ue1Zg/640?wx_fmt=png&quot;/&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;span&gt;02MVC&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.1  MVC介绍&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.027777777777777776&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/uyZsSl2gvXUO54LuJbh78tMMYyiav6tM98N9ouoQQTft4O3IWh4GbXmy4DLUYM3ECeaqyg9U36gDRH7rNrjqlvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1）定义&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;MVC（Model View Controller）是&lt;/span&gt;&lt;strong&gt;模型-视图-控制器&lt;/strong&gt;的总称，&lt;strong&gt;M是指业务模型，V是指用户界面，C则是控制器。&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9602446483180428&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/uyZsSl2gvXU9rQoxU7ufEianSS27uM5iaIDQYb1cic7vfOmmAic2tIK7B0SMAH6xibwMcRNc9ujgalkkV7YU67qLibZg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;327&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;图源：百度&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;使用MVC的&lt;span&gt;目的&lt;/span&gt;是：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;将M和V的实现代码分离，从而使&lt;strong&gt;同一个程序可以使用不同的表现形式&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;比如一批统计数据可以分别用柱状图、饼图来表示。C存在的目的则是确保M和V的同步，一旦M改变，V应该同步更新。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;235&quot; data-source-title=&quot;愿有岁月可回首&amp;amp;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;p&gt;&lt;span&gt;MVC不是框架，不是设计模式，更不是架构，它仅仅&lt;span&gt;&lt;strong&gt;是一种架构模式&lt;/strong&gt;&lt;/span&gt;。它不描述系统架构，也不指定使用什么技术，仅仅是描述系统架构的一种模式，&lt;span&gt;&lt;strong&gt;类似于AOP、IOC、ORM等&lt;/strong&gt;&lt;/span&gt;等，具体的框架技术则是基于这些模式的一些实现而已，比如：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;基于MVC模式的框架有：&lt;/strong&gt;&lt;/span&gt;著名的Struts、Spring MVC、JSF、Tapestry以及比较老的WebWork等等，&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;基于ORM模式的框架有：&lt;/strong&gt;&lt;/span&gt;Hibernate、MyBatis、iBatis以及.NET比较有名的Entity Framework等等。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section class=&quot;blockquote_info js_blockquote_source&quot; data-json=&quot;%7B%22type%22%3A%22out%22%2C%22source%22%3A%22url%22%2C%22digest%22%3A%22%3Cp%3EMVC%E4%B8%8D%E6%98%AF%E6%A1%86%E6%9E%B6%EF%BC%8C%E4%B8%8D%E6%98%AF%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%8C%E6%9B%B4%E4%B8%8D%E6%98%AF%E6%9E%B6%E6%9E%84%EF%BC%8C%E5%AE%83%E4%BB%85%E4%BB%85%E6%98%AF%E4%B8%80%E7%A7%8D%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F%E3%80%82%E5%AE%83%E4%B8%8D%E6%8F%8F%E8%BF%B0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%EF%BC%8C%E4%B9%9F%E4%B8%8D%E6%8C%87%E5%AE%9A%E4%BD%BF%E7%94%A8%E4%BB%80%E4%B9%88%E6%8A%80%E6%9C%AF%EF%BC%8C%E4%BB%85%E4%BB%85%E6%98%AF%E6%8F%8F%E8%BF%B0%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E7%9A%84%E4%B8%80%E7%A7%8D%E6%A8%A1%E5%BC%8F%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%BA%8EAOP%E3%80%81IOC%E3%80%81ORM%E7%AD%89%E7%AD%89%EF%BC%8C%E5%85%B7%E4%BD%93%E7%9A%84%E6%A1%86%E6%9E%B6%E6%8A%80%E6%9C%AF%E5%88%99%E6%98%AF%E5%9F%BA%E4%BA%8E%E8%BF%99%E4%BA%9B%E6%A8%A1%E5%BC%8F%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%8E%B0%E8%80%8C%E5%B7%B2%EF%BC%8C%E6%AF%94%E5%A6%82%E5%9F%BA%E4%BA%8EMVC%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%A1%86%E6%9E%B6%E6%9C%89%E8%91%97%E5%90%8D%E7%9A%84Struts%E3%80%81Spring%26nbsp%3BMVC%E3%80%81JSF%E3%80%81Tapestry%E4%BB%A5%E5%8F%8A%E6%AF%94%E8%BE%83%E8%80%81%E7%9A%84WebWork%E7%AD%89%E7%AD%89%EF%BC%8C%E5%9F%BA%E4%BA%8EORM%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%A1%86%E6%9E%B6%E6%9C%89Hibernate%E3%80%81MyBatis%E3%80%81iBatis%E4%BB%A5%E5%8F%8A.NET%E6%AF%94%E8%BE%83%E6%9C%89%E5%90%8D%E7%9A%84Entity%26nbsp%3BFramework%E7%AD%89%E7%AD%89%E3%80%82%3C%2Fp%3E%22%2C%22digestLen%22%3A234%2C%22text%22%3A%22%22%2C%22article%22%3A%7B%7D%2C%22hasReportOverSize%22%3Afalse%2C%22editorReportData%22%3A%5B%7B%22id%22%3A%22122333%22%2C%22key%22%3A%2276%22%2C%22len%22%3A1%7D%5D%2C%22from%22%3A%22%E6%84%BF%E6%9C%89%E5%B2%81%E6%9C%88%E5%8F%AF%E5%9B%9E%E9%A6%96%26%22%7D&quot;&gt;&lt;span class=&quot;blockquote_other&quot;&gt;愿有岁月可回首&amp;amp;&lt;/span&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span&gt;架构、架构模式、框架、GoF设计模式分类&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7978227060653188&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/uyZsSl2gvXU9rQoxU7ufEianSS27uM5iaIoQ63vDwoiayrs8VpJ9f27ibFHuRJfuvuoMqU6UeBvLddeVYALp0fs9dQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;643&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;图源&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;：愿有岁月可回首&amp;amp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2）特点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;table interlaced=&quot;enabled&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;ue-table-interlace-color-single&quot;&gt;&lt;td valign=&quot;top&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;3&quot; align=&quot;center&quot;&gt;&lt;span&gt;&lt;strong&gt;MVC的优缺点分析&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ue-table-interlace-color-double&quot;&gt;&lt;td valign=&quot;middle&quot; rowspan=&quot;4&quot; colspan=&quot;1&quot; align=&quot;center&quot;&gt;&lt;strong&gt;&lt;span&gt;优点&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;3&quot;&gt;&lt;strong&gt;&lt;span&gt;1.耦合性低&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; ：视图层和业务层分离，互相之间的依赖程度低下。&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ue-table-interlace-color-single&quot;&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;3&quot;&gt;&lt;strong&gt;&lt;span&gt;2.重用性高：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;多个视图可以访问一个模型，没有对模型的数据进行格式化。&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ue-table-interlace-color-double&quot;&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;3&quot;&gt;&lt;strong&gt;&lt;span&gt;3.部署快，生命周期成本低：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;使开发和维护用户接口的技术含量降低。&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ue-table-interlace-color-single&quot;&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;3&quot;&gt;&lt;strong&gt;&lt;span&gt;4.可维护性高：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;分离使得WEB应用更易于维护和修改。&lt;span&gt;‍‍&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ue-table-interlace-color-double&quot;&gt;&lt;td valign=&quot;middle&quot; rowspan=&quot;3&quot; colspan=&quot;1&quot; align=&quot;center&quot;&gt;&lt;strong&gt;&lt;span&gt;缺点&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;3&quot;&gt;&lt;strong&gt;&lt;span&gt;1.调试困难：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;每个构件在使用之前都需要经过彻底的测试。&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ue-table-interlace-color-single&quot;&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;3&quot;&gt;&lt;strong&gt;&lt;span&gt;2.&lt;span&gt;不适合小型，中等规模的应用程序&lt;/span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;不能体现MVC的优势，同时会使开发变得繁琐。&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ue-table-interlace-color-double&quot;&gt;&lt;td valign=&quot;top&quot; rowspan=&quot;1&quot; colspan=&quot;3&quot;&gt;&lt;strong&gt;&lt;span&gt;3.视图与控制器间的过于紧密的连接，并且降低了视图对模型数据的访问。&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3）举例：商品信息管理系统&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;python&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    商品信息管理系统Commodity&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        需求1：录入商品信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        V:显示菜单、选择菜单、获取商品信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        M:商品名称、商品单价、商品编号&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        C:添加商品信息(编号、追加到列表)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        需求2：显示商品信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        V:按2键,打印列表中的每个元素&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        需求3：删除商品信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        V:按3键,获取商品编号&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        C:在列表中移除指定商品&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        需求4：修改商品信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        V:按4键,获取商品所有信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        C:更新指定商品信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;CommidityView&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    商品界面视图：负责处理界面逻辑,输入输出...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.cotroller = CommidityCotroller() &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;show_menu&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        print(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;1键录入商品信息&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        print(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;2键显示商品信息&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        print(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;3键删除商品信息&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        print(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;4键修改商品信息&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;select_menu&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        item = int(input(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;请输入您的选项：&#x27;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; item == &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            self.get_info() &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;elif&lt;/span&gt; item == &lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            self.show_commidity()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;elif&lt;/span&gt; item == &lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            self.del_commidity()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;elif&lt;/span&gt; item == &lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            self.modify_commidity()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;get_info&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        com = CommidityModel() &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        com.name = input(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;请输入商品名称&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        com.price = input(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;请输入商品单价&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.cotroller.add_commidity(com)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;show_commidity&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;code-snippet__keyword&quot;&gt;in&lt;/span&gt; self.cotroller.list_commidity:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            print(&lt;span class=&quot;code-snippet__string&quot;&gt;f&#x27;&lt;span class=&quot;code-snippet__subst&quot;&gt;{item.name}&lt;/span&gt;的编号是&lt;span class=&quot;code-snippet__subst&quot;&gt;{item.cid}&lt;/span&gt;,单价是&lt;span class=&quot;code-snippet__subst&quot;&gt;{item.price}&lt;/span&gt;&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;del_commidity&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        cid = int(input(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;请输入商品编号：&#x27;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; self.cotroller.remove_commidity(cid):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            print(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;删除成功&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            print(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;删除失败&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;modify_commidity&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        com = CommidityModel()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        com.cid = int(input(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;请输入商品编号&#x27;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        com.name = input(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;请输入商品名称&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        com.price = input(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;请输入商品单价&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; self.cotroller.update_commidity(com):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            print(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;修改成功&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            print(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;修改失败&#x27;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;CommidityModel&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    商品数据模型：包装商品信息&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self, name=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;&#x27;&lt;/span&gt;, price=&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;, cid=&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.name = name&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.price = price&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.cid = cid &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;CommidityCotroller&lt;/span&gt;:&lt;/span&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    商品控制器:负责处理商品信息的核心逻辑&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.start_cid = &lt;span class=&quot;code-snippet__number&quot;&gt;1001&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.list_commidity = [] &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;add_commidity&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self,new_com)&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        new_com.cid = self.start_cid&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.start_cid += &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        self.list_commidity.append(new_com) &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;remove_commidity&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self, cid)&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;code-snippet__keyword&quot;&gt;in&lt;/span&gt; range(len(self.list_commidity)):&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; self.list_commidity[i].cid == cid:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__keyword&quot;&gt;del&lt;/span&gt; self.list_commidity[i]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;update_commidity&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(self,new_com)&lt;/span&gt;:&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;code-snippet__keyword&quot;&gt;in&lt;/span&gt; self.list_commidity:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; item.cid == new_com.cid:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                item.__dict__ = new_com.__dict__  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;view = CommidityView() &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    view.show_menu() &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    view.select_menu() &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.12&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/U9kKudHzsK3W5c0NRAdWnuRVSW6XQyGvg6OGgAx0tyceatfwtlSTTwQN8GvP155mZttbHucmWyonfEPlOiamy9g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;350&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br mpa-from-tpl=&quot;t&quot; data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;section data-mpa-template=&quot;t&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.0859375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/JrRY60XUiczCB0aAKusfQXhclcbPLWbWc64icUBDfxMM47JVqSw3IOFHpry1wBXo1ryBDcXMIAWicGppjb6JJ3RCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;256&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br data-filtered=&quot;filtered&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;参考资料：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[1] 到底如何区分什么是架构、框架、模式和平台 ？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/qq_41699100/article/details/79228957&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[2] MVC是框架？是设计模式？是架构？还是……&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/lianjiangwei/article/details/50864636&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[3] 什么是MVC&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/zjthorse/article/details/82077964&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[4]  MVC框架&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://baike.so.com/doc/5465675-5704006.html&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;[5] Python基础项目：超市商品销售管理系统（面向对象）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/u012156341/article/details/89375307&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;[6] &lt;/span&gt; 用Python写一个简单的商品管理系统（面向过程）&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://blog.csdn.net/apple_50916469/article/details/114597247&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;花样早餐展位&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.33359375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/uyZsSl2gvXU9rQoxU7ufEianSS27uM5iaIKYTacAEaQVMibjAMBsGrkf4bZb4kQd77bt5Bg2JWyI4CXdLqUibvkXyw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ee7ef9c6d47886f810b0406aa77308e7</guid>
<title>让 Python 起飞的 24 个骚操作！</title>
<link>https://toutiao.io/k/lvbq09x</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p class=&quot;original_area_primary&quot;&gt;
                                                                                                &lt;/p&gt;

                    
                                            

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>23fd1a09e19873c2e75efd6ee5aba591</guid>
<title>AWS 15 年（1）：从 Serverful 到 Serverless</title>
<link>https://toutiao.io/k/bik9jdj</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU5NTY5NDk4MA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/ibOaboJGeVrQoibaGOpszLLJRibFDIS8UR5GPicBictWnsDiccicfWIicrvZ7vUv7SD1WYFZwLfnVN8wLHewPsBe72Hh3Q/0?wx_fmt=png&quot; data-nickname=&quot;世民谈云计算&quot; data-alias=&quot;SammyTalksAboutCloud&quot; data-signature=&quot;世民和他的朋友们一起谈论云计算，技术、产品、业界和行业数字化转型等都在这儿。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;221&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.38202247191011235&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibOaboJGeVrTiagZYE2DoA6gCtOF0rHsrELYcAibfVQt4vlpiaFTDbicjbnYGlCTCriczr2QickGBjyrAW01QlPomDtbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;890&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;2006年，AWS发布了其第一个Serverless存储服务S3和第一个Serverful计算服务EC2，这也是AWS正式发布的前两个服务，开启了云计算波澜壮阔的旅程。&lt;span&gt;2014年，AWS发布了业界第一个Serverless计算服务AWS Lambda。&lt;/span&gt;在今年（&lt;/span&gt;2021&lt;span&gt;年）的&lt;/span&gt;&lt;span&gt;AWS re:Invent&lt;/span&gt;&lt;span&gt;大会上，&lt;/span&gt;&lt;span&gt;AWS又&lt;/span&gt;&lt;span&gt;发布三个&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;新品：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;Redshift Serverless&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;EMR Serverless&lt;/span&gt;&lt;span&gt;和&lt;/span&gt;&lt;span&gt;MSK Serverless&lt;/span&gt;&lt;span&gt;&lt;span&gt;。AWS的15年发展史（2006到2021年），也是一部AWS创造和深耕Serverless的历史，一部从Serverful不断向Serverless演进的历史。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;那么，&lt;/span&gt;&lt;span&gt;为什么AWS服务要不断从Serverful演进到Serverless呢？在AWS心中&lt;/span&gt;&lt;span&gt;到底&lt;span&gt;Serverless&lt;/span&gt;是什么呢？为什么&lt;span&gt;AWS一直&lt;/span&gt;不遗余力地推进&lt;span&gt;Serverless&lt;/span&gt;呢？&lt;span&gt;Serverless&lt;/span&gt;到底是一种技术模式还是商业模式呢？对云计算行业影响如何呢？&lt;/span&gt;&lt;span&gt;以下内容是笔者和几个业界朋友讨论后的成果，总结后分享出来。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;一、&lt;/span&gt;AWS Serverless&lt;span&gt;是什么？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.053125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b2YlTLuGbKDsbJzupnILVFhPtMaRjmvPKYRqTMjibE9pnd8oiawLVrQbOHQe4wBXkBQkzpKCWPKBqWgOLgwccBug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在看什么是Serverless之前，我们来看看典型的Serverful服务EC2。在笔者看来，EC2和在用户自己数据中心内的物理服务器或虚拟机没有本质区别，主要区别只是位置变了（从用户数据中心挪到了AWS数据中心），以及管理角色变了（用户自己管理变为AWS托管），而用户还是要负责EC2服务器的选型、确定规格、配置和运维，及其生命周期管理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;而Serverless则是一个全新物种。在&lt;/span&gt;AWS Serverless Q&amp;amp;A&lt;span&gt;页面（&lt;/span&gt;&lt;span&gt;https://aws.amazon.com/cn/serverless/faqs/&lt;/span&gt;&lt;span&gt;）中，&lt;/span&gt;&lt;span&gt;AWS&lt;/span&gt;&lt;span&gt;是这么定义&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;的：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;no server management：&lt;/span&gt;&lt;span&gt;用户不需要管理服务器&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;pay-for-value services：&lt;/span&gt;&lt;span&gt;按价值付费&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;continuous scaling：&lt;/span&gt;&lt;span&gt;能自动持续扩容&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;built-in fault tolerance：&lt;/span&gt;&lt;span&gt;内置高可用和容错能力&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这定义非常简洁。简而言之，&lt;/span&gt;&lt;span&gt;AWS Serverless服务就是客户不需要自己管理服务器（Server）的服务&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;这不是说这些服务就不需要Server，而是AWS把这些服务与Server相关的事情都替客户干了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;AWS已有的&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;服务如下表所列：&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;领域&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;Serverless &lt;span&gt;服务&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;计算&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;AWS Lambda&lt;span&gt;，&lt;/span&gt;AWS Fargate&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;程序集成&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Amazon EventBridge,Amazon SNS,AWS Step Functions, Amazon SQS, Amazon API Gateway, AWS AppSync&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;存储&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;AWS S3，Amazon DynamoDB，Amazon RDS，Amazon Aurora Serverless&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;分析&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;Redshift Serverless,EMR Serverless，MSK Serverless&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;实际上，AWS一直在做从Serverful到Serverless持续进化的过程：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.42406542056074764&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibOaboJGeVrR1Afqicnn9nDoODEFo4C00Na7VKE1he6UGdNTVicJvCBl6rh04gT9g5UbPdl7hvAbF96VscL6fDR0w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;856&quot;/&gt;&lt;/p&gt;&lt;p&gt;（till 2019）&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一服务被Serverless化后会带来什么变化呢？以&lt;/span&gt;&lt;span&gt;EMR Serverless&lt;/span&gt;&lt;span&gt;为例，AWS官网中的下图将其与托管EMR服务做了对比。用户在使用托管&lt;span&gt;EMR&lt;/span&gt;服务时，首先需要确定实例的规格和集群规模，然后创建集群并配置集群参数，再提交&lt;span&gt;job&lt;/span&gt;，任务处理完毕后销毁集群。而&lt;/span&gt;&lt;span&gt;使用&lt;span&gt;EMR Serverless&lt;/span&gt;服务时，用户只需要创建应用、提交&lt;span&gt;job&lt;/span&gt;，集群的事情完全由&lt;span&gt;AWS&lt;/span&gt;负责&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;264&quot; data-backw=&quot;470&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5617021276595745&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibOaboJGeVrTiagZYE2DoA6gCtOF0rHsrEIhYpVM9KOGnSTggFCiaJbArhh4qaIuPaP8NJo18xXRUoS8sxicOLnDog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;470&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;利用Serverless服务开发的应用就是Serverless架构的应用程序。&lt;/span&gt;&lt;span&gt;在下面这个例子中：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;每当一个新的帖子文本文件被添加到 S3 存储桶中，一个专用的 API 网关就会触发一个 Lambda 函数1，该函数负责初始化mp3文件生成的过程，并将信息的副本存储在 DynamoDB 中。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;函数1还&lt;span&gt;向&lt;/span&gt;&lt;span&gt; SNS &lt;/span&gt;&lt;span&gt;发布消息，触发 Lambda 函数3&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;span&gt;这个函数调用&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;Amazon P&lt;/span&gt;&lt;span&gt;olly 接口，&lt;/span&gt;&lt;span&gt;将文&lt;/span&gt;&lt;span&gt;本转换成&lt;/span&gt;&lt;span&gt;与文本相同语言的mp3&lt;/span&gt;&lt;span&gt;音频&lt;/span&gt;&lt;span&gt;，并&lt;/span&gt;&lt;span&gt;将&lt;/span&gt;&lt;span&gt;音频文件保存在S3存储桶中&lt;/span&gt;&lt;span&gt;，并将&lt;/span&gt;&lt;span&gt;存储桶中的地址信息保存到&lt;/span&gt;&lt;span&gt;DynamoDB&lt;/span&gt;&lt;span&gt;的相应&lt;/span&gt;&lt;span&gt;信息的记录中。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;函数2则负责从Dynamodb中获取文本文件的完整信息，包括对应的mp3音频在S3存储桶中的地址。&lt;span/&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5552325581395349&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibOaboJGeVrTiagZYE2DoA6gCtOF0rHsrE57l310Sv8fOgDnosa3E9MZqooqNcEjlO1NCNfQjjO7jB9xibWq7qfcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;688&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;二、&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;对AWS客户的价值：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;节省成本、&lt;/span&gt;减少管理和技术负担、加快应用交付速度&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.053125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b2YlTLuGbKDsbJzupnILVFhPtMaRjmvPKYRqTMjibE9pnd8oiawLVrQbOHQe4wBXkBQkzpKCWPKBqWgOLgwccBug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;  &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;（一）节省成本&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;国内某公有云厂商对其&lt;/span&gt;1000&lt;span&gt;多云客户进行了资源利用情况分析，抽样超过一万计算节点发现，&lt;/span&gt;&lt;span&gt;42%&lt;/span&gt;&lt;span&gt;的节点资源利用率低于&lt;/span&gt;&lt;span&gt;10%&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;72%&lt;/span&gt;&lt;span&gt;的节点资源利用率低于&lt;/span&gt;&lt;span&gt;20%&lt;/span&gt;&lt;span&gt;。在&lt;/span&gt;&lt;span&gt;AWS&lt;/span&gt;&lt;span&gt;上，许多客户一直都只使用 &lt;/span&gt;&lt;span&gt;EC2&lt;/span&gt;&lt;span&gt;实例可用容量的&lt;/span&gt;&lt;span&gt;10-20%&lt;/span&gt;&lt;span&gt;。这说明，大部分公有云用户都存在一定程度的资源浪费，这一方面是在浪费用户自己的钱，另一方面云服务商的服务器空转导致不环保。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;AWS Serverless服务能根据任务处理的需要而自动增减服务器资源，用户只需为所用资源付费&lt;/span&gt;&lt;span&gt;&lt;span&gt;。因为这些资源是真正为用户创造价值的资源，没有资源被浪费，因此，&lt;/span&gt;&lt;span&gt;AWS&lt;/span&gt;&lt;span&gt;将这种付费模式称为“按价值付费（&lt;/span&gt;&lt;span&gt;Pay-for-value&lt;/span&gt;&lt;span&gt;）”。此外，无服务器架构可以降低总体拥有成本&lt;/span&gt;&lt;span&gt;(TCO) &lt;/span&gt;&lt;span&gt;，因为许多集群的网络、安全和配置调优等管理任务也不再需要了。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;这是因为&lt;/span&gt;Serverless&lt;span&gt;架构的服务和应用采用事件驱动（&lt;/span&gt;&lt;span&gt;Event-driven&lt;/span&gt;&lt;span&gt;）架构，只有在任务处理启动后，&lt;/span&gt;&lt;span&gt;AWS&lt;/span&gt;&lt;span&gt;才会创建必要的Server资源，并在处理过程中自动调整资源，处理完毕后就释放资源。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从这原理出发，我们能看出来，&lt;span&gt;通常&lt;/span&gt;&lt;/span&gt;&lt;span&gt;认为&lt;/span&gt;&lt;span&gt;Serverless服务只适合于低频场景&lt;/span&gt;&lt;span&gt;&lt;span&gt;，因为每次Server的冷启动会带来一定的应用时延，这会带来不好的用户体验。但是，在特定场景中，体验要求可以稍微降低一点，而&lt;span&gt;省钱&lt;/span&gt;是主要的需求。另一方面，&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;免去了用户配置、优化、运维服务器集群的负担，简化了用户操作，这又提升了用户体验。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在https://www.simform.com/blog/aws-lambda-pricing/中&lt;/span&gt;&lt;span&gt;&lt;span&gt;，作者对比了两种场景下&lt;/span&gt;AWS Lambda&lt;span&gt;和&lt;/span&gt;&lt;span&gt;EC2的&lt;/span&gt;&lt;span&gt;费用：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibOaboJGeVrTiagZYE2DoA6gCtOF0rHsrEUdauia1pLGosb8NMcxM2XlztmB1vIUxsskoJ12IKO8eib0uLbY4Z0icBA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p&gt;（图1）&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5631313131313131&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ibOaboJGeVrTiagZYE2DoA6gCtOF0rHsrE80URuhf8m08wNLaSUsNV6LClID6opas8MSia4MLTJuZibO7CsGJibhbFA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;396&quot;/&gt;&lt;/p&gt;&lt;p&gt;（图2）&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;（二）降低技术和管理负担&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从企业管理者角度来看，使用Serverless服务，不需要创建、配置和管理服务器集群，也就不需要这方面的技术人员，这也能降低使用门槛、人力成本和管理负担。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从开发人员角度来看，Serverless让开发者不用关心繁琐的基础设施运维工作，使开发者可以把更多的精力放在核心业务的实现上。因此，无论是前端开发者，还是后端开发者，Serverless都可以帮助他们提升效率，降低交付时间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以说，&lt;/span&gt;&lt;span&gt;Serverless是云计算的未来，是整个软件和应用架构的未来，符合“云计算让应用越来越简单”这个大方向&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;（三）加快应用交付速度&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;有了Serverless后，云服务厂商底层架构承担的事情越多，业务层面需要关注的架构和运维工作就越少，应用交付的时间就越快。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在AWS官网中，AWS宣称使用Serverless服务能加快应用交付速度。其Coca-Cola的案例中，使用 AWS Lambda 等无服务器构建块，1 周内即开发出应用原型，在 150 天内将 Web 应用程序从原型扩展到 10000 台机器。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;三、Serverless&lt;span&gt;对&lt;/span&gt;&lt;span&gt;AWS&lt;/span&gt;&lt;span&gt;自己的价值：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;讨好用户&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;、施压&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;追随者、环保标杆&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.053125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b2YlTLuGbKDsbJzupnILVFhPtMaRjmvPKYRqTMjibE9pnd8oiawLVrQbOHQe4wBXkBQkzpKCWPKBqWgOLgwccBug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;AWS为什么一直不遗余力地推广&lt;span&gt;Serverless&lt;/span&gt;&lt;/span&gt;&lt;span&gt;呢？可能有以下几个原因：&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;AWS&lt;span&gt;是在&lt;/span&gt;&lt;/span&gt;&lt;span&gt;践行其“以客户为中心”的理念&lt;/span&gt;&lt;span&gt;&lt;span&gt;：一方面，&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;是一种新型云资源使用模式，对低频场景的客户来说能切实降低云成本；另一方面，Serverless又能减轻用户负担、降低使用门槛、优化用户体验。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Serverless&lt;span&gt;架构下，服务器资源颗粒度会更细，更有利于填充其资源池的波峰，提高服务器使用率。而且，节省出来的服务器可以通过&lt;/span&gt;&lt;span&gt;Spot Instance&lt;/span&gt;&lt;span&gt;方式售卖给客户。这能&lt;/span&gt;&lt;/span&gt;&lt;span&gt;提升AWS的毛利率&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;AWS服务价格比较&lt;/span&gt;&lt;span&gt;贵，所以搞&lt;/span&gt;&lt;span&gt;Serverless对低频客户的成本削减帮助会很大，效果会很显著&lt;/span&gt;&lt;span&gt;，&lt;/span&gt;&lt;span&gt;能收到更多客户点赞，俘虏更多用户的芳心，可&lt;/span&gt;&lt;/span&gt;&lt;span&gt;收获更多成本敏感型新用户&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;AWS&lt;span&gt;净利润&lt;/span&gt;&lt;/span&gt;&lt;span&gt;超过20%，有足够的利润空间来承受可能的利润下降。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Serverless&lt;span&gt;能减少空闲服务器空转，这将能降低碳排放，这符合&lt;/span&gt;&lt;/span&gt;&lt;span&gt;环保主义者&lt;/span&gt;&lt;span&gt;的要求，有助于&lt;/span&gt;&lt;span&gt;树立AWS的环保形象&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;有助于&lt;/span&gt;&lt;span&gt;施压追随者&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;为什么说&lt;/span&gt;Serverless&lt;span&gt;能帮助AWS施压追随者呢？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;AWS&lt;span&gt;做&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;的榜样在先，用户能得到切实的好处，追随者不得不跟进。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;本来追随者为了追赶&lt;/span&gt;AWS&lt;span&gt;，往往定价降低，或者折扣很大，大规模上&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;后收入减少将对其财务带来很大压力。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;追随者没有&lt;/span&gt;AWS那么大的规模和&lt;span&gt;那么强的运营能力，大规模上&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;后对其财务压力会进一步增大。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;四、Serverless的路还很长&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.053125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b2YlTLuGbKDsbJzupnILVFhPtMaRjmvPKYRqTMjibE9pnd8oiawLVrQbOHQe4wBXkBQkzpKCWPKBqWgOLgwccBug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一方面，与其说Serverless是一种新技术模式，不如说它是一种新商业模式。&lt;/span&gt;&lt;span&gt;AWS搞&lt;/span&gt;&lt;span&gt;Serverless&lt;/span&gt;&lt;span&gt;确实是一着好棋，既讨好了用户，又施压了追随者，还讨好了环保主义者，还还进一步强化了其创新引领者的形象。这既是AWS创新能力的体现，也是其以用户为中心的理念的体现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;另一方面，Serverless的路还很长，因为还有大量问题待解决，比如冷启动时间比较长、函数调试手段缺乏、适用场景有限、产品种类较少、应用尚未推广开来、尚未形成开发者大群体、&lt;span&gt;缺乏业界统一标准等问题。&lt;/span&gt;这些问题还需要AWS和业界继续努力。&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;相信AWS会发布更多更好的Serverless服务，相信AWS会持续优化Serverless应用架构及模式，相信有越来越多用户采用Serverless，相信云上应用开发会变得越来越简单高效。&lt;/span&gt;&lt;span&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>