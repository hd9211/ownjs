<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>2b4cada9c90d6b1ab719d6df30ff2087</guid>
<title>使用 Vue3 + AR 撸猫，才叫好玩</title>
<link>https://toutiao.io/k/4gfulxg</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;先来个预告效果图开场&lt;/span&gt;&lt;/h2&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;1208&quot; data-backw=&quot;558&quot; data-ratio=&quot;2.164772727272727&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwMHXxccY1ebBE5SxezeMudVRvtg8HLn5pyTG69yVGfFtCjy2nFhRWpg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;352&quot;/&gt;&lt;/figure&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;前言：浏览苹果官网时，你会看到发现每个设备在介绍页底部有这么一行文字：“&lt;strong&gt;用增强现实看看***&lt;/strong&gt;”。使用苹果设备点击之后就能将该设备投放于用户所在场景视界，在手机摄像头转动的时候，也能看到物体对象不同的角度，感觉就像真的有一台手机放在你的面前。（效果如下图。注意：由于该技术采用苹果自有的 arkit 技术，安卓手机无法查看）&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.081896551724138&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwUcP5zm0Zb0DpI3Mcz6Pmd5vDm4nqju4ADf1FLEia7qI5MgbIGfiaa5XA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;2088&quot;/&gt;聪明的你可能已经想到了，为什么只能用苹果手机才能查看，那有没有一种纯前端实现的通用的 web AR 技术呢？&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;纯前端解决方案&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;纯前端技术的实现可以用下图总结：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0672645739910314&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwfGc7PiaorIBgEaBByibXibwQkPB2y3kzJIkjzX4R3dYo7icMkQZVjI6Lug/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;446&quot;/&gt;以 JSARToolKit 为例:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;使用 WebRTC 获取摄像头信息，然后在 canvas 画布上绘制原图;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;JSARToolKit 计算姿态矩阵，进而渲染虚拟信息&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5595667870036101&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwlTEiaTApLeyUgCOia3FJXbuBNf56CDeEGal0LBdNU8Wk7zTx6ic8RjTxw/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;554&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;实现核心步骤&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5943152454780362&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwhnKgkqtVT6YfQSaNeibbCFYfga3hUA8I22bn6QjOlbYaNXwMRG2yOcA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;387&quot;/&gt;&lt;/figure&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;（识别）WebRTC 获取摄像头视频流；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;（跟踪）Tracking.js 、JSFeat 、ConvNetJS 、deeplearn.js 、keras.js ；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;（渲染）A-Frame、 Three.js、 Pixi.js 、Babylon.js&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;比较成熟的框架：AR.js&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;好比每个领域都有对应的主流开发框架，Web AR 领域比较成熟框架的就是 AR.js，它在增强现实方面主要提供了如下三大功能：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;图像追踪&lt;/strong&gt;。当相机发现一幅 2D 图像时，可以在其上方或附近显示某些内容。内容可以是 2D 图像、gif、3D 模型(也可以是动画)和 2D 视频。案例：艺术品、学习资料(书籍)、传单、广告等等。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;基于位置的 AR&lt;/strong&gt;。这种“增强现实”技术利用了真实世界的位置，在用户的设备上显示增强现实的内容。开发者可以利用该库使用户获得基于现实世界位置的体验。用户可以随意走动(最好是在户外)并通过智能手机看到现实世界中任何地点的 AR 内容。若用户移动和旋转手机，AR 内容也会同步做出反应(这样一些 AR 内容就被“固定”到真实位置了，且会根据它们与用户的距离做出适当的变化)。这样的解决方案让我们做出交互式旅游向导成为可能，比如游客来到一个新的城市，游览名胜古迹、博物馆、餐馆、酒店等等都会更方便。我们也可以改善学习体验，如寻宝游戏、生物或历史学习游戏等，还可以将该技术用于情景艺术(视觉艺术体验与特定的现实世界坐标相结合)。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;标记跟踪&lt;/strong&gt;。当相机发现一个标记时，可以显示一些内容(这与图像跟踪相同)。标记的稳定性不成问题，受限的是形状、颜色和尺寸。可以应用于需要大量不同标记和不同内容的体验，如：(增强书籍)、传单、广告等。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;开始上手体验 AR.js&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;开发调试开启 https&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于使用到摄像头敏感权限，调试时必须基于 https 环境打开才能正常运行。如果是以往，自己手动搭建个 https 环境调试对于很多新手来说还是比较麻烦耗费时间，好在最新的基于 vite+vue3 的脚手架搭建的项目，可以轻松用一行命令开启 https 访问。用脚手架初始化好代码之后，先修改 package.json 文件，在 dev 命令中加上--host 暴露网络请求地址（默认不开启），如下图：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.40240963855421685&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwHz0OEGgTbbC1iajTF0MMrtOM9QnZ6VPVzJLSzVxu7tt5HYI5BI7icH7Q/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;830&quot;/&gt;接着用下面命令运行即可开启 https：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;npm run dev -- --https&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.31868131868131866&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwJIkQWek6OzI7OPoXooKay1mMTwdfujbBEf2wibTWy69TYZWxNkHkSvQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;728&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;先跑跑官方 demo，看看效果&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;学习一门新框架或语言，最好的方式就是先将官方 demo 跑起来体验看看。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面是官方代码展示的案例效果（注：该录制动图体积较大，请耐心等待加载）&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;324&quot; data-backw=&quot;150&quot; data-ratio=&quot;2.16&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/lP9iauFI73z9c9xGzzoJiczDiaPJQACNViaGD5v3t4c1RezdYDHHY4l1sUTTiaHLVEg7iaz5jbNJDnCWaMfbHTWpTjTw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;150&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;324&quot; data-backw=&quot;150&quot; data-ratio=&quot;2.16&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/lP9iauFI73z9c9xGzzoJiczDiaPJQACNViaGhXIxTBiajJIJyKLzGM0VR6ibr595MgMVicbFYfJULbOMxBL5ibqaKje2Yw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;150&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;wow ～ 是不是感觉还蛮有意思的？接下来正式进入文章的主题，开始撸猫吧 🐱&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;开始&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;前面有提到，AR.js 基于三种方式展示内容，下面将使用基于&lt;strong&gt;图像追踪（Image Tracking）&lt;/strong&gt; 方式实现。顾名思义，图像追踪就是基于一张图片，根据图片的特性点识别图片并跟踪展示 AR 内容，例如当摄像头捕捉到该图片时，就可以将要展示的内容悬浮于该图片上方展示。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;引入依赖库&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Ar.js 从版本 3 开始采用了新的架构,使用&lt;span&gt;jsartoolkit5&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;进行跟踪定位,而渲染库有两种方式可选：A-Frame 或 Three.js。A-Frame 方式就是通过 html 标签的方式简化创建场景素材，比如说展示一张图片，可以直接使用 &lt;code&gt;&amp;lt;a-image&amp;gt;&amp;lt;/a-image&amp;gt;&lt;/code&gt;方式展示。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;修改 index.html 文件：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先将 vue 代码注入注释掉&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.12857142857142856&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwKxXyKVlgVpdUia4OQa648GBjS4QDvKZWzYBJ5FasuKL6rA2lw00EcKQ/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;560&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后引入依赖：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;script src=&lt;span&gt;&#x27;./src/sdk/ar-frame/aframe-master.min.js&#x27;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&amp;lt;script src=&lt;span&gt;&#x27;./src/sdk/ar-frame/aframe-ar-nft.js&#x27;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;撸猫姿势一：展示猫图片&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;br/&gt;    &amp;lt;a-scene embedded arjs&amp;gt;&lt;br/&gt;      &amp;lt;a-assets&amp;gt;&lt;br/&gt;        &amp;lt;img id=&lt;span&gt;&quot;my-image&quot;&lt;/span&gt; src=&lt;span&gt;&quot;./src/assets/cat.jpg&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;      &amp;lt;/a-assets&amp;gt;&lt;br/&gt;      &amp;lt;a-marker preset=&lt;span&gt;&quot;hiro&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;        &amp;lt;a-image rotation=&lt;span&gt;&quot;90 0 0&quot;&lt;/span&gt; src=&lt;span&gt;&quot;#my-image&quot;&lt;/span&gt;&amp;gt;&amp;lt;/a-image&amp;gt;&lt;br/&gt;        &amp;lt;!-- &amp;lt;a-box position=&lt;span&gt;&quot;0 0.5 0&quot;&lt;/span&gt; material=&lt;span&gt;&quot;color: green;&quot;&lt;/span&gt;&amp;gt;&amp;lt;/a-box&amp;gt; --&amp;gt;&lt;br/&gt;      &amp;lt;/a-marker&amp;gt;&lt;br/&gt;      &amp;lt;a-entity camera&amp;gt;&amp;lt;/a-entity&amp;gt;&lt;br/&gt;    &amp;lt;/a-scene&amp;gt;&lt;br/&gt;&amp;lt;/body&amp;gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单解释下上面的代码：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;&amp;lt;a-scene&amp;gt;&lt;/code&gt;声明一个场景，你可以理解相当于一个 body 元素，里面嵌入其他标签元素；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;&amp;lt;a-marker&amp;gt;&lt;/code&gt;标签声明的是标识图片，也就是相机识别到标识图片时，做相应的处理；这里采用插件预设的 hiro 图片，下面效果动图可以看到&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用&lt;code&gt;&amp;lt;a-assets&amp;gt;&lt;/code&gt;包裹使用到的素材，相当于声明引入素材，接着在&lt;code&gt;&amp;lt;a-marker&amp;gt;&lt;/code&gt;中使用&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;看下效果：&lt;/strong&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.142857142857143&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwU3mPIV0tRJTL7WIeNYTicYiamv1jweqNhh9IkLRxkXquA2nrdicYS9THg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;224&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;撸猫姿势二：播放视频&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了展示图片，还可以展示视频，先看效果：&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.164772727272727&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwMHXxccY1ebBE5SxezeMudVRvtg8HLn5pyTG69yVGfFtCjy2nFhRWpg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;352&quot;/&gt;代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;  &amp;lt;a-scene vr-mode-ui=&lt;span&gt;&quot;enabled: false;&quot;&lt;/span&gt; renderer=&lt;span&gt;&#x27;antialias: true; alpha: true; precision: mediump;&#x27;&lt;/span&gt; embedded&lt;br/&gt;    arjs=&lt;span&gt;&#x27;trackingMethod: best; sourceType: webcam; debugUIEnabled: false;&#x27;&lt;/span&gt;&amp;gt;&lt;br/&gt;&lt;br/&gt;    &amp;lt;a-assets&amp;gt;&lt;br/&gt;      &amp;lt;video&lt;br/&gt;        src=&lt;span&gt;&quot;https://ugcydzd.qq.com/uwMROfz2r57CIaQXGdGnC2ddPkb5Wzumid6GMsG9ELr7HeBy/szg_52471341_50001_d4615c1021084c03ad0df73ce2e898c8.f622.mp4?sdtfrom=v1010&amp;amp;guid=951847595ac28f04306b08161bb6d1f7&amp;amp;vkey=3A19FB37CFE7450C64A889F86411FC6CE939A42CCDAA6B177573BBCB3791A64C441EFF5B3298E3ED4E99FFA22231772796F5E8A1FCC33FE4CAC487680A326980FFCC5C56EB926E9B4D20E8740C913D1F7EBF59387012BEC78D2816B17079152BC19FCEF09976A248C4B24D3A5975B243614000CAA333F06D850034DA861B01DCA1D53B546120B74F%22&quot;&lt;/span&gt;&lt;br/&gt;        preload=&lt;span&gt;&quot;auto&quot;&lt;/span&gt; id=&lt;span&gt;&quot;vid&quot;&lt;/span&gt; response-type=&lt;span&gt;&quot;arraybuffer&quot;&lt;/span&gt; loop crossorigin webkit-playsinline muted playsinline&amp;gt;&lt;br/&gt;      &amp;lt;/video&amp;gt;&lt;br/&gt;    &amp;lt;/a-assets&amp;gt;&lt;br/&gt;&lt;br/&gt;    &amp;lt;a-nft videohandler &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&#x27;nft&#x27;&lt;/span&gt; url=&lt;span&gt;&#x27;./src/assets/dataNFT/pinball&#x27;&lt;/span&gt; smooth=&lt;span&gt;&quot;true&quot;&lt;/span&gt; smoothCount=&lt;span&gt;&quot;10&quot;&lt;/span&gt;&lt;br/&gt;      smoothTolerance=&lt;span&gt;&quot;0.01&quot;&lt;/span&gt; smoothThreshold=&lt;span&gt;&quot;5&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;      &amp;lt;a-video src=&lt;span&gt;&quot;#vid&quot;&lt;/span&gt; position=&lt;span&gt;&#x27;50 150 -100&#x27;&lt;/span&gt; rotation=&lt;span&gt;&#x27;90 0 180&#x27;&lt;/span&gt; width=&lt;span&gt;&#x27;300&#x27;&lt;/span&gt; height=&lt;span&gt;&#x27;175&#x27;&lt;/span&gt;&amp;gt;&lt;br/&gt;      &amp;lt;/a-video&amp;gt;&lt;br/&gt;    &amp;lt;/a-nft&amp;gt;&lt;br/&gt;    &amp;lt;a-entity camera&amp;gt;&amp;lt;/a-entity&amp;gt;&lt;br/&gt;  &amp;lt;/a-scene&amp;gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&amp;lt;script&amp;gt;&lt;br/&gt;  window.onload = &lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;/span&gt; () {&lt;br/&gt;    AFRAME.registerComponent(&lt;span&gt;&#x27;videohandler&#x27;&lt;/span&gt;, {&lt;br/&gt;      init: &lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;/span&gt; () {&lt;br/&gt;        var marker = this.el;&lt;br/&gt;&lt;br/&gt;        this.vid = document.querySelector(&lt;span&gt;&quot;#vid&quot;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;        marker.addEventListener(&lt;span&gt;&#x27;markerFound&#x27;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;/span&gt; () {&lt;br/&gt;          // 识别到标识图，开始播放视频&lt;br/&gt;          this.vid.play();&lt;br/&gt;        }.&lt;span&gt;bind&lt;/span&gt;(this));&lt;br/&gt;&lt;br/&gt;        marker.addEventListener(&lt;span&gt;&#x27;markerLost&#x27;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;/span&gt; () {&lt;br/&gt;          // 丢失标识图，停止播放视频&lt;br/&gt;          this.vid.pause();&lt;br/&gt;          this.vid.currentTime = 0;&lt;br/&gt;        }.&lt;span&gt;bind&lt;/span&gt;(this));&lt;br/&gt;      }&lt;br/&gt;    });&lt;br/&gt;  };&lt;br/&gt;&amp;lt;/script&amp;gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;🐱：喵～是不是感觉更酷更好玩了？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;撸猫姿势三：配合声网技术，与你家的猫隔空喊话&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;如果你是一位前端开发者，相信你一定知道阮一峰这个大佬。曾经在他的每周科技周刊看到这么一个有趣的事情：在亚马逊某片雨林里，安装了录音设备，实时将拾取到的鸟叫声传到一个网站，你可以打开该网站听到该片雨林里的实时鸟叫声，简单的说就是该网站可以听到该片雨林的”鸟叫直播 &quot;。（可惜现在一时找不到该网站网址）&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而作为工作党，爱猫人士的我们，可能有着上述同样的情感需求：要出差几天，家里的猫一时没法好好照顾，想要实时看到家里的爱猫咋办？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;买台监控摄像头呗&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当然是打开声网找到解决方案：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;&lt;span&gt;视频通话&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/strong&gt; (这里为声网文档点个赞，整个产品的文档分类规划的特别清晰，不像某些云服务产品文档像是垃圾桶里翻东西)&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7361502347417841&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwHtmV6m8OWr5TwjNibHwu8ohRrj6RyUzMqG9mjd8BqTDBsKcS91Jpnxg/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1065&quot;/&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;使用 vue3 写法改造文档 demo&lt;/span&gt;&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;先安装依赖包：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;&quot;agora-rtc-sdk-ng&quot;&lt;/span&gt;: &lt;span&gt;&quot;latest&quot;&lt;/span&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;app.vue 中代码：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;script setup&amp;gt;&lt;br/&gt;import AgoraRTC from &lt;span&gt;&quot;agora-rtc-sdk-ng&quot;&lt;/span&gt;;&lt;br/&gt;import { ref } from &lt;span&gt;&quot;vue&quot;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;const joinBtn = ref(null);&lt;br/&gt;const leaveBtn = ref(null);&lt;br/&gt;&lt;br/&gt;&lt;span&gt;let&lt;/span&gt; rtc = {&lt;br/&gt;  localAudioTrack: null,&lt;br/&gt;  client: null,&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;&lt;span&gt;let&lt;/span&gt; options = {&lt;br/&gt;  appId: &lt;span&gt;&quot;2e76ff53e8c349528b5d05783d53f53c&quot;&lt;/span&gt;,&lt;br/&gt;  channel: &lt;span&gt;&quot;test&quot;&lt;/span&gt;,&lt;br/&gt;  token:&lt;br/&gt;    &lt;span&gt;&quot;0062e76ff53e8c349528b5d05783d53f53cIADkwbufdA1BIXWsCZ1oFKLEfyPRrCbL3ECbUg71dsv8HQx+f9gAAAAAEAACwxdSy/6RYQEAAQDK/pFh&quot;&lt;/span&gt;,&lt;br/&gt;  uid: 123456,&lt;br/&gt;};&lt;br/&gt;&lt;br/&gt;rtc.client = AgoraRTC.createClient({ mode: &lt;span&gt;&quot;rtc&quot;&lt;/span&gt;, codec: &lt;span&gt;&quot;vp8&quot;&lt;/span&gt; });&lt;br/&gt;&lt;br/&gt;rtc.client.on(&lt;span&gt;&quot;user-published&quot;&lt;/span&gt;, async (user, mediaType) =&amp;gt; {&lt;br/&gt;  await rtc.client.subscribe(user, mediaType);&lt;br/&gt;  console.log(&lt;span&gt;&quot;subscribe success&quot;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (mediaType === &lt;span&gt;&quot;video&quot;&lt;/span&gt;) {&lt;br/&gt;    const remoteVideoTrack = user.videoTrack;&lt;br/&gt;    const remotePlayerContainer = document.createElement(&lt;span&gt;&quot;div&quot;&lt;/span&gt;);&lt;br/&gt;    remotePlayerContainer.id = user.uid.toString();&lt;br/&gt;    remotePlayerContainer.textContent = &lt;span&gt;&quot;Remote user &quot;&lt;/span&gt; + user.uid.toString();&lt;br/&gt;    remotePlayerContainer.style.width = &lt;span&gt;&quot;640px&quot;&lt;/span&gt;;&lt;br/&gt;    remotePlayerContainer.style.height = &lt;span&gt;&quot;480px&quot;&lt;/span&gt;;&lt;br/&gt;    document.body.append(remotePlayerContainer);&lt;br/&gt;    remoteVideoTrack.play(remotePlayerContainer);&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (mediaType === &lt;span&gt;&quot;audio&quot;&lt;/span&gt;) {&lt;br/&gt;    const remoteAudioTrack = user.audioTrack;&lt;br/&gt;    remoteAudioTrack.play();&lt;br/&gt;  }&lt;br/&gt;&lt;br/&gt;  rtc.client.on(&lt;span&gt;&quot;user-unpublished&quot;&lt;/span&gt;, (user) =&amp;gt; {&lt;br/&gt;    const remotePlayerContainer = document.getElementById(user.uid);&lt;br/&gt;    remotePlayerContainer.remove();&lt;br/&gt;  });&lt;br/&gt;});&lt;br/&gt;&lt;br/&gt;// 加入通话&lt;br/&gt;const handleJoin = async () =&amp;gt; {&lt;br/&gt;  await rtc.client.join(&lt;br/&gt;    options.appId,&lt;br/&gt;    options.channel,&lt;br/&gt;    options.token,&lt;br/&gt;    options.uid&lt;br/&gt;  );&lt;br/&gt;  rtc.localAudioTrack = await AgoraRTC.createMicrophoneAudioTrack();&lt;br/&gt;  rtc.localVideoTrack = await AgoraRTC.createCameraVideoTrack();&lt;br/&gt;  await rtc.client.publish([rtc.localAudioTrack, rtc.localVideoTrack]);&lt;br/&gt;  const localPlayerContainer = document.createElement(&lt;span&gt;&quot;div&quot;&lt;/span&gt;);&lt;br/&gt;  localPlayerContainer.id = options.uid;&lt;br/&gt;  localPlayerContainer.textContent = &lt;span&gt;&quot;Local user &quot;&lt;/span&gt; + options.uid;&lt;br/&gt;  localPlayerContainer.style.width = &lt;span&gt;&quot;640px&quot;&lt;/span&gt;;&lt;br/&gt;  localPlayerContainer.style.height = &lt;span&gt;&quot;480px&quot;&lt;/span&gt;;&lt;br/&gt;  document.body.append(localPlayerContainer);&lt;br/&gt;  rtc.localVideoTrack.play(localPlayerContainer);&lt;br/&gt;  console.log(&lt;span&gt;&quot;publish success!&quot;&lt;/span&gt;);&lt;br/&gt;};&lt;br/&gt;// 离开通话&lt;br/&gt;const handleLeave = async () =&amp;gt; {&lt;br/&gt;  rtc.localAudioTrack.close();&lt;br/&gt;  rtc.localVideoTrack.close();&lt;br/&gt;  rtc.client.remoteUsers.forEach((user) =&amp;gt; {&lt;br/&gt;    const playerContainer = document.getElementById(user.uid);&lt;br/&gt;    playerContainer &amp;amp;&amp;amp; playerContainer.remove();&lt;br/&gt;  });&lt;br/&gt;  await rtc.client.leave();&lt;br/&gt;};&lt;br/&gt;&amp;lt;/script&amp;gt;&lt;br/&gt;&lt;br/&gt;&amp;lt;template&amp;gt;&lt;br/&gt;  &amp;lt;div&amp;gt;&lt;br/&gt;    &amp;lt;button ref=&lt;span&gt;&quot;joinBtn&quot;&lt;/span&gt; @click=&lt;span&gt;&quot;handleJoin&quot;&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;button&quot;&lt;/span&gt; id=&lt;span&gt;&quot;join&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;      加入&lt;br/&gt;    &amp;lt;/button&amp;gt;&lt;br/&gt;    &amp;lt;button ref=&lt;span&gt;&quot;leaveBtn&quot;&lt;/span&gt; @click=&lt;span&gt;&quot;handleLeave&quot;&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&quot;button&quot;&lt;/span&gt; id=&lt;span&gt;&quot;leave&quot;&lt;/span&gt;&amp;gt;&lt;br/&gt;      离开&lt;br/&gt;    &amp;lt;/button&amp;gt;&lt;br/&gt;  &amp;lt;/div&amp;gt;&lt;br/&gt;&amp;lt;/template&amp;gt;&lt;br/&gt;&lt;br/&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;br/&gt;&lt;br/&gt;复制代码&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;跑起来效果：&lt;/strong&gt; &lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8289124668435013&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAw2LI7RNTWNGcR59ibTyHxziaP1SLSkfmibOiaFEwPmymwgdmUP264CKwMdA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;754&quot;/&gt;这时就相当于在家安装了一个摄像头，如果我们需要远程查看，就可以通过声网官方提供的一个&lt;span&gt;测试地址&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;加入通话手机打开上述网址，输入你的项目 appId 跟 token，可以看到成功加入通话：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;2.164102564102564&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwWhhEAnLodbyMtQkeucTZUwVBMjmE2sHvXwGGtEhH6OFUA66HP4sMFA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1170&quot;/&gt;&lt;/figure&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwo0Re4oRpWVbib79ia88LITEx54VDuicktE6bLM6vkKjqChjJ9gf1kshMA/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;4000&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;下方图片是手机摄像头捕捉到的画面，原谅我用猫照片代替 😂&lt;/strong&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;让视频画面跑在 AR.js 画面中&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个由于个人时间关系，暂时就不研究实现。这里提供一个想法就是：单纯的视频画面看起来有点单调，毕竟有可能&lt;strong&gt;猫并不在视频画面中出现&lt;/strong&gt;，结合&lt;strong&gt;撸猫姿势一&lt;/strong&gt;提到的展示图片，其实我们可以在 ar 场景中视频区域周围，布置照片墙或其他酷炫一点的 subject，这样的话我们打开视频即使看不到猫星人，也可以看看它的照片之类的交互。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;结束语&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文借征文活动，简单入手了解了下 web AR 相关知识，在这几天学习的过程中觉得还是蛮好玩的，此文也当抛砖引玉，希望更多开发者了解 AR 相关的知识。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;AR 在体验上真的很酷，未来值得期待。&lt;/strong&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最近几年苹果一直致力于推进 AR 技术体验并带来相关落地产品，例如为了配合提升 AR 体验，带来雷达扫描，空间音频功能。值得一提的是，今年的苹果秋季发布会，苹果的邀请函也是利用到了 AR + 空间音频技术，即使你不是果粉，当你实际上手体验的时候，你依然会真正发自内心的感觉：wow ～ cool。可以&lt;span&gt;点此视频&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;观看了解。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而目前的 Web AR 技术相比于苹果自有的 ARkit 技术，在体验上还存在一些差距（如性能问题，识别不稳定），同时缺乏生态圈，希望 Web AR 技术在未来得到快速发展，毕竟 web 端跨平台通用特性，让人人的终端都可以跑起来才是实现 AR 场景大规模应用的前提。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Facebook 押注的元宇宙概念中，其实也包含了 AR 技术，所以在元宇宙世界到来之前，AR 技术值得我们每一个前端开发者关注学习。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;彩蛋&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果你问我最喜欢什么猫，我会说--“房东的猫”，～哈哈哈 🐱 ～&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6671875&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz/lP9iauFI73zibte33JQIPGlb53xqvDXsAwXzQJZSLzzsvfOicB2ZV72dkb6ctSMNwvBZIucc6BicrMbiamtaOGwp57A/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;https://github.com/artoolkitx/jsartoolkit5&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;https://docs.agora.io/cn/Video/start_call_web_ng?platform=Web&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;https://webdemo.agora.io/basicVideoCall/index.html&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;https://www.bilibili.com/video/BV1R3411i7LL?from=search&amp;amp;seid=17803327188398196779&amp;amp;spm_id_from=333.337.0.0&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;p&gt;&lt;/p&gt;&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5555555555555556&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/lP9iauFI73zicqIKtS2GZJAscn2mSicDf8VE06OjPC9K6ibFHdqwh1bjnd7wia6ib70giazDoeVoxBg5ibxQl8jq8n1qsw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;900&quot;/&gt;&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7709e8c30ba410d09232b3c38c69e088</guid>
<title>2.6 万 Star！Shell 脚本静态检测分析工具，支持 VSCode 和 Vim 等</title>
<link>https://toutiao.io/k/fqg2v2v</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText css-hnrfcf&quot; options=&quot;[object Object]&quot;&gt;&lt;p&gt;【导语】：Shell 静态分析工具，无需运行就能发现 sh/bash 的语法、类型等错误。&lt;/p&gt;
&lt;h3&gt;简介&lt;/h3&gt;
&lt;p&gt;ShellCheck 是基于 GPLv3 协议的 shell 脚本静态分析工具，可以为 bash/sh shell 脚本提供警告和建议：&lt;/p&gt;
&lt;p&gt;ShellCheck 的目标是：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;指出导致 shell 出现奇怪错误消息的典型初学者语法问题。&lt;/li&gt;
&lt;li&gt;指出导致 shell 行为异常和违反直觉的典型中级语义问题。&lt;/li&gt;
&lt;li&gt;指出可能导致高级用户的其他工作脚本在未来情况下失败的微妙警告、极端情况和错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目地址是：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://link.zhihu.com/?target=https%3A//github.com/koalaman/shellcheck&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/koalaman/she&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;llcheck&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;/&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;使用方法&lt;/h3&gt;
&lt;h4&gt;通过网页官网&lt;/h4&gt;
&lt;p&gt;可以将 shell 脚本代码黏贴到官网检测页面上，可以即时获得反馈：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;https://www.shellcheck.net&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-f893629e679ff19fca38e184cfd7853c_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;528&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic1.zhimg.com/v2-f893629e679ff19fca38e184cfd7853c_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;528&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic1.zhimg.com/v2-f893629e679ff19fca38e184cfd7853c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-f893629e679ff19fca38e184cfd7853c_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4&gt;通过终端命令&lt;/h4&gt;
&lt;p&gt;可以下载 shellcheck，并在终端命令中执行 shellcheck 命令检测脚本：&lt;/p&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-015b2e5df7a5d5e2d50a5eaf3d5a9f46_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;552&quot; data-rawheight=&quot;201&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-015b2e5df7a5d5e2d50a5eaf3d5a9f46_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;552&quot; data-rawheight=&quot;201&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-015b2e5df7a5d5e2d50a5eaf3d5a9f46_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-015b2e5df7a5d5e2d50a5eaf3d5a9f46_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4&gt;通过编辑器&lt;/h4&gt;
&lt;ul&gt;&lt;li&gt;在 VIM 中使用 ALE、Neomake、Syntastic 插件：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-286a1e57e2d578c78611b1707a7df91b_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;552&quot; data-rawheight=&quot;176&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-286a1e57e2d578c78611b1707a7df91b_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;552&quot; data-rawheight=&quot;176&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-286a1e57e2d578c78611b1707a7df91b_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-286a1e57e2d578c78611b1707a7df91b_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;在 Emacs 中使用 Flycheck、Flymake 插件：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-75e3f85a2ea076b8e056be620acf3cea_b.jpg&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;543&quot; data-rawheight=&quot;196&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-75e3f85a2ea076b8e056be620acf3cea_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; alt=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;543&quot; data-rawheight=&quot;196&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-75e3f85a2ea076b8e056be620acf3cea_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-75e3f85a2ea076b8e056be620acf3cea_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;h4&gt;在构建或测试平台中&lt;/h4&gt;
&lt;p&gt;ShellCheck 主要用于交互式使用，但也可以添加到构建或测试套件中，它使用了规范标准的退出代码，因此只需添加 shellcheck 命令作为流程的一部分即可。&lt;/p&gt;
&lt;p&gt;例如在 Makefile 文件中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;check-scripts:
    # Fail if any of these files have warnings
    shellcheck myscripts/*.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者在 Tarvis CI 的 .travis.yml 文件中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;script:
  # Fail if any of these files have warnings
  - shellcheck myscripts/*.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;预先安装了 ShellCheck 并可用使用的服务和平台如下：&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Travis CI&lt;/li&gt;
&lt;li&gt;Codacy&lt;/li&gt;
&lt;li&gt;Code Climate&lt;/li&gt;
&lt;li&gt;Code Factor&lt;/li&gt;
&lt;li&gt;CircleCI&lt;/li&gt;
&lt;li&gt;Github（仅限 Linux）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;安装&lt;/h3&gt;
&lt;h4&gt;通过包管理器进行本地安装使最简单高效的方法&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;# 在带有 Cabal 的系统上（安装到~/.cabal/bin）：
cabal update
cabal install ShellCheck

# 在具有 Stack（安装到~/.local/bin）的系统上：
stack update
stack install ShellCheck

# 在基于 Debian 的发行版上：
sudo apt install shellcheck

# 在基于 Arch Linux 的发行版上：
pacman -S shellcheck

# 在基于 Gentoo 的发行版上：
emerge --ask shellcheck

# 在基于 EPEL 的发行版上：
sudo yum -y install epel-release
sudo yum install ShellCheck

# 在基于 Fedora 的发行版上：
dnf install ShellCheck

# 在 FreeBSD 上：
pkg install hs-ShellCheck

# 在带有 Homebrew 的 macOS (OS X) 上：
brew install shellcheck

# 在 OpenBSD 上：
pkg_add shellcheck

# 在 openSUSE 上：
zypper in ShellCheck

# 在 Solus 上：
eopkg install shellcheck

# 在 Windows 上（通过Chocolatey）：
C:\&amp;gt; choco install shellcheck

# 在 Windows 上（通过scoop）：
C:\&amp;gt; scoop install shellcheck

# 通过 Docker：
docker run --rm -v &quot;$PWD:/mnt&quot; koalaman/shellcheck:stable myscript
# Or :v0.4.7 for that version, or :latest for daily builds&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4&gt;pre-commit&lt;/h4&gt;
&lt;p&gt;要通过 pre-commit 运行 ShellCheck ，添加 hooks 到 .pre-commit-config.yaml 文件中：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;repos:
-   repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.7.2
    hooks:
    -   id: shellcheck
#       args: [&quot;--severity=warning&quot;]  # Optionally only show errors and warnings&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;开源前哨&lt;/code&gt; 日常分享热门、有趣和实用的开源项目。参与维护 10万+ Star 的开源技术资源库，包括：Python、Java、C/C++、Go、JS、CSS、Node.js、PHP、.NET 等。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>a2ada4dbd25dd6cad7b5880292f5726d</guid>
<title>将自然语言指令用于移动 UI 操作</title>
<link>https://toutiao.io/k/ueqvzqy</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;p&gt;移动设备提供了无数有助于日常活动的功能。然而，这些功能中的许多功能都不容易被用户发现或访问，迫使用户查找如何执行特定任务——例如，如何在地图中打开交通模式或在 YouTube 中更改通知设置。虽然在网络上搜索这些问题的详细说明是一种选择，但仍由用户按照这些说明逐步操作并通过小型触摸屏浏览 UI 详细信息，这可能既乏味又耗时，并导致可访问性降低。如果可以设计一个计算代理将这些语言指令转化为动作并代表用户自动执行它们会怎样？&lt;/p&gt;&lt;p&gt;在ACL 2020 上发布的“将自然语言指令映射到移动 UI 动作序列”中，我们提出了解决自动动作序列映射问题的第一步，创建了三个新的数据集，用于训练将自然语言指令接地为可执行的深度学习模型移动用户界面操作。这项工作为移动设备上的任务自动化奠定了技术基础，这将减轻通过 UI 细节进行操作的需要，这对于视觉或情境受损的用户可能特别有价值。我们还通过我们的GitHub 存储库开源了我们的模型代码和数据管道，以促进研究社区的进一步发展。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;构建语言基础模型&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;人们经常互相提供指令，以协调共同努力并完成涉及复杂动作序列的任务，例如，按照食谱烤蛋糕，或让朋友带您建立家庭网络。构建能够帮助进行类似交互的计算代理是一个重要的目标，它需要在操作发生的环境中建立真正的语言基础。&lt;/p&gt;&lt;p&gt;这里讨论的学习任务是在给定一组指令、系统从一个屏幕转换到另一个屏幕时产生的一系列屏幕以及这些屏幕上的一组交互元素的情况下预测移动平台的一系列动作。端到端地训练这样的模型需要配对的语言-动作数据，这很难大规模获取。&lt;/p&gt;&lt;p&gt;相反，我们将问题分解为两个连续的步骤：动作短语提取步骤和基础步骤。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.2190476190476192&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceH9jmGJfAXHm7oKnpU9dvjNN4Dyq1Q2qmibx4vjzHuwU7ib5LnLKBTjcv52lq8hhNvSDqyxJ8AOV9icw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;525&quot;/&gt;&lt;/p&gt;&lt;p&gt;动作短语提取步骤使用具有区域注意力的Transformer模型从多步指令中识别操作、对象和参数描述，以表示每个描述短语。区域注意允许模型将指令中的一组相邻单词（一个跨度）作为一个整体来解码描述。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceH9jmGJfAXHm7oKnpU9dvjNZVISeA71gWWWCciaL0lXlqstSTwfW2kX0YGYUUXTDwSqmPoicDUV7xibA/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;接下来，接地步骤将提取的操作和对象描述与屏幕上的 UI 对象进行匹配。同样，我们使用 Transformer 模型，但在这种情况下，它在上下文中表示 UI 对象并将对象描述作为基础。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceH9jmGJfAXHm7oKnpU9dvjNgoPYXDFwQQl7pzP1RhCSYFsE994Uv3OeeMlMmlgpWvibcPyjtX9gpnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;结果&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;为了调查这项任务的可行性和我们方法的有效性，我们构建了三个新数据集来训练和评估我们的模型。第一个数据集包括 187 个用于操作 Pixel 手机的多步英文指令，它们沿着相应的动作屏幕序列，并能够评估自然发生指令的完整任务性能，用于测试端到端的接地质量。对于动作短语提取训练和评估，我们获得了可以从网络上大量找到的英文“how-to”说明，并注释描述每个动作的短语。为了训练接地模型，我们综合生成了 295K 条 UI 动作单步命令，涵盖了来自公共 Android UI 语料库的25K 移动 UI 屏幕上的 178K 不同 UI 对象.&lt;/p&gt;&lt;p&gt;具有区域注意力的 Transformer 在预测与地面实况完全匹配的跨度序列方面获得了 85.56% 的准确率。短语提取器和基础模型一起获得了 89.21% 的部分准确率和 70.59% 的完全准确率，以匹配地面实况动作序列，以完成更具挑战性的任务，即将语言指令映射到端到端的可执行动作。我们还评估了 UI 对象的替代方法和表示，例如使用图形卷积网络(GCN) 或前馈网络，并发现那些可以在屏幕上根据上下文来表示对象的那些会导致更好的接地精度。新的数据集、模型和结果为解决将自然语言指令应用于移动 UI 操作这一具有挑战性的问题迈出了重要的第一步。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;结论&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;这项研究以及一般的语言基础是将多阶段指令转换为图形用户界面上的操作的重要步骤。任务自动化在 UI 领域的成功应用有可能显着提高可访问性，其中语言界面可以帮助视障人士使用视觉上预测的界面执行任务。当一个人因手头的任务而无法轻松访问设备时，这对于情境障碍也很重要。&lt;/p&gt;&lt;p&gt;通过将问题解构为动作短语提取和语言基础，任一方面的进展都可以提高整个任务的性能，并减轻对难以大规模收集的语言-动作配对数据集的需求。例如，动作跨度提取与语义角色标记和从文本中提取多个事实相关，并且可以从跨度识别和多任务学习的创新中受益。在之前的基础工作中应用的强化学习可能有助于改进 UI 中基础的样本外预测，并改善隐藏状态表示的直接基础。尽管我们的数据集基于 Android UI，但我们的方法可以普遍应用于其他用户界面平台上的指令基础。&lt;/p&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>fd5318ea51d65f86654a6b740ec9ffe6</guid>
<title>5G LAN 邀请你加入了群聊</title>
<link>https://toutiao.io/k/t1hbk5a</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;DeepNoMind&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;gh_0eb54daef40a&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;你好，我是俞凡，在Motorola做过研发，现在在Mavenir做技术工作，对通信、网络、后端架构、云原生、DevOps、CICD、区块链、AI等技术始终保持着浓厚的兴趣，平时喜欢阅读、思考，相信持续学习、终身成长，欢迎一起交流学习。&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>edef6156312b9bad7d5682ae7fbe4217</guid>
<title>开源监控系统 Prometheus 最佳实践</title>
<link>https://toutiao.io/k/sevgdvt</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;502281738&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.1575&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/j3gficicyOvasIjZpiaTNIPReJVWEJf7UGpmokI3LL4NbQDb8fO48fYROmYPXUhXFN8IdDqPcI1gA6OfSLsQHxB4w/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;400&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;作者：jimmiehan(韩金明) , 腾讯PCG后台开发工程师, Prometheus/Thanos contributor&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;Prometheus 是目前最流行的开源监控系统之一, 这里以我在基于 Prometheus 构建天机阁 2.0Metrics 子系统的实践谈一谈 Prometheus 的一些最佳实践, 最佳实践的理念是 Prometheus 系统简单稳定高效运行的关键。(注: 天机阁 2.0 是新一代云原生可观测性系统)&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;埋点思路&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最好将原始指标暴露给 Prometheus, 而不是在应用程序端进行计算. 如不需要在应用程序端计算错误率, 而应该埋点总量和错误量两个 counter, 查询时用 PromQL 处理原始数据, 相除得到错误率。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;在线服务: RED 方法, Requests(请求量), Errors(错误量), Duration(耗时)；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;离线服务: USE 方法, Utilisation(使用率, 如满载程度), Saturation(饱和度, 如排队任务数), Errors 错误量。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;开源项目例子:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;内部代码例子:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;天机阁 Go SDK tps-sdk-go&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Opentelemetry Oteam Go 生态 SDK opentelemetry-go-ecosystem&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;卡片服务 we-feed-card&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;指标名字&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;指标命名的整体结构是 name_unit_suffix , 符合正则&lt;code&gt;[a-zA-Z*][a-zA-Z0-9_]\*&lt;/code&gt;&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;name:&lt;/span&gt;&lt;/h4&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;name 要做到望文生义, 类似变量名, 应具有良好的可读性. 如 http_requests_total, process_resident_memory_bytes, queue_size, queue_limit. 可参考 k8s/etcd/prometheus/grafana/tidb 等开源项目；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;指标名称是全局的, 携带命名空间可以有效避免命名冲突. 如 process_xxx 表示进程指标, rpc_xxx 表示 RPC 指标, followsys_xxx 表示关注系统业务指标；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;指标名称不要带环境名/应用名, 这些元信息适合用 label 承载, Prometheus 在抓取指标时自动附加, 不需要在埋点代码中定义. 在接入天机阁时会自动给指标附加 app/server/env_name/container_name/namespace 这些元信息；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Prometheus 自定义指标如果要携带中文指标名, 我们约定放在名字为_name 的 label 中。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;unit:&lt;/span&gt;&lt;/h4&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;指标名可以带上单位, 如 request_bytes_total , request_latency_seconds；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a href=&quot;https://prometheus.io/docs/practices/naming/#metric-names&quot; data-linktype=&quot;2&quot;&gt;值总是使用基本单位&lt;/a&gt;, 如 秒/米/字节, 单位展示可读性的事情则交给 Grafana 等展示 UI 来处理。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;suffix:&lt;/span&gt;&lt;/h4&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md#counter-1&quot; textvalue=&quot;counter 必须以_total 为后缀，OpenMetrics 规范定义&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;counter 必须以_total 为后缀，OpenMetrics 规范定义&lt;/a&gt;；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;信息类指标以_info 为后缀, 类型为 gauge，值为 1；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;指标名称不要带 _sum _count _bucket 后缀，以免与 histogram/summary 类型生成的指标名混淆。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;指标 label&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;label 对于多维监控非常有用，一个指标的基数是指标中所有 label 枚举值组合的笛卡尔乘积. &lt;strong&gt;一个进程中一个指标一千的基数是合理的上限&lt;/strong&gt;。一个进程的总基数是所有指标的基数之和, &lt;strong&gt;一个进程一万总基数是合理的上限&lt;/strong&gt;，因此:&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;label 中不适合放 用户 ID/设备 ID/URL 参数 等高基数的值. 单个 label 值不超过 128 个字符；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;避免一个指标过多的 label 组合, 不必要的组合 label 可以拆解为多个指标, 以便降低指标基数, 提高该指标的查询性能. 参考: &lt;a target=&quot;_blank&quot; href=&quot;https://www.robustperception.io/cardinality-is-ke&quot; textvalue=&quot;https://www.robustperception.io/cardinality-is-ke&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;https://www.robustperception.io/cardinality-is-ke&lt;/a&gt;；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Metrics 更关注系统级别的高效指标而不是单个请求级别, 不要在 Metrics 中放过多的细节 label, 单独 Metrics 无法解决所有的可观测性问题, 详细的信息应记录 Logs 和 Traces 中, 或者在 Exemplar 带上 traceID, &lt;a href=&quot;https://github.com/cncf/tag-observability/blob/main/whitepaper.md#correlating-observability-signals&quot; data-linktype=&quot;2&quot;&gt;充分利用三大信号 Metrics/Logs/Traces 关联 一起来观测系统&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;PromQL&lt;/span&gt;&lt;/h3&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;对于 counter, 要先 rate 后 sum, 因为&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/querying/functions/#rate&quot; data-linktype=&quot;2&quot;&gt;rate/irate/increase 函数才有 counter 跳变检测&lt;/a&gt;；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;聚合语句模式中 &lt;code&gt;&amp;lt;aggr-op&amp;gt;([parameter,] &amp;lt;vector expression&amp;gt;) [without|by (&amp;lt;label list&amp;gt;)]&lt;/code&gt; without 是移除特定标签, by 则是保留某些标签. without 能在聚合移除高基数标签的同时保留更多的上下文信息；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching&quot; data-linktype=&quot;2&quot;&gt;向量匹配&lt;/a&gt; on 语句 join info 类型的指标可以达到在查询结果中附加元信息的效果. 例如下面的 promQL 在查询服务内存占用的同时附加实例的 Go 版本。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;process_resident_memory_bytes{app=&lt;span&gt;&quot;xx&quot;&lt;/span&gt;, server=&lt;span&gt;&quot;xxx&quot;&lt;/span&gt;,namespace=&lt;span&gt;&quot;Production&quot;&lt;/span&gt;}&lt;br/&gt;* on(instance) group_left(version)&lt;br/&gt;go_info{app=&lt;span&gt;&quot;xx&quot;&lt;/span&gt;, server=&lt;span&gt;&quot;xxx&quot;&lt;/span&gt;,namespace=&lt;span&gt;&quot;Production&quot;&lt;/span&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;relabel_configs&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config&quot; data-linktype=&quot;2&quot;&gt;relabel_configs&lt;/a&gt;是很通用很有用的 metrics label processor:&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;relabel_configs 发生在抓取之前, 可以对目标的每条时间序列附加元数据；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;metrics_relabel_configs 发生在抓取之后, 可以对 label 进行重命名/drop 等操作；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;alert_relabel_configs 发生在执行规则后发送 alert 至 alertmanager 之前, 如 drop 掉 replica 这个 label 用于 alertmanager 去重；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;write_relabel_configs 发生在 remote write 时, 用于 drop 掉 replica label 、drop 某些指标。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;查询性能&lt;/span&gt;&lt;/h3&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Prometheus 查询性能与查询语句计算所命中的时间序列数量、样本数以及返回的数据大小 强相关. 正常小查询响应是毫秒级的. 界面展示的大查询(涉及时间序列超过 10k 以上的), 如租户内的所有请求量/server 级别的 CPU 使用列表 这些大查询需要用 recording_rule 定时计算好, 将查询所需的时间序列数降低；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;展示单个信息或表格使用 instantQuery 即时查询, 只返回最新时刻计算的数据即可. 展示时间图形才需要使用 rangeQuery 范围查询, 返回时间区间内计算的所有数据。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;图表&lt;/span&gt;&lt;/h3&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;自定义 Dashboard 需要避免一个面板图形中太多的线条, 5 条以内比较合理, 以免图表看不清及卡顿. 对于容器实例级别的指标可以用 topk 函数限制曲线数量；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;对于模板变量下拉, 其语句每次打开 Dashboard&lt;em&gt;之前&lt;/em&gt;都会查询 series 接口, 若因为返回结果太大而加载 Dashboard 太慢, 则需要使用 recording_rule 优化；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a href=&quot;https://grafana.com/grafana/dashboards/&quot; data-linktype=&quot;2&quot;&gt;Grafana 官网面板中心&lt;/a&gt;有大量面板可以导入及参考。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;recording_rule&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于页面上展示的热查询, 如果涉及时间序列太多, 则会变得缓慢. 一般涉及时间序列大于 10K 的 InstantQuery 和时间序列大于 1K 的 RangeQuery, 是比较昂贵的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Prometheus 提供了&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/#recording-rules&quot; data-linktype=&quot;2&quot;&gt;recording_rule&lt;/a&gt;功能, 其会定时如 1 分钟对 promQL 表达式定时执行 instantQuery, 执行结果形成新的时间序列, 数据来自内存 TSDB, 完全内存操作, 性能很高。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;例子 1 &lt;a href=&quot;https://istio.io/latest/docs/ops/best-practices/observability/&quot; data-linktype=&quot;2&quot;&gt;Istio 可观测性最佳实践&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;例子 2 &lt;a href=&quot;https://github.com/camilb/prometheus-kubernetes/blob/master/manifests/prometheus/prometheus-k8s-rules.yaml&quot; data-linktype=&quot;2&quot;&gt;prometheus-kubernetes&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;命名 维度:指标名:聚合方式 , 如 server:rpc_request_started_total:rate5m. 参见：&lt;/section&gt;&lt;/li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://prometheus.io/docs/practices/rules/#naming-and-aggregation&quot; textvalue=&quot;https://prometheus.io/docs/practices/rules/#naming-and-aggregation&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;https://prometheus.io/docs/practices/rules/#naming-and-aggregation&lt;/a&gt;&lt;/section&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;alert rule&lt;/span&gt;&lt;/h3&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;a href=&quot;https://awesome-prometheus-alerts.grep.to/rules&quot; data-linktype=&quot;2&quot;&gt;Awesome Prometheus alerts&lt;/a&gt; 包含各种 exporter 导出的指标的告警规则例子；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;rule 也遵循 label based 机制, 触发告警时, label 集合是 rule 中自定义的静态 label 加上语句查询结果的 label 组合. 在 alertmanager 中根据 label 进行去重、分组、通知路由、静默、抑制；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一些告警语句与流量周期相关, 可以在 alertmanager 的配置 route 级别的周期性屏蔽, 也可以在 rule 表达式中使用 on hour/day/month 函数周期屏蔽, 如以下 rule 会在每天 23 点~9 点总是不触发。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;expr:&lt;/span&gt; &lt;span&gt;|&lt;/span&gt;&lt;br/&gt; &lt;span&gt;xxx&lt;/span&gt; &lt;span&gt;&amp;lt;&lt;/span&gt; &lt;span&gt;100&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;# 增加条件每天23点~9点总是不触发, 转换为UTC则 hour 15点~1点&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;and&lt;/span&gt; &lt;span&gt;on()&lt;/span&gt; &lt;span&gt;(hour()&lt;/span&gt; &lt;span&gt;&amp;lt;=&lt;/span&gt; &lt;span&gt;15&lt;/span&gt; &lt;span&gt;and&lt;/span&gt; &lt;span&gt;hour()&amp;gt;=&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;annotation 中支持 go template 语法, 内置&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/template_reference/#queries&quot; data-linktype=&quot;2&quot;&gt;query 函数&lt;/a&gt;可以执行额外的查询语句, 这是丰富告警信息的利器, 比如下方配置的语句可以在异常率告警中带上错误码、数量和错误码描述.&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;&lt;span&gt;annotations:&lt;/span&gt;&lt;br/&gt; &lt;span&gt;description:&lt;/span&gt; &lt;span&gt;|&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;{{-&lt;/span&gt; with printf &quot;sum(increase(rpc_server_handled_total{tenant_id=&#x27;%s&#x27;, app=&#x27;%s&#x27;, server=&#x27;%s&#x27;,namespace=&#x27;%s&#x27;, callee_service=&#x27;%s&#x27;, callee_method=&#x27;%s&#x27;,code_type=&#x27;exception&#x27;}[1m])) by (code_type, code, code_desc)&amp;gt; 0&quot; $labels.teannt_id $labels.app $labels.server $labels.namespace $labels.callee_service $labels.callee_method | query -}}&lt;br/&gt;          &lt;span&gt;{{-&lt;/span&gt; range $i,$v := . -}}&lt;br/&gt;          &lt;span&gt;错误码:{{&lt;/span&gt; $v.Labels.code }},数量:{{ printf &quot;%.0f&quot; $v.Value -}},描述:{{ $v.Labels.code_desc }}&lt;br/&gt;          &lt;span&gt;{{-&lt;/span&gt; end -}}&lt;br/&gt;          &lt;span&gt;{{-&lt;/span&gt; end -}}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&quot;5&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;可以使用&lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/configuration/unit_testing_rules/#unit-testing-for-rules&quot; data-linktype=&quot;2&quot;&gt;promtool 对 alert rule 进行单元测试&lt;/a&gt;, 用于验证告警规则有效性及 template 渲染。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;存储&lt;/span&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;a href=&quot;https://fabxc.org/tsdb/&quot; data-linktype=&quot;2&quot;&gt;Prometheus tsdb&lt;/a&gt;的压缩算法基于&lt;a href=&quot;https://www.vldb.org/pvldb/vol8/p1816-teller.pdf&quot; data-linktype=&quot;2&quot;&gt;Facebook Gorilla 论文&lt;/a&gt;, 可以将每个样本点 time+value 16 字节压缩至平均 1.3~2 字节, time 采用 delta-of-delta 方式压缩率比较稳定, value 采用 XOR 方式压缩率跟真实数据相关, 可通过自身指标计算得到实际的样本点大小值。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;(rate(prometheus_tsdb_compaction_chunk_size_bytes_sum[2h]) / rate(prometheus_tsdb_compaction_chunk_samples_sum[2h]))&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Thanos&lt;/span&gt;&lt;/h3&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;集群中的 Prometheus 需要设置不同的 external-label, 其分片机制依赖 &lt;a href=&quot;https://thanos.io/tip/thanos/sharding.md/#relabelling&quot; data-linktype=&quot;2&quot;&gt;external-label relabel 进行垂直分片&lt;/a&gt;. 历史数据基于&lt;a href=&quot;https://thanos.io/tip/thanos/sharding.md/#time-partitioning&quot; data-linktype=&quot;2&quot;&gt;时间分片&lt;/a&gt;；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;性能优化: Thanos Query 执行 promQL 时通过 gRPC 双向流方法&lt;a href=&quot;https://prometheus.io/blog/2019/10/10/remote-read-meets-streaming/&quot; data-linktype=&quot;2&quot;&gt;流式获取样本数据&lt;/a&gt;, 如果涉及 Store 节点还需 Range 请求对象存储, 而 Prometheus 直接通过内存或磁盘。由于多次网络调用，Thanos Query 性能会比直接查询 Prometheus 要慢一些, 优化手段主要有：&lt;/section&gt;&lt;/li&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;Query-Frontend 组件对 RangeQuery 按时间分解并行查询和查询缓存；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Store 节点基于 external-label relabel 分片和基于时间范围的分片；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Store 节点开启 index cache, bucket cache；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Compact 节点压缩合并 block 和降采样。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考:&lt;/span&gt;&lt;/h4&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://prometheus.io/docs/practices/naming/&quot; textvalue=&quot;https://prometheus.io/docs/practices/naming/&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;https://prometheus.io/docs/practices/naming/&lt;/span&gt;&lt;/a&gt;&lt;span/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md&quot; textvalue=&quot;https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;https://github.com/OpenObservability/OpenMetrics/blob/main/specification/OpenMetrics.md&lt;/span&gt;&lt;/a&gt;&lt;span/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/prometheus-up/9781492034131/&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;《Prometheus: Up &amp;amp; Running》Brian Brazil&lt;/span&gt;&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.robustperception.io/blog&quot; textvalue=&quot;https://www.robustperception.io/blog&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;https://www.robustperception.io/blog&lt;/span&gt;&lt;/a&gt;&lt;span/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://prometheus.io/blog/&quot; textvalue=&quot;https://prometheus.io/blog/&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;https://prometheus.io/blog/&lt;/span&gt;&lt;/a&gt;&lt;span/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/cncf/tag-observability/blob/main/whitepaper.md&quot; textvalue=&quot;https://github.com/cncf/tag-observability/blob/main/whitepaper.md&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;https://github.com/cncf/tag-observability/blob/main/whitepaper.md&lt;/span&gt;&lt;/a&gt;&lt;span/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/timescale/tsbs&quot; textvalue=&quot;https://github.com/timescale/tsbs&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; tab=&quot;outerlink&quot; data-linktype=&quot;2&quot;&gt;https://github.com/timescale/tsbs&lt;/a&gt;&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;最近热文：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5ODYwMjI2MA==&amp;amp;mid=2649765349&amp;amp;idx=1&amp;amp;sn=16fd6fb58f4acc964b16c6818af7ec81&amp;amp;chksm=becca69e89bb2f88e1f4314046434b0470bd002e0065b7b37309b8cd46406dd8f4a121c39493&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;开发常用的缩写 你能看懂几个？&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;开发常用的缩写 你能看懂几个？&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5ODYwMjI2MA==&amp;amp;mid=2649765315&amp;amp;idx=1&amp;amp;sn=810126e0d720f63c108bf3876d560a95&amp;amp;chksm=becca6b889bb2faec0ad16bd2dcf8fa7cbc5235a6b361a81b37ca1ecb6b86bae018438235291&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;TencentOCR 斩获 ICDAR 2021 三项冠军&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;TencentOCR 斩获 ICDAR 2021 三项冠军&lt;/span&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;2.3935185185185186&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/j3gficicyOvavwNibaHfxs2h5XnrWxuMA3nUuMK4cfysJGTB8QU01nWXWtH4KGXYNHTyMsK13IERf40L18iccT6Rhg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;section class=&quot;channels_iframe_wrp&quot;&gt;&lt;mpvideosnap class=&quot;js_uneditable custom_select_card channels_live_iframe&quot; data-pluginname=&quot;videosnap&quot; data-headimgurl=&quot;https://wx.qlogo.cn/finderhead/I7awtksbibjQe7RZAy84xESOBAfIZ8xQ9ApXt4uTe8po/0&quot; data-username=&quot;v2_060000231003b20faec8c6e08e1ac1d4cf06ea31b07760a16cba92d83444bd9a5d9d55ffaede@finder&quot; data-nickname=&quot;腾讯程序员&quot; data-desc=&quot;将在11月17日 19:30 直播&quot; data-intro=&quot;对谈鹅厂极限运动算法工程师：唯有热爱，才能抵得过岁月漫长&amp;#10;&quot; data-noticeid=&quot;finderlivenotice-v2_060000231003b20faec8c6e08e1ac1d4cf06ea31b07760a16cba92d83444bd9a5d9d55ffaede@finder-1636708956812872-1430151082&quot; data-type=&quot;live&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;腾讯程序员视频号最新视频&lt;/span&gt;&lt;/section&gt;&lt;section class=&quot;channels_iframe_wrp&quot;&gt;&lt;mpvideosnap class=&quot;js_uneditable custom_select_card channels_iframe&quot; data-pluginname=&quot;videosnap&quot; data-id=&quot;export/UzFfAgtgekIEAQAAAAAAh_cW1X0FvwAAAAstQy6ubaLX4KHWvLEZgBPEz6FYRFgpfqf9zNPgMItOFKxaKuC_m_gwM6S311lB&quot; data-url=&quot;https://findermp.video.qq.com/251/20304/stodownload?encfilekey=XGocBFxVWK5dcyOOqpEU47RpBHQIvlhnc81ePuGBwWgUcfUy3LA19mJRk6BNg8WbOe3kE3kqtFMGuFt6IaVMqjdDSUKJNiaHlDIiaHYAZdC0nWcyUjTzdtMxxkibZ6p4rTRjjWAQkhZ0eeFkXkd6IdxUvuxic7ONubdqKDCVsu3PNt1tEkl4zbByGWcRBWpBAQL4&amp;amp;adaptivelytrans=0&amp;amp;bizid=1023&amp;amp;dotrans=0&amp;amp;hy=SH&amp;amp;idx=1&amp;amp;m=d3d65cb4df9cb008820e2b586cd3437c&amp;amp;token=AxricY7RBHdUtZuhjVIpzrUIKAvcYWRia467kHuzIHW1RGxhXA3hsQcgz72Z5hTSBYSAib5wkAWnFM&quot; data-headimgurl=&quot;http://wx.qlogo.cn/finderhead/I7awtksbibjQe7RZAy84xESOBAfIZ8xQ9ApXt4uTe8po/0&quot; data-username=&quot;v2_060000231003b20faec8c6e08e1ac1d4cf06ea31b07760a16cba92d83444bd9a5d9d55ffaede@finder&quot; data-nickname=&quot;腾讯程序员&quot; data-desc=&quot;用这个朋友圈拼图也太简单了&amp;#10;&amp;#10;#朋友圈&amp;#10;&quot; data-nonceid=&quot;13324595909787032563&quot; data-type=&quot;video&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>