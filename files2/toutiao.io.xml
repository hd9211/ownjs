<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>bb69d116a2bafcf513316d4ceba4ac4a</guid>
<title>小团队敏捷实践 2.0</title>
<link>https://toutiao.io/k/6dxv9h5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;敏捷迭代为什么升级&lt;/h1&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;团队在敏捷迭代实施的过程中，遇到了各种问题，在这个过程中，也发现了很多很好的方法论。所以，近期根据团队迭代的实际情况，做了2.0的迭代流程升级。团队使用的工具，在很早的文章里面有介绍，请查看&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1NDMwNDI0Mg==&amp;amp;mid=2247483687&amp;amp;idx=1&amp;amp;sn=a58b9e5d6b68336c6c78f4f210d8bd86&amp;amp;chksm=e9c60bbadeb182ac10a15f13867e1659565045dc0851c94f470b082fce774ccde7b320d724fd&amp;amp;scene=21#wechat_redirect&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;小团队如何落地敏捷开发&lt;/a&gt;。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;一切从需求开始&lt;/h1&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;需求源分类&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于提出需求渠道比较多，为了便于管理，我们对需求源进行了分类，具体分类如下：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;需求类型&lt;/th&gt;&lt;th&gt;描述&lt;/th&gt;&lt;th&gt;对应迭代版本号&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;feature&lt;/td&gt;&lt;td&gt;基于产品价值的自主产品迭代&lt;/td&gt;&lt;td&gt;feature/sprintXX，如：feature/sprint40&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;cs&lt;/td&gt;&lt;td&gt;客户成功经理反馈的用户侧需求&lt;/td&gt;&lt;td&gt;cs/yyyyMMdd，如：cs/20210713&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;tech&lt;/td&gt;&lt;td&gt;研发内部发起的技术改进或重构类需求&lt;/td&gt;&lt;td&gt;tech/模块或重构名，如：tech/mtms、tech/res&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;hotfix&lt;/td&gt;&lt;td&gt;故障流程触发的线上问题修复需求&lt;/td&gt;&lt;td&gt;hotfix/yyyyMMdd，如：hotfix/20210713&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;目前，我们团队开启Sprint的需求类型为：feature，其余类型不触发Sprint。&lt;/p&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;迭代流程&lt;/h1&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-backh=&quot;156&quot; data-backw=&quot;558&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;156&quot; data-ratio=&quot;0.27947393142320337&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYN1yjskxZP7UEwo8c0KE21ccgHUiadlDACvsXvbNTcFh9q5DGemuWQjw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2129&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;整体迭代分为6个阶段，分别是&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;PRD Review：产品需求评审、用户故事评审&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Estimate：概要设计、工作量估算（扑克牌）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Sprint Start：Jira创建Sprint、版本号、登记用户故事、创建甘特图&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Sprint In Progress：迭代进行中，每天10点站会同步进度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Deploy：PM、UI验收、版本发布&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Sprint Review：迭代复盘&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;1.PRD Review&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;PRD Review流程&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-backh=&quot;426&quot; data-backw=&quot;558&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;426&quot; data-ratio=&quot;0.7627695800227015&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMY2TOiaDZlCoia3B7uicTqe4NXMHYpzktngFefeM6iakY32Cm2rCLYJvV4tw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;881&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;参与者&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输入信息&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输出信息&lt;/h3&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;Confluence中的PRD&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;456&quot; data-backw=&quot;558&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.8167539267015707&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYWK7Tiaj3XhhPraNPNQlR4bpibGJp9ibcQUOf2yZZiaicbHsTbDRIaNplO6g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1146&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;钉钉中的用户故事&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;341&quot; data-backw=&quot;558&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6109375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYIOv2agxibgNQSficP29qvSASD91LqeciaoXtT8rL1ArAibMkGKniaQmGnGg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;2.Estimate&lt;/h2&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;估算方式采用的是「规划扑克估算法」。一种基于共识的估算方式（游戏），主要用于估算Scrum迭代中的开发任务的工作量问题，通过团队的共同的评估方式，使得偏差变得相对较小。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;什么是规划扑克&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;规划扑克使用Fibonacci序列作为Story Point。Fibonacci序列是13世纪引入的数学系列数字，用于解释自然的某些形成方面，例如树的分支。通过将前两个数字相加来生成序列，以获得序列中的下一个值：0,1/2,1,2,3,5,8,13,20等。出于敏捷估计的目的，一些数字已经改变，导致以下系列：1，2，3，5，8，13，20，40，100&lt;img data-backh=&quot;241&quot; data-backw=&quot;558&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;241&quot; data-ratio=&quot;0.4312455003599712&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYr21QoYNd0YxibUbIH5wODM9Dt8hQORiaB8uX9diaiaXLOVzK3zLbmcYE8A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1389&quot;/&gt;扑克说明（点数约定：1 Story Point = 1 人/天）&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;牌&lt;/th&gt;&lt;th&gt;解释&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;不需要工作量&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;无穷&lt;/td&gt;&lt;td&gt;任务巨大&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;无法估计&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;一杯咖啡&lt;/td&gt;&lt;td&gt;不足0.5，分分钟搞定&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;其他&lt;/td&gt;&lt;td&gt;按照字面意思理解点数&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;估算流程&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-backh=&quot;618&quot; data-backw=&quot;558&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;618&quot; data-ratio=&quot;1.1067285382830627&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYZM85bDaHzH8gAEdEbau7RBcgWbvZ03sGFCSxlX4QR4sRyShl6n6ibEw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;862&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;参与者&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输入信息&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输出信息&lt;/h3&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;操作步骤（一般2轮估算基本可以达成共识）&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;PM进行用户故事描述&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;RD / FE 的团队成员，通过面朝下的方式打出编号卡（斐波那契值：1，2，3，5，8，13，20，40）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;卡片同时亮出&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;解释估算偏差，并讨论&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;估算共识达成&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;估算记录表&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.503099173553719&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYQ2FcLWtP5frMLlBCgPfblwWQPGawXgPt614icZEazj6RrMxDyl6phTQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;968&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;估算完成后，我们把估算的结果填写到钉盘中的故事列表中，并确定故事优先级&lt;/h2&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;3.Sprint Start&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;Sprint创建&amp;amp;开启流程&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-backh=&quot;460&quot; data-backw=&quot;558&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;460&quot; data-ratio=&quot;0.8251497005988024&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYG07ib9IxY2nXbqBPHicfvMDT1icUf4TnDI0vdP0pDXzN9llcibhN7fMkGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;835&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;参与者&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;推动：Scrum Master（QA）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;参与：RD、FE、QA&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输入信息&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输出信息&lt;/h3&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;创建Epic&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;597&quot; data-backw=&quot;558&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.0690505548705302&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMY5jw6uiaPtN59YMXKbQMJflhklWIc9CfNyCicEYtGgJo1r7BPQHrW36fQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;811&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;创建Story&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;429&quot; data-backw=&quot;558&quot; data-ratio=&quot;0.7697044334975369&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYSGsskecx0c8f6bUNT9KPFKYx4BzIhM2RNUrD9fUZ9dicT9S018DDN1A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;812&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;558&quot; data-backw=&quot;558&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMY3TBicL6eCGyW3Mb7M8jDg0pv1HAD7EGA5XlEa1gWpIszqIUjfiaTJQnA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;811&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;Sprint面板&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;213&quot; data-backw=&quot;558&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.38203125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYgUNO5tSWEtdiampiaf7ahgQvWs94PGsGcicF6FNhm7wVJX4BTJybibE0Fg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;Gantt&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;94&quot; data-backw=&quot;558&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.16875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYWOkANT8lDjiar4Ron9o7uDb4GPgGDg7C8Vnicn1ibdW9aM7bRaib8WicV9Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;4.Sprint In Progress&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;日常流程&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-backh=&quot;279&quot; data-backw=&quot;558&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;279&quot; data-ratio=&quot;0.5&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYFu2OGgQ8bLDicTrt7V0V33DE1oVsTB9tvD4nAbGBltkQFWBn9U0SouQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;776&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;参与者&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;推动：Scrum Master（QA）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;参与：RD、FE、QA&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输入信息&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输出信息&lt;/h3&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;5.Deploy&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;验收&amp;amp;发布流程&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-backh=&quot;482&quot; data-backw=&quot;371&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;371&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;482&quot; data-ratio=&quot;1.2991913746630728&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYzEGrU7XK7X4JKlAB3FWNnS0ltbenCCm0ic0GROeFosHXpWQzhVjUpRg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;371&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;参与者&lt;/h3&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;推动：Scrum Master（QA）&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;参与：PM、UI、RD、FE&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输入信息&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输出信息&lt;/h3&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;6.Sprint Review&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;Review流程&lt;/h3&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-backh=&quot;476&quot; data-backw=&quot;366&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;366&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;476&quot; data-ratio=&quot;1.3005464480874316&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYPNZF59jbPHyhegGNdGOToZmicBEwlt7e937EHxEDichFJ6KAQ9ibC2Edw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;366&quot;/&gt;&lt;/figure&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;参与者&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输入信息&lt;/h3&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;输出信息&lt;/h3&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;测试报告&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;167&quot; data-backw=&quot;558&quot; data-ratio=&quot;0.3&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMY4WQHcrrBqkxibf1yD8CsXu4Oq4SWoqyhvicDMz3FjH7ibBptUGLeBsLKA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;253&quot; data-backw=&quot;558&quot; data-ratio=&quot;0.45390625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYpWTFXYhw5lRndM7DYxn2Azk2HnJfHIPCZyNrBicia0xqk9VibA76BJ82g/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;262&quot; data-backw=&quot;558&quot; data-ratio=&quot;0.4703125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYH9BxsuYj0FaTribjKicBxmgvUluTK8xx7ricBYeaRXUgETCrLdLvTPtLQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;142&quot; data-backw=&quot;558&quot; data-ratio=&quot;0.2546875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/Jq6sJhMhoXWd8RO2HSjuvDgPXalZTPMYswjzyNRIhALB3CKfMicgicibVZ9HOfe6vLNHE4zOlibuTqibg0EVYaumxDQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;总结&lt;/span&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上就是目前研发团队的2.0版本的敏捷迭代流程，后面需要重点改进的还是，如何引入CI、自动化测试等等手段，进一步提升测试的效率，从而更快的反馈出问题。&lt;/p&gt;&lt;/section&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2bd35de98ba4f92530b7b9726b706b7d</guid>
<title>阿里二面 InnoDB 行记录存储结构</title>
<link>https://toutiao.io/k/9szkcx1</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;程序员常用的IDEA插件：https://github.com/silently9527/Toolkit&lt;/p&gt;&lt;p&gt;本文已被Github仓库收录 https://github.com/silently9527/ProgrammerNotes&lt;/p&gt;&lt;p&gt;微信公众号：贝塔学Java&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;前言&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们平时在向MySQL数据库表中插入数据时，实际数据是以行记录的格式存储在磁盘上的，本篇我们就一起来详细的了解下MySQL的行记录格式，理解了行记录的格式有助于我们后面了解MySQL如何快速在页中定位出行记录，以及MySQL的版本控制链，事务隔离级别等等，行记录格式是许多MySQL核心知识的基础。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;InnoDB行记录类型&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL中总共提供了四种类型的行格式：&lt;code&gt;Compact&lt;/code&gt;,&lt;code&gt;Redundant&lt;/code&gt;,&lt;code&gt;Dynamic&lt;/code&gt;,&lt;code&gt;Compressed&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在创建表或修改表的时候可以指定行记录的格式&lt;code&gt;create table 表名 row_format=行格式名&lt;/code&gt;&lt;code&gt;alter table 表名 row_format=行格式名&lt;/code&gt;&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;知道就行，不需要去记住，基本上使用不到&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Compact行格式&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在四种类型的行格式中，我们主要来学习&lt;code&gt;Compact&lt;/code&gt;格式，其他格式的行记录类似；&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.12207357859531773&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ggRgNal7zGibM9HJbFm3SxwiaY1MmG24esREibYuzGzmR16gy5TDbO2hclE4c8h3vCkwrqMFwLjF2F0rEW9ZsLkMA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;598&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从图中我们可以看出行记录主要是由4部分组成：变长字段长度、Null值列表，行记录头信息以及列的真实数据&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;变长字段长度列表&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在MySQL中很一些变长的数据类型（varchar，text等），MySQL需要知道这些数据的实际长度，这样才能正确的在真实数据中取出对应列的数据，所以变长字段是由两部分组成：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;每个变长字段的长度要么用1字节要么用2字节表示，由此就决定了每个字段的最大字节数是65535；&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;假如字符类型若为gbk，每个字符最多占2个字节，最大长度不能超过32766;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;假如字符类型若为utf8，每个字符最多占3个字节，最大长度不能超过21845。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那到底什么时候选用1字节什么时候选用2字节呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里需要定义三个变量：w,m,l&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;假如使用的字符集是utf8mb4，每个字符占用的字节数是4字节，那么w=4；假如字符类型若为utf8，每个字符最多占3个字节，那么w=3; 所以w表示字符集中每个字符所占的字节数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;varchr(m)，这里m表示的是定义的字符的长度&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;l 表示的是该字段真实数据占用的字节数&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 &lt;code&gt;m*w &amp;lt;= 255&lt;/code&gt;；表示该字段定义的最大长度都不会超过1字节，那么该字段的长度就用1字节表示&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 &lt;code&gt;m*w &amp;gt; 255 &amp;amp;&amp;amp; l&amp;lt;=127&lt;/code&gt;; 表示该字段定义的长度可能会超过1个字节，但是当前的实际长度是小于127的，可以用1个字节表示&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当 &lt;code&gt;m*w &amp;gt; 255 &amp;amp;&amp;amp; l&amp;gt;127&lt;/code&gt;; 用2字节来表示该字段的长度&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;思考：为什么与l比较的值是127呢？当我们定义的变长字段可能大于255（也就是超过一个字节）时，MySQL如何才能知道当前读取的字节该字段的完成字段长度，还是该字段的半个字段长度，为了解决这个问题，MySQL使用了1字节的首位，当首位为0表示当前是1字节，当首位为0表示当前长度是2字节；由于占用了1字节的首位，所以剩下7位所能表示的最大值是127&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;变长字段不会存储为Null列的长度；其次并不是行记录中一定需要变长字段长度这段内容，如果行记录中没有定义变长字段或者是变长字段都为Null，那么就不会有变长字段长度这部分&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;变长字段占用的字节数按照顺序逆序存储&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Null值列表&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;一条记录中某些列通常可能允许为null，所以Compact行格式把这些允许为null的进行了统一管理；&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;首先统计出表中定义的哪些列允许为null&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;如果表中的字段都不能为空，那么就不存在null值列表；如果存在允许为null的字段，那么就按照字段的顺序为每个字段对应一个二进制位，当二进制位为1时表示该列值为空；当二进制位位0时表示该列值不为空&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Null值列表必须有整数个字节来表示，所以对应没有占用的位使用0补位&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5365853658536586&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ggRgNal7zGibM9HJbFm3SxwiaY1MmG24esnNXYC5nLiaP0UyyxU1keOjLsiaEnuc9yMGONefvphBU3LrOtz2OFgNCw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;410&quot;/&gt;&lt;/figure&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;行记录的头信息&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;头信息中主要包含了6个字段，其中5个字段也是在面试中经常被问到的，为了方便记忆，我们把5个字段对应到手的5根指头：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;n_owned（拇指）: 一个数据页会被分成很多个组，每组最后的一条记录该字段为1，其他记录该字段为0，就像分组中所有的记录的大哥；（对应拇指）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;deleted_flag（食指）: 标记该记录是被删除的；当记录被删除时不会真实删除，而是用该字段标记，并且把所有删除的记录使用链表连接起来，以后的文章会继续说到这个字段。（想象下你平时挖鼻屎是不是用的食指）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;heap_no（中指）: 表示当前记录在数据页中的相对位置（MySQL使用该字段来表示记录位置，可以和中指对应，不可描述）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;record_type（无名指）: 表示当前记录属于哪种类型，（无名指用来带戒指的，与分类有关，可以把人分为已婚和未婚，）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;0表示普通记录&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;1表示目录项记录，索引中非叶子结点中的数据记录都是1&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;2表示infrmum记录，每个数据页中至少会有两条记录，其中最小记录的record_type=2&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;3表示Supremum记录，每个数据页中至少会有两条记录，其中最大记录的record_type=3&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;next_record（小拇指）: 存放下一条记录的相对位置（当数数时，左手的小拇指数完之后就该换右手了，和next_record表达的意思类型）&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;最后一个字段min_rec_flag : B+树中每层非叶子结点最小目录项记录该字段为1；该字段相对于其他5个字段显得不那么重要，不会影响理解B+树索引&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;隐藏列&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了用户自定义的数据列以外，MySQL还会为每行记录生成3个隐藏列&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;row_id: 行ID，记录的唯一标识；当用户在表中定义了主键字段就优先选择用户定义的主键，如果没有，就查找是否有定义不为null的唯一索引，如果有就把该列作为主键，如果没有MySQL就会生成一列row_id隐藏列作为主键&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;trx_id: 事务的ID；该字段对于实现一致性视图和事务隔离级别至关重要，以后会详细说明&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;roll_pointer: 回滚指针，指向的是该记录的上一个版本号，MySQL的MVCC主要就是通过这个字段来实现的。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;溢出列&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MySQL中所有的行记录都会被存储在数据页中，每个数据页的大小是16KB，也就是16384个字节；在前面我们讲过变长字段的长度可以用两个字节来表示，所以列的最大长度可以是65535，当遇到这种极端情况时，一个数据页是存储不下这一条记录的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Compact行格式针对这种情况的处理方式是在真实的数据处记录该列的一部分数据（768字节），其他多余的数据会存储到新的数据页中（溢出页），然后在该记录中使用20个字节存储这些数据页的地址&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5177304964539007&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ggRgNal7zGibM9HJbFm3SxwiaY1MmG24esMzgxwumdoX3hg4MswDxqdXDOWiahs6Q1UbyvFS4rJdSD0MqRicnt7nzg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;423&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;溢出页与溢出页之间使用的链表相连接&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;其他的行记录格式：&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Redundant&lt;/code&gt;：MySQL5.0之前的格式，直接忽略&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Dynamic&lt;/code&gt;,&lt;code&gt;Compressed&lt;/code&gt;与&lt;code&gt;Compact&lt;/code&gt;很像，只是在溢出列的处理有些差异，他们只会在真实数据列中使用20个字节存储溢出页的地址&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;面试题&lt;span/&gt;&lt;/h4&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;char(M)定义的字段，在变长字段的长度列表中会记录该字段的长度吗？&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;欢迎大家在评论区留言讨论&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.5854037267080745&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/ggRgNal7zGibM9HJbFm3SxwiaY1MmG24esEfFDMa68KB9KKFZdvQfHHwZBcHN9XW4TnH73b664UxfhOhkuECkXibQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;644&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>21ca25f6ab9e9a8c520d477a33ed6253</guid>
<title>深入理解简单设计</title>
<link>https://toutiao.io/k/vgl65hp</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;

      
        &lt;img src=&quot;/understand-simple-design/12-13.jpeg&quot; class=&quot;&quot;/&gt;

&lt;p&gt;Kent Beck提出的简单设计原则，内容为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过所有测试（Passes its tests）&lt;/li&gt;
&lt;li&gt;尽可能消除重复 (Minimizes duplication)&lt;/li&gt;
&lt;li&gt;尽可能清晰表达 (Maximizes clarity)&lt;/li&gt;
&lt;li&gt;更少代码元素 (Has fewer elements)&lt;/li&gt;
&lt;li&gt;以上四个原则的重要程度依次降低。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过所有测试原则意味着我们开发的功能满足客户的需求，这是简单设计的底线原则。该原则同时隐含地告知与客户或领域专家（需求分析师）充分沟通的重要性。&lt;/p&gt;
&lt;p&gt;尽可能消除重复原则是对代码质量提出的要求，并通过测试驱动开发的重构环节来完成。注意此原则提到的是Minimizes（尽可能消除），而非No duplication（无重复），因为追求极致的重用存在设计与编码的代价。&lt;/p&gt;
&lt;p&gt;尽可能清晰表达原则要求代码要简洁而清晰地传递领域知识，在领域驱动设计的语境下，就是要遵循统一语言，提高代码的可读性，满足业务人员与开发人员的交流目的。针对核心领域，甚至可以考虑引入领域特定语言（Domain Specific Language，DSL）来表现领域逻辑。&lt;/p&gt;
&lt;p&gt;在满足这三个原则的基础上，更少代码元素原则告诫我们遏制过度设计的贪心，做到设计的恰如其分，即在满足客户需求的基础上，只要代码已经做到了最少重复与清晰表达，就不要再进一步拆分或提取类、方法和变量。&lt;/p&gt;
&lt;p&gt;这四个原则是依次递进的，功能正确，减少重复，代码可读是简单设计的根本要求。一旦满足这些要求，就不能创建更多的代码元素去迎合未来可能并不存在的变化，避免过度设计。&lt;/p&gt;
&lt;span id=&quot;more&quot;/&gt;

&lt;h3 id=&quot;简单设计的量化标准&quot;&gt;&lt;a href=&quot;#简单设计的量化标准&quot; class=&quot;headerlink&quot; title=&quot;简单设计的量化标准&quot;/&gt;简单设计的量化标准&lt;/h3&gt;&lt;p&gt;在满足需求的基本前提下，简单设计其实为代码的重构给出了三个量化标准：重复性、可读性与简单性。重复性是一个客观的标准，可读性则出于主观的判断，故而应优先考虑尽可能消除代码的重复，然后在此基础上保证代码清晰地表达设计者的意图，提高可读性。只要达到了重用和可读，就应该到此为止，不要画蛇添足地增加额外的代码元素，如变量、函数、类甚至模块，保证实现方案的简单。&lt;/p&gt;
&lt;p&gt;第四个原则是“奥卡姆剃刀”的体现，更加文雅的翻译表达即“如无必要，勿增实体”。人民大学的哲学教授周濂在解释奥卡姆剃刀时，如是说道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作为一个极端的唯名论者，奥卡姆的威廉（William of Occam，1280——1349）主张个别的事物是真实的存在，除此之外没有必要再设立普遍的共相，美的东西就是美的，不需要再废话多说什么美的东西之所以为美是由于美，最后这个美，完全可以用奥卡姆的剃刀一割了之。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个所谓“普遍的共相”就是一种抽象。在软件开发中，那些不必要的抽象反而会产生多余的概念，实际会干扰代码阅读者的判断，增加代码的复杂度。因此，简单设计强调恰如其分的设计，若实现的功能通过了所有测试，就意味着满足了客户的需求，这时，只需要尽可能消除重复，清晰表达了设计者意图，就不可再增加额外的软件元素。若存在多余实体，当用奥卡姆的剃刀一割了之。&lt;/p&gt;
&lt;h3 id=&quot;FitNesse实例&quot;&gt;&lt;a href=&quot;#FitNesse实例&quot; class=&quot;headerlink&quot; title=&quot;FitNesse实例&quot;/&gt;FitNesse实例&lt;/h3&gt;&lt;p&gt;让我们通过重构一段FitNesse代码来阐释简单设计原则。这段代码案例来自Robert Martin的著作《代码整洁之道》。Robert Martin在书中给出了对源代码的三个重构版本，这三个版本的演化恰好可以帮助我们理解简单设计原则。&lt;/p&gt;
&lt;p&gt;重构前的代码初始版本是定义在&lt;code&gt;HtmlUtil&lt;/code&gt;类中的一个长函数：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;testableHtml&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PageData pageData, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; includeSuiteSetup)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        WikiPage wikiPage = pageData.getWikiPage();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        StringBuffer buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuffer();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pageData.hasAttribute(&lt;span class=&quot;string&quot;&gt;&quot;Test&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (includeSuiteSetup) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                WikiPage suiteSetupPage = PageCrawlerImpl.getInheritedPage(SuiteResponder.SUITE_SETUP_NAME, wikiPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (suiteSetupPage != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                    WikiPagePath pagePath = wikiPage.getPageCrawler().getFullPath(suiteSetupPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                    String pagePathName = PathParser.render(pagePath);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                    buffer.append(&lt;span class=&quot;string&quot;&gt;&quot;\n!include -setup .&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                          .append(pagePathName)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                          .append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            WikiPage setupPage = PageCrawlerImpl.getInheritedPage(&lt;span class=&quot;string&quot;&gt;&quot;SetUp&quot;&lt;/span&gt;, wikiPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (setupPage != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                WikiPagePath setupPath = wikiPage.getPageCrawler().getFullPath(setupPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                String setupPathName = PathParser.render(setupPath);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                buffer.append(&lt;span class=&quot;string&quot;&gt;&quot;\n!include -setup .&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                      .append(setupPathName)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                      .append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        buffer.append(pageData.getContent());&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pageData.hasAttribute(&lt;span class=&quot;string&quot;&gt;&quot;Test&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            WikiPage teardownPage = PageCrawlerImpl.getInheritedPage(&lt;span class=&quot;string&quot;&gt;&quot;TearDown&quot;&lt;/span&gt;, wikiPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (teardownPage != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                WikiPagePath tearDownPath = wikiPage.getPageCrawler().getFullPath(teardownPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                String tearDownPathName = PathParser.render(tearDownPath);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                buffer.append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                      .append(&lt;span class=&quot;string&quot;&gt;&quot;!include -teardown .&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                      .append(tearDownPathName)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                      .append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (includeSuiteSetup) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                WikiPage suiteTeardownPage = PageCrawlerImpl.getInheritedPage(SuiteResponder.SUITE_TEARDOWN_NAME, wikiPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (suiteTeardownPage != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                    WikiPagePath pagePath = wikiPage.getPageCrawler().getFullPath(suiteTeardownPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                    String pagePathName = PathParser.render(pagePath);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                    buffer.append(&lt;span class=&quot;string&quot;&gt;&quot;\n!include -teardown .&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                          .append(pagePathName)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                          .append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        pageData.setContent(buffer.toString());&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pageData.getHtml();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;假定这一个函数已经通过了测试，按照简单设计的评判步骤，我们需要检查代码是否存在重复。显然，在上述代码的6&lt;del&gt;13行、15&lt;/del&gt;22行、26&lt;del&gt;34行以及36&lt;/del&gt;43行四个地方都发现了重复或相似的代码。这些代码的执行步骤像一套模板：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;获取Page&lt;/li&gt;
&lt;li&gt;若Page不为null，则获取路径&lt;/li&gt;
&lt;li&gt;解析路径名称&lt;/li&gt;
&lt;li&gt;添加到输出结果中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这套模板的差异部分可以通过参数差异化完成，故而可以提取方法：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;includePage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(WikiPage wikiPage, StringBuffer buffer, String pageName, String sectionName)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        WikiPage suiteSetupPage = PageCrawlerImpl.getInheritedPage(pageName, wikiPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (suiteSetupPage != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            WikiPagePath pagePath = wikiPage.getPageCrawler().getFullPath(suiteSetupPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            String pagePathName = PathParser.render(pagePath);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            buildIncludeDirective(buffer, sectionName, pagePathName);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;buildIncludeDirective&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(StringBuffer buffer, String sectionName, String pagePathName)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        buffer.append(&lt;span class=&quot;string&quot;&gt;&quot;\n!include &quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                .append(sectionName)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                .append(&lt;span class=&quot;string&quot;&gt;&quot; .&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                .append(pagePathName)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                .append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在提取了&lt;code&gt;includePage()&lt;/code&gt;方法后，就可以消除四段几乎完全相似的重复代码。重构后的长函数为：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;testableHtml&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PageData pageData, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; includeSuiteSetup)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        WikiPage wikiPage = pageData.getWikiPage();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        StringBuffer buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuffer();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pageData.hasAttribute(&lt;span class=&quot;string&quot;&gt;&quot;Test&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (includeSuiteSetup) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                includePage(wikiPage, buffer, SuiteResponder.SUITE_SETUP_NAME, &lt;span class=&quot;string&quot;&gt;&quot;-setup&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includePage(wikiPage, buffer, &lt;span class=&quot;string&quot;&gt;&quot;SetUp&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;-setup&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        buffer.append(pageData.getContent());&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pageData.hasAttribute(&lt;span class=&quot;string&quot;&gt;&quot;Test&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includePage(wikiPage, buffer, &lt;span class=&quot;string&quot;&gt;&quot;TearDown&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;-teardown&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (includeSuiteSetup) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;                includePage(wikiPage, buffer, SuiteResponder.SUITE_TEARDOWN_NAME, &lt;span class=&quot;string&quot;&gt;&quot;-teardown&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        pageData.setContent(buffer.toString());&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pageData.getHtml();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;从重复性角度看，以上代码已经去掉了重复。当然，也可以将&lt;code&gt;pageData.hasAttribute(&quot;Test&quot;)&lt;/code&gt;视为重复，因为该表达式在第5行和第12行都出现过，表达式用到的常量&lt;code&gt;&quot;Test&quot;&lt;/code&gt;也是重复。不过，你若认为这是从代码可读性角度对其重构，也未尝不可：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isTestPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PageData pageData)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pageData.hasAttribute(&lt;span class=&quot;string&quot;&gt;&quot;Test&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;若遵循信息专家模式，&lt;code&gt;isTestPage()&lt;/code&gt;方法应该分配给&lt;code&gt;PageData&lt;/code&gt;类，通过移动方法，转移到&lt;code&gt;PageData&lt;/code&gt;类后，将其改变为实例方法：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; class PageData&lt;/span&gt;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isTestPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; hasAttribute(&lt;span class=&quot;string&quot;&gt;&quot;Test&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;重构后的&lt;code&gt;testableHtml()&lt;/code&gt;方法的可读性仍有不足之处，例如方法的名称，&lt;code&gt;buffer&lt;/code&gt;变量名都没有清晰表达设计意图，对Test和Suite的判断增加了条件分支，给代码阅读制造了障碍。由于&lt;code&gt;includePage()&lt;/code&gt;方法是一个通用方法，未能清晰表达其意图，且传递的参数同样干扰了阅读，应该将各个调用分别封装为表达业务含义的方法，例如定义为&lt;code&gt;includeSetupPage()&lt;/code&gt;。当页面并非测试页面时，&lt;code&gt;pageData&lt;/code&gt;的内容无需重新设置，可以直接通过&lt;code&gt;getHtml()&lt;/code&gt;方法返回。因此，添加页面内容的第11行代码还可以放到&lt;code&gt;isTestPage()&lt;/code&gt;分支中，让逻辑变得更加紧凑：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;renderPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PageData pageData, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; includeSuiteSetup)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pageData.isTestPage()) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            WikiPage testPage = pageData.getWikiPage();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            StringBuffer newPageContent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuffer();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeSuiteSetupPage(testPage, newPageContent, includeSuiteSetup);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeSetupPage(testPage, newPageContent);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includePageContent(testPage, newPageContent);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeTeardownPage(testPage, newPageContent);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeSuiteTeardownPage(testPage, newPageContent, includeSuiteSetup);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            pageData.setContent(buffer.toString());&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }        &lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pageData.getHtml();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;无论是避免重复，还是清晰表达意图，这个版本的代码都要远胜于最初的版本。Robert Martin在《代码整洁之道》中也给出了他重构的第一个版本：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;renderPageWithSetupsAndTeardowns&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PageData pageData, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isSuite)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isTestPage = pageData.hasAttribute(&lt;span class=&quot;string&quot;&gt;&quot;Test&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isTestPage) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            WikiPage testPage = pageData.getWikiPage();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            StringBuffer newPageContent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuffer();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeSetupPages(testPage, newPageContent, isSuite);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            newPageContent.append(pageData.getContent());&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeTeardownPages(testPage, newPageContent, isSuite);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            pageData.setContent(newPageContent.toString());&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pageData.getHtml();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;对比我的版本和Robert Martin的版本，我认为Robert Martin的当前版本仍有以下不足之处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法名称过长，暴露了实现细节&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isTestPage&lt;/code&gt;变量不如&lt;code&gt;isTestPage()&lt;/code&gt;方法的封装性好&lt;/li&gt;
&lt;li&gt;方法体缺少分段，不同的意图混淆在了一起&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最关键的不足之处在于第7行代码。对比第7行和第6、8两行代码，虽然都是一行代码，但其表达的意图却有风马牛不相及的违和感。这是因为第7行代码实际暴露了将页面内容追加到&lt;code&gt;newPageContent&lt;/code&gt;的实现细节，第6行和第8行代码却隐藏了这一实现细节。这三行代码没有处于同一个抽象层次，违背了“单一抽象层次原则（SLAP）”。&lt;/p&gt;
&lt;p&gt;Robert Martin在这个版本基础上，继续精进，给出了重构后的第二个版本：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;renderPageWithSetupsAndTeardowns&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PageData pageData, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isSuite)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isTestPage(pageData))&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeSetupAndTeardownPages(pageData, isSuite);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pageData.getHtml();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;该版本的方法仍然定义在&lt;code&gt;HtmlUtil&lt;/code&gt;工具类中。对比Robert Martin的两个重构版本，后一版本的主方法变得更加简单了，方法体只有短短的三行代码。虽然方法变得更简短，但提取出来的&lt;code&gt;includeSetupAndTeardownPages()&lt;/code&gt;方法却增加了不必要的抽象层次。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;封装需要有度，引入太多的层次反而会干扰阅读。&lt;/strong&gt;尤其是方法，Java或大多数语言都不提供“方法嵌套方法”的层次结构（Scala支持这一语法特性）。如果为一个方法的不同业务层次提取了太多方法，在逻辑上，它存在递进的嵌套关系，在物理上，却是一个扁平的结构。阅读这样的代码会造成不停的跳转，不够直接。正如Grady Booch所述：“整洁的代码从不隐藏设计者的意图，充满了&lt;strong&gt;干净利落&lt;/strong&gt;的抽象和&lt;strong&gt;直截了当&lt;/strong&gt;的控制语句。”干净利落，直截了当，可以破除对过度细粒度方法的迷信！与其封装一个用超长名称才能表达其意图的&lt;code&gt;includeSetupAndTeardownPages()&lt;/code&gt;方法，不如直接“敞开”相同层次的代码细节，如：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;includeSuiteSetupPage(testPage, newPageContent, includeSuiteSetup);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;includeSetupPage(testPage, newPageContent);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;includePageContent(testPage, newPageContent);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;includeTeardownPage(testPage, newPageContent);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;includeSuiteTeardownPage(testPage, newPageContent, includeSuiteSetup);&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这五行代码不正是直截了当地表达了包含的页面结构吗？因此，我觉得Robert Martin提取出来的&lt;code&gt;includeSetupAndTeardownPages()&lt;/code&gt;方法违背了简单设计的第四条原则，即增加了不必要的软件元素。事实上，如果一个方法的名称包含了and，就说明该方法可能违背了“一个方法只做一件事情”的基本原则。&lt;/p&gt;
&lt;p&gt;我并不反对定义细粒度方法，相反我很欣赏合理的细粒度方法，如前提取的&lt;code&gt;includePageContent()&lt;/code&gt;方法。一个庞大的方法往往缺少内聚性，不利于重用，但什么才是方法的合适粒度呢？不同的公司有着不同的方法行限制，有的是200行，有的是50行，有的甚至约束到5行。最关键的不是限制代码行，而在于一个方法只能做一件事。&lt;/p&gt;
&lt;p&gt;若发现一个主方法过长，可通过提取方法使它变短。当提取方法的逻辑层次嵌套太多，彼此的职责又高内聚时，就需要考虑将这个主方法和提取出来的方法一起委派到一个专门的类。此外，通过&lt;code&gt;includeSetupPage()&lt;/code&gt;等方法传递的共同参数，也说明了这些方法相较于其他方法而言，要更加内聚。&lt;/p&gt;
&lt;p&gt;由此可知，&lt;code&gt;testableHtml()&lt;/code&gt;方法的逻辑提供了一个相对独立的职责，不应该将其实现逻辑放在&lt;code&gt;HtmlUtil&lt;/code&gt;工具类，而应按照其意图独立为一个类&lt;code&gt;TestPageIncluder&lt;/code&gt;。一旦提取为类，还可以将方法共同传递的参数转换为这个新类的字段，从而减少方法之间传递的参数。重构后的代码为：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestPageIncluder&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; PageData pageData;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; WikiPage testPage;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; StringBuffer newPageContent;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; PageCrawler pageCrawler;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestPageIncluder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PageData pageData)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.pageData = pageData;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        testPage = pageData.getWikiPage();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        pageCrawler = testPage.getPageCrawler();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        newPageContent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuffer();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PageData pageData)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; render(pageData, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PageData pageData, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isSuite)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TestPageIncluder(pageData).renderPage(isSuite);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;renderPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isSuite)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pageData.isTestPage()) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeSetupPages(isSuite);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includePageContent();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeTeardownPages(isSuite);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            updatePageContent();            &lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pageData.getHtml();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;includeSetupPages&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isSuite)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isSuite) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeSuitesSetupPage();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        includeSetupPage();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;includeSuitesSetupPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        includePage(SuiteResponder.SUITE_SETUP_NAME, &lt;span class=&quot;string&quot;&gt;&quot;-setup&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;includeSetupPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        includePage(&lt;span class=&quot;string&quot;&gt;&quot;SetUp&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;-setup&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;includeTeardownPages&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isSuite)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isSuite) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            includeSuitesTeardownPage();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        includeTeardownPage();&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;includeSuitesTeardownPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        includePage(SuiteResponder.SUITE_TEARDOWN_NAME, &lt;span class=&quot;string&quot;&gt;&quot;-teardown&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;includeTeardownPage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        includePage(&lt;span class=&quot;string&quot;&gt;&quot;TearDown&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;-teardown&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;updateContent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        pageData.setContent(newPageContent.toString());&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;/&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;includePage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String pageName, String sectionName)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        WikiPage inheritedPage = PageCrawlerImpl.getInheritedPage(pageName, wikiPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (inheritedPage != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            WikiPagePath pagePath = wikiPage.getPageCrawler().getFullPath(inheritedPage);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            String pathName = PathParser.render(pagePath);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            buildIncludeDirective(pathName, sectionName);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;buildIncludeDirective&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String pathName, String sectionName)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;        buffer.append(&lt;span class=&quot;string&quot;&gt;&quot;\n!include &quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            .append(sectionName)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            .append(&lt;span class=&quot;string&quot;&gt;&quot; .&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            .append(pathName)&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;            .append(&lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;引入&lt;code&gt;TestPageIncluder&lt;/code&gt;类后，职责的层次更加清晰了，分离出来的这个类承担了组装测试页面信息的职责，&lt;code&gt;HtmlUtil&lt;/code&gt;类只需要调用它的静态方法&lt;code&gt;render()&lt;/code&gt;即可，避免了因承担太多职责而形成一个上帝类。通过提取出类和对应的方法，形成不同的抽象层次，让代码的阅读者有选择地阅读自己关心的部分，这就是清晰表达设计者意图的价值。&lt;/p&gt;
&lt;p&gt;对比Robert Martin给出的重构第二个版本以及这个提取类的最终版本，我赞成将该主方法的逻辑提取给专门的类，但不赞成在主方法中定义过度抽象层次的&lt;code&gt;includeSetupAndTeardownPages()&lt;/code&gt;方法。&lt;/p&gt;
&lt;p&gt;我曾就Robert Martin给出的两个版本做过调查，发现仍然有一部分人偏爱第二个更加简洁的版本。这一现象恰好说明简单设计的第三条原则属于主观判断，不如第二条原则那般具有客观的评判标准，恰如大家对美各有自己的欣赏。但我认为，一定不会有人觉得重构前的版本才是最好。即使不存在重复代码，单从可读性角度判断，也会觉得最初版本的代码不堪入目，恰如大家对美的评判标准，仍具有一定的普适性。&lt;/p&gt;
&lt;p&gt;Robert Martin在《代码整洁之道》中也给出了分离职责的类&lt;code&gt;SetupTeardownIncluder&lt;/code&gt;。两个类的实现相差不大，只是&lt;code&gt;TestPageIncluder&lt;/code&gt;类要少一些方法。除了没有&lt;code&gt;includeSetupAndTeardownPages()&lt;/code&gt;方法外，我也未曾定义&lt;code&gt;findInheritedPage()&lt;/code&gt;和&lt;code&gt;getPathNameForPage()&lt;/code&gt;之类的方法，也没有提取&lt;code&gt;isSuite&lt;/code&gt;字段，因为我认为这些都是不必要的软件元素，它违背了简单设计的第四条原则，应当用奥卡姆的剃刀一割了之。&lt;/p&gt;
&lt;p&gt;当然，如果开发人员在编写代码时就能遵循简单设计原则，实则也不会写出FitNesse最早版本这样的代码，因为该原则与测试驱动开发相匹配，在完成一个失败测试的实现之后，应该即刻进行重构，重构时依据重用性、可读性和简单性对代码质量进行判断，自然不会出现大段的充满了重复、冗长的代码臭味。&lt;/p&gt;

    &lt;/div&gt;

    
    
    
        

&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>ba3f654faa1309a723e0dfba664af775</guid>
<title>深度学习的三个主要步骤</title>
<link>https://toutiao.io/k/w7gldru</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;本文来自&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzIyNjM2MzQyNg==&amp;amp;mid=2247485133&amp;amp;idx=1&amp;amp;sn=52b9eb0a673fa095d84e996760ea358a&amp;amp;chksm=e870d780df075e967e7307419705509105ca735eb6e78bfa641b16f1190ebff9fde575baf44e&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;李宏毅机器学习笔记&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;span&gt;李宏毅机器学习笔记&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（LeeML-Notes）&lt;/span&gt;&lt;span&gt;组队学习，&lt;/span&gt;&lt;span&gt;详细介绍了使用深度学习技术的三大主要步骤。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;教程地址：https://github.com/datawhalechina/leeml-notes&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsGQyQO3kXRlrTqGHTLN5IDLM7IW0V0nIvSeibYuf7NoCfDwXJvFC2huzrZq6coWJKVsKksoFzuqmww/0?wx_fmt=png&quot; data-cropx1=&quot;134.6643598615917&quot; data-cropx2=&quot;632.690311418685&quot; data-cropy1=&quot;313.44290657439444&quot; data-cropy2=&quot;480.6124567474048&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3353413654618474&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vI9nYe94fsGQyQO3kXRlrTqGHTLN5IDLbDR7UPBFgmsic6gHSTuNibB2hQNHVA5kkodAjQs1ndnQmRibVY2dPmpew/640?wx_fmt=other&quot; data-type=&quot;other&quot; data-w=&quot;498&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;深度学习的三个步骤：&lt;/p&gt;&lt;section&gt;&lt;span&gt;Step1：神经网络（Neural network）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Step2：模型评估（Goodness of function）&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Step3：选择最优函数（Pick best function）&lt;/span&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Step1：神经网络&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;神经网络是由很多单元连接而成，这些单元称为神经元。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.58603066439523&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHRc6P9BzDgSjglgTpurfl6GFByz83NNHkBJ8UWONQibzcBwHWybHDiadw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1174&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;神经网络类似于人类的神经细胞，电信号在神经元上传递，类似于数值在神经网络中传递的过程。 &lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7814854682454252&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHl7ibZMVaFA8hKGNXHm8zjfianSzBN8jibLo012mlqBHWydNicTwCLEa7Ig/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;929&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个神经网络里面，一个神经元就相当于一个逻辑回归函数，所以上图中有很多逻辑回归函数，其中每个逻辑回归都有自己的权重和自己的偏差，这些权重和偏差就是参数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;图中红框表示的就是神经元，多个神经元以不同的方式进行连接，就会构成不同结构神经网络。神经元的连接方式是由人工设计的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.40479548660084624&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHG4EYLhtibolW4x5qExts15sdibAVU9wG5tZ4exxOicEQ6xwzx7qYZF0Zw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;709&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.1680129240710824&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHIsenS8QSU6ibEjQOHDpSfuukQyPozlywSZXfLboeh561eUiaCiawCBAfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1238&quot;/&gt;&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;每个&lt;strong&gt;输入&lt;/strong&gt;乘以其对应的&lt;strong&gt;权重&lt;/strong&gt;，将结果&lt;strong&gt;求和&lt;/strong&gt;，得到𝑍；&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;将和代入&lt;strong&gt;激活函数&lt;/strong&gt;，得到结果𝑦。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;全连接前馈神经网络&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;全连接&lt;/strong&gt;：每一个神经元的输出都连接到下一层神经元的每一个神经元，每一个神经元的输入都来自上一层的每一个神经元。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;前馈&lt;/strong&gt;：前馈（feedforward）也可以称为前向，从信号流向来理解就是输入信号进入网络后，信号流动是单向的，即信号从前一层流向后一层，一直到输出层，其中任意两层之间的连接并没有反馈（feedback），亦即信号没有从后一层又返回到前一层。&lt;/p&gt;&lt;section&gt;&lt;span&gt;如图所示，这是一个4层的全连接神经网络，每一层有两个神经元，每个神经元的激活函数都是sigmoid。&lt;/span&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.38024357239512857&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHYemY8Lu8zTlUtfkMmU91AR8AbBjOkNkaoOANGGsUic6mLGoSV4YIf8g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;739&quot;/&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;网络输入为(1, -1)，激活函数为sigmoid：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.40841865756541523&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHf0tRSMiaEujcMic9rVkfuibJVzxG9cL4bcsyJZhfAasDBh6NT0IZIObjg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;879&quot;/&gt;&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;网络输入为(0, 0)，激活函数为sigmoid：&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.40790960451977404&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHFOEo94Eic8nr5HAyAJ8WVHja0rSvRaldicvzAJpDnRPicRSKGGU0nGByw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;885&quot;/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;神经网络结构：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6245398773006134&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHxv3slH4OTG8kOY28wQBn8mXFGHhXicOMxgU2F6oUd6UY7MKJ0D5UR1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;815&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;Input Layer：网络的输入层，Layer的size和真实输入大小匹配。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;Hidden Layers：处于输入层和输出层之间的网络层。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;Output Layer：网络的最后一层，神经元计算产生的结果直接输出，作为模型的输出。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;一些疑问&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;为什么叫「&lt;span&gt;全连接&lt;/span&gt;」？&lt;/p&gt;&lt;p&gt;因为网络中相邻的两层神经元，前一层的每一个神经元和后一层的每一个神经元都有连接，所以叫做全连接；&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;为什么叫「前馈」？&lt;/p&gt;&lt;p&gt;因为值在网络中传递的方向是由前往后传（输入层传向输出层），所以叫做Feedforward。&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;p&gt;Deep Learning，“Deep”体现在哪里？&lt;/p&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7741935483870968&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazH34rOD71C1cgmiaWcAhXC1SW56u9sUiaxTPxGyPmia8fia9Q72EuLvZ8G4g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;930&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7762886597938145&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHwiapectqvpRRic1YA4KYb7rgBm8a6WvcHy1E19Exn04h6pxTVTLgDpbQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;970&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;神经网络的连接方式由人工设计，所以可以堆叠很多层神经元构成很“深”网络，如上图所示2015年提出的ResNet就达到了152层的深度。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;深度神经需要特殊的训练技巧&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;随着层数变多，网络参数增多，随之运算量增大，通常都是超过亿万级的计算。对于这样复杂的结构，我们一定不会一个一个的计算，对于亿万级的计算，使用loop循环效率很低。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;网络的运算过程如图所示：&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;432&quot; data-ratio=&quot;0.7300884955752213&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHEJdRTexuRQ8R1rtIicSO7dic9mMD7h91jQGnY8iaBc18WxKiaqraecl2Fg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;678&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上图中，网络的运算过程可看作是矩阵的运算。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;558&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;432&quot; data-ratio=&quot;0.7250712250712251&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHNP9KAOvHg2fGWKpVib6yBTt36qsls7RM0WsJLy1g6eIZ5NUKkOcHRRw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;702&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;网络的计算方法就像是嵌套，所以整个神经网络运算就相当于一连串的矩阵运算。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.12401883830455258&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHHOZwmZVKn0fvzDmcg7rRPDXnmClSeWEF0sFeYAkgvKyMS6gdZia4UVA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;637&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从结构上看每一层的计算都是一样的，也就是用计算机进行并行矩阵运算。这样写成矩阵运算的好处是，你可以使用GPU加速，GPU核心多，可以并行做大量的矩阵运算。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;神经网络的本质：通过隐藏层进行特征转换&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;隐藏层可以看作是对网络输入层输入特征进行特征处理，在最后一层隐藏层进行输出，这时的输出可以看作一组全新的特征，将其输出给输出层，输出层对这组全新的特征进行分类。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7149075081610446&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHBsyRBDt3H66yNuDJQlaTuQeEyOwibh2UocoalScDKVBL0Dh25wgWcfA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;919&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;举例：手写数字识别&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;举一个手写数字体识别的例子：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输入：一个16*16=256维的向量，每个pixel对应一个dimension，有颜色用（ink）用1表示，没有颜色（no ink）用0表示，将图片展平为一个256维的向量作为网络输入。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;输出：10个维度，每个维度代表一个数字的置信度（可理解为是该数字的概率有多大）&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5602988260405549&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHpAXrobV4IibFvnZTz2mYeDk2ibuhFkmHWwibIic1N6QuQbxrTibafJREibCQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;937&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从输出结果来看，每一个维度对应输出一个数字，代表模型输出为当前分类数字的概率。说明这张图片是2的可能性就是最大的。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5771889400921659&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazH6xBvjzsAzJU3uZiayegnvRNYRz32fgdEHBC9lOS7Zlh8Z3fH4AGdFcw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;868&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在这个问题中，唯一确定的就是，输入是256维的向量，输出是10维的向量，我们所需要找的函数就是输入和输出之间的神经网络这个函数。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5666003976143141&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHVzZuhNkxaibVibEvMVRnR5VjF7LEtlY9WXiaSIicQwNPXSa1qAXnKFmnVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1006&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从上图看神经网络的结构决定了函数集（function set），通常来讲函数集中的函数越多越复杂，网络的表达空间就越大，越能handle复杂的模式，所以说网络结构（network structured）很关键。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7407809110629068&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHAnoPZRGcHkJGgXqM0nH4xSLBZodWEvicv831Z0OVZzt86RJKoickLveQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;922&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接下来有几个问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;多少层？每层有多少神经元？这个问我们需要用尝试加上直觉的方法来进行调试。对于有些机器学习相关的问题，我们一般用特征工程来提取特征，但是对于深度学习，我们只需要设计神经网络模型来进行就可以了。对于语音识别和影像识别，深度学习是个好的方法，因为特征工程提取特征并不容易。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;结构可以自动确定吗？有很多设计方法可以让机器自动找到神经网络的结构的，比如进化人工神经网络（Evolutionary Artificial Neural Networks）但是这些方法并不是很普及 。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;我们可以设计网络结构吗？可以的，比如 CNN卷积神经网络（Convolutional Neural Network ）&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Step2：模型评估&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;损失示例&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7288629737609329&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazH8P9qrgnSyYYudBSMj3hqPeAfdAibSu941VjquEgubdwHm57ElESFwnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;686&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于模型的评估，我们一般采用损失函数来反应模型的优劣，所以对于神经网络来说，我们可以采用交叉熵（cross entropy）函数来对 𝑦 和 𝑦̂ 的损失进行计算，接下来我们就通过调整参数，让交叉熵越小越好。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;总体损失&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7492625368731564&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHTBYknO8Zxkb0FjAg1iblibphHX9yibdVp6vvGoU7vShibtsWJB2tDXDxnQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;678&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于损失，我们不单单要计算一笔数据的，而是要计算整体所有训练数据的损失，然后把所有的训练数据的损失都加起来，得到一个总体损失𝐿。接下来就是在functon set里面找到一组函数能最小化这个总体损失𝐿，或者是找一组神经网络的参数𝜃，来最小化总体损失𝐿。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;Step3：选择最优函数&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何找到最优的函数和最好的一组参数?&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;——使用梯度下降。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;具体流程：𝜃是一组包含权重和偏差的参数集合，随机找一个初始值，接下来计算一下每个参数对应的偏微分，得到的一个偏微分的集合∇𝐿就是梯度，有了这些偏微分，我们就可以更新梯度得到新的参数，这样不断反复进行，就能得到一组参数使得损失函数的值最小。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7172312223858616&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHYxJVKEr0qbmLBAQaia9nPiaB8DQOmiaHttAcDtZVRq1XrPrYbWNy7S0TQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;679&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.701280227596017&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHFWFmmHYZG530b7fzjbC9GiasLKwyBrAsuEeYeBPBWXMLlw6rxHU7NCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;703&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;反向传播&lt;/span&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;在神经网络训练中，我们需要将计算得到的损失向前传递，以计算各个神经元连接的权重对损失的影响大小，这里用到的方法就是反向传播。我们可以用很多框架来进行计算损失，比如说TensorFlow，Pytorch，theano等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7323529411764705&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazH5EE8iaS3VPa0CTRyLYCRNicwjyDG5edibTQg8hwKu3Xq40FZ8pLSIoAMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;680&quot;/&gt;&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;思考题&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;为什么要用深度学习，深层架构带来哪些好处？那是不是隐藏层越多越好？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;隐藏层越多越好？&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7351664254703328&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHAmXc0f5tGn8pKFRPsUlZ99h8yTIgfEA2icLWpMrTVWHSq8caOFgtwfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;691&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从图中展示的结果看，毫无疑问，理论上网络的层次越深效果越好，但现实中是这样吗？&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;普遍性定理&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.7303030303030303&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/vI9nYe94fsFNR5fVC7qnkqtAPeg2MiazHYgYQRK70w4Py6IYESyaicYuGnl1N5rMRibhvkLibSBTPyRVMibibe1rWNBQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;660&quot;/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;参数更多的模型拟合数据效果更好是很正常的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有一个通用的理论：对于任何一个连续的函数，都可以用足够多的神经元来表示。那为什么我们还需要深度(Deep)神经网络结构呢，是不是直接用一层包含很多神经元的网络(Fat)来表示就可以了？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;推荐人：王茂霖、丁一超&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7172914852fcea93e3ba1f2372fd38e3</guid>
<title>奇葩面试题，O(logn) 的底数是多少？</title>
<link>https://toutiao.io/k/wxvr8pu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;大家好，我是老三，最近裸辞了，在面试。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前两天一个面试，只面了十分钟就结束了——&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;事情是这样的：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：你能说说HashMap的数据结构吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老三：数组+链表+红黑树，阿巴阿巴……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：那你说说红黑树的查找复杂度是多少？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老三：O(logn)。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：那这个复杂度的底数是多少？&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.8958333333333334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWc9cxEPYXkFWlpg8VXqoB6gI9EGEYKfY8K10QQRX0OpEHcfQdgpcLerb7NbsdLrkHkjy5ibYJkTSmg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;240&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;靓仔疑问&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老三：时间复杂度O(logn)有底数？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：没有吗？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;尬住……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：那你再说一下快速排序的时间复杂度？底数是多少？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老三露出智（尴）慧（尬）的微笑……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;面试官：好了，我没什么要问的了，这次面试到这结束吧。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;1.1403508771929824&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWc9cxEPYXkFWlpg8VXqoB6gPTS2HNTx3KOamNqH4cY5bgeBV86EyVRxEnTDicThlxz8rnkM8KAlEDw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;228&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;这里塞&lt;/figcaption&gt;&lt;/figure&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;结束面试之后，老三意难平，赶紧查一下。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;O(logn)是有底数的！&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看一下时间复杂度的定义：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;❝&lt;/span&gt;&lt;p&gt;在进行算法分析时， 语句总的执行次数 T ( n ) 是关于问题规模 n 的 函 数 。进 而 分 析 T ( n ) 随 n 的变化情况并确定 T ( n ) 的 数 量级。算法的时间复杂度，也就是算法的时间量度， 记作：T ( n )= O(f(n))。它表示随问题规模 n 的增大， 算法执行时间的增长率和f ( n ) 的增长率相同， 称作算法的渐近时间复杂度， 简称为时间复杂度。其中 f ( n ) 是问题规模 n 的某个函数。&lt;/p&gt;&lt;span&gt;❞&lt;/span&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;有点抽象对不对，直接上例子，我们来意会一下。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;        &lt;span&gt;int&lt;/span&gt; n=&lt;span&gt;10&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;int&lt;/span&gt; count=&lt;span&gt;1&lt;/span&gt;;&lt;br/&gt;        &lt;span&gt;while&lt;/span&gt; (count&amp;lt;n){&lt;br/&gt;            count=count*&lt;span&gt;2&lt;/span&gt;;&lt;br/&gt;            &lt;span&gt;//时间复杂度为O(1)的运算&lt;/span&gt;&lt;br/&gt;            System.out.println(count);&lt;br/&gt;        }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看一下，这个运算，每次 count 乘以 2 之后， 就距离n更近了一分。也就是说：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.5532710280373832&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWc9cxEPYXkFWlpg8VXqoB6gMIg40CCVKleYv4NpA6XO7JGbRUKPQyiaibfOicwnzNHqoEgc8cY8RCmog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;535&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;时间复杂度&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;破案了，O(logn)确实是有底数的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个底数是由什么决定的呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;算法中log级别的时间复杂度都是由于使用了分治思想，这个底数直接由分治的复杂度决定。如果采用二分法,那么就会以2为底，，三分法就会以3为底数，其他类似。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;O(logn)底数意义不大！&lt;/span&gt;&lt;span/&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那问题来了，为什么我们平时不写底数呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总不能因为这个底数太难打吧……&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们注意到，时间复杂度的定义：T ( n )= O(f(n))。它表示随问题规模 n 的增大， 算法执行时间的增长率和f ( n ) 的增长率相同， 称作算法的&lt;strong&gt;「渐近时间复杂度」&lt;/strong&gt;，简称时间复杂度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;假如说我们要比较两个函数f(n)和g(n)的增长快慢，用什么办法呢？&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以使用微积分里的极限：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img data-ratio=&quot;0.46905537459283386&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWc9cxEPYXkFWlpg8VXqoB6gepvjDibFqEJdzDiaUeZpwwZBGpwgGkjQpiblx9etBDagmDOBiaRncFn70w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;614&quot;/&gt;&lt;figcaption&gt;&lt;span/&gt;增长快慢&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老三高数忘完了哈哈，不会推导，总之最后的结果是一个常数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;也就是，假如n非常大的时候，任意底数的一个对数函数都只是相差一个常数倍而已。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;所以无论底数是什么，log级别的渐进意义是一样的。也就是说该算法的时间复杂度的增长与处理数据多少的增长的关系是一样的。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;总之：&lt;strong&gt;「O（logn）已经可以表达所有底数的对数了」&lt;/strong&gt;。&lt;/p&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;花了一个小时，无用的知识又增加了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;简单总结，就是O(logn)有底数，但是没有纠结的必要。&lt;/p&gt;&lt;br data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;「参考：」&lt;/strong&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;[1]. [重学数据结构（序：概览）](https://fighter3.blog.csdn.net/article/details/107725490)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;[2]. [剑指Offer——算法复杂度中的O(logN)底数是多少](https://blog.csdn.net/sunhuaqiang1/article/details/52231502/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0.control&amp;amp;spm=1001.2101.3001.4242)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;[3]. [如何理解算法时间复杂度的表示法，例如 O(n²)、O(n)、O(1)、O(nlogn) 等？](https://www.zhihu.com/question/21387264)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwODE5ODM0Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/PMZOEonJxWeFt08hV3N1706WTzfhoTNoXm5LXRV0XibppmeNR4zSNMa3QOJJ7ib4O21P5yohibwuD26Tp9ETWZAqA/0?wx_fmt=png&quot; data-nickname=&quot;三分恶&quot; data-alias=&quot;Fighter3FullStack&quot; data-signature=&quot;一个全栈开发。分享Java后端、Web前端、计算机基础知识。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend-list&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247486580_1&quot; data-recommend-article-time=&quot;1625753837&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWeE5gzC3zlmXKQbOOoKBsIicjeEod89ZmNFwz5rEMUVEcTgQHoUKhpcNUPpd593ysvQmqPaBI5qsGg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;十二张图，踹开消息队列的大门&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247486580&amp;amp;idx=1&amp;amp;sn=7a2d29719bc6699f91acfcf0321d0da4&amp;amp;chksm=c0cce4d1f7bb6dc74722a4a0c58b89daf220d107d5c16129ea6145dc66272c08064c19dd99c6#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247486580&amp;amp;idx=1&amp;amp;sn=7a2d29719bc6699f91acfcf0321d0da4&amp;amp;chksm=c0cce4d1f7bb6dc74722a4a0c58b89daf220d107d5c16129ea6145dc66272c08064c19dd99c6&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.425&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWeE5gzC3zlmXKQbOOoKBsIicjeEod89ZmNFwz5rEMUVEcTgQHoUKhpcNUPpd593ysvQmqPaBI5qsGg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;十二张图，踹开消息队列的大门&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247486836_1&quot; data-recommend-article-time=&quot;1626365912&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWdkFHwTZ52CGtmPON2vpU1iagQj7zKJa4blSPkV6hCIGrrwMcqIHAINaohXl9GvKPYgXosuEzlu7EQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;刷算法，这些api不可不知！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247486836&amp;amp;idx=1&amp;amp;sn=b0a6b713fa3d1419cd55d7660a670ac7&amp;amp;chksm=c0cce5d1f7bb6cc7ab673e2b7cd627b6e19fd59faad5504aedbf971dda123a72e663f180c051#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247486836&amp;amp;idx=1&amp;amp;sn=b0a6b713fa3d1419cd55d7660a670ac7&amp;amp;chksm=c0cce5d1f7bb6cc7ab673e2b7cd627b6e19fd59faad5504aedbf971dda123a72e663f180c051&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.42578125&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWdkFHwTZ52CGtmPON2vpU1iagQj7zKJa4blSPkV6hCIGrrwMcqIHAINaohXl9GvKPYgXosuEzlu7EQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;刷算法，这些api不可不知！&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247486545_1&quot; data-recommend-article-time=&quot;1625283361&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWeJiaXVNcxfVCpacqoSWFgI4m37xs6szCn1j0dI08kGHkp7K25Dk5hoPuuR6C4LIbryOsneYuUawqQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;假如我是超级躺王&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247486545&amp;amp;idx=1&amp;amp;sn=c868afacfe125c85e0d2527052984d6d&amp;amp;chksm=c0cce4f4f7bb6de24f5ac8ba032c70b36cd26c00daf7ff0f87fb0cc3e3994c72b595a5a42038#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247486545&amp;amp;idx=1&amp;amp;sn=c868afacfe125c85e0d2527052984d6d&amp;amp;chksm=c0cce4f4f7bb6de24f5ac8ba032c70b36cd26c00daf7ff0f87fb0cc3e3994c72b595a5a42038&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.4253092293054234&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWeJiaXVNcxfVCpacqoSWFgI4m37xs6szCn1j0dI08kGHkp7K25Dk5hoPuuR6C4LIbryOsneYuUawqQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1051&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;假如我是超级躺王&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;section data-mpa-template=&quot;t&quot; data-from=&quot;yb-recommend&quot; data-recommend-article-type=&quot;normal&quot; data-recomment-template-id=&quot;1&quot; data-recommend-article-id=&quot;2247486176_1&quot; data-recommend-article-time=&quot;1621812600&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWcUdEsjLhrqT29X3Lb8QxkQaXZYeRFjwvXndAx7t28auwUakY0KBSQplPwWbv1sYBQLsIViclW8vIQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;“三次握手，四次挥手”这么讲，保证你忘不了&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247486176&amp;amp;idx=1&amp;amp;sn=46cba7da4639e24f56a401f1fc3b7300&amp;amp;chksm=c0cce245f7bb6b53d8d6bcb7c58c4d49acd933c70f97272fae078066664bceecc88642a19a76#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwODE5ODM0Ng==&amp;amp;mid=2247486176&amp;amp;idx=1&amp;amp;sn=46cba7da4639e24f56a401f1fc3b7300&amp;amp;chksm=c0cce245f7bb6b53d8d6bcb7c58c4d49acd933c70f97272fae078066664bceecc88642a19a76&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;1&quot;&gt;&lt;section data-recommend-type=&quot;normal&quot; data-recommend-tid=&quot;1&quot; data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;span class=&quot;js_jump_icon h5_image_link&quot; data-positionback=&quot;static&quot;&gt;&lt;img data-ratio=&quot;0.425&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/PMZOEonJxWcUdEsjLhrqT29X3Lb8QxkQaXZYeRFjwvXndAx7t28auwUakY0KBSQplPwWbv1sYBQLsIViclW8vIQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-recommend-title=&quot;t&quot; data-mid=&quot;&quot;&gt;“三次握手，四次挥手”这么讲，保证你忘不了&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_reward_qrcode&quot;&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;Long-press QR code to transfer me a reward&lt;/p&gt;
                                                                &lt;p class=&quot;reward_tips&quot;&gt;听说一键三连等于学会哦！&lt;/p&gt;
                                &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; id=&quot;js_reward_qrcode_img&quot;/&gt;&lt;/span&gt;
                                &lt;p class=&quot;tips_global&quot;&gt;As required by Apple&#x27;s new policy, the Reward feature has been disabled on Weixin for iOS. You can still reward an Official Account by transferring money via QR code.&lt;/p&gt;
                            &lt;/div&gt;
                                                                            
                              
            &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>