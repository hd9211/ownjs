<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>4a225e2d07d887526ac95e9ada8924b5</guid>
<title>面试过 200 人的经验，都在这里了 | 码农周刊第 325 期</title>
<link>https://toutiao.io/k/xvysg5s</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;body class=&quot;issue&quot; id=&quot;readabilityBody&quot;&gt;
        &lt;h1&gt;面试过 200 人的经验，都在这里了 | 码农周刊第 325 期&lt;/h1&gt;
        &lt;h2&gt;码农周刊第325期（2020-11-25）&lt;/h2&gt;
        &lt;p&gt;☞ &lt;a href=&quot;https://weekly.manong.io/bounce?nid=325&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3250&quot; target=&quot;_blank&quot;&gt;薪资翻番如何实现？程序员的涨薪秘诀&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;a href=&quot;https://weekly.manong.io/bounce?nid=325&amp;amp;aid=19568&amp;amp;url=https%3A%2F%2Fvip.manong.io%2F%3F3250&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_321.png&quot; alt=&quot;&quot;/&gt;&lt;/a&gt;&lt;br/&gt;&amp;#13;
&lt;small&gt;&lt;a href=&quot;https://weekly.manong.io/bounce?nid=325&amp;amp;aid=19185&amp;amp;url=https%3A%2F%2Fjinshuju.net%2Ff%2FV7DxN9&quot; target=&quot;_blank&quot;&gt;商务合作&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
        
        &lt;h3 id=&quot;程序设计&quot;&gt;程序设计&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;业界实战&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;VIP会员专区&quot;&gt;VIP会员专区&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;工作地点：成都 | 薪资：15-30K | 简历投递邮箱：xiexiaofang@huobi.com&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;相比 cocos2d 引擎有着更低的入门门槛和维护成本，为复杂动画的实现提供了一种全新的方式，新的复杂动画开发将会变得更加简单高效。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;让您享受极简编程体验，快速访问支付宝开放平台开放的各项核心能力。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;一个不错的 Python 学习教程，30 天循序渐进地教你学会 Python。&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;白皮书从技术、市场、趋势、挑战等多维度，对我国开源产业生态进行了全面、深度的剖析，指出了我国开源产业发展的几大重要趋势。&lt;/p&gt;
        &lt;h3 id=&quot;工具资料&quot;&gt;工具资料&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;试试吧&lt;/p&gt;
        
        &lt;p&gt;经验总结&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;简明介绍&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;一步步教你&lt;/p&gt;
        
        &lt;p&gt;结合代码&lt;/p&gt;
        
        &lt;p&gt;供参考&amp;#13;
&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;图文并茂&lt;/p&gt;
        
        &lt;p&gt;收藏吧&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;实用&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;使用方便&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;h3 id=&quot;编程语言&quot;&gt;编程语言&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;「码农周刊 VIP 会员专属邮件周报」每周五发送，自订购之日算起，全年 52 期。&lt;/p&gt;
        
        &lt;p&gt;一步步教你&lt;/p&gt;
        
        &lt;p&gt;代码示例&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;良心教程&lt;/p&gt;
        
        &lt;p&gt;结合代码&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;你怎么看？&lt;/p&gt;
        
        &lt;p&gt;深入研究&lt;/p&gt;
        
        &lt;p&gt;详解&lt;/p&gt;
        
        &lt;p&gt;详细介绍&lt;/p&gt;
        
        &lt;p&gt;供参考&lt;/p&gt;
        &lt;h3 id=&quot;每周独家号推荐&quot;&gt;每周独家号推荐&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;技术总结，经验分享&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 451179 即可&lt;/p&gt;
        
        &lt;p&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 429587 即可&lt;/p&gt;
        
        &lt;p&gt;分享计算机视觉与机器学习技术的最前沿&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 359575 即可&lt;/p&gt;
        
        &lt;p&gt;聚焦基础架构和Linux。十年架构，日百亿流量，与你探讨高并发世界，给你不一样的味道。&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 351247 即可&lt;/p&gt;
        
        &lt;p&gt;学习就是不停的积累&lt;br/&gt;订阅方法：使用&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;，发现 &amp;gt; 搜索 24912 即可&lt;/p&gt;
        &lt;h3 id=&quot;每周一书&quot;&gt;每周一书&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;本手册以开发工程师为中心视角，划分为单元测试、安全规约、MySQL 数据库、工程结构等七个维度，相应的扩展解释和说明、正例和反例，全面、立体、形象地帮助开发工程师成长。欢迎到&lt;a href=&quot;http://toutiao.io/download?ref=v4.1.0&quot; target=&quot;_blank&quot;&gt;开发者头条客户端&lt;/a&gt;兑换阅读。&lt;/p&gt;
        &lt;h3 id=&quot;编程之外&quot;&gt;编程之外&lt;/h3&gt;
        &lt;p/&gt;
        
        &lt;p&gt;经验分享&lt;/p&gt;
        
        &lt;p&gt;个人经历&lt;/p&gt;
        
        &lt;p&gt;一直被追赶，从未被超越&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://img.toutiao.io/ads/vip_3041.jpeg&quot; alt=&quot;&quot;/&gt;&lt;/p&gt;
        &lt;p&gt;
        &lt;/p&gt;
        
        
        
        
        &lt;div class=&quot;qrcode&quot;&gt;
  &lt;img src=&quot;https://img.toutiao.io/ads/vip_qrcode.png&quot; alt=&quot;Qrcode 258&quot;/&gt;&lt;span&gt;加入码农周刊VIP会员&lt;/span&gt;
&lt;/div&gt;
    &lt;/body&gt;
&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>05d1af08b5435231afdba54caa67b5f7</guid>
<title>vivo 商城前端架构升级：多端统一探索、实践与展望篇</title>
<link>https://toutiao.io/k/b6bcaiu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;一、引言&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;本文将会从整体上介绍 vivo 商城在前端维度的多端统一探索和实践。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;从多端价值、为什么要做多端统一、如何满足多端业务需求、实践与创新，简洁直白的阐述我们在多端统一上所做的一切。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;二、多端探索为vivo商城带来了哪些价值&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;多端的价值可以从技术架构升级和人力资源释放两个方面体现。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1、技术架构全面升级&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;从&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.15625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5zl1vPY7a6F1yGibp1wljJicRTpItIic1cXQNU2oWoyMPt1Juk98Vxjuxw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;到&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5icKoibCicWiaXzIaJY09PhqzDUYVgbUO0VwhBrthPV5eaHtmGFicxMElcsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们实现了技术架构方案的统一。通过统一，极大的降低了开发成本、维护成本。同时具备高复用、高效率。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;2、释放大量人力资源&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;技术架构方案的统一，对业务的横向扩张提供了强大的技术支持和可实现保障。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;下图是使用新的技术架构后的开发人力投入比。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.54609375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5u8jZSkmqDej4vOB0yBT4nOibjcC2ibPpyraxPjn8aornnubjwK3b6QLw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;从上图可以看出，通过技术架构的升级，释放了可观的开发资源。让释放的开发资源去做更多有价值的事情。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;三、我们为什么要做多端统一&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;大家可能会有疑问，那就是多端统一是什么？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;这里我先卖个关子，先不谈统一，我们来说说多端一词。多端是什么呢？想必大家都能说个八九不离十。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;关于多端，我画了个图，如下所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.3171875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5JUWIghDIZtoCaHIJl1WD7Tp1nNqB6CObaOzuD4j9lJ43iawHvriceRHg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;从上图可以看到，线下、pc、wap、APP、微信公众号、微信小程序等，每一个都可以称为一个端。知道了多端的含义，现在，我们再回头看多端统一。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;完整的多端统一，要包含以下几个方面的统一&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;大前端【前端+客户端】的多端统一&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;服务端的多端统一&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;业务的多端统一&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;这里，我们只讨论前端的多端统一。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;从 &lt;span&gt;PC&lt;/span&gt; 浏览器，到移动端浏览器、到 &lt;span&gt;APP&lt;/span&gt; 内嵌，再到各个小程序，再到服务端、客户端。繁荣的生态，犹如百家争鸣，百花齐放。然而，繁荣的背后，对前端工程师的挑战，则与日俱增。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们承接的端越来越多，新的端不断的出现，如小程序、快应用等。前端工程师陷入了如下套娃陷阱：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;现有代码、新代码要适配新的端开发场景&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;已经适配新的端开发场景的代码成为了现有代码&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;现有代码、新代码要适配新的端开发场景&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;循环...&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;我们希望解决这种问题，希望做到一套技术架构方案【代码】，可以覆盖现在的端和未来的端。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;通俗点说，我们希望做到如下图所示的能力：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.2984375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5zYAyTe57icVJMpZIFXL4rjicgZiaNReVEqMbSRYicvWGrzWCRicku7kT2hw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在这种前端开发背景下，多端统一出现了。它是前端的一个未来趋势，它也是解决上面套娃陷阱的一剂良药。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;四、如何满足日益增加的多端业务需求&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;随着时间的推移，各小程序端业务被逐渐重视起来，尤其是 &lt;span&gt;vivo&lt;/span&gt; 商城微信小程序。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;业务方的述求有两点，如下所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;第一点：让现有 &lt;span&gt;vivo&lt;/span&gt; 商城微信小程序的核心功能和商城 &lt;span&gt;H5&lt;/span&gt; 功能保持一致。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;第二点：后续版本迭代，小程序端和 &lt;span&gt;H5&lt;/span&gt; 端同步进行。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;而现实是：&lt;strong&gt;现有的商城微信小程序，其版本迭代已经较大的落后商城 &lt;/strong&gt;&lt;span&gt;&lt;strong&gt;H5&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt; 版本了&lt;/strong&gt;。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们用新老版本的小程序购买流程视频做对比，让大家有个较为直观的感受。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;老版商城小程序：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p/&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;新版商城小程序：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p/&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;从上面两个视频可以看出两者的差异，我们面临的挑战很大。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;根据业务方的述求，我们需要做的事情在解决上面两点的情况下，增加一点，共有三点，如下所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;第一点：&lt;/strong&gt;在最短的时间内，将商城 &lt;span&gt;H5&lt;/span&gt; 的基本功能和流程在微信小程序上实现出来&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;第二点：&lt;/strong&gt;在后续小程序端和 &lt;span&gt;H5&lt;/span&gt; 端版本功能同步迭代时，做到高复用，高效率。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;第三点：&lt;/strong&gt;提前考虑未来其他端业务场景的落地，做好扩展性、多端复用性。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在业务驱动下，我们进行了技术调研、&lt;span&gt;demo&lt;/span&gt; 验证、&lt;span&gt;mvp&lt;/span&gt; 验证。最终在综合考虑下，采用了 &lt;span&gt;uni-app&lt;/span&gt; 多端架构来解决上面两个难点。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;这里提一下，业务驱动的良好模式，大概如下图所示：&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;通过业务来推动技术的优化和改变，在反复应用的过程中，实时反馈改进，最后回报给业务。在这个过程中，技术和业务形成了良性闭环。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;NOW. 剩下的事情，就是落地实践了。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;五、我们的多端做了哪些实践和创新&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;有句名言是这样说的：&lt;strong&gt;实践是检验真理的唯一标准&lt;/strong&gt;。诚然，成功者的背后，有你看不见的努力和坚持。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;1、实践&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;在实践过程中，要考虑的因素很多，列举如下：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;现有小程序的原生代码如何转成多端项目写法，保证转换代码可读、可控。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;现有小程序的部分功能逻辑需要完整保留，甚至是小程序原生 &lt;span&gt;api&lt;/span&gt; 和逻辑，这些和多端项目如何共存。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如何将 &lt;span&gt;H5&lt;/span&gt; 的代码逻辑最大程度的复用到多端项目中。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;如何优雅将 &lt;span&gt;H5&lt;/span&gt; 的各种组件、设计模式、工程化、工具方法适配到多端项目中。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;等等...&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;那么我们是如何处理这些因素的呢？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们可以用一张图整体概括下，如下图所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.60703125&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5gAZtSuye2TtG3grOPVxwpgzA56RLxDbTXAibNJvqVOx87Cg7KKLibKlw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;下面就介绍下我们是如何处理这些因素的。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;2、代码转换&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;现有小程序的原生代码如何转成多端项目写法，保证转换代码可读、可控？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们使用的是开源转换器 &lt;span&gt;miniprogram-to-uniapp&lt;/span&gt; 来做的转换，然后再通过人工，去解决转换过程中不匹配的问题。解决方案就是这么朴实无华，也许大家觉得方案很简单，但是选择这个解决方案的背后，我们做了详细的评估，包括和该开源转换器的作者进行了微信交流。在和作者沟通交流的过程中，我们知道了该转换器的过去、现在和未来，在当时的情况下，这是一个合适且正确的解决方案。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;3、代码共存&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;现有小程序的部分功能逻辑需要完整保留，甚至是小程序原生 &lt;span&gt;api&lt;/span&gt; 和逻辑，这些和多端项目如何共存？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们通过对项目进行合理的目录划分，来达到天然的隔离，如下图所示：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;2.305389221556886&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5xetMgudTY2tbsXHwRGbWOqXf8WOGFibACuXYR9VF0INpAWwwkgoic0Hw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;334&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们把一些现在还不能适配多端的代码，统一放到 &lt;span&gt;platforms&lt;/span&gt; 目录下。同时，我们会使用条件编译来将现在还不能转换成多端的平台隔离开。如下图所示：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5XDcnc0zicCBFLXps5t4m8gBCUWv146icUwU8ibCicAFphia9ukIuKbsibU3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;4、复用和适配 h5&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;复用讲究的是一个懒字，能直接复用的就果断复用，不要做二次调整，保证和 &lt;span&gt;H5&lt;/span&gt; 高度一致。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;适配讲究的是一个以不变应万变，我们不需要改动 &lt;span&gt;H5&lt;/span&gt; 的代码，我们只需要为他们做一个适配层，如适配 &lt;span&gt;H5&lt;/span&gt; 路由，一些不兼容的组件，甚至说适配 &lt;span&gt;window.location&lt;/span&gt; 都可以。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;从上面介绍的解决方案中，我们可以体会到，处理这些因素的核心秘诀就是下面两句话：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;第一句：&lt;strong&gt;因地制宜，找到平衡。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;第二句：&lt;strong&gt;提高复用，降低改动。&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;5、创新&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;有句话是这样说的：&lt;strong&gt;平凡中孕育着伟大&lt;/strong&gt;。放在这里，我们换个说法，那就是 &lt;strong&gt;实&lt;/strong&gt;&lt;strong&gt;践中孕育着创新&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;在实践的过程中，我们解决了很多问题。在解决问题的过程中，我们做出了一些令人高兴的创新。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;这个创新来源于一个问题，这个问题的背景如下：&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;商城&lt;span&gt; H5&lt;/span&gt; 商品详情页用  vuex 管理数据，在将&lt;span&gt; vuex&lt;/span&gt; 移到小程序商品详情页中时，发现一个现象，如下动图所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.639344262295082&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5gufqxlpA2vsiauufxFQCwLicseEqNiazdp9Ow8EOcc1wEvIAQEju8608w/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;305&quot;/&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;从上面动图中，我们发现，在使用 &lt;span&gt;vuex&lt;/span&gt; 时 ，我们从 &lt;span&gt;A&lt;/span&gt; 商品的详情页中点击 &lt;span&gt;B&lt;/span&gt; 商品，进入 &lt;span&gt;B&lt;/span&gt; 商品详情页。这时，我们点击左上角返回 A 商品详情页，会发现，此时商品详情页已经变成 &lt;span&gt;B&lt;/span&gt; 商品，也就是说，&lt;span&gt;A&lt;/span&gt; 商品的数据已经没了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这是一个非常大的问题，经过排查，发现原因如下：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;vuex&lt;/span&gt; 的 &lt;span&gt;namespace&lt;/span&gt; 默认是一个，无法自动新增 &lt;span&gt;namespace &lt;/span&gt;。当在小程序页面里面使用 &lt;span&gt;vuex &lt;/span&gt;进行数据管理时，由于小程序页面数据机制，在点击返回时，页面数据使用的是同一个 &lt;span&gt;vuex&lt;/span&gt; 的数据，从而导致了上面出现的现象。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;这里，有人可能要说，在 &lt;span&gt;onShow&lt;/span&gt; 生命周期里面，刷新数据，不就解决了吗。其实不然，在这种场景下，进行数据刷新是非常不合理的。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;那么该如何解决呢？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们知道，小程序页面数据在使用 vuex 后，多次进入同一个页面后，返回会有展示问题。随后，组内进行了讨论，综合权衡后，确定继续用 vuex ，通过给 vuex 加一个适配层来解决这个问题。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;随后，组内进行了讨论，综合权衡后，确定继续用 &lt;span&gt;vuex&lt;/span&gt; 。通过给 &lt;span&gt;vuex&lt;/span&gt; 加一个适配层来解决这个问题。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;首先我们看下，在给 &lt;span&gt;vuex&lt;/span&gt; 加一个适配层后，进行上面的操作，会是什么现象。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;如下动图所示：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;1.7857142857142858&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5n2Q09bHkCk6tyMguTYZF5UpE6otOgCI90QeibrbG0DgQuxYINuOsbxw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;从上面的动图，我们可以发现，在给 &lt;span&gt;vuex &lt;/span&gt;加了一个适配层后。成功的解决了小程序页面数据在使用&lt;span&gt; vuex&lt;/span&gt; 后，多次进入同一个页面后，点击返回时，出现的展示问题。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们是如何解决这个问题的呢？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;核心方案：&lt;strong&gt;通过让 vuex 支持自动扩展、自动注销 namespace，来做到更加智能化的数据流管理方案&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;核心架构图如下所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.44140625&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5KRHs6MIHiaXFvRYHaTaz81ChjCT3Kug3SN1gRibXGxtwMhNOSSgJGB5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;通过在 &lt;span&gt;store&lt;/span&gt; 中自动生成 &lt;span&gt;namespace&lt;/span&gt;，保证了同一个页面进入多次后，每个页面数据都是保留的。当页面返回时，通过动态收集父组件的 &lt;span&gt;namespace&lt;/span&gt; ，完成了父子组件的 &lt;span&gt;namespace&lt;/span&gt; 关联。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;通过上面的技术方案，我们解决了 &lt;span&gt;vuex&lt;/span&gt; 在小程序里面使用时，存在的问题。这里，核心架构方案已经给出，具体实现，就不再细述了。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;strong&gt;7、解耦创新&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;这个创新来源于一个问题，这个问题的背景如下：&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们现在有普通、 秒杀 、 拼团 商品详情页，后面还会有其他商品详情页，那么我们如何复用这些详情页里面的业务组件呢？&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;面对上面的问题，大家会有以下思考：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;不同页面，业务组件内的数据处理是有差别的&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不同页面，业务组件内的埋点是不一样的&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不同页面，业务组件内可能存在特定的接口请求&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;上面的这些思考，大家看过应该是有感触的，复用业务组件本身就是一件很困难的事情，如果想彻底的解耦更是难上加难。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;那么，我们是如何做到尽可能解耦的呢？&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们做了以下几点：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;在上游保证埋点统一，通过设计组件层面的埋点来达到埋点统一。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;在组件层面，对特定接口，进行条件判断。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;将业务组件的数据分解成源数据和派生数据，源数据在 &lt;span&gt;vuex&lt;/span&gt; 层面保证一致，派生数据在业务组件内根据实际情况进行相应的适配。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;对 &lt;span&gt;vuex&lt;/span&gt; 进行改造，让业务组件和页面的通信彻底解耦，业务组件不再需要知道页面的 &lt;span&gt;vuex&lt;/span&gt; 命名空间。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;开发过商城项目的同学应该都清楚已选弹层的逻辑是很复杂的，这里就拿 &lt;span&gt;已选弹层&lt;/span&gt; 业务组件做例子来说下我们是如何去做业务组件复用的。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;下面是目前已经复用的已选弹层组件的组成：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;├── &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;components&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│   ├── &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;sku-number&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│   ├── &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;sku-product&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│   ├── &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;sku-service&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│   ├── &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;sku-spec&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;│   └── ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;├── &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.js&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;├── &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.scss&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;├── &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.vue&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;├── &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;mutation-types&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.js&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;└── &lt;span class=&quot;code-snippet__selector-tag&quot;&gt;track&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.js&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们将已选弹层组件的数据分为源数据和派生数据，源数据通过 &lt;span&gt;vuex&lt;/span&gt; 层面去统一，如下图所示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages js_insertlocalimg&quot; data-ratio=&quot;0.5117493472584856&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt6V3ftVsouZxTGttr3mmNI5HSx4yClKiaS2YopkWko19icGxHe68wns8yeiaVLxb4O0oJg0W2MyibEqvA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;766&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;我们为每个详情页写一个 &lt;span&gt;vuex&lt;/span&gt; ，同时将相同的部分抽离到 &lt;span&gt;common-detail&lt;/span&gt; 中。之后，我们在 &lt;span&gt;vuex&lt;/span&gt; 中进行处理，保证不同页面给出的源数据是相同的。这些源数据是要传到业务组件中的。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;如下代码所示：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;import&lt;/span&gt; { mapState, mapGetters, mapMutations, mapActions } &lt;span class=&quot;code-snippet__keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;@vivo/smartx&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;computed: {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ...mapState([&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;spuInfo&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;skuInfo&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ]),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ...mapGetters([&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;price&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;pageType&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ]),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;methods: {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  fn() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;通过上面的处理，就可以将类似的业务组件很好的从不同页面中解耦出来，从而提高代码的复用性、可维护性以及可扩展性。&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;这种解耦业务组件的思想就在于：&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;不必刻意将数据与视图彻底分离，通过源数据和派生数据,平衡好变和不变的数据，再通过自研的 &lt;span&gt;@vivo/smartx&lt;/span&gt; 将变到不变变成孤岛，将不变到变变成孤岛。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;每一次创新，都是一次考验，它总是不经意间给你出难点，然后逼迫你，去突破自己，从而创造出更好的东西，循环往复。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;最后，多端架构的 vivo 官方商城微信小程序已经上线了。大家可以点击&lt;a class=&quot;weapp_text_link js_weapp_entry&quot; data-miniprogram-appid=&quot;wxe1f948b9ea887b35&quot; data-miniprogram-path=&quot;pages/shop/index/index&quot; data-miniprogram-nickname=&quot;vivo官方商城&quot; href=&quot;&quot; data-miniprogram-type=&quot;text&quot; data-miniprogram-servicetype=&quot;&quot;&gt;vivo官方商城&lt;/a&gt;&lt;span&gt;体验一下哦。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;六、总结&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;本文我们一起回顾了， vivo 商城微信小程序的多端统一之路。从业务需要，存在价值，到技术实践与创新，我们希望用技术让多端之路能够更加平坦。&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2549b08c5dd856cd3898d8de67e90397</guid>
<title>大数据基础：Spark 工作原理及基础概念</title>
<link>https://toutiao.io/k/r2bbmjz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;profile_inner&quot;&gt;
                              &lt;strong class=&quot;profile_nickname&quot;&gt;云加社区&lt;/strong&gt;
                              &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;/&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;Weixin ID&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;QcloudCommunity&lt;/span&gt;
                              &lt;/p&gt;

                              &lt;p class=&quot;profile_meta&quot;&gt;
                              &lt;label class=&quot;profile_meta_label&quot;&gt;About Feature&lt;/label&gt;
                              &lt;span class=&quot;profile_meta_value&quot;&gt;腾讯云官方社区公众号，汇聚技术开发者群体，分享技术干货，打造技术影响力交流社区。&lt;/span&gt;
                              &lt;/p&gt;
                              
                          &lt;/div&gt;
                          &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>d30a4c0d1081d65c8af13ae265e0da18</guid>
<title>隐秘的 MySQL 类型转换</title>
<link>https://toutiao.io/k/27nwbyu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;1&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;2&quot;&gt;近期工作中同事遇到的一个真实问题，稍作整理后分享给大家~&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id-heading0=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;3&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;4&quot;&gt;1、问题开篇&lt;/span&gt;&lt;/h2&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;5&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;6&quot;&gt;一张用户表 `users` ，其中字段 `phone` 添加了普通索引。&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;users&lt;/span&gt; (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;code-snippet__number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;code-snippet__keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT &lt;span class=&quot;code-snippet__keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;主键ID&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;code-snippet__number&quot;&gt;32&lt;/span&gt;) &lt;span class=&quot;code-snippet__keyword&quot;&gt;COLLATE&lt;/span&gt; utf8mb4_unicode_ci &lt;span class=&quot;code-snippet__keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;&#x27;&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;名称&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  phone &lt;span class=&quot;code-snippet__built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;code-snippet__number&quot;&gt;16&lt;/span&gt;) &lt;span class=&quot;code-snippet__keyword&quot;&gt;COLLATE&lt;/span&gt; utf8mb4_unicode_ci &lt;span class=&quot;code-snippet__keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;&#x27;&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;手机&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  created_at &lt;span class=&quot;code-snippet__built_in&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;1970-01-01 16:00:00&#x27;&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;创建时间&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  updated_at &lt;span class=&quot;code-snippet__built_in&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;更新时间&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  PRIMARY &lt;span class=&quot;code-snippet__keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;id&lt;/span&gt;),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;KEY&lt;/span&gt; idx_phone (phone)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;) &lt;span class=&quot;code-snippet__keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;code-snippet__keyword&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8mb4 &lt;span class=&quot;code-snippet__keyword&quot;&gt;COLLATE&lt;/span&gt;=utf8mb4_unicode_ci &lt;span class=&quot;code-snippet__keyword&quot;&gt;COMMENT&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;用户表&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;5&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;6&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;141&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;142&quot;&gt;分别执行以下SQL：&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;143&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;144&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;144:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;1）字符串类型查询&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;EXPLAIN&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;WHERE&lt;/span&gt; phone = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;2&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;143&quot;&gt;执行计划如下：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.07163323782234957&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQuBe056fYG5xGrIRe47afIaVwBRibjxUVDPqBmcZr63PbAEAXGlB4ZqM1V0t28A5M1dRpqRsSQzMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;698&quot;/&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;162&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;163&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;163:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;2）数值型查询&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;EXPLAIN&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;WHERE&lt;/span&gt; phone = &lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;162&quot;&gt;执行计划如下：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.07152875175315568&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQuBe056fYG5xGrIRe47afIsEjfZIwjmnZcKAdPsALZiaQISOibYvphgUvhpGMtFTKVp30zWBRsVDiaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;713&quot;/&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;181&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;182&quot;&gt;﻿&lt;/span&gt;&lt;strong&gt;发现问题：&lt;/strong&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;185&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;186&quot;&gt;当索引字段 `&lt;/span&gt;&lt;code data-slate-type=&quot;pm_inlinecode&quot; data-slate-object=&quot;inline&quot; data-key=&quot;187&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;188&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;188:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;span data-slate-string=&quot;true&quot;&gt;phone&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;189&quot;&gt;` 为字符串类型时，字符串查询时候使用了索引`&lt;/span&gt;&lt;code data-slate-type=&quot;pm_inlinecode&quot; data-slate-object=&quot;inline&quot; data-key=&quot;190&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;191&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;191:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;span data-slate-string=&quot;true&quot;&gt;idx_phone&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;192&quot;&gt;`，而数值类型查询时候竟无法使用索引`&lt;/span&gt;&lt;code data-slate-type=&quot;pm_inlinecode&quot; data-slate-object=&quot;inline&quot; data-key=&quot;193&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;194&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;194:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;span data-slate-string=&quot;true&quot;&gt;idx_phone&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;195&quot;&gt;`。&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id-heading1=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;196&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;197&quot;&gt;2、问题引申&lt;/span&gt;&lt;/h2&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;198&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;199&quot;&gt;假如索引字段为整型的话，那用字符串查询时会不会走索引呢？&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;200&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;201&quot;&gt;实践出真知，我们来验证一下。&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;202&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;203&quot;&gt;同样如上表，修改字段 `phone` 类型由 varchar 变更为 bigint：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;MODIFY&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;COLUMN&lt;/span&gt; phone &lt;span class=&quot;code-snippet__built_in&quot;&gt;bigint&lt;/span&gt;(&lt;span class=&quot;code-snippet__number&quot;&gt;16&lt;/span&gt;) &lt;span class=&quot;code-snippet__keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;手机&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;202&quot;&gt;﻿&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;230&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;231&quot;&gt;然后，分别执行以下SQL：&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;232&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;233&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;233:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;1）字符串类型查询&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;EXPLAIN&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;WHERE&lt;/span&gt; phone = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;2&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;232&quot;&gt;执行计划如下：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.07471264367816093&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQuBe056fYG5xGrIRe47afInOCzibGjv6sGQavSf7djHFTDPvRs5XglIHfYgMlBtD1BgT2fe5Csh3w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;696&quot;/&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;251&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;252&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;252:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;2）数值型查询&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;EXPLAIN&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;WHERE&lt;/span&gt; phone = &lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;251&quot;&gt;执行计划如下：&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.06369426751592357&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQuBe056fYG5xGrIRe47afIdHTD0BeHyiafGmudCiaUpZqIbueAictNlicia7YA23DHNd9yYDGdSFTW4ZA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;785&quot;/&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;270&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;271&quot;&gt;﻿&lt;/span&gt;执行后发现，无论是以字符串查询还是以数值型查询都会用到索引。&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;274&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;275&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;275:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;小结：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id-heading2=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;283&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;284&quot;&gt;3、跟进探究&lt;/span&gt;&lt;/h2&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;285&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;286&quot;&gt;为什么会是这样呢？其根源就是MySQL的&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;287&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;287:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;隐式类型转换&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;288&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading3=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;289&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;290&quot;&gt;3.1 什么是隐式类型转换？&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;291&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;292&quot;&gt;在MySQL中，当操作符与不同类型的操作数一起使用时，会发生类型转换以使操作数兼容，则会发生隐式类型转换。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-slate-type=&quot;pm_blockquote&quot; data-slate-object=&quot;block&quot; data-key=&quot;293&quot;&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;294&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;295&quot;&gt;即 MySQL会根据需要自动将数字转换为字符串，或者将字符串转换为数字。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;296&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;297&quot;&gt;﻿&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;mysql&amp;gt;&lt;/span&gt; SELECT 1+&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;1&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;-&amp;gt;&lt;/span&gt; 2&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;mysql&amp;gt;&lt;/span&gt; SELECT CONCAT(2,&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27; test&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;2 test&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;296&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;很明显，上面的SQL语句的执行过程中就出现了隐式转化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;309&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;310&quot;&gt;从结果我们可以判定，SQL1中将字符串的“1”转换为数字1，而在SQL2 中，将数字2转换为字符串“2”。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading4=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;311&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;312&quot;&gt;3.2 如何避免隐式类型转换？&lt;/span&gt;&lt;/h3&gt;&lt;h4 data-id-heading5=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;313&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;314&quot;&gt;3.2.1 清楚转换规则&lt;/span&gt;&lt;/h4&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;315&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;316&quot;&gt;只有当清楚的知道隐式类型转换的规则，才能从根本上避免产生隐式类型转换。&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;317&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;318&quot;&gt;﻿&lt;/span&gt;参考MySQL文档相关描述，确定隐式类型转换规则：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;、两个参数至少有一个是 NULL 时，比较的结果也是 NULL，例外是使用 &amp;lt;=&amp;gt; 对两个 NULL 做比较时会返回 &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;，这两种情况都不需要做类型转换&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;、两个参数都是字符串，会按照字符串来比较，不做类型转换&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;3&lt;/span&gt;、两个参数都是整数，按照整数来比较，不做类型转换&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;4&lt;/span&gt;、十六进制的值和非数字做比较时，会被当做二进制串&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;5&lt;/span&gt;、有一个参数是 TIMESTAMP 或 DATETIME，并且另外一个参数是常量，常量会被转换为 timestamp&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;6&lt;/span&gt;、有一个参数是 &lt;span class=&quot;code-snippet__keyword&quot;&gt;decimal&lt;/span&gt; 类型，如果另外一个参数是 &lt;span class=&quot;code-snippet__keyword&quot;&gt;decimal&lt;/span&gt; 或者整数，会将整数转换为 &lt;span class=&quot;code-snippet__keyword&quot;&gt;decimal&lt;/span&gt; 后进行比较，如果另外一个参数是浮点数，则会把 &lt;span class=&quot;code-snippet__keyword&quot;&gt;decimal&lt;/span&gt; 转换为浮点数进行比较&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;7&lt;/span&gt;、所有其他情况下，两个参数都会被转换为浮点数再进行比较&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;336&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;337&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;338&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;339&quot;&gt;验证示例：&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mysql&amp;gt; SELECT &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;aa&#x27;&lt;/span&gt; + &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;-&amp;gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;1&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mysql&amp;gt; show warnings;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+---------+------+----------------------------------------+&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| Level   |&lt;/span&gt; Code &lt;span class=&quot;code-snippet__params&quot;&gt;| Message                                |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+---------+------+----------------------------------------+&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;| Warning |&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1292&lt;/span&gt; &lt;span class=&quot;code-snippet__params&quot;&gt;| Truncated incorrect DOUBLE value: &#x27;aa&#x27; |&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;+---------+------+----------------------------------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;338&quot;&gt;上述示例中，将字符串 &#x27;aa&#x27; 和1进行求和，因为 &#x27;aa&#x27; 和数字1的类型不同，通过上述转换规则并且经查看warnings可以确认：隐式类型转化将字符串转为了 double 类型。&lt;/p&gt;&lt;blockquote data-slate-type=&quot;pm_blockquote&quot; data-slate-object=&quot;block&quot; data-key=&quot;359&quot;&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;360&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;361&quot;&gt;由于字符串是非数字型的，所以就会被转换为0，因此计算结果：0+1=1&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h4 data-id-heading6=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;362&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;363&quot;&gt;3.2.2 使用内置函数显示转换&lt;/span&gt;&lt;/h4&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;364&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;365&quot;&gt;MySQL对数据进行类型转换，提供了cast() 和 convert()。&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;366&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;367&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;367:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;相同点&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;368&quot;&gt;：两者都是进行数据类型转换，实现的功能基本等同&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;369&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;370&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;370:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;不同点&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;371&quot;&gt;：两者的语法不同：cast(value as type) 、 convert(value,type)&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;372&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;373&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;374&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;375&quot;&gt;将数值型转换为字符串型，应用示例如下：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mysql&amp;gt; &lt;span class=&quot;code-snippet__function&quot;&gt;SELECT &lt;span class=&quot;code-snippet__title&quot;&gt;CAST&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;char&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;-&amp;gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;123&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;mysql&amp;gt; &lt;span class=&quot;code-snippet__function&quot;&gt;SELECT &lt;span class=&quot;code-snippet__title&quot;&gt;CONVERT&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;char&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;-&amp;gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;123&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;374&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;假如应用在开篇描述问题的查询中，则如下所示：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;EXPLAIN&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;WHERE&lt;/span&gt; phone = &lt;span class=&quot;code-snippet__keyword&quot;&gt;CAST&lt;/span&gt;(&lt;span class=&quot;code-snippet__number&quot;&gt;123&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;CHAR&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;执行计划所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-ratio=&quot;0.06777493606138107&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgQuBe056fYG5xGrIRe47afI964bngkAWk9pcl4ia2vicfNmJicPP9ibmrkt7ZX26bIFQHibM9eSmPalUwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;782&quot;/&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;395&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;396&quot;&gt;结果显示同应用字符串类型参数一样，可使用索引`&lt;/span&gt;&lt;code data-slate-type=&quot;pm_inlinecode&quot; data-slate-object=&quot;inline&quot; data-key=&quot;397&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;398&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;398:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;span data-slate-string=&quot;true&quot;&gt;idx_phone&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;399&quot;&gt;`。&lt;/span&gt;&lt;/p&gt;&lt;h4 data-id-heading7=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;400&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;401&quot;&gt;3.2.3 类型保持一致&lt;/span&gt;&lt;/h4&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;402&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;403&quot;&gt;最简单的一种，保证查询应用规范，SQL参数类型与数据库中字段类型保持一致即可。&lt;/span&gt;&lt;/p&gt;&lt;h3 data-id-heading8=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;404&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;405&quot;&gt;3.3 字符类型转换&lt;/span&gt;&lt;/h3&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;406&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;407&quot;&gt;另外，关于字符串类型转换的一些补充：&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;shell&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;mysql&amp;gt;&lt;/span&gt; select &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;1a2b3c&#x27;&lt;/span&gt; = 1;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;-&amp;gt;&lt;/span&gt; 1&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;mysql&amp;gt;&lt;/span&gt; select &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;a1b2c3&#x27;&lt;/span&gt; = 0;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;-&amp;gt;&lt;/span&gt; 1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;406&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从上面的例子可以得出：&lt;/span&gt;&lt;/p&gt;&lt;h2 data-id-heading9=&quot;&quot; data-slate-type=&quot;pm_heading&quot; data-slate-object=&quot;block&quot; data-key=&quot;427&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;428&quot;&gt;4、总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;429&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;430&quot;&gt;本文主要从问题入手，继而进行问题引申，最终挖掘出问题根源：&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;431&quot;&gt;&lt;span data-slate-leaf=&quot;true&quot; data-offset-key=&quot;431:0&quot; data-first-offset=&quot;true&quot;&gt;&lt;strong data-slate-type=&quot;pm_bold&quot; data-slate-object=&quot;mark&quot;&gt;MySQL隐式类型转换&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;432&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;433&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;434&quot;&gt;同时也告诫我们日常在写SQL时一定要检查参数类型与数据库字段类型是否一致，否则可能造成隐式类型转换，不能正常应用索引，造成慢查询，甚至拖垮整个数据库服务集群。&lt;/span&gt;&lt;/p&gt;&lt;blockquote data-slate-type=&quot;pm_blockquote&quot; data-slate-object=&quot;block&quot; data-key=&quot;435&quot;&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;436&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;437&quot;&gt;如果参数不一致，也可以考虑使用CAST函数显性转换成一致类型。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;438&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;439&quot;&gt;数据表设计及应用绝非易事，需要考虑的因素太多了，大家应用过程注意保持敬畏心。&lt;/span&gt;&lt;/p&gt;&lt;p data-slate-type=&quot;pm_paragraph&quot; data-slate-object=&quot;block&quot; data-key=&quot;438&quot;&gt;&lt;span data-slate-object=&quot;text&quot; data-key=&quot;439&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;往期热文推荐：&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;98311&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;img data-cropselx1=&quot;0&quot; data-cropselx2=&quot;395&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;395&quot; data-ratio=&quot;0.36484375&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/Z2bVaFK6CgSxEpr7AzM5lGCicdEjfuE6jaiae9Rmj1CVCg85GJKaFKuico89ZlnhGicQiciciccOiaqVibE5cmKXwO1AOuA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; data-width=&quot;100%&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;87502&quot;&gt;&lt;p&gt;&lt;span&gt;「技术架构精进」专注架构研究，技术分享&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;Thanks for reading!&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>6a934d196e2ea57136363df39948564f</guid>
<title>能快速提供一个子环境吗？</title>
<link>https://toutiao.io/k/95iyl54</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;div data-md-url=&quot;https://mp.weixin.qq.com/cgi-bin/appmsg?t=media/appmsg_edit_v2&amp;amp;action=edit&amp;amp;isNew=1&amp;amp;type=10&amp;amp;createType=0&amp;amp;token=1308386712&amp;amp;lang=zh_CN&quot; markdown-here-wrapper-content-modified=&quot;true&quot;&gt;&lt;p&gt;对于一个系统来说，如果不能很好的隔离出一个个子环境，那说明架构是不完善的，什么是子环境呢？开发环境，QA环境，仿真环境，线上环境。&lt;/p&gt;&lt;p&gt;这些环境对应的用户和功能也是不一样的，有几个特征，这些环境是否能够快速提供，环境之间是否是隔离的，稳定性怎么样，是不是比较仿真的（数据和架构）。&lt;/p&gt;&lt;p&gt;另外还需要注意成本，不仅仅是机器的成本，还包括协调成本，比如怎么说清楚。&lt;/p&gt;&lt;p&gt;那么如何搭建这些子环境呢？可以重新搭建，也可以从线上服务器中隔离出。&lt;/p&gt;&lt;p&gt;隔离的越彻底，说明架构设计的比较好，也更仿真。当然为了减少成本，也会复用一些资源，做些取舍。&lt;/p&gt;&lt;p&gt;说到隔离，web服务可以通过SLB隔离，数据库可以通过proxy隔离，redis同样如此，关键是子环境配置是否自动化，是否可管理，系统更新能否一致性，减少人为干预，从这一点上来说，这也是k8s流行的原因，基础设施即代码。&lt;/p&gt;&lt;p&gt;从入口上来说，如何区分这些子环境呢？目前使用域名来区分，配合SLB做调度，现有业务域名（SLB也可以根据路径做策略）非常多，配置搞的很多，很容易出错。&lt;/p&gt;&lt;p&gt;程序通过域名来做配置管理，耦合的比较厉害，不管什么架构，建议使用环境变量来加载，环境变量可以来源于docker，php-fpm，linux环境变量等等，但对程序来说，它就是读取环境变量，所以不关心服务是虚拟机部署，或者docker部署，从这一点来说，技术在迭代的时候，一定不要走弯路，大方向上要把握住，然后尽量往前走。&lt;/p&gt;&lt;p&gt;整个环境或集群如何部署呢？可以使用ansible这样的运维工具，也可以使用阿里云镜像的方式，或者未来的docker容器化。目前使用阿里云镜像，但有一个问题，镜像可能是数月前打的，现在重新基于镜像做一个服务，此时拉取的代码或者系统配置可能是旧的，所以还是需要有一定机制去更新，可以写shell，但估计ansible这样的工具更标准。&lt;/p&gt;&lt;p&gt;子环境必然和CI/CD一一对应的，包括Git工作流，目前我们采用类gitlab flow，其实做法有很多种，先说说目前怎么做的，我个人觉得还行。&lt;/p&gt;&lt;p&gt;分为开发分支，QA分支，Pre仿真分支，Master分支。开发一个功能的时候，首先基于master打一个开发分支，多人合作，然后本地测试通过后，合并到QA分支供测试，测试差不多后，将开发分支合并到pre分支，进行仿真测试，没有问题后再将开发分支合并到master分支上线。&lt;/p&gt;&lt;p&gt;原来我们是将master分支直接部署到仿真环境，但这样有个弊端，合并到master后因为各种原因先不上线，如果此时有个bug，基于master弄出一个bugfix分支，改好后也没法上线（会把不想上线的代码也部署上去）。所以才弄出一个仿真分支，需要开发尽量保证pre和master分支是尽量同步的。&lt;/p&gt;&lt;p title=&quot;MDH:PHA+5a+55LqO5LiA5Liq57O757uf5p2l6K+077yM5aaC5p6c5LiN6IO95b6I5aW955qE6ZqU56a7&amp;#10;5Ye65LiA5Liq5Liq5a2Q546v5aKD77yM6YKj6K+05piO5p625p6E5piv5LiN5a6M5ZaE55qE77yM&amp;#10;5LuA5LmI5piv5a2Q546v5aKD5ZGi77yfPG1wY2hlY2t0ZXh0IGNvbnRlbnRlZGl0YWJsZT0iZmFs&amp;#10;c2UiIGlkPSIxNjA1ODgzNTA4MTE5XzAuODkxNTMyNTE5MjIwNDg1MyI+PC9tcGNoZWNrdGV4dD7l&amp;#10;vIDlj5Hnjq/looPvvIxRQeeOr+Wig++8jOS7v+ecn+eOr+Wig++8jOe6v+S4iueOr+Wig+OAgjxt&amp;#10;cGNoZWNrdGV4dCBjb250ZW50ZWRpdGFibGU9ImZhbHNlIiBpZD0iMTYwNTg4MzUwODEyMF8wLjE1&amp;#10;NDk4MzYzNzMwMDk5MDUyIj48L21wY2hlY2t0ZXh0PjwvcD48cD48YnI+PC9wPjxwPui/meS6m+eO&amp;#10;r+Wig+WvueW6lOeahOeUqOaIt+WSjOWKn+iDveS5n+aYr+S4jeS4gOagt+eahO+8jOacieWHoOS4&amp;#10;queJueW+ge+8jOi/meS6m+eOr+Wig+aYr+WQpuiDveWkn+W/q+mAn+aPkOS+m++8jOeOr+Wig+S5&amp;#10;i+mXtOaYr+WQpuaYr+malOemu+eahO+8jOeos+WumuaAp+aAjuS5iOagt++8jOaYr+S4jeaYr+av&amp;#10;lOi+g+S7v+ecn+eahO+8iOaVsOaNruWSjOaetuaehO+8ieOAgjxtcGNoZWNrdGV4dCBjb250ZW50&amp;#10;ZWRpdGFibGU9ImZhbHNlIiBpZD0iMTYwNTg4MzUwODEyMV8wLjY5NTgwMTQzMDI0NzM2NzQiPjwv&amp;#10;bXBjaGVja3RleHQ+PC9wPjxwPjxicj48L3A+PHA+5Y+m5aSW6L+Y6ZyA6KaB5rOo5oSP5oiQ5pys&amp;#10;77yM5LiN5LuF5LuF5piv5py65Zmo55qE5oiQ5pys77yM6L+Y5YyF5ous5Y2P6LCD5oiQ5pys77yM&amp;#10;5q+U5aaC5oCO5LmI5ZKM5rWL6K+V6K+05riF5qWa44CCPG1wY2hlY2t0ZXh0IGNvbnRlbnRlZGl0&amp;#10;YWJsZT0iZmFsc2UiIGlkPSIxNjA1ODgzNTA4MTIyXzAuNjI2MzkzNzAwODczNjE3NiI+PC9tcGNo&amp;#10;ZWNrdGV4dD48L3A+PHA+PGJyPjwvcD48cD7pgqPkuYjlpoLkvZXmkK3lu7rov5nkupvlrZDnjq/l&amp;#10;ooPlkaLvvJ88bXBjaGVja3RleHQgY29udGVudGVkaXRhYmxlPSJmYWxzZSIgaWQ9IjE2MDU4ODM1&amp;#10;MDgxMjNfMC40MDE5MTQ0MTI0MzMyMTAzNiI+PC9tcGNoZWNrdGV4dD7lj6/ku6Xph43mlrDmkK3l&amp;#10;u7rvvIzkuZ/lj6/ku6Xku47nur/kuIrmnI3liqHlmajkuK3pmpTnprvlh7rlrZDnjq/looPjgII8&amp;#10;bXBjaGVja3RleHQgY29udGVudGVkaXRhYmxlPSJmYWxzZSIgaWQ9IjE2MDU4ODM1MDgxMjRfMC40&amp;#10;Mzg0MDM5Mjk4MjM1MjY5NCI+PC9tcGNoZWNrdGV4dD48L3A+PHA+PGJyPjwvcD48cD7lj6blpJbp&amp;#10;mpTnprvnmoTotorlvbvlupXvvIzor7TmmI7mnrbmnoTorr7orqHnmoTmr5TovoPlpb3vvIzkuZ/m&amp;#10;m7Tku7/nnJ/jgII8bXBjaGVja3RleHQgY29udGVudGVkaXRhYmxlPSJmYWxzZSIgaWQ9IjE2MDU4&amp;#10;ODM1MDgxMjVfMC44NjEzNjEzNTk0MTEyMDA4Ij48L21wY2hlY2t0ZXh0PuW9k+eEtuS4uuS6huWH&amp;#10;j+WwkeaIkOacrO+8jOS5n+S8muWkjeeUqOS4gOS6m+i1hOa6kO+8jOWBmuS6m+WPluiIjeOAgjxt&amp;#10;cGNoZWNrdGV4dCBjb250ZW50ZWRpdGFibGU9ImZhbHNlIiBpZD0iMTYwNTg4MzUwODEyNl8wLjYy&amp;#10;MzA2OTA3MTc3ODgwNzQiPjwvbXBjaGVja3RleHQ+PC9wPjxwPjxicj48L3A+PHA+6K+05Yiw6ZqU&amp;#10;56a777yMd2Vi5pyN5Yqh5Y+v5Lul6YCa6L+HU0xC6ZqU56a777yM5pWw5o2u5bqT5Y+v5Lul6YCa&amp;#10;6L+HcHJveHnpmpTnprvvvIxyZWRpc+WQjOagt+WmguatpO+8jOeOr+Wig+aYr+mFjee9ruS4gOS4&amp;#10;quS4quWtkOeOr+Wig+eahOaXtuWAme+8jOaYr+WQpuaYr+iHquWKqOWMlueahO+8jOaYr+WQpuaY&amp;#10;r+WPr+euoeeQhueahO+8jOWHj+WwkeS6uuS4uuW5sumihO+8jOS7jui/meS4gOeCueS4iuadpeiv&amp;#10;tO+8jOi/meS5n+aYr2s4c+a1geihjOeahOWOn+WboO+8jOWfuuehgOiuvuaWveWNs+S7o+eggeOA&amp;#10;gjxtcGNoZWNrdGV4dCBjb250ZW50ZWRpdGFibGU9ImZhbHNlIiBpZD0iMTYwNTg4MzUwODEyN18w&amp;#10;LjQ2MjAzMTc0Njg3Mzk5MTQiPjwvbXBjaGVja3RleHQ+PC9wPjxwPjxicj48L3A+PHA+5LuO5YWl&amp;#10;5Y+j5LiK5p2l6K+077yM5aaC5L2V5Yy65YiG6L+Z5Lqb5a2Q546v5aKD5ZGi77yfPG1wY2hlY2t0&amp;#10;ZXh0IGNvbnRlbnRlZGl0YWJsZT0iZmFsc2UiIGlkPSIxNjA1ODgzNTA4MTI4XzAuODMyODA1NjYx&amp;#10;OTI5Mjc0NyI+PC9tcGNoZWNrdGV4dD7nm67liY3kvb/nlKjln5/lkI3mnaXljLrliIbvvIzphY3l&amp;#10;kIhTTELlgZrosIPluqbvvIznjrDmnInkuJrliqHln5/lkI3vvIhTTELkuZ/lj6/ku6XmoLnmja7o&amp;#10;t6/lvoTlgZrnrZbnlaXvvInpnZ7luLjlpJrvvIzphY3nva7mkJ7nmoTlvojlpJrvvIzlvojlrrnm&amp;#10;mJPlh7rplJnjgII8bXBjaGVja3RleHQgY29udGVudGVkaXRhYmxlPSJmYWxzZSIgaWQ9IjE2MDU4&amp;#10;ODM1MDgxMjlfMC42NTQ1NTA1NTQ2NDgzMjEiPjwvbXBjaGVja3RleHQ+PC9wPjxwPjxicj48L3A+&amp;#10;PHA+56iL5bqP6YCa6L+H5Z+f5ZCN5p2l5YGa6YWN572u566h55CG77yM6ICm5ZCI55qE5q+U6L6D&amp;#10;5Y6J5a6z77yM5LiN566h5LuA5LmI5p625p6E77yM5bu66K6u5L2/55So546v5aKD5Y+Y6YeP5p2l&amp;#10;5Yqg6L2977yM546v5aKD5Y+Y6YeP5Y+v5Lul5p2l5rqQ5LqOZG9ja2Vy77yMcGhwLWZwbeetieet&amp;#10;ie+8jOS9huWvueeoi+W6j+adpeivtO+8jOWug+WwseaYr+ivu+WPlueOr+Wig+WPmOmHj++8jOaJ&amp;#10;gOS7peS4jeWFs+W/g+acjeWKoeaYr+iZmuaLn+acuumDqOe9su+8jOaIluiAhWRvY2tlcumDqOe9&amp;#10;su+8jOS7jui/meS4gOeCueadpeivtO+8jOaKgOacr+WcqOi/reS7o+eahOaXtuWAme+8jOS4gOWu&amp;#10;muS4jeimgei1sOW8r+i3r++8jOWkp+aWueWQkeS4iuimgeaKiuaPoeS9j++8jOeEtuWQjuWwvemH&amp;#10;j+W+gOWJjei1sOOAgjxtcGNoZWNrdGV4dCBjb250ZW50ZWRpdGFibGU9ImZhbHNlIiBpZD0iMTYw&amp;#10;NTg4MzUwODEzMF8wLjM5MjQyNTQyODUzNjkwNCI+PC9tcGNoZWNrdGV4dD48L3A+PHA+PGJyPjwv&amp;#10;cD48cD7mlbTkuKrnjq/looPmiJbpm4bnvqTlpoLkvZXpg6jnvbLlkaLvvJ88bXBjaGVja3RleHQg&amp;#10;Y29udGVudGVkaXRhYmxlPSJmYWxzZSIgaWQ9IjE2MDU4ODM1MDgxMzFfMC4zODMwNDI1MzAxMTY5&amp;#10;NzA2NSI+PC9tcGNoZWNrdGV4dD7lj6/ku6Xkvb/nlKhhbnNpYmxl6L+Z5qC355qE6L+Q57u05bel&amp;#10;5YW377yM5Lmf5Y+v5Lul5L2/55So6Zi/6YeM5LqR6ZWc5YOP55qE5pa55byP77yM5oiW6ICF5pyq&amp;#10;5p2l55qEZG9ja2Vy5a655Zmo5YyW44CCPG1wY2hlY2t0ZXh0IGNvbnRlbnRlZGl0YWJsZT0iZmFs&amp;#10;c2UiIGlkPSIxNjA1ODgzNTA4MTMyXzAuNjk4MzMxMjAxNzk2ODgzNyI+PC9tcGNoZWNrdGV4dD7n&amp;#10;m67liY3kvb/nlKjpmL/ph4zkupHplZzlg4/vvIzkvYbmnInkuIDkuKrpl67popjvvIzplZzlg4/l&amp;#10;j6/og73mmK/mlbDmnIjliY3miZPnmoTvvIznjrDlnKjph43mlrDln7rkuo7plZzlg4/lgZrkuIDk&amp;#10;uKrmnI3liqHvvIzmraTml7bmi4nlj5bnmoTku6PnoIHmiJbogIXns7vnu5/phY3nva7lj6/og73m&amp;#10;mK/ml6fnmoTvvIzmiYDku6Xov5jmmK/pnIDopoHmnInkuIDlrprmnLrliLbljrvmm7TmlrDvvIzl&amp;#10;j6/ku6XlhplzaGVsbO+8jOS9huS8sOiuoWFuc2libGXov5nmoLfnmoTlt6Xlhbfmm7TmoIflh4bj&amp;#10;gII8bXBjaGVja3RleHQgY29udGVudGVkaXRhYmxlPSJmYWxzZSIgaWQ9IjE2MDU4ODM1MDgxMzNf&amp;#10;MC4wMzU1MTY0ODI3MTQ2MTEyNzUiPjwvbXBjaGVja3RleHQ+PC9wPjxwPjxicj48L3A+PHA+5a2Q&amp;#10;546v5aKD5b+F54S25ZKMQ0kvQ0TkuIDkuIDlr7nlupTnmoTvvIzljIXmi6xHaXTlt6XkvZzmtYHv&amp;#10;vIznm67liY3miJHku6zph4fnlKjnsbtnaXRsYWIgZmxvd++8jOWFtuWunuWBmuazleacieW+iOWk&amp;#10;muenje+8jOWFiOivtOivtOebruWJjeaAjuS5iOWBmueahO+8jOaIkeS4quS6uuinieW+l+i/mOih&amp;#10;jOOAgjxtcGNoZWNrdGV4dCBjb250ZW50ZWRpdGFibGU9ImZhbHNlIiBpZD0iMTYwNTg4MzUwODEz&amp;#10;NF8wLjgxMzAyMDg3NTY0ODcxNyI+PC9tcGNoZWNrdGV4dD48L3A+PHA+PGJyPjwvcD48cD7liIbk&amp;#10;uLrlvIDlj5HliIbmlK/vvIxRQeWIhuaUr++8jFByZeS7v+ecn+WIhuaUr++8jE1hc3RlcuWIhuaU&amp;#10;r+OAgjxtcGNoZWNrdGV4dCBjb250ZW50ZWRpdGFibGU9ImZhbHNlIiBpZD0iMTYwNTg4MzUwODEz&amp;#10;NV8wLjM2NDU2OTEyOTYwMDAxOTEiPjwvbXBjaGVja3RleHQ+5byA5Y+R5LiA5Liq5Yqf6IO955qE&amp;#10;5pe25YCZ77yM6aaW5YWI5Z+65LqObWFzdGVy5omT5LiA5Liq5byA5Y+R5YiG5pSv77yM5aSa5Lq6&amp;#10;5ZCI5L2c77yM54S25ZCO5pys5Zyw5rWL6K+V6YCa6L+H5ZCO77yM5ZCI5bm25YiwUUHliIbmlK/k&amp;#10;vpvmtYvor5XvvIzmtYvor5Xlt67kuI3lpJrlkI7vvIzlsIblvIDlj5HliIbmlK/lkIjlubbliLBw&amp;#10;cmXliIbmlK/vvIzov5vooYzku7/nnJ/mtYvor5XvvIzmsqHmnInpl67popjlkI7lho3lsIblvIDl&amp;#10;j5HliIbmlK/lkIjlubbliLBtYXN0ZXLliIbmlK/kuIrnur/jgII8bXBjaGVja3RleHQgY29udGVu&amp;#10;dGVkaXRhYmxlPSJmYWxzZSIgaWQ9IjE2MDU4ODM1MDgxMzZfMC43MjE2MjcyNjA0NjExMjY5Ij48&amp;#10;L21wY2hlY2t0ZXh0PjwvcD48cD48YnI+PC9wPjxwPuWOn+adpeaIkeS7rOaYr+Wwhm1hc3RlcuWI&amp;#10;huaUr+ebtOaOpemDqOe9suWIsOS7v+ecn+eOr+Wig++8jOS9hui/meagt+acieS4quW8iuerr++8&amp;#10;jOWQiOW5tuWIsG1hc3RlcuayoeS4iue6v++8jOWmguaenOatpOaXtuacieS4qmJ1Z++8jOWfuuS6&amp;#10;jm1hc3RlcuW8hOWHuuS4gOS4qmJ1Z2ZpeOWIhuaUr++8jOaUueWlveWQjuS5n+ayoeazleS4iue6&amp;#10;v++8iOS8muaKiuS4jeaDs+S4iue6v+eahOS7o+eggeS5n+mDqOe9suS4iuWOu++8ieOAgjxtcGNo&amp;#10;ZWNrdGV4dCBjb250ZW50ZWRpdGFibGU9ImZhbHNlIiBpZD0iMTYwNTg4MzUwODEzN18wLjk2MDgw&amp;#10;OTIzODMxMTYyMjkiPjwvbXBjaGVja3RleHQ+5omA5Lul5omN5byE5Ye65LiA5Liq5Lu/55yf5YiG&amp;#10;5pSv77yM6ZyA6KaB5byA5Y+R6Ieq6KGM5bC96YeP5L+d6K+BcHJl5ZKMbWFzdGVy5YiG5pSv5piv&amp;#10;5bC96YeP5ZCM5q2l55qE44CCPG1wY2hlY2t0ZXh0IGNvbnRlbnRlZGl0YWJsZT0iZmFsc2UiIGlk&amp;#10;PSIxNjA1ODgzNTA4MTM4XzAuNTU1MzI2OTEwNDAzNTAzMiI+PC9tcGNoZWNrdGV4dD48L3A+PHA+&amp;#10;4oCLPGJyPjwvcD4=&quot;/&gt;&lt;/div&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>