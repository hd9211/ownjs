<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>e20be602802d2f541737a90c14f2240c</guid>
<title>如何处理大体积 XLSX/CSV/TXT 文件？</title>
<link>https://toutiao.io/k/8tsprw7</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;RichText ztext Post-RichText css-hnrfcf&quot; options=&quot;[object Object]&quot;&gt;&lt;p data-pid=&quot;fngH_5Gw&quot;&gt;在开发过程中，可能会遇到这样的需求，我们需要从本地的 Excel 或 CSV 等文件中解析出信息，这些信息可能是考勤打卡记录，可能是日历信息，也可能是近期账单流水。但是它们共同的特点是数据多且繁杂，人工录入的工作量庞大容易出错，需要花费大量时间。那有没有什么方法能自动解析文件并获取有用信息呢？&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-872afa75def6818c4ccc784db90c8e23_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;808&quot; data-rawheight=&quot;404&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-872afa75def6818c4ccc784db90c8e23_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;808&quot; data-rawheight=&quot;404&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-872afa75def6818c4ccc784db90c8e23_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-872afa75def6818c4ccc784db90c8e23_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;hB72nexA&quot;&gt;当这个文件数据量也不是很多的时候，有很多前端工具可供选择。例如 SheetJS，就提供了从 Excel、CSV 中解析出用信息的很多方法，十分方便。&lt;/p&gt;&lt;p data-pid=&quot;dTYOvrMH&quot;&gt;当数据量只是几千条的程度的，选择的余地很多，但是一旦数据量级增加，处理就变得复杂。如果 XLSX/CSV 数据量达到了 100w+ 条，Office、WPS 想打开看一下，都会需要很长的时间。&lt;/p&gt;&lt;p data-pid=&quot;s-JuxLb1&quot;&gt;那又该如何从这样大体积的 Excel/CSV/TXT 中解析出数据呢？&lt;/p&gt;&lt;h2&gt;&lt;b&gt;背景&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;BLE376GP&quot;&gt;下面我们通过一个假设的需求，来讲述理解整个过程。假设我们需求是从本地 Excel、CSV、TXT（或者其他格式的）文件中解析出数据，并经过清洗后存入本地数据库文件中。但是这些文件体积可能是 5M、50M、500M 甚至更大。那么在浏览器环境下如何上传？Node 环境下应该如何解析？&lt;/p&gt;&lt;p data-pid=&quot;LjJ55mJn&quot;&gt;首先，我们需要了解的是浏览器 Web 页面如何上传大体积文件？&lt;/p&gt;&lt;h2&gt;&lt;b&gt;Web 页面如何上传大体积文件？&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;_tNhow1d&quot;&gt;Web 页面一般也是可以上传大文件的，但是会面临一个问题。&lt;b&gt;如果要上传的数据比较大，那么整个上传过程会比较漫长，再加上上传过程的不确定因素，一旦失败，那整个上传就要从头再来，耗时很长。&lt;/b&gt;&lt;/p&gt;&lt;p data-pid=&quot;pzaj_Pt2&quot;&gt;面对这个问题，我们可以通过将大文件分成多份小文件，每一次只上传一份的方法来解决。这样即使某个请求失败了，也无需从头开始，只要重新上传失败的那一份就好了。&lt;/p&gt;&lt;p data-pid=&quot;6GWjEoG7&quot;&gt;如果想要使用这个方法，我们需要满足以下几项需求：&lt;/p&gt;&lt;ul&gt;&lt;li data-pid=&quot;E1_d0-hT&quot;&gt;大体积文件支持切片上传&lt;/li&gt;&lt;li data-pid=&quot;UDFKuXHm&quot;&gt;可以断点续传&lt;/li&gt;&lt;li data-pid=&quot;RnzkC__a&quot;&gt;可以得知上传进度&lt;/li&gt;&lt;/ul&gt;&lt;p data-pid=&quot;qUYq8lD4&quot;&gt;首先看一下如何进行大文件切割。Web 页面基本都是通过 &amp;lt;input type=&#x27;file&#x27; /&amp;gt; 来获取本地文件的。 而通过 input 的 event.target.files 获取到的 file，其实是一个 File 类的实例，是 Blob 类的子类。&lt;/p&gt;&lt;p data-pid=&quot;Sf9j9OU-&quot;&gt;Blob 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 ReadableStream 来用于数据操作。 简单理解合一将 Blob  看做二进制容器，表示存放着一个大的二进制文件。Blob 对象有一个很重要的方法：slice()，这里需要注意的是 Blob 对象是不可变的，slice 方法返回的是一个新的 Blob，表示所需要切割的二进制文件。&lt;/p&gt;&lt;p data-pid=&quot;cVvtoNxr&quot;&gt;slice() 方法接受三个参数，起始偏移量，结束偏移量，还有可选的 mime 类型。如果 mime 类型，没有设置，那么新的 Blob 对象的 mime 类型和父级一样。而 File 接口基于 Blob，File 对象也包含了slice方法，其结果包含有源 Blob 对象中指定范围的数据。&lt;/p&gt;&lt;p data-pid=&quot;GE_Vor8b&quot;&gt;看完了切割的方法，我们就可以对二进制文件进行拆分了。拆分示例如下：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;function sliceInPiece(file, piece = 1024 * 1024 * 5) {
  let totalSize = file.size; // 文件总大小
  let start = 0; // 每次上传的开始字节
  let end = start + piece; // 每次上传的结尾字节
  let chunks = []
  while (start &amp;lt; totalSize) {
    // 根据长度截取每次需要上传的数据
    // File对象继承自Blob对象，因此包含slice方法
    let blob = file.slice(start, end); 
    chunks.push(blob)

    start = end;
    end = start + piece;
  }
  return chunks
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;6TL894OG&quot;&gt;获得文件切割后的数组后，就可以挨个调用接口上传至服务端。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;let file =  document.querySelector(&quot;[name=file]&quot;).files[0];

const LENGTH = 1024 * 1024 * 0.1;
let chunks = sliceInPiece(file, LENGTH); // 首先拆分切片

chunks.forEach(chunk=&amp;gt;{
  let fd = new FormData();
  fd.append(&quot;file&quot;, chunk);
  post(&#x27;/upload&#x27;, fd)
})&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;CKvujjGX&quot;&gt;完成上传后再至服务端将切片文件拼接成完整文件，让 FileReader 对象从 Blob 中读取数据。&lt;/p&gt;&lt;p data-pid=&quot;Ms-ng4of&quot;&gt;当然这里会遇到两个问题，其一是面对上传完成的一堆切片文件，服务端要如知道它们的正确顺序？其二是如果有多个大体积文件同时上传，服务端该如何判断哪个切片属于哪个文件呢？&lt;/p&gt;&lt;p data-pid=&quot;E1ox_IuV&quot;&gt;前后顺序的问题，我们可以通过构造切片的 FormData 时增加参数的方式来处理。比如用参数 ChunkIndex 表示当前切片的顺序。&lt;/p&gt;&lt;p data-pid=&quot;ii5_iuAe&quot;&gt;而第二个问题可以通过增加参数比如 sourceFile 等（值可以是当前大体积文件的完整路径或者更严谨用文件的 hash 值）来标记原始文件来源。这样服务端在获取到数据时，就可以知道哪些切片来自哪个文件以及切片之间的前后顺序。&lt;/p&gt;&lt;p data-pid=&quot;S0Gjg1of&quot;&gt;如果暂时不方便自行构架，也可以考虑使用云服务，比如又拍云存储就支持大文件上传和断点续传的。比如：&lt;/p&gt;&lt;blockquote data-pid=&quot;RARCVgyC&quot;&gt;&lt;b&gt;断点续传&lt;/b&gt;&lt;br/&gt;在上传大文件或移动端上传文件时，因为网络质量、传输时间过长等原因造成上传失败，可以使用断点续传。特别地，断点续传上传的图片不支持预处理。特别地，断点续传上传的文件不能使用其他上传方式覆盖，如果需要覆盖，须先删除文件。&lt;br/&gt;&lt;b&gt;名称概念&lt;/b&gt;&lt;br/&gt;文件分块：直接切分二进制文件成小块。分块大小固定为 1M。最后一个分块除外。&lt;br/&gt;上传阶段：使用 x-upyun-multi-stage 参数来指示断点续传的阶段。分为以下三个阶段: initate(上传初始化), upload(上传中), complete(上传结束)。各阶段依次进行。&lt;br/&gt;分片序号：使用 x-upyun-part-id 参数来指示当前的分片序号，序号从 0 起算。&lt;br/&gt;顺序上传：对于同一个断点续传任务，只支持顺序上传。&lt;br/&gt;上传标识：使用 x-upyun-multi-uuid 参数来唯一标识一次上传任务, 类型为字符串, 长度为 36 位。&lt;br/&gt;上传清理：断点续传未完成的文件，会保存 24 小时，超过后，文件会被删除。&lt;/blockquote&gt;&lt;p data-pid=&quot;nasoK89i&quot;&gt;可以看到，云存储通过分片序号 &lt;b&gt;x-upyun-part-id&lt;/b&gt;和上传标识 &lt;b&gt;x-upyun-multi-uuid&lt;/b&gt;解决了我们前面提到的两个问题。这里需要注意的是这两个数据不是前端自己生成的，而是在初始化上传后通过 responseHeader 返回的。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-bf0bbabba620e68d0e33e0a8edb6c2f6_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;894&quot; data-rawheight=&quot;646&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic3.zhimg.com/v2-bf0bbabba620e68d0e33e0a8edb6c2f6_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;894&quot; data-rawheight=&quot;646&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic3.zhimg.com/v2-bf0bbabba620e68d0e33e0a8edb6c2f6_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-bf0bbabba620e68d0e33e0a8edb6c2f6_b.jpg&quot;/&gt;&lt;figcaption&gt;又拍云初始化断点续传&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-pid=&quot;_tvX3bXv&quot;&gt;前文说的都是使用 Web 页面要如何上传大文件。接下来我们来看看 NodeJS 是如何解析、处理这类大体积文件呢？&lt;/p&gt;&lt;h2&gt;&lt;b&gt;NodeJS 解析大体积文件&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;8U5DG4lQ&quot;&gt;首先需要明确一个概念 NodeJS 里没有 File 对象，但是有 fs（文件系统) 模块。fs 模块支持标准 POSIX 函数建模的方式与文件系统进行交互。&lt;/p&gt;&lt;p data-pid=&quot;ZLZaeRSM&quot;&gt;POSIX 是&lt;b&gt;可移植操作系统接口&lt;/b&gt; &lt;b&gt;Portable Operating System Interface of UNIX&lt;/b&gt; 的缩写。简单来说 POSIX 就是在不同内核提供的操作系统下提供一个统一的调用接口，比如在 linux 下打开文件和在 widnows 下打开文件。可能内核提供的方式是不同的，但是因为 fs 是支持 POSIX 标准的，因此对程序猿来说无论内核提供的是什么，直接在 Node 里调 fsPromises.open(path, flags[, mode]) 方法就可以使用。&lt;/p&gt;&lt;p data-pid=&quot;aDE582mu&quot;&gt;这里简单用 Vue 举例说明。Vue 在不同的环境下比如 Web 页面或 Weex 等等的运行生成页面元素的方式是不同的。比如在 Web 下的 createElement 是下方这样：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;export function createElement (tagName: string, vnode: VNode): Element {
  const elm = document.createElement(tagName)
  if (tagName !== &#x27;select&#x27;) {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data &amp;amp;&amp;amp; vnode.data.attrs &amp;amp;&amp;amp; vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute(&#x27;multiple&#x27;, &#x27;multiple&#x27;)
  }
  return elm
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;asjfeF8W&quot;&gt;在 Weex 下则是如下情况：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;export function createElement (tagName: string): WeexElement {
  return document.createElement(tagName)
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;ipBeCzhc&quot;&gt;以上两种情况下的&lt;b&gt;createElement&lt;/b&gt;是不一样的。同理，还有很多其他的创建模块或者元素的方式也是不同的，但是针对不同平台，Vue 提供了相同的 patch 方法，来进行组件的更新或者创建。&lt;/p&gt;&lt;p data-pid=&quot;T3Ra5LZi&quot;&gt;Web 平台下的情况：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;import * as nodeOps from &#x27;web/runtime/node-ops&#x27;
import { createPatchFunction } from &#x27;core/vdom/patch&#x27;
import baseModules from &#x27;core/vdom/modules/index&#x27;
import platformModules from &#x27;web/runtime/modules/index&#x27;

// the directive module should be applied last, after all
// built-in modules have been applied.
const modules = platformModules.concat(baseModules)

// nodeops 封装了一系列DOM操作方法。modules定义了一些模块的钩子函数的实现
export const patch: Function = createPatchFunction({ nodeOps, modules })&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;sz6F7UeJ&quot;&gt;weex 平台下的情况：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;import * as nodeOps from &#x27;weex/runtime/node-ops&#x27;
import { createPatchFunction } from &#x27;core/vdom/patch&#x27;
import baseModules from &#x27;core/vdom/modules/index&#x27;
import platformModules from &#x27;weex/runtime/modules/index&#x27;

// the directive module should be applied last, after all
// built-in modules have been applied.
const modules = platformModules.concat(baseModules)

export const patch: Function = createPatchFunction({
  nodeOps,
  modules,
  LONG_LIST_THRESHOLD: 10
})&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;2KiAszSD&quot;&gt;这样，无论运行环境的内部实现是否不同，只要调用相同的 patch 方法即可。而 POSIX 的理念是与上面所举例的情况是相通的。&lt;/p&gt;&lt;p data-pid=&quot;E8Y1sj1B&quot;&gt;简单了解了 POSIX，我们回到 fs 模块。fs 模块提供了很多读取文件的方法，例如：&lt;/p&gt;&lt;ul&gt;&lt;li data-pid=&quot;j4PtORmh&quot;&gt;fs.read(fd, buffer, offset, length, position, callback)读取文件数据。要操作文件，得先打开文件，这个方法的fd，就是调用 fs.open 返回的文件描述符。&lt;/li&gt;&lt;li data-pid=&quot;Giold126&quot;&gt;fs.readFile(path[, options], callback) 异步地读取文件的全部内容。可以看做是fs.read的进一步封装。&lt;/li&gt;&lt;/ul&gt;&lt;p data-pid=&quot;Rx2S5W83&quot;&gt;使用场景如下：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;import { readFile } from &#x27;fs&#x27;;

readFile(&#x27;/etc/passwd&#x27;,&#x27;utf-8&#x27;, (err, data) =&amp;gt; {
  if (err) throw err;
  console.log(data);
});&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;5Cs7qRZE&quot;&gt;因为 fs.readFile 函数会缓冲整个文件，如果要读取的文件体积较小还好，但是如果文件体积较大就会给内存造成压力。那有没有对内存压力较小的方式来读取文件呢？&lt;/p&gt;&lt;p data-pid=&quot;iZiw6GaC&quot;&gt;有的，我们今天的主角 stream 流登场。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;stream&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;75x6WiB-&quot;&gt;stream 流是用于在 Node.js 中处理流数据的抽象接口。stream 模块提供了用于实现流接口的 API。流可以是可读的、可写的、或两者兼而有之。&lt;/p&gt;&lt;p data-pid=&quot;DiIV1AFA&quot;&gt;fs 模块内有个 fs.createReadStream(path[, options])方法，它返回的是一个可读流，默认大小为 64k，也就是缓冲 64k。一旦内部读取缓冲区达到这个阈值，流将暂时停止从底层资源读取数据，直到消费当前缓冲的数据。&lt;/p&gt;&lt;p data-pid=&quot;0KCUI1Xs&quot;&gt;消费数据的方法可以是调pipe()方法，也可以被事件直接消费。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;// pipe 消费
readable.pipe(writable)

// 或者
// 事件消费
readable.on(&#x27;data&#x27;, (chunk) =&amp;gt; {
  writable.write(chunk);
});
readable.on(&#x27;end&#x27;, () =&amp;gt; {
  writable.end();
});&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;Et51I5Fm&quot;&gt;除了可读流，也有可写流 fs.createWriteStream(path[, options])， 可以将数据写入文件中。&lt;/p&gt;&lt;p data-pid=&quot;H_qwIFgj&quot;&gt;好了，所需要的前置知识基本就介绍完毕了，回到正题。假如我们有一个文件夹，里面存放着数十个 XLSX/CSV 文件，且每一个体积都超过了 500M。那该如何从这些文件中读取信息，并写入数据库文件中呢？&lt;/p&gt;&lt;h3&gt;&lt;b&gt;批量解析 CSV 文件&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;_up2MxgP&quot;&gt;假设我们需要解析的文件路径已经是知道的，可以通过路径获取到文件，那么将这些路径存入一个数组并命名为 needParseArr，我们需要按照顺序一个个解析这些  CSV、XLSX 文件信息，并清洗然后写入数据库。&lt;/p&gt;&lt;p data-pid=&quot;2cfa3za4&quot;&gt;首先，是一个个读的逻辑 (readOneByOne)。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;async readOneByOne () {
   try {
    for (let i = 0; i &amp;lt; needParsePathArr.length; i++) {
      const filePath = needParsePathArr[i]
      console.log(`解析到第${i}个文件，文件名：${filePath}`)
      await streamInsertDB(filePath)
    }
  } catch (err) {

  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;zz6oyDaC&quot;&gt;streamInsertDB 是我们的主要逻辑的入口。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;async function streamInsertDB (filePath) {
  return new Promise((resolve, reject) =&amp;gt; {
    const ext = path.extname(filePath)
    // 判断了下文件类型
    if (ext === &#x27;.csv&#x27;) {
      // 解析csv
      parseAndInsertFromCSV(filePath, resolve, reject)
    } else if (ext === &#x27;.xlsx&#x27;) {
      // 自执行函数
      (async function getName () {
        try {
          // 先转换成csv。也可以不转换，直接解析xlsx，后文会详细解释。
          const csvFileName = await convertXlsx2Csv(filePath)
          // 复用解析csv的逻辑
          parseAndInsertFromCSV(csvFileName, resolve, reject)
        } catch (error) {
          reject(`error: ${error.message || error}`)
        }
      })()
    }
  })
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;ypPLqQ85&quot;&gt;&lt;b&gt;parseAndInsertFromCSV 中就是使用我们前面所提到的知识点的主要阵地。&lt;/b&gt;下面简单介绍一下各个函数：&lt;/p&gt;&lt;ul&gt;&lt;li data-pid=&quot;fUBXsN7r&quot;&gt;chardet：这个函数的作用是监测 CSV 文件的编码格式的，毕竟不是每个 CSV 都是 UTF-8 编码，带中文的 CSV 编码类型可能是 GBK 或者 GB18030、GB18031 等等，这种格式不经过处理直接读取，中文会显示为乱码。所以需要执行转换的函数 iconv 转换一下。&lt;/li&gt;&lt;li data-pid=&quot;HxdKDhbW&quot;&gt;pipe：可以用来建立管道链，可以理解为 pipe 的作用就像一个管道，可以对目标流边读边写，这里我们是一边解码一边重新编码。&lt;/li&gt;&lt;li data-pid=&quot;mBJ5n0MD&quot;&gt;insertInBlock：这个函数是获取到一定数量的数据后（本例中是从 CSV 中解析出 3 万条左右数据的时候），暂停一下来执行一些操作，比如写入数据库或者对里面的数据进行过滤、处理等等，根据实际需要来定。&lt;/li&gt;&lt;li data-pid=&quot;hcjViTms&quot;&gt;csv：这个函数的作用就是读出流中的具体数据的。&lt;/li&gt;&lt;/ul&gt;&lt;p data-pid=&quot;QE_-_8Xz&quot;&gt;具体逻辑解释可以看注释。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;const chardet = require(&#x27;chardet&#x27;);
const csv = require(&#x27;fast-csv&#x27;); // 比较快解析csv的速度的工具
const iconv = require(&#x27;iconv-lite&#x27;);

const arrayFromParseCSV = []  // 存放解析出来的一行行csv数据的
let count = 0 // 计数
// resolve, reject 是外部函数传进来的，用以判断函数执行的状态，以便正确的进行后续逻辑处理
function parseAndInsertFromCSV (filePath, resolve, reject) {
  const rs = fs.createReadStream(filePath)  // 创建可读流
  // 这里的防抖和柯里化
  const delayInsert = debounce((isEnd, cb = () =&amp;gt; {}) =&amp;gt; insertInBlock(isEnd, cb, rs, resolve, reject), 300)
  /// sampleSize: 5120 表示值读取文件前5120个字节的数据，就可以判断出文件的编码类型了，不需要全部读取
  chardet.detectFile(filePath, { sampleSize: 5120 }).then(encoding =&amp;gt; {
    // 如果不是UTF-8编码，转换为utf8编码
    if (encoding !== &#x27;UTF-8&#x27;) {
      rs.pipe(iconv.decodeStream(encoding))
        .pipe(iconv.encodeStream(&#x27;UTF-8&#x27;))
        .pipe(csv.parse({ header: false, ignoreEmpty: true, trim: true })) // 解析csv
        .on(&#x27;error&#x27;, error =&amp;gt; {
          reject(`解析csv error: ${error}`)
        })
        .on(&#x27;data&#x27;, rows =&amp;gt; {
          count++ // 计数，因为我们要分块读取和操作
          arrayFromParseCSV.push(rows) // 读到就推送到数组中
          if (count &amp;gt; 30000) { // 已经读了30000行，我们就要先把这3w行处理掉，避免占用过多内存。
            rs.pause() // 暂停可读流
            delayInsert(false) // false 还没有结束。注意：即使rs.pause, 流的读取也不是立即暂停的，所以需要防抖。
          }          
        }).on(&#x27;end&#x27;, rowCount =&amp;gt; {
          console.log(`解析完${filePath}文件一共${rowCount}行`)
          delayInsert(true, () =&amp;gt; {
            rs.destroy() // 销毁流
            resolve(&#x27;ok&#x27;) // 一个文件读取完毕了
          })
        })
    }
  })
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;6gzwGRz7&quot;&gt;清洗数据和后续操作的逻辑在 insertInBlock 里。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;function insertInBlock (isEnd, cb, filePath, resolve, reject) {
  const arr = doSomethingWithData() // 可能会有一些清洗数据的操作
  // 假如我们后续的需求是将数据写入数据库
  const batchInsert = () =&amp;gt; {
    batchInsertDatabasePromise().then(() =&amp;gt; {
      if (cb &amp;amp;&amp;amp; typeof cb === &#x27;function&#x27;) cb()
      !isEnd &amp;amp;&amp;amp; rs.resume() // 这一个片段的数据写入完毕，可以恢复流继续读了
    })
  }
  
  const truely = schemaHasTable() // 比如判断数据库中有没有某个表，有就写入。没有先建表再写入。
  if (truely) { //
     batchInsert()
   } else {
     // 建表或者其他操作，然后再写入
     doSomething().then(() =&amp;gt; batchInsert())
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;UXiNvChi&quot;&gt;这样，解析和写入的流程就完成了。虽然很多业务上的代码进行了简略，但实现上大体类似这个流程。&lt;/p&gt;&lt;h3&gt;&lt;b&gt;批量解析 XLSX 文件&lt;/b&gt;&lt;/h3&gt;&lt;p data-pid=&quot;fQJOsLWr&quot;&gt;&lt;b&gt;转化成 CSV？&lt;/b&gt;&lt;/p&gt;&lt;p data-pid=&quot;q-sW64R3&quot;&gt;在前面的代码实例中，我们利用了利用可写流 fs.createWriteStream 将 XLSX 文件转换成 CSV 文件然后复用解析 CSV 。这里需要注意的是，在将数据写入 CSV 格式文件时，要在最开始写入 bom 头 \ufeff。此外也可以用 xlsx-extract 的 convert 函数，将 XLSX 文件转换成 TSV。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;const { XLSX } = require(&#x27;xlsx-extract&#x27;)
new XLSX().convert(&#x27;path/to/file.xlsx&#x27;, &#x27;path/to/destfile.tsv&#x27;)
    .on(&#x27;error&#x27;, function (err) {
        console.error(err);
    })
    .on(&#x27;end&#x27;, function () {
        console.log(&#x27;written&#x27;);
    })&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;rvZhG6Pu&quot;&gt;可能有人会疑惑，不是CSV么，怎么转换成了 TSV 呢？&lt;/p&gt;&lt;p data-pid=&quot;vV4Y1Meh&quot;&gt;其实 tsv 和CSV的区别只是字段值的分隔符不同，CSV 用逗号分隔值（Comma-separated values），而 TSVA 用的是制表符分隔值 （Tab-separated values）。前面我们用来快速解析CSV文件的 fast-csv 工具是支持选择制表符\t作为值的分隔标志的。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;import { parse } from &#x27;@fast-csv/parse&#x27;;
const stream = parse({ delimiter: &#x27;\t&#x27; })
    .on(&#x27;error&#x27;, error =&amp;gt; console.error(error))
    .on(&#x27;data&#x27;, row =&amp;gt; console.log(row))
    .on(&#x27;end&#x27;, (rowCount: number) =&amp;gt; console.log(`Parsed ${rowCount} rows`));&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;mI5TqxXo&quot;&gt;&lt;b&gt;直接解析？&lt;/b&gt;&lt;/p&gt;&lt;p data-pid=&quot;1stiVTJK&quot;&gt;那是否可以不转换成 CSV，直接解析 XLSX 文件呢 ？其实也是可行的。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;const { xslx } = require(&#x27;xlsx-extract&#x27;) // 流式解析xlsx文件工具
// parser: expat, 需要额外安装node-expat,可以提高解析速度。
new XLSX().extract(filePath, { sheet_nr: 1, parser: &#x27;expat&#x27; })
    .on(&#x27;row&#x27;, function (row) {
        // 每一行数据获取到时都可以触发
      }).on(&#x27;error&#x27;, function (err) {
        // error
     });&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;pe4e2g4f&quot;&gt;但是这种方式有一个缺陷，一旦解析开始，就无法暂停数据读取的流程。xlsx-extract 封装了 sax，没有提供暂停和继续的方法。&lt;/p&gt;&lt;p data-pid=&quot;BEBbnwU1&quot;&gt;如果我们直接用可读流去读取 XLSX 文件会怎么样呢？&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;const readStream = fs.createReadableStream(&#x27;path/to/xlsx.xlsx&#x27;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;z4mov0H3&quot;&gt;可以看到现在流中数据以 buffer 的形式存在着。但由于 xlsx 格式实际上是一个 zip 存档的压缩格式，存放着 XML 结构的文本信息。所以可读流无法直接使用，需要先解压缩。&lt;/p&gt;&lt;p data-pid=&quot;cRTDW7Ss&quot;&gt;解压缩可以使用 npm 包 unzipper 。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;const unzip = require(&#x27;unzipper&#x27;)
const zip = unzip.Parse();
rs.pipe(zip)
  .on(&#x27;entry&#x27;, function (entry) {
    console.log(&#x27;entry ---&#x27;, entry);
    const fileName = entry.path;
    const { type } = entry; // &#x27;Directory&#x27; or &#x27;File&#x27;
    const size = entry.vars.uncompressedSize; // There is also compressedSize;
    if (fileName === &quot;this IS the file I&#x27;m looking for&quot;) {
      entry.pipe(fs.createWriteStream(&#x27;output/path&#x27;));
    } else {
      entry.autodrain();
    }
  })&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;HJAGjnqj&quot;&gt;现在我们已经解压了文件。&lt;/p&gt;&lt;p data-pid=&quot;K_CJWNDN&quot;&gt;前面提到，xlsx-extract 是 封装了 sax，而 sax 本身就是用来解析 XML 文本的，那我们这里也可以使用 sax 来对可读流进行处理。&lt;/p&gt;&lt;p data-pid=&quot;_j58JPhH&quot;&gt;sax 解析的源码可以看这里，大致是根据每一个字符来判断其内容、换行、开始、结束等等，然后触发对应事件。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;const saxStream = require(&#x27;sax&#x27;).createStream(false);
saxStream.on(&#x27;error&#x27;, function (e) {
  console.error(&#x27;error!&#x27;, e);
});
saxStream.on(&#x27;opentag&#x27;, function (node) {
  console.log(&#x27;node ---&#x27;, node);
});
saxStream.on(&#x27;text&#x27;, (text) =&amp;gt; console.log(&#x27;text ---&#x27;, typeof text, text));&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;Od8hnLXS&quot;&gt;最后将两者结合起来：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;const unzip = require(&#x27;unzipper&#x27;);
const saxStream = require(&#x27;sax&#x27;).createStream(false);
const zip = unzip.Parse();

saxStream.on(&#x27;error&#x27;, function (e) {
  console.error(&#x27;error!&#x27;, e);
});
saxStream.on(&#x27;opentag&#x27;, function (node) {
  console.log(&#x27;node ---&#x27;, node);
});
saxStream.on(&#x27;text&#x27;, (text) =&amp;gt; {
    console.log(&#x27;text ---&#x27;, typeof text, text)
});

rs.pipe(zip)
  .on(&#x27;entry&#x27;, function (entry) {
    console.log(&#x27;entry ---&#x27;, entry);
    entry.pipe(saxStream)
  })&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p data-pid=&quot;6AJarcLA&quot;&gt;使用本地的XLSX文件测试后，控制台打印出以下信息：&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-473ff82967fe315af3cf9290bccc9b3f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;565&quot; data-rawheight=&quot;93&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic4.zhimg.com/v2-473ff82967fe315af3cf9290bccc9b3f_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;565&quot; data-rawheight=&quot;93&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic4.zhimg.com/v2-473ff82967fe315af3cf9290bccc9b3f_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-473ff82967fe315af3cf9290bccc9b3f_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;md8sztMc&quot;&gt;这些信息对应着XLSX文档里的这部分信息。Node 里打印的 ST SI，代表着 xml 的标签。&lt;/p&gt;&lt;figure data-size=&quot;normal&quot;&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-4e7baab84882e41be80a04f46b5fbe75_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;910&quot; data-rawheight=&quot;640&quot; class=&quot;origin_image zh-lightbox-thumb&quot; data-original=&quot;https://pic2.zhimg.com/v2-4e7baab84882e41be80a04f46b5fbe75_r.jpg&quot;/&gt;&lt;/noscript&gt;&lt;img src=&quot;&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;910&quot; data-rawheight=&quot;640&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; data-original=&quot;https://pic2.zhimg.com/v2-4e7baab84882e41be80a04f46b5fbe75_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-4e7baab84882e41be80a04f46b5fbe75_b.jpg&quot;/&gt;&lt;/figure&gt;&lt;p data-pid=&quot;87RYEw5Y&quot;&gt;这样，其实我们也拿到了 XLSX 里的数据了，只不过这些数据还需要清洗、汇总、一一对应。同时由于我们是直接在可读流上操作，自然也可以 pause、resume 流，来实现分块读取和其他操作的逻辑。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;总结&lt;/b&gt;&lt;/h2&gt;&lt;p data-pid=&quot;ke_YeQq2&quot;&gt;对体积较小的 XLSX、CSV 文件，基本 SheetJS 就可以满足各种格式文件的解析需求了，但是一旦文档体积较大，那么分片、流式读写将成为必不可少的方式。&lt;/p&gt;&lt;p data-pid=&quot;4i551qQ9&quot;&gt;通过前面例子和代码的分解，我们可以了解这类问题的解决办法，也可以拓展对类似需求的不同解决思路。一旦我们能对大体积文件的分块处理有一定的概念和了解，那么在遇到类似问题的时候，就知道实现思路在哪里了。&lt;/p&gt;&lt;p data-pid=&quot;o7andxYD&quot;&gt;&lt;b&gt;推荐阅读：&lt;/b&gt;&lt;/p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//www.upyun.com/tech/article/663/%25E7%25AE%2580%25E7%2595%25A5%25E5%259B%25BE%25E8%25A7%25A3%25EF%25BC%259A%25E8%25BE%2593%25E5%2585%25A5%2520url%2520%25E5%2588%25B0%25E5%2587%25BA%25E7%258E%25B0%25E9%25A1%25B5%25E9%259D%25A2%25EF%25BC%258C%25E6%25B5%258F%25E8%25A7%2588%25E5%2599%25A8%25E5%2581%259A%25E4%25BA%2586%25E4%25BB%2580%25E4%25B9%2588%25EF%25BC%259F.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-text=&quot;简略图解：输入 url 到出现页面，浏览器做了什么？&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://link.zhihu.com/?target=https%3A//www.upyun.com/tech/article/651/%25E6%25B2%25A1%25E7%2599%25BB%25E5%25BD%2595%25E7%25BD%2591%25E9%25A1%25B5%25E4%25B9%259F%25E8%2583%25BD%25E4%25B8%25AA%25E6%2580%25A7%25E5%258C%2596%25E6%258E%25A8%25E8%258D%2590%25EF%25BC%259F%25E4%25B8%2580%25E6%2596%2587%25E8%25AF%25A6%25E8%25A7%25A3%25E6%25B5%258F%25E8%25A7%2588%25E5%2599%25A8%25E6%258C%2587%25E7%25BA%25B9.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;https://pic1.zhimg.com/v2-f57327254d14a03410c974e93d6bcab4_180x120.jpg&quot; data-image-width=&quot;684&quot; data-image-height=&quot;313&quot; data-text=&quot;没登录网页也能个性化推荐？一文详解浏览器指纹 - 又拍云&quot; class=&quot;LinkCard new&quot;&gt;&lt;span class=&quot;LinkCard-contents&quot;&gt;&lt;span class=&quot;LinkCard-title loading&quot; data-text=&quot;true&quot;/&gt;&lt;span class=&quot;LinkCard-desc loading&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;LinkCard-image LinkCard-image--default&quot;/&gt;&lt;/a&gt;&lt;p/&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>21b14330a09d6149a5242c134137f70c</guid>
<title>Websocket 被玩出了多种花样！</title>
<link>https://toutiao.io/k/rmavgs5</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;一、首先我们要了解 Websocket 握手的原理&lt;/span&gt;&lt;/h1&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5540752351097179&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpoC4GCCpgaSlCwdbzUhSsKqiaHrg5DsFPGAwNklcR0vj8eUBN1UyVMsB0SHd6frF2QtDmjCUfEJQA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1276&quot;/&gt;&lt;/figure&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;请求头特征&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;HTTP Header 中 Connection 字段的值必须为 Upgrade&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;HTTP Header 中 Upgrade 字段必须为 websocket&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Sec-WebSocket-Key 字段的值是采用 base64 编码的随机 16 字节字符串&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Sec-WebSocket-Protocol 字段的值记录使用的子协议，比如 binary base64&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI2MjcxNTQ0Nw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/jQmwTIFl1V0dLQzNJW15CVaCoNjposvTpccciaj05o5nPiaqfLRRfTQiaYFYPN41Etrrqt8jPOWukPmJWt3lYxwuA/0?wx_fmt=png&quot; data-nickname=&quot;全栈修仙之路&quot; data-alias=&quot;FerRoad&quot; data-signature=&quot;专注分享 TS、Vue3、前端架构和源码解析等技术干货。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;响应头特征&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;状态码是 101 表示 Switching Protocols&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Upgrade / Connection / Sec-WebSocket-Protocol 和请求头一致&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;Sec-WebSocket-Accept 是通过请求头的 Sec-WebSocket-Key 生成&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;二、短连接轮询、长连接、Websocket 横向对比&lt;/span&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1. 短连接轮询&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;且通过宏任务发起，受限于 Event Loop，无法保证及时性&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2. 长连接&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;HTTP keep-alive 开启后虽然 TCP 可以复用，但是 Header 重复的问题并没有解决&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;同时 HTTP keep-alive 还有一个有效期，有效期结束后服务端会发侦查帧探查 TCP 是否有效&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;题外话：&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;HTTP keep-alive 的作用是，告知服务端持久化当前的&lt;/strong&gt; &lt;strong&gt;TCP&lt;/strong&gt; &lt;strong&gt;连接，不要立即断开，以便后续的 HTTP 请求复用它，也就是我们所说的「长连接」&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;HTTP 的 keep-alive 是为了让 TCP 活久一点，而 TCP 本身也有一个 keepalive（注意没有横杠哦）机制。这是 TCP 的一种检测连接状况的保活机制，keepalive 是 TCP 保活定时器：TCP 建立后，如果闲置没用，服务器不可能白等下去，闲置一段时间[可设置]后，服务器就会尝试向客户端发送侦测包，来判断 TCP 连接状况，如果没有收到对方的回答（ACK包），就会过一会[可设置]再侦测一次，如果多次[可设置]都没回答，就会丢弃这个 TCP 连接&lt;/p&gt;&lt;/blockquote&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5097087378640777&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIpoC4GCCpgaSlCwdbzUhSsK3npTWK7U1oib2GNFbXHnGLIPCmyjot9iaVGlxyczibtVRRXcJHaR2qwsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;618&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;（TCP keepalive 保活示意图）&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3. Websocket&lt;/span&gt;&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;和 HTTP 一样都是建立在 TCP 协议之上，但只需一次 HTTP 握手，就能建立持久性连接，后续就不走 HTTP 了,而是 WebSocket 特有的数据帧&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;数据格式轻量，且支持发送二进制数据，支持 ws 和加密的 wss&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;三、我在微信小程序中利用 WebSocket 都捣鼓了什么？&lt;/span&gt;&lt;/h1&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;1 验签鉴权及对应的容错策略（登录态要求、峰值访问、服务端宕机异常）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景与目的：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;websocket 握手后，接口请求即可以放弃 HTTP 改走 weboskcet，但大部分业务接口都要求登录态，因此握手成功后必须先走一次签名鉴权，获取登录态&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;当出现大流量访问的场景（如大促、热点活动等）或服务端出 bug 而导致服务端宕机，前端会做 对应容错，将位于内存的等待队列中的待发送请求立即降级成 HTTP 发送出去&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪码示意：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;SocketTask.onOpen(&lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;/span&gt; () {&lt;br/&gt;  SocketTask.sendSocketMessage({&lt;br/&gt;     msg_type: &lt;span&gt;&#x27;验签&#x27;&lt;/span&gt;，&lt;br/&gt;     token: &lt;span&gt;&#x27;xxx&#x27;&lt;/span&gt;&lt;br/&gt;  }, (response) =&amp;gt; {&lt;br/&gt;      console.log(response.user_id, response.access_token)&lt;br/&gt;&lt;br/&gt;      // 通道可用，打个标记&lt;br/&gt;      global.isSocketAvaliable = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;  })&lt;br/&gt;})&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;2 心跳保活（减少 TCP 占用）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景与目的：为了减少 TCP 连接的无效占用，客户端定时发送一个空包到服务端，告知服务端不要销毁这条 socket，如果服务端超过一定时间都没收到心跳包，则将关闭并销毁该 socket&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪码示意：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;SocketTask.onOpen(&lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;/span&gt; () {&lt;br/&gt;  SocketTask.sendSocketMessage({&lt;br/&gt;     msg_type: &lt;span&gt;&#x27;验签&#x27;&lt;/span&gt;，&lt;br/&gt;     token: &lt;span&gt;&#x27;xxx&#x27;&lt;/span&gt;&lt;br/&gt;  }, (response) =&amp;gt; {&lt;br/&gt;      console.log(response.user_id, response.access_token)&lt;br/&gt;&lt;br/&gt;      // 通道可用，打个标记&lt;br/&gt;      global.isSocketAvaliable = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;      &lt;br/&gt;      // 验签成功，开始定时发送心跳包&lt;br/&gt;      setInterval(() =&amp;gt; {&lt;br/&gt;          SocketTask.sendSocketMessage({&lt;br/&gt;            msg_type: &lt;span&gt;&#x27;心跳&#x27;&lt;/span&gt;&lt;br/&gt;          });&lt;br/&gt;      });&lt;br/&gt;   });&lt;br/&gt;})&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;3 模拟 RTT（用于弱网体验优化）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景与目的：在发送心跳包时，可得知一个心跳包的 RTT，以此模拟当前用户网络环境的 TCP RTT，并据此计算出平滑 RTO，用于弱网体验优化&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪码示意：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;SocketTask.onOpen(&lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;/span&gt; () {&lt;br/&gt;  SocketTask.sendSocketMessage({&lt;br/&gt;     msg_type: &lt;span&gt;&#x27;验签&#x27;&lt;/span&gt;，&lt;br/&gt;     token: &lt;span&gt;&#x27;xxx&#x27;&lt;/span&gt;&lt;br/&gt;  }, (response) =&amp;gt; {&lt;br/&gt;      console.log(response.user_id, response.access_token)&lt;br/&gt;&lt;br/&gt;      // 通道可用，打个标记&lt;br/&gt;      global.isSocketAvaliable = &lt;span&gt;true&lt;/span&gt;;&lt;br/&gt;      &lt;br/&gt;      // 验签成功，开始定时发送心跳包&lt;br/&gt;      setInterval(() =&amp;gt; {&lt;br/&gt;          // 计算 RTT&lt;br/&gt;          const begin = Date.now();&lt;br/&gt;&lt;br/&gt;          SocketTask.sendSocketMessage({&lt;br/&gt;            msg_type: &lt;span&gt;&#x27;心跳&#x27;&lt;/span&gt;&lt;br/&gt;          }, () =&amp;gt; {&lt;br/&gt;            const end = Date.now();&lt;br/&gt;            &lt;br/&gt;            const RTT = begin - end;&lt;br/&gt;            &lt;br/&gt;            const smoothedRTO = cal(RTT);&lt;br/&gt;            &lt;br/&gt;            global.smoothedRTO = smoothedRTO;&lt;br/&gt;          });&lt;br/&gt;      });&lt;br/&gt;   });&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;4 Snappy 压缩（横向对比了 gzip / zip / 7z）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景与目的：在小程序中引入第三方压缩包（牺牲小程序包体积），减少 websocket 传输的字节数&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪码示意：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;  import Snappy from &lt;span&gt;&#x27;snappy&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;  SocketTask.sendSocketMessage = &lt;span&gt;function&lt;/span&gt; (msg) {&lt;br/&gt;     const encryptedMsg = Snappy.encode(msg);&lt;br/&gt;     &lt;br/&gt;     wx.send(encryptedMsg);&lt;br/&gt;  }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;5 重连（阶梯式错位重连，避免拥挤）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景与目的：用户的网络环境不稳定，可能会存在主动 / 被动断开 socket 的情况，需要进行自动重连&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪码示意：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;SocketTask.onClose(&lt;span&gt;&lt;span&gt;function&lt;/span&gt;&lt;/span&gt; () {&lt;br/&gt;  // 限定最大重连次数&lt;br/&gt;  &lt;span&gt;if&lt;/span&gt; (retryCount &amp;gt; maxCount) {&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt;;&lt;br/&gt;  }&lt;br/&gt;  &lt;br/&gt;  retryCount++;&lt;br/&gt;&lt;br/&gt;  setTimeout(() =&amp;gt; {&lt;br/&gt;    SocketTask.connectSocket();&lt;br/&gt;  }, retryCount * 1000 + Math.random() * 1000);&lt;br/&gt;});&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;6 埋点中间层缓存（重复的用户信息可以不用每次都上报，支持刷新缓存）&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;背景与目的：为减少网络传输的包体积，通过 websocket 上报埋点日志时，可以把部分重复字段值在第一次上报时缓存在服务端，从第二次上报开始只上报值不重复的字段，然后由服务端做日志合并&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;伪码示意：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;SocketTask.sendSocketMessage({&lt;br/&gt;     msg_type: &lt;span&gt;&#x27;埋点日志&#x27;&lt;/span&gt;，&lt;br/&gt;     logs: {&lt;br/&gt;       country: &lt;span&gt;&#x27;China&#x27;&lt;/span&gt;, // 可缓存字段&lt;br/&gt;       city: &lt;span&gt;&#x27;北京&#x27;&lt;/span&gt;, // 可缓存字段&lt;br/&gt;       platform: &lt;span&gt;&#x27;安卓&#x27;&lt;/span&gt;, // 可缓存字段&lt;br/&gt;       click_some_btn: &lt;span&gt;true&lt;/span&gt; // 动态变化的埋点字段&lt;br/&gt;     },&lt;br/&gt;     cacheFields: [&lt;span&gt;&#x27;country&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;city&#x27;&lt;/span&gt;, &lt;span&gt;&#x27;platform&#x27;&lt;/span&gt;] // 只在第一次上报时携带&lt;br/&gt; });&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;7 启用 TCP_NODELAY&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;TCP_NODELAY 是用来禁用 Nagle 算法的。Nagle 算法设计的目的是提高网络带宽利用率，其核心思路是「合并小的 TCP 包为一个大的 TCP 包」，避免过多的小包的 TCP 头部浪费网络带宽&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;参考资料：https://www.zhihu.com/question/42308970&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI2MjcxNTQ0Nw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/jQmwTIFl1V0dLQzNJW15CVaCoNjposvTpccciaj05o5nPiaqfLRRfTQiaYFYPN41Etrrqt8jPOWukPmJWt3lYxwuA/0?wx_fmt=png&quot; data-nickname=&quot;全栈修仙之路&quot; data-alias=&quot;FerRoad&quot; data-signature=&quot;专注分享 TS、Vue3、前端架构和源码解析等技术干货。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7563ba8a68664d0ded15713b6b08b948</guid>
<title>浅谈在线文档的那些事儿</title>
<link>https://toutiao.io/k/4xgpvmw</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;前言&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对前端来说开发一个在线文档需要啥技术呢？想一下，开发一个在线文档我们可能要解决的问题：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;最基础的文本编辑功能(哦？好像textarea就可以完成，那如果是富文本呢？)我们需要一个&lt;strong&gt;文档模型&lt;/strong&gt;来描述文档；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;协同功能&lt;/strong&gt;，不同的用户对同一份文档的编辑需要保持大家看到的都是一样的；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;协同网络模型&lt;/strong&gt;，保证服务器和客户端之间的文档模型一致；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;名词解释&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;OT&lt;/strong&gt;：一种解决协同问题的算法；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;OP&lt;/strong&gt;：operation的简称，在OT中指的是一次操作；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;etherpad&lt;/strong&gt;: 一个实现文档协同功能的开源库；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;easysync&lt;/strong&gt;: etherpad中实现文档协同的核心算法，是OT算法的一种，主要用来处理文本协同；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;ot-json&lt;/strong&gt;：ot算法的一种，顾名思义，是主要用来处理结构化数据；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Changeset&lt;/strong&gt;: 一种描述文档更改的数据格式，用来表示整个文档的一次修改；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;ClientVars&lt;/strong&gt; &lt;strong&gt;：&lt;/strong&gt; 表示一篇文档的初始化数据，一般由连续的changeset组合而成；&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;符号解释&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;|&lt;/code&gt; ：移动光标；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;·&lt;/code&gt;：叠加；&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;正文&lt;/span&gt;&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;OT算法&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;什么是OT算法呢？我们先从头说起，如果要实现一个多人共同编辑文档的功能，我们最简单暴力的做法是啥？&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;编辑锁&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;顾名思义，假如A在编辑文档，服务端直接将这个文档加锁，B如果在这个时候也加入了编辑，由于锁的存在，B的编辑直接被丢弃。可以看出，这种编辑锁的实现方式非常粗暴，体验极其糟糕，当然了，在很多公司(比如我们的某死对头公司)的一些wiki系统就是用这种实现方式，由于这种实现方式比较简单，而且体验很糟糕(内容丢失 &amp;amp; 无法实时)，我们这里就不做讨论了。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Linux中的diff-patch&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Linux中有两个命令：diff和patch；如果我们能在JS中实现这套算法，那么多人协同编辑可以这样做：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用户打开文档后和服务端建立长链接，保存文档副本；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;用户编辑的时候如果有停顿(比如3s)，则将现有的文档和副本进行diff对比，将结果传给服务端，更新副本；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;服务端更新文档，将diff结果通过长链接通知到其它用户，其它用户使用patch方法更新本地的文档；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们来测试下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 本地文档&lt;/span&gt;&lt;br/&gt;$ &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&#x27;复仇者联盟&lt;br/&gt;钢铁侠&lt;br/&gt;美国队长&#x27;&lt;/span&gt; &amp;gt; &lt;span&gt;test&lt;/span&gt;-local.txt&lt;br/&gt;&lt;span&gt;# 生成用户A编辑后的文档&lt;/span&gt;&lt;br/&gt;$ &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&#x27;复仇者联盟&lt;br/&gt;钢铁侠&lt;br/&gt;绿巨人&#x27;&lt;/span&gt; &amp;gt; &lt;span&gt;test&lt;/span&gt;-userA.txt&lt;br/&gt;&lt;span&gt;# diff两个文档&lt;/span&gt;&lt;br/&gt;$ diff &lt;span&gt;test&lt;/span&gt;-local.txt &lt;span&gt;test&lt;/span&gt;-userA.txt &amp;gt; diff-test.patch&lt;br/&gt;&lt;span&gt;# 查看diff-test.patch内容&lt;/span&gt;&lt;br/&gt;$ cat diff-test.patch&lt;br/&gt;3c3&lt;br/&gt;&amp;lt; 美国队长&lt;br/&gt;---&lt;br/&gt;&amp;gt; 绿巨人&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从diff-test.patch内容可以看出，已经找出了两个文档不同的地方，然后我们再模拟下用户B的行为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 生成用户B编辑的文档&lt;/span&gt;&lt;br/&gt;$ &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&#x27;复仇者联盟&lt;br/&gt;黑寡妇&lt;br/&gt;美国队长&#x27;&lt;/span&gt; &amp;gt; &lt;span&gt;test&lt;/span&gt;-userB.txt&lt;br/&gt;&lt;span&gt;# patch方法更新文档&lt;/span&gt;&lt;br/&gt;$ patch &lt;span&gt;test&lt;/span&gt;-userB.txt &amp;lt; diff-test.patch&lt;br/&gt;&lt;span&gt;# 查看test-userB.txt内容&lt;/span&gt;&lt;br/&gt;$ cat &lt;span&gt;test&lt;/span&gt;-userB.txt&lt;br/&gt;复仇者联盟&lt;br/&gt;黑寡妇&lt;br/&gt;绿巨人 &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到，用户B文档的第三行已经更新为了用户A修改后的“&lt;strong&gt;绿巨人&lt;/strong&gt;”。&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;但这种实现方式有个问题，因为他是基于行来进行对比的，就会导致很容易出现冲突，比如：&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 生成文件1&lt;/span&gt;&lt;br/&gt;$ &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&#x27;复仇者联盟&#x27;&lt;/span&gt; &amp;gt; local.txt&lt;br/&gt;&lt;span&gt;# 生成文件2&lt;/span&gt;&lt;br/&gt;$ &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&#x27;复仇者联盟钢铁侠&#x27;&lt;/span&gt; &amp;gt; userA.txt&lt;br/&gt;&lt;span&gt;# diff对比&lt;/span&gt;&lt;br/&gt;$ diff local.txt userA.txt &amp;gt; diff.patch &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;查看diff.patch内容：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;1c1&lt;br/&gt;&amp;lt; 复仇者联盟&lt;br/&gt;---&lt;br/&gt;&amp;gt; 复仇者联盟钢铁侠&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这就意味着如果两个人同时修改同一行，那必然就会产生冲突，我们测试下:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# 生成文件3&lt;/span&gt;&lt;br/&gt;$ &lt;span&gt;echo&lt;/span&gt; &lt;span&gt;&#x27;复仇者联盟美国队长&#x27;&lt;/span&gt; &amp;gt; userB.txt&lt;br/&gt;&lt;span&gt;# patch&lt;/span&gt;&lt;br/&gt;$ patch userB.txt &amp;lt; diff.patch &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上我们发现，假如原始文档是“&lt;strong&gt;复仇者联盟&lt;/strong&gt;”，用户A修改为“&lt;strong&gt;复仇者联盟钢铁侠&lt;/strong&gt;”，将diff结果传给服务端，服务端传给用户B，而用户B只是将文档改为了“&lt;strong&gt;复仇者联盟美国队长&lt;/strong&gt;”，直觉上我们可以看出，这两处是不冲突的，完全可以合并成“&lt;strong&gt;复仇者联盟钢铁侠美国队长&lt;/strong&gt;”，但实际上的patch结果却是这样的：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;$ cat userB.txt.rej&lt;br/&gt;***************&lt;br/&gt;*** 1&lt;br/&gt;- 复仇者联盟&lt;br/&gt;--- 1 -----&lt;br/&gt;+ 复仇者联盟钢铁侠&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此这种基于行的算法还是比较粗糙，体验上比编辑锁虽然好了一点，但实际弊端还是比较大，既然基于行的实现无法满足需求，那有木有可能去基于字符进行diff呢？&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;diff-patch算法&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;diff-match-patch&lt;/span&gt;&lt;sup&gt;[1]&lt;/sup&gt;是另一种diff-patch算法的实现，它是基于字符去进行diff的，这里不介绍该算法的细节了，它的算法在这：&lt;span&gt;diff-match-patch JS实现源码&lt;/span&gt;&lt;sup&gt;[2]&lt;/sup&gt;。我们直接测试下它的效果&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;// 示例1&lt;br/&gt;const localText = &lt;span&gt;&#x27;复仇者联盟&#x27;&lt;/span&gt;;&lt;br/&gt;const userAText = &lt;span&gt;&#x27;复仇者联盟钢铁侠&#x27;&lt;/span&gt;;&lt;br/&gt;const userBText = &lt;span&gt;&#x27;复仇者联盟美国队长&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;// 结果为：复仇者联盟钢铁侠美国队长&lt;br/&gt;// 示例2&lt;br/&gt;const localText = &lt;span&gt;&#x27;复仇者联盟&#x27;&lt;/span&gt;;&lt;br/&gt;const userAText = &lt;span&gt;&#x27;复仇者联盟美国队长&#x27;&lt;/span&gt;;&lt;br/&gt;const userBText = &lt;span&gt;&#x27;复仇者联盟钢铁侠&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;// 结果为：复仇者联盟钢铁侠美国队长&lt;br/&gt;// 示例3&lt;br/&gt;const localText = &lt;span&gt;&#x27;复仇者联盟&#x27;&lt;/span&gt;;&lt;br/&gt;const userAText = &lt;span&gt;&#x27;复仇者联盟 美国队长&#x27;&lt;/span&gt;;&lt;br/&gt;const userBText = &lt;span&gt;&#x27;复仇者联盟 钢铁侠&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;// 结果为：复仇者联盟 美国队长 钢铁侠&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上示例已经解决了Linux的diff-patch基于行diff的弊端，但仍然存在问题，如上的示例1和示例2如果没有符号分割，那么结果是一样的。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const localText = &lt;span&gt;&#x27;复仇者 Iron Man&#x27;&lt;/span&gt;;&lt;br/&gt;const userAText = &lt;span&gt;&#x27;Iron Man 钢铁侠&#x27;&lt;/span&gt;;&lt;br/&gt;const userBText = &lt;span&gt;&#x27;复仇者 Caption&#x27;&lt;/span&gt;;&lt;br/&gt;// 结果为：Caption&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;原始文档为“&lt;strong&gt;复仇者 Iron Man&lt;/strong&gt;”，用户A修改为了“&lt;strong&gt;Iron Man 钢铁侠&lt;/strong&gt;”，用户B修改为了“&lt;strong&gt;复仇者 Caption&lt;/strong&gt;”，直觉上其实可以合并为“&lt;strong&gt;Caption 钢铁侠&lt;/strong&gt;”，但实际上却修改为了“&lt;strong&gt;Caption&lt;/strong&gt; ”(注意Caption后面有个空格，钢铁侠没了)，也就是说diff-match-patch存在丢字符的情况，这个富文本格式的文档中会是致命的问题，比如丢失了某个 &lt;strong&gt;&amp;gt;&lt;/strong&gt; 可能整个文档都会乱掉，那么有木有既解决了行匹配冲突问题又解决了丢字符问题的解决方案呢？答案就是本文的重点——OT算法&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;operation transformation&lt;span/&gt;&lt;/h4&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;示例&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;ot.js&lt;/span&gt;&lt;sup&gt;[3]&lt;/sup&gt;是针对纯文本的一种JS实现，我们看下它的实现效果，针对同样的示例：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const str = &lt;span&gt;&#x27;复仇者 Iron Man&#x27;&lt;/span&gt;;&lt;br/&gt;const operation0 = new ot.TextOperation().delete(&lt;span&gt;&#x27;复仇者 &#x27;&lt;/span&gt;).retain(8).insert(&lt;span&gt;&#x27; 钢铁侠&#x27;&lt;/span&gt;);&lt;br/&gt;const operation1 = new ot.TextOperation().retain(4).delete(&lt;span&gt;&#x27;Iron Man&#x27;&lt;/span&gt;).insert(&lt;span&gt;&#x27;Captain&#x27;&lt;/span&gt;);&lt;br/&gt;&lt;br/&gt;const op = ot.TextOperation.transform(operation0, operation1);&lt;br/&gt;// 结果：Captain 钢铁侠&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到这正是符合我们预期的结果。&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;原理&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;看了很多讲OT的文档，基本每一篇都很长，云山雾罩，但其实它的核心原理很简单。在OT中，我们将文档的操作分为三个类型，通过组合这三个原子操作完成对整个文档的编辑工作：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt; 实际上diff-match-patch算法也将操作分为三类：insert，delete，equal(不变的字符)，insert、delete和OT中含义类似，equal是指对比diff过程中那些没有改变的字符，diff-match-patch会给这些不同类型的字符打标，后面patch的时候再根据不同类型的字符做对应的逻辑处理。&lt;/p&gt;&lt;/blockquote&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;insert&lt;span/&gt;&lt;/h6&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;|&lt;/p&gt;&lt;p&gt;复仇者联盟|&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上|代表的是光标的位置，从上到下模拟用户操作的行为，以上操作使用ot.js来描述：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const str = &lt;span&gt;&#x27;&#x27;&lt;/span&gt;;&lt;br/&gt;const operation = new ot.TextOperation().insert(&lt;span&gt;&#x27;复仇者联盟&#x27;&lt;/span&gt;);&lt;br/&gt;const result = operation.apply(str); &lt;br/&gt;console.log(result); // 复仇者联盟&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;op创建时会有一个虚拟光标位于字符的开头，在一个op结束时，光标一定要在字符串的末尾，其中insert会自动移动光标位置，因此我们这里不需要手动去移动光标；&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;retain&lt;span/&gt;&lt;/h6&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;|复仇者联盟&lt;/p&gt;&lt;p&gt;复仇者联盟|&lt;/p&gt;&lt;p&gt;复仇者联盟钢铁侠|&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上过程用ot.js来描述：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const str = &lt;span&gt;&#x27;复仇者联盟&#x27;&lt;/span&gt;;&lt;br/&gt;const operation = new ot.TextOperation().retain(5).insert(&lt;span&gt;&#x27;钢铁侠&#x27;&lt;/span&gt;);&lt;br/&gt;const result = operation.apply(str); &lt;br/&gt;console.log(result);// 复仇者联盟钢铁侠&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;delete&lt;span/&gt;&lt;/h6&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;|复仇者联盟钢铁侠&lt;/p&gt;&lt;p&gt;复仇者联盟|钢铁侠&lt;/p&gt;&lt;p&gt;复仇者联盟|&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上过程用ot.js描述：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; const str = &lt;span&gt;&#x27;复仇者联盟钢铁侠&#x27;&lt;/span&gt;;&lt;br/&gt;const operation = new ot.TextOperation().retain(5).delete(&lt;span&gt;&#x27;钢铁侠&#x27;&lt;/span&gt;);&lt;br/&gt;const result = operation.apply(str); &lt;br/&gt;console.log(result);// 复仇者联盟&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;删除字符时可以输入字符，也可以输入字符数，实际上源码中是直接取的&lt;code&gt;&#x27;钢铁侠&#x27;.length&lt;/code&gt; 因此对于delete中字符串而言，只要长度正确就可以达到目的，上面代码改成&lt;code&gt;delete(&#x27;123&#x27;)&lt;/code&gt;不会有任何影响。&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;transform&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面的代码我们看到过ot.js的这个方法，正是这个方法实现了diff-match-patch的丢失字符的问题，而transform正是OT中的核心方法。我们先不罗列他的源码，先看几个例子：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例1&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原始文档内容(空白文档)：|&lt;/p&gt;&lt;p&gt;用户A编辑后的文档内容：钢铁侠&lt;/p&gt;&lt;p&gt;用户B编辑后的文档内容：雷神&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对应代码实现：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const str = &lt;span&gt;&#x27; &#x27;&lt;/span&gt;;&lt;br/&gt;const operation0 = new ot.TextOperation().insert(&lt;span&gt;&#x27;钢铁侠&#x27;&lt;/span&gt;);&lt;br/&gt;const operation1 = new ot.TextOperation().insert(&lt;span&gt;&#x27;雷神&#x27;&lt;/span&gt;);&lt;br/&gt;const op = ot.TextOperation.transform(operation0, operation1);&lt;br/&gt;console.log(&lt;span&gt;&#x27;transform后op操作：&#x27;&lt;/span&gt;, op[0].toString(), &lt;span&gt;&#x27; | &#x27;&lt;/span&gt;, op[1].toString()); &lt;br/&gt;// transform后op操作：insert &lt;span&gt;&#x27;钢铁侠&#x27;&lt;/span&gt;, retain 2  |  retain 3, insert &lt;span&gt;&#x27;雷神&#x27;&lt;/span&gt;&lt;br/&gt;console.log(&lt;span&gt;&#x27;transform后操作后的字符串：&#x27;&lt;/span&gt;, op[0].apply(operation1.apply(str)), &lt;span&gt;&#x27; | &#x27;&lt;/span&gt;, op[1].apply(operation0.apply(str))); &lt;br/&gt;// transform后操作后的字符串： 钢铁侠雷神  |  钢铁侠雷神&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终结果是“&lt;strong&gt;钢铁侠雷神&lt;/strong&gt;”；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;transform的操作过程：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;循环次数&lt;/th&gt;&lt;th&gt;op1&lt;/th&gt;&lt;th&gt;op2&lt;/th&gt;&lt;th&gt;operation1prime&lt;/th&gt;&lt;th&gt;operation2prime&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;insert(&#x27;钢铁侠&#x27;)&lt;/td&gt;&lt;td&gt;retain(3)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;undefined&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;retain(2)&lt;/td&gt;&lt;td&gt;insert(&#x27;雷神&#x27;)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例2&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原始文档：复仇者联盟&lt;/p&gt;&lt;p&gt;用户A：复仇者钢铁侠联盟&lt;/p&gt;&lt;p&gt;用户B：复仇者联盟美国队长&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对应代码实现：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const str = &lt;span&gt;&#x27;复仇者联盟&#x27;&lt;/span&gt;;&lt;br/&gt;const operation0 = new ot.TextOperation().retain(3).insert(&lt;span&gt;&#x27;钢铁侠&#x27;&lt;/span&gt;).retain(2);&lt;br/&gt;const operation1 = new ot.TextOperation().retain(5).insert(&lt;span&gt;&#x27;美国队长&#x27;&lt;/span&gt;);&lt;br/&gt;const op = ot.TextOperation.transform(operation0, operation1);&lt;br/&gt;console.log(&lt;span&gt;&#x27;transform后op操作：&#x27;&lt;/span&gt;, op[0].toString(), &lt;span&gt;&#x27; | &#x27;&lt;/span&gt;, op[1].toString());&lt;br/&gt;// transform后op操作：retain 3, insert &lt;span&gt;&#x27;钢铁侠&#x27;&lt;/span&gt;, retain 6  |  retain 8, insert &lt;span&gt;&#x27;美国队长&#x27;&lt;/span&gt;&lt;br/&gt;console.log(&lt;span&gt;&#x27;transform后操作后的字符串：&#x27;&lt;/span&gt;, op[0].apply(operation1.apply(str)), &lt;span&gt;&#x27; | &#x27;&lt;/span&gt;, op[1].apply(operation0.apply(str)));&lt;br/&gt;// transform后操作后的字符串： 复仇者钢铁侠联盟美国队长  |  复仇者钢铁侠联盟美国队长&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终结果是“&lt;strong&gt;复仇者钢铁侠联盟美国队长&lt;/strong&gt;”；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;transform的操作过程：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;循环次数&lt;/th&gt;&lt;th&gt;op1&lt;/th&gt;&lt;th&gt;op2&lt;/th&gt;&lt;th&gt;operation1prime&lt;/th&gt;&lt;th&gt;operation2prime&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;retain(3)&lt;/td&gt;&lt;td&gt;retain(3)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;&#x27;钢铁侠&#x27;&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;insert(&#x27;钢铁侠&#x27;)&lt;/td&gt;&lt;td&gt;retain(3)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;retain(2)&lt;/td&gt;&lt;td&gt;retain(2)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;undefined&lt;/td&gt;&lt;td&gt;&#x27;美国队长&#x27;&lt;/td&gt;&lt;td&gt;retain(4)&lt;/td&gt;&lt;td&gt;insert(&#x27;美国队长&#x27;)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例3&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原始文档：复仇者联盟钢铁侠美国队长&lt;/p&gt;&lt;p&gt;用户A：复仇者联盟钢铁侠&lt;/p&gt;&lt;p&gt;用户B：复仇者联盟美国队长&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对应代码实现：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const str = &lt;span&gt;&#x27;复仇者联盟钢铁侠美国队长&#x27;&lt;/span&gt;;&lt;br/&gt;const operation0 = new ot.TextOperation().retain(5).delete(&lt;span&gt;&#x27;钢铁侠&#x27;&lt;/span&gt;).retain(4);&lt;br/&gt;const operation1 = new ot.TextOperation().retain(8).delete(&lt;span&gt;&#x27;美国队长&#x27;&lt;/span&gt;);&lt;br/&gt;const op = ot.TextOperation.transform(operation0, operation1);&lt;br/&gt;console.log(&lt;span&gt;&#x27;transform后op操作：&#x27;&lt;/span&gt;, op[0].toString(), &lt;span&gt;&#x27; | &#x27;&lt;/span&gt;, op[1].toString());&lt;br/&gt;// transform后op操作：retain 5, delete 3  |  retain 5, delete 4&lt;br/&gt;console.log(&lt;span&gt;&#x27;transform后操作后的字符串：&#x27;&lt;/span&gt;, op[0].apply(operation1.apply(str)), &lt;span&gt;&#x27; | &#x27;&lt;/span&gt;, op[1].apply(operation0.apply(str)));&lt;br/&gt;// transform后操作后的字符串： 复仇者联盟  |  复仇者联盟&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终结果是“&lt;strong&gt;复仇者联盟&lt;/strong&gt;”；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;操作过程：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;循环次数&lt;/th&gt;&lt;th&gt;op1&lt;/th&gt;&lt;th&gt;op2&lt;/th&gt;&lt;th&gt;operation1prime&lt;/th&gt;&lt;th&gt;operation2prime&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;retain(5)&lt;/td&gt;&lt;td&gt;retain(5)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;-3&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;delete(3)&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;-4&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;delete(4)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终结果是“&lt;strong&gt;复仇者联盟&lt;/strong&gt;”；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例4&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;原始文档：复仇者联盟钢铁侠美国队长&#x27;&lt;/p&gt;&lt;p&gt;用户A：复仇者联盟&lt;/p&gt;&lt;p&gt;用户B：复仇者联盟美国队长&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对应代码实现：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const str = &lt;span&gt;&#x27;复仇者联盟钢铁侠美国队长&#x27;&lt;/span&gt;;&lt;br/&gt;const operation0 = new ot.TextOperation().retain(5).delete(&lt;span&gt;&#x27;钢铁侠美国队长&#x27;&lt;/span&gt;);&lt;br/&gt;const operation1 = new ot.TextOperation().retain(5).delete(&lt;span&gt;&#x27;钢铁侠&#x27;&lt;/span&gt;).retain(4);&lt;br/&gt;const op = ot.TextOperation.transform(operation0, operation1);&lt;br/&gt;console.log(&lt;span&gt;&#x27;transform后op操作：&#x27;&lt;/span&gt;, op[0].toString(), &lt;span&gt;&#x27; | &#x27;&lt;/span&gt;, op[1].toString());&lt;br/&gt;//transform后op操作：retain 5, delete 4  |  retain 5&lt;br/&gt;console.log(&lt;span&gt;&#x27;transform后操作后的字符串：&#x27;&lt;/span&gt;, op[0].apply(operation1.apply(str)), &lt;span&gt;&#x27; | &#x27;&lt;/span&gt;, op[1].apply(operation0.apply(str)));&lt;br/&gt;// transform后操作后的字符串： 复仇者联盟  |  复仇者联盟&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终结果是“&lt;strong&gt;复仇者联盟&lt;/strong&gt;”；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;操作过程：&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;循环次数&lt;/th&gt;&lt;th&gt;op1&lt;/th&gt;&lt;th&gt;op2&lt;/th&gt;&lt;th&gt;operation1prime&lt;/th&gt;&lt;th&gt;operation2prime&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;retain(5)&lt;/td&gt;&lt;td&gt;retain(5)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;-7&lt;/td&gt;&lt;td&gt;-3&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;-4&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;delete(4)&lt;/td&gt;&lt;td&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;ot.js中transform的源码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; TextOperation.transform = &lt;span&gt;function&lt;/span&gt; (operation1, operation2) {&lt;br/&gt;    // ...&lt;br/&gt;    var operation1prime = new TextOperation();&lt;br/&gt;    var operation2prime = new TextOperation();&lt;br/&gt;    var ops1 = operation1.ops, ops2 = operation2.ops;&lt;br/&gt;    var i1 = 0, i2 = 0;&lt;br/&gt;    var op1 = ops1[i1++], op2 = ops2[i2++];&lt;br/&gt;    &lt;span&gt;while&lt;/span&gt; (&lt;span&gt;true&lt;/span&gt;) {&lt;br/&gt;      //...&lt;br/&gt;      // 对应示例1第一次循环的操作逻辑&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (isInsert(op1)) {&lt;br/&gt;        operation1prime.insert(op1);&lt;br/&gt;        operation2prime.retain(op1.length);&lt;br/&gt;        op1 = ops1[i1++];&lt;br/&gt;        &lt;span&gt;continue&lt;/span&gt;;&lt;br/&gt;      }&lt;br/&gt;      // 对应示例1第二次循环的操作逻辑&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (isInsert(op2)) {&lt;br/&gt;        operation1prime.retain(op2.length);&lt;br/&gt;        operation2prime.insert(op2);&lt;br/&gt;        op2 = ops2[i2++];&lt;br/&gt;        &lt;span&gt;continue&lt;/span&gt;;&lt;br/&gt;      }&lt;br/&gt;      // ...&lt;br/&gt;&lt;br/&gt;      var minl;&lt;br/&gt;      // 对应示例2循环&lt;br/&gt;      &lt;span&gt;if&lt;/span&gt; (isRetain(op1) &amp;amp;&amp;amp; isRetain(op2)) {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (op1 &amp;gt; op2) {&lt;br/&gt;          minl = op2;&lt;br/&gt;          op1 = op1 - op2;&lt;br/&gt;          op2 = ops2[i2++];&lt;br/&gt;        // 对应示例2第三次循环的操作逻辑&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (op1 === op2) {&lt;br/&gt;          minl = op2;&lt;br/&gt;          op1 = ops1[i1++];&lt;br/&gt;          op2 = ops2[i2++];&lt;br/&gt;        // 对应示例2的第一次循环操作逻辑&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;          minl = op1;&lt;br/&gt;          op2 = op2 - op1;&lt;br/&gt;          op1 = ops1[i1++];&lt;br/&gt;        }&lt;br/&gt;        operation1prime.retain(minl);&lt;br/&gt;        operation2prime.retain(minl);&lt;br/&gt;       // 对应示例4的第二次循环&lt;br/&gt;      } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (isDelete(op1) &amp;amp;&amp;amp; isDelete(op2)) {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (-op1 &amp;gt; -op2) {&lt;br/&gt;          op1 = op1 - op2;&lt;br/&gt;          op2 = ops2[i2++];&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (op1 === op2) {&lt;br/&gt;          op1 = ops1[i1++];&lt;br/&gt;          op2 = ops2[i2++];&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;          op2 = op2 - op1;&lt;br/&gt;          op1 = ops1[i1++];&lt;br/&gt;        }&lt;br/&gt;      // 示例3的第二次循环&lt;br/&gt;      } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (isDelete(op1) &amp;amp;&amp;amp; isRetain(op2)) {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (-op1 &amp;gt; op2) {&lt;br/&gt;          minl = op2;&lt;br/&gt;          op1 = op1 + op2;&lt;br/&gt;          op2 = ops2[i2++];&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (-op1 === op2) {&lt;br/&gt;          minl = op2;&lt;br/&gt;          op1 = ops1[i1++];&lt;br/&gt;          op2 = ops2[i2++];&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;          minl = -op1;&lt;br/&gt;          op2 = op2 + op1;&lt;br/&gt;          op1 = ops1[i1++];&lt;br/&gt;        }&lt;br/&gt;        operation1prime[&lt;span&gt;&#x27;delete&#x27;&lt;/span&gt;](minl &lt;span&gt;&quot;&#x27;delete&#x27;&quot;&lt;/span&gt;);&lt;br/&gt;      // 示例3的第三次循环&lt;br/&gt;      } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (isRetain(op1) &amp;amp;&amp;amp; isDelete(op2)) {&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; (op1 &amp;gt; -op2) {&lt;br/&gt;          minl = -op2;&lt;br/&gt;          op1 = op1 + op2;&lt;br/&gt;          op2 = ops2[i2++];&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; &lt;span&gt;if&lt;/span&gt; (op1 === -op2) {&lt;br/&gt;          minl = op1;&lt;br/&gt;          op1 = ops1[i1++];&lt;br/&gt;          op2 = ops2[i2++];&lt;br/&gt;        } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;          minl = op1;&lt;br/&gt;          op2 = op2 + op1;&lt;br/&gt;          op1 = ops1[i1++];&lt;br/&gt;        }&lt;br/&gt;        operation2prime[&lt;span&gt;&#x27;delete&#x27;&lt;/span&gt;](minl &lt;span&gt;&quot;&#x27;delete&#x27;&quot;&lt;/span&gt;);&lt;br/&gt;      } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;        throw new Error( The two operations aren&lt;span&gt;&#x27;t compatible );&lt;br/&gt;      }&lt;br/&gt;    }&lt;br/&gt;&lt;br/&gt;    return [operation1prime, operation2prime];&lt;br/&gt;  };&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上4个示例覆盖了&lt;code&gt;transform&lt;/code&gt;所有分支的操作。核心原理其实很简单，就是通过循环去将两个操作重新进行排列组合，按照操作的类型作出不同的逻辑处理，这是OT中非常核心的方法，除此之外还有&lt;code&gt;compose&lt;/code&gt;，&lt;code&gt;apply&lt;/code&gt;等方法，这里就不一一罗列了。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面过程经常用一个菱形图来表示transform过程：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3685393258426966&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIoylyjoWNUXRAfLeTicZuP9tnFiciaCuQHpYXS41fd0HkLz5rPPLfFfU7CK4ajn5wqsGrqQQDD6ptmqA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;445&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;transform(a, b) = (a&#x27;, b&#x27;);&lt;/p&gt;&lt;h6 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;compose&lt;span/&gt;&lt;/h6&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;顾名思义，这个方法是用来合并两次操作OP的，比如：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; const str = &lt;span&gt;&#x27;复仇者联盟&#x27;&lt;/span&gt;;&lt;br/&gt;const operation0 = new ot.TextOperation().retain(5).insert(&lt;span&gt;&#x27;钢铁侠&#x27;&lt;/span&gt;);&lt;br/&gt;const operation1 = new ot.TextOperation().retain(8).insert(&lt;span&gt;&#x27;黑寡妇&#x27;&lt;/span&gt;);&lt;br/&gt;const op = operation0.compose(operation1);&lt;br/&gt;console.log(&lt;span&gt;&#x27;compose后op操作：&#x27;&lt;/span&gt;, op.toString());&lt;br/&gt;console.log(&lt;span&gt;&#x27;结果：&#x27;&lt;/span&gt;, op.apply(str)); // 复仇者联盟钢铁侠黑寡妇&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;compose的实现和transform类似，罗列两个OP所有的组合可能性，分别作出对应的逻辑处理。相关源码可以去&lt;span&gt;github&lt;/span&gt;&lt;sup&gt;[4]&lt;/sup&gt;这里查看。当然ot.js的API远不止这两个，比如客户端的undo/redo方法用来实现文档的撤销/重做，这里就不一一过了&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;时序控制&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;基于以上示例和代码相信OT的核心原理大家应该比较清晰了，但OT算法基于顺序来进行转换的，假如用户A操作了两次文档，但因为网络原因，第二次比第一次先到达了服务器，而服务器基于收到的顺序来分发给其它用户那么必然会出现问题。流程图如下：&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6318785578747628&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIoylyjoWNUXRAfLeTicZuP9tJC2Gz0fbQ3lDCSLambicKjVObQnPeHmneVL28BfzHD7JQhJOGfJvdAw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;527&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此我们需要对每次的操作进行一个版本控制，在每次提交的时候加上一个版本标识，类似git的commitID，每次提交版本都自增1，来标识每次的OP操作；客户端和服务端各自维护一份版本；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;客户端：发送出的请求返回确认后，本地版本+1；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;服务端：完成一次OP时，版本+1;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;因此客户端的版本一定是小于等于服务端的。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5890625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIoylyjoWNUXRAfLeTicZuP9tmtTOO9rFtTq9BFibVuAVNaMuJ9H2y68bJMKVpbvS7TSpC29NC0NMb3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;相关转换过程如图，这里就不细说了，其实就是上面菱形的延伸。感兴趣可以去http://operational-transformation.github.io/index.html这里模拟体验整个过程。github上有很多js版本的OT实现库，比如https://github.com/marcelklehr/changesets也是OT算法的实现，感兴趣同学也可以去了解下。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;状态控制&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;OT将操作的状态三为三种：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;Synchronized:&lt;/strong&gt; 没有提交OP，等待新的OP&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;AwaitingConfirm：&lt;/strong&gt; 有新的OP提交了，等待后台确认，在此期间没有新的编辑行为产生；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;此阶段收到后台新的OP，会进行一次transform&lt;/p&gt;&lt;p&gt;transform(OP1, OP) = (OP1&#x27;, OP&#x27;)；其中OP&#x27;会被应用到本地&lt;/p&gt;&lt;/blockquote&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;AwaitingWithBuffer：&lt;/strong&gt; 有新的OP提交了，等待后台确认，在此期间有新的编辑行为产品了新OP；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此阶段产生的新的OP，会和上次本地编辑的OP做一次compose，合并为一个新的OP&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此阶段收到后台新的OP，会进行两次transform和一次compose:&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;OP3 = OP1.compose(OP2);&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;transform(OP1, OP) = (OP1&#x27;, OP&#x27;);&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;transform(OP3 , OP&#x27;) = (OP3&#x27;, OP&#x27;&#x27;);&lt;/code&gt;&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;最终OP&#x27;&#x27;会被应用到本地，然后更新OP1 = OP1&#x27; 和OP3 = OP3&#x27;&lt;/p&gt;&lt;section&gt;OP：服务端推送的新的OP；&lt;/section&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;OP3：是OP1和OP2 compose后生成的OP；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.207142857142857&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIoylyjoWNUXRAfLeTicZuP9tQiamMyNlmsHSzSMiaibHqqiaqPGQ5BGPpnblZdOibn1AH5Ws6YBqcYicSY6w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;840&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;OT算法很适合用用来处理文本的协同，最早提出时间可以追溯到1989年，也有各种语言的具体实现，相对比较成熟，目前在Google Docs，腾讯文档，包括我司的飞书文档都是用的OT算法，但OT目前是没法做到点对点通信的，随着Web通信协议的发展(比如WebRTC)，点对点的通信已经成为C/S架构的可替代方案，CRDT算法也是一种协同算法，大概在2006年提出，目前在Atom、Figma等产品中都有落地使用，CRDT在支持C/S架构模型的同时也可以支持点对点的传输，但目前各个文档其实还是主要使用OT，下面这个视频有讲说CRDT随着文本内容的增加复杂度会远大于OT，具体原因还没了解，感兴趣的同学可以一起研究下。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;https://youtu.be/PWzrbg9qqK8&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CRDT相关论文：https://www.researchgate.net/publication/310212186_Near_Real-Time_Peer-to-Peer_Shared_Editing_on_Extensible_Data_Types&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CRDT介绍：https://crdt.tech/resources&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;CRDT开源实现：https://github.com/yjs/yjs&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Easysync&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上介绍了协同处理算法中的OT算法，我们的例子也都是用的纯文本，但实际上的在线文档不可能如此简单的，比如有各种各样的block，富文本的支持，评论，选中等等功能；如果单纯去使用ot.js来去做的话，无异于挖坑自埋。而easysync也是OT算法的一种实现，它被使用在etherpad中。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;关于Etherpad&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;easysync这套算法作者是申请了专利的，专利地址：https://www.freepatentsonline.com/y2012/0110445.html，凭借这套算法作者创立了etherpad公司，后面被google收购，然后将etherpad开源了。起初etherpad是一套跑在Java虚拟机上，可以用JS来写逻辑的服务，但更多的功能还是以jar包的形式提供，这样搞也主要是为了easysync只需要实现一份JS的版本就可以同时跑在前端和后台，后面随着功能的迭代完善官方也发觉了这套东西很难维护，后面推出了nodejs版本的&lt;span&gt;etherpad-lite&lt;/span&gt;&lt;sup&gt;[5]&lt;/sup&gt;，不在需要维护jar包。简单说etherpad就是个google开源(Apache 协议)的富文本编辑器(&lt;span&gt;demo地址&lt;/span&gt;&lt;sup&gt;[6]&lt;/sup&gt;)，而协同算法用的是OT算法之一的easysync算法。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;描述文档(clientVars)&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在easysync中使用一种数据结构来描述整个文档。&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.311731843575419&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIoylyjoWNUXRAfLeTicZuP9tlQTRgibpQPkicNvT89CvO2beagXX0jgd71gWZqkl0utu4LffKKTT7ogg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1790&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;对于上面截图中的文档的描述：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;    attribs : *0+5|1+1*1*2*3*4*5+1*6+3*2|1+1 ,&lt;br/&gt;    text : 复仇者联盟\n*钢铁侠\n&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面这个对象描述的是整个文档的内容和格式，&lt;strong&gt;text&lt;/strong&gt;存储的是整个文档的内容包括换行符等符号，&lt;strong&gt;attribs&lt;/strong&gt;存储的是对文档内容格式的描述，上图中的属性中*+都不是我们印象中的乘法加法，这里面的数字只代表序号。翻译下具体符号的含义：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;注&lt;/strong&gt;：easysync里面的数字大都是36进制的，主要目的是为了缩短传输字符的长度；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;具体的属性(&lt;strong&gt;加粗&lt;/strong&gt;，&lt;em&gt;斜体&lt;/em&gt;等)描述在另一个属性&lt;strong&gt;apool&lt;/strong&gt;中。上面文档中对应的属性描述如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;{&lt;br/&gt;    apool :{&lt;br/&gt;        numToAttrib :{&lt;br/&gt;            0 :[&lt;br/&gt;                lineguid ,&lt;br/&gt;                HwV9Nr&lt;br/&gt;            ],&lt;br/&gt;            1 :[&lt;br/&gt;                align ,&lt;br/&gt;                left&lt;br/&gt;            ],&lt;br/&gt;            2 :[&lt;br/&gt;                author ,&lt;br/&gt;                52000000000000025&lt;br/&gt;            ],&lt;br/&gt;            3 :[&lt;br/&gt;                fragmentguid ,&lt;br/&gt;                1981193224752831644&lt;br/&gt;            ],&lt;br/&gt;            4 :[&lt;br/&gt;                insertorder ,&lt;br/&gt;                first&lt;br/&gt;            ],&lt;br/&gt;            5 :[&lt;br/&gt;                lmkr ,&lt;br/&gt;                1&lt;br/&gt;            ],&lt;br/&gt;            6 :[&lt;br/&gt;                lineguid ,&lt;br/&gt;                sQgJ38&lt;br/&gt;            ],&lt;br/&gt;            7 :[&lt;br/&gt;                store ,&lt;br/&gt;                {\ contentConfig\ :{\ 0 \ :[1,2,3],\ 1 \ :[1,2,3],\ 2 \ :[1,2,3,4,5],\ 3 \ :[1,4,5],\ 4 \ :[]}}&lt;br/&gt;            ]&lt;br/&gt;        },&lt;br/&gt;        nextNum :8&lt;br/&gt;    }&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如上的&lt;strong&gt;numToAttrib&lt;/strong&gt;属性里面存储的序号就是上面中数字。结合&lt;strong&gt;apool&lt;/strong&gt;里面的属性值我们就可以把 &lt;strong&gt;&lt;code&gt;*0+5|1+1*1*2*3*4*5+1*6+3*2|1+1&lt;/code&gt;&lt;/strong&gt; ****给翻译出来了：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;第0个属性，应用于前5个字符(&lt;em&gt;复仇者联盟&lt;/em&gt;)，影响一行；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;取出1个字符应用第1，2，3，4，5属性(这里的属性2是author，即当前编辑这部分文本的用户)；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看出这其实就是一份描述文档的数据结构，理论上我们只要实现了对应平台的渲染器，那就不仅可以把它渲染成html，同样也可以应用在native。但这种格式是按文行和列来描述，遇到表格这种一行里面分格子的需求就很难做了。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;描述文档的变更(changeset)&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面easysync定义了一组数据结构来描述整个文档内容，但在协同的场景下如何处理变更也会是一个很棘手的问题。在easysync定义了一个叫changeset的概念去描述文档的变更。文档在一开始创建或是导入的时候会生成一个初始化的内容结构，之后所有的更改都会用changeset来表示。对文档做一下变更，则会产生一次changeset：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Z:c&amp;gt;3|1=7=4*0+3$ 黑寡妇&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;如果用通信协议来理解changeset的话，可以分为包头和包体，包头主要用来描述字符长度，而上面的Z似乎是个Magicnumber，每一个changeset都会以Z开头。而包体则用来描述具体的操作(比如新增字符，删除字符等)。&lt;strong&gt;$&lt;/strong&gt; 后面的被叫做charbank，所有这次变更新增的字符都是从charbank里面取出来的。在changeset中符号代表的含义如下：&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;:n&lt;/strong&gt;: 之前文档的长度（在easysnc中一般都用36进制来表示数字）；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的changeset翻译如下：&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;之前的文本长度是c(十进制的12)，影响了第1行，保留了7个字符，保留4个字符，插入3个字符应用属性0。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;而这里的&lt;code&gt;+、-、=&lt;/code&gt;在某种意义上对应的就是ot.js中的&lt;code&gt;insert,delete和retain&lt;/code&gt;三个原子操作；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们再看一个删除字符(删除了黑寡妇)的例子：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Z:f&amp;lt;3|1=7=4-3$&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;之前的文本长度是f(十进制的15)，影响了第1行，保留7个字符，保留4个字符，从这个位置开始，删除3个字符；&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在删除的changeset中charbank是空的，因为是删除，没有新增字符；官方文档参考：https://github.com/ether/etherpad-lite/blob/develop/doc/easysync/easysync-notes.pdf&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;协同&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在实际操作中changeset会非常的多，很频繁，比如现在的我在疯狂码字一样，那么对于changeset的合并(compose)就很重要，它可以极大地缩短传输字符的长度，而在协同的场景下，用户A和用户B提交的changeset就需要去合并，我们上面提到过的ot.js中的transform方法，在easysync中它叫做follow。回顾下前面的ot.js我们会发现&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;ot.js中的一次OP =&amp;gt; easysync中的changeset；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;ot.js中tranform方法 =&amp;gt; easysync中的follow方法；&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;compose&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户B本地操作：插入字符”美国队长“，对应changeset是：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Z:c&amp;gt;4|1=7=4*0+4$ 美国队长&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户B紧接着操作：插入字符”雷神“，对应changeset为：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Z:g&amp;gt;2|1=7=8*0+2$ 雷神&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;两次操作假设相隔很短，那么完全可以合并为一次changeset：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const cs1 = &lt;span&gt;&#x27;Z:c&amp;gt;4|1=7=4*0+4$ 美国队长&#x27;&lt;/span&gt;;&lt;br/&gt;const cs2 = &lt;span&gt;&#x27;Z:g&amp;gt;2|1=7=8*0+2$ 雷神&#x27;&lt;/span&gt;;&lt;br/&gt;console.log(Changeset.compose(cs1, cs2, &lt;span&gt;false&lt;/span&gt;, null));&lt;br/&gt;// Z:c&amp;gt;6|1=7=4*0+6$ 美国队长雷神&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注意，compose是有合并顺序的，参数1一定是参数2的前置操作。下文中我们将 &lt;strong&gt;compose方法省略。&lt;/strong&gt; 状态A和状态B合并为状态C（状态A是状态B的前置操作），记为 &lt;strong&gt;C = AB&lt;/strong&gt;；&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;merge&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;compose合并的是有前后操作关系的状态，但在文档协同中更多的是并发冲突问题，merge是easysync中解决并发冲突的算法，比如用户A和用户B同时编辑了一份文档：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户A插入 黑寡妇 ：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Z:c&amp;gt;3|1=7=4*0+3$ 黑寡妇&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;用户B插入 美国队长 ：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Z:c&amp;gt;4|1=7=4*0+4$ 美国队长&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;merge就是将操作A和B进行合并的，合并后的状态我们记为C，即 C = m(A, B);&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;对&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;m&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;的约束条件：&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;A&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;和&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;B&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;的顺序可以是任意的，即&lt;/strong&gt; &lt;strong&gt;&lt;code&gt;m(A, B) = m(B, A)&lt;/code&gt;&lt;/strong&gt; &lt;strong&gt;；&lt;/strong&gt;&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;follow&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的例子生成的状态C = m(B, A)，其实是应用于服务端的状态，假设服务端状态 X =&amp;gt; X&#x27;。那么可记为X&#x27; = Xm(B, A)。X&#x27;是通过X 和 m(B, A)合并得到的，但对客户端来说无法直接去这样操作，因为对用户A来说，状态C并不是A的前置，无法直接去合并，我们需要一个算法去做转换，这个实现就是follow方法，还是上面的例子：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;const A = &lt;span&gt;&#x27;Z:b&amp;gt;3|1=4*0+3$ 黑寡妇&#x27;&lt;/span&gt;;&lt;br/&gt;const B = &lt;span&gt;&#x27;Z:b&amp;gt;4|1=4*0+4$ 美国队长&#x27;&lt;/span&gt;;&lt;br/&gt;&lt;br/&gt;const A1 = follow(B, A, &lt;span&gt;false&lt;/span&gt;, null);&lt;br/&gt;const B1 = follow(A, B, &lt;span&gt;true&lt;/span&gt;, null);&lt;br/&gt;console.log(A1, B1);&lt;br/&gt;// Z:f&amp;gt;3|1=4=4*0+3$ 黑寡妇 Z:e&amp;gt;4|1=4*0+4$ 美国队长&lt;br/&gt;const A2 = compose(A, B1);&lt;br/&gt;const B2 = compose(B, A1);&lt;br/&gt;console.log(A2, B2);&lt;br/&gt;// Z:b&amp;gt;7|1=4*0+7$ 美国队长黑寡妇 Z:b&amp;gt;7|1=4*0+7$ 美国队长黑寡妇&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;可以看到用户A和B，最终的changeset分别是A2和B2，A2和B2是完全相等的。这里我们将&lt;strong&gt;follow方法记为f,&lt;/strong&gt; 当服务端收到用户A和用户B的并发操作的时候处理过程，假设服务端目前的状态是X，收到了用户A的操作A，然后apply到字符串变成了XA，此时又收到了用户B的操作B，很明显，此时直接应用XAB是不行的，因为A和B都是基于X来变更的，A并不是B的前置，此时就需要一个B&#x27;，来实现XAB&#x27;，且有&lt;strong&gt;XAB&#x27;&lt;/strong&gt; = &lt;strong&gt;XBA&#x27;。&lt;/strong&gt; 也就是上面例子中的follow结果，B&#x27; = f(A, B)，A&#x27; = f(B, A)。由此可得到：XAf(A, B) = XBf(B, A)。即，&lt;strong&gt;Af(A, B) = B f(B, A)&lt;/strong&gt; ;这个公式就是follow算法的核心。&lt;/p&gt;&lt;h4 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;C/S模型&lt;span/&gt;&lt;/h4&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面也提到过OT算法必然需要一个Server去中转，不支持点对点。我们来看下客户端和服务端分别是怎么工作的：&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;客户端&lt;span/&gt;&lt;/h5&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5914742451154529&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ndgH50E7pIoylyjoWNUXRAfLeTicZuP9tNgVBIOmf2VvibzLib2tLa8icS5naK9LgWlK3BbqjAGicTOpfn8sVhEXkbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;563&quot;/&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;前面说过在OT中客户端可以把用户的操作分为三种状态，在easysync中也有三种状态：&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;A&lt;/strong&gt;: 服务端最新内容，未进行修改；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;X&lt;/strong&gt;：changeset已经提交了，还没被确认；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;Y&lt;/strong&gt;: 客户端产生的还没提交到服务端的变更集；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;还有一种特殊的changeset，就是在X期间，又产生了新的changeset，我们用E来代替。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;strong&gt;E&lt;/strong&gt;: ****changeset提交期间产生的新的编辑；&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;etherpad官方文档里面写的巨复杂，我简单梳理下这里客户端的状态变化和操作(注意：下文中的=和≠都是传统数学意义上的符号，直接合并即使用compose/merge合并)：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;拉取最新文档，未进行编辑&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;此时X = Y = A = In(初始状态)&lt;/p&gt;&lt;/blockquote&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;开始产生编辑行为&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;用户产生新的编辑E，此时Y有两种状态，一种是初始状态Y = In，一种是之前产生了编辑，Y ≠ In。但无论Y是否等于In，操作E都是合并到Y中，此时Y = Y · E；这样可以不间断的更新Y，不至于丢失用户数据；&lt;/p&gt;&lt;/blockquote&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;提交变更集到服务器(未收到ack)；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;此时，变更集Y会变成已提交状态，同时Y的状态重置，X = Y，Y = In；&lt;/p&gt;&lt;/blockquote&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;收到服务器ack确认；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;此时X变成了已确认的状态，A状态转变为最新的X，X状态重置，也就是A = X；X = In；&lt;/p&gt;&lt;/blockquote&gt;&lt;ol start=&quot;5&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;收到用户B的变更集B；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;strong&gt;前置条件：&lt;/strong&gt; 对B的约束条件是，A 必须是 B 的前置，即运算 A · B 是可执行的（&lt;em&gt;为什么要有这个约束条件，大家可以思考下）&lt;/em&gt; 此时的变化是比较复杂的，前面AXY的变迁规则已无法适应这种场景，需要作出调整。用户 A 需要吸收 B 生成，A&#x27;、X&#x27;、Y&#x27;来回归到前面的变迁行为。由于此时 AXY 是已经展现给用户的状态了，我们用 V 来表示最终的文档变更状态。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;A 吸收 B 变为 A&#x27;: &lt;code&gt;A&#x27; = AB&lt;/code&gt;;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;X 吸收 B 变为 X&#x27;: B 和 X 有相同的前置 A，使用follow方法合并即可，&lt;code&gt;X&#x27; = f(B, X)&lt;/code&gt;,&lt;code&gt;B&#x27; = f(X, B)&lt;/code&gt;;可推断出&lt;strong&gt;ABX&#x27; =&lt;/strong&gt; &lt;strong&gt;AXB&lt;/strong&gt; &lt;strong&gt;&#x27;&lt;/strong&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Y 吸收 B 变为 Y&#x27;：&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;blockquote&gt;&lt;p&gt;由ab两点可知，A&#x27;B&#x27; = &lt;strong&gt;ABX&#x27; =&lt;/strong&gt; &lt;strong&gt;AXB&lt;/strong&gt; &lt;strong&gt;&#x27;&lt;/strong&gt; (follow算法) 前面说了B的前置是A，但Y的前置是X，因此需要转化一下B&#x27; = f(X, B)，使得B&#x27;和Y都有相同的前置X，然后生成Y&#x27; = f(B&#x27;, Y)；即&lt;code&gt;Y&#x27; = f(f(X, B), Y)&lt;/code&gt;；&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;生成最终状态V:&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;blockquote&gt;&lt;p&gt;V = A&#x27;X&#x27;Y&#x27;&lt;/p&gt;&lt;p&gt;= AB · f(B, X) · f(f(X, B), Y)&lt;/p&gt;&lt;p&gt;= A · Bf(B, X) · f(f(X, B), Y)&lt;/p&gt;&lt;p&gt;= A · Xf(X, B) · f(f(X, B), Y)&lt;/p&gt;&lt;p&gt;= AX · f(X, B) · f(f(X, B), Y)&lt;/p&gt;&lt;p&gt;= AX · Y · f(Y, f(X,B))&lt;/p&gt;&lt;p&gt;= AXY · f(Y, f(X, B)&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;此时再将新的A&#x27;，X&#x27;，Y&#x27;赋值给AXY&lt;/p&gt;&lt;h5 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;服务端&lt;span/&gt;&lt;/h5&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里服务端的处理逻辑相对前端来说要简单很多，主要做两件事：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;响应客户端请求，建立链接，并返回文档最新状态；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;处理客户端提交上来的变更集，返回确认信息；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中处理变更集的逻辑比较值得一说，当服务端收到一个变更集C的时候，会做以下五件事：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;从客户端版本记录中，获取 &lt;code&gt;C&lt;/code&gt; 的前置版本 &lt;code&gt;S&lt;/code&gt;&lt;em&gt;&lt;code&gt;c&lt;/code&gt;&lt;/em&gt; （客户端的初始版本）；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;2&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;注意服务器记录的最后一个变更集（Changeset）&lt;code&gt;S&lt;/code&gt;&lt;em&gt;&lt;code&gt;h&lt;/code&gt;&lt;/em&gt; 与 &lt;code&gt;Sc&lt;/code&gt; 之间可能还存在多次变更集（Changeset）记录(此时可能有其它用户已经推送了新的版本，但还未下发到当前客户端)。此时需要计算出 &lt;code&gt;C&lt;/code&gt; 相对 &lt;code&gt;S&lt;/code&gt;&lt;em&gt;&lt;code&gt;h&lt;/code&gt;&lt;/em&gt; 的后置 &lt;code&gt;C&#x27;&lt;/code&gt; 。这样才能「&lt;strong&gt;叠加&lt;/strong&gt;」到当前文档上；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;3&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;发送 &lt;code&gt;C&#x27;&lt;/code&gt; 到其它客户端；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;4&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;发送确认（ACK）给当前客户端；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start=&quot;5&quot; data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;li&gt;&lt;section&gt;将 &lt;code&gt;C&#x27;&lt;/code&gt; 添加到记录列表中，同时更新版本；&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;后记&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;比较粗浅的了解了以上和在线文档相关的一些技术，其中的一些细节实现和难题都充满了挑战，这个方向确实是道阻且长，很多看似简单的功能背后都充满着工程师的心血(比如协同中的文字选中)。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;p&gt;diff-match-patch: &lt;em&gt;https://github.com/google/diff-match-patch/tree/master/javascript&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[2]&lt;/span&gt;&lt;p&gt;diff-match-patch JS实现源码: &lt;em&gt;https://github.com/google/diff-match-patch/blob/master/javascript/diff_match_patch_uncompressed.js&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[3]&lt;/span&gt;&lt;p&gt;ot.js: &lt;em&gt;https://github.com/Operational-Transformation/ot.js/blob/master/lib/text-operation.js&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[4]&lt;/span&gt;&lt;p&gt;github: &lt;em&gt;https://github.com/Operational-Transformation/ot.js/blob/master/lib/text-operation.js#L238&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[5]&lt;/span&gt;&lt;p&gt;etherpad-lite: &lt;em&gt;https://github.com/ether/etherpad-lite&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[6]&lt;/span&gt;&lt;p&gt;demo地址: &lt;em&gt;https://rich.etherpad.com/p/re3434hkj&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[7]&lt;/span&gt;&lt;p&gt;《OT协同》: &lt;em&gt;https://bytedance.feishu.cn/wiki/wikcnn505JVvliIX3Z0JKJEDQqh#zdaw84&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[8]&lt;/span&gt;&lt;p&gt;Etherpad 协同概述: &lt;em&gt;https://bytedance.feishu.cn/wiki/wikcnQ0bGESsmnJr6HegIno15Gg&lt;/em&gt;&lt;/p&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>1adfd5ecfe43bfb72f14698b06463267</guid>
<title>由浅到深，入门搜索原理</title>
<link>https://toutiao.io/k/vvcm0xr</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;h1 data-line=&quot;3&quot;&gt;&lt;span&gt;SkrShop电商搜索业务&lt;/span&gt;&lt;span&gt;&lt;strong&gt;第2篇&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;(第一阶段全2篇) 🎉🎉🎉～ &lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5625&quot; data-s=&quot;300,640&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/TiccVmMZ3icdjgYXG2lqehHdjfgjkAGE7ZKY5cVN8UiahH0XYYzMLvUrJXH4YZBDDib7YQ4Wh0hs3Yvhz72ZUGnqZw/640?wx_fmt=jpeg&quot;/&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n389&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n390&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;本文均以开源搜索引擎ES(Elasticsearch)为例，下文简称ES。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p cid=&quot;n150&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;SkrShop系列终于更新了，本次带来电商搜索页面的介绍，本电商搜索系列分为两篇文章：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n155&quot; mdtype=&quot;paragraph&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;首先，本篇文章对于初次接触的同学来讲，涉及的概念会比较多，主要如下&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;figure cid=&quot;n12&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n13&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n14&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索名词概念&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n15&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;描述&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n16&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n17&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档(Doc)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n18&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n19&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n20&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词条(Term)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n21&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n22&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n23&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;倒排索引(Inverted Index)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n24&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n25&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n26&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;关键字(Query)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n27&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n28&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n29&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;召回(Recall)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n30&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n31&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n32&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词频(tf:Term Frequency)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n33&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n34&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n35&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;逆文档率(idf:Inverse Document Frequency)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n36&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n37&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n38&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;粗排&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n39&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n40&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n41&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;精排&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n42&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;？&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n43&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;本&lt;/span&gt;&lt;span&gt;篇文章由简到繁入门搜索原理，并逐步揭开上面这些概念的面纱。&lt;/span&gt;&lt;span&gt;本文结构如下：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n418&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n41&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索引擎ES的诞生&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n422&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;简易版搜索过程&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n429&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;进阶版搜索过程&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n432&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;索引过程&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n435&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;什么是文档(Doc)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n437&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;什么是词条(Term)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n439&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;什么是倒排索引(Inverted Index)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n441&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档(Doc)分析&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n448&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;创建倒排索引&lt;/span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p cid=&quot;n452&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;查询过程&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n476&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索过程总结&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;p cid=&quot;n478&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索引擎ES进阶&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 cid=&quot;n484&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;搜索引擎ES的诞生&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p cid=&quot;n485&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;ES诞生于一个开源的JAVA库&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Lucene&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。通过&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Lucene&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;官网的描述我们可以发现&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Lucene&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;具备如下能力：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n486&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n488&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Lucene&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;是一个JAVA库&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n490&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Lucene&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;实现了拼写检查&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n492&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Lucene&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;实现了命中字符高亮&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n494&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Lucene&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;实现了分析、分词功能&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n495&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Lucene&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;不具备的能力：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n505&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220215203335.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.46&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSC77ibOQKG7Ls0SAUw2l4a18sN68ZeM2oB0eWaKicJicX53NNIgPbH43eMA/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n506&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;所以多年之前名叫&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Shay Banon&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的开发者，通过&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Lucene&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;实现了一个高可用的开源分布式搜索引擎&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Elasticsearch&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n507&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220215203346.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5645833333333333&quot; data-type=&quot;png&quot; data-w=&quot;960&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSC05bOMIHEst76mV0GjKUZjumpeMT3bkbjG81OD61GzozwMLdcWgZLrA/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n508&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;常见的搜索功能都是基于「搜索引擎」实现的，接着我们来看看&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;span/&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;简易版搜索过程&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h2 cid=&quot;n509&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;简易版搜索过程&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;p cid=&quot;n510&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;简易版搜索过程如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n516&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220306221130.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9906103286384976&quot; data-type=&quot;png&quot; data-w=&quot;639&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSC4icWsJa44mx5wFWtdnr7PWRPAWxSVU8DHbYJUtn20ticlAXzeAcSyXmA/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n516&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;‍&lt;/span&gt;p&lt;span&gt;‍&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;‍&lt;/span&gt;&lt;/p&gt;&lt;h2 cid=&quot;n517&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;进阶版搜索过程&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;h3 cid=&quot;n518&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;索引过程&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p cid=&quot;n519&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220129183509.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3090332805071315&quot; data-type=&quot;png&quot; data-w=&quot;631&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSCGmGPTlsHEbk5Bwmyibia7kXx8pQu1hL8UFV8YaXvtR2iajyicEH0DLdrpQ/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n520&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;什么是文档(Doc)&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p cid=&quot;n521&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;举个栗子，比如《电商设计手册 | SkrShop》网页内容需要被搜索到，那这页网页的全部内容就称之为一个&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;文档Doc&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n522&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220222131248.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5018518518518519&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSC8WAdQDqn8ZYdJfian2cnwpbAwEFgdysImG65d1qQ2PXsXDjDViadLyZw/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n523&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;文档Doc&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;内容如下：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;html&quot; cid=&quot;n524&quot; mdtype=&quot;fences&quot;&gt;&lt;div lang=&quot;html&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;html&lt;/span&gt; &lt;span&gt;lang&lt;/span&gt;=&lt;span&gt;&quot;en&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;head&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta&lt;/span&gt; &lt;span&gt;charset&lt;/span&gt;=&lt;span&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;电商设计手册 | SkrShop&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;title&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta&lt;/span&gt; &lt;span&gt;http-equiv&lt;/span&gt;=&lt;span&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span&gt;content&lt;/span&gt;=&lt;span&gt;&quot;IE=edge,chrome=1&quot;&lt;/span&gt; &lt;span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;meta&lt;/span&gt; &lt;span&gt;name&lt;/span&gt;=&lt;span&gt;&quot;description&quot;&lt;/span&gt; &lt;span&gt;content&lt;/span&gt;=&lt;span&gt;&quot;应该是最全、最细致、最落地的电商系统设计手册&quot;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;  &lt;span&gt;&amp;lt;!-- 省略...... --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;  &lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;秒杀是电商的一种营销手段&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;  &lt;span&gt;&amp;lt;!-- 省略...... --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/pre&gt;&lt;figure cid=&quot;n525&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n526&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n527&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索名词概念&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n528&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;描述&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n529&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n530&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档(doc)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n531&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;需要被搜索的文本内容，可以是某个商品详细信息、某个网页信息等等文本。&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 cid=&quot;n532&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;什么是词条(Term)&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n533&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;继续以上文的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;文档Doc&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;为例。为了简化对&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;词条(Term)&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的理解，把上述&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;文档Doc&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的内容简化为一句话&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;秒杀是电商的一种营销手段&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n534&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;词条(Term)&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;就是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;文档Doc&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;经过分词处理得到的词条结果集合。比如&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;秒杀是电商的一种营销手段&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;被中文分词之后得到：&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n535&quot; mdtype=&quot;fences&quot;&gt;&lt;div lang=&quot;&quot;&gt;&lt;pre role=&quot;presentation&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;秒杀 / 是 / 电商 / 的 / 一种 / 营销 / 手段&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/pre&gt;&lt;p cid=&quot;n536&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀、是、电商、的、一种、营销、手段分别称之为&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;词条(Term)&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，该集合称之为&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Terms&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;figure cid=&quot;n537&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n538&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n539&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索名词概念&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n540&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;描述&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n541&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n542&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词条(Term)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n543&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;被搜索的文本Doc被分词器拆解成N个标准的语句。&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 cid=&quot;n544&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;什么是倒排索引(Inverted Index)&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n545&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;「倒排索引」是索引(动词)源数据时，创建的索引(名词)的具体实现。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n546&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;我们以如下文档(Doc)为例，解释倒排索引：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n546&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n547&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n548&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n549&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档ID&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n550&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档内容(Doc)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n551&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n552&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n553&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商设计手册SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n554&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n555&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n556&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀是电商的一种营销手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n557&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n558&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n559&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车是电商购买流程最重要的一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n560&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;分词器：文档(Doc)拆解为多个独立词条(Doc -&amp;gt; Terms)。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n561&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;开源中文分词器：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n569&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;以jieba分词器在线演示为例：&lt;/span&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://app.gumble.pw/jiebademo/&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n569&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n570&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n571&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n572&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档ID&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n573&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档内容(Doc)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n574&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;中文分词结果(Terms)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n575&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n576&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n577&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商设计手册SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n578&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商 / 设计 / 手册 / SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n579&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n580&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n581&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀是电商的一种营销手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n582&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀 / 是 / 电商 / 的 / 一种 / 营销 / 手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n583&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n584&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n585&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车是电商购买流程最重要的一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n586&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车 / 是 / 电商 / 购买 / 流程 / 最 / 重要 / 的 / 一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n215&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;每个词条对应的文档ID如下：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n215&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n216&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n217&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n218&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词条&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n219&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档IDs&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n220&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n221&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n222&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1、2、3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n223&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n224&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;设计&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n225&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n226&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n227&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;手册&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n228&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n229&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n230&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n231&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n232&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n233&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n234&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n235&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n236&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;是&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n237&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2、3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n238&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n239&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;的&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n240&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2、3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n241&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n242&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;一种&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n243&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n244&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n245&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;营销&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n246&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n247&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n248&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n249&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n250&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n251&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n252&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n253&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n254&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购买&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n255&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n256&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n257&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;流程&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n258&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n259&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n260&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;最&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n261&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n262&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n263&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;重要&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n264&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n265&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n266&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n267&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n268&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;以上就是建立倒排索引的基本过程。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n641&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;完成倒排索引建立之后，模拟搜索过程，假设：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n642&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n644&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;电商&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，能快速找到文档1、2、3&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n646&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;营销&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，能快速找到文档2&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n647&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;(这个过程叫做「召回」)&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n648&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;以上就是「倒排索引」的概念。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n648&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n649&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n650&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n651&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索名词概念&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n652&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;描述&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n653&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n654&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;倒排索引(Inverted Index)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n655&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;索引(动词)源数据时，创建的索引(名词)的具体实现。&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 cid=&quot;n656&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档(Doc)分析&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n657&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;分析就是标准化文档(Doc)文本的过程，以及把文档(Doc)转换成标准化词条(Term)的过程。搜索引擎ES分析过程的实现依赖于分析器。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n658&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;分析器基本组成：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n666&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220129183541.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5120370370370371&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSCg4qLHuGGeauYCzTiaSTn0biaWCSIDjZJSBCojR3GhxrPv0NsB0cLxARQ/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h5 cid=&quot;n667&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;字符过滤器&lt;/span&gt;&lt;/h5&gt;&lt;blockquote cid=&quot;n668&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n669&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;一个分析器对应一个字符过滤器。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p cid=&quot;n670&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;格式化为标准文本(text -&amp;gt; standard text)，例如去掉文本中的html标签。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n671&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220129183701.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6888888888888889&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSCib1SQ6Jp4Hkn6I47ZkshOlQKbMCVWMqgWVTpGnkXVeQMzCI0WibZuicicg/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n672&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;比如&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;lt;p&amp;gt;电商设计手册SkrShop&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;---&amp;gt;&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;电商设计手册SkrShop&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h5 cid=&quot;n673&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;分词器&lt;/span&gt;&lt;/h5&gt;&lt;blockquote cid=&quot;n674&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n675&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;一个分析器对应一个分词器。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p cid=&quot;n676&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档(Doc)拆解为多个独立词条(doc -&amp;gt; terms)的过程。举个例子：比如&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;电商设计手册SkrShop&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;---&amp;gt;&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;电商 / 设计 / 手册 / SkrShop&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n677&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;span/&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;这里还需要提到的是&lt;/span&gt;&lt;span md-inline=&quot;strong&quot;&gt;&lt;strong&gt;&lt;span md-inline=&quot;plain&quot;&gt;自定义词库&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：原始词库不具备的词汇，比如最近新产生的网络词汇。&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n678&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220129183714.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.8782201405152225&quot; data-type=&quot;png&quot; data-w=&quot;854&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSCl5blfG2OeX9Mw8sxJMd1DUM9nSKibX9hw593BGyehOVSiaIJ1BYrLydg/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h5 cid=&quot;n679&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;分词过滤器&lt;/span&gt;&lt;/h5&gt;&lt;blockquote cid=&quot;n680&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n681&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;一个分析器对应N个分词过滤器。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n682&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n684&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;统一转小写&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n686&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;近义词转换&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n688&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;停用词&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n690&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;提取词干&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n692&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;纠错&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n694&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;自动补全&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n696&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;等等...&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n697&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220215205418.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.0437017994858613&quot; data-type=&quot;png&quot; data-w=&quot;778&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSCTM780P96WoXVgibuQKY8ibKeibeqMxchlJONYq04an3Z1673KFlvRdleg/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n697&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220215205418.png&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n698&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n699&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n700&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;分词过滤器&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n701&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;示例&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n702&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n703&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;统一转小写&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n704&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;适用于英文等。比如统一把英文字母转换为小写，例&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;Word -&amp;gt; word&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n705&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n706&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;近义词转换&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n707&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;适用于各语言。例&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;宽敞 -&amp;gt; 宽阔&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n708&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n709&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;停用词&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n710&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;适用于各语言。去除含义宽泛不具备代表性的词语和其他人工指定停用的词语，例&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;的&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;、&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;是&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。中文停用词库：&lt;/span&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://github.com/goto456/stopwords&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n711&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n712&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;提取词干&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n713&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;适用于英文等。例&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;words -&amp;gt; word&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n714&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n715&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;纠错&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n716&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;适用于各语言。例&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;宽肠 -&amp;gt; 宽敞&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n717&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n718&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;自动补全&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n719&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;适用于各语言。&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 cid=&quot;n720&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;索引过程总结&lt;/span&gt;&lt;/h4&gt;&lt;h3 cid=&quot;n721&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;查询过程&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n722&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220215205523.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.9795918367346939&quot; data-type=&quot;png&quot; data-w=&quot;294&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSCH55D5aLWLc0ecpqHVV4Q50NvuVl70BCzdhwEIwTQyBSLPYTmuhYQsg/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n722&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220215205523.png&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n723&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n724&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n725&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索名词概念&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n726&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;描述&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n727&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n728&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;关键字(Query)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n729&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;发起搜索是用户输入的关键字&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 cid=&quot;n730&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;关键字(Query)分析&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n731&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;关键字(Query)同样需要经过&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;分析器&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，且和文档索引过程是相同的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;分析器&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n732&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;相同分析器：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n740&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220220211920.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1.180045871559633&quot; data-type=&quot;png&quot; data-w=&quot;872&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSCSHiaQ1QRpmdllV4WHqMrblf93bw1SoUsJVViafPFc3W05MvfQ9TDBFgA/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n741&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;分词器：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n741&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n742&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n743&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n744&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;关键字(Query)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n745&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;中文分词结果(Terms)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n746&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n747&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀系统的设计&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n748&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀 / 系统 / 的 / 设计&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure cid=&quot;n749&quot; mdtype=&quot;table&quot;/&gt;&lt;p cid=&quot;n760&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;分词过滤器：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n761&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;此处以停用词分词过滤器为例讲解分词过滤器的过程，本文使用的停用词库示例：&lt;/span&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://github.com/goto456/stopwords/blob/master/cn_stopwords.txt&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n762&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;得到去除了停用词&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;的&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;之后的词条(Terms)集合：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n762&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n763&quot; mdtype=&quot;table&quot;/&gt;&lt;h4 cid=&quot;n772&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;召回(Recall)&lt;/span&gt;&lt;/h4&gt;&lt;h5 cid=&quot;n773&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;什么是召回(Recall)&lt;/span&gt;&lt;/h5&gt;&lt;p cid=&quot;n774&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;使用上文的文档内容以及文档分词结果：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n774&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n775&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n776&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n777&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档ID&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n778&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档内容(Doc)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n779&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;中文分词结果(Terms)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n780&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n781&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n782&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商设计手册SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n783&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商 / 设计 / 手册 / SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n784&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n785&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n786&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀是电商的一种营销手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n787&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀 / 是 / 电商 / 的 / 一种 / 营销 / 手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n788&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n789&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n790&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车是电商购买流程最重要的一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n791&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车 / 是 / 电商 / 购买 / 流程 / 最 / 重要 / 的 / 一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n792&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;进一步使用分词过滤器过滤分词结果，以相同的停用词分词过滤器为例。本文使用的停用词库示例：&lt;/span&gt;&lt;span md-inline=&quot;url&quot; spellcheck=&quot;false&quot;&gt;https://github.com/goto456/stopwords/blob/master/cn_stopwords.txt&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n793&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;比如命中了停用词&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;是&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n794&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220302203921.png&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7522123893805309&quot; data-type=&quot;png&quot; data-w=&quot;226&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSCJV0R2iabbJIh5y5xpMFQibhDlaJZRfib4icd0Nnd8icnID7a3zoWjysApOw/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n795&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;经过停用词分词过滤器之后的结果：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n795&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n796&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n797&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n798&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档ID&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n799&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档内容(Doc)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n800&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;中文分词结果(Terms)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n801&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n802&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n803&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商设计手册SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n804&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商 / 设计 / 手册 / SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n805&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n806&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n807&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀是电商的一种营销手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n808&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀 / 电商 / 一种 / 营销 / 手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n809&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n810&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n811&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车是电商购买流程最重要的一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n812&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车 / 电商 / 购买 / 流程 / 重要 / 一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n813&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;进一步得到倒排索引结构：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n813&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n814&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n815&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n816&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词条&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n817&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档IDs&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n818&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n819&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n820&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1、2、3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n821&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n822&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;设计&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n823&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n824&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n825&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;手册&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n826&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n827&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n828&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n829&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n830&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n831&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n832&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n833&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n834&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;一种&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n835&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n836&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n837&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;营销&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n838&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n839&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n840&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n841&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n842&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n843&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n844&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n845&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n846&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购买&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n847&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n848&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n849&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;流程&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n850&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n851&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n852&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;重要&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n853&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n854&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n855&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n856&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n857&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;接着模拟搜索过程，假设用户搜索&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;秒杀系统的设计&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n857&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n858&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n859&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n860&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;关键字(Query)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n861&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;中文分词结果(Terms)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n862&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n863&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀系统的设计&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n864&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀 / 系统 / 的 / 设计&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure cid=&quot;n865&quot; mdtype=&quot;table&quot;/&gt;&lt;p cid=&quot;n876&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;分词过滤器，使用同上过程的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;停用词分词过滤器&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;为例，得到去除了停用词&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;的&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;之后的词条(Terms)集合，称之为关键字(Query)的词条集合：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n876&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n877&quot; mdtype=&quot;table&quot;/&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n886&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n888&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;关键字(Query)的词条&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;秒杀&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，通过上述倒排索引可以很容易找到&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;文档2&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n890&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;关键字(Query)的词条&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;系统&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，通过上述倒排索引没有找到任何文档&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n892&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;关键字(Query)的词条&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;设计&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，通过上述倒排索引可以很容易找到&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;文档1&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n893&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;这样用户搜索&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;秒杀系统的设计&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;就找到了如下文档：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; cid=&quot;n894&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot;&gt;&lt;li&gt;&lt;p cid=&quot;n896&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;文档2&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：秒杀是电商的一种营销手段&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p cid=&quot;n898&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;文档1&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;：电商设计手册SkrShop&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p cid=&quot;n899&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;以上过程就是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;召回&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n899&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n900&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n901&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n902&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索名词概念&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n903&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;描述&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n904&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n905&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;召回(Recall)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n906&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索引擎利用倒排索引，通过词条获取相关文档的过程。&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n539&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;上述召回过程，用户通过搜索&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;秒杀系统的设计&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;找到了文档1、2。&lt;/span&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n540&quot; mdtype=&quot;fences&quot;&gt;&lt;span role=&quot;presentation&quot;&gt;补充：以上基于倒排索引的文本召回方式。除此之外还有基于相同类目、其他相似属性的召回方式，以及基于深度学习的向量召回。&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n541&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;接着问题来了：&lt;/span&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n908&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n909&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档1、2，谁在前，谁在后的顺序怎么决定呢？&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p cid=&quot;n910&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;接着下文来讲搜索引擎排序的实现。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n911&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;排序&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n912&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;引入上面的问题：&lt;/span&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n913&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n914&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档1、2，谁在前，谁在后的顺序怎么决定呢？&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p cid=&quot;n915&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;答：文档的相关性决定的，搜索引擎会给文档的相关性进行打分score。通常决定这个分数score主要是两个指标：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n921&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;可以简单理解为相关性 &lt;/span&gt;&lt;span&gt;score = 文档率 * 逆文档率&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，&lt;strong&gt;相关性score的值越高排序越靠前&lt;/strong&gt;，接着，我们分别看看相关概念的含义。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n556&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;什么是词频(tf:Term Frequency)&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n923&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;还是使用上面的文档：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n923&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n924&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n925&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n926&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档ID&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n927&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档内容(Doc)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n928&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;中文分词结果(Terms)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n929&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n930&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n931&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商设计手册SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n932&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商 / 设计 / 手册 / SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n933&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n934&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n935&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀是电商的一种营销手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n936&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀 / 电商 / 一种 / 营销 / 手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n937&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n938&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n939&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车是电商购买流程最重要的一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n940&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车 / 电商 / 购买 / 流程 / 重要 / 一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n941&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;/&gt;&lt;span md-inline=&quot;plain&quot;&gt;这里我们以词条：&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;电商/秒杀&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;为例。&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n942&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词频的简单算法：词频 = 词条在单个文档出现的次数/文档总词条数，词频的值越大越相关，反之越不相关。&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p cid=&quot;n573&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;比如，&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;秒杀&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;一词在文档1中出现的频率，以单个文档的全部词条为维度，我们简单的到了&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;秒杀&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;一词在各文档的词频：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n573&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n574&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n575&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n576&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档ID&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n577&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档内容(Doc)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n578&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;中文分词结果(Terms)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n579&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词条在单个文档出现的次数&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n580&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词频(秒杀)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n581&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n582&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n583&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商设计手册SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n584&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商 / 设计 / 手册 / SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n585&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n586&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;0/4=0&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n587&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n588&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n589&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀是电商的一种营销手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n590&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀 / 电商 / 一种 / 营销 / 手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n591&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n592&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1/5=0.2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n593&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n594&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n595&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车是电商购买流程最重要的一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n596&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车 / 电商 / 购买 / 流程 / 重要 / 一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n597&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n598&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;0/6=0&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n599&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;同理，我们简单的到了&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;电商&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;一词在各文档的词频：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n599&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;表格&lt;/span&gt;&lt;span&gt;左右滑动查看&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n600&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n601&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n602&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档ID&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n603&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;文档内容(Doc)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n604&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;中文分词结果(Terms)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n605&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词条在单个文档出现的次数&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n606&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词频(电商)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n607&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n608&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n609&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商设计手册SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n610&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商 / 设计 / 手册 / SkrShop&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n611&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n612&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1/4=0.25&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n613&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n614&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n615&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀是电商的一种营销手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n616&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀 / 电商 / 一种 / 营销 / 手段&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n617&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n618&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1/5=0.2&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n619&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n620&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n621&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车是电商购买流程最重要的一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n622&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;购物车 / 电商 / 购买 / 流程 / 重要 / 一步&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n623&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n624&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1/6=0.167&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure cid=&quot;n625&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n626&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n627&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索名词概念&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n628&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;描述&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n629&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n630&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词频(tf:Term Frequency)&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n631&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词条在单个文档出现的次数/文档总词条数&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 cid=&quot;n632&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;什么是逆文档率(idf:Inverse Document Frequency)&lt;/span&gt;&lt;/h5&gt;&lt;p cid=&quot;n1003&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;对于单个文档而言，词频的值越大越相关。&lt;/span&gt;&lt;/p&gt;&lt;blockquote cid=&quot;n1004&quot; mdtype=&quot;blockquote&quot;&gt;&lt;p cid=&quot;n1005&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;思考个问题，如果某个词条在所有文档都出现，相关性越好还是越不好？&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;pre spellcheck=&quot;false&quot; lang=&quot;&quot; cid=&quot;n1006&quot; mdtype=&quot;fences&quot;/&gt;&lt;p cid=&quot;n1007&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;这个就是文档率：&lt;/span&gt;&lt;span&gt;文档率 = 包含某个词条的文档数 / 所有文档数&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;，文档率值越大越不相关，反之相关。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1008&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;因为词频的值越大越相关，反之越不相关。为了保证和词频的逻辑一致，以及最终相关得分越高越相关，调整了文档率的算法，调换了分子分母：&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;所有文档数 / (包含某个词条的文档数 + 1)&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;加1保证分母不为零，这个就是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;逆文档率&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1009&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;逆文档率 = &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;所有文档数 / (包含某个词条的文档数 + 1)&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1010&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;但是呢，因为文档数往往特别大，上面的到的&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;span/&gt;&lt;code&gt;逆文档率&lt;/code&gt;&lt;span/&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的值会巨大无比，所以调整下公式，引入对数，降低值的大小，且让值变得平滑：&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1011&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;逆文档率 = log(所有文档数 / (包含某个词条的文档数 + 1))&lt;/span&gt;&lt;/p&gt;&lt;figure cid=&quot;n642&quot; mdtype=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr cid=&quot;n643&quot; mdtype=&quot;table_row&quot;&gt;&lt;th&gt;&lt;span cid=&quot;n644&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;词条(Term)&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th&gt;&lt;span cid=&quot;n645&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;逆文档率&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr cid=&quot;n646&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n647&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;电商&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n648&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;log(3/(3+1))&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr cid=&quot;n649&quot; mdtype=&quot;table_row&quot;&gt;&lt;td&gt;&lt;span cid=&quot;n650&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;秒杀&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;&lt;span cid=&quot;n651&quot; mdtype=&quot;table_cell&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;log(3/(1+1))&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p cid=&quot;n652&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;最&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;&lt;span&gt;终就计算出每个文档分别对应每个Query词条的相关性score(tf/idf)：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;相关性score = 文档率 * 逆文档率&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h4 cid=&quot;n657&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;粗排/精排&lt;/span&gt;&lt;/h4&gt;&lt;p cid=&quot;n658&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;上面利用tf/idf分数(&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;相关性score = 文档率 * 逆文档率&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;)排序的结果只是对召回文档的初步排序，称之为&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;粗排&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n658&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;得到&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;粗排&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;的结果后，通常还会把文档按照实际业务的要求进行更精确的排序，比如通过&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;人工干预&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;增加一些文档的权重，使之排序更靠前，这个过程就是&lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot;&gt;&lt;code&gt;精排&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot;&gt;。&lt;/span&gt;&lt;/p&gt;&lt;h3 cid=&quot;n1023&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索过程总结&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n1026&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;1. 索引过程：文档(Doc) -&amp;gt; 分析 -&amp;gt; 倒排索引。&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1027&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.6101123595505618&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;890&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdiagOiaMt0sNFz7vkDxSpGkThrygTIHYu0yYp9Mj7ILHcsWzrJgv7sO0K5VuMX2ibiaz2mvrY7xYwVtGg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n1027&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1030&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;2. 查询过程：关键字(Query) -&amp;gt; 分析 -&amp;gt; 召回 -&amp;gt; 排序。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;2.6034063260340634&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;411&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdiagOiaMt0sNFz7vkDxSpGkThMImKPd8KaI4hMKeiaibH8vvxY12bCILT15spbKrBxfOlgyBGQhmiapFYw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 cid=&quot;n1032&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;搜索引擎ES进阶&lt;/span&gt;&lt;/h2&gt;&lt;hr/&gt;&lt;h3 cid=&quot;n1033&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;索引(名词)的基本结构&lt;/span&gt;&lt;br/&gt;&lt;/h3&gt;&lt;p cid=&quot;n1045&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7377049180327869&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1159&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdiar3HavA35kYebk3UATDZszPgaygBT8f9CJFxVDibagNmf15uiaOvicBYk0EAXucnOy7gvIaWo5qozTQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n1045&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n1046&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;进一步完善搜索过程：加入更详细的索引(名词)结构。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1.6427432216905902&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1254&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdiar3HavA35kYebk3UATDZszcAvRSkia9l8m7nicoxBiaQKMc3owjOrMj6WsoNXGu8zicicMlDxpnzNvl7w/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h3 cid=&quot;n1048&quot; mdtype=&quot;heading&quot;&gt;&lt;span md-inline=&quot;plain&quot;&gt;搜索引擎ES的逻辑结构&lt;/span&gt;&lt;/h3&gt;&lt;p cid=&quot;n1049&quot; mdtype=&quot;paragraph&quot;&gt;&lt;/p&gt;&lt;p cid=&quot;n1049&quot; mdtype=&quot;paragraph&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.45740740740740743&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdj3AumpuRF8QTgYR53wTUSCibsT361Schd2aopQWSgSvBCFltF1ib9JxdK6WicVLSiaOhQia0Un0WKdQyw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n1049&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span md-inline=&quot;link&quot;&gt;&lt;span md-inline=&quot;image&quot; data-src=&quot;http://cdn.tigerb.cn/20220129191435.png&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr/&gt;&lt;section&gt;&lt;span&gt;[&lt;strong&gt;Skr Shop&lt;/strong&gt;]&lt;/span&gt; &lt;span&gt;项目地址&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;长按进入：https://github.com/skr-shop/manuals&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;280&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/zm9WZ2XoW58rbPkppUPJFHh8ffOK2L0vJX6qphafrsY6LSO7IgNaIn7V2M9mgz1icc1AYbFmy8b24YGsgEsibSIw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Skr Shop系列更多文章&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;92394&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-id=&quot;92394&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;                                                  &lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-croporisrc=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/TiccVmMZ3icdjgYXG2lqehHdjfgjkAGE7ZKY5cVN8UiahH0XYYzMLvUrJXH4YZBDDib7YQ4Wh0hs3Yvhz72ZUGnqZw/0?wx_fmt=jpeg&quot; data-cropx1=&quot;256&quot; data-cropx2=&quot;1002.6666666666666&quot; data-cropy1=&quot;0&quot; data-cropy2=&quot;725.3333333333333&quot; data-ratio=&quot;0.9651474530831099&quot; data-type=&quot;jpeg&quot; data-w=&quot;746&quot; data-width=&quot;100%&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_jpg/TiccVmMZ3icdgib1ib9occlfPlaPFY4ZGQlBrR2YoVD6IapgIuZsWCiccf92zjTRWPW4IQdZxibe7vGaeibb7QCmbq2wA/640?wx_fmt=jpeg&quot;/&gt;&lt;/section&gt;&lt;section data-width=&quot;100%&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA5MDEwMDYyOA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/TiccVmMZ3icdia9Gagoyr7f529Zq7RkVUsUymKGWVic6b7J5eK7cgQ8RxtxsZPh0yicclre6QclI6oprVIrxV5axibtQ/0?wx_fmt=png&quot; data-nickname=&quot;TIGERB&quot; data-alias=&quot;tigerbcode&quot; data-signature=&quot;技术不凌驾业务 业务不拖累技术&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;br/&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.06302521008403361&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;714&quot; data-src=&quot;https://mmbiz.qpic.cn/sz_mmbiz_png/TiccVmMZ3icdjOmxkheVnwCeibLWia2yTSSAnu4wH1RgmdCrGrIicz5oicSN5gbZxKaiaZ3oicxDC3iaOCm92d2VjbqGMmw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9640cce122e6fa8c4e10fb97a31bf094</guid>
<title>阿里慢SQL治理5大经典案例</title>
<link>https://toutiao.io/k/77yywq6</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwOTIxNDQ3OA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8YRIaicYx5pzj5Cxwick8DamnOgbTJu96QTibKyHEDZt1815yOV1r27oZ6HgoYTEYWYLRz4jIV4iasHgg/0?wx_fmt=png&quot; data-nickname=&quot;dbaplus社群&quot; data-alias=&quot;dbaplus&quot; data-signature=&quot;围绕Database、BigData、AIOps的企业级专业社群。资深大咖、技术干货，每天精品原创文章推送，每周线上技术分享，每月线下技术沙龙，每季度Gdevops&amp;amp;DAMS行业大会.&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;菜鸟供应链金融慢sql治理已经有一段时间，自己负责的应用持续很长时间没有慢sql告警，现阶段在推进组内其他成员治理应用慢sql。这里把治理过程中的一些实践拿出来分享下。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;一、全表扫描&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;1、案例&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;count&lt;/span&gt;(*) &lt;span class=&quot;code-snippet__keyword&quot;&gt;AS&lt;/span&gt; tmp_count &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; ( &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;`XXX_rules`&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt; = &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;BY&lt;/span&gt; gmt_create &lt;span class=&quot;code-snippet__keyword&quot;&gt;DESC&lt;/span&gt; ) a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;2、溯源&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;在分页查询治理的文章里已经介绍过我们系统旧的分页查询逻辑，上面的查询sql明显就是分页查询获取总记录数，通过XXX_rules表的分页查询接口溯源，找到发起调用的页面是我们小二后台的一个操作商家准入的页面，页面打开后直接调用分页查询接口，除了分页参数，不传入其他任何查询参数，导致扫描全表。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;3、分析&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section label=&quot;Copyright © 2015 Yead All Rights Reserved.&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p&gt;&lt;span&gt;灵魂拷问：为什么要扫描全表？全表数据展示到页面，花里胡哨的数据有用吗？&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;调研：和经常使用这个页面的运营聊后了解到，打开页面查询出的全表数据对运营是没有用的，他们根本不看这些数据。运营的操作习惯是拿到商家id，在页面查询框中输入商家id，查到商家数据后进行操作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;p&gt;4、解决方案&lt;/p&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;由此优化方案就很明朗了：打开页面时不直接查询全量数据，等运营输入商家id后，将商家id作为参数进行查询。XXX_rules表中，商家id这一常用查询条件设置为索引，再结合分页查询优化，全表扫描慢sql得以解决。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;优化后的小二后台页面如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.17962962962962964&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8aLqFHnREiaQEsAPIUlX70ibekeniaJm2SXicNEFJnDCibDIS3kFibiasZO1vp8vsdFgibl4oicGFYjgFib6BCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;打开页面时未查询任何数据，查询条件商家账户为必填项。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;优化后的sql为:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;count&lt;/span&gt;(*) &lt;span class=&quot;code-snippet__keyword&quot;&gt;AS&lt;/span&gt; tmp_count &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; ( &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;   &lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;`xxx_rules`&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt; = &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;`rule_value`&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;2928597xxx&#x27;&lt;/span&gt; ) a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;执行EXPLAIN得到结果如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.08791208791208792&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8aLqFHnREiaQEsAPIUlX70ibe6tlGF4hnGzxibRQMemibOw1icJpQHvWAhPOhgiaF8KZDOsjDiboibiaKkicAwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;728&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;可以看到命中了索引，扫描行数为3，查询速度明显提高。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;5、思考&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section&gt;&lt;span&gt;扫描全表治理简单来说就是加入查询条件，命中索引，去除全表扫描查询，虽然有些粗暴，但并不是没有道理。实际业务场景中，很少有要扫描全表获取全部数据的情况，限制调用上游必须传入查询条件，且该查询条件能命中索引，能很大程度上避免慢sql。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;另外，再引申下，XXX_rules初始的用意是准入表，记录金融货主维度的准入情况，最多也就几千条数据，但是很多同事将这张表理解为规则表，写入很多业务相关规则，导致这个表膨胀到一百多万条数据，表不clean了。这就涉及到数据表的设计使用，明确表的使用规范，不乱写入数据，能给后期维护带来很大的便利。&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;二、索引混乱&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;1、示例 &lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.44495412844036697&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8aLqFHnREiaQEsAPIUlX70ibeiakQibFW9PF3dH1eDObE7ibtEClUK9auvA6zVDgAVnNPrbCqfFQwnnAzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;436&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;2、分析&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;除了时间、操作人字段，XXX_rules表就rule_name、rule_value、status、product_code四个字段，表的索引对这四个字段做各种排列组合。存在如下问题：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;1）rule_name离散度不高，放在索引首位不合适；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2）前三个索引重合度很高；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;显然是对索引的命中规则不够了解。XXX_rules表很多业务有定时任务对其写入删除，索引多、混乱，对性能有很大的影响。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;高性能的索引有哪些，再来回顾下：&lt;/span&gt;&lt;/strong&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;①独立的列：索引列不能是表达式的一部分；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;②选择区分度高的列作为索引；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;③选择合适的索引列顺序：将选择性高的索引列放在最前列；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;④覆盖索引：查询的列均在索引中，不需要回查聚簇索引；&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;⑤使用索引扫描来做排序;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;⑥在遵守最左前缀的原则下，尽量扩展索引，而不是创建索引。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;但凡记得第&lt;strong&gt;③&lt;/strong&gt;和&lt;strong&gt;⑥&lt;/strong&gt;规则，也不至于把索引建成这样。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;3、治理&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;对索引进行整合如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.2912371134020619&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8aLqFHnREiaQEsAPIUlX70ibeqs3I2vBeEUCmSPxrRzic9wkzLiaicH9dlia8ZicDC451UkFV0YgRvgBIydQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;388&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;系统中有很多任务拉取整个产品下的准入记录，然后进行处理，所以将区分度较高的product_code放在索引首位，然后添加rule_name、status字段到索引里，进一步过滤数据，减少扫描行数，避免慢sql。针对常用的rule_value查询条件，可以命中UK，因此不用单独建立索引。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;三、非必要排序&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;1、问题描述&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;很多业务逻辑中，需要拉取满足某个条件的记录列表，查询的sql语句带有order by，记录比较多的情况，排序代价往往很大，但是查询出来的记录是否有序对业务逻辑没有影响，比如分页治理里讨论的count语句，只需要统计条数，order by对条数没有影响，再比如查出记录列表后，不依赖记录的顺序遍历列表处理数据，这时候order by多此一举。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;2、解决方案&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;查询sql无limit语句，且业务处理逻辑不依赖于order by后列表记录的顺序，则去除查询sql中的order by语句。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;四、粗粒度查询&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;1、问题描述&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;业务中有很多定时任务，扫描某个表中某个产品下所有数据，对数据进行处理，比如：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; * &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; XXX_rules&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;WHERE&lt;/span&gt; rule_name = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;apf_distributors&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;status&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;00&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;AND&lt;/span&gt; product_code = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;ADVANCE&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;三个查询条件都是区分度不高的列，查出的数据有27W条，加索引意义也不大。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;p&gt;2、分析&lt;/p&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;实际业务量没那么大，顶多几千条数据，表里的数据是从上游同步过来的，最好的办法是让上游精简数据，但是由于业务太久远，找上游的人维护难度太大，因此只能想其他的办法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个定时任务目的是拉出XXX_rules表的某些产品下的数据，和另一张表数据对比，更新有差异的数据。每天凌晨处理，对时效性没有很高的要求，因此，能不能转移任务处理的地方，不在本应用机器上实时处理那么多条数据？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;p&gt;3、解决方案&lt;/p&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;数据是离线任务odps同步过来的，首先想到的就是dataWork数据处理平台。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;建立数据对比任务，将定时任务做的数据对比逻辑放到dataWork上用sql实现，每天差异数据最多几百条，且结果集含有区分度很高的列，将差异数据写入odps表，再将数据回流到idb。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;新建定时任务，通过回流回来的差异数据中区分度高的列作为查询条件查询XXX_rules，更新XXX_rules，解决了慢sql问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;这个方法的前提是对数据实效性要求不高，且离线产出的结果集很小。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86122&quot; data-custom=&quot;#138bde&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section&gt;&lt;p data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;五、OR导致索引失效&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;p&gt;1、案例&lt;/p&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;count&lt;/span&gt;(*)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; XXX_level_report&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt; = &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;EXISTS&lt;/span&gt; (&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;FROM&lt;/span&gt; XXX_white_list t&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;WHERE&lt;/span&gt; (t.biz_id = customer_id&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;OR&lt;/span&gt; customer_id &lt;span class=&quot;code-snippet__keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;CONCAT&lt;/span&gt;(t.biz_id, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;@%&#x27;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;AND&lt;/span&gt; t.status = &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;AND&lt;/span&gt; (t.start_time &amp;lt;= &lt;span class=&quot;code-snippet__keyword&quot;&gt;CURRENT_TIME&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;OR&lt;/span&gt; t.start_time &lt;span class=&quot;code-snippet__keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;AND&lt;/span&gt; (t.end_time &amp;gt;= &lt;span class=&quot;code-snippet__keyword&quot;&gt;CURRENT_TIME&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;OR&lt;/span&gt; t.end_time &lt;span class=&quot;code-snippet__keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;AND&lt;/span&gt; t.biz_type = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;GOODS_CONTROL_BLACKLIST&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;2、分析&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;explain上述查询语句，得到结果如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.11018518518518519&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/ufWcjcomw8aLqFHnREiaQEsAPIUlX70ibesmiatSb1N6670SJ2qdSqlqVY1NaUr2bP2YPNLicmNOposficfZ7CzaZUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;XXX_white_list表有将biz_id作为索引，这里查询XXX_white_list表有传入biz_id作为查询条件，为啥explain结果里type为ALL，即扫描全表？索引失效了？索引失效有哪些情况？&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;索引失效场景：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;①OR查询左右有未命中索引的；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;②复合索引不满足最左匹配原则；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;③Like以%开头；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;④需要类型转换；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;⑤where中索引列有运算；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;⑥where中索引列使用了函数；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;⑦如果mysql觉得全表扫描更快时（数据少时）&lt;/span&gt;&lt;strong&gt;&lt;span/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上述查询语句第8行，customer_id为XXX_level_report表字段，未命中XXX_white_list表索引，导致索引失效。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;86152&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span data-bgopacity=&quot;40%&quot;/&gt; &lt;span data-bgopacity=&quot;25%&quot;/&gt; &lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;p&gt;3、解决方案&lt;/p&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;p&gt;&lt;span&gt;这个语句用condition、枚举、join花里胡哨的代码拼接起来的，改起来好麻烦，而且看起来“OR customer_id LIKE CONCAT(t.biz_id, &#x27;@%&#x27;)”这句不能直接删掉。最后重构了该部分的查询语句，去除or查询，解决了慢sql。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;section data-role=&quot;paragraph&quot;&gt;&lt;section&gt;&lt;span&gt;作者丨如期&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;来源丨公众号：阿里技术（ID：ali_tech）或者网址&lt;/span&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;dbaplus社群欢迎广大技术人员投稿，投稿邮箱：&lt;/span&gt;&lt;span&gt;editor@dbaplus.cn&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>