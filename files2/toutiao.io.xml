<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>dd725b1b0ae3074638a3bbb369005e7a</guid>
<title>撸猫必备三件套，立即下单现价仅需8.9元！</title>
<link>https://toutiao.io/k/14kxbpf</link>
<content:encoded>&lt;div&gt;&lt;body id=&quot;readabilityBody&quot;&gt;


&lt;/body&gt;
&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>9a83a95e1e121f6fa2027ea234c3c2e7</guid>
<title>从零开始搭建公司微服务授权架构技术栈（3种模式），这架构稳的一批...</title>
<link>https://toutiao.io/k/4g58j8v</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section&gt;&lt;blockquote class=&quot;js_blockquote_wrap&quot; data-type=&quot;2&quot; data-url=&quot;&quot; data-author-name=&quot;&quot; data-content-utf8-length=&quot;30&quot; data-source-title=&quot;&quot;&gt;&lt;section class=&quot;js_blockquote_digest&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;作者 | Graham Kaemmer  &lt;/span&gt;&lt;span&gt;译者 | Rayden  &lt;/span&gt;&lt;span&gt;审校 | 王强&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/blockquote&gt;&lt;section&gt;在过去的 5 个月里，我与 50 多家公司讨论了他们的授权系统。其中超过一半的公司以某种形式使用微服务，我对它们带来的授权挑战非常感兴趣。在面向服务的后端进行授权这一问题上，似乎没有公认的最佳实践。我与很多团队进行了交谈，有的团队将用户角色附加到身份验证令牌上，有的将所有内容存储在专门用于授权的图数据库中，还有的团队在 Kubernetes 边车（sidecars）中自动执行授权检查。这些解决方案中都沉淀了数月或数年的工程工作，每个团队都发明了自己的轮子。这是为什么?&lt;br/&gt;&lt;/section&gt;&lt;p&gt;当你有一个单体应用时，你通常只需要访问一个数据库来决定是否允许用户做某些事情。单体应用的授权策略本身不需要太关心在哪里找到数据（比如用户角色）——你可以假设所有数据都可用，如果需要加载额外数据，它也可以很容易地从单体应用数据库中获取。&lt;/p&gt;&lt;p&gt;但是这个问题在分布式架构中变得困难了许多。也许你正在将单体应用拆分为多个微服务，或者你正在开发一个新的计算密集型的服务，在运行作业之前需要检查用户权限。现在，决定谁可以做什么的数据可能不那么容易获取。你需要新的 api，以便你的服务能够相互谈论权限：“谁是这个组织的管理员？谁可以编辑这个文档？他们可以编辑哪些文档？”为了在服务 A 中做出决策，我们需要服务 B 中的数据，服务 A 的开发人员如何请求这些数据？服务 B 的开发人员如何使这些数据可用？&lt;/p&gt;&lt;p&gt;这些问题有很多答案，所以我试图将这些答案归纳为几个广泛的模式。这些模式不一定能覆盖所有解决方案（解决方案的世界很复杂），但我发现它们能帮助我与不同的人谈论他们所构建的东西。当我与一个新团队进行对话时，它们让我更容易对解决方案进行分类。&lt;/p&gt;&lt;p&gt;在构建微服务时，我看到了处理授权数据的三种主要模式。我将在这篇文章中讨论这三种方法：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;将数据留在原处，让服务直接请求它。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;使用网关将数据附加到所有请求，以使其随处可用。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;将授权数据集中到一个地方，并将所有决策转移到那个地方。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;
&lt;span&gt;1&lt;/span&gt; 为什么微服务中的授权更困难？&lt;/section&gt;&lt;p&gt;让我们以某个授权场景为例，这是一个用于编辑文档的应用程序。它很简单，但应该能说明问题：&lt;/p&gt;&lt;p&gt;在一个单体应用中，用一种清晰的方式表达这种逻辑并不太难。当你需要检查用户是否可以阅读文档时，你可以检查该文档属于哪个组织，加载该组织中用户的角色，并检查该角色是成员还是管理员。这些检查可能需要额外的一两行 SQL 语句，但数据都在一个地方。&lt;/p&gt;&lt;p&gt;当你将应用程序拆分为不同的服务时，会发生什么情况？也许你已经剥离了一个新的“文档服务”——现在，检查特定文档的读权限需要检查位于该服务数据库之外的用户角色。文档服务如何访问它所需要的角色数据？&lt;/p&gt;&lt;section&gt;&lt;span ql-global=&quot;true&quot; line-inline=&quot;db52&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6658851113716295&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FE4VibF0SjfPmDmQ7n4ELE6ppylMPPda6a1icp691ZR2xFYRr155EIAiaYQ8Ovr1tnFR2LbgJQ6AEibicbpCPfibdz3A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1706&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;
&lt;span&gt;2&lt;/span&gt; 模式 1：将数据留在原处&lt;/section&gt;&lt;p&gt;通常，最简单的解决方案是将数据留在原处，并让服务在需要时请求它所需要的数据。对于上述问题，你可能认为这是最明显的解决方案。&lt;/p&gt;&lt;p&gt;你可以将数据模型和逻辑分开，这样文档服务就可以控制向哪个角色授予哪些文档相关的权限（管理员可以编辑，成员可以读取，等等），然后用户服务公开一个 API 来获取组织中用户的角色。有了这个 API，权限检查可以像这样进行:&lt;/p&gt;&lt;section&gt;&lt;span ql-global=&quot;true&quot; line-inline=&quot;ad51&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6359803232607167&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FE4VibF0SjfPmDmQ7n4ELE6ppylMPPda6qtLGhSyTCocpibWCyNexhrHEXBNibGeGicY8nDxbkDVk73Ifo1sXJHycw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1423&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;有一个合理的论点认为最简单的解决方案就是最好的方案，在这里它通常是没问题的。根据我的经验，这通常是当团队开始转向微服务并想让用户授权正常工作的情况下所使用的解决方案。它完成了工作，而且不需要任何额外的基础设施。&lt;/p&gt;&lt;p&gt;当服务或团队数量增加、授权逻辑变得更复杂或面临更严格的性能要求时，此模式开始出现问题。要让该模式正常工作，任何新服务的开发人员都需要知道如何从用户服务中获取角色数据，而用户服务本身必须扩展以满足这种需求。随着服务依赖关系的增加，该模式可能会增加不可预测的延迟和重复请求。也许引入一个单独的“文件夹”服务就会导致系统需要通过服务之间的相互调用来进行权限检查：&lt;/p&gt;&lt;section&gt;&lt;span ql-global=&quot;true&quot; line-inline=&quot;655f&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.6256627783669141&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FE4VibF0SjfPmDmQ7n4ELE6ppylMPPda6b7ZxTIn2aVxzyoOKQDwsIwq57DV5iaqj0iaB61wSCqcxXNHavtlWp8ag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1886&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;尽管有变得混乱的风险，但这种模式可以让你走得很远。无需部署和维护额外的授权基础设施可能是一个巨大的优势，如果具有数据的服务能够处理来自需要数据的服务的负载，那么将它们串在一起就是一个很好的解决方案。&lt;/p&gt;&lt;p&gt;有一些团队遵循这种通用模式，但他们认为应该用某种专门的授权服务替换所有这些请求流，我和这些团队有过交谈。我总是问他们真正的问题是什么。如果问题是时延，也许在正确的位置添加缓存可以解决这个问题。如果授权逻辑在服务中变得越来越混乱，那么可能需要强制采用标准策略格式。（Oso 是一个解决方案；还有其他解决方案。）&lt;/p&gt;&lt;p&gt;但是，如果问题是你的数据模型变得过于复杂，或者你在重复实现相同的 api，或者权限检查需要与太多不同的服务通信，那么也许是时候重新考虑架构了。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;3&lt;/span&gt; 模式 2：请求网关&lt;/section&gt;&lt;p&gt;解决授权数据问题的一个优雅的解决方案是将用户角色包含在对服务（这些服务可能需要做出授权决策）的请求中。如果文档服务在请求中获得有关于用户角色的信息，那么它可以基于这些信息做出自己的授权决策。&lt;/p&gt;&lt;section&gt;&lt;span ql-global=&quot;true&quot; line-inline=&quot;8e1b&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.748319641523525&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FE4VibF0SjfPmDmQ7n4ELE6ppylMPPda6toHBzSdLYaVkh4t9UlXHAKXfO82bicPc2cs3Y6xVIf0lrVBqVzKU4TQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1339&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;在这种模式中，“网关”位于 API 和其最终用户之间。网关可以访问用户信息和角色信息，它可以在将请求传递给 API 本身之前将这些信息附加到请求中。当 API 接收到请求时，它可以使用来自请求的角色数据（例如在请求头中）来检查用户行为是否被允许。&lt;/p&gt;&lt;p&gt;网关通常同时负责身份验证和授权。例如，网关可能使用 Authorization 头对特定用户进行身份验证，然后另外获取该用户的角色信息。然后网关将带有用户 ID 和角色信息的请求代理给下游服务（上面示例中的文档服务）。&lt;/p&gt;&lt;p&gt;&lt;span ql-global=&quot;true&quot; line-inline=&quot;8a35&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7072135785007072&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FE4VibF0SjfPmDmQ7n4ELE6ppylMPPda6ZExtOvNVVomgawJibBzuYNTV9J1kSlWib54BVu4Jbzdda0JY29MPoDvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1414&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;网关模式的主要好处是其架构简单。它使下游服务（如文档服务）的开发人员不必关心角色数据来自哪里。授权数据在请求中始终是可用的，因此可以立即执行权限检查，而不需要任何额外的调用。&lt;/p&gt;&lt;p&gt;请注意，在这里使用明文头信息开辟了新的攻击途径——你需要确保恶意客户端不能注入它们自己的头信息。作为一种替代方法，用户角色或其他访问控制数据可以包含在他们的身份验证令牌中，通常表示为 JWT。&lt;/p&gt;&lt;p&gt;如果授权数据由少量角色组成（例如，每个用户在一个组织中只能有一个角色），网关模式的效果最好。当权限开始不仅仅依赖于用户在组织中的角色时，请求的规模就会激增。也许用户可以有不同的角色，这取决于他们试图访问的资源类型（特定事件的组织者，或特定文件夹的编辑器）。有时，这些数据太大以至于无法放入请求头中，而其他时候，一次获取所有数据效率很低。如果是这种情况，将所有相关的授权数据塞到令牌或请求头中并不能完全解决问题。&lt;/p&gt;&lt;section&gt;
&lt;span&gt;4&lt;/span&gt; 模式 3：集中存放所有授权数据&lt;/section&gt;&lt;p&gt;另一种解决方案是将所有授权数据和逻辑放在一个地方，与需要实施授权的所有服务分开。实现此模式的最常见方法是构建专用的“授权服务”。然后，当其他服务需要执行权限检查时，它们会转向询问授权服务：&lt;/p&gt;&lt;section&gt;&lt;span ql-global=&quot;true&quot; line-inline=&quot;caa4&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.611878453038674&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/FE4VibF0SjfPmDmQ7n4ELE6ppylMPPda6MxLAzZStpsFksYpp5QhicRicqEH95G4ibbco1Wicg6SS5P2ZnDsicJPuoiag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1448&quot;/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p&gt;在这个模型中，文档服务根本不关心用户的角色：它只需要询问授权服务，用户是否可以编辑文档，或者用户是否可以查看文档。授权服务本身包含做出该决策所需的所有内容（包括角色数据）。&lt;/p&gt;&lt;p&gt;这可能非常有吸引力：你现在有一个负责授权的系统，这符合微服务的哲学。以这种方式进行责任分离有一些好处：团队中的其他开发人员不需要关心授权是如何工作的。因为它是独立的，所以你对授权服务所做的任何优化都有助于加速整个系统的其余部分。&lt;/p&gt;&lt;p&gt;当然，这种责任分离是有代价的。现在，所有授权数据都必须保存在一个地方。决策中可能使用的所有内容都必须保存在一个集中式服务中，这些内容包括用户在组织中的身份、文档与其组织的关系。要么授权服务成为该数据的唯一真实来源，要么必须将数据从应用程序复制并同步到该中心（可能性更大）。授权系统必须理解作为所有权限基础的整个数据模型：组、共享、文件夹、来宾、项目。如果这些模型经常改变，授权系统可能成为新的开发任务的瓶颈。任意微服务中的任何更改都可能需要对授权服务进行更新，从而打破你在最初转向微服务时可能寻求的关注点分离效果。&lt;/p&gt;&lt;p&gt;还有其他因素会使授权服务变得棘手：部署这一负责保护每个请求的服务意味着你要负责实现高可用和低延迟。如果系统出现故障，则所有请求都会被拒绝。如果授权系统系统的响应很慢，那么每个请求都很慢。&lt;/p&gt;&lt;p&gt;谷歌的 Zanzibar 论文概述了这种模式的一种实现，但它也带来了挑战。你必须将所有数据以“元组”的形式插入到 Zanzibar 中（Alice 拥有这个文档，这个文件夹包含另一个文件夹，等等）。由于它限制了可以存储的数据，有些规则实际上不能仅用 Zanzibar 来表示，例如一些必须与时间、请求上下文有关的规则，或者依赖于某种计算的规则。有人将这些称之为“基于属性”的规则。例如，用户每周只允许创建 10 个文档，或者管理员可以将某些文件夹设置为“只读”，以防止对其中文档的编辑。在这些情况下，开发人员必须在 Zanzibar 之外编写自己的策略逻辑。&lt;/p&gt;&lt;p&gt;集中式授权存在的挑战往往会阻止大多数团队采用这种模式。采用该模式的应用往往有很多服务和足够复杂的数据模型，接受授权服务本身增加的复杂性对它们来说是有意义的。例如，为了从单体应用向微服务转型，Airbnb 建立了一个名为 Himeji 的授权服务以支持他们的授权模式。已经有一个专门的工程师团队为它工作了两年，而且可能会无限期地工作下去。&lt;/p&gt;&lt;p&gt;但是，如果你能够去除一些这类开销，那么对于许多使用微服务架构的团队来说，集中式授权服务可能是一个很有吸引力的选择。我的团队正在努力构建一个授权服务，力求避免集中所有授权数据的挑战。如果这是你所面临的问题，请联系我们。&lt;/p&gt;&lt;section&gt;&lt;span&gt;5&lt;/span&gt;你应该用哪一个?&lt;/section&gt;&lt;p&gt;当与工程师团队交谈时，我的指导意见总是“围绕应用程序构建授权，而不是反过来。”对于简单系统，维护大量额外基础设施代价高昂，最好将数据保存在其所在的位置，并将服务与专用 api 放在一起。某些应用程序可以通过基本用户角色（可使用 GWT）扩展到大规模，在这种情况下，授权网关可能是最佳的。一些拥有各种产品、授权模式和用户类型的公司可能更愿意将其数据集中到专用的授权服务中。&lt;/p&gt;&lt;p&gt;如果你对讨论你的授权系统感兴趣——例如你正在考虑进行一些重构，或者只是对它的工作方式不太满意，请与我们联系。你可以与 Oso 工程师安排 1x1 讨论，或者加入我们的 slack。我们喜欢讨论授权。&lt;/p&gt;&lt;p&gt;如果你曾经对混乱的授权系统感到沮丧，或者和我一样喜欢好的分布式系统问题，欢迎加入我们团队！我们正在招聘，来帮助我们推动进一步的思考。&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;原文链接：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;https://www.osohq.com/post/microservices-authorization-patterns&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-recommend-type=&quot;list-title&quot; data-recommend-tid=&quot;6&quot; data-mpa-template=&quot;t&quot; data-mid=&quot;&quot; data-from=&quot;yb-recommend&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;往期推荐&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247510421_1&quot; data-recommend-article-time=&quot;1641221256&quot; data-recommend-article-cover=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/eukZ9J6BEiadQiaibIxZqj8Spo4leoBWFyIicFQa9N443ltClhQod0LB6QPE5q3dL7ar2xqeoTQS9bmBhyRPLiae9Pw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;SpringBoot+ Dubbo + Mybatis + Nacos +Seata整合来实现Dubbo分布式事务，绝了！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510421&amp;amp;idx=1&amp;amp;sn=7f2ce87503531de812c16a5b7f3a6389&amp;amp;chksm=97414d7ea036c468294f673e102f0462d36c1e6672bd0fce219603791581dbabc44284446ac3#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510421&amp;amp;idx=1&amp;amp;sn=7f2ce87503531de812c16a5b7f3a6389&amp;amp;chksm=97414d7ea036c468294f673e102f0462d36c1e6672bd0fce219603791581dbabc44284446ac3&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;SpringBoot+ Dubbo + Mybatis + Nacos +Seata整合来实现Dubbo分布式事务，绝了！&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247510400_1&quot; data-recommend-article-time=&quot;1641135457&quot; data-recommend-article-cover=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/eukZ9J6BEiaevubGOWkFYiaHWqiajpc27JYictWibuQrzMaO2K0o6BDd2V3HHickNvlWYxmksXaofyX08U4PhhibIWaNw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;最详细的 Intellij IDEA 中使用 Debug 教程&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510400&amp;amp;idx=1&amp;amp;sn=a86aac00994b87d2d9db45921df826a1&amp;amp;chksm=97414d6ba036c47de52a4dabd9f7732339def69de7939502f3efb6e869ef131940ab08817f90#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510400&amp;amp;idx=1&amp;amp;sn=a86aac00994b87d2d9db45921df826a1&amp;amp;chksm=97414d6ba036c47de52a4dabd9f7732339def69de7939502f3efb6e869ef131940ab08817f90&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;最详细的 Intellij IDEA 中使用 Debug 教程&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247510380_1&quot; data-recommend-article-time=&quot;1641043620&quot; data-recommend-article-cover=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/eukZ9J6BEiacgs1CqydKhu4uDmiaic1icz9vYPibmeElsxLIQyaicNSdCiaXG7EiaoSN1yYBzzKeIeBzjF6iaCZNslmRRUg/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;SpringBoot 定时任务动态管理通用解决方案&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510380&amp;amp;idx=1&amp;amp;sn=df895fe602313be66f16dfb6173a2dbf&amp;amp;chksm=97414d87a036c491ca17ea8ba40ded544400dbc781799d1419368b9e743c68a7d3218db190f2#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510380&amp;amp;idx=1&amp;amp;sn=df895fe602313be66f16dfb6173a2dbf&amp;amp;chksm=97414d87a036c491ca17ea8ba40ded544400dbc781799d1419368b9e743c68a7d3218db190f2&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;SpringBoot 定时任务动态管理通用解决方案&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247510280_1&quot; data-recommend-article-time=&quot;1640179620&quot; data-recommend-article-cover=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/eukZ9J6BEiaevubGOWkFYiaHWqiajpc27JY9lgSj0wVozjvYibsMticxhSbfLibxmWfAgTFRNPtXz1njibnlSic0q1uL6Q/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;Spring Cloud与Dubbo优缺点详解&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510280&amp;amp;idx=1&amp;amp;sn=8c0f22191c8803c833cfe24c9b1c9221&amp;amp;chksm=97414de3a036c4f551971b10150ee967fc019504f06088b561e86894c27a69c27aa81be39b5d#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510280&amp;amp;idx=1&amp;amp;sn=8c0f22191c8803c833cfe24c9b1c9221&amp;amp;chksm=97414de3a036c4f551971b10150ee967fc019504f06088b561e86894c27a69c27aa81be39b5d&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;Spring Cloud与Dubbo优缺点详解&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247510304_1&quot; data-recommend-article-time=&quot;1640439837&quot; data-recommend-article-cover=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/eukZ9J6BEiad724QspawbpSEVBcjokzaul5r2asgZgjEiaGZcl0sLGYK5BHokpJRic4ZeUhIsian8aSvCpicYIJbXcA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;12 个适合做外包项目的开源后台管理系统&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510304&amp;amp;idx=1&amp;amp;sn=1839e50c4ba449139b921779baf1fa5e&amp;amp;chksm=97414dcba036c4ddc1be1da28e750afb56d9f2af5a52c8e1f04624f76aad6abcba3f012d5175#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510304&amp;amp;idx=1&amp;amp;sn=1839e50c4ba449139b921779baf1fa5e&amp;amp;chksm=97414dcba036c4ddc1be1da28e750afb56d9f2af5a52c8e1f04624f76aad6abcba3f012d5175&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;12 个适合做外包项目的开源后台管理系统&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247510190_1&quot; data-recommend-article-time=&quot;1639837023&quot; data-recommend-article-cover=&quot;https://mmbiz.qlogo.cn/mmbiz_jpg/eukZ9J6BEiadD6YQ4DgZXzCB3gofcDPRZhccmdiaxbQSkUDCTj7Bv31MTXmWsCp027FRdY8XrllWvwQ5ibIcef7CA/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;整理了35个快速开发平台，前后端都有 ，接私活拿来即用，非常方便！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510190&amp;amp;idx=1&amp;amp;sn=d8d2b54fd85952664e9cd9bccd2d0a3b&amp;amp;chksm=97414c45a036c55308b1b883a559a30518da3a6e0eaaf7901bb4e17cefd27e5d8fca18a12a96#rd&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIxMjU5NjEwMA==&amp;amp;mid=2247510190&amp;amp;idx=1&amp;amp;sn=d8d2b54fd85952664e9cd9bccd2d0a3b&amp;amp;chksm=97414c45a036c55308b1b883a559a30518da3a6e0eaaf7901bb4e17cefd27e5d8fca18a12a96&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot; wah-hotarea=&quot;click&quot;&gt;整理了35个快速开发平台，前后端都有 ，接私活拿来即用，非常方便！&lt;/a&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;pre ng-bind-html=&quot;message.MMActualContent&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.3648148148148148&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eukZ9J6BEiacKaQE1gbiaT0Jg9LQkMNm4ITSuEWopyzk7aFfnLIKRsxKf34O4fmAlWhNFnat2nPsOTRaPJyEXj2w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>96c79f82affdd8f904a3d3cbdb3485f6</guid>
<title>Flink 大规模作业调度性能优化</title>
<link>https://toutiao.io/k/r8koytk</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single js_wx_tap_highlight wx_tap_card&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left js_a11y_comma js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzU3Mzg4OTMyNQ==&amp;amp;action=getalbum&amp;amp;album_id=1929701066745397252#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;1929701066745397252&quot; data-tag_source=&quot;4&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#资料中心&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;81个&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section donone=&quot;shifuMouseDownCard(&#x27;shifu_c_008&#x27;)&quot; label=&quot;Copyright Reserved by PLAYHUDONG.&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section donone=&quot;shifuMouseDownCard(&#x27;shifu_c_008&#x27;)&quot; label=&quot;Copyright Reserved by PLAYHUDONG.&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section donone=&quot;shifuMouseDownCard(&#x27;shifu_c_008&#x27;)&quot; label=&quot;Copyright Reserved by PLAYHUDONG.&quot;&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;摘要：&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;本文作者洪志龙（柏星）&amp;amp; 朱翥（长耕），分享了如何在 Flink 1.13 版本和 1.14 版本中对 Flink 调度大规模作业的性能进行了优化。主要内容包括：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;性能测评结果&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;基于拓扑结构的优化&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;优化任务部署&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;针对 Pipelined Region 构建的优化&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Tips：&lt;/strong&gt;点击&lt;/span&gt;&lt;span&gt;&lt;strong&gt;「阅读原&lt;/strong&gt;&lt;strong&gt;文」&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;查看 FFA 2021 视频回放～&lt;/span&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;随着 Flink 流批一体架构不断演进和升级，越来越多的用户开始选择用 Flink 来同时承载实时和离线的业务。&lt;/span&gt;&lt;span&gt;离线业务和实时业务有一定差异性，其中比较关键的一点是 —— 离线作业的规模通常都远远大于实时作业。&lt;/span&gt;&lt;span&gt;超大规模的流批作业对 Flink 的调度性能提出了新的挑战。&lt;/span&gt;&lt;span&gt;在基于 Flink 1.12 版本部署大规模流批作业时，用户可能会遇到以下瓶颈：&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;需要很长时间才能完成作业的调度和部署；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;需要大量内存来存储作业的执行拓扑图以及部署时所需的临时变量，并且在运行过程中会出现频繁的长时间 GC，影响集群稳定性；&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;经测试，对于一个并发度为 10k 的 word count 作业，在其部署时 JobManager 需要 30 GiB 内存，并且从提交作业到所有任务节点部署完毕所需的总时间长达 4 分钟。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;此外，对于大规模作业，任务部署的过程可能会长时间阻塞 JobManager 的主线程。当主线程阻塞时，JobManager 无法响应任何来自 TaskManager 的请求。这会使得 TaskManager 心跳超时进而导致作业出错失败。在最坏的情况下，作业从故障恢复 (Failover) 并进行新一轮部署时又会出现心跳超时，从而导致作业一直卡在部署阶段无法正常运行。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;为了优化 Flink 调度大规模作业的性能，我们在 Flink 1.13 版本和 1.14 版本进行了以下优化：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;针对拓扑结构引入分组概念，优化与拓扑相关的计算逻辑，主要包括作业初始化、Task 调度以及故障恢复时计算需要重启的 Task 节点等等。与此同时，该优化降低了执行拓扑占用的内存空间；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;引入缓存机制优化任务部署，优化后部署速度更快且所需内存更少；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;基于逻辑拓扑和执行拓扑的特性进行优化以加快 Pipelined Region 的构建速度，从而降低作业初始化所需的时间。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p cid=&quot;n25&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;一、性能评测结果&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h2 cid=&quot;n25&quot; mdtype=&quot;heading&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;为了评估优化的效果，我们对 Flink 1.12 (优化前) 和 Flink 1.14 (优化后) 进行了对比测试。测试作业包含两个节点，由全连接边相连，并发度均为 10k。为了通过 blob 服务器分发 ShuffleDescriptor，我们将配置项 blob.offload.minsize 的值修改为 100 KiB。该配置项指定了通过 blob 服务器传输数据的最小阈值，大小超过该阈值的数据将会通过 Blob 服务器进行传输。该配置项的默认值为 1 MiB，而测试作业中节点的 ShuffleDescriptor 大小约为 270 KiB。测试结果如表 1 所示：&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;表 1 Flink 1.12 和 1.14 各流程时间对比&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;table interlaced=&quot;enabled&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;ue-table-interlace-color-single&quot;&gt;&lt;td valign=&quot;top&quot;&gt;&lt;br/&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;1.12&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;1.14&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;时间降低百分比(%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ue-table-interlace-color-double&quot;&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;作业初始化&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;11,431ms&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;627ms&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;94.51%&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ue-table-interlace-color-single&quot;&gt;&lt;td valign=&quot;top&quot;&gt;&lt;p&gt;&lt;span&gt;任务部署&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;63,118ms&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;17,183ms&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;72.78%&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ue-table-interlace-color-double&quot;&gt;&lt;td valign=&quot;top&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p&gt;&lt;span&gt;故障恢复时计算重启节点&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;37,195ms&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;170ms&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;middle&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; align=&quot;center&quot;&gt;&lt;p&gt;&lt;span&gt;99.55%&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;除了时间大幅缩短以外，内存占用也明显降低。在 Flink 1.12 版本上运行测试作业时，JobManager 需要 30 GiB 内存才能保证作业稳定运行，而在 Flink 1.14 版本上只需要 2 GiB 即可。与此同时，GC 情况也得以改善。在 1.12 版本上，测试作业在初始化和 Task 部署的过程中都会出现超过 10 秒的长 GC，而在 1.14 版本上均未出现，这意味着心跳超时等问题出现的概率更低，作业运行更为稳定。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在 1.12 版本上，除去申请资源的时间，测试作业需要至少 4 分钟才能部署完成。而作为对比，在 1.14 版本上，除去申请资源的时间，测试作业在 30 秒内即可完成部署并开始运行。整体所需时间降低了 87%。鉴于此，对于需要部署运行大规模作业的用户，建议将 Flink 版本升级至 1.14 以提升作业调度和部署性能。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在接下来的部分中我们将进一步介绍各项优化的细节。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p cid=&quot;n57&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;二、基于拓扑结构的优化&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h2 cid=&quot;n57&quot; mdtype=&quot;heading&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;在 Flink 中，分发模式 (Distribution Pattern) 描述了上游节点与下游节点连接的方式，上游节点计算的结果会按照连边分发到下游节点。目前 Flink 中有两种分发模式：点对点 (Pointwise) 和全连接 (All-to-all)。如图 1 所示，当分发模式为点对点时，遍历所有边的计算复杂度为 O(N)；当分发模式为全连接时，所有下游节点与上游节点都有连边，遍历所有边的计算复杂度为 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;)，所需时间会随着规模增大而迅速增长。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p cid=&quot;n60&quot; mdtype=&quot;paragraph&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;209&quot; data-backw=&quot;572&quot; data-ratio=&quot;0.36436436436436437&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8AsYBicEePu4DgCnBq3xK78f3CerskWWO6Dh4ZsYwa3FkMKMuGqnStNuQIgNRnWIH66SJ21ibwluah31HnQO0o1Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1998&quot;/&gt;&lt;/p&gt;&lt;p cid=&quot;n60&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n60&quot; mdtype=&quot;paragraph&quot;&gt;&lt;span&gt;图 1 目前 Flink 的两种分发模式&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;Flink 1.12 版本使用执行拓扑边 (ExecutionEdge) 存储任务节点间连接的信息。当分发模式为全连接模式时，节点间一共会有 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;) 条边相连，当作业规模较大时会占用大量内存。对于两个全连接边相连且并发度为 10k 的节点，其连边数量为 1 亿，总共需要超过 4 GiB 内存来存储这些连边。在生产作业中可能会有多个全连接边相连的节点，这也就意味着随着作业规模的增长，所需内存也会大幅增长。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;从图 1 可以看到，对于全连接边相连的任务节点，所有上游节点所产生的结果分区 (Result Partition) 都是同构的，也就是说这些结果分区所连接的下游任务节点都是完全相同的。全连接边相连的所有下游节点也都是同构的，因为其所消费的上游分区都是相同的。鉴于节点间的 JobEdge 只有一种分发模式，我们可以按照分发模式对上游分区以及下游节点进行分组。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对于全连接边，由于其所有下游节点都是同构的，我们可以将这些下游节点划分为一组，称为节点组 (ConsumerVertexGroup)，全连接边相连的所有上游分区都与这个组连接。同样，所有同构的上游分区也被划分为同一组，称为分区组 (ConsumedPartitionGroup)，全连接边相连的所有下游节点都与这个组相连。优化方案的基本思路为：将所有消费相同结果分区的下游节点放入同一个节点组中，同时将所有与相同下游节点相连的结果分区放入同一个分区组中，如图 2 所示。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p cid=&quot;n69&quot; mdtype=&quot;paragraph&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;194&quot; data-backw=&quot;572&quot; data-ratio=&quot;0.3402340234023402&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8AsYBicEePu4DgCnBq3xK78f3CerskWWOGyPHpfuibCSbrcaiadc8ydEpeN1IyDvZhYF3qTS6PD3QCibh94tBO20dw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2222&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图 2 两种分发模式下如何对结果分区和任务节点进行分组&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在调度任务节点时，Flink 需要遍历每一个上游分区和下游节点间的所有连边。在优化前，由于连边的总数量为 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;)，因此将所有边遍历一遍的总时间复杂度为 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;)。优化后，执行拓扑边被分组的概念所替代。鉴于所有同构的分区都连接到同一个下游节点组，当 Flink 需要遍历所有连边时，只需要将该节点组遍历一遍即可，不需要重复遍历所有节点，这样就使得计算复杂度从 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;) 降到 O(N)。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对于点对点的分发模式，上游结果分区与下游节点逐一相连，因此分区组和节点组之间也是点对点相连，分组的数量级和执行拓扑边的数量级是一样的，也就是说，遍历所有连边的计算复杂度依旧是 O(N)。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;对于上文我们提到的 word count 作业，采用上述的分组方式取代执行拓扑边可以将执行拓扑的内存占用从 4 GiB 降至 12 MiB 左右。基于分组的概念，我们对作业初始化、任务调度以及故障恢复时计算需要重启的节点等耗时较长的计算逻辑进行了优化。这些计算逻辑都涉及到对上下游之间所有连边进行遍历的操作。在优化后，其计算复杂度都从 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;) 降为 O(N)。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p cid=&quot;n78&quot; mdtype=&quot;heading&quot;&gt;&lt;strong&gt;三、优化任务部署&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;h2 cid=&quot;n78&quot; mdtype=&quot;heading&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;section&gt;&lt;span&gt;对于 Flink 1.12 版本，当大规模作业内包含全连接边时，部署所有节点需要花费很长时间。此外，在部署过程中容易出现 TaskManager 心跳超时的情况，进而导致集群不稳定。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;目前任务部署包含以下几个阶段：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;JobManager 在主线程内为每一个 Task 创建任务部署描述符 (TaskDeploymentDescriptor，以下简称 TDD)；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;JobManager 在异步线程内将这些 TDD 进行序列化；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;JobManager 通过 RPC 通信将序列化后的 TDD 发送至 TaskManager；&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;span&gt;TaskManager 基于 TDD 创建任务并执行。&lt;/span&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;TDD 包含了 TaskManager 创建任务 (Task) 时所需的所有信息。当任务部署开始时，JobManager 会在主线程内为所有任务节点创建 TDD。在创建过程中 JobManager 无法响应任何其他请求。对于大规模作业，这一过程可能会导致 JobManager 主线程长时间被阻塞，进一步导致心跳超时，从而触发作业故障。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;鉴于任务部署时所有 TDD 都是由 JobManager 负责发送至各 TaskManager，这导致 JobManager 可能会成为性能瓶颈。尤其是对于大规模作业，部署时产生的 TDD 会占用大量内存空间，导致频繁的长时间 GC，进一步加重 JobManager 的负担。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;因此，我们需要缩短创建 TDD 所需的时间，避免心跳超时的发生。此外，如果能够缩减 TDD 的大小，网络传输所需的时间也会缩短，这样可以进一步加快任务部署的速度。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 cid=&quot;n98&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1 为 ShuffleDescriptor 添加缓存机制&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;ShuffleDescriptor 用于描述任务在运行时需要消费的上游结果分区的所有信息。当作业规模较大时，ShuffleDescriptor 可能是 TDD 中所占空间最大的一部分。对于全连接边相连的节点，当上游节点和下游节点的并发度都是 N 时，每一个下游节点需要消费 N 个上游结果分区，此时 ShuffleDescriptor 的总数量是 N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;。也就是说，计算所有节点的 ShuffleDescriptor 的时间复杂度为 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;)。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;然而，对于同构的下游节点来说，他们所消费的上游结果分区是完全一样的，因此部署时所需要的 ShuffleDescriptor 内容也是一样的。鉴于此，在部署时不需要为每一个下游节点重复计算 ShuffleDescriptor，只需要将计算好的 ShuffleDescriptor 放入缓存以供复用即可。这样计算 TDD 的时间复杂度就可以从 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;) 降至 O(N)。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为了缩减 RPC 消息的大小，进而降低网络传输的开销，我们可以对 ShuffleDescriptor 进行压缩。对于上文我们提到的 word count 作业，当节点并发度为 10k 时，每一个下游节点都会有 10k 个 ShuffleDescriptor，在压缩后其序列化值的总大小降低了 72%。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h3 cid=&quot;n105&quot; mdtype=&quot;heading&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2 通过 Blob 服务器分发 ShuffleDescriptor&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;Blob (Binary Large Object) 以二进制数据的形式存储大型文件。Flink 通过 blob 服务器在 JobManager 和 TaskManager 之间传输体积较大的文件。当 JobManager 需要将大文件传输至 TaskManager 时，它可以将文件传输至 blob 服务器 (同时会将文件传输至分布式文件系统)，并且获得访问文件所需的 token。当 TaskManager 获取到 token 时，它们会从分布式文件系统 (Distributed File System，DFS) 下载文件。TaskManager 会同时将文件存储到本地 blob 缓存中方便之后重复读取。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在任务部署的过程中，JobManager 负责将 ShuffleDescriptor 通过 RPC 消息分发到对应的 TaskManager 中。在发送完成后，RPC 消息会被垃圾回收器回收处理。但当 JobManager 创建 RPC 消息的速度大于发送的速度时，RPC 消息会逐渐堆积在内存中并且对 GC 造成影响，频繁触发长时间的 GC。这些 GC 会导致 JobManager 停摆，进一步拖慢任务部署的速度。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为了解决这个问题，Flink 可以通过 blob 服务器来分发大体积的 ShuffleDescriptor。首先 JobManager 将 ShuffleDescriptor 发送至 blob 服务器，而 blob 服务器会将 ShuffleDescriptor 存储至 DFS 中，TaskManager 在开始处理 TDD 时会从 DFS 下载数据。这样 JobManager 不需要将所有 ShuffleDescriptor 始终存储在内存中直至对应的 RPC 消息发出。经过优化后，在部署大规模作业时长时间 GC 的频率会明显降低。且鉴于 DFS 为 TaskManager 提供了多个分布式节点下载数据，JobManager 网络传输的压力也得以缓解，不再成为瓶颈，这样可以加快任务部署的速度。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p cid=&quot;n112&quot; mdtype=&quot;paragraph&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;295&quot; data-backw=&quot;572&quot; data-ratio=&quot;0.5159763313609468&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8AsYBicEePu4DgCnBq3xK78f3CerskWWObsfqicRcLf7Ac0mmyqJ7sT5rb55pOhBRTfyqJnKJwtgCF6qTXZB6XYQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1690&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图 3 JobManager 将 ShuffleDescriptor 分发至 TaskManager&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为了避免缓存过多导致本地磁盘空间不足，当 ShuffleDescriptor 所对应的结果分区被释放时，在 blob 服务器上存储的对应缓存会被清理。此外我们为 TaskManager 上 ShuffleDescriptor 的缓存添加了总大小的限制。当缓存超过一定大小时，缓存会按照最近最少使用 (LRU) 的顺序移除。这样可以保证本地磁盘不会被缓存占满，特别是对于 session 模式运行的集群。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section&gt;&lt;p cid=&quot;n117&quot; mdtype=&quot;heading&quot;&gt;四、针对 Pipelined Region 构建的优化&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;目前 Flink 中节点间有两种数据交换类型：pipelined 和 blocking。对于 blocking 的数据交换方式，结果分区会在上游全部计算完成后再交由下游进行消费，数据会持久化到本地，支持多次消费。对于 pipelined 数据交换，上游结果分区的产出和下游任务节点的消费是同时进行的，所有数据不会被持久化且只能读取一次。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;鉴于 pipelined 的数据流产出和消费同时发生，Flink 需要保证 pipelined 边相连的上下游节点同时运行。由 pipelined 边相连的节点构成了一个 region，被称为 Pipelined Region (以下简称 region)。在 Flink 中，region 是任务调度和 Failover 的基本单位。在调度的过程中，同一 region 内的所有 Task 节点都会被同时调度，而整个拓扑中所有 region 会按照拓扑顺序逐一进行调度。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;目前在 Flink 的调度层面有两种 region：逻辑层面的 Logical Pipelined Region 以及执行调度层面的 Scheduling Pipelined Region。逻辑 region 由逻辑拓扑 (JobGraph) 中的节点 JobVertex 构成，而执行 region 则由执行拓扑 (ExecutionGraph) 中的节点 ExecutionVertex 构成。类似于 ExecutionVertex 基于 JobVertex 计算产生，执行 region 是由逻辑 region 计算得到的，如图 4 所示。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p cid=&quot;n124&quot; mdtype=&quot;paragraph&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;218&quot; data-backw=&quot;572&quot; data-ratio=&quot;0.38060309698451505&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8AsYBicEePu4DgCnBq3xK78f3CerskWWOCtmibl3wW9gPtlJO61YlDPQD3S0NiaMHchK3sGhp7yUQF9rg9781wVaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2454&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图 4 逻辑 region 以及执行 region&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在构建 region 的过程中会遇到一个问题：region 之间可能存在环形依赖。对于当前 region，当且仅当其所消费的上游 region 都产出全部数据后才能进行调度。如果两个&lt;span&gt; &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt; &lt;/span&gt;之间存在环形依赖，那么就会出现调度死锁：两个&lt;span&gt; &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt; &lt;/span&gt;都需要等对方完成才能调度，最终两个&lt;span&gt; &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt; &lt;/span&gt;都无法被调度起来。因此，Flink 通过 Tarjan 强连通分量算法来发现环形依赖，并将具有环形依赖的&lt;span&gt; &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt; &lt;/span&gt;合并成一个&lt;span&gt; &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;，这样就能解决调度死锁的问题。Tarjan 强连通分量算法需要遍历拓扑内的所有边，而对于全连接的分发模式来说，其边的数量为 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;)，因此算法整体的计算复杂度为 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;)，随着规模变大会显著增长，从而影响大规模作业初始化的时间。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;p cid=&quot;n128&quot; mdtype=&quot;paragraph&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;230&quot; data-backw=&quot;572&quot; data-ratio=&quot;0.40285714285714286&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8AsYBicEePu4DgCnBq3xK78f3CerskWWOWuPK2zAXWB0ktc8X5cGia6JlUDyEx6mrECCNw20pB6ciaxjAKxbAd4Bw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2100&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图 5 具有调度死锁的拓扑&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;为了加快 region 的构建速度，我们可以基于逻辑拓扑和执行拓扑之间的关联进行优化。鉴于一个执行 region 只能由一个逻辑 region 中的节点派生，不会出现跨&lt;span&gt; &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt; &lt;/span&gt;的情况，Flink 在初始化作业时只需要遍历所有逻辑 region 并逐一转换成执行 region 即可。转换的方式跟分发模式相关。如果逻辑 region 内的节点间有任何全连接边，则整个逻辑 region 可以直接转换成一个执行 region。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p cid=&quot;n133&quot; mdtype=&quot;paragraph&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;569&quot; data-backw=&quot;572&quot; data-ratio=&quot;0.9947916666666666&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8AsYBicEePu4DgCnBq3xK78f3CerskWWOgoM4lMmQqNogRj6FudXia6soPiaS7fUa13ficujUljMulVtBE3RPPNjgQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1920&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;图 6 如何将逻辑 region 转换成执行 region&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果全连接边采用的是 pipelined 数据交换，所有与之相连的上下游节点都必须同时运行，也就是说全连接边所连接的所有&lt;span&gt; &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt; &lt;/span&gt;都要合并成一个&lt;span&gt; &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;。如果全连接边采用的是 blocking 数据交换，则会引入环形依赖，如图 5 所示。在这种情况下所有与之相连的&lt;span&gt; &lt;/span&gt;&lt;span&gt;region&lt;/span&gt;&lt;span&gt; &lt;/span&gt;都必须合并以避免调度死锁，如图 6 所示。鉴于只要有全连接边就直接生成一整个执行 region，在这种情况下不需要用 Tarjan 算法，整体计算复杂度只需要 O(N) 即可。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;如果在逻辑 region 内，所有节点间都只有点对点的分发模式，那么 Flink 依旧直接用 Tarjan 算法来检测环形依赖，鉴于点对点的分发模式其边数为 O(N)，算法的时间复杂度也只有 O(N)。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;在优化后，将逻辑 region 转换成执行 region 的整体计算复杂度从 O(N&lt;span&gt;&lt;sup&gt;&lt;span&gt;2&lt;/span&gt;&lt;/sup&gt;&lt;/span&gt;) 降为 O(N)。经测试，对于上文提到的 word count 作业，当两个节点间的连边为全连接边且数据交换方式为 blocking 时，构建 region 的总时间降低了 99%，从 8,257ms 降至 120ms。&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;FFA 2021 视频回放 &amp;amp; 演讲 PDF 获取&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注&lt;span&gt;「&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Apache Flink&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;」&lt;/span&gt;，回复：FFA2021&lt;/span&gt;&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzU3Mzg4OTMyNQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/8AsYBicEePu6FJHxaI14AsXuzeg4SybT0hiaCSohrIY75oiaOMzhQU7RouiafjNa76k2CtD6xxB2JqnawqFqV3zg3A/0?wx_fmt=png&quot; data-nickname=&quot;Apache Flink&quot; data-alias=&quot;apacheflinkcc&quot; data-signature=&quot;Flink 中文社区官微，Flink PMC 维护&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section&gt;&lt;span/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;更多 Flink 相关技术问题，可扫码加入社区钉钉交流群～&lt;/span&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100010716&quot; data-ratio=&quot;1.2078189300411524&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/8AsYBicEePu6PUTQaA1BP3Fb8uViccQpspmTibIYEfM7Wv6VACia9CDQfcN8huMVCafZ5s36wThUmbYRTOzMu4hd8A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;972&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt; &lt;img class=&quot;__bg_gif rich_pages wxw-img&quot; data-fileid=&quot;100010714&quot; data-ratio=&quot;1&quot; data-type=&quot;gif&quot; data-w=&quot;400&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/Z6bicxIx5naLWBBEcl44aIic1Mthe1nZiaramW5s4e8WwyCYYbTzu6uPBpgI6sxNXNymEnOYKpJpcrItUia7lS64mA/640?wx_fmt=gif&quot;/&gt;  &lt;/span&gt;&lt;strong&gt;&lt;span&gt;戳我，查看 FFA 2021 视频回放～&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>dedf5e1c144960f54f50bb5f90c4dfc1</guid>
<title>30+条业务线，携程微信小程序如何协同开发</title>
<link>https://toutiao.io/k/kh496og</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;p id=&quot;js_tags&quot; class=&quot;article-tag__list single-tag__wrp js_single js_wx_tap_highlight wx_tap_card&quot; data-len=&quot;1&quot; role=&quot;link&quot; aria-labelledby=&quot;js_article-tag-card__left js_a11y_comma js_article-tag-card__right&quot;&gt;
                                            
                                                                                    &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__left&quot; class=&quot;article-tag-card__left&quot;&gt;
                                    &lt;span class=&quot;article-tag-card__title&quot;&gt;收录于话题&lt;/span&gt;
                                    &lt;span class=&quot;article-tag__item-wrp no-active js_tag&quot; data-url=&quot;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MjM5MDI3MjA5MQ==&amp;amp;action=getalbum&amp;amp;album_id=1748173815676731402#wechat_redirect&quot; data-tag_id=&quot;&quot; data-album_id=&quot;1748173815676731402&quot; data-tag_source=&quot;4&quot;&gt;
                                        &lt;span class=&quot;article-tag__item&quot;&gt;#前端&lt;/span&gt;
                                    &lt;/span&gt;
                                &lt;/span&gt;
                                &lt;span aria-hidden=&quot;true&quot; id=&quot;js_article-tag-card__right&quot; class=&quot;article-tag-card__right&quot;&gt;18个&lt;/span&gt;
                                                                                        &lt;/p&gt;

                
                                
                
                

                
                                                                

                
                                


                
                
                
                
                                                                
                                
                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;span title=&quot;&quot; opera-tn-ra-cell=&quot;_$.pages:0.layers:0.comps:0.title1&quot;&gt;&lt;p&gt;&lt;strong&gt;作者简介&lt;/strong&gt;&lt;/p&gt;&lt;/span&gt; &lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;p&gt;&lt;span&gt;携程前端框架团队，为携程集团各业务线在PC、H5、小程序等各阶段提供优秀的Web解决方案。产品涉及各类前端/Node端应用框架、研发工作台、前端中台化、静态资源发布系统等。当前主要专注方向包括：新一代研发模式探索，Rust构建工具链路升级、Serverless应用框架开发、在线文档系统开发、低代码平台搭建、适老化与无障碍探索等。&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;一、背景&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前，携程小程序共有30+条业务线并行，上百个开发人员参与，常规发布两周一次，这么大体量的小程序以及这么快的业务迭代速度，对我们的技术提出了更高的要求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;在携程小程序的开发过程中，如何准确快速地把小程序交付给测试人员是一个繁琐的过程。按照以往的做法，开发人员将代码提交至发布分支后，还需要自行到公司的MCD（携程内部发布平台）进行发布，并且存在十几个业务线同时进行，排队打包的情况，打包完成后还要依赖PMO的发布才能获得体验码进行测试。而理想的模式是，开发人员只需要进行代码的提交即可，无需关心项目编译、打包、发布等流程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;跨团队协作，如何减少耦合，避免互相影响；数十个业务线共同维护一个小程序，而小程序必须作为整体发布，如何协调发布过程，让其有条不紊的进行将是我们讨论的重点。本文将从仓库管理、持续集成、持续交付几个方面进行详细介绍。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;二、协同流程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;携程小程序以模块化的思想，根据业务线对代码进行拆分隔离，采用多 BU （业务单元）的合作模式。为了避免多人协作时的版本切换和上线测试隔离等问题，我们把一个完整的项目按照业务类别划分为多个业务仓库，如基础业务、酒店业务、机票业务、火车票业务等，相互之间不存在依赖关系；通过发布仓库将业务仓库的代码进行合并、打包、上传，该仓库中的代码为预发布版本，如图1所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7813299232736572&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1cB6ymd0yXGTUTcYFEV7eiaWgIgwzmK3I47Wza6cVJm7WLpRKsVzQ6won0g4SJhNGT7I42CpLMHGag/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;782&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图1 协同架构图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;2.1 仓库管理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;每个业务模块都是一个独立的Git仓库（即Bundle），互不影响，要想实现协同，所有的业务仓库必须要有统一的规范，仓库的规范有以下几点：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;值得注意的是，在实现模块化的过程中，业务模块已经隔离，每个业务仓库都不能独立运行。为了协调各个仓库的路由配置，我们规定在每个模块的根目录下，添加各自的 app.json 配置，用于配置业务模块的路由，然后在工具打包时，将各模块的路由进行合并 Merge，对应关系如下图：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6358574610244989&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1cB6ymd0yXGTUTcYFEV7eiaWsFOSS9uPpBFu9lNywNpcjf2Kk7GOen99Kp0QbQZ2qK5YHibvKEqMEyA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;898&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2-1 业务仓库与完整小程序目录对照图&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;而在开发阶段需要用到我们提供的脚手架工具miniTools来完成项目的初始化、代码更新、远端Bundle打包等操作，常用命令如下所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.26796875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1cB6ymd0yXGTUTcYFEV7eiaWFUHRKqGY6wJ3DgbBmzBIMG8heCwTpiakZE8MJoQibeIrJvtXic9uygoXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;执行简单的命令minitTools —init即可拉取各个业务仓库中的代码，并将其合并成一个完整的小程序在微信IDE中进行开发。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;除了仓库规范，还需要对每个业务仓库的webhooks进行配置，用于跨仓库提交代码的同时触发发布仓库（weixin-auto.git）的pipeline。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.2  持续集成&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;为了降低开发成本，减少人工操作，基于微信小程序官方提供的miniprogram-ci工具，我们构建了一套自动化上传测试流程。通过在业务仓库配置webhooks，当业务仓库的发布分支（master）发生push事件时将触发发布仓库（weixin-auto.git）的pipeline，执行我们在 .gitlab-ci.yml文件中的设置的脚本，主要内容如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.3270440251572327&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1cB6ymd0yXGTUTcYFEV7eiaW7CSicL5RZrepELuYcicaLHJDjmDvY8dX2QGsXzNqkzbmhMjXwGFxkxBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1272&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2-2 gitlab-ci.yml核心配置&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;从上图可以看出，我们主要依赖git提供的git submodule命令以及脚手架工具miniTools。通过git submodule update --remote将第三方库（各个业务仓库）中最新提交到指定分支的代码合并到当前仓库（发布仓库）的指定位置中。然后，通过脚手架工具miniTools执行预定义的脚本文件，具体流程如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;1.0541795665634675&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1cB6ymd0yXGTUTcYFEV7eiaW3vep2ppmFyicncJQ7vDuIuEuP41mqtTfzdnrfp17www7njEQAUbErZQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;646&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2-3 pipeline运行流程&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1）获取服务端配置信息，主要包括releaseCommitHash、Size、RC（Release Candidate）数据：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;releaseCommitHash：用于版本控制，表示业务仓库在生产上使用的版本（commitHash）；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Size：用于Size控制，对各个业务线设置了可用的最大Size值；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;RC：用于控制该业务仓库的代码是否会自动合并至发布仓库中。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2）通过releaseCommitHash拉取各个业务仓库最新的代码并进行合并，组成&lt;/span&gt;&lt;span&gt;完整的小程序代码&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3）通过ESLint进行代码合法性检查，最大程度地避免基本语法错误；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4）通过微信官方提供的miniprogram-ci工具，进行自动化编译，删除无用代码减小体积；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5）Size检查：通过微信官方提供的miniprogram-ci的preview方法获取所有分包的大小以及测试二维码，通过计算查看当前业务仓库的代码提交是否会导致在Size超限，超限将导致发布失败；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;6）RC发布权限检查：服务端返回当前业务仓库的RC值（true/false）决定了我们是否要将其最新的代码合并至发布仓库的master分支，并且是否将最新的代码压缩成zip包，上传至发布仓库的release分支作为预发布版本。最终发布仓库（weixin-auto.git）master、release分支的目录结构如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.6489151873767258&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1cB6ymd0yXGTUTcYFEV7eiaWT9n09ZLnlU3sSJCoKX9TYJnNugfOpJDdbeB1Helc6Gnicqp415MzEQQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1014&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2-4 发布仓库weixin-auto项目目录&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;7）数据更新：如果RC为true并且代码成功上传之后，我们将同步更新该业务仓库的releaseCommitHash、分包Size等信息至服务端中，以便别的业务仓库可以拉到该仓库最新的代码；&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;8）构建结果通知：无论成功与否，构建的结果都将发送至相关的群组以及触发该pipeline的人员，如果失败，将返回详细的错误信息进行排障，成功将返回测试二维码，如下图所示：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.7447552447552448&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1cB6ymd0yXGTUTcYFEV7eiaWjCbhXBUr3Y5zeAOficpvsiakibJAskBmyE6KVutDYgKjsuqBAIErIHMuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1144&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;                                  &lt;/span&gt;&lt;span&gt;（1）失败&lt;/span&gt;&lt;span&gt;                                      &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.9859375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/kEeDgfCVf1cB6ymd0yXGTUTcYFEV7eiaWSOEwoASxTvzicfZh47LL1U0AbS9Aiau3DvNN3neibxqNLmuEHEajABy1w/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;（2）成功&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2-5 构建结果通知&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;上述步骤任何一步失败都将导致pipeline失败，通过上述流程，确保提交到发布仓库的代码均为正确无误的代码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;2.3 持续交付&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前，携程微信小程序的发布已经统一接入公司的MCD发布平台，将事先写好的python脚本在MCD平台上进行配置，临近发布节点，PMO只需到MCD平台上进行集成发布。此时MCD将自动运行我们预设的脚本，该脚本将拉取发布仓库release分支上的zip包，将其进行整理，生成体验版二维码，由PMO发给相关人员进行集成测试。 &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.4296875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/kEeDgfCVf1cB6ymd0yXGTUTcYFEV7eiaWQD7ViaTFplblxUu5ol0picrzz8ZH2UAZ6Vx0c9mfaTH4GV62MqBkiblYw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;图2-6 携程MCD发布平台&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;测试通过后，再有PMO将代码手动提交至微信后台进行审核，至此，一次完整的常规发布流程已经完成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;三、总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;综上所述，通过仓库管理将各个业务线分割成独立的git仓库，保证业务的独立开发、互不影响；通过pipeline自动化持续集成方案并结合公司的MCD发布平台进行持续交付，大大简化了一线开发人员的开发成本，只需提交代码即可，打包、测试、上传、预览、通知等操作均由发布仓库的pipeline自动化完成，避免了人工操作的不稳定性与繁琐，确保了业务的敏捷开发以及协同合作效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;本文仅介绍了常规业务线协同开发的流程，其实携程微信小程序早已引入了Taro这一概念，并且针对使用Taro技术栈的业务线设计了一套独有的打包方式，目前在微信小程序中运行良好，我们正在稳步向其他各类小程序（百度、头条、支付宝等）中推广。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;团队招聘信息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们是平台研发中心，一个为携程快速发展提供各类基础产品和服务的平台，我们以技术驱动提升客户体验，提升跨团队协作效率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;我们拥有优秀而强大的团队，引导你学习业内领先的开发技术，与技术高手交流对话，学习切磋。在亿级用户严苛的品质要求中，激发你脑中不断涌现的创新思维，带领你体验飞速成长的惊喜快乐，并在各种机遇与挑战中发展自我，成就自身。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;目前我们前端、后台、算法、测试等技术岗位均有职位。简历投递：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;tech@trip.com&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，邮件标题：【姓名】-【携程平台研发中心】-【投递职位】&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;【推荐阅读】&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h1/&gt;&lt;h1&gt;&lt;br/&gt;&lt;/h1&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;1&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/kEeDgfCVf1cB6ymd0yXGTUTcYFEV7eiaWc9zHISsUqU1FOlr8fKjOaTaxjWdJS59HDjHWmICvn3hDwwZibaedklg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1080&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;section powered-by=&quot;xiumi.us&quot;&gt;&lt;section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt; “携程技术”公众号&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;  分享，交流，成长&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;section&gt;&lt;svg viewbox=&quot;0 0 1 1&quot;/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>2f23bad8dbd0fee6a859a880aef84c3b</guid>
<title>数据湖元数据治理实践（PPT）</title>
<link>https://toutiao.io/k/vzcpy6x</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;span/&gt;&lt;/p&gt;&lt;pre&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;点击上方&lt;/span&gt;&lt;span&gt;蓝字&lt;/span&gt;&lt;/span&gt;&lt;span&gt;设为星标&lt;/span&gt;&lt;span&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100002432&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;48&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/icHoerKO3NjLGkL3JicZxzZUlMPWaOEUtiaVyDt5AOaIJNkLaltXOYRiaGSbyibgxQsVLRaz9JxfN6KVBmSNFbFe6Lw/640?wx_fmt=png&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-mpa-category=&quot;模板&quot; data-mid=&quot;&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;pre&gt;&lt;pre data-style=&quot;padding-right: 0.5em; padding-left: 0.5em; max-width: 100%; background-color: rgb(255, 255, 255); color: rgb(62, 62, 62); letter-spacing: 0.544px; font-size: 15px; text-align: start; word-spacing: 2px; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__40&quot;&gt;&lt;section&gt;&lt;span&gt;每天发文07:37一起成长！&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100002433&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.3310344827586207&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1885&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/fp3oqPBibTAckfwG1aeX3e4jy8sssCCobdg10RSpaPzv8HD1QCKcVJrcUl26FGUpOgjfVqHNy6Wr4CED5Mj8ibUA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/section&gt;&lt;/pre&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;关注&lt;span&gt;【&lt;/span&gt;&lt;/span&gt;&lt;span&gt;BAT大数据架构&lt;/span&gt;&lt;span&gt;&lt;span&gt;】&lt;/span&gt;公众号&lt;/span&gt;&lt;span&gt;，加我微信：&lt;/span&gt;&lt;span&gt;&lt;strong&gt;bat6188&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，发送PDF完整版。&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/fp3oqPBibTAetkxpH5ncsCKF8V4aaS9U48qqMhw5ZaDlEWdUKG2wtDlGEmqhaYtrbK7IUwLXQU3GPbXiaN9FYzmQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;导读：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;PPT短小精悍，每一页每个字都是纯干货！建议收藏转发到朋友圈。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5756791720569211&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9ciaTxIbUNhtb91LaQdoNqSXf7guUZj77jU53PlW0kB7sFh0M5oE5SKhg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1546&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.557161629434954&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cJDPswUahuaIFbiahTvIP7E0xCuIAC1ibECgVI25ORZ0nmBqcibkHnXJzw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1522&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5654993514915694&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cJCJwLIpywQmNXwxoWbgFIvl0pUfyWR1VO0DpVYbAkicAStHwrLWd40Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1542&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.55249343832021&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9ctMdOHCGt9ZoD8HbdkfqQWgeWnJ3ibnicLK5tdvr2zqaUVZGPicmW6bF5w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1524&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5558475689881734&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9chywJaSEbXglm67Kiaib7pGCHLP2gFJzOvu4Ziaic4p662OicFiakh4DA7tibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1522&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5603674540682415&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cDL7J6fP71ZZ6oe8vUm6h8s9OVib5dfzMeGJ2BK7WfXxMlnNBQJiamIoQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1524&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.576072821846554&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cfXQrQgic8xGib40jcYx7AsrQrcx7JNa5eKZuibH6c2P0kNa1lgyTZX6ew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1538&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5479632063074902&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cO3QG1XKjvzIdDK9LQazKkQ3PLu7Kuk3lcYYFUYXAsCT12xhUyzcUYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1522&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5589005235602095&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9crUogg6r7R1JEfYZfjBbd5Hs3rFOo8BMWbgqhGREZKBTVHibQ0XyyCGQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1528&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5567282321899736&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cvCm7t18HpWgmDNk7RyeUh8kK0stIEQGpicMOct6ew65iaWcKOrfCJxCA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1516&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5576158940397351&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cJYqyoz6O1QQcnVaw0ib3l7KL2roR7aiclAJwaVQISO2oK8LRkH5JtdDg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1510&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5551128818061088&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cvj3KoppWFQicX1eRcSB70KziaTicA8rRnkbu03Vf178Emo10PHWicWSYXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1506&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.553050397877984&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cwdQicGicX1mvibNgHfHtbqb1r8SElH0wluJGPRrP3icGcoappez6EnQtIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1508&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5535248041775457&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cdRibJHBQGSgKjZyzYExKnca6IrcfB2CQDYgBFG3e7YMjE9tPjiatw9Fw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1532&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5517241379310345&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cMW0LPYSCTcibJFutVlPAGiaLuNX2MUkvkSY0VpD9vQ9RGwH3EhJtSDFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1508&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.5555555555555556&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/lvnfzHLRuua0G5dJ0aqy10odDerCNZ9cffmRRUcP7Vib8hRq39HYDff4CHiallHduDFcuxOdfB1QczicD9I06WDEw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1530&quot;/&gt;&lt;/p&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section powered-by=&quot;xiumi.us&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section data-tools=&quot;135编辑器&quot; data-id=&quot;89428&quot; mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;p&gt;&lt;span&gt;END&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;section mpa-from-tpl=&quot;t&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;ol start=&quot;4&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;section&gt;&lt;section data-brushtype=&quot;text&quot;&gt;&lt;br/&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;据统计，99%的数据大咖都关注了这个公众号&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;👇&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzkwNzE5NDM5Nw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/fp3oqPBibTAdEkjGV2umaZkExbsT5LKPFY0tia45CcMxLPF9vv8dwjMFSgBYfJAicibB88hUGlCaqjwKQM9C1eqGZQ/0?wx_fmt=png&quot; data-nickname=&quot;BAT大数据架构&quot; data-alias=&quot;&quot; data-signature=&quot;大数据、数据仓库、数据分析、数据科学，Hadoop、Spark、Flink、ClickHouse，BAT大厂技术与架构，还有我们的故事。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;♧ 加我微信：&lt;span&gt;bat6188&lt;/span&gt;，发送PDF完整版。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-galleryid=&quot;&quot; data-ratio=&quot;1&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/fp3oqPBibTAetkxpH5ncsCKF8V4aaS9U48qqMhw5ZaDlEWdUKG2wtDlGEmqhaYtrbK7IUwLXQU3GPbXiaN9FYzmQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;430&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;&lt;p&gt;&lt;span&gt;如果你喜欢本文&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;请订阅关注 &lt;/span&gt;&lt;span&gt;Bat大数据架构&lt;/span&gt;&lt;/p&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;h4/&gt;&lt;p&gt;&lt;span&gt;转发至 &lt;/span&gt;&lt;span&gt;朋友圈&lt;/span&gt;&lt;span&gt;，是对我最大的支持&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;pre&gt;&lt;section data-recommend-type=&quot;list-title&quot; data-recommend-tid=&quot;6&quot; data-mpa-template=&quot;t&quot; data-mid=&quot;&quot; data-from=&quot;yb-recommend&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;往期推荐&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;section data-mid=&quot;&quot;&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247486789_1&quot; data-recommend-article-time=&quot;1640734620&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/fp3oqPBibTAdZCumZtAibc11FEVmPceM4desMrlRUoq1J1wZSZh1Wpa3ux26ldJTNicX12ZvIRzc3TDLOURvk1h9Q/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;6500字详解数据中台，一份完整的数据中台手册！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486789&amp;amp;idx=1&amp;amp;sn=b911570d59ebc66744d9acd1eca07187&amp;amp;chksm=c0ddb437f7aa3d215570dd43a80bdbc516d0b0c16520aa59be72a9c145fb0cb2c71ff0321aeb#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486789&amp;amp;idx=1&amp;amp;sn=b911570d59ebc66744d9acd1eca07187&amp;amp;chksm=c0ddb437f7aa3d215570dd43a80bdbc516d0b0c16520aa59be72a9c145fb0cb2c71ff0321aeb&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;6500字详解数据中台，一份完整的数据中台手册！&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247486776_1&quot; data-recommend-article-time=&quot;1640648220&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/nhlGsolibOWGPX7xbvJ7vXAB6kZfaKBjHfhB51VbKBIE7GIPzs9exoSPksSrBUDjtHel4X9dSRbmFicopMJYcmCQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;我在美团的八年&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486776&amp;amp;idx=1&amp;amp;sn=28f577dff778c2e1504ee7e081d469b3&amp;amp;chksm=c0ddb44af7aa3d5caa4ea7464afa882203091bd5dfe07709d19f09bce42c326219f8643626d0#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486776&amp;amp;idx=1&amp;amp;sn=28f577dff778c2e1504ee7e081d469b3&amp;amp;chksm=c0ddb44af7aa3d5caa4ea7464afa882203091bd5dfe07709d19f09bce42c326219f8643626d0&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;我在美团的八年&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247486769_1&quot; data-recommend-article-time=&quot;1640216220&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/YriaiaJPb26VOzp21GsVCicoFJc2rJribI4blpDbM16LdKL8hkY17niaWugNaxcdrWnk6WJtvqPYfdFNBf61nXxdqNw/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;Log4j 持续爆雷，啥时候是个头？&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486769&amp;amp;idx=1&amp;amp;sn=62bed43aceb4779347b56282f963b2c9&amp;amp;chksm=c0ddb443f7aa3d558a20a754f796895a205b704212ac4ab01d90c5261b90556951740e090e33#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486769&amp;amp;idx=1&amp;amp;sn=62bed43aceb4779347b56282f963b2c9&amp;amp;chksm=c0ddb443f7aa3d558a20a754f796895a205b704212ac4ab01d90c5261b90556951740e090e33&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;Log4j持续爆雷，啥时候是个头？&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247486579_1&quot; data-recommend-article-time=&quot;1640043420&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/fp3oqPBibTAdlASgicoBlMibvicvs4S41T16dqLqpdoNIXnwKpvcjoywibVyic9nz820ToDFIuOmAOvgJeTib3TwUkvnQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;10张逻辑思维图，迅速提升你的工作能力&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486579&amp;amp;idx=1&amp;amp;sn=35b38354cd1c306770ceeb9fa59fadc0&amp;amp;chksm=c0ddb501f7aa3c17138472df750f5aedd1ee90ef1f43edcbc234192d27c3b8c95c92d07887b6#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486579&amp;amp;idx=1&amp;amp;sn=35b38354cd1c306770ceeb9fa59fadc0&amp;amp;chksm=c0ddb501f7aa3c17138472df750f5aedd1ee90ef1f43edcbc234192d27c3b8c95c92d07887b6&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;10张逻辑思维图&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247486701_1&quot; data-recommend-article-time=&quot;1640129820&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/fp3oqPBibTAddpgOWlksw8ygd18nGG2cINJiaHsrd8PlhplChJbpXlYEHuWCQFM3uk8PLxicTs6q9ROiaer4J22jAQ/0?wx_fmt=jpeg&quot; data-recommend-article-title=&quot;数仓建设与数据治理思维导图.xmind（全）&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486701&amp;amp;idx=1&amp;amp;sn=830e9ccd7d6bd45a3bd4660961c35a21&amp;amp;chksm=c0ddb59ff7aa3c89c63d99d801b26b28bdca0e319e61a3cc2980587b6ab5d2b3b9f97c823cd0#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486701&amp;amp;idx=1&amp;amp;sn=830e9ccd7d6bd45a3bd4660961c35a21&amp;amp;chksm=c0ddb59ff7aa3c89c63d99d801b26b28bdca0e319e61a3cc2980587b6ab5d2b3b9f97c823cd0&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;数据治理思维导图.xmind（全）&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;section data-mpa-template=&quot;t&quot; data-recommend-article-type=&quot;list-title&quot; data-recomment-template-id=&quot;6&quot; data-recommend-article-id=&quot;2247486775_1&quot; data-recommend-article-time=&quot;1640582829&quot; data-recommend-article-cover=&quot;http://mmbiz.qpic.cn/mmbiz_jpg/R5ic1icyNBNd4qickdIn6kvsJ5r349CHTDT7h5JxzCArQuQX8Zy7ticGL2hoe8woyGEDibjuytpkyibzs37ah19xFiaYg/0?wx_fmt=jpeg&amp;amp;amp;amp;amp;random=0.794395125289979&quot; data-recommend-article-title=&quot;微信官宣1000W个微信红包封面，速度撸起来！！&quot; data-recommend-article-content-url=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486775&amp;amp;idx=1&amp;amp;sn=bbdeb10090e8dbbccd48c0bf891831b1&amp;amp;chksm=c0ddb445f7aa3d5383f07bb751af6910a8a54a87ab5f3310551484e1cdec102d18310db09759#rd&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzkwNzE5NDM5Nw==&amp;amp;mid=2247486775&amp;amp;idx=1&amp;amp;sn=bbdeb10090e8dbbccd48c0bf891831b1&amp;amp;chksm=c0ddb445f7aa3d5383f07bb751af6910a8a54a87ab5f3310551484e1cdec102d18310db09759&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;&lt;section data-recommend-title=&quot;t&quot; data-recommend-content=&quot;t&quot; data-mid=&quot;&quot;&gt;&lt;p data-mid=&quot;&quot;&gt;微信官宣1000W个微信红包封面，速度撸起来！！&lt;/p&gt;&lt;/section&gt;&lt;/a&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;&lt;span/&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;点击左下角“&lt;/span&gt;&lt;span&gt;&lt;strong&gt;阅读原文&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;”查看更多精彩文章，公众号推送规则变了，如果您想及时收到推送，麻烦右下角点个&lt;/span&gt;&lt;span&gt;&lt;strong&gt;在看&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;或者把本号&lt;/span&gt;&lt;span&gt;&lt;strong&gt;置顶&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;！&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/p&gt;&lt;/ol&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>