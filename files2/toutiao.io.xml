<?xml version="1.0" encoding="UTF-8"?>
        <rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
            <channel>
            <title>开发者头条</title>
            <link>http://toutiao.io/</link>
            <description></description>
<item>
<guid>821c9605243891724cceb621cfd5b3c2</guid>
<title>数据中台实战（三）：用户分析（产品设计篇）</title>
<link>https://toutiao.io/k/0venjhy</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;p&gt;&lt;/p&gt;&lt;p&gt;上一讲我们说到&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDI5OTQ4Ng==&amp;amp;mid=2247484171&amp;amp;idx=1&amp;amp;sn=18b0a39aa56431582256f263a29332f9&amp;amp;chksm=ea6a8cbadd1d05ac813463e91c81fbf51308b7264c140f02c3a6bb8d4e85796012a24b62f9b0&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;《数据中台实战（二）：基于阿里OneData的数据指标管理体系》&lt;/a&gt;。这次我们谈下产品经理更加关注的模块产品设计。接下来将从六个方面讲数据中台的产品设计包括用户分析、商品分析、活动分析、流量分析、还有自助分析平台、标签平台、推荐系统的搭建。全部基于实战，读完这个系列，你就可以搭建属于你们公司的数据中台。&lt;/p&gt;&lt;p&gt;还是要先讲一下背景：笔者所在公司为富力环球商品贸易港，是&lt;span&gt;富力集团旗下汇聚原创设计师品牌及时尚买手/采购商两大社群，通过亿订B2B电商、RFSHOWROOM、环贸快版、环贸映像、富运通、富贸通等子品牌为时尚行业提供一站式产业＋渠道服务的平台。公司还在广州市、西安市有线下的综合实体商贸中心。涉及到的系统有CRM、ERP、Marketing等各种各样的系统，公司涉及的n条产品线，如果每条产品线都有专门的运营、产品、研发团队，一方面需要耗费大量的人力资源，另外一方面公司的数据散落在每条产品线，再收集起来就会造成很大的挑战，数据中台的存在就是为了解决这些问题，公司内每个系统的数据都流入数据中台（数据中心），这样数据就会更加规范的存储与组织，另外只需要一个团队就能支撑起整个公司的数据相关的需求，这是数据中台的优点。但是从这里你也能看出来，由于追求通用性，无论业务中台还是数据中台都是缺乏灵活性的，数据中台的模式是比较重的，这就要求前期公司数据的调研工作一定要做的足够细致，才能避免以后反复改造的问题。在这里也给大家一个判断公司是否引入数据中台的依据：&lt;/span&gt;&lt;span&gt;如果你的公司有多条业务线用到了多个系统，需要通过数据整合来驱动业务，那么你们就合适引入数据中台。如果公司公司只有一条业务线或者初创公司，这种你们还是重点关注你们的业务和价值探索，因为数据中台是需要大量的资源支撑的&lt;/span&gt;&lt;span&gt;。接下来我们先讲最核心的用户分析。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;一、用户分析&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;刚才提到中台产品的设计讲究通用性，那用户模块我们也需要选择一个比较通用的模型来设计功能，尽量使设计出来的功能能适用大部分的产品线。用户模块的功能设计我们参考黑客增长AAARR这个模型。从用户的获取、激活、留存、转化（收入）、传播（推荐）五个方面来设计功能。这个模型是比较抽象通用，适用于每个互联网产品，因为每个用户的生命周期都会经过几个过程。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;398&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantXibKAbMiaVDnvtQTBuszGFh6f7MAT5gdZCmf8iaYGCuehvoTazKqbibPNg/0?wx_fmt=png&quot; data-ratio=&quot;0.7158006362672322&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantXibKAbMiaVDnvtQTBuszGFh6f7MAT5gdZCmf8iaYGCuehvoTazKqbibPNg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;943&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.第一层就是用户的拉新。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;先讲一个坑，拉新的工作每条产品线都会有对应的人员去做，如果每条产品线都有一套自己的标准，需要针对每条产品线的拉新统计单独做一套功能，那么会对统计造成十分大的困扰和资源浪费。此时我们就建议业务中台开发一套渠道管理的功能，并组织了一个会议要求每条产品线都调用渠道管理的功能，保证数据的存储都在同一个地方。另外拉新的工作是不同的人负责不同的渠道，比如我们公司的目标用户是分散在全国各地的终端门店小B端，就需要大量的地推同事推我们的产品。我们采用渠道码的方式，每个部门可以定义自己的专属的渠道码，这个渠道码绑定相应的负责人并且可以生成注册页面地址。这样每个负责地推的同事都会在二维码中添加自己的专属渠道码，用户注册时就知道是那位地推的同事拉过来的。这样拉新负责人的绩效就出来了，同样的拉新负责人所属部门的核心KPI注册量就出来了。&lt;span&gt;最重要的是数据中台只用做同一套逻辑，后期出的数据指标就可以给n条产品线用了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;379&quot; data-backw=&quot;339&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantlKgUEiaO3bzq5ht0qAXXiaE2L7rjb1WBVduYcapRyUPZ2QSQibN7xDbbA/0?wx_fmt=png&quot; data-ratio=&quot;1.1179941002949854&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantlKgUEiaO3bzq5ht0qAXXiaE2L7rjb1WBVduYcapRyUPZ2QSQibN7xDbbA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;339&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;渠道码管理功能做完就可以做拉新相关的指标。那我们看下拉新的指标都有那些呢？原子指标就是注册量了，接着就要基于目的加一些维度，比如一线的地推人员要基于渠道码判断每个渠道码的注册量趋势，那就可以加上渠道注册码的维度。比如拉新的负责人要看所有拉新人员的注册趋势，那就需要加上拉新人员的维度。而这些所有的维度我们都已经在注册渠道管理中解决。先上图给大家做个参考。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.7669902912621359&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantzqAd6t4zhs6gFHnDIo7sRnW1q2tOI2YgBKyxsy0cu5UyJXC5Uiciba5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1030&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.渠道注册页面转化率&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;注册量只是虚荣指标，只能监控我们的数据，并不能定位问题。注册这块我们还要看下过程指标注册转化率，&lt;span&gt;这是考核各条业务线产品经理的关键指标。&lt;/span&gt;注册转化率的定义是 注册成功人数/访问注册页的人数。比如我们在百度投的SEM广告，每天是要花费大量的金钱的，因为在百度投关键字，关键字策略对路的情况下，每天是能拉来至少几百用户的，注册转化率每提高一个百分点，就相当于每天为公司拉来几十的用户，特别是大面积投广告的情况，那带来的用户就更多了。产品同事可以看总的注册转化率，还可以看单独渠道的注册转化率。这样就很快定位到注册转化率低的渠道。涉及到以下几个指标，注册页的pv、uv、第一步输入号码的人数、第二步发送验证码的人数、第三步填写验证码的人数、第四步注册成功人数。这样就可以定位到更细节的问题，比如我们的验证码是不是会有网络问题接收不到、我们的按钮点击是不是有bug等。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;213&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantywwIVR1NO42Zgl7m7xb5qe5ETwcwCBvGOZJQxjg9nchVl9Eppdgapw/0?wx_fmt=png&quot; data-ratio=&quot;0.3838678328474247&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantywwIVR1NO42Zgl7m7xb5qe5ETwcwCBvGOZJQxjg9nchVl9Eppdgapw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1029&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;82&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantxbTgY8BKMP2yMQjLS30FrAlYOK50FC0SxokcH5huicr0UXm7o9HbP3Q/0?wx_fmt=png&quot; data-ratio=&quot;0.1466789667896679&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantxbTgY8BKMP2yMQjLS30FrAlYOK50FC0SxokcH5huicr0UXm7o9HbP3Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1084&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3.渠道ROI&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;还有一个问题比较重要我们需要解决，我们如何判断一个渠道是不是值得投入，这里的投入就是指我们的钱花在这个渠道到底值不值。比如我们的地推渠道，要雇佣大量的地推人员做地推的工作，就会存在很大的人力成本。还有我们的百度这个渠道，每增加一个关键字就是一笔不小的费用。那么我们如何判断我们是不是值的投呢？这些完全是可以算出来的，其实我们进行大范围推广时要进行小面积的灰度测试来证明我们的可持续性。比如地推的用户推广了一批新用户，要看下接下来这批用户实际在平台产生了多少收入，如果带来的收入/地推的工资是大于1的，那么这个渠道就是可持续的，如果小于1，那么一方面可以判断地推人员带来的用户质量是不行的，另外一方面可以采取一些手段促进地推人员的拉新，如果采取了很多的手段收入都无法覆盖成本，那应该果断放弃这条拉新渠道，找到更合适我们的渠道。同样的百度的拉新甚至能记录到投放的关键字的程度，通过关键字周期的成本和拉来用户所产生的收入，来评判关键字的性价比。以上所有的指标都是通用的，可以适用于所有产品线，只要都用业务中台的渠道管理功能，我们一个功能就能满足亿订、富运通、环贸快版、富贸通等N条产品线的拉新统计。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;236&quot; data-backw=&quot;556&quot; data-ratio=&quot;0.423712342079689&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantUXewwmSNuyuBF2AUUvq5IWUln6eTVibWzF5KnA0DQPmelGxhoUzuBvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1029&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;具体的实现上通过对投放链接 URL 添加参数，渠道投放方可以对投放或者推广的效果进行监测。目前常见的渠道监测机制是 UTM ，通过在URL 链接后面添加广告来源（utm_source）、广告媒介 (utm_medium)、广告名称（utm_campaign）、广告内容（utm_content）和广告关键字（utm_term）等5个维度参数，实现对站外流量的监测和分析。流量分析工具 Google Analytics 也是采用这种方式。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;259&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantzSNW4iaIGoGqGIRNiatZ3JXunqHibZkur4ia1jOiafXtXNZBdkq43aZMEgw/0?wx_fmt=png&quot; data-ratio=&quot;0.46539379474940334&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantzSNW4iaIGoGqGIRNiatZ3JXunqHibZkur4ia1jOiafXtXNZBdkq43aZMEgw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;838&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;二、用户活跃数据&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;用户活跃这块比较通用的指标就是日活、周活、月活这些指标，其实这些都是虚荣指标，就算日活再多但是用户就是过来看看却不下单说明产品是没有价值的。拆的比较细的话可以区分新老用户，比如日活拆出来老用户的的日活、新用户的日活。新用户就是当天注册当天访问的用户、老用户是非当天注册当天访问的用户，另外可以看下每天日活中新老用户的占比来决定我们是应该向新用户发力还是向老用户发力。除了这些通用的指标每条产品线还有自己比较特殊的指标，比如亿定电商产品的主路径，从访问用户数、加购用户、收藏用户数、转发用户数到下单用户数、支付用户数等都是电商产品特有的指标这些是做不到通用化的。我们的供应量产品更关注的是每日发物流的用户数、发快递的用户数。我们的环贸快版关注的是咨询打版的用户数和下单的用户数据。所以我们要梳理每条产品线的共性指标和个性化指标，共性指标放在一个区域。非共性指标可以预留区域放每条产品线个性化的指标。这样至少保证了前端界面的通用性。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;317&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OanticWRlZ8Iw8w6H2TUw9gzSbNTwbOqTpHWtHN8yIMVwuqnU6lbdc3cGkQ/0?wx_fmt=png&quot; data-ratio=&quot;0.5698924731182796&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OanticWRlZ8Iw8w6H2TUw9gzSbNTwbOqTpHWtHN8yIMVwuqnU6lbdc3cGkQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1209&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;    &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;三、用户留存分析&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;为什么做留存分析《数据中台实战（一）：以B2B电商亿订为例谈数据埋点（产品经理视角）》已经详细讲解，留存率不是一个虚荣指标，他可以很好的监测产品的粘性，直接反映了产品价值的高低。&lt;/p&gt;&lt;p&gt;我们定义了访问留存率和购买留存率。访问留存率的定义是新注册用户次日、7日、14日、30日是否再次访问我们的产品，购买留存率的定义是首次购买用户，接下来的7日、14日、30日是否再次购买我们的商品。只有总的留存率是不行的，当发现留存率低时如何定位问题？这时我们将留存分析的功能与标签平台的人群圈选做了打通。比如我们发现某日新注册用户的留存比较低，那我们可以继续拆解看是不是某个注册渠道的留存率比较低呢？又或者是某个端的用户（H5/IOS/安卓）的留存率比较低呢？这样就更方便我们的运营同事定位问题。最后我们运营发现亿订的新注册用户在第一周内购买个2-3次的留存率明显高于其他用户的留存率，运营的同事会基于用户的特点做各种首单促使他买单。我们呢也把这个指标定为我们的北极星指标来运营，有部分运营同事的KPI就是这个。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;175&quot; data-backw=&quot;556&quot; data-ratio=&quot;0.3150259067357513&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantEpny99MmBFvs5uficwAia8cvHaXzPcibdSO033K1lYu7n9doUZP7gbxpA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;965&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;同样的环贸快版我们发现新的设计师如果在注册的第一周内来用我们的产品询价打版按钮1到2次的用户明显比别的用户的留存率高，因为设计师刚注册只会用我们的服务先尝试打少量的版，一旦觉得我们的打版服务还可以，那么会用我们生产大货的服务。所以环贸快版的北极星指标定为新注册用户第一周点击打版询价1-2次，我们的运营也是通过加微信、外呼等方式促使设计师发生这个动作。&lt;/p&gt;&lt;p&gt;小扎的公司facebook对外公布了他们的北极星指标是&lt;span&gt;在十天内关注7位朋友，他们还公布了一组数据是要想达到100万日活，你的次日留存率要达到40%，7日留存率要达到20%，30日留存率要达到10%，当然这里只是供大家参考。而且这里是针对社交产品，其他的产品应该根据自己的产品特性计算自己的留存率。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;四、用户转化分析&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;用户转化就是想尽任何办法让用户下单，这里关注的指标有以下几个，首单人数、复购人数、首单率、复购率。首单人数可以加统计周期，比如每日首单人数、每日复购人数、用首单人数、总复购人数。首单人数/用户数就是首单率，复购人数/支付人数就是复购率。首单反应我们的产品是否有足够的吸引力，我们一切的运营活动是否有效。复购则反应用的产品的价值，如果没有价值，用户是不会花费金钱来买我们的产品。首单真的很重要，讲留存率时说了我们的北极星指标是让新注册用户在第一周内首单并复购1-2次，这类用户的留存率会相对来说比较高，那我们的运营用各种手段拉过来用户，又用各种手段让他下单，接下来用户的体验很重要。比如我们的电商产品，当用户第一次下单，我们会对他的商品做全面的质检，保证商品真的没问题。我们会用最优秀的供应商，把商品安全的送到用户手上，如果用户接到商品后发现商品不是自己想要的，我们甚至会提供最好的售后服务，让用户无忧退货，保证第一次购物的顺畅，让他体会到我们的价值，也许下次用户还会来我们这里采购。当我们的用户慢慢积累到一定程度，会发现复购的用户越来越多，我们会基于RFM，用户购物的频次、金额、距离上次的时间把用户拆分为8类。第一类是重要价值用户，最后一类是可以淘汰的用户。当然我们第一类用户一定是会倾斜大量的资源给他们，比如给他们最多的折扣，最好的售后，让他们给我们做更多的贡献。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;339&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OanthUTLhIrGcgNd3QSDkDxKrBmGEo1VsN5J9jfE0TUHtySVibf8xlEBL1A/0?wx_fmt=png&quot; data-ratio=&quot;0.6094339622641509&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OanthUTLhIrGcgNd3QSDkDxKrBmGEo1VsN5J9jfE0TUHtySVibf8xlEBL1A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1060&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;参考《精益数据分析》中说的电商的模式，我们还是要关注下90天内用户的复购率。90天内复购率达到1%-15%说明你的产品属于用户获取模式，此时你应该多关注新用户。90天的复购率达到15%-30%，说明你的产品属于混合模式，此时你需要兼顾新用户的购买率和老用户的复购。如果你的90天复购率能达到30%以上，说明你的产品属于忠诚者模式，你要更多的关注老用户的复购才更有效。不过作为负责人，你不必过多的追求忠诚者模式，因为处于用户获取模式，只要做到低成本的拉来新用户，并且用户会下单，用户的营收大于用户的拉新成本，这种模式也是可以持续的。后期做的好的电商产品会处于忠诚者模式。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;0.43141153081510936&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5Oantib9ib9Q3wDvNnHWMy3ASQUFNObGbNe2yWiat0dsdhFH4jx3fyu3fZGiaKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;503&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;五、用户传播分析&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;传播就涉及到增长这块。我们看增长的本质是什么，我认为增长就是产品核心价值的传递，一个产品有价值它自然而然就会带有传播属性，所以要想传播那必须保证产品的价值，有关产品的价值怎么衡量可以参考&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDI5OTQ4Ng==&amp;amp;mid=2247484009&amp;amp;idx=1&amp;amp;sn=e0a386daac29881f7526615a263c39e2&amp;amp;chksm=ea6a8dd8dd1d04cef8a4e5459a1a6b8be2c9983be93d11e73f0ff5491c85309cade91960d191&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;《产品力：价值、安全感、优越感》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;那回头先看下我们公司的产品有什么价值，亿订B2B电商的价值是什么？终端门店不用再去跑专业市场进货，在亿订上动动手指就能进货，躺着赚钱。消除了他们来回奔波的恐惧。对于我们来说就是要保证终端店主躺着来赚钱，为了保证这点，我们需要有大量的的原创货源，我们有专业的产品运营和买手来保证我们货的质量，与我们合作有大量的原创设计师团队在环贸快版打版设计服饰保证货源的优质。我们有专业的供应链团队富运通、富贸通，你无论在国内或者国外都能把货安全快速的送到。这就是我们的价值。当终端门店感受到我们不一样的服务，我们的口碑就有了，自然而然我们的价值就会一点一点的积累传递。所以要做传播的第一条就是保证自己产品的价值。一个没有价值的产品，无论你用再多的手段也无济于事。&lt;/p&gt;&lt;p&gt;关于传播有个词很关键，&lt;span&gt;传播是设计出来的。&lt;/span&gt;保证产品的价值后，我们就可以用一些手段来增强产品的传播特性。&lt;span&gt;病毒式传播有一个重要的指标K因子。K因子的计算公式不算复杂，过程如下：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;K＝（每个用户向他的朋友们发出的邀请的数量）×（接收到邀请的人转化为新用户的转化率）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;假设平均每个用户会向20个朋友发出邀请，而平均的转化率为10%，则K＝20×10%＝2。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当K＞1时，用户群就会像滚雪球一样增大。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;当K＜1时，用户群到某个规模时就会停止通过自传播增长。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;比如B2B电商亿定的商品详情页有个转发的按钮我们是有做特别的埋点的，会把用户ID加入页面埋点，每当新用户通过该页面浏览或者注册都会记录分享的那个用户。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;222&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5Oantia9ALQfHAiarZMFiafN42pScWLk8oPnA3NhWYibiczxibZvgzZvmWSUJVSfg/0?wx_fmt=png&quot; data-ratio=&quot;0.39921875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5Oantia9ALQfHAiarZMFiafN42pScWLk8oPnA3NhWYibiczxibZvgzZvmWSUJVSfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;六、用户生命周期分析&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;用户运营有个比较通用的模型叫RFM。&lt;span&gt;R（Recency）：用户最近一次交易时间的间隔。F（Frequency）：用户在最近一段时间内交易的次数。M（Monetary）：用户在最近一段时间内交易的金额。可以根据这些数据指标将用户分成8类。&lt;/span&gt;&lt;span&gt;我们的资源是有限的，高价值用户我们一定要倾斜更多的资源给他们，一定会先满足他们的需求，再考虑其他用户。低价值用户就不要浪费太多的资源。差异化运营就在此体现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;315&quot; data-backw=&quot;556&quot; data-ratio=&quot;0.5663338088445078&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantEBZicwZOglOQG3cqvvMiab4lm4MB7dhIHEzV8z7HIWuGibEUPoBjsmsvw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;701&quot;/&gt;&lt;/p&gt;&lt;p&gt;基于此模型我们让数据开发工程师帮我们手工分别计算了亿订、环贸快版、富运通用户的RFM值，基于各个指标的分布，比如M（用户累计交易额）可以按2/8的原则，也可以按平均数的原则定义该指标的高低。按照这样的原则分别将R/F两个指标也进行了定义。接下来就是把分群的用户交给运营进行核对，看下我们的分群是不是和目前的产品状况吻合。因为基于RFM的用户分群是十分重要，直接影响到运营的策略。我们决定产品化，这时你会遇到一个问题，每条产品线的RFM的值都不相同，而这个问题在我们的标签平台解决了。我们的标签平台可以基于每条产品线分别定义RFM，并且再基于RFM的组合筛选出高价值人群等基于用户价值的分群。标签平台会在后面的文章《基于多条产品线的标签平台》详细来说。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;191&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantU8murLdLVv43crzP2uGtHxia3GgC6T5ZK4h8IoJlcHOT2icCgibPA4JmA/0?wx_fmt=png&quot; data-ratio=&quot;0.3442622950819672&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5OantU8murLdLVv43crzP2uGtHxia3GgC6T5ZK4h8IoJlcHOT2icCgibPA4JmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;976&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;接下来我们根据用户的F的值支付次数将用户分为已经支付用户和支付用户。未首单用户我们又基于算法比如电商商品的加购、收藏等综合数据会给运营输出高成长潜力用户和高流失风险用户，高流失风险用户就是用户虽然注册了但是长时间未下单。已支付用户我们基于用户的活跃度等指标分为成长用户、沉默用户、流失用户。成长用户就是用户有下单，我们需要刺激他复购，我们又分为高价值潜力用户/高沉默风险用。高价值潜力用户我们目前的定义是近7天内有下单，近7天内又有一些高意向行为比如访问、收藏、加购会给出不同的下单概率，用运营的同事看了就直接能判定出我该给谁发优惠券刺激或者其他的手段。高沉默风险用户我们的运营会发一些PUSH/推送/外呼进行挽留。接下来就是沉默用户，沉默用户我们基于上一次的访问天数又划分为高流失风险用户和低流失风险用户。高流失风险用户就是之前用户下课很多单，而且客单价还是比较高，近期没有访问的时间已经达到了某个阀值比如45天，那我们还是话费一定的资源挽留这些用户。还有就是流失的用户，这些用户我们的定义就是没有任何挽留的必要了，告诉运营放弃治疗，一方面是因为这部分用户对平台的贡献度不大，另外一方面是就算挽回也需要耗费大量的资源，不值得。有了用户生命周期的认知，你就会知道，你不必要过度关注我们的用户的流失，因为这是用户的必然结局，我们还是需要花更多的精力花费在新用户和有价值的老用户身上，最大程度的延长用户的生命周期。&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;132&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5Oantia6VyibxhiaEQAVjpweK7e7bugERWYLWBrBOL1ibtrNmNg3gMZDWsptIwQ/0?wx_fmt=png&quot; data-ratio=&quot;0.23671875&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5Oantia6VyibxhiaEQAVjpweK7e7bugERWYLWBrBOL1ibtrNmNg3gMZDWsptIwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-backh=&quot;161&quot; data-backw=&quot;556&quot; data-before-oversubscription-url=&quot;https://mmbiz.qlogo.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5Oant59qErlu1Ric45AtMaM8kOxIzJQyfIdwcvqtx8VkDbjzAj7UjVTrw0xQ/0?wx_fmt=png&quot; data-ratio=&quot;0.28984375&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpf8CatiaYXdvicHqqcOIW5Oant59qErlu1Ric45AtMaM8kOxIzJQyfIdwcvqtx8VkDbjzAj7UjVTrw0xQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot;/&gt;&lt;/p&gt;&lt;p&gt;以上就是数据中台用户运营的全部内容，还有一个重要的点需要讲一下，是沟通方面。数据中台与运营通力合作才能达到最好的效果，所以双方的目标应该是一致的，节奏也应该一致，这点很重要。如果你发现大家在同一个世界思考问题，那效率是完全不一样的。我们数据中台产品经理一定要拿捏好，运营的同事这个阶段关注的点，多在这个点上发力可能起到事半功倍的效果，所以要和运营之间建立良好的沟通机制。&lt;/p&gt;&lt;p&gt;下一篇文章会讲《数据中台实战（三）：商品分析（产品设计）》 喜欢的同学请多扩散转发。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;推荐阅读：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-spm-anchor-id=&quot;a2c4e.11153940.blogcont599060.i0.27992a5aRBrZfQ&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDI5OTQ4Ng==&amp;amp;mid=2247484039&amp;amp;idx=1&amp;amp;sn=169b3d4329141fc8840923689fc979f9&amp;amp;chksm=ea6a8d36dd1d04201447d9f41e5e81789f63e17a496b6a6711f96afa102790cf12b64384d2b9&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot; hasload=&quot;1&quot;&gt;&lt;span&gt;数据中台实战（一）：以B2B电商亿订为例谈数据埋点（产品经理视角）&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p data-spm-anchor-id=&quot;a2c4e.11153940.blogcont599060.i0.27992a5aRBrZfQ&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI2MDI5OTQ4Ng==&amp;amp;mid=2247484171&amp;amp;idx=1&amp;amp;sn=18b0a39aa56431582256f263a29332f9&amp;amp;chksm=ea6a8cbadd1d05ac813463e91c81fbf51308b7264c140f02c3a6bb8d4e85796012a24b62f9b0&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; data-itemshowtype=&quot;0&quot; data-linktype=&quot;2&quot;&gt;《数据中台实战（二）：基于阿里OneData的数据指标管理体系》&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;关注微信公众号：改变世界的产品经理，回复“大数据之路”领取阿里数据中台实践《大数据之路》&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;section&gt;&lt;span&gt;我是华仔&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;span&gt;「改变社」&lt;/span&gt;创始人&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;畅销书《数据中台实战》作者&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;干中台，找华仔&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;点击下方卡片关注我&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;，发现一个有趣的灵魂&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;img data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;64&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/b96CibCt70iaajvl7fD4ZCicMcjhXMp1v6UibM134tIsO1j5yqHyNhh9arj090oAL7zGhRJRq6cFqFOlDZMleLl4pw/640?wx_fmt=png&quot; data-fileid=&quot;100005503&quot;/&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI2MDI5OTQ4Ng==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/RxIuCxHVpfibxkWv8ribuZAum5L8icibFU7RPzwuqf2t5gG2YtWicpPEYP8ldpjP9SxYDUpTeFbLeIlTBAIm3PxH46g/0?wx_fmt=png&quot; data-nickname=&quot;改变世界的产品经理&quot; data-alias=&quot;WiltonDong&quot; data-signature=&quot;《数据中台实战》作者，「改变社」创始人，江湖口号「干中台，找华仔」。主要分享产品、运营、数据、商业、个人成长相关原创文章。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;p&gt;&lt;span&gt;后台回复&lt;/span&gt;&lt;strong&gt;&lt;span&gt;“w”&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，可加我个人微信&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;给你准备了一份大厂数据中台资料大礼包&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>3c560da42a924113240b664444082395</guid>
<title>Chrome 插件（扩展）开发全攻略 2.6w 字，看这篇就够了</title>
<link>https://toutiao.io/k/1sw9dxz</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA5NTUzNTA2Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9RPAOn00JmfPMqzxY3DFW4qibUvrwzZYkCUoMj3vxqw5qIyyry0ciaSYRzb4y22XzQ60erlZqdYw2rg/0?wx_fmt=png&quot; data-nickname=&quot;搬运工来架构&quot; data-alias=&quot;java-backend&quot; data-signature=&quot;关注Java领域、后端、微服务、架构、分布式、实战经验等。分享技术干货！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;一、写在前面&lt;/h1&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;我花了将近一个多月的时间断断续续写下这篇博文，并精心写下完整demo，写博客的辛苦大家懂的。本文所有涉及到的大部分代码均在这个demo里面：https://github.com/sxei/chrome-plugin-demo ，大家可以直接下载下来运行。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;另外，本文图片较多，且图片服务器带宽有限，右下角的目录滚动监听必须等到图片全部加载完毕之后才会触发，所以请耐心等待加载完毕。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;本文目录：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452051&quot; data-ratio=&quot;0.5009259259259259&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqiblVngxAf0PGw3z67ic9HPROfqiciaaDYFpoblzd1jtnmDcYmTXrpGmqaQw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;demo部分截图：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452048&quot; data-ratio=&quot;0.7948402948402948&quot; data-type=&quot;png&quot; data-w=&quot;814&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibQReq9HHtuCZARyibFcmcr3M5361nKB7e3fCLtcTlT0DZlpxPXJOvFQg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;二、前言&lt;/h1&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;2.1. 什么是Chrome插件&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;严格来讲，我们正在说的东西应该叫Chrome扩展(&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;Chrome Extension&lt;/code&gt;)，真正意义上的Chrome插件是更底层的浏览器功能扩展，可能需要对浏览器源码有一定掌握才有能力去开发。鉴于Chrome插件的叫法已经习惯，本文也全部采用这种叫法，但读者需深知本文所描述的Chrome插件实际上指的是Chrome扩展。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;Chrome插件是一个用Web技术开发、用来增强浏览器功能的软件，它其实就是一个由HTML、CSS、JS、图片等资源组成的一个.crx后缀的压缩包.&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;个人猜测&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;crx&lt;/code&gt;可能是&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;Chrome Extension&lt;/code&gt;如下3个字母的简写：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452049&quot; data-ratio=&quot;0.57&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibGcJHbVibEERKVBWCqUz3Faz8A3kVkl0HXFkibOat5dRNDCox4QETzUuw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;另外，其实不只是前端技术，Chrome插件还可以配合C++编写的dll动态链接库实现一些更底层的功能(NPAPI)，比如全屏幕截图。&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452047&quot; data-ratio=&quot;0.5844402277039848&quot; data-type=&quot;png&quot; data-w=&quot;527&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibQ2aluibP0UZkhbYZMhJl19h3aLNCeAydaLQ7F7WrKW5TibCL8dcVsz0Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:25.6}&quot;&gt;由于安全原因，Chrome浏览器42以上版本已经陆续不再支持NPAPI插件，取而代之的是更安全的PPAPI。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;2.2. 学习Chrome插件开发有什么意义&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;增强浏览器功能，轻松实现属于自己的“定制版”浏览器，等等。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;Chrome插件提供了很多实用API供我们使用，包括但不限于：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;书签控制；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;下载控制；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;窗口控制；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;标签控制；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;网络请求控制，各类事件监听；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;自定义原生菜单；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;完善的通信机制；&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;等等；&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;2.3. 为什么是Chrome插件而不是Firefox插件&lt;/h2&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Chrome占有率更高，更多人用；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;开发更简单；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;应用场景更广泛，Firefox插件只能运行在Firefox上，而Chrome除了Chrome浏览器之外，还可以运行在所有webkit内核的国产浏览器，比如360极速浏览器、360安全浏览器、搜狗浏览器、QQ浏览器等等；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;除此之外，Firefox浏览器也对Chrome插件的运行提供了一定的支持；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;&lt;br/&gt;&lt;/h1&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;三、开发与调试&lt;/h1&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;Chrome插件没有严格的项目结构要求，只要保证本目录有一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;manifest.json&lt;/code&gt;即可，也不需要专门的IDE，普通的web开发工具即可。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;从右上角菜单-&amp;gt;更多工具-&amp;gt;扩展程序可以进入 插件管理页面，也可以直接在地址栏输入 chrome://extensions 访问。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452053&quot; data-ratio=&quot;0.8870673952641166&quot; data-type=&quot;png&quot; data-w=&quot;549&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqiboM3WPcicJMicJznH60sBVsLLEckDPO5GDw4tCibian7b7g5XOmO73UKp5Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;勾选&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;开发者模式&lt;/code&gt;即可以文件夹的形式直接加载插件，否则只能安装&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;.crx&lt;/code&gt;格式的文件。Chrome要求插件必须从它的Chrome应用商店安装，其它任何网站下载的都无法直接安装，所以，其实我们可以把&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;crx&lt;/code&gt;文件解压，然后通过开发者模式直接加载。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;开发中，代码有任何改动都必须重新加载插件，只需要在插件管理页按下&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;Ctrl+R&lt;/code&gt;即可，以防万一最好还把页面刷新一下。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;四、核心介绍&lt;/h1&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;4.1. manifest.json&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;这是一个Chrome插件最重要也是必不可少的文件，用来配置所有和插件相关的配置，必须放在根目录。其中，&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;manifest_version&lt;/code&gt;、&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;name&lt;/code&gt;、&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;version&lt;/code&gt;3个是必不可少的，&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;description&lt;/code&gt;和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;icons&lt;/code&gt;是推荐的。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;下面给出的是一些常见的配置项，均有中文注释，完整的配置文档请戳这里。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;manifest_version&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;demo&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;version&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;description&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;简单的Chrome扩展demo&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;icons&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;16&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;img/icon.png&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;48&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;img/icon.png&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;128&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;img/icon.png&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;background&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;page&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;background.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;browser_action&quot;&lt;/span&gt;: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_icon&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;img/icon.png&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_title&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;这是一个示例Chrome插件&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_popup&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;popup.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;content_scripts&quot;&lt;/span&gt;: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;matches&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&amp;lt;all_urls&amp;gt;&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js/jquery-1.8.3.js&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js/content-script.js&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;css&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;css/custom.css&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;run_at&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;document_start&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;matches&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;*://*/*.png&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;*://*/*.jpg&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;*://*/*.gif&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;*://*/*.bmp&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js/show-image-content-size.js&quot;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;permissions&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;contextMenus&quot;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;tabs&quot;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;notifications&quot;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;webRequest&quot;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;webRequestBlocking&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;storage&quot;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://*/*&quot;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://*/*&quot;&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;web_accessible_resources&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js/inject.js&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;homepage_url&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://www.baidu.com&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;chrome_url_overrides&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;newtab&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;newtab.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;options_page&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;options.html&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;options_ui&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;page&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;options.html&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;chrome_style&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;omnibox&quot;&lt;/span&gt;: { &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;keyword&quot;&lt;/span&gt; : &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;go&quot;&lt;/span&gt; },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_locale&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;zh_CN&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;devtools_page&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;devtools.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;4.2. content-scripts&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;所谓content-scripts，其实就是Chrome插件中向页面注入脚本的一种形式（虽然名为script，其实还可以包括css的），借助&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-scripts&lt;/code&gt;我们可以实现通过配置的方式轻松向指定页面注入JS和CSS（如果需要动态注入，可以参考下文），最常见的比如：广告屏蔽、页面CSS定制，等等。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;示例配置：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__regexp&quot;&gt;//&lt;/span&gt; 需要直接注入页面的JS&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;content_scripts&quot;&lt;/span&gt;: &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__regexp&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;matches&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://*/*&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://*/*&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__regexp&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&amp;lt;all_urls&amp;gt;&quot;&lt;/span&gt; 表示匹配所有地址&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;matches&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&amp;lt;all_urls&amp;gt;&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__regexp&quot;&gt;//&lt;/span&gt; 多个JS按顺序注入&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js/jquery-1.8.3.js&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js/content-script.js&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__regexp&quot;&gt;//&lt;/span&gt; JS的注入可以随便一点，但是CSS的注意就要千万小心了，因为一不小心就可能影响全局样式&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;css&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;css/custom.css&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__regexp&quot;&gt;//&lt;/span&gt; 代码注入的时间，可选值：&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;document_start&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;document_end&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;document_idle&quot;&lt;/span&gt;，最后一个表示页面空闲时，默认document_idle&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;run_at&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;document_start&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;特别注意，如果没有主动指定&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;run_at&lt;/code&gt;为&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;document_start&lt;/code&gt;（默认为&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;document_idle&lt;/code&gt;），下面这种代码是不会生效的：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;DOMContentLoaded&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;我被执行了！&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-scripts&lt;/code&gt;和原始页面共享DOM，但是不共享JS，如要访问页面JS（例如某个JS变量），只能通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;injected js&lt;/code&gt;来实现。&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-scripts&lt;/code&gt;不能访问绝大部分&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.xxx.api&lt;/code&gt;，除了下面这4种：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.extension(getURL , inIncognitoContext , lastError , onRequest , sendRequest)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.i18n&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.runtime(connect , getManifest , getURL , id , onConnect , onMessage , sendMessage)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.storage&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;其实看到这里不要悲观，这些API绝大部分时候都够用了，非要调用其它API的话，你还可以通过通信来实现让background来帮你调用（关于通信，后文有详细介绍）。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;好了，Chrome插件给我们提供了这么强大的JS注入功能，剩下的就是发挥你的想象力去玩弄浏览器了。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;4.3. background&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;后台（姑且这么翻译吧），是一个常驻的页面，它的生命周期是插件中所有类型页面中最长的，它随着浏览器的打开而打开，随着浏览器的关闭而关闭，所以通常把需要一直运行的、启动就运行的、全局的代码放在background里面。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;background的权限非常高，几乎可以调用所有的Chrome扩展API（除了devtools），而且它可以无限制跨域，也就是可以跨域访问任何网站而无需要求对方设置&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;CORS&lt;/code&gt;。&lt;/p&gt;&lt;blockquote&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:25.6}&quot;&gt;经过测试，其实不止是background，所有的直接通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome-extension://id/xx.html&lt;/code&gt;这种方式打开的网页都可以无限制跨域。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;配置中，&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;background&lt;/code&gt;可以通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;page&lt;/code&gt;指定一张网页，也可以通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;scripts&lt;/code&gt;直接指定一个JS，Chrome会自动为这个JS生成一个默认的网页：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;background&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;page&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;background.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;需要特别说明的是，虽然你可以通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome-extension://xxx/background.html&lt;/code&gt;&lt;span&gt;直接打开后台页，但是你打开的后台页和真正一直在后台运行的那个页面不是同一个，换句话说，你可以打开无数个&lt;/span&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;background.html&lt;/code&gt;&lt;span&gt;，但是真正在后台常驻的只有一个，而且这个你永远看不到它的界面，只能调试它的代码。&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;4.4. event-pages&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;这里顺带介绍一下event-pages，它是一个什么东西呢？鉴于background生命周期太长，长时间挂载后台可能会影响性能，所以Google又弄一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;event-pages&lt;/code&gt;，在配置文件上，它与background的唯一区别就是多了一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;persistent&lt;/code&gt;参数：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;json&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;background&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;scripts&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;event-page.js&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;persistent&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;它的生命周期是：在被需要时加载，在空闲时被关闭，什么叫被需要时呢？比如第一次安装、插件更新、有content-script向它发送消息，等等。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;除了配置文件的变化，代码上也有一些细微变化，个人这个简单了解一下就行了，一般情况下background也不会很消耗性能的。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;4.5. popup&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;popup&lt;/code&gt;是点击&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;browser_action&lt;/code&gt;或者&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;page_action&lt;/code&gt;图标时打开的一个小窗口网页，焦点离开网页就立即关闭，一般用来做一些临时性的交互。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452054&quot; data-ratio=&quot;0.8630952380952381&quot; data-type=&quot;png&quot; data-w=&quot;504&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibODxGbXRU8MVHUN5xLXh90rQDrVawiaFo4sJu1DtIqlcsSA7XcH7p7aQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;popup&lt;/code&gt;可以包含任意你想要的HTML内容，并且会自适应大小。可以通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;default_popup&lt;/code&gt;字段来指定popup页面，也可以调用&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;setPopup()&lt;/code&gt;方法。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;配置方式：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;browser_action&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_icon&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;img/icon.png&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_title&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;这是一个示例Chrome插件&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_popup&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;popup.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452052&quot; data-ratio=&quot;0.6151832460732984&quot; data-type=&quot;png&quot; data-w=&quot;382&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibu075RibIGdFqvFEkgsLrXVGrSR7EpSw0Rp0o5gbJBAWGuXyum62lNGA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;需要特别注意的是，由于单击图标打开popup，焦点离开又立即关闭，所以popup页面的生命周期一般很短，需要长时间运行的代码千万不要写在popup里面。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;在权限上，它和background非常类似，它们之间最大的不同是生命周期的不同，popup中可以直接通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.extension.getBackgroundPage()&lt;/code&gt;获取background的window对象。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;4.6. injected-script&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;这里的&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;injected-script&lt;/code&gt;是我给它取的，指的是通过DOM操作的方式向页面注入的一种JS。为什么要把这种JS单独拿出来讨论呢？又或者说为什么需要通过这种方式注入JS呢？&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;这是因为&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-script&lt;/code&gt;有一个很大的“缺陷”，也就是无法访问页面中的JS，虽然它可以操作DOM，但是DOM却不能调用它，也就是无法在DOM中通过绑定事件的方式调用&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-script&lt;/code&gt;中的代码（包括直接写&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;onclick&lt;/code&gt;和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;addEventListener&lt;/code&gt;2种方式都不行），但是，“在页面上添加一个按钮并调用插件的扩展API”是一个很常见的需求，那该怎么办呢？其实这就是本小节要讲的。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;在&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-script&lt;/code&gt;中通过DOM方式向页面注入&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;inject-script&lt;/code&gt;代码示例：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;injectCustomJs&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;jsPath&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  jsPath = jsPath || &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;js/inject.js&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; temp = &lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;script&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  temp.setAttribute(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;type&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;text/javascript&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  temp.src = chrome.extension.getURL(jsPath);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  temp.onload = &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.parentNode.removeChild(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  };&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.head.appendChild(temp);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;br/&gt;&lt;/pre&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;你以为这样就行了？执行一下你会看到如下报错：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Denying &lt;span class=&quot;code-snippet__keyword&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;of&lt;/span&gt; chrome-extension://efbllncjkjiijkppagepehoekjojdclc/js/inject.js. Resources must be listed &lt;span class=&quot;code-snippet__keyword&quot;&gt;in&lt;/span&gt; the web_accessible_resources manifest &lt;span class=&quot;code-snippet__keyword&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;to&lt;/span&gt; be loaded &lt;span class=&quot;code-snippet__keyword&quot;&gt;by&lt;/span&gt; pages outside the extension.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;意思就是你想要在web中直接访问插件中的资源的话必须显示声明才行，配置文件中增加如下：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;web_accessible_resources&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js/inject.js&quot;&lt;/span&gt;],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;至于&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;inject-script&lt;/code&gt;&lt;span&gt;如何调用&lt;/span&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-script&lt;/code&gt;&lt;span&gt;中的代码，后面我会在专门的一个消息通信章节详细介绍。&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;4.7. homepage_url&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;开发者或者插件主页设置，一般会在如下2个地方显示：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452055&quot; data-ratio=&quot;1.1953488372093024&quot; data-type=&quot;png&quot; data-w=&quot;215&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibGzyx586CSAHa29VUoPgTaXHGbob5OZlZ3gibAgf3rCmRgDKnQJyMAMw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452056&quot; data-ratio=&quot;0.521613832853026&quot; data-type=&quot;png&quot; data-w=&quot;694&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibIbUUOcpLYp92MRHypw7vUBXib3cDbTdOWGphbS8AvtH5CyzCYQD29SA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;回复公众号【&lt;/span&gt;&lt;span&gt;资料&lt;/span&gt;&lt;span&gt;】获得干货资料集锦：技术ppt、IT大会资料、架构、分布式资料等。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;五、Chrome插件的8种展示形式&lt;/h1&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;5.1. browserAction(浏览器右上角)&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;通过配置&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;browser_action&lt;/code&gt;可以在浏览器的右上角增加一个图标，一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;browser_action&lt;/code&gt;可以拥有一个图标，一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;tooltip&lt;/code&gt;，一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;badge&lt;/code&gt;和一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;popup&lt;/code&gt;。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;示例配置如下：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;browser_action&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_icon&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;img/icon.png&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_title&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;这是一个示例Chrome插件&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_popup&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;popup.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;5.1.1. 图标&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;browser_action&lt;/code&gt;图标推荐使用宽高都为19像素的图片，更大的图标会被缩小，格式随意，一般推荐png，可以通过manifest中&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;default_icon&lt;/code&gt;字段配置，也可以调用setIcon()方法。&lt;/p&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;5.1.2. tooltip&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;修改&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;browser_action&lt;/code&gt;的manifest中&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;default_title&lt;/code&gt;字段，或者调用&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;setTitle()&lt;/code&gt;方法。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452059&quot; data-ratio=&quot;0.5888324873096447&quot; data-type=&quot;png&quot; data-w=&quot;197&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib4mcb9f6QzxyutDqib7KbTnunmVnY4T3hqFCF4EDY755OquztmH6BFmA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;5.1.3. badge&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;所谓&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;badge&lt;/code&gt;就是在图标上显示一些文本，可以用来更新一些小的扩展状态提示信息。因为badge空间有限，所以只支持4个以下的字符（英文4个，中文2个）。badge无法通过配置文件来指定，必须通过代码实现，设置badge文字和颜色可以分别使用&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;setBadgeText()&lt;/code&gt;和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;setBadgeBackgroundColor()&lt;/code&gt;。&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.browserAction&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.setBadgeText&lt;/span&gt;({&lt;span class=&quot;code-snippet__attribute&quot;&gt;text&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;new&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.browserAction&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.setBadgeBackgroundColor&lt;/span&gt;({&lt;span class=&quot;code-snippet__attribute&quot;&gt;color&lt;/span&gt;: [&lt;span class=&quot;code-snippet__number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;code-snippet__number&quot;&gt;255&lt;/span&gt;]});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;效果：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452057&quot; data-ratio=&quot;0.6815642458100558&quot; data-type=&quot;png&quot; data-w=&quot;179&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib1FcS68nEibjuJYo9bs9AIpFcYpZGJcA1fP5FBoYwyrBb0VSpg9xtXEQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;5.2. pageAction(地址栏右侧)&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;所谓&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;pageAction&lt;/code&gt;，指的是只有当某些特定页面打开才显示的图标，它和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;browserAction&lt;/code&gt;最大的区别是一个始终都显示，一个只在特定情况才显示。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;需要特别说明的是早些版本的Chrome是将pageAction放在地址栏的最右边，左键单击弹出popup，右键单击则弹出相关默认的选项菜单：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452058&quot; data-ratio=&quot;0.2361963190184049&quot; data-type=&quot;png&quot; data-w=&quot;652&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib2pTNIj1icLLH54HjOmkO4hydCLwCBic9T42R2sRWvxzrc6zpoon9WA2Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;而新版的Chrome更改了这一策略，pageAction和普通的browserAction一样也是放在浏览器右上角，只不过没有点亮时是灰色的，点亮了才是彩色的，灰色时无论左键还是右键单击都是弹出选项：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452061&quot; data-ratio=&quot;0.9258241758241759&quot; data-type=&quot;gif&quot; data-w=&quot;364&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib5WMkeHDNhnNyDNDsNEt7C6ju8qTXaaOOWN81nibQGPf4GMljjDkOMOg/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:25.6}&quot;&gt;具体是从哪一版本开始改的没去仔细考究，反正知道v50.0的时候还是前者，v58.0的时候已改为后者。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;调整之后的&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;pageAction&lt;/code&gt;我们可以简单地把它看成是可以置灰的&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;browserAction&lt;/code&gt;。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;示例(只有打开百度才显示图标)&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;page_action&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_icon&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;img/icon.png&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_title&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;我是pageAction&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_popup&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;popup.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;permissions&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;declarativeContent&quot;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.runtime.onInstalled.addListener(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  chrome.declarativeContent.onPageChanged.removeRules(&lt;span class=&quot;code-snippet__literal&quot;&gt;undefined&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    chrome.declarativeContent.onPageChanged.addRules([&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;conditions&lt;/span&gt;: [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; chrome.declarativeContent.PageStateMatcher({&lt;span class=&quot;code-snippet__attr&quot;&gt;pageUrl&lt;/span&gt;: {&lt;span class=&quot;code-snippet__attr&quot;&gt;urlContains&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;baidu.com&#x27;&lt;/span&gt;}})&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__attr&quot;&gt;actions&lt;/span&gt;: [&lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; chrome.declarativeContent.ShowPageAction()]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;效果图：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452060&quot; data-ratio=&quot;0.19491525423728814&quot; data-type=&quot;gif&quot; data-w=&quot;590&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibykOSPFD4tB9nrpZRKmrseBg2WJgsTzvJykBLYA9faCw1LhcmE7ajRw/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5.3. 右键菜单&lt;/span&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;通过开发Chrome插件可以自定义浏览器的右键菜单，主要是通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.contextMenus&lt;/code&gt;API实现，右键菜单可以出现在不同的上下文，比如普通页面、选中的文字、图片、链接，等等，如果有同一个插件里面定义了多个菜单，Chrome会自动组合放到以插件名字命名的二级菜单里，如下：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452063&quot; data-ratio=&quot;0.5729813664596274&quot; data-type=&quot;png&quot; data-w=&quot;644&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibSXzYwPkX7HudiauRz9ptM9wEkibFwee49RF5EprqicsegBqd8m6PG5qlQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;5.3.1. 最简单的右键菜单示例&lt;/h3&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;permissions&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;contextMenus&quot;&lt;/span&gt;]}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.contextMenus.create({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;title&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;测试右键菜单&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;onclick&lt;/span&gt;: &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;{alert(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;您点击了右键菜单！&#x27;&lt;/span&gt;);}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;效果：&lt;/pre&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452065&quot; data-ratio=&quot;0.9425287356321839&quot; data-type=&quot;png&quot; data-w=&quot;348&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibsibicJnZbrG9Mg5rr12lW82OzfX1RmbiaeHJVT3IjPJAW2vYjOdnOiapTw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;5.3.2. 添加右键百度搜索&lt;/h3&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;permissions&quot;&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;contextMenus&quot;&lt;/span&gt;， &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;tabs&quot;&lt;/span&gt;]}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.contextMenus.create({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;title&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;使用度娘搜索：%s&#x27;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  contexts: [&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;selection&#x27;&lt;/span&gt;], &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  onclick: &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;params&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    chrome.tabs.create({&lt;span class=&quot;code-snippet__attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;https://www.baidu.com/s?ie=utf-8&amp;amp;wd=&#x27;&lt;/span&gt; + &lt;span class=&quot;code-snippet__built_in&quot;&gt;encodeURI&lt;/span&gt;(params.selectionText)});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;效果如下：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452064&quot; data-ratio=&quot;0.48444444444444446&quot; data-type=&quot;png&quot; data-w=&quot;450&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib3dvPYhNRia72kAvdx9fZLnunww9H8iaRbwziavk5qGQGwZY44iaMskicJKQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;5.3.3. 语法说明&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;这里只是简单列举一些常用的，完整API参见：https://developer.chrome.com/extensions/contextMenus&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.contextMenus.create({&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;normal&#x27;&lt;/span&gt;， // 类型，可选：[&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;normal&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;radio&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;separator&quot;&lt;/span&gt;]，默认 normal&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  title: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;菜单的名字&#x27;&lt;/span&gt;, // 显示的文字，除非为“separator”类型否则此参数必需，如果类型为“selection”，可以使用%s显示选定的文本&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  contexts: [&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;page&#x27;&lt;/span&gt;], // 上下文环境，可选：[&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;all&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;page&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;frame&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;selection&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;link&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;editable&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;image&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;video&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;audio&quot;&lt;/span&gt;]，默认page&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  onclick: &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__title&quot;&gt;function&lt;/span&gt;&lt;/span&gt;(){}, // 单击时触发的方法&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  parentId: 1, // 右键菜单项的父菜单项ID。指定父菜单项将会使此菜单项成为父菜单项的子菜单&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  documentUrlPatterns: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;https://*.baidu.com/*&#x27;&lt;/span&gt; // 只在某些页面显示此右键菜单&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// 删除某一个菜单项&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.contextMenus.remove(menuItemId)；&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// 删除所有自定义右键菜单&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.contextMenus.removeAll();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;// 更新某一个菜单项&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.contextMenus.update(menuItemId, updateProperties);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;5.4. override(覆盖特定页面)&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;使用&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;override&lt;/code&gt;页可以将Chrome默认的一些特定页面替换掉，改为使用扩展提供的页面。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;扩展可以替代如下页面：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;历史记录：从工具菜单上点击历史记录时访问的页面，或者从地址栏直接输入 &lt;/span&gt;&lt;span&gt;chrome://history&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;新标签页：当创建新标签的时候访问的页面，或者从地址栏直接输入 &lt;/span&gt;&lt;span&gt;chrome://newtab&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;书签：浏览器的书签，或者直接输入 &lt;/span&gt;&lt;span&gt;chrome://bookmarks&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;注意：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;下面的截图是默认的新标签页和被扩展替换掉的新标签页。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452062&quot; data-ratio=&quot;0.4779969650986343&quot; data-type=&quot;png&quot; data-w=&quot;659&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibqibLbWgFiaLogV9U2icic4oA4oiaMjoQYiaX34YmcROIf6qBibBRpPb8WD24g/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;代码（注意，一个插件只能替代一个默认页，以下仅为演示）：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;chrome_url_overrides&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;newtab&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;newtab.html&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;history&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;history.html&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bookmarks&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bookmarks.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;br/&gt;&lt;/pre&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;5.5. devtools(开发者工具)&lt;/h2&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;5.5.1. 预热&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;使用过vue的应该见过这种类型的插件：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452066&quot; data-ratio=&quot;0.36944444444444446&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib06pryMyjKPTT79kWaPYZDogoEkUxsnschIIAspL2P5cnaQg07Cfv2Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;是的，Chrome允许插件在开发者工具(devtools)上动手脚，主要表现在：&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;先来看2张简单的demo截图，自定义面板（判断当前页面是否使用了jQuery）：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452070&quot; data-ratio=&quot;0.4566160520607375&quot; data-type=&quot;png&quot; data-w=&quot;922&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibjbGLJMndFUV602uuo9sfICVoRpIsduKoEVlT4euoqJ3vmCNLA2nmGQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;自定义侧边栏（获取当前页面所有图片）：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452071&quot; data-ratio=&quot;0.9161904761904762&quot; data-type=&quot;png&quot; data-w=&quot;525&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib2SibxFJcAeKLTnHTRtQqIhIuUpRicicOUuuTlk44sibLVibxfZG4qkyiaHEA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;5.5.2. devtools扩展介绍&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;主页：https://developer.chrome.com/extensions/devtools&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;来一张官方图片：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452068&quot; data-ratio=&quot;1.0651340996168583&quot; data-type=&quot;png&quot; data-w=&quot;522&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibllCJSNaz8ul8IhCibUZLxPusT7IVFyd48tUYySlshhqFm4YZ7UCic8Og/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;每打开一个开发者工具窗口，都会创建devtools页面的实例，F12窗口关闭，页面也随着关闭，所以devtools页面的生命周期和devtools窗口是一致的。devtools页面可以访问一组特有的&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;DevTools API&lt;/code&gt;以及有限的扩展API，这组特有的&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;DevTools API&lt;/code&gt;只有devtools页面才可以访问，background都无权访问，这些API包括：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.devtools&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.panels&lt;/span&gt;：面板相关；&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.devtools&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.inspectedWindow&lt;/span&gt;：获取被审查窗口的有关信息；&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.devtools&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.network&lt;/span&gt;：获取有关网络请求的信息；&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;大部分扩展API都无法直接被&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;DevTools&lt;/code&gt;页面调用，但它可以像&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-script&lt;/code&gt;一样直接调用&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.extension&lt;/code&gt;和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.runtime&lt;/code&gt;API，同时它也可以像&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-script&lt;/code&gt;一样使用Message交互的方式与background页面进行通信。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;5.5.3. 实例：创建一个devtools扩展&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;首先，要针对开发者工具开发插件，需要在清单文件声明如下：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;devtools_page&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;devtools.html&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;这个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;devtools.html&lt;/code&gt;&lt;span&gt;里面一般什么都没有，就引入一个js：&lt;/span&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;xml&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;js/devtools.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span&gt;可以看出来，其实真正代码是&lt;/span&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;devtools.js&lt;/code&gt;&lt;span&gt;，html文件是“多余”的，所以这里觉得有点坑，&lt;/span&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;devtools_page&lt;/code&gt;&lt;span&gt;干嘛不允许直接指定JS呢？&lt;/span&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;再来看devtools.js的代码：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.devtools.panels.create(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;MyPanel&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;img/icon.png&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;mypanel.html&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;panel&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;自定义面板创建成功！&#x27;&lt;/span&gt;); &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.devtools.panels.elements.createSidebarPane(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Images&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;sidebar&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  sidebar.setExpression(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;document.querySelectorAll(&quot;img&quot;)&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;All Images&#x27;&lt;/span&gt;); &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;setPage时的效果：&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452067&quot; data-ratio=&quot;0.5748031496062992&quot; data-type=&quot;png&quot; data-w=&quot;381&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibBricibnI9VwW1IWaT7KEVXunMB3zbFnH32LNhUiab15lEnM1ibonTNFV6g/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;以下截图示例的代码：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452069&quot; data-ratio=&quot;0.5286885245901639&quot; data-type=&quot;png&quot; data-w=&quot;244&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibeAjmfzWLytf5UOU6TP8veGtEp3QO3hRt1Ukgv0kuv3cYHHVEsMUByA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;check_jquery&#x27;&lt;/span&gt;).addEventListener(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;click&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  chrome.devtools.inspectedWindow.eval(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;jQuery.fn.jquery&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;result, isException&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; html = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (isException) html = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;当前页面没有使用jQuery。&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; html = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;当前页面使用了jQuery，版本为：&#x27;&lt;/span&gt;+result;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    alert(html);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;open_resource&#x27;&lt;/span&gt;).addEventListener(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;click&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  chrome.devtools.inspectedWindow.eval(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;window.location.href&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;result, isException&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    chrome.devtools.panels.openResource(result, &lt;span class=&quot;code-snippet__number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;资源打开成功！&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;test_inspect&#x27;&lt;/span&gt;).addEventListener(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;click&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  chrome.devtools.inspectedWindow.eval(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;inspect(document.images[0])&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;result, isException&lt;/span&gt;)&lt;/span&gt;{});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;get_all_resources&#x27;&lt;/span&gt;).addEventListener(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;click&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  chrome.devtools.inspectedWindow.getResources(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;resources&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    alert(&lt;span class=&quot;code-snippet__built_in&quot;&gt;JSON&lt;/span&gt;.stringify(resources));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;5.5.4. 调试技巧&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;修改了devtools页面的代码时，需要先在 chrome://extensions 页面按下&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;Ctrl+R&lt;/code&gt;重新加载插件，然后关闭再打开开发者工具即可，无需刷新页面（而且只刷新页面不刷新开发者工具的话是不会生效的）。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;由于devtools本身就是开发者工具页面，所以几乎没有方法可以直接调试它，直接用 &lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome-extension://extid/devtools.html&quot;&lt;/code&gt;的方式打开页面肯定报错，因为不支持相关特殊API，只能先自己写一些方法屏蔽这些错误，调试通了再放开。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;5.6. option(选项页)&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;所谓&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;options&lt;/code&gt;页，就是插件的设置页面，有2个入口，一个是右键图标有一个“选项”菜单，还有一个在插件管理页面：&lt;/p&gt;&lt;p&gt;&lt;img data-type=&quot;png&quot; data-ratio=&quot;1.296875&quot; data-w=&quot;192&quot; data-fileid=&quot;307452072&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibwHsUERI4nT3XiaOPmLpERUMReuOKVDhDmGvOyibtonOyJX4fr4UrxibCQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452073&quot; data-ratio=&quot;0.43412526997840173&quot; data-type=&quot;png&quot; data-w=&quot;463&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibCu2sFcPqEjGSsx7t3QBT8ooxt1VEPT9iaBicOyp05BahQAYWaDzjt06Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;在Chrome40以前，options页面和其它普通页面没什么区别，Chrome40以后则有了一些变化。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;我们先看老版的options：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;options_page&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;options.html&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;这个页面里面的内容就随你自己发挥了，配置之后在插件管理页就会看到一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;选项&lt;/code&gt;按钮入口，点进去就是打开一个网页，没啥好讲的。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;效果:&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452074&quot; data-ratio=&quot;0.416&quot; data-type=&quot;png&quot; data-w=&quot;625&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibFQ1yia1o6JtX6OrHkQs0J8Kz03RHFHyicAVOQzvhZAP35AE9ZdC18cyg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;再来看新版的optionsV2：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;options_ui&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;page&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;options.html&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;chrome_style&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;options.html&lt;/code&gt;的代码我们没有任何改动，只是配置文件改了，之后效果如下：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452075&quot; data-ratio=&quot;0.7107001321003963&quot; data-type=&quot;png&quot; data-w=&quot;757&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibda51YRZyAVkP0sicT9x0u2ibrXRDCzuXIibKgWnDxJZia3Sia3a42a8r6Fw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;看起来是不是高大上了？&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;几点注意：&lt;/p&gt;&lt;p&gt;&lt;span/&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;5.7. omnibox&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;omnibox&lt;/code&gt;是向用户提供搜索建议的一种方式。先来看个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;gif&lt;/code&gt;图以便了解一下这东西到底是个什么鬼：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452076&quot; data-ratio=&quot;0.755939524838013&quot; data-type=&quot;gif&quot; data-w=&quot;463&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib0ExV8ggM2abebV7GBGlianJVCticqhjDUg5w3VtHD9aPichl8SUVUmvgQ/640?wx_fmt=gif&quot;/&gt;&lt;/p&gt;&lt;p&gt;注册某个关键字以触发插件自己的搜索建议界面，然后可以任意发挥了。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;首先，配置文件如下：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;omnibox&quot;&lt;/span&gt;: { &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;keyword&quot;&lt;/span&gt; : &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;go&quot;&lt;/span&gt; },&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;然后&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;background.js&lt;/code&gt;中注册监听事件：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.omnibox.onInputChanged.addListener(&lt;span class=&quot;code-snippet__function&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;text, suggest&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;inputChanged: &#x27;&lt;/span&gt; + text);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(!text) &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(text == &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;美女&#x27;&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    suggest([&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      {&lt;span class=&quot;code-snippet__attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;中国&#x27;&lt;/span&gt; + text, &lt;span class=&quot;code-snippet__attr&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;你要找“中国美女”吗？&#x27;&lt;/span&gt;},&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      {&lt;span class=&quot;code-snippet__attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;日本&#x27;&lt;/span&gt; + text, &lt;span class=&quot;code-snippet__attr&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;你要找“日本美女”吗？&#x27;&lt;/span&gt;},&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      {&lt;span class=&quot;code-snippet__attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;泰国&#x27;&lt;/span&gt; + text, &lt;span class=&quot;code-snippet__attr&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;你要找“泰国美女或人妖”吗？&#x27;&lt;/span&gt;},&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      {&lt;span class=&quot;code-snippet__attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;韩国&#x27;&lt;/span&gt; + text, &lt;span class=&quot;code-snippet__attr&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;你要找“韩国美女”吗？&#x27;&lt;/span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(text == &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;微博&#x27;&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    suggest([&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      {&lt;span class=&quot;code-snippet__attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;新浪&#x27;&lt;/span&gt; + text, &lt;span class=&quot;code-snippet__attr&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;新浪&#x27;&lt;/span&gt; + text},&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      {&lt;span class=&quot;code-snippet__attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;腾讯&#x27;&lt;/span&gt; + text, &lt;span class=&quot;code-snippet__attr&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;腾讯&#x27;&lt;/span&gt; + text},&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      {&lt;span class=&quot;code-snippet__attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;搜狐&#x27;&lt;/span&gt; + text, &lt;span class=&quot;code-snippet__attr&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;搜索&#x27;&lt;/span&gt; + text},&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    suggest([&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      {&lt;span class=&quot;code-snippet__attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;百度搜索 &#x27;&lt;/span&gt; + text, &lt;span class=&quot;code-snippet__attr&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;百度搜索 &#x27;&lt;/span&gt; + text},&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      {&lt;span class=&quot;code-snippet__attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;谷歌搜索 &#x27;&lt;/span&gt; + text, &lt;span class=&quot;code-snippet__attr&quot;&gt;description&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;谷歌搜索 &#x27;&lt;/span&gt; + text},&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    ]);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.omnibox.onInputEntered.addListener(&lt;span class=&quot;code-snippet__function&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;text&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;inputEntered: &#x27;&lt;/span&gt; + text);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(!text) &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; href = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(text.endsWith(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;美女&#x27;&lt;/span&gt;)) href = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;http://image.baidu.com/search/index?tn=baiduimage&amp;amp;ie=utf-8&amp;amp;word=&#x27;&lt;/span&gt; + text;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(text.startsWith(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;百度搜索&#x27;&lt;/span&gt;)) href = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;https://www.baidu.com/s?ie=UTF-8&amp;amp;wd=&#x27;&lt;/span&gt; + text.replace(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;百度搜索 &#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(text.startsWith(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;谷歌搜索&#x27;&lt;/span&gt;)) href = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;https://www.google.com.tw/search?q=&#x27;&lt;/span&gt; + text.replace(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;谷歌搜索 &#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; href = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;https://www.baidu.com/s?ie=UTF-8&amp;amp;wd=&#x27;&lt;/span&gt; + text;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  openUrlCurrentTab(href);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;getCurrentTabId&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;callback&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  chrome.tabs.query({&lt;span class=&quot;code-snippet__attr&quot;&gt;active&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;currentWindow&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;}, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;tabs&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(callback) callback(tabs.length ? tabs[&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;].id: &lt;span class=&quot;code-snippet__literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;openUrlCurrentTab&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;url&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  getCurrentTabId(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;tabId&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    chrome.tabs.update(tabId, {&lt;span class=&quot;code-snippet__attr&quot;&gt;url&lt;/span&gt;: url});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  })&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;5.8. 桌面通知&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;Chrome提供了一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.notifications&lt;/code&gt;API以便插件推送桌面通知，暂未找到&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.notifications&lt;/code&gt;和HTML5自带的&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;Notification&lt;/code&gt;的显著区别及优势。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;在后台JS中，无论是使用&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.notifications&lt;/code&gt;还是&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;Notification&lt;/code&gt;都不需要申请权限（HTML5方式需要申请权限），直接使用即可。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;最简单的通知：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452077&quot; data-ratio=&quot;0.391644908616188&quot; data-type=&quot;png&quot; data-w=&quot;383&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqiby6mGsADz8UKDfica5WrSJDpCSQ2LaKcYTSO4ncGWcqEXaQibXhpicJOSA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;代码：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;chrome&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.notifications&lt;/span&gt;&lt;span class=&quot;code-snippet__selector-class&quot;&gt;.create&lt;/span&gt;(&lt;span class=&quot;code-snippet__selector-tag&quot;&gt;null&lt;/span&gt;, {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attribute&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;basic&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  iconUrl: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;img/icon.png&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  title: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;这是标题&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  message: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;您刚才点击了自定义右键菜单！&#x27;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;通知的样式可以很丰富：&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452081&quot; data-ratio=&quot;1.0593220338983051&quot; data-type=&quot;png&quot; data-w=&quot;354&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibR4MoqEZXtrmicatnELxB1Uwd4f1qKT9JWlcWFgkdkK2N4PfMzLwuj4A/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;这个没有深入研究，有需要的可以去看官方文档。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;六、5种类型的JS对比&lt;/h1&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;Chrome插件的JS主要可以分为这5类：&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;injected script&lt;/code&gt;、&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-script&lt;/code&gt;、&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;popup js&lt;/code&gt;、&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;background js&lt;/code&gt;和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;devtools js&lt;/code&gt;，&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;6.1. 权限对比&lt;/h2&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;JS种类&lt;/th&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;可访问的API&lt;/th&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;DOM访问情况&lt;/th&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;JS访问情况&lt;/th&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;直接跨域&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;injected script&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;和普通JS无任何差别，不能访问任何扩展API&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;可以访问&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;可以访问&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;不可以&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;content script&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;只能访问 extension、runtime等部分API&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;可以访问&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;不可以&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;不可以&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;popup js&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;可访问绝大部分API，除了devtools系列&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;不可直接访问&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;不可以&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;可以&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;background js&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;可访问绝大部分API，除了devtools系列&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;不可直接访问&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;不可以&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;可以&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;devtools js&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;只能访问 devtools、extension、runtime等部分API&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;可以&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;可以&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;不可以&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;6.2. 调试方式对比&lt;/h2&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;JS类型&lt;/th&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;调试方式&lt;/th&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;图片说明&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;injected script&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;直接普通的F12即可&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;懒得截图&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;content-script&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;打开Console,如图切换&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;img data-type=&quot;png&quot; data-ratio=&quot;0.7936170212765957&quot; data-w=&quot;470&quot; data-fileid=&quot;307452079&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibvLTmDe37dGAW18AC4biawCFcef5ia6ktvsB36ZEAtbfhibvQaNVkLFsqw/640?wx_fmt=png&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;popup-js&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;popup页面右键审查元素&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;img data-fileid=&quot;307452080&quot; data-ratio=&quot;0.6477987421383647&quot; data-type=&quot;png&quot; data-w=&quot;318&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibzv2ibia2ZeQLXnVrQjNCfq24fibWbdrsCzlm7gEXWmb2qZGpAKS8d35jw/640?wx_fmt=png&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;background&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;插件管理页点击背景页即可&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;img data-fileid=&quot;307452078&quot; data-ratio=&quot;0.8333333333333334&quot; data-type=&quot;png&quot; data-w=&quot;486&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibVFTHVzacGujic6XDcU0rc6cBbyttPaCskUdP63f1icQ0B9j2Giceiar3TQ/640?wx_fmt=png&quot;/&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;devtools-js&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;暂未找到有效方法&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;-&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;七、消息通信&lt;/h1&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;通信主页：https://developer.chrome.com/extensions/messaging&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;前面我们介绍了Chrome插件中存在的5种JS，那么它们之间如何互相通信呢？下面先来系统概况一下，然后再分类细说。需要知道的是，popup和background其实几乎可以视为一种东西，因为它们可访问的API都一样、通信机制一样、都可以跨域。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;7.1. 互相通信概览&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;注：&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;-&lt;/code&gt;表示不存在或者无意义，或者待验证。&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;br/&gt;&lt;/th&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;injected-script&lt;/th&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;content-script&lt;/th&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;popup-js&lt;/th&gt;&lt;th data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;background-js&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;injected-script&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;-&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;window.postMessage&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;-&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;-&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;content-script&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;window.postMessage&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;-&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;chrome.runtime.sendMessage chrome.runtime.connect&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;chrome.runtime.sendMessage chrome.runtime.connect&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;popup-js&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;-&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;chrome.tabs.sendMessage chrome.tabs.connect&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;-&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;chrome.extension. getBackgroundPage()&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;background-js&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;-&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;chrome.tabs.sendMessage chrome.tabs.connect&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;chrome.extension.getViews&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;-&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;devtools-js&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;chrome.devtools. inspectedWindow.eval&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;-&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;chrome.runtime.sendMessage&lt;/span&gt;&lt;/td&gt;&lt;td data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;span&gt;chrome.runtime.sendMessage&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;7.2. 通信详细介绍&lt;/h2&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;7.2.1. popup和background&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;popup可以直接调用background中的JS方法，也可以直接访问background的DOM：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  alert(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;我是background！&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; bg = chrome.extension.getBackgroundPage();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;bg.test(); &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;alert(bg.document.body.innerHTML); &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;blockquote&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:25.6}&quot;&gt;小插曲，今天碰到一个情况，发现popup无法获取background的任何方法，找了半天才发现是因为background的js报错了，而你如果不主动查看background的js的话，是看不到错误信息的，特此提醒。&lt;/p&gt;&lt;/blockquote&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;至于&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;background&lt;/code&gt;访问&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;popup&lt;/code&gt;如下（前提是&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;popup&lt;/code&gt;已经打开）：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; views = chrome.extension.getViews({&lt;span class=&quot;code-snippet__keyword&quot;&gt;type&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;popup&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(views.length &amp;gt; &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(views[&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;].location.href);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;7.2.2. popup或者bg向content主动发送消息&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;background.js或者popup.js：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;sendMessageToContentScript&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;message, callback&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  chrome.tabs.query({&lt;span class=&quot;code-snippet__attr&quot;&gt;active&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;currentWindow&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;}, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;tabs&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    chrome.tabs.sendMessage(tabs[&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;].id, message, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;response&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(callback) callback(response);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;sendMessageToContentScript({&lt;span class=&quot;code-snippet__attr&quot;&gt;cmd&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;test&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;value&lt;/span&gt;:&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;你好，我是popup！&#x27;&lt;/span&gt;}, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;response&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;来自content的回复：&#x27;&lt;/span&gt;+response);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-script.js&lt;/code&gt;接收：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.runtime.onMessage.addListener(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;request, sender, sendResponse&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(request.cmd == &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;test&#x27;&lt;/span&gt;) alert(request.value);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  sendResponse(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;我收到了你的消息！&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;br/&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/pre&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;双方通信直接发送的都是JSON对象，不是JSON字符串，所以无需解析，很方便（当然也可以直接发送字符串）。&lt;/p&gt;&lt;blockquote&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:25.6}&quot;&gt;网上有些老代码中用的是&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.extension.onMessage&lt;/code&gt;，没有完全查清二者的区别(貌似是别名)，但是建议统一使用&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.runtime.onMessage&lt;/code&gt;。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;7.2.3. content-script主动发消息给后台&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;content-script.js：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.runtime.sendMessage({&lt;span class=&quot;code-snippet__attr&quot;&gt;greeting&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;你好，我是content-script呀，我主动发消息给后台！&#x27;&lt;/span&gt;}, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;response&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;收到来自后台的回复：&#x27;&lt;/span&gt; + response);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;span&gt;background.js 或者 popup.js：&lt;/span&gt;&lt;br/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;http&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.runtime.onMessage.addListener(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;request, sender, sendResponse&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;收到来自content-script的消息：&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(request, sender, sendResponse);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  sendResponse(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;我是后台，我已收到你的消息：&#x27;&lt;/span&gt; + &lt;span class=&quot;code-snippet__built_in&quot;&gt;JSON&lt;/span&gt;.stringify(request));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;注意事项：&lt;/p&gt;&lt;h3 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;7.2.4. injected script和content-script&lt;/h3&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-script&lt;/code&gt;和页面内的脚本（&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;injected-script&lt;/code&gt;自然也属于页面内的脚本）之间唯一共享的东西就是页面的DOM元素，有2种方法可以实现二者通讯：&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;可以通过&lt;/span&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:12,&amp;quot;lineHeight&amp;quot;:21.6}&quot;&gt;&lt;span&gt;window.postMessage&lt;/span&gt;&lt;/code&gt;&lt;span&gt;和&lt;/span&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:12,&amp;quot;lineHeight&amp;quot;:21.6}&quot;&gt;&lt;span&gt;window.addEventListener&lt;/span&gt;&lt;/code&gt;&lt;span&gt;来实现二者消息通讯；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;通过自定义DOM事件来实&lt;/span&gt;&lt;span&gt;现；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;第一种方法（推荐）：&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;injected-script&lt;/code&gt;中：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;window&lt;/span&gt;.postMessage({&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;test&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;你好！&#x27;&lt;/span&gt;}, &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;*&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;content script中：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;message&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(e.data);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}, &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;第二种方法：&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;injected-script&lt;/code&gt;中：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; customEvent = &lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.createEvent(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;Event&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;customEvent.initEvent(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;myCustomEvent&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;fireCustomEvent&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  hiddenDiv = &lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;myCustomEventDiv&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  hiddenDiv.innerText = data&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  hiddenDiv.dispatchEvent(customEvent);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;fireCustomEvent(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;你好，我是普通JS！&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content-script.js&lt;/code&gt;中：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; hiddenDiv = &lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;myCustomEventDiv&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(!hiddenDiv) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  hiddenDiv = &lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;div&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  hiddenDiv.style.display = &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;none&#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(hiddenDiv);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;hiddenDiv.addEventListener(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;myCustomEvent&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; eventData = &lt;span class=&quot;code-snippet__built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;myCustomEventDiv&#x27;&lt;/span&gt;).innerText;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;收到自定义事件消息：&#x27;&lt;/span&gt; + eventData);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;&lt;br/&gt;&lt;/h2&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;7.3. 长连接和短连接&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;其实上面已经涉及到了，这里再单独说明一下。Chrome插件中有2种通信方式，一个是短连接（&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.tabs.sendMessage&lt;/code&gt;和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.runtime.sendMessage&lt;/code&gt;），一个是长连接（&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.tabs.connect&lt;/code&gt;和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.runtime.connect&lt;/code&gt;）。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;短连接的话就是挤牙膏一样，我发送一下，你收到了再回复一下，如果对方不回复，你只能重新发，而长连接类似&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;WebSocket&lt;/code&gt;会一直建立连接，双方可以随时互发消息。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;短连接上面已经有代码示例了，这里只讲一下长连接。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;popup.js：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;getCurrentTabId(&lt;span class=&quot;code-snippet__function&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;tabId&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; port = chrome.tabs.connect(tabId, {&lt;span class=&quot;code-snippet__attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;test-connect&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  port.postMessage({&lt;span class=&quot;code-snippet__attr&quot;&gt;question&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;你是谁啊？&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  port.onMessage.addListener(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;msg&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    alert(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;收到消息：&#x27;&lt;/span&gt;+msg.answer);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(msg.answer &amp;amp;&amp;amp; msg.answer.startsWith(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;我是&#x27;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      port.postMessage({&lt;span class=&quot;code-snippet__attr&quot;&gt;question&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;哦，原来是你啊！&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;content-script.js：&lt;span/&gt;&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.runtime.onConnect.addListener(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;port&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(port);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(port.name == &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;test-connect&#x27;&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    port.onMessage.addListener(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;msg&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;收到长连接消息：&#x27;&lt;/span&gt;, msg);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(msg.question == &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;你是谁啊？&#x27;&lt;/span&gt;) port.postMessage({&lt;span class=&quot;code-snippet__attr&quot;&gt;answer&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;我是你爸！&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;&lt;br/&gt;&lt;/h1&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;八、其它补充&lt;/h1&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;8.1. 动态注入或执行JS&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;虽然在&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;background&lt;/code&gt;和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;popup&lt;/code&gt;中无法直接访问页面DOM，但是可以通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.tabs.executeScript&lt;/code&gt;来执行脚本，从而实现访问web页面的DOM（注意，这种方式也不能直接访问页面JS）。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;示例&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;manifest.json&lt;/code&gt;配置：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;动态JS注入演示&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;permissions&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;tabs&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://*/*&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://*/*&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;JS：&lt;/pre&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.tabs.executeScript(tabId, {&lt;span class=&quot;code-snippet__attr&quot;&gt;code&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;document.body.style.backgroundColor=&quot;red&quot;&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.tabs.executeScript(tabId, {&lt;span class=&quot;code-snippet__attr&quot;&gt;file&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;some-script.js&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;8.2. 动态注入CSS&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;示例&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;manifest.json&lt;/code&gt;配置：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;动态CSS注入演示&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;permissions&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;tabs&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://*/*&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://*/*&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ...&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;JS代码：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.tabs.insertCSS(tabId, {&lt;span class=&quot;code-snippet__attr&quot;&gt;code&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;xxx&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.tabs.insertCSS(tabId, {&lt;span class=&quot;code-snippet__attr&quot;&gt;file&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;some-style.css&#x27;&lt;/span&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;8.3. 获取当前窗口ID&lt;/h2&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.windows.getCurrent(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;currentWindow&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;当前窗口ID：&#x27;&lt;/span&gt; + currentWindow.id);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;br/&gt;&lt;/pre&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;8.4. 获取当前标签页ID&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;一般有2种方法：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;getCurrentTabId&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;callback&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  chrome.tabs.query({&lt;span class=&quot;code-snippet__attr&quot;&gt;active&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;currentWindow&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;}, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;tabs&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(callback) callback(tabs.length ? tabs[&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;].id: &lt;span class=&quot;code-snippet__literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;获取当前选项卡id的另一种方法，大部分时候都类似，只有少部分时候会不一样（例如当窗口最小化时）&lt;/pre&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;getCurrentTabId2&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  chrome.windows.getCurrent(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;currentWindow&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    chrome.tabs.query({&lt;span class=&quot;code-snippet__attr&quot;&gt;active&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;windowId&lt;/span&gt;: currentWindow.id}, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;tabs&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(callback) callback(tabs.length ? tabs[&lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;].id: &lt;span class=&quot;code-snippet__literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;br/&gt;&lt;/pre&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;8.5. 本地存储&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;本地存储建议用&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.storage&lt;/code&gt;而不是普通的&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;localStorage&lt;/code&gt;，区别有好几点，个人认为最重要的2点区别是：&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;需要声明&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;storage&lt;/code&gt;权限，有&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.storage.sync&lt;/code&gt;和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.storage.local&lt;/code&gt;2种方式可供选择，使用示例如下：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.storage.sync.get({&lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;red&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;18&lt;/span&gt;}, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;items&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(items.color, items.age);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.storage.sync.set({&lt;span class=&quot;code-snippet__attr&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;blue&#x27;&lt;/span&gt;}, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;保存成功！&#x27;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre/&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;8.6. webRequest&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;通过webRequest系列API可以对HTTP请求进行任性地修改、定制，这里通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;beforeRequest&lt;/code&gt;来简单演示一下它的冰山一角：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;permissions&quot;&lt;/span&gt;:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  [&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;webRequest&quot;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;webRequestBlocking&quot;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;storage&quot;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;http://*/*&quot;&lt;/span&gt;, &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;https://*/*&quot;&lt;/span&gt; &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ],&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;var&lt;/span&gt; showImage;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.storage.sync.get({&lt;span class=&quot;code-snippet__attr&quot;&gt;showImage&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;}, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;items&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  showImage = items.showImage;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;/&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;chrome.webRequest.onBeforeRequest.addListener(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;details&lt;/span&gt; =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(!showImage &amp;amp;&amp;amp; details.type == &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;image&#x27;&lt;/span&gt;) &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; {&lt;span class=&quot;code-snippet__attr&quot;&gt;cancel&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;};&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt;(details.type == &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;media&#x27;&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    chrome.notifications.create(&lt;span class=&quot;code-snippet__literal&quot;&gt;null&lt;/span&gt;, {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;basic&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;iconUrl&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;img/icon.png&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;title&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;检测到音视频&#x27;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__attr&quot;&gt;message&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;音视频地址：&#x27;&lt;/span&gt; + details.url,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}, {&lt;span class=&quot;code-snippet__attr&quot;&gt;urls&lt;/span&gt;: [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&amp;lt;all_urls&amp;gt;&quot;&lt;/span&gt;]}, [&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;blocking&quot;&lt;/span&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;br/&gt;&lt;/pre&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;8.7. 国际化&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;插件根目录新建一个名为&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;_locales&lt;/code&gt;的文件夹，再在下面新建一些语言的文件夹，如&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;en&lt;/code&gt;、&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;zh_CN&lt;/code&gt;、&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;zh_TW&lt;/code&gt;，然后再在每个文件夹放入一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;messages.json&lt;/code&gt;，同时必须在清单文件中设置&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;default_locale&lt;/code&gt;。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;_locales\en\messages.json&lt;/code&gt;内容：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;json&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;pluginDesc&quot;&lt;/span&gt;: {&lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;message&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;A simple chrome extension demo&quot;&lt;/span&gt;},&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;helloWorld&quot;&lt;/span&gt;: {&lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;message&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/pre&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;_locales\zh_CN\messages.json&lt;/code&gt;内容：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;json&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;pluginDesc&quot;&lt;/span&gt;: {&lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;message&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;一个简单的Chrome插件demo&quot;&lt;/span&gt;},&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;helloWorld&quot;&lt;/span&gt;: {&lt;span class=&quot;code-snippet__attr&quot;&gt;&quot;message&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;你好啊，世界！&quot;&lt;/span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/pre&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;在&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;manifest.json&lt;/code&gt;和&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;CSS&lt;/code&gt;文件中通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;__MSG_messagename__&lt;/code&gt;引入，如：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;description&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;__MSG_pluginDesc__&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;default_locale&quot;&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;zh_CN&quot;&lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;JS中则直接&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.i18n.getMessage(&quot;helloWorld&quot;)&lt;/code&gt;。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;测试时，通过给chrome建立一个不同的快捷方式&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;chrome.exe --lang=en&lt;/code&gt;来切换语言，如：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452082&quot; data-ratio=&quot;0.6658767772511849&quot; data-type=&quot;png&quot; data-w=&quot;422&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibicLz8tx3Bf7nrI3j3hr9Hr8ibgpwuFIDKD5vxpMC5iapSrFLxYgsdkseg/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;英文效果：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452085&quot; data-ratio=&quot;0.5040650406504065&quot; data-type=&quot;png&quot; data-w=&quot;492&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib0hlb86ZTmdM46RjZVNgzOwn4ViaibLr18MCZM5wC2hyy1PoGOT9XZwlA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;中文效果：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452083&quot; data-ratio=&quot;0.5029585798816568&quot; data-type=&quot;png&quot; data-w=&quot;507&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibP0ajdGSib1zGV0MjN9qMiaibbo0DP5r6E2VFIhgib1xWNwIZMql7vOASGA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;8.8. API总结&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;比较常用用的一些API系列：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.tabs&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.runtime&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.webRequest&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.window&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.storage&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.contextMenus&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.devtools&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.extension&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;九、经验总结&lt;/h1&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;9.1. 查看已安装插件路径&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;已安装的插件源码路径：&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;C:\Users\用户名\AppData\Local\Google\Chrome\User Data\Default\Extensions&lt;/code&gt;，每一个插件被放在以插件ID为名的文件夹里面，想要学习某个插件的某个功能是如何实现的，看人家的源码是最好的方法了：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452086&quot; data-ratio=&quot;0.34&quot; data-type=&quot;png&quot; data-w=&quot;550&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibH8eFVbAhvgnvFSpBSDXibABibFguMa55icp6S5jKQUjyw95WITLqsk7CQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;如何查看某个插件的ID？进入 chrome://extensions ，然后勾线开发者模式即可看到了。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452084&quot; data-ratio=&quot;0.2876712328767123&quot; data-type=&quot;png&quot; data-w=&quot;730&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib0FgUoUtUe2eHjZbdUnxYbgl8et3ibt3BkFr9j1zEI4YZSB7v0Y66hFA/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;9.2. 特别注意background的报错&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;很多时候你发现你的代码会莫名其妙的失效，找来找去又找不到原因，这时打开background的控制台才发现原来某个地方写错了导致代码没生效，正式由于background报错的隐蔽性(需要主动打开对应的控制台才能看到错误)，所以特别注意这点。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;9.3. 如何让popup页面不关闭&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;在对popup页面审查元素的时候popup会被强制打开无法关闭，只有控制台关闭了才可以关闭popup，原因很简单：如果popup关闭了控制台就没用了。这种方法在某些情况下很实用！&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;9.4. 不支持内联JavaScript的执行&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;也就是不支持将js直接写在html中，比如：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&amp;lt;input id=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;btn&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__built_in&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;button&quot;&lt;/span&gt; value=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;收藏&quot;&lt;/span&gt; onclick=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;test()&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;报错如下：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Refused to &lt;span class=&quot;code-snippet__keyword&quot;&gt;execute&lt;/span&gt; inline &lt;span class=&quot;code-snippet__keyword&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;handler&lt;/span&gt; because it violates the &lt;span class=&quot;code-snippet__keyword&quot;&gt;following&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;Security&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;Policy&lt;/span&gt; directive: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;script-src &#x27;self&#x27; blob: filesystem: chrome-extension-resource:&quot;&lt;/span&gt;. Either the &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;unsafe-inline&#x27;&lt;/span&gt; keyword, a &lt;span class=&quot;code-snippet__keyword&quot;&gt;hash&lt;/span&gt; (&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;sha256-...&#x27;&lt;/span&gt;), &lt;span class=&quot;code-snippet__keyword&quot;&gt;or&lt;/span&gt; a nonce (&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;nonce-...&#x27;&lt;/span&gt;) &lt;span class=&quot;code-snippet__keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;enable&lt;/span&gt; inline execution.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/pre&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;解决方法就是用JS绑定事件：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;$(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;#btn&#x27;&lt;/span&gt;).on(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;click&#x27;&lt;/span&gt;, &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;/&gt;)&lt;/span&gt;{alert(&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;测试&#x27;&lt;/span&gt;)});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;另外，对于A标签，这样写&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;href=&quot;javascript:;&quot;&lt;/code&gt;然后用JS绑定事件虽然控制台会报错，但是不受影响，当然强迫症患者受不了的话只能写成&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;href=&quot;#&quot;&lt;/code&gt;了。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;如果这样写：&lt;/p&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;&gt;&lt;span data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;xml&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;get_secret&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;请求secret&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;报错如下：&lt;/p&gt;&lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt;&lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;sql&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;Refused to &lt;span class=&quot;code-snippet__keyword&quot;&gt;execute&lt;/span&gt; JavaScript &lt;span class=&quot;code-snippet__keyword&quot;&gt;URL&lt;/span&gt; because it violates the &lt;span class=&quot;code-snippet__keyword&quot;&gt;following&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;Security&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;Policy&lt;/span&gt; directive: &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;script-src &#x27;self&#x27; blob: filesystem: chrome-extension-resource:&quot;&lt;/span&gt;. Either the &lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;unsafe-inline&#x27;&lt;/span&gt; keyword, a &lt;span class=&quot;code-snippet__keyword&quot;&gt;hash&lt;/span&gt; (&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;sha256-...&#x27;&lt;/span&gt;), &lt;span class=&quot;code-snippet__keyword&quot;&gt;or&lt;/span&gt; a nonce (&lt;span class=&quot;code-snippet__string&quot;&gt;&#x27;nonce-...&#x27;&lt;/span&gt;) &lt;span class=&quot;code-snippet__keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;enable&lt;/span&gt; inline execution.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/section&gt;&lt;pre&gt;&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:24}&quot;/&gt;&lt;br/&gt;&lt;/pre&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;9.5. 注入CSS的时候必须小心&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;由于通过&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;content_scripts&lt;/code&gt;注入的CSS优先级非常高，几乎仅次于浏览器默认样式，稍不注意可能就会影响一些网站的展示效果，所以尽量不要写一些影响全局的样式。&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;之所以强调这个，是因为这个带来的问题非常隐蔽，不太容易找到，可能你正在写某个网页，昨天样式还是好好的，怎么今天就突然不行了？然后你辛辛苦苦找来找去，找了半天才发现竟然是因为插件里面的一个样式影响的！&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452089&quot; data-ratio=&quot;1.1706586826347305&quot; data-type=&quot;png&quot; data-w=&quot;334&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib4mFR9f70gGdPHHv1uPrRh0pbdv2JjE56TQKkIibolET2MOdkLbaI4fQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;十、打包与发布&lt;/h1&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;打包的话直接在插件管理页有一个打包按钮：&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452087&quot; data-ratio=&quot;0.3333333333333333&quot; data-type=&quot;png&quot; data-w=&quot;573&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibmmdT1nFGvAHyCOYv0EuXUPjBicxCeypFjxUF3bbIBpsppLiciaRY3kLwQ/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;然后会生成一个&lt;code data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:18}&quot;&gt;.crx&lt;/code&gt;文件，要发布到Google应用商店的话需要先登录你的Google账号，然后花5个$注册为开发者，本人太穷，就懒得亲自验证了，有发布需求的自己去整吧。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;307452091&quot; data-ratio=&quot;0.3132780082987552&quot; data-type=&quot;png&quot; data-w=&quot;482&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqibRg3I1OMqMHZBUThgY8h4tfyRoGljcD1OJ9XXMPNRHN3IpGicOlibFicZw/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;十一、参考&lt;/h1&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;11.1. 官方资料&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;推荐查看官方文档，虽然是英文，但是全且新，国内的中文资料都比较旧（注意以下全部需要FQ）：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Chrome插件官方文档主页&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Chrome插件官方示例&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;manifest清单文件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;permissions权限&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;chrome.xxx.api文档&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;模糊匹配规则语法详解&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:21,&amp;quot;lineHeight&amp;quot;:31.5}&quot;&gt;11.2. 第三方资料&lt;/h2&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;部分中文资料，不是特别推荐：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;360安全浏览器开发文档&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;360极速浏览器Chrome扩展开发文档&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;span&gt;Chrome扩展开发极客系列博客&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;h1 data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:28,&amp;quot;lineHeight&amp;quot;:42}&quot;&gt;十二、附图&lt;/h1&gt;&lt;p data-kx-storage=&quot;{&amp;quot;fontSize&amp;quot;:16,&amp;quot;lineHeight&amp;quot;:28.8}&quot;&gt;附图：Chrome高清png格式logo：&lt;/p&gt;&lt;p&gt;&lt;img data-backh=&quot;512&quot; data-backw=&quot;512&quot; data-fileid=&quot;307452088&quot; data-ratio=&quot;1&quot; data-type=&quot;png&quot; data-w=&quot;512&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9ShWNKgW8g3KQhStVzKOjqib7ibJnCO4f7Ky5UWyeGibbORkzO0Nn2WD4rCPj0kN0Dbb2t84rC7TwM1Q/640?wx_fmt=png&quot;/&gt;&lt;/p&gt;&lt;section&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span&gt;作者：小茗同学&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;来源：https://www.cnblogs.com/liuxianan/p/chrome-plugin-develop.html&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;hr/&gt;&lt;section&gt;&lt;section&gt;&lt;span&gt;【版权声明】本着分享学习的目的，本公众号有部分文章来源于网络，版权归原作者所有！若您觉得侵权且要求删除，请您留言或者联系公众号小编，谢谢！&lt;/span&gt;&lt;/section&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;回复公众号【&lt;/span&gt;&lt;span&gt;资料&lt;/span&gt;&lt;span&gt;】获得干货资料集锦：技术ppt、IT大会资料、架构、分布式资料等。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/section&gt;&lt;section&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;推荐好文&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;1、&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzA5NTUzNTA2Mw==&amp;amp;mid=2454933881&amp;amp;idx=1&amp;amp;sn=4f2bdecf4596d24559ebc519363e6639&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;互联网Code Review最佳实践分享&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;互联网Code Review最佳实践分享&lt;/strong&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;2、&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5NTUzNTA2Mw==&amp;amp;mid=2454932968&amp;amp;idx=1&amp;amp;sn=f85707232789cbb41c2bebffcb67507b&amp;amp;chksm=871a0750b06d8e467e49858d7c1d64604a84d1316324e30976071fd30347813d490ef4e175b5&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;dubbo面试题！会这些，说明你看懂了dubbo源码&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;dubbo面试题！会这些，说明你看懂了dubbo源码&lt;/strong&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;3、&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5NTUzNTA2Mw==&amp;amp;mid=2454933508&amp;amp;idx=1&amp;amp;sn=f993f90fd83c0eca8cd1b15a9b6db017&amp;amp;chksm=871a1abcb06d93aa36ebe2ff761193030d3f886f5b6ee894bab49eaccbc0cf30986d078e8e66&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Kafka面试题！掌握它才说明你真正懂Kafka&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;Kafka面试题！掌握它才说明你真正懂Kafka&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;4、&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5NTUzNTA2Mw==&amp;amp;mid=2454932288&amp;amp;idx=1&amp;amp;sn=149a790e4d3d6b2722ccdb677e54a666&amp;amp;chksm=871a01f8b06d88eeac9200e146c3d3de70351b2deb4e85339a037a6f21c06d8a7b0b299880eb&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Netty 5.0为啥被舍弃？原因竟然是...&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;Netty 5.0为啥被舍弃？原因竟然是...&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;span&gt;&lt;br/&gt;5、&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://mp.weixin.qq.com/s?__biz=MzA5NTUzNTA2Mw==&amp;amp;mid=2454933647&amp;amp;idx=1&amp;amp;sn=7021d7c3d4a02de5178c86b7af85be52&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;中台之上——业务架构系列【汇总】&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;中台之上——业务架构系列【汇总】&lt;/strong&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;6、&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5NTUzNTA2Mw==&amp;amp;mid=2454932251&amp;amp;idx=1&amp;amp;sn=e69867ba84a8307a61ab9f2b3ceba32a&amp;amp;chksm=871a01a3b06d88b55e18267f4b243f4ce3647e4d31979d6ce7d6f34676837be405427e82df5f&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;必备瑞士军刀IDEA插件，你使用了哪些&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;必备瑞士军刀IDEA插件，你使用了哪些&lt;/strong&gt;&lt;/a&gt;&lt;br/&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;7、&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5NTUzNTA2Mw==&amp;amp;mid=2454934195&amp;amp;idx=1&amp;amp;sn=62869742d0cdebcef26a0732c9bb03ec&amp;amp;chksm=871a180bb06d911d4da8ab7c3b7699f033d0f0ede1d2eab5263e273ad08c8d1837facd809ae9&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;线上热更新代码只需3步 Arthas实战&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;线上热更新代码只需3步 Arthas实战&lt;/strong&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;8、&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5NTUzNTA2Mw==&amp;amp;mid=2454934176&amp;amp;idx=1&amp;amp;sn=b94dd05ecff649c73a89ef191208c0f0&amp;amp;chksm=871a1818b06d910ecdee7d912abb31b3b6bb4efe7cfbc6241b517193f1c4523c075188c724c2&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;Eureka源码剖析之七：架构&amp;amp;面试题【总结】&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;Eureka源码剖析之七：架构&amp;amp;面试题【总结】&lt;/strong&gt;&lt;/a&gt;&lt;/section&gt;&lt;section&gt;&lt;strong&gt;&lt;span&gt;9、&lt;/span&gt;&lt;/strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5NTUzNTA2Mw==&amp;amp;mid=2454933958&amp;amp;idx=1&amp;amp;sn=fcb60a3e46cdff2684fef0e864eee94b&amp;amp;chksm=871a1b7eb06d92680136868aef9a35d59e6c071dda30e67bad75c9c44a0fccba2229d7536ce6&amp;amp;scene=21#wechat_redirect&quot; textvalue=&quot;互联网工程师应该用这种姿势打印日志&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;strong&gt;互联网工程师应该用这种姿势打印日志&lt;/strong&gt;&lt;/a&gt;&lt;/section&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzA5NTUzNTA2Mw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/5hLBZVCyG9RPAOn00JmfPMqzxY3DFW4qibUvrwzZYkCUoMj3vxqw5qIyyry0ciaSYRzb4y22XzQ60erlZqdYw2rg/0?wx_fmt=png&quot; data-nickname=&quot;搬运工来架构&quot; data-alias=&quot;java-backend&quot; data-signature=&quot;关注Java领域、后端、微服务、架构、分布式、实战经验等。分享技术干货！&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;/section&gt;
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>869cdd28e7a3e0488213cf34b968fd2d</guid>
<title>用手写一个工具的过程讲清楚 Go 反射的使用方法和应用场景</title>
<link>https://toutiao.io/k/z3i5kuu</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot; data-mpa-powered-by=&quot;yiban.io&quot;&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;今天来聊一个平时用的不多，但是很多框架或者基础库会用到的语言特性--反射，反射并不是&lt;code&gt;Go&lt;/code&gt;语言独有的能力，其他编程语言都有。这篇文章的目标是简单地给大家梳理一下反射的应用场景和使用方法。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们平时写代码能接触到与反射联系比较紧密的一个东西是结构体字段的标签，这个我准备放在后面的文章再梳理。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我准备通过用反射搞一个通用的&lt;code&gt;SQL&lt;/code&gt;构造器的例子，带大家掌握反射这个知识点。这个是看了国外一个博主写的例子，觉得思路很好，我又对其进行了改进，让构造器的实现更丰富了些。&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;本文的思路参考自：https://golangbot.com/reflection/ ，本文内容并非只是对原文的简单翻译，具体看下面的内容吧~！&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;什么是反射&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;反射是程序在运行时检查其变量和值并找到它们类型的能力。听起来比较笼统，接下来我通过文章的例子一步步带你认识反射。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;为什么需要反射&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;当学习反射的时候，每个人首先会想到的问题都是 “为什么我们要在运行时检查变量的类型呢，程序里的变量在定义的时候我们不都已经给他们指定好类型了吗？” 确实是这样的，但也并非总是如此，看到这你可能心里会想，大哥，你在说什么呢，em... 还是先写一个简单的程序，解释一下。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (  &lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {  &lt;br/&gt;    i := &lt;span&gt;10&lt;/span&gt;&lt;br/&gt;    fmt.Printf(&lt;span&gt;&quot;%d %T&quot;&lt;/span&gt;, i, i)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在上面的程序里， 变量&lt;code&gt;i&lt;/code&gt;的类型在编译时是已知的，我们在下一行打印了它的值和类型。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在让我们理解一下 ”在运行时知道变量的类型的必要“。假设我们要编写一个简单的函数，它将一个结构体作为参数，并使用这个参数创建一个&lt;code&gt;SQL&lt;/code&gt;插入语句。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;考虑一下下面这个程序&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (  &lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; order &lt;span&gt;struct&lt;/span&gt; {  &lt;br/&gt;    ordId      &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;    customerId &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {  &lt;br/&gt;    o := order{&lt;br/&gt;        ordId:      &lt;span&gt;1234&lt;/span&gt;,&lt;br/&gt;        customerId: &lt;span&gt;567&lt;/span&gt;,&lt;br/&gt;    }&lt;br/&gt;    fmt.Println(o)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们需要写一个接收上面定义的结构体&lt;code&gt;o&lt;/code&gt;作为参数，返回类似&lt;code&gt;INSERT INTO order VALUES(1234, 567)&lt;/code&gt;这样的&lt;code&gt;SQL&lt;/code&gt;语句。这个函数定义写来很容易，比如像下面这样。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (  &lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; order &lt;span&gt;struct&lt;/span&gt; {  &lt;br/&gt;    ordId      &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;    customerId &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;createQuery&lt;/span&gt;&lt;span&gt;(o order)&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;/span&gt; {  &lt;br/&gt;    i := fmt.Sprintf(&lt;span&gt;&quot;INSERT INTO order VALUES(%d, %d)&quot;&lt;/span&gt;, o.ordId, o.customerId)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; i&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {  &lt;br/&gt;    o := order{&lt;br/&gt;        ordId:      &lt;span&gt;1234&lt;/span&gt;,&lt;br/&gt;        customerId: &lt;span&gt;567&lt;/span&gt;,&lt;br/&gt;    }&lt;br/&gt;    fmt.Println(createQuery(o))&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面例子的&lt;code&gt;createQuery&lt;/code&gt;使用参数&lt;code&gt;o&lt;/code&gt; 的&lt;code&gt;ordId&lt;/code&gt;和&lt;code&gt;customerId&lt;/code&gt;字段创建SQL。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在让我们将我们的&lt;code&gt;SQL&lt;/code&gt;创建函数定义地更抽象些，下面还是用程序附带说明举一个案例，比如我们想泛化我们的&lt;code&gt;SQL&lt;/code&gt;创建函数使其适用于任何结构体。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; order &lt;span&gt;struct&lt;/span&gt; {  &lt;br/&gt;    ordId      &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;    customerId &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; employee &lt;span&gt;struct&lt;/span&gt; {  &lt;br/&gt;    name &lt;span&gt;string&lt;/span&gt;&lt;br/&gt;    id &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;    address &lt;span&gt;string&lt;/span&gt;&lt;br/&gt;    salary &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;    country &lt;span&gt;string&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;createQuery&lt;/span&gt;&lt;span&gt;(q &lt;span&gt;interface&lt;/span&gt;{})&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;/span&gt; {  &lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在我们的目标是，改造&lt;code&gt;createQuery&lt;/code&gt;函数，让它能接受任何结构作为参数并基于结构字段创建&lt;code&gt;INSERT&lt;/code&gt; 语句。比如如果传给&lt;code&gt;createQuery&lt;/code&gt;的参数不再是&lt;code&gt;order&lt;/code&gt;类型的结构体，而是&lt;code&gt;employee&lt;/code&gt;类型的结构体时&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt; e := employee {&lt;br/&gt;        name: &lt;span&gt;&quot;Naveen&quot;&lt;/span&gt;,&lt;br/&gt;        id: &lt;span&gt;565&lt;/span&gt;,&lt;br/&gt;        address: &lt;span&gt;&quot;Science Park Road, Singapore&quot;&lt;/span&gt;,&lt;br/&gt;        salary: &lt;span&gt;90000&lt;/span&gt;,&lt;br/&gt;        country: &lt;span&gt;&quot;Singapore&quot;&lt;/span&gt;,&lt;br/&gt;    }&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;那它应该返回的&lt;code&gt;INSERT&lt;/code&gt;语句应该是&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;INSERT INTO employee (name, id, address, salary, country) &lt;br/&gt;VALUES(&lt;span&gt;&quot;Naveen&quot;&lt;/span&gt;, &lt;span&gt;565&lt;/span&gt;, &lt;span&gt;&quot;Science Park Road, Singapore&quot;&lt;/span&gt;, &lt;span&gt;90000&lt;/span&gt;, &lt;span&gt;&quot;Singapore&quot;&lt;/span&gt;)  &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;由于&lt;code&gt;createQuery&lt;/code&gt; 函数要适用于任何结构体，因此它需要一个 &lt;code&gt;interface{}&lt;/code&gt;类型的参数。为了说明问题，简单起见，我们假定&lt;code&gt;createQuery&lt;/code&gt;函数只处理包含&lt;code&gt;string&lt;/code&gt; 和 &lt;code&gt;int&lt;/code&gt; 类型字段的结构体。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;编写这个&lt;code&gt;createQuery&lt;/code&gt;函数的唯一方法是检查在运行时传递给它的参数的类型，找到它的字段，然后创建SQL。这里就是需要反射发挥用的地方啦。在后续步骤中，我们将学习如何使用&lt;code&gt;Go&lt;/code&gt;语言的反射包来实现这一点。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;Go语言的反射包&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Go&lt;/code&gt;语言自带的&lt;code&gt;reflect&lt;/code&gt;包实现了在运行时进行反射的功能，这个包可以帮助识别一个&lt;code&gt;interface{}&lt;/code&gt;类型变量其底层的具体类型和值。我们的&lt;code&gt;createQuery&lt;/code&gt;函数接收到一个&lt;code&gt;interface{}&lt;/code&gt;类型的实参后，需要根据这个实参的底层类型和值去创建并返回&lt;code&gt;INSERT&lt;/code&gt;语句，这正是反射包的作用所在。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在开始编写我们的通用&lt;code&gt;SQL&lt;/code&gt;生成器函数之前，我们需要先了解一下&lt;code&gt;reflect&lt;/code&gt;包中我们会用到的几个类型和方法，接下来我们先逐个学习一下。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;reflect.Type 和 reflect.Value&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;经过反射后&lt;code&gt;interface{}&lt;/code&gt;类型的变量的底层具体类型由&lt;code&gt;reflect.Type&lt;/code&gt;表示，底层值由&lt;code&gt;reflect.Value&lt;/code&gt;表示。&lt;code&gt;reflect&lt;/code&gt;包里有两个函数&lt;code&gt;reflect.TypeOf()&lt;/code&gt; 和&lt;code&gt;reflect.ValueOf()&lt;/code&gt; 分别能将&lt;code&gt;interface{}&lt;/code&gt;类型的变量转换为&lt;code&gt;reflect.Type&lt;/code&gt;和&lt;code&gt;reflect.Value&lt;/code&gt;。这两种类型是创建我们的&lt;code&gt;SQL&lt;/code&gt;生成器函数的基础。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;让我们写一个简单的例子来理解这两种类型。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (  &lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;reflect&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; order &lt;span&gt;struct&lt;/span&gt; {  &lt;br/&gt;    ordId      &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;    customerId &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;createQuery&lt;/span&gt;&lt;span&gt;(q &lt;span&gt;interface&lt;/span&gt;{})&lt;/span&gt;&lt;/span&gt; {  &lt;br/&gt;    t := reflect.TypeOf(q)&lt;br/&gt;    v := reflect.ValueOf(q)&lt;br/&gt;    fmt.Println(&lt;span&gt;&quot;Type &quot;&lt;/span&gt;, t)&lt;br/&gt;    fmt.Println(&lt;span&gt;&quot;Value &quot;&lt;/span&gt;, v)&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {  &lt;br/&gt;    o := order{&lt;br/&gt;        ordId:      &lt;span&gt;456&lt;/span&gt;,&lt;br/&gt;        customerId: &lt;span&gt;56&lt;/span&gt;,&lt;br/&gt;    }&lt;br/&gt;    createQuery(o)&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的程序会输出：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Type  main.order  &lt;br/&gt;Value  {&lt;span&gt;456&lt;/span&gt; &lt;span&gt;56&lt;/span&gt;} &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的程序里&lt;code&gt;createQuery&lt;/code&gt;函数接收一个&lt;code&gt;interface{}&lt;/code&gt;类型的实参，然后把实参传给了&lt;code&gt;reflect.Typeof&lt;/code&gt;和&lt;code&gt;reflect.Valueof&lt;/code&gt; 函数的调用。从输出，我们可以看到程序输出了&lt;code&gt;interface{}&lt;/code&gt;类型实参对应的底层具体类型和值。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;Go语言反射的三法则&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这里插播一下反射的三法则，他们是：&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;从接口值可以反射出反射对象。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;从反射对象可反射出接口值。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;要修改反射对象，其值必须可设置。&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;反射的第一条法则是，我们能够吧&lt;code&gt;Go&lt;/code&gt;中的接口类型变量转换成反射对象，上面提到的&lt;code&gt;reflect.TypeOf&lt;/code&gt;和 &lt;code&gt;reflect.ValueOf&lt;/code&gt; 就是完成的这种转换。第二条指的是我们能把反射类型的变量再转换回到接口类型，最后一条则是与反射值是否可以被更改有关。三法则详细的说明可以去看看德莱文大神写的文章 &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzU5NTAzNjc3Mg==&amp;amp;mid=2247483962&amp;amp;idx=1&amp;amp;sn=e13df5c5e016215302205f5ec8fbb857&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;Go反射的实现原理&lt;/a&gt;，文章开头就有对三法则说明的图解，再次膜拜。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面我们接着继续了解完成我们的SQL生成器需要的反射知识。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;reflect.Kind&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;reflect&lt;/code&gt;包中还有一个非常重要的类型，&lt;code&gt;reflect.Kind&lt;/code&gt;。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;reflect.Kind&lt;/code&gt;和&lt;code&gt;reflect.Type&lt;/code&gt;类型可能看起来很相似，从命名上也是，Kind和Type在英文的一些Phrase是可以互转使用的，不过在反射这块它们有挺大区别，从下面的程序中可以清楚地看到。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (  &lt;br/&gt;    &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;reflect&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; order &lt;span&gt;struct&lt;/span&gt; {  &lt;br/&gt;    ordId      &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;    customerId &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;createQuery&lt;/span&gt;&lt;span&gt;(q &lt;span&gt;interface&lt;/span&gt;{})&lt;/span&gt;&lt;/span&gt; {  &lt;br/&gt;    t := reflect.TypeOf(q)&lt;br/&gt;    k := t.Kind()&lt;br/&gt;    fmt.Println(&lt;span&gt;&quot;Type &quot;&lt;/span&gt;, t)&lt;br/&gt;    fmt.Println(&lt;span&gt;&quot;Kind &quot;&lt;/span&gt;, k)&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {  &lt;br/&gt;    o := order{&lt;br/&gt;        ordId:      &lt;span&gt;456&lt;/span&gt;,&lt;br/&gt;        customerId: &lt;span&gt;56&lt;/span&gt;,&lt;br/&gt;    }&lt;br/&gt;    createQuery(o)&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的程序会输出&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;Type  main.order  &lt;br/&gt;Kind  struct  &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过输出让我们清楚了两者之间的区别。&lt;code&gt;reflect.Type&lt;/code&gt; 表示接口的实际类型，即本例中&lt;code&gt;main.order&lt;/code&gt; 而&lt;code&gt;Kind&lt;/code&gt;表示类型的所属的种类，即&lt;code&gt;main.order&lt;/code&gt;是一个「struct」类型，类似的类型&lt;code&gt;map[string]string&lt;/code&gt;的Kind就该是「map」。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;反射获取结构体字段的方法&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们可以通过&lt;code&gt;reflect.StructField&lt;/code&gt;类型的方法来获取结构体下字段的类型属性。&lt;code&gt;reflect.StructField&lt;/code&gt;可以通过&lt;code&gt;reflect.Type&lt;/code&gt;提供的下面两种方式拿到。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;// 获取一个结构体内的字段数量&lt;/span&gt;&lt;br/&gt;NumField() &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;&lt;span&gt;// 根据 index 获取结构体内字段的类型对象&lt;/span&gt;&lt;br/&gt;Field(i &lt;span&gt;int&lt;/span&gt;) StructField&lt;br/&gt;&lt;span&gt;// 根据字段名获取结构体内字段的类型对象&lt;/span&gt;&lt;br/&gt;FieldByName(name &lt;span&gt;string&lt;/span&gt;) (StructField, &lt;span&gt;bool&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;reflect.structField&lt;/code&gt;是一个struct类型，通过它我们又能在反射里知道字段的基本类型、Tag、是否已导出等属性。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;type&lt;/span&gt; StructField &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt; Name &lt;span&gt;string&lt;/span&gt;&lt;br/&gt; Type      Type      &lt;span&gt;// field type&lt;/span&gt;&lt;br/&gt; Tag       StructTag &lt;span&gt;// field tag string&lt;/span&gt;&lt;br/&gt;  ......&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;与&lt;code&gt;reflect.Type&lt;/code&gt;提供的获取&lt;code&gt;Field&lt;/code&gt;信息的方法相对应，&lt;code&gt;reflect.Value&lt;/code&gt;也提供了获取&lt;code&gt;Field&lt;/code&gt;值的方法。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;func (v Value) Field(i int) Value {&lt;br/&gt;...&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;func (v Value) FieldByName(name string) Value {&lt;br/&gt;...&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这块需要注意，不然容易迷惑。下面我们尝试一下通过反射拿到&lt;code&gt;order&lt;/code&gt;结构体类型的字段名和值&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt; &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&quot;reflect&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; order &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt; ordId      &lt;span&gt;int&lt;/span&gt;&lt;br/&gt; customerId &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;createQuery&lt;/span&gt;&lt;span&gt;(q &lt;span&gt;interface&lt;/span&gt;{})&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; t := reflect.TypeOf(q)&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; t.Kind() != reflect.Struct {&lt;br/&gt;  &lt;span&gt;panic&lt;/span&gt;(&lt;span&gt;&quot;unsupported argument type!&quot;&lt;/span&gt;)&lt;br/&gt; }&lt;br/&gt; v := reflect.ValueOf(q)&lt;br/&gt; &lt;span&gt;for&lt;/span&gt; i:=&lt;span&gt;0&lt;/span&gt;; i &amp;lt; t.NumField(); i++ {&lt;br/&gt;  fmt.Println(&lt;span&gt;&quot;FieldName:&quot;&lt;/span&gt;, t.Field(i).Name, &lt;span&gt;&quot;FiledType:&quot;&lt;/span&gt;, t.Field(i).Type,&lt;br/&gt;   &lt;span&gt;&quot;FiledValue:&quot;&lt;/span&gt;, v.Field(i))&lt;br/&gt; }&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; o := order{&lt;br/&gt;  ordId:      &lt;span&gt;456&lt;/span&gt;,&lt;br/&gt;  customerId: &lt;span&gt;56&lt;/span&gt;,&lt;br/&gt; }&lt;br/&gt; createQuery(o)&lt;br/&gt;&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的程序会输出：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;FieldName: ordId FiledType: int FiledValue: 456&lt;br/&gt;FieldName: customerId FiledType: int FiledValue: 56&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;除了获取结构体字段名称和值之外，还能获取结构体字段的Tag，这个放在后面的文章我再总结吧，不然篇幅就太长了。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span/&gt;&lt;span&gt;reflect.Value转换成实际值&lt;/span&gt;&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;现在离完成我们的SQL生成器还差最后一步，即还需要把&lt;code&gt;reflect.Value&lt;/code&gt;转换成实际类型的值，&lt;code&gt;reflect.Value&lt;/code&gt;实现了一系列&lt;code&gt;Int()&lt;/code&gt;, &lt;code&gt;String()&lt;/code&gt;，&lt;code&gt;Float()&lt;/code&gt;这样的方法来完成其到实际类型值的转换。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;用反射搞一个SQL生成器&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面我们已经了解完写这个SQL生成器函数前所有的必备知识点啦，接下来就把他们串起来，加工完成&lt;code&gt;createQuery&lt;/code&gt;函数。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这个SQL生成器完整的实现和测试代码如下：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;package&lt;/span&gt; main&lt;br/&gt;&lt;br/&gt;&lt;span&gt;import&lt;/span&gt; (&lt;br/&gt; &lt;span&gt;&quot;fmt&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;&quot;reflect&quot;&lt;/span&gt;&lt;br/&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; order &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt; ordId      &lt;span&gt;int&lt;/span&gt;&lt;br/&gt; customerId &lt;span&gt;int&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;type&lt;/span&gt; employee &lt;span&gt;struct&lt;/span&gt; {&lt;br/&gt; name    &lt;span&gt;string&lt;/span&gt;&lt;br/&gt; id      &lt;span&gt;int&lt;/span&gt;&lt;br/&gt; address &lt;span&gt;string&lt;/span&gt;&lt;br/&gt; salary  &lt;span&gt;int&lt;/span&gt;&lt;br/&gt; country &lt;span&gt;string&lt;/span&gt;&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;createQuery&lt;/span&gt;&lt;span&gt;(q &lt;span&gt;interface&lt;/span&gt;{})&lt;/span&gt; &lt;span&gt;string&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; t := reflect.TypeOf(q)&lt;br/&gt; v := reflect.ValueOf(q)&lt;br/&gt; &lt;span&gt;if&lt;/span&gt; v.Kind() != reflect.Struct {&lt;br/&gt;  &lt;span&gt;panic&lt;/span&gt;(&lt;span&gt;&quot;unsupported argument type!&quot;&lt;/span&gt;)&lt;br/&gt; }&lt;br/&gt; tableName := t.Name() &lt;span&gt;// 通过结构体类型提取出SQL的表名&lt;/span&gt;&lt;br/&gt; sql := fmt.Sprintf(&lt;span&gt;&quot;INSERT INTO %s &quot;&lt;/span&gt;, tableName)&lt;br/&gt; columns := &lt;span&gt;&quot;(&quot;&lt;/span&gt;&lt;br/&gt; values := &lt;span&gt;&quot;VALUES (&quot;&lt;/span&gt;&lt;br/&gt; &lt;span&gt;for&lt;/span&gt; i := &lt;span&gt;0&lt;/span&gt;; i &amp;lt; v.NumField(); i++ {&lt;br/&gt;  &lt;span&gt;// 注意reflect.Value 也实现了NumField,Kind这些方法&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;// 这里的v.Field(i).Kind()等价于t.Field(i).Type.Kind()&lt;/span&gt;&lt;br/&gt;  &lt;span&gt;switch&lt;/span&gt; v.Field(i).Kind() {&lt;br/&gt;  &lt;span&gt;case&lt;/span&gt; reflect.Int:&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; i == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;    columns += fmt.Sprintf(&lt;span&gt;&quot;%s&quot;&lt;/span&gt;, t.Field(i).Name)&lt;br/&gt;    values += fmt.Sprintf(&lt;span&gt;&quot;%d&quot;&lt;/span&gt;, v.Field(i).Int())&lt;br/&gt;   } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;    columns += fmt.Sprintf(&lt;span&gt;&quot;, %s&quot;&lt;/span&gt;, t.Field(i).Name)&lt;br/&gt;    values += fmt.Sprintf(&lt;span&gt;&quot;, %d&quot;&lt;/span&gt;, v.Field(i).Int())&lt;br/&gt;   }&lt;br/&gt;  &lt;span&gt;case&lt;/span&gt; reflect.String:&lt;br/&gt;   &lt;span&gt;if&lt;/span&gt; i == &lt;span&gt;0&lt;/span&gt; {&lt;br/&gt;    columns += fmt.Sprintf(&lt;span&gt;&quot;%s&quot;&lt;/span&gt;, t.Field(i).Name)&lt;br/&gt;    values += fmt.Sprintf(&lt;span&gt;&quot;&#x27;%s&#x27;&quot;&lt;/span&gt;, v.Field(i).String())&lt;br/&gt;   } &lt;span&gt;else&lt;/span&gt; {&lt;br/&gt;    columns += fmt.Sprintf(&lt;span&gt;&quot;, %s&quot;&lt;/span&gt;, t.Field(i).Name)&lt;br/&gt;    values += fmt.Sprintf(&lt;span&gt;&quot;, &#x27;%s&#x27;&quot;&lt;/span&gt;, v.Field(i).String())&lt;br/&gt;   }&lt;br/&gt;  }&lt;br/&gt; }&lt;br/&gt; columns += &lt;span&gt;&quot;); &quot;&lt;/span&gt;&lt;br/&gt; values += &lt;span&gt;&quot;); &quot;&lt;/span&gt;&lt;br/&gt; sql += columns + values&lt;br/&gt; fmt.Println(sql)&lt;br/&gt; &lt;span&gt;return&lt;/span&gt; sql&lt;br/&gt;}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;&lt;span&gt;func&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; {&lt;br/&gt; o := order{&lt;br/&gt;  ordId:      &lt;span&gt;456&lt;/span&gt;,&lt;br/&gt;  customerId: &lt;span&gt;56&lt;/span&gt;,&lt;br/&gt; }&lt;br/&gt; createQuery(o)&lt;br/&gt;&lt;br/&gt; e := employee{&lt;br/&gt;  name:    &lt;span&gt;&quot;Naveen&quot;&lt;/span&gt;,&lt;br/&gt;  id:      &lt;span&gt;565&lt;/span&gt;,&lt;br/&gt;  address: &lt;span&gt;&quot;Coimbatore&quot;&lt;/span&gt;,&lt;br/&gt;  salary:  &lt;span&gt;90000&lt;/span&gt;,&lt;br/&gt;  country: &lt;span&gt;&quot;India&quot;&lt;/span&gt;,&lt;br/&gt; }&lt;br/&gt; createQuery(e)&lt;br/&gt;}&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;同学们可以把代码拿到本地运行一下，上面的例子会根据传递给函数不同的结构体实参，输出对应的标准&lt;code&gt;SQL&lt;/code&gt;插入语句&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;INSERT INTO order (ordId, customerId); VALUES (&lt;span&gt;456&lt;/span&gt;, &lt;span&gt;56&lt;/span&gt;); &lt;br/&gt;INSERT INTO employee (name, id, address, salary, country); VALUES (&lt;span&gt;&#x27;Naveen&#x27;&lt;/span&gt;, &lt;span&gt;565&lt;/span&gt;, &lt;span&gt;&#x27;Coimbatore&#x27;&lt;/span&gt;, &lt;span&gt;90000&lt;/span&gt;, &lt;span&gt;&#x27;India&#x27;&lt;/span&gt;); &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;span&gt;总结&lt;/span&gt;&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;这篇文章通过利用反射完成一个实际应用来教会大家&lt;code&gt;Go&lt;/code&gt;语言反射的基本使用方法，虽然反射看起来挺强大，但使用反射编写清晰且可维护的代码非常困难，应尽可能避免，仅在绝对必要时才使用。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我的看法是如果是要写业务代码，根本不需要使用反射，如果要写类似&lt;code&gt;encoding/json&lt;/code&gt;，&lt;code&gt;gorm&lt;/code&gt;这些样的库倒是可以利用反射的强大功能简化库使用者的编码难度。&lt;/p&gt;&lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt;&lt;mpprofile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzUzNTY5MzU2MA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/z4pQ0O5h0f4pGhLz2xEbRFHnAQon2QLYgbBibCJo1ibJHesLWshPJeRibateRtAqkaf6BgjlbhYiaxHLq6Zu07CRPw/0?wx_fmt=png&quot; data-nickname=&quot;网管叨bi叨&quot; data-alias=&quot;kevin_tech&quot; data-signature=&quot;分享软件开发和系统架构设计基础、Go 语言和Kubernetes。&quot; data-from=&quot;0&quot;/&gt;&lt;/section&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;span&gt;- END -&lt;/span&gt;&lt;/section&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;扫码关注公众号「网管叨bi叨」&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages&quot; data-ratio=&quot;1.0188679245283019&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/z4pQ0O5h0f4icJbGAQ8RjXUUVdUZsGADuMBVWePgn7tfrWjjHyc6b8kXTQ7Sdkp0QQFFK4mel5tniczqooMna1CA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;318&quot; data-fileid=&quot;100006658&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;给网管个星标，第一时间吸我的知识 👆&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;网管为大家整理了一本超实用的《Go 开发参考书》收集了70多条开发实践。去公众号回复【gocookbook】即刻领取！&lt;/span&gt;&lt;span/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;觉得有用就点个在看&lt;/span&gt;&lt;span&gt;  👇👇👇&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>46894597eb422024bb5ff42ef11ccb04</guid>
<title>神器 Celery 源码解析（三）</title>
<link>https://toutiao.io/k/vc4h6jh</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;section data-tool=&quot;mdnice编辑器&quot; data-website=&quot;https://www.mdnice.com&quot;&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;p&gt;&lt;span&gt;大家好，我是肖恩，源码解析每周见。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Celery是一款非常简单、灵活、可靠的分布式系统，可用于处理大量消息，并且提供了一整套操作此系统的工具。Celery 也是一款消息队列工具，可用于处理实时数据以及任务调度。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本文是是celery源码解析的第三篇，在前两篇里分别介绍了vine和py-amqp:&lt;/p&gt;&lt;ol data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg4MTEyODQ4OA==&amp;amp;mid=2247485101&amp;amp;idx=1&amp;amp;sn=90dac7302692c97a6ba4158b18494d14&amp;amp;chksm=cf6be3eaf81c6afc411beffc4bd52864b7392b5b7ac8ee870b0bccad869ac5151a8ac5e15c39&amp;amp;token=972408648&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;神器 celery 源码解析- vine实现Promise功能&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=Mzg4MTEyODQ4OA==&amp;amp;mid=2247485138&amp;amp;idx=1&amp;amp;sn=54e9c5d17d2a233089a36220ddcc98e2&amp;amp;chksm=cf6be395f81c6a83e71af0b8f08e2dc8adcbd735bc77039f73717b4d34a87b1dad7ff522d88c&amp;amp;token=972408648&amp;amp;lang=zh_CN&amp;amp;scene=21#wechat_redirect&quot; data-linktype=&quot;2&quot;&gt;神器 celery 源码解析- py-amqp实现AMQP协议&lt;/a&gt;&lt;/section&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;本篇我们继续celery的基础库: kombu，一个python实现的消息库，在celery中承担核心的消息处理流程。本文包括下面几个部分:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;AMQP协议&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;kombu概述&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;kombu使用指南&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Producer &amp;amp;&amp;amp; Consumer 解析&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Exchange &amp;amp;&amp;amp; Queue 解析&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Message 解析&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Connection 解析&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Matcher &amp;amp;&amp;amp; serialization&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;小结&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;小技巧&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;AMQP 概念&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;接上篇，我们继续学习AMQP的相关概念。理解这些基础概念对kombu为什么这样实现很有帮助。这次我们用小故事来模拟kombu的消息处理流程。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;小学三年级的小明同学喜欢同桌的小红同学，喜欢她的马尾和笑容，经常写小纸条给她。这里小纸条就是Message，小明同学是Producer, 小红同学是Consumer，这种直接投递的方式是direct。有时候，小红同学不在座位上，小明就把纸条放在她的抽屉里。抽屉就当做Queue使用，临时存放投递的消息。老师发现小明和小红上课经常有小动作后，棒打鸳鸯把他们分开了，他们不再是同桌。小明同学没法忘记小红的笑容，距离产生了更多的美，就拜托前面的小马帮他递小纸条，纸条封面上写着“请给小红”。小马就是Exchange，小马的前座也是Exchange，“请给小红”就是消息的route-key。常在河边走，哪有不湿脚。有次纸条被老师抓住，老师让小明同学在讲台上把纸条的内容讲给大家听。当众念小纸条这叫广播, 也就是fanout。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;幼稚的小故事也是一种真实的生活，谁又没有写过小纸条呢，请暂停回忆一分钟:) 。业务是生活场景的一种抽象，代码又是更高层一点的抽象。理解业务，就对代码上的概念不发楞。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;以上这些概念Exchange，Queue都是broker要实现的内容。可是客户端Producer/Consumer也包含，这是为什么呢？消息传输过程可不可以简化成一个客户端只使用producer发送消息，另外一个客户端只使用consumer消费消息呢？这样也不是不行，前提是AMQP协议中exchange和queue的创建及绑定，需要使用管理工具在broker先创建好，这无疑约束了AMPQ使用的灵活性。kombu中包含了Exchange，Queue模型，主要是用来对broker的管理。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;kombu概述&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;kombu是植物家族的重要一员, 芹菜(celery)、葡萄藤(vine)、海带(kombu)是快乐的一家人。我们解析kombu，采用的版本是 &lt;code&gt;5.0.0&lt;/code&gt;, 主要模块如下:&lt;/p&gt;&lt;section data-tool=&quot;mdnice编辑器&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;模块&lt;/th&gt;&lt;th&gt;功能&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;abstract.py&lt;/td&gt;&lt;td&gt;抽象的绑定实现，对象是否可以绑定到channel&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;compression.py&lt;/td&gt;&lt;td&gt;压缩算法的汇总&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;connection.py&lt;/td&gt;&lt;td&gt;broker的连接&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;entity.py&lt;/td&gt;&lt;td&gt;实体类，包括Exchange，binding和Queue对象的实现&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;matcher.py&lt;/td&gt;&lt;td&gt;匹配策略&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;message.py&lt;/td&gt;&lt;td&gt;消息对象,并且附带消息的操作接口ack，reject等&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;messaging.py&lt;/td&gt;&lt;td&gt;消息处理，包括Producer和Consumer&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;mixins.py,pools.py,simple.py&lt;/td&gt;&lt;td&gt;增强功能或者提升便捷使用的封装&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;serialization.py&lt;/td&gt;&lt;td&gt;序列化算法的汇总&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;transport&lt;/td&gt;&lt;td&gt;对接各种存储引擎的数据传输实现，主要有内存，redis，pyamqp(RabbitMQ) 等&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;asynchronous&lt;/td&gt;&lt;td&gt;异步实现&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/section&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;kombu底层使用pyamqp提供的AMQP协议支持，并完成Producer，Consumer，Exchange，Queue等模型实现。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;kombu 使用指南&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;老规矩，先从kombu的使用开始。下面是一个生产者发送消息的示例:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# kombu-5.0.0/examples/complete_send.py&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;from kombu import Connection, Producer, Exchange, Queue&lt;br/&gt;&lt;br/&gt;exchange = Exchange(&lt;span&gt;&#x27;kombu_demo&#x27;&lt;/span&gt;, &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&#x27;direct&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;with Connection(&lt;span&gt;&#x27;amqp://guest:guest@localhost:5672//&#x27;&lt;/span&gt;) as connection:&lt;br/&gt;&lt;br/&gt;    producer = Producer(connection)&lt;br/&gt;    &lt;span&gt;# 消息需要使用exchange&lt;/span&gt;&lt;br/&gt;    producer.publish({&lt;span&gt;&#x27;hello&#x27;&lt;/span&gt;: &lt;span&gt;&#x27;world&#x27;&lt;/span&gt;},&lt;br/&gt;                     exchange=exchange,&lt;br/&gt;                     routing_key=&lt;span&gt;&#x27;kombu_demo&#x27;&lt;/span&gt;,&lt;br/&gt;                     serializer=&lt;span&gt;&#x27;json&#x27;&lt;/span&gt;, compression=&lt;span&gt;&#x27;zlib&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;生产者示例包括下面几步:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;创建名为kombu_demo的exchange&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;创建到broker的connection并使用其作为上下文&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用connection创建发送消息的producer&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用创建完成的producer发送普通的json消息到创建好的exchange，并且指明routing_key为kombu_demo。约定消息使用json序列化，zlib算法压缩。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消费者的示例会略微复杂一点:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;kombu-5.0.0/examples/complete_receive.py&lt;br/&gt;&lt;br/&gt;from pprint import pformat&lt;br/&gt;&lt;br/&gt;from kombu import Connection, Exchange, Queue, Consumer, eventloop&lt;br/&gt;&lt;br/&gt;exchange = Exchange(&lt;span&gt;&#x27;kombu_demo&#x27;&lt;/span&gt;, &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&#x27;direct&#x27;&lt;/span&gt;)&lt;br/&gt;queue = Queue(&lt;span&gt;&#x27;kombu_demo&#x27;&lt;/span&gt;, exchange, routing_key=&lt;span&gt;&#x27;kombu_demo&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 格式化函数&lt;/span&gt;&lt;br/&gt;def pretty(obj):&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; pformat(obj, indent=4)&lt;br/&gt;&lt;br/&gt;&lt;span&gt;#: This is the callback applied when a message is received.&lt;/span&gt;&lt;br/&gt;def handle_message(body, message):&lt;br/&gt;    &lt;span&gt;print&lt;/span&gt;(f&lt;span&gt;&#x27;Received message: {body!r}&#x27;&lt;/span&gt;)&lt;br/&gt;    &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&#x27;  properties:\n{}&#x27;&lt;/span&gt;.format(pretty(message.properties)))&lt;br/&gt;    &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&#x27;  delivery_info:\n{}&#x27;&lt;/span&gt;.format(pretty(message.delivery_info)))&lt;br/&gt;    message.ack()&lt;br/&gt;&lt;br/&gt;with Connection(&lt;span&gt;&#x27;amqp://guest:guest@localhost:5672//&#x27;&lt;/span&gt;) as connection:&lt;br/&gt;&lt;br/&gt;    with Consumer(connection, queue, callbacks=[handle_message]):&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; _ &lt;span&gt;in&lt;/span&gt; eventloop(connection):&lt;br/&gt;            pass&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消费者示例主要包括下面几步:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;同样创建名为kombu_demo的exchange&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;创建名为kombu_demo的queue, 绑定到exchange，并且设置消费的routing_key&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;创建callback函数，接收body和message。body是纯粹的业务信息，message则包含一些投递信息，并且可以使用message直接执行ack回应给broker。&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;和生产者一样，创建到broker的connection并使用其作为上下文&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;使用connection创建消费者，消费者需要绑定到queue，并且设置callback函数&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;持续监听connection上的事件循环&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;我们再回头看看下图，对比一下示例，加强理解：&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-fileid=&quot;100001485&quot; data-galleryid=&quot;&quot; data-ratio=&quot;0.4685714285714286&quot; data-s=&quot;300,640&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/M7RCU12fAkCe79CNwr7TYgcibmKAjzEfCCQjW5iaicQhjoic3Kk6cHZfCkZDLZoobXrv57Y4oWrqmS9gKCjsTz2mKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;700&quot;/&gt;&lt;/p&gt;&lt;figure data-tool=&quot;mdnice编辑器&quot;&gt;&lt;figcaption&gt;hello-world-example-routing&lt;/figcaption&gt;&lt;/figure&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;示例中的生产者位于图的左半区，消费者位于图的右半区。中间部分的broker，在文章的第一篇里，我们使用redis服务作为broker。示例还有重要的一点就是，全程没有创建channel，都是自动创建的。一般情况下，我们有3个进程，Producer进程和Consumer进程通过Broker进程进行消息的处理，这是一个典型的分布式系统。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Producer &amp;amp;&amp;amp; Consumer 解析&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Proudcer解析&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Proudcer的构造函数:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class Producer:&lt;br/&gt;    def __init__(self, channel, exchange=None, routing_key=None,&lt;br/&gt;                 serializer=None, auto_declare=None, compression=None,&lt;br/&gt;                 on_return=None):&lt;br/&gt;        self._channel = channel&lt;br/&gt;        self.exchange = exchange&lt;br/&gt;        self.routing_key = routing_key or self.routing_key&lt;br/&gt;        self.serializer = serializer or self.serializer&lt;br/&gt;        self.compression = compression or self.compression&lt;br/&gt;        self.on_return = on_return or self.on_return&lt;br/&gt;        self._channel_promise = None&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; self.exchange is None:&lt;br/&gt;            &lt;span&gt;# 默认的exchange&lt;/span&gt;&lt;br/&gt;            self.exchange = Exchange(&lt;span&gt;&#x27;&#x27;&lt;/span&gt;)&lt;br/&gt;        ...&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; self._channel:&lt;br/&gt;            self.revive(self._channel)&lt;br/&gt;    &lt;br/&gt;    def revive(self, channel):&lt;br/&gt;        &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Revive the producer after connection loss.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; is_connection(channel):&lt;br/&gt;            connection = channel&lt;br/&gt;            self.__connection__ = connection&lt;br/&gt;            channel = ChannelPromise(lambda: connection.default_channel)&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; isinstance(channel, ChannelPromise):&lt;br/&gt;            self._channel = channel&lt;br/&gt;            self.exchange = self.exchange(channel)&lt;br/&gt;        &lt;span&gt;else&lt;/span&gt;:&lt;br/&gt;            &lt;span&gt;# Channel already concrete&lt;/span&gt;&lt;br/&gt;            self._channel = channel&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; self.on_return:&lt;br/&gt;                self._channel.events[&lt;span&gt;&#x27;basic_return&#x27;&lt;/span&gt;].add(self.on_return)&lt;br/&gt;            self.exchange = self.exchange(channel)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Producer除了设置自身的属性外，还包括对channel的处理。前文介绍过connection也是channel的一种，这里要先处理好connection，然后再从connection获得默认的channel。同时对于已经成功的channel，则进行将producer绑定到channel。&lt;code&gt;self.exchange(channel)&lt;/code&gt; 等同于 &lt;code&gt;self.exchange.__call__(channel)&lt;/code&gt;。producer创建完成后，可以通过publish方法发送消息:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def publish(self, body, routing_key=None, delivery_mode=None,&lt;br/&gt;                mandatory=False, immediate=False, priority=0,&lt;br/&gt;                content_type=None, content_encoding=None, serializer=None,&lt;br/&gt;                headers=None, compression=None, exchange=None, retry=False,&lt;br/&gt;                retry_policy=None, &lt;span&gt;declare&lt;/span&gt;=None, expiration=None, timeout=None,&lt;br/&gt;                **properties):&lt;br/&gt;    &lt;span&gt;# 初始化routing-key, exchange&lt;/span&gt;&lt;br/&gt;    routing_key = self.routing_key &lt;span&gt;if&lt;/span&gt; routing_key is None &lt;span&gt;else&lt;/span&gt; routing_key&lt;br/&gt;    exchange_name, properties[&lt;span&gt;&#x27;delivery_mode&#x27;&lt;/span&gt;] = self._delivery_details(&lt;br/&gt;            exchange or self.exchange, delivery_mode,&lt;br/&gt;        )&lt;br/&gt;    &lt;span&gt;# 准备body和body类型，编码&lt;/span&gt;&lt;br/&gt;    body, content_type, content_encoding = self._prepare(&lt;br/&gt;            body, serializer, content_type, content_encoding,&lt;br/&gt;            compression, headers)&lt;br/&gt;    &lt;br/&gt;    &lt;span&gt;# 使用message封装body&lt;/span&gt;&lt;br/&gt;    message = self.channel.prepare_message(&lt;br/&gt;        body, priority, content_type,&lt;br/&gt;        content_encoding, headers, properties,&lt;br/&gt;    )&lt;br/&gt;    ...&lt;br/&gt;    &lt;span&gt;# 利用channel发送消息&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; channel.basic_publish(&lt;br/&gt;        message,&lt;br/&gt;        exchange=exchange, routing_key=routing_key,&lt;br/&gt;        mandatory=mandatory, immediate=immediate,&lt;br/&gt;        timeout=timeout&lt;br/&gt;    )&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Producer是对channel的业务封装，创建时候有channel则使用channel，没有channel则使用connection的default_channel。Producer发送消息的过程，完成exchange和message包装后，使用channel进行发送。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Consumer解析&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Consumer的构造函数和上下文：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class Consumer:&lt;br/&gt;    &lt;br/&gt;    def __init__(self, channel, queues=None, no_ack=None, auto_declare=None,&lt;br/&gt;                 callbacks=None, on_decode_error=None, on_message=None,&lt;br/&gt;                 accept=None, prefetch_count=None, tag_prefix=None):&lt;br/&gt;        self.channel = channel&lt;br/&gt;        &lt;span&gt;# Queue的列表&lt;/span&gt;&lt;br/&gt;        self.queues = maybe_list(queues or [])&lt;br/&gt;        self.no_ack = self.no_ack &lt;span&gt;if&lt;/span&gt; no_ack is None &lt;span&gt;else&lt;/span&gt; no_ack&lt;br/&gt;        &lt;span&gt;# 消息的回调函数&lt;/span&gt;&lt;br/&gt;        self.callbacks = (self.callbacks or [] &lt;span&gt;if&lt;/span&gt; callbacks is None&lt;br/&gt;                          &lt;span&gt;else&lt;/span&gt; callbacks)&lt;br/&gt;        &lt;span&gt;# 自定义的消息处理方法&lt;/span&gt;&lt;br/&gt;        self.on_message = on_message&lt;br/&gt;        self.tag_prefix = tag_prefix&lt;br/&gt;        self._active_tags = {}&lt;br/&gt;        ...&lt;br/&gt;&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; self.channel:&lt;br/&gt;            self.revive(self.channel)&lt;br/&gt;    &lt;br/&gt;    def revive(self, channel):&lt;br/&gt;        &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Revive consumer after connection loss.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;        self._active_tags.clear()&lt;br/&gt;        channel = self.channel = maybe_channel(channel)&lt;br/&gt;        &lt;span&gt;# modify dict size while iterating over it is not allowed&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; qname, queue &lt;span&gt;in&lt;/span&gt; list(self._queues.items()):&lt;br/&gt;            &lt;span&gt;# name may have changed after declare&lt;/span&gt;&lt;br/&gt;            self._queues.pop(qname, None)&lt;br/&gt;            queue = self._queues[queue.name] = queue(self.channel)&lt;br/&gt;            &lt;span&gt;# queue和channel绑定&lt;/span&gt;&lt;br/&gt;            queue.revive(channel)&lt;br/&gt;        ...&lt;br/&gt;    &lt;br/&gt;    def __enter__(self):&lt;br/&gt;        self.consume()&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; self&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Consumer和Producer类似，设置完属性后也要处理好channel，不同的是其中的queue(在producer中是exchange)和channel绑定并提供一个上下文环境。在上下文环境中进行消息消费:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def consume(self, no_ack=None):&lt;br/&gt;    tag = self._add_tag(queue, consumer_tag)&lt;br/&gt;    &lt;span&gt;# 每个queue消息消息&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; queue &lt;span&gt;in&lt;/span&gt; self._queues:&lt;br/&gt;        queue.consume(tag, self._receive_callback,&lt;br/&gt;                          no_ack=no_ack, nowait=nowait)&lt;br/&gt;&lt;br/&gt;def _receive_callback(self, message):&lt;br/&gt;    accept = self.accept&lt;br/&gt;    on_m, channel, decoded = self.on_message, self.channel, None&lt;br/&gt;    try:&lt;br/&gt;        ...&lt;br/&gt;        &lt;span&gt;# 消息反序列化&lt;/span&gt;&lt;br/&gt;        decoded = None &lt;span&gt;if&lt;/span&gt; on_m &lt;span&gt;else&lt;/span&gt; message.decode()&lt;br/&gt;    except Exception as exc:&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; not self.on_decode_error:&lt;br/&gt;            raise&lt;br/&gt;        self.on_decode_error(message, exc)&lt;br/&gt;    &lt;span&gt;else&lt;/span&gt;:&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; on_m(message) &lt;span&gt;if&lt;/span&gt; on_m &lt;span&gt;else&lt;/span&gt; self.receive(decoded, message)&lt;br/&gt;&lt;br/&gt;def receive(self, body, message):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Method called when a message is received.&lt;br/&gt;&lt;br/&gt;    This dispatches to the registered :attr:`callbacks`.&lt;br/&gt;&lt;br/&gt;    Arguments:&lt;br/&gt;        body (Any): The decoded message body.&lt;br/&gt;        message (~kombu.Message): The message instance.&lt;br/&gt;&lt;br/&gt;    Raises:&lt;br/&gt;        NotImplementedError: If no consumer callbacks have been&lt;br/&gt;            registered.&lt;br/&gt;    &quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;# 执行callback&lt;/span&gt;&lt;br/&gt;    callbacks = self.callbacks&lt;br/&gt;    ...&lt;br/&gt;    &lt;span&gt;# 默认就是body和message回传给业务函数&lt;/span&gt;&lt;br/&gt;    [callback(body, message) &lt;span&gt;for&lt;/span&gt; callback &lt;span&gt;in&lt;/span&gt; callbacks]&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;consumer可以使用多个queue，每个queue消费消息的时候可以使用覆盖处理函数或者使用系统的处理函数。一般情况下callback会获得到解码后的body和消息原文。如何持续的消费消息，在connection部分再介绍。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Exchange &amp;amp;&amp;amp; Queue 解析&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;producer需要使用exchange，consumer需要使用queue，消息是通过exchange和queue搭桥传递的。Exchange和Queue有共同的父类MaybeChannelBound:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;              +-------------------+&lt;br/&gt;              | MaybeChannelBound |&lt;br/&gt;              +-------^-----------+&lt;br/&gt;                      |&lt;br/&gt;     +----------------+----------------+&lt;br/&gt;     |                                 |&lt;br/&gt;+----+-----+                       +---+---+&lt;br/&gt;| Exchange |                       | Queue |&lt;br/&gt;+----------+                       +-------+&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;MaybeChannelBound约定了类对channel的绑定行为:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class MaybeChannelBound(Object):&lt;br/&gt;    &lt;br/&gt;    _channel = None&lt;br/&gt;    _is_bound = False&lt;br/&gt;    &lt;br/&gt;    def __call__(self, channel):&lt;br/&gt;        &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;`self(channel) -&amp;gt; self.bind(channel)`.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; self.bind(channel)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;_channel 和 _is_bound 都是类属性，可以知道channel在类上重用&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;__call__魔法函数让类方法, 比如exchange(channel)和queue(channel)执行的时候会自动执行绑定到channel的动作。&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;下面绑定channel的动作和是否绑定的判断也可以验证这一点。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def maybe_bind(self, channel):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Bind instance to channel if not already bound.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; not self.is_bound and channel:&lt;br/&gt;        self._channel = maybe_channel(channel)&lt;br/&gt;        self.when_bound()&lt;br/&gt;        self._is_bound = True&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; self&lt;br/&gt;&lt;br/&gt;@property&lt;br/&gt;def is_bound(self):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Flag set if the channel is bound.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; self._is_bound and self._channel is not None&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;exchange对象的创建和绑定到channel:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class Exchange(MaybeChannelBound):&lt;br/&gt;    def __init__(self, name=&lt;span&gt;&#x27;&#x27;&lt;/span&gt;, &lt;span&gt;type&lt;/span&gt;=&lt;span&gt;&#x27;&#x27;&lt;/span&gt;, channel=None, **kwargs):&lt;br/&gt;        super().__init__(**kwargs)&lt;br/&gt;        self.name = name or self.name&lt;br/&gt;        self.type = &lt;span&gt;type&lt;/span&gt; or self.type&lt;br/&gt;        self.maybe_bind(channel)&lt;br/&gt;        ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建完成的exchange对象需要进行申明，申明的过程就是让broker创建exchange的过程:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def &lt;span&gt;declare&lt;/span&gt;(self, nowait=False, passive=None, channel=None):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Declare the exchange.&lt;br/&gt;&lt;br/&gt;    Creates the exchange on the broker, unless passive is set&lt;br/&gt;    in which case it will only assert that the exchange exists.&lt;br/&gt;&lt;br/&gt;    Argument:&lt;br/&gt;        nowait (bool): If set the server will not respond, and a&lt;br/&gt;            response will not be waited for. Default is :const:`False`.&lt;br/&gt;    &quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; self._can_declare():&lt;br/&gt;        passive = self.passive &lt;span&gt;if&lt;/span&gt; passive is None &lt;span&gt;else&lt;/span&gt; passive&lt;br/&gt;        &lt;span&gt;# 依托于channel&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; (channel or self.channel).exchange_declare(&lt;br/&gt;            exchange=self.name, &lt;span&gt;type&lt;/span&gt;=self.type, durable=self.durable,&lt;br/&gt;            auto_delete=self.auto_delete, arguments=self.arguments,&lt;br/&gt;            nowait=nowait, passive=passive,&lt;br/&gt;        )&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;hr data-tool=&quot;mdnice编辑器&quot;/&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;queue对象创建完成后也需要绑定到channel:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class Queue(MaybeChannelBound):&lt;br/&gt;    def __init__(self, name=&lt;span&gt;&#x27;&#x27;&lt;/span&gt;, exchange=None, routing_key=&lt;span&gt;&#x27;&#x27;&lt;/span&gt;,&lt;br/&gt;                 channel=None, bindings=None, on_declared=None,&lt;br/&gt;                 **kwargs):&lt;br/&gt;        super().__init__(**kwargs)&lt;br/&gt;        self.name = name or self.name&lt;br/&gt;        self.maybe_bind(channel)&lt;br/&gt;        ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;然后申明queue，这个过程包括下面3个步骤:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def &lt;span&gt;declare&lt;/span&gt;(self, nowait=False, channel=None):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Declare queue and exchange then binds queue to exchange.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; not self.no_declare:&lt;br/&gt;        &lt;span&gt;# - declare main binding.&lt;/span&gt;&lt;br/&gt;        self._create_exchange(nowait=nowait, channel=channel)&lt;br/&gt;        self._create_queue(nowait=nowait, channel=channel)&lt;br/&gt;        self._create_bindings(nowait=nowait, channel=channel)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; self.name&lt;br/&gt;&lt;br/&gt;def _create_exchange(self, nowait=False, channel=None):&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; self.exchange:&lt;br/&gt;        &lt;span&gt;# 隐式申明exchange&lt;/span&gt;&lt;br/&gt;        self.exchange.declare(nowait=nowait, channel=channel)&lt;br/&gt;&lt;br/&gt;def _create_queue(self, nowait=False, channel=None):&lt;br/&gt;    &lt;span&gt;# 申明queue&lt;/span&gt;&lt;br/&gt;    self.queue_declare(nowait=nowait, passive=False, channel=channel)&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; self.exchange and self.exchange.name:&lt;br/&gt;        &lt;span&gt;# 绑定queue和exchange&lt;/span&gt;&lt;br/&gt;        self.queue_bind(nowait=nowait, channel=channel)&lt;br/&gt;&lt;br/&gt;def _create_bindings(self, nowait=False, channel=None):&lt;br/&gt;    &lt;span&gt;for&lt;/span&gt; B &lt;span&gt;in&lt;/span&gt; self.bindings:&lt;br/&gt;        channel = channel or self.channel&lt;br/&gt;        B.declare(channel)&lt;br/&gt;        B.bind(self, nowait=nowait, channel=channel)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;queue的申明也是让broker创建queue:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def queue_declare(self, nowait=False, passive=False, channel=None):&lt;br/&gt;    ...&lt;br/&gt;    ret = channel.queue_declare(&lt;br/&gt;            queue=self.name,&lt;br/&gt;            passive=passive,&lt;br/&gt;            durable=self.durable,&lt;br/&gt;            exclusive=self.exclusive,&lt;br/&gt;            auto_delete=self.auto_delete,&lt;br/&gt;            arguments=queue_arguments,&lt;br/&gt;            nowait=nowait,&lt;br/&gt;        )&lt;br/&gt;    ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;queue比exchange多一个步骤就是bind到exchange。queue_bind的工作是让broker创建queue和exchange的关联关系。&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def queue_bind(self, nowait=False, channel=None):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Create the queue binding on the server.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; (channel or self.channel).queue_bind(&lt;br/&gt;        queue=self.name,&lt;br/&gt;        exchange=exchange,&lt;br/&gt;        routing_key=routing_key,&lt;br/&gt;        arguments=arguments,&lt;br/&gt;        nowait=nowait,&lt;br/&gt;    )&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;从Exchange和Queue的实现，我们可以知道生产者不用关心消费者的实现，只需要创建和申明exchange即可。消费者则是需要知道生产者，除了创建和申明queue后，还需要绑定queue和exchange的关系。又因为消费者和生产者在不同的进程，即使生成者创建了exchange，消费者也需要在本地隐式创建exchange对象。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Message 解析&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息对象，除了纯粹的数据结构外，也包含channel的引用，毕竟消息可以直接执行ack动作:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class Message:&lt;br/&gt;    def __init__(self, body=None, delivery_tag=None,&lt;br/&gt;                 content_type=None, content_encoding=None, delivery_info=None,&lt;br/&gt;                 properties=None, headers=None, postencode=None,&lt;br/&gt;                 accept=None, channel=None, **kwargs):&lt;br/&gt;        &lt;span&gt;# 通道，主要的API来源&lt;/span&gt;&lt;br/&gt;        self.channel = channel&lt;br/&gt;        &lt;span&gt;# 投递标签,可以用来响应&lt;/span&gt;&lt;br/&gt;        self.delivery_tag = delivery_tag&lt;br/&gt;        ...&lt;br/&gt;        self.headers = headers or {}&lt;br/&gt;        self.body = body&lt;br/&gt;        ...&lt;br/&gt;        self._state = &lt;span&gt;&#x27;RECEIVED&#x27;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息本身还带有四个状态:&lt;/p&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;RECEIVED&lt;/code&gt; 默认状态&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;ACK&lt;/code&gt; 完成ack响应&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;REJECTED&lt;/code&gt; 拒绝消息&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;&lt;code&gt;REQUEUED&lt;/code&gt; 重新投递消息&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;其中 &lt;code&gt;{&#x27;ACK&#x27;, &#x27;REJECTED&#x27;, &#x27;REQUEUED&#x27;}&lt;/code&gt; 三个状态的转换都需要使用channel进行操作broker，成功后再切换:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def ack(self, multiple=False):&lt;br/&gt;    &lt;span&gt;# 回应ACK&lt;/span&gt;&lt;br/&gt;    self.channel.basic_ack(self.delivery_tag, multiple=multiple)&lt;br/&gt;    self._state = &lt;span&gt;&#x27;ACK&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;def reject(self, requeue=False):&lt;br/&gt;    &lt;span&gt;# 拒绝（抛弃消息）&lt;/span&gt;&lt;br/&gt;    self.channel.basic_reject(self.delivery_tag, requeue=requeue)&lt;br/&gt;    self._state = &lt;span&gt;&#x27;REJECTED&#x27;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;def requeue(self):&lt;br/&gt;    &lt;span&gt;# 拒绝（退回消息）（和reject区别在requeue=True）&lt;/span&gt;&lt;br/&gt;    self.channel.basic_reject(self.delivery_tag, requeue=True)&lt;br/&gt;    self._state = &lt;span&gt;&#x27;REQUEUED&#x27;&lt;/span&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;消息上附带的信息，通过不同的load方法进行序列化:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;from .serialization import loads&lt;br/&gt;&lt;br/&gt;@property&lt;br/&gt;def payload(self):&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; loads(self.body, self.content_type,&lt;br/&gt;                     self.content_encoding, accept=self.accept)    &lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Connection 解析&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Connection负责管理producer/consumer到broker的网络连接:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class Connection:&lt;br/&gt;    def __init__(self, hostname=&lt;span&gt;&#x27;localhost&#x27;&lt;/span&gt;, userid=None,&lt;br/&gt;                 password=None, virtual_host=None, port=None, insist=False,&lt;br/&gt;                 ssl=False, transport=None, connect_timeout=5,&lt;br/&gt;                 transport_options=None, login_method=None, uri_prefix=None,&lt;br/&gt;                 heartbeat=0, failover_strategy=&lt;span&gt;&#x27;round-robin&#x27;&lt;/span&gt;,&lt;br/&gt;                 alternates=None, **kwargs):&lt;br/&gt;        ...&lt;br/&gt;        params = self._initial_params = {&lt;br/&gt;            &lt;span&gt;&#x27;hostname&#x27;&lt;/span&gt;: hostname, &lt;span&gt;&#x27;userid&#x27;&lt;/span&gt;: userid,&lt;br/&gt;            &lt;span&gt;&#x27;password&#x27;&lt;/span&gt;: password, &lt;span&gt;&#x27;virtual_host&#x27;&lt;/span&gt;: virtual_host,&lt;br/&gt;            &lt;span&gt;&#x27;port&#x27;&lt;/span&gt;: port, &lt;span&gt;&#x27;insist&#x27;&lt;/span&gt;: insist, &lt;span&gt;&#x27;ssl&#x27;&lt;/span&gt;: ssl,&lt;br/&gt;            &lt;span&gt;&#x27;transport&#x27;&lt;/span&gt;: transport, &lt;span&gt;&#x27;connect_timeout&#x27;&lt;/span&gt;: connect_timeout,&lt;br/&gt;            &lt;span&gt;&#x27;login_method&#x27;&lt;/span&gt;: login_method, &lt;span&gt;&#x27;heartbeat&#x27;&lt;/span&gt;: heartbeat&lt;br/&gt;        }&lt;br/&gt;        ...&lt;br/&gt;        &lt;br/&gt;        self._init_params(**params)&lt;br/&gt;        ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;重点在_init_params中对各种支持AQMP协议的broker的管理, 比如redis，RobbitMQ:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def _init_params(self, hostname, userid, password, virtual_host, port,&lt;br/&gt;                 insist, ssl, transport, connect_timeout,&lt;br/&gt;                 login_method, heartbeat):&lt;br/&gt;    transport = transport or &lt;span&gt;&#x27;amqp&#x27;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; transport == &lt;span&gt;&#x27;amqp&#x27;&lt;/span&gt; and supports_librabbitmq():&lt;br/&gt;        transport = &lt;span&gt;&#x27;librabbitmq&#x27;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; transport == &lt;span&gt;&#x27;rediss&#x27;&lt;/span&gt; and ssl_available and not ssl:&lt;br/&gt;        logger.warning(&lt;br/&gt;            &lt;span&gt;&#x27;Secure redis scheme specified (rediss) with no ssl &#x27;&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;&#x27;options, defaulting to insecure SSL behaviour.&#x27;&lt;/span&gt;&lt;br/&gt;        )&lt;br/&gt;        ssl = {&lt;span&gt;&#x27;ssl_cert_reqs&#x27;&lt;/span&gt;: CERT_NONE}&lt;br/&gt;    self.hostname = hostname&lt;br/&gt;    self.userid = userid&lt;br/&gt;    self.password = password&lt;br/&gt;    self.login_method = login_method&lt;br/&gt;    &lt;span&gt;# 虚拟主机隔离&lt;/span&gt;&lt;br/&gt;    self.virtual_host = virtual_host or self.virtual_host&lt;br/&gt;    self.port = port or self.port&lt;br/&gt;    self.insist = insist&lt;br/&gt;    self.connect_timeout = connect_timeout&lt;br/&gt;    self.ssl = ssl&lt;br/&gt;    &lt;span&gt;# 传输类&lt;/span&gt;&lt;br/&gt;    self.transport_cls = transport&lt;br/&gt;    self.heartbeat = heartbeat and &lt;span&gt;float&lt;/span&gt;(heartbeat)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;配置完connection信息后，就需要创建网络连接。这个过程通过调用connection属性或者default_channel属性时候自动创建：&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;@property&lt;br/&gt;def connection(self):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;The underlying connection object.&lt;br/&gt;&lt;br/&gt;    Warning:&lt;br/&gt;        This instance is transport specific, so do not&lt;br/&gt;        depend on the interface of this object.&lt;br/&gt;    &quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; not self._closed:&lt;br/&gt;        &lt;span&gt;if&lt;/span&gt; not self.connected:&lt;br/&gt;            &lt;span&gt;# 创建连接&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;return&lt;/span&gt; self._ensure_connection(&lt;br/&gt;                max_retries=1, reraise_as_library_errors=False&lt;br/&gt;            )&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; self._connection&lt;br/&gt;        &lt;br/&gt;@property&lt;br/&gt;def default_channel(self):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Default channel.&lt;br/&gt;&lt;br/&gt;    Created upon access and closed when the connection is closed.&lt;br/&gt;&lt;br/&gt;    Note:&lt;br/&gt;        Can be used for automatic channel handling when you only need one&lt;br/&gt;        channel, and also it is the channel implicitly used if&lt;br/&gt;        a connection is passed instead of a channel, to functions that&lt;br/&gt;        require a channel.&lt;br/&gt;    &quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;# make sure we&#x27;re still connected, and if not refresh.&lt;/span&gt;&lt;br/&gt;    conn_opts = self._extract_failover_opts()&lt;br/&gt;    &lt;span&gt;# 创建连接&lt;/span&gt;&lt;br/&gt;    self._ensure_connection(**conn_opts)&lt;br/&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; self._default_channel is None:&lt;br/&gt;        self._default_channel = self.channel()&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; self._default_channel&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;连接创建完成后，继续创建channel:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def channel(self):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Create and return a new channel.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    self._debug(&lt;span&gt;&#x27;create channel&#x27;&lt;/span&gt;)&lt;br/&gt;    chan = self.transport.create_channel(self.connection)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; chan&lt;br/&gt;&lt;br/&gt;def create_transport(self):&lt;br/&gt;    &lt;span&gt;# 创建传输连接&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; self.get_transport_cls()(client=self)&lt;br/&gt;&lt;br/&gt;def get_transport_cls(self):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Get the currently used transport class.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    transport_cls = self.transport_cls&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; not transport_cls or isinstance(transport_cls, str):&lt;br/&gt;        transport_cls = get_transport_cls(transport_cls)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; transport_cls&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;创建broker的连接过程，是通过transport的创建，其中细节涉及对不同类型的broker服务的适配，内容挺多，我们下一章再进行解析。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;Matcher &amp;amp;&amp;amp; serialization&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Matcher负责处理消息的匹配机制，serialization复杂消息的序列化。两者的实现方式类似，都使用注册中心模式+策略模式实现。&lt;/p&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Matcher的注册中心:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class MatcherRegistry:&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Pattern matching function registry.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;匹配器的注册中心&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    MatcherNotInstalled = MatcherNotInstalled&lt;br/&gt;    matcher_pattern_first = [&lt;span&gt;&quot;pcre&quot;&lt;/span&gt;, ]&lt;br/&gt;&lt;br/&gt;    def __init__(self):&lt;br/&gt;        self._matchers = {}&lt;br/&gt;        self._default_matcher = None&lt;br/&gt;&lt;br/&gt;&lt;span&gt;#: Global registry of matchers.&lt;/span&gt;&lt;br/&gt;registry = MatcherRegistry()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;注册glob(模糊)模式和pcre(正则)模式两种策略:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def register_glob():&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Register glob into default registry.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;使用glob(通配符)匹配&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    registry.register(&lt;span&gt;&#x27;glob&#x27;&lt;/span&gt;, fnmatch)&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;def register_pcre():&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Register pcre into default registry.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;使用正则匹配&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    registry.register(&lt;span&gt;&#x27;pcre&#x27;&lt;/span&gt;, rematch)&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# Register the base matching methods.&lt;/span&gt;&lt;br/&gt;register_glob()&lt;br/&gt;register_pcre()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;匹配消息的方法，就是使用模式进行识别:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def match(self, data, pattern, matcher=None, matcher_kwargs=None):&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Call the matcher.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; matcher and not self._matchers.get(matcher):&lt;br/&gt;        raise self.MatcherNotInstalled(&lt;br/&gt;            f&lt;span&gt;&#x27;No matcher installed for {matcher}&#x27;&lt;/span&gt;&lt;br/&gt;        )&lt;br/&gt;    &lt;span&gt;# 默认使用通配符匹配&lt;/span&gt;&lt;br/&gt;    match_func = self._matchers[matcher or &lt;span&gt;&#x27;glob&#x27;&lt;/span&gt;]&lt;br/&gt;    &lt;span&gt;# 通配符和正则匹配的传参先后顺序有差异&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;if&lt;/span&gt; matcher &lt;span&gt;in&lt;/span&gt; self.matcher_pattern_first:&lt;br/&gt;        first_arg = bytes_to_str(pattern)&lt;br/&gt;        second_arg = bytes_to_str(data)&lt;br/&gt;    &lt;span&gt;else&lt;/span&gt;:&lt;br/&gt;        first_arg = bytes_to_str(data)&lt;br/&gt;        second_arg = bytes_to_str(pattern)&lt;br/&gt;    &lt;span&gt;return&lt;/span&gt; match_func(first_arg, second_arg, **matcher_kwargs or {})&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Serializer的注册中心:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class SerializerRegistry:&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;The registry keeps track of serialization methods.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;序列化方法的注册中心&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    def __init__(self):&lt;br/&gt;        self._encoders = {}&lt;br/&gt;        self._decoders = {}&lt;br/&gt;        self._default_encode = None&lt;br/&gt;        self._default_content_type = None&lt;br/&gt;        self._default_content_encoding = None&lt;br/&gt;        &lt;span&gt;# 记录禁用的编解码类型&lt;/span&gt;&lt;br/&gt;        self._disabled_content_types = &lt;span&gt;set&lt;/span&gt;()&lt;br/&gt;        &lt;span&gt;# 双向字典，可以进行互查&lt;/span&gt;&lt;br/&gt;        self.type_to_name = {}&lt;br/&gt;        self.name_to_type = {}&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# 全局单例，并且导出函数绑定，使用API更简介&lt;/span&gt;&lt;br/&gt;registry = SerializerRegistry()&lt;br/&gt;dumps = registry.dumps&lt;br/&gt;loads = registry.loads&lt;br/&gt;register = registry.register&lt;br/&gt;unregister = registry.unregister&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;json, yaml, pickle和msgpack四种序列化策略的注册:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;def register_json():&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Register a encoder/decoder for JSON serialization.&quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    from kombu.utils import json as _json&lt;br/&gt;&lt;br/&gt;    registry.register(&lt;span&gt;&#x27;json&#x27;&lt;/span&gt;, _json.dumps, _json.loads,&lt;br/&gt;                      content_type=&lt;span&gt;&#x27;application/json&#x27;&lt;/span&gt;,&lt;br/&gt;                      content_encoding=&lt;span&gt;&#x27;utf-8&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;def register_yaml():&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Register a encoder/decoder for YAML serialization.&lt;br/&gt;&lt;br/&gt;    It is slower than JSON, but allows for more data types&lt;br/&gt;    to be serialized. Useful if you need to send data such as dates&lt;br/&gt;&lt;br/&gt;    &quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    import yaml&lt;br/&gt;    registry.register(&lt;span&gt;&#x27;yaml&#x27;&lt;/span&gt;, yaml.safe_dump, yaml.safe_load,&lt;br/&gt;                      content_type=&lt;span&gt;&#x27;application/x-yaml&#x27;&lt;/span&gt;,&lt;br/&gt;                      content_encoding=&lt;span&gt;&#x27;utf-8&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;def register_pickle():&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Register pickle serializer.&lt;br/&gt;&lt;br/&gt;    The fastest serialization method, but restricts&lt;br/&gt;    you to python clients.&lt;br/&gt;    &quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    def pickle_dumps(obj, dumper=pickle.dumps):&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; dumper(obj, protocol=pickle_protocol)&lt;br/&gt;&lt;br/&gt;    registry.register(&lt;span&gt;&#x27;pickle&#x27;&lt;/span&gt;, pickle_dumps, unpickle,&lt;br/&gt;                      content_type=&lt;span&gt;&#x27;application/x-python-serialize&#x27;&lt;/span&gt;,&lt;br/&gt;                      content_encoding=&lt;span&gt;&#x27;binary&#x27;&lt;/span&gt;)&lt;br/&gt;&lt;br/&gt;def register_msgpack():&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Register msgpack serializer.&lt;br/&gt;&lt;br/&gt;    See Also:&lt;br/&gt;        https://msgpack.org/.&lt;br/&gt;    &quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;    pack = unpack = None&lt;br/&gt;    import msgpack&lt;br/&gt;    from msgpack import packb, unpackb&lt;br/&gt;&lt;br/&gt;    def pack(s):&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; packb(s, use_bin_type=True)&lt;br/&gt;&lt;br/&gt;    def unpack(s):&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; unpackb(s, raw=False)&lt;br/&gt;        &lt;br/&gt;    registry.register(&lt;br/&gt;        &lt;span&gt;&#x27;msgpack&#x27;&lt;/span&gt;, pack, unpack,&lt;br/&gt;        content_type=&lt;span&gt;&#x27;application/x-msgpack&#x27;&lt;/span&gt;,&lt;br/&gt;        content_encoding=&lt;span&gt;&#x27;binary&#x27;&lt;/span&gt;,&lt;br/&gt;    )&lt;br/&gt;&lt;br/&gt;register_json()&lt;br/&gt;register_pickle()&lt;br/&gt;register_yaml()&lt;br/&gt;register_msgpack()&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;反序列化的使用:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&lt;span&gt;# kombu-5.0.0/kombu/serialization.py:285&lt;/span&gt;&lt;br/&gt;&lt;span&gt;# 导出策略&lt;/span&gt;&lt;br/&gt;loads = registry.loads&lt;br/&gt;&lt;br/&gt;&lt;span&gt;# kombu-5.0.0/kombu/message.py:10&lt;/span&gt;&lt;br/&gt;from .serialization import loads&lt;br/&gt;&lt;br/&gt;class Message:&lt;br/&gt;    def _decode(self):&lt;br/&gt;        &lt;span&gt;# 使用策略反序列化message-body&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;return&lt;/span&gt; loads(self.body, self.content_type,&lt;br/&gt;                     self.content_encoding, accept=self.accept)&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;小结&lt;/h2&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;通过kombu的Producer可以发送消息到broker，使用Comsumer则可以消费消息。发送消息的时候需要使用Exchange，用来将消费分发到不同的目标Queue；消费消息的时候，需要使用Queue，Queue还需要通过绑定的方式和Exchange关联起来。Exchange和Queue都是使用底层的channel进行数据传输，所以需要进绑定(binding)；还需要在远程的broker中创建，所以创建后的的Exchange和Queue需要进行申明(declare)。消息会附带上投递信息，进行序列化后从生产者到broker转发给消费者，消费者再使用投递信息上的序列化约定，将消息反序列成业务信息。&lt;/p&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;小技巧&lt;/h2&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;pickle打包函数&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;pickle不仅支持数据接口的序列化，还支持函数的序列化:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;python3&lt;br/&gt;Python 3.8.5 (v3.8.5:580fbb018f, Jul 20 2020, 12:11:27)&lt;br/&gt;[Clang 6.0 (clang-600.0.57)] on darwin&lt;br/&gt;Type &lt;span&gt;&quot;help&quot;&lt;/span&gt;, &lt;span&gt;&quot;copyright&quot;&lt;/span&gt;, &lt;span&gt;&quot;credits&quot;&lt;/span&gt; or &lt;span&gt;&quot;license&quot;&lt;/span&gt; &lt;span&gt;for&lt;/span&gt; more information.&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; import pickle&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; def hello(msg):&lt;br/&gt;...     &lt;span&gt;print&lt;/span&gt;(&lt;span&gt;&quot;hello&quot;&lt;/span&gt;, msg)&lt;br/&gt;...&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; p = pickle.dumps(hello)&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; p&lt;br/&gt;b&lt;span&gt;&#x27;\x80\x04\x95\x16\x00\x00\x00\x00\x00\x00\x00\x8c\x08__main__\x94\x8c\x05hello\x94\x93\x94.&#x27;&lt;/span&gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; q = pickle.loads(p)&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; q(&lt;span&gt;&quot;python&quot;&lt;/span&gt;)&lt;br/&gt;hello python&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;上面的hello函数可以通过pickle打包，再重新解包执行。利用这个机制使用kombu，可以将producer进程的函数发送到consumer进程远程执行。pickle支持的数据类型还挺丰富，官方文档中介绍包括下面多种类型:&lt;/p&gt;&lt;blockquote data-tool=&quot;mdnice编辑器&quot;&gt;&lt;pre&gt;&lt;span/&gt;&lt;code&gt;The following types can be pickled:&lt;br/&gt;&lt;br/&gt;* None, True, and False&lt;br/&gt;&lt;br/&gt;* integers, floating point numbers, complex numbers&lt;br/&gt;&lt;br/&gt;* strings, bytes, bytearrays&lt;br/&gt;&lt;br/&gt;* tuples, lists, sets, and dictionaries containing only picklable objects&lt;br/&gt;&lt;br/&gt;* &lt;span&gt;functions&lt;/span&gt; defined at the top level of a module (using def, not lambda)&lt;br/&gt;&lt;br/&gt;* built-in &lt;span&gt;functions&lt;/span&gt; defined at the top level of a module&lt;br/&gt;&lt;br/&gt;* classes that are defined at the top level of a module&lt;br/&gt;&lt;br/&gt;* instances of such classes whose __dict__ or the result of calling __getstate__() is picklable (see section Pickling Class Instances &lt;span&gt;for&lt;/span&gt; details).&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;配置类的简化&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;Object&lt;/code&gt;提供了一种快速构建对象的方法:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class Object:&lt;br/&gt;    &lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;&quot;Common base class.&lt;br/&gt;&lt;br/&gt;    Supports automatic kwargs-&amp;gt;attributes handling, and cloning.&lt;br/&gt;    &quot;&lt;/span&gt;&lt;span&gt;&quot;&quot;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;    attrs = ()&lt;br/&gt;&lt;br/&gt;    def __init__(self, *args, **kwargs):&lt;br/&gt;        &lt;span&gt;# attrs 在子类中定义&lt;/span&gt;&lt;br/&gt;        &lt;span&gt;for&lt;/span&gt; name, type_ &lt;span&gt;in&lt;/span&gt; self.attrs:&lt;br/&gt;            value = kwargs.get(name)&lt;br/&gt;            &lt;span&gt;# 从字典参数给属性动态赋值&lt;/span&gt;&lt;br/&gt;            &lt;span&gt;if&lt;/span&gt; value is not None:&lt;br/&gt;                setattr(self, name, (type_ or _any)(value))&lt;br/&gt;            &lt;span&gt;else&lt;/span&gt;:&lt;br/&gt;                try:&lt;br/&gt;                    getattr(self, name)&lt;br/&gt;                except AttributeError:&lt;br/&gt;                    setattr(self, name, None)&lt;br/&gt;&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;Queue展示了这种方式的示例，比如max_length属性:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;class Queue(MaybeChannelBound):&lt;br/&gt;    attrs = (&lt;br/&gt;        ..&lt;br/&gt;        (&lt;span&gt;&#x27;max_length&#x27;&lt;/span&gt;, int),&lt;br/&gt;        ...&lt;br/&gt;    )&lt;br/&gt;    def __init__(self, name=&lt;span&gt;&#x27;&#x27;&lt;/span&gt;, exchange=None, routing_key=&lt;span&gt;&#x27;&#x27;&lt;/span&gt;,&lt;br/&gt;                 channel=None, bindings=None, on_declared=None,&lt;br/&gt;                 **kwargs):&lt;br/&gt;        self.name = name or self.name&lt;br/&gt;        ...&lt;br/&gt;    &lt;br/&gt;    def queue_declare(self, nowait=False, passive=False, channel=None):&lt;br/&gt;        ...&lt;br/&gt;        queue_arguments = channel.prepare_queue_arguments(&lt;br/&gt;            self.queue_arguments or {},&lt;br/&gt;            expires=self.expires,&lt;br/&gt;            message_ttl=self.message_ttl,&lt;br/&gt;            max_length=self.max_length,&lt;br/&gt;            max_length_bytes=self.max_length_bytes,&lt;br/&gt;            max_priority=self.max_priority,&lt;br/&gt;        )&lt;br/&gt;        ...&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;在Queue的构造函数中并没有定义max_length属性，但是queue_declare中却可以直接使用这个属性，可以对比name属性感受一下差异。这对我们简化定义属性很多的对象有帮助，比如一些配置类。&lt;/p&gt;&lt;h3 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;使用count提供自增ID&lt;span/&gt;&lt;/h3&gt;&lt;p data-tool=&quot;mdnice编辑器&quot;&gt;&lt;code&gt;itertools.count&lt;/code&gt;提供了一种通过迭代器生成递增ID的方法:&lt;/p&gt;&lt;pre data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from itertools import count&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br/&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span&gt;for&lt;/span&gt; i &lt;span&gt;in&lt;/span&gt; count():&lt;br/&gt;...     &lt;span&gt;if&lt;/span&gt; i % 10 == 0:&lt;br/&gt;...             &lt;span&gt;print&lt;/span&gt;(i)&lt;br/&gt;...     &lt;span&gt;if&lt;/span&gt; i&amp;gt;50:&lt;br/&gt;...             &lt;span&gt;break&lt;/span&gt;&lt;br/&gt;...&lt;br/&gt;0&lt;br/&gt;10&lt;br/&gt;20&lt;br/&gt;30&lt;br/&gt;40&lt;br/&gt;50&lt;br/&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 data-tool=&quot;mdnice编辑器&quot;&gt;&lt;span/&gt;参考链接&lt;/h2&gt;&lt;ul data-tool=&quot;mdnice编辑器&quot; class=&quot;list-paddingleft-2&quot;&gt;&lt;li&gt;&lt;section&gt;https://github.com/celery/kombu&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;Talking to RabbitMQ with Python and Kombu https://medium.com/python-pandemonium/talking-to-rabbitmq-with-python-and-kombu-6cbee93b1298&lt;/section&gt;&lt;/li&gt;&lt;li&gt;&lt;section&gt;一篇文章讲透彻了AMQP协议 https://jishuin.proginn.com/p/763bfbd2a068&lt;/section&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
<item>
<guid>7a80e3a5fdcb9b7cfa77a8fb807772fe</guid>
<title>YouTube 故事中的视听语音增强</title>
<link>https://toutiao.io/k/0ew2e9e</link>
<content:encoded>&lt;div&gt;&lt;div&gt;&lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    
                    
                    
                    &lt;ul class=&quot;list-paddingleft-2&quot;&gt;&lt;p&gt;尽管在提高智能手机摄像头拍摄的视频质量方面投入了大量精力，但视频中的音频质量往往被忽视。例如，视频中有多人说话或背景噪音高的主题的语音可能会混乱、失真或难以理解。为了解决这个问题，两年前我们推出了Look to Listen，这是一种机器学习 (ML) 技术，它使用视觉和音频提示来隔离视频主题的语音。通过在大量在线视频上训练模型，我们能够捕获语音和视觉信号（例如嘴巴运动和面部表情）之间的相关性，然后可用于将视频中的一个人的语音与另一个人的语音分开，或将语音与背景声音分开。我们展示了这项技术不仅在语音分离和增强方面取得了最先进的结果（比纯音频模型显着提高了 1.5dB），而且特别是当有多个音频模型时，可以改善纯音频处理的结果。人们在说话，因为视频中的视觉提示有助于确定谁在说什么。&lt;/p&gt;&lt;p&gt;现在，我们很高兴通过YouTube Stories（iOS 版）中的新视听语音增强功能向用户提供 Look to Listen 技术，让创作者可以通过自动增强声音和减少背景噪音来拍摄更好的自拍视频。将这项技术交到用户手中并非易事。在过去的一年里，我们与用户密切合作，了解他们希望如何使用这样的功能，在什么场景下，以及他们希望在他们的视频中拥有什么样的语音和背景声音的平衡。我们高度优化的展望聆听模式，使其在移动设备上高效运行，整体减少了运行时间从10 X实时在桌面上时，我们的纸出来了，0.5 X手机上的实时性能。我们还对该技术进行了广泛的测试，以验证它在不同的录音条件下以及对于不同外表和声音的人的表现是否一致。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;从研究到产品&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;优化寻找聆听以在移动设备上实现快速而稳健的操作要求我们克服许多挑战。首先，所有处理都需要在客户端应用程序中在设备上完成，以最大限度地减少处理时间并保护用户的隐私；不会将音频或视频信息发送到服务器进行处理。此外，除了消耗资源的视频录制本身之外，该模型还需要与YouTube 应用中使用的其他 ML 算法共存。最后，算法需要在设备上快速高效地运行，同时最大限度地减少电池消耗。&lt;/p&gt;&lt;p&gt;“寻找聆听”管道的第一步是从视频流中分离出包含说话者面部的缩略图。通过利用MediaPipe BlazeFace和 GPU 加速推理，现在可以在几毫秒内执行此步骤。然后，我们将单独处理每个缩略图的模型部分切换到重量更轻的MobileNet（v2) 架构，输出为语音增强目的学习的视觉特征，以每帧 10 毫秒从人脸缩略图中提取。由于嵌入视觉特征的计算时间很短，因此可以在视频仍在录制时完成。这避免了将帧保留在内存中以供进一步处理的需要，从而减少整体内存占用。然后，在视频完成录制后，将音频和计算出的视觉特征流式传输到视听语音分离模型，该模型生成隔离和增强的语音。&lt;/p&gt;&lt;p&gt;我们通过用更少的过滤器用可分离的卷积（频率维度中的 1D，然后是时间维度中的 1D）替换“常规”2D 卷积来减少视听模型中的参数总数。然后，我们使用TensorFlow Lite进一步优化了模型——一组工具，可以在移动设备上以低延迟和小二进制大小运行 TensorFlow 模型。最后，我们在Learn2Compress框架内重新实现了模型，以利用内置的量化训练和QRNN支持。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000431&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceEI3mjGZtcMpIcoJlLYNx0xwyZSSIjYKiaA8U2Wd5icxILvzB2XPnASx0jkmIticffSWOwoj8KsUlpwQ/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;这些优化和改进从10减少的运行时间X使用的原始制剂实时桌面上寻找到听，至0.5 X实时性能仅使用iPhone CPU; 并将模型大小从 120MB 减小到现在的 6MB，这使得部署更加容易。由于 YouTube Stories 视频很短（限制为 15 秒），因此在录制完成后的几秒钟内即可获得视频处理的结果。&lt;/p&gt;&lt;p&gt;最后，为了避免处理带有干净语音的视频（以避免不必要的计算），我们首先仅在视频的前两秒运行我们的模型，然后将语音增强输出与原始输入音频进行比较。如果有足够的差异（意味着模型清理了语音），那么我们会在视频的其余部分增强语音。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;研究用户需求&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;Look to Listen 的早期版本旨在将语音与背景噪音完全隔离。在与 YouTube 一起进行的一项用户研究中，我们发现用户更喜欢保留一些背景声音以提供上下文并保留一些场景的一般氛围。基于此用户研究，我们采用原始音频和我们生成的干净语音通道的线性组合：output_audio = 0.1 x original_audio + 0.9 x 语音。下面的视频展示了干净的语音结合场景中不同级别的背景声音（10% 的背景是我们在实践中使用的平衡）。&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;公平性分析&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;另一个重要的要求是模型要公平和包容。它必须能够处理不同类型的声音、语言和口音，以及不同的视觉外观。为此，我们进行了一系列测试，探索模型在各种视觉和语音/听觉属性方面的性能：说话者的年龄、肤色、口语、语音音调、说话者面部的可见性（视频的百分比）演讲者在画面中）、整个视频中的头部姿势、面部毛发、眼镜的存在以及（输入）视频中的背景噪音水平。&lt;/p&gt;&lt;p&gt;对于上述每个视觉/听觉属性，我们在评估集（与训练集分开）的片段上运行我们的模型，并测量语音增强准确性，根据不同的属性值进行细分。一些属性的结果总结在下面的图中。图中的每个数据点代表符合标准的数百个（在大多数情况下为数千个）视频。&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000428&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceEI3mjGZtcMpIcoJlLYNx0xt0km1dNXvCiaya1iaiaguHo1HT8cYZtrn5uCL4LeUOrrRxUdVlXShbQbw/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000430&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceEI3mjGZtcMpIcoJlLYNx0xTstN6sqfmzHJsjXHwA8XdXJQGIeoNA6sow29EiafjGiaWq7IpWqbnTBA/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-fileid=&quot;100000429&quot; data-src=&quot;https://mmbiz.qpic.cn/mmbiz_png/eG1jA7faiceEI3mjGZtcMpIcoJlLYNx0xW8QNQicgA7aALfTfX2XhjrGCCUXBjWq8Kqz1Bib9Z1gx8OJEAstxPOsg/640?wx_fmt=png&quot; data-type=&quot;png&quot;/&gt;&lt;/p&gt;&lt;h2&gt;&lt;span&gt;&lt;em&gt;使用 Feature&lt;/em&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;有资格创建 YouTube Stories 的 YouTube 创作者可以在 iOS 上录制视频，然后从音量控制编辑工具中选择“增强演讲”。这将立即将语音增强应用于音轨，并将循环播放增强的语音。然后可以多次打开和关闭该功能，以将增强后的语音与原始音频进行比较。&lt;/p&gt;&lt;p&gt;在 YouTube 上推出这项新功能的同时，我们也在探索该技术的其他场所。今年晚些时候将推出更多内容——敬请期待！&lt;/p&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
                &lt;/div&gt;

                

                



                
                &lt;/div&gt;&lt;/div&gt;</content:encoded>
</item>
</channel></rss>